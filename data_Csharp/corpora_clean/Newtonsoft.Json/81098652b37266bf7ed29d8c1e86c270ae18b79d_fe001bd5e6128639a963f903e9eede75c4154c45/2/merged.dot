digraph  {
n104 [label="Newtonsoft.Json.Serialization.JsonArrayContract", span=""];
n0 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="92-92", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n1 [label="ContractType = JsonContractType.Array", span="95-95", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n11 [label="typeof(IList).IsAssignableFrom(underlyingType)", span="110-110", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n12 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n14 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(underlyingType)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n15 [label="underlyingType == typeof(IList)", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n18 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="121-121", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n19 [label="IsReadOnlyOrFixedSize = ReflectionUtils.InheritsGenericDefinition(underlyingType, typeof(ReadOnlyCollection<>))", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n21 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="126-126", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n23 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(ICollection<>))\r\n                    || ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IList<>))", span="130-131", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n25 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(ISet<>))", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", color=red, community=0];
n27 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="139-139", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n30 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IReadOnlyCollection<>), out tempCollectionType)", span="144-144", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n32 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IReadOnlyCollection<>))\r\n                    || ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IReadOnlyList<>))", span="148-149", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n38 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IEnumerable<>), out tempCollectionType)", span="158-158", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n42 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n43 [label="!HasParametrizedCreator && underlyingType.Name == FSharpUtils.FSharpListTypeName", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n44 [label="FSharpUtils.EnsureInitialized(underlyingType.Assembly())", span="170-170", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n46 [label="underlyingType.IsGenericType() && underlyingType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="175-175", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n60 [label="ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(underlyingType, CollectionItemType, out immutableCreatedType, out immutableParameterizedCreator)", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n2 [label="IsArray = CreatedType.IsArray", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n3 [label="bool canDeserialize", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n4 [label="Type tempCollectionType", span="100-100", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n5 [label=IsArray, span="101-101", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n6 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="103-103", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n7 [label="IsReadOnlyOrFixedSize = true", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n66 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="360-360", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)"];
n8 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n9 [label="canDeserialize = true", span="107-107", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n67 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
n10 [label="IsMultidimensionalArray = (IsArray && UnderlyingType.GetArrayRank() > 1)", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n57 [label="CanDeserialize = canDeserialize", span="199-199", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n69 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n13 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="113-113", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n70 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="276-276", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)"];
n71 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()"];
n16 [label="CreatedType = typeof(List<object>)", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n17 [label="CollectionItemType != null", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n72 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="104-104", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)"];
n20 [label="canDeserialize = true", span="124-124", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n73 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="316-316", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)"];
n22 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n24 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="132-132", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n74 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)"];
n26 [label="CreatedType = typeof(HashSet<>).MakeGenericType(CollectionItemType)", span="136-136", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n28 [label="canDeserialize = true", span="140-140", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n29 [label="ShouldCreateWrapper = true", span="141-141", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n31 [label="CollectionItemType = tempCollectionType.GetGenericArguments()[0]", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n33 [label="CreatedType = typeof(ReadOnlyCollection<>).MakeGenericType(CollectionItemType)", span="150-150", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n34 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n35 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(CreatedType, CollectionItemType)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n36 [label="IsReadOnlyOrFixedSize = true", span="154-154", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n37 [label="canDeserialize = HasParametrizedCreator", span="155-155", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n39 [label="CollectionItemType = tempCollectionType.GetGenericArguments()[0]", span="160-160", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n55 [label="canDeserialize = false", span="195-195", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n47 [label="_genericCollectionDefinitionType = tempCollectionType", span="177-177", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n40 [label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IEnumerable<>))", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n41 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n45 [label="_parametrizedCreator = FSharpUtils.CreateSeq(CollectionItemType)", span="171-171", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n75 [label="Entry System.Type.Assembly()", span="160-160", cluster="System.Type.Assembly()"];
n76 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="78-78", cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)"];
n77 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", span="142-142", cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)"];
n51 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="185-185", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n78 [label="Entry System.Type.IsGenericType()", span="133-133", cluster="System.Type.IsGenericType()"];
n79 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()"];
n48 [label="IsReadOnlyOrFixedSize = false", span="179-179", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n49 [label="ShouldCreateWrapper = false", span="180-180", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n50 [label="canDeserialize = true", span="181-181", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n52 [label="IsReadOnlyOrFixedSize = true", span="187-187", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n53 [label="ShouldCreateWrapper = true", span="188-188", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n54 [label="canDeserialize = HasParametrizedCreator", span="189-189", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n56 [label="ShouldCreateWrapper = true", span="196-196", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n68 [label="Entry System.Type.GetArrayRank()", span="0-0", cluster="System.Type.GetArrayRank()"];
n58 [label="Type immutableCreatedType", span="215-215", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n59 [label="ObjectConstructor<object> immutableParameterizedCreator", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n61 [label="CreatedType = immutableCreatedType", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n65 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="92-92", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n80 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)", span="104-104", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)"];
n62 [label="_parametrizedCreator = immutableParameterizedCreator", span="220-220", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n63 [label="IsReadOnlyOrFixedSize = true", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n64 [label="CanDeserialize = true", span="222-222", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n81 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n82 [label="_genericWrapperCreator == null", span="229-229", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n90 [label="return (IWrappedCollection)_genericWrapperCreator(list);", span="245-245", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n83 [label="_genericWrapperType = typeof(CollectionWrapper<>).MakeGenericType(CollectionItemType)", span="231-231", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n84 [label="Type constructorArgument", span="233-233", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n85 [label="ReflectionUtils.InheritsGenericDefinition(_genericCollectionDefinitionType, typeof(List<>))\r\n                    || _genericCollectionDefinitionType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="235-236", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n86 [label="constructorArgument = typeof(ICollection<>).MakeGenericType(CollectionItemType)", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n87 [label="constructorArgument = _genericCollectionDefinitionType", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n88 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { constructorArgument })", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n89 [label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParametrizedConstructor(genericWrapperConstructor)", span="242-242", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n92 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])"];
n93 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)", span="65-65", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)"];
n91 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n94 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])"];
n95 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="248-248", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n96 [label="_genericTemporaryCollectionCreator == null", span="250-250", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n97 [label="Type collectionItemType = (IsMultidimensionalArray) ? typeof(object) : CollectionItemType", span="253-253", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n100 [label="return (IList)_genericTemporaryCollectionCreator();", span="258-258", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n98 [label="Type temporaryListType = typeof(List<>).MakeGenericType(collectionItemType)", span="254-254", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n99 [label="_genericTemporaryCollectionCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryListType)", span="255-255", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n102 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)"];
n101 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="248-248", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n103 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
d30 [label="Type genericConstructorArgument = typeof(IList<>).MakeGenericType(collectionItemType)", span="116-116", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", color=green, community=0];
d29 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="114-114", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)"];
d34 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="121-121", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d31 [label="return ResolveEnumerableCollectionConstructor(collectionType, collectionItemType, genericConstructorArgument);", span="118-118", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", color=green, community=0];
d33 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
d32 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="114-114", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)"];
d44 [label="parameterType.IsAssignableFrom(constructorArgumentType)", span="144-144", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", color=green, community=0];
d43 [label="match == null", span="142-142", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d40 [label="Type parameterType = parameters[0].ParameterType", span="132-132", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", color=green, community=0];
d45 [label="match = constructor", span="146-146", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d37 [label="collectionType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="126-126", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d27 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
d41 [label="genericEnumerable == parameterType", span="134-134", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", color=green, community=0];
d35 [label="Type genericEnumerable = typeof(IEnumerable<>).MakeGenericType(collectionItemType)", span="123-123", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d42 [label="match = constructor", span="137-137", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d38 [label="IList<ParameterInfo> parameters = constructor.GetParameters()", span="128-128", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d39 [label="parameters.Count == 1", span="130-130", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d47 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="121-121", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d36 [label="ConstructorInfo match = null", span="124-124", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d46 [label="return match;", span="152-152", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
d48 [label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)"];
d18 [label="typeof(IDictionary).IsAssignableFrom(type)", span="96-96", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d49 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()"];
d16 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d17 [label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="94-94", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d19 [label="return true;", span="98-98", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d20 [label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IDictionary<,>))", span="100-100", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d25 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="92-92", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d22 [label="ReflectionUtils.ImplementsGenericDefinition(type, typeof(IReadOnlyDictionary<,>))", span="105-105", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d3 [label="return true;", span="56-56", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)"];
d24 [label="return false;", span="111-111", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d14 [label="Entry Unk.nameof", span="", cluster="Unk.nameof"];
d26 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)"];
d21 [label="return true;", span="102-102", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d28 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)"];
d23 [label="return true;", span="107-107", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
d0 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)"];
d1 [label="collection != null", span="52-52", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)"];
d53 [label="Entry System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160", cluster="System.Collections.Generic.IList<T>.AddDistinct<T>(T, System.Collections.Generic.IEqualityComparer<T>)"];
d60 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172", cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d73 [label="bool allAdded = true", span="197-197", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)"];
d88 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", span="225-225", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d4 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)"];
d7 [label="throw new ArgumentNullException(nameof(initial));", span="68-68", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d65 [label="throw new ArgumentNullException(nameof(source));", span="181-181", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d2 [label="return (collection.Count == 0);", span="54-54", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)"];
d50 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="155-155", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)"];
d51 [label="return list.AddDistinct(value, EqualityComparer<T>.Default);", span="157-157", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)"];
d75 [label="!list.AddDistinct(value, comparer)", span="200-200", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)"];
d74 [label=values, span="198-198", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)"];
d72 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="195-195", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)"];
d55 [label="list.ContainsValue(value, comparer)", span="162-162", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)"];
d77 [label="return allAdded;", span="206-206", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)"];
d95 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)", span="225-225", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d89 [label="int i = 0", span="227-227", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d90 [label="i < list.Count", span="227-227", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d91 [label="comparer.Equals(value, list[i])", span="229-229", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d5 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d6 [label="initial == null", span="66-66", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d12 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)", span="64-64", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d61 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d64 [label="source == null", span="179-179", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d70 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="172-172", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d52 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)", span="155-155", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T)"];
d76 [label="allAdded = false", span="202-202", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)"];
d78 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="195-195", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRangeDistinct<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)"];
d54 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)"];
d56 [label="return false;", span="164-164", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)"];
d57 [label="list.Add(value)", span="167-167", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)"];
d94 [label="return false;", span="234-234", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d92 [label="return true;", span="231-231", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d93 [label="i++", span="227-227", cluster="Newtonsoft.Json.Utilities.CollectionUtils.Contains<T>(System.Collections.Generic.List<T>, T, System.Collections.IEqualityComparer)"];
d80 [label="int index = 0", span="211-211", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d96 [label="Entry System.Collections.IEqualityComparer.Equals(object, object)", span="0-0", cluster="System.Collections.IEqualityComparer.Equals(object, object)"];
d8 [label="collection == null", span="71-71", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d10 [label=collection, span="76-76", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d11 [label="initial.Add(value)", span="78-78", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d9 [label="return;", span="73-73", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)"];
d62 [label="comparer == null", span="174-174", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d66 [label=source, span="184-184", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d67 [label="comparer.Equals(local, value)", span="186-186", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d63 [label="comparer = EqualityComparer<TSource>.Default", span="176-176", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d69 [label="return false;", span="192-192", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d68 [label="return true;", span="188-188", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ContainsValue<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)"];
d59 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)", span="160-160", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)"];
d58 [label="return true;", span="168-168", cluster="Newtonsoft.Json.Utilities.CollectionUtils.AddDistinct<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)"];
d15 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
d79 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="209-209", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d98 [label="int i = 0", span="239-239", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d135 [label="i < multidimensionalArray.GetLength(dimension)", span="306-306", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d131 [label="i < dimension", span="301-301", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d146 [label="i < indices.Length", span="316-316", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d81 [label=collection, span="212-212", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d83 [label="return index;", span="216-216", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d84 [label="index++", span="219-219", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d71 [label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0", cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)"];
d110 [label="dimensions.Add(currentArray.Count)", span="256-256", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d157 [label="dimensions.Add(0)", span="337-337", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d86 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)", span="209-209", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d82 [label="predicate(value)", span="214-214", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d85 [label="return -1;", span="222-222", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>)"];
d97 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", span="237-237", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d99 [label="i < list.Count", span="239-239", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d100 [label="ReferenceEquals(item, list[i])", span="241-241", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d101 [label="return i;", span="243-243", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d102 [label="i++", span="239-239", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d119 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="283-283", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d120 [label="int dimension = indices.Length", span="285-285", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d134 [label="int i = 0", span="306-306", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d138 [label="i++", span="306-306", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d136 [label="newIndices[dimension] = i", span="308-308", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d139 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])", span="283-283", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d142 [label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)"];
d130 [label="int i = 0", span="301-301", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d133 [label="i++", span="301-301", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d132 [label="newIndices[i] = indices[i]", span="303-303", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d140 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="313-313", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d145 [label="int i = 0", span="316-316", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d151 [label="i++", span="316-316", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d147 [label="int index = indices[i]", span="318-318", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d152 [label="return currentList;", span="328-328", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d107 [label="IList<int> dimensions = new List<int>()", span="251-251", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d108 [label="IList currentArray = values", span="253-253", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d109 [label=true, span="254-254", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d111 [label="dimensions.Count == dimensionsCount", span="259-259", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d155 [label="IList<int> dimensions = GetDimensions(values, rank)", span="333-333", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d156 [label="dimensions.Count < rank", span="335-335", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d87 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
d104 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)", span="237-237", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d103 [label="return -1;", span="246-246", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IndexOfReference<T>(System.Collections.Generic.List<T>, T)"];
d105 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)"];
d137 [label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, newIndices)", span="309-309", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d159 [label="CopyFromJaggedToMultidimensionalArray(values, multidimensionalArray, new int[0])", span="341-341", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d121 [label="dimension == multidimensionalArray.Rank", span="286-286", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d122 [label="multidimensionalArray.SetValue(JaggedArrayGetValue(values, indices), indices)", span="288-288", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d124 [label="int dimensionLength = multidimensionalArray.GetLength(dimension)", span="292-292", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d125 [label="IList list = (IList)JaggedArrayGetValue(values, indices)", span="293-293", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d154 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="331-331", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d158 [label="Array multidimensionalArray = Array.CreateInstance(type, dimensions.ToArray())", span="340-340", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d129 [label="int[] newIndices = new int[dimension + 1]", span="300-300", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d123 [label="return;", span="289-289", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d128 [label="throw new Exception(''Cannot deserialize non-cubical array as multidimensional array.'');", span="297-297", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d144 [label="IList currentList = values", span="315-315", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d153 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])", span="313-313", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d148 [label="i == indices.Length - 1", span="319-319", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d150 [label="currentList = (IList)currentList[index]", span="325-325", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d149 [label="return currentList[index];", span="321-321", cluster="Newtonsoft.Json.Utilities.CollectionUtils.JaggedArrayGetValue(System.Collections.IList, int[])"];
d106 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", span="249-249", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d118 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d116 [label="return dimensions;", span="280-280", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d112 [label="currentArray.Count == 0", span="264-264", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d113 [label="object v = currentArray[0]", span="269-269", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d115 [label="currentArray = (IList)v", span="272-272", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d160 [label="return multidimensionalArray;", span="343-343", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d141 [label="Entry System.Array.SetValue(object, params int[])", span="0-0", cluster="System.Array.SetValue(object, params int[])"];
d127 [label="currentValuesLength != dimensionLength", span="295-295", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d126 [label="int currentValuesLength = list.Count", span="294-294", cluster="Newtonsoft.Json.Utilities.CollectionUtils.CopyFromJaggedToMultidimensionalArray(System.Collections.IList, System.Array, int[])"];
d161 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="331-331", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)"];
d162 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
d163 [label="Entry System.Array.CreateInstance(System.Type, params int[])", span="0-0", cluster="System.Array.CreateInstance(System.Type, params int[])"];
d143 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
d117 [label="Exit Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)", span="249-249", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
d114 [label="v is IList", span="270-270", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetDimensions(System.Collections.IList, int)"];
m0_279 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedCharacterAsync()", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_280 [label="string json = ''new Date !''", span="367-367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_281 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_282 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="370-370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_283 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedCharacterAsync()", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_39 [label="Entry Unk.ReadAsBooleanAsync", span="", cluster="Unk.ReadAsBooleanAsync", file="JsonDictionaryContract.cs"];
m0_522 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BooleanAsync()", span="708-708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_523 [label="string json = @''true''", span="710-710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_524 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="712-712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_525 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDoubleAsync(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="714-714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_526 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BooleanAsync()", span="708-708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_708 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", span="956-956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_709 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_710 [label="await reader.ReadAsync()", span="959-959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_711 [label="await reader.ReadAsInt32Async()", span="960-960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_712 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsStringAsync();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="962-965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_713 [label="Assert.AreEqual(string.Empty, await reader.ReadAsStringAsync())", span="967-967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_714 [label="Assert.IsTrue(await reader.ReadAsync())", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_715 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", span="956-956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_46 [label="Assert.IsTrue(await reader.ReadAsync())", span="102-102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_47 [label="Assert.AreEqual(new DateTime(2017, 2, 4, 0, 0, 0, DateTimeKind.Utc), (DateTime)await reader.ReadAsDateTimeAsync())", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_48 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(\r\n                () => reader.ReadAsDateTimeAsync(),\r\n                ''After parsing a value an unexpected character was encountered: '. Path '[0]', line 1, position 24.'')", span="105-107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_49 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_MissingCommaAsync()", span="97-97", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_50 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonDictionaryContract.cs"];
m0_51 [label="Entry Unk.ReadAsDateTimeAsync", span="", cluster="Unk.ReadAsDateTimeAsync", file="JsonDictionaryContract.cs"];
m0_52 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", span="53-53", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_20 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", span="69-69", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", color=green, community=1, file="JsonDictionaryContract.cs"];
m0_5 [label="CollectionAssert.AreEquivalent(data, await reader.ReadAsBytesAsync())", span="61-61", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_6 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(\r\n                () => reader.ReadAsBytesAsync(),\r\n                ''After parsing a value an unexpected character was encountered: '. Path '[0]', line 1, position 20.'')", span="63-65", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_19 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_11 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonDictionaryContract.cs"];
m0_16 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonDictionaryContract.cs"];
m0_12 [label="Entry Unk.ReadAsync", span="", cluster="Unk.ReadAsync", file="JsonDictionaryContract.cs"];
m0_21 [label="string json = ''[0 1 2]''", span="71-71", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_1 [label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="55-55", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_4 [label="Assert.IsTrue(await reader.ReadAsync())", span="60-60", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_7 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", span="53-53", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_8 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonDictionaryContract.cs"];
m0_9 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JsonDictionaryContract.cs"];
m0_10 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonDictionaryContract.cs"];
m0_13 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonDictionaryContract.cs"];
m0_14 [label="Entry Unk.ReadAsBytesAsync", span="", cluster="Unk.ReadAsBytesAsync", file="JsonDictionaryContract.cs"];
m0_15 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonDictionaryContract.cs"];
m0_17 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_18 [label="reader.ReadAsBytesAsync()", span="64-64", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_23 [label="Assert.IsTrue(await reader.ReadAsync())", span="74-74", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_24 [label="Assert.AreEqual(0, (int)await reader.ReadAsInt32Async())", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_25 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(\r\n                () => reader.ReadAsInt32Async(),\r\n                ''After parsing a value an unexpected character was encountered: 1. Path '[0]', line 1, position 3.'')", span="77-79", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_26 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", span="69-69", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_29 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_30 [label="reader.ReadAsInt32Async()", span="78-78", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_31 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_32 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_MissingCommaAsync()", span="83-83", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_22 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="72-72", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsInt32_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_2 [label="string json = @''[''' + Convert.ToBase64String(data) + ''' ''' + Convert.ToBase64String(data) + @''']''", span="57-57", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_3 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="58-58", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_27 [label="Entry Unk.ReadAsInt32Async", span="", cluster="Unk.ReadAsInt32Async", file="JsonDictionaryContract.cs"];
m0_28 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonDictionaryContract.cs"];
m0_33 [label="string json = ''[true false true]''", span="85-85", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_43 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", span="165-165", cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", file="JsonDictionaryContract.cs"];
m0_44 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonDictionaryContract.cs"];
m0_45 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)", span="136-136", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)", file="JsonDictionaryContract.cs"];
m0_35 [label="Assert.IsTrue(await reader.ReadAsync())", span="88-88", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_174 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_175 [label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="252-252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_176 [label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="253-253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_178 [label="toggleReaderError.Error = true", span="257-257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_181 [label="toggleReaderError.Error = false", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_184 [label="toggleReaderError.Error = true", span="267-267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_186 [label="toggleReaderError.Error = false", span="271-271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_189 [label="toggleReaderError.Error = true", span="276-276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_193 [label="toggleReaderError.Error = false", span="282-282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_177 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_179 [label="await ExceptionAssert.ThrowsAsync<Exception>(async () => await jsonTextReader.ReadAsync(), ''Read error'')", span="259-259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_180 [label="await ExceptionAssert.ThrowsAsync<Exception>(async () => await jsonTextReader.ReadAsync(), ''Read error'')", span="260-260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_182 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="264-264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_183 [label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="265-265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_185 [label="await ExceptionAssert.ThrowsAsync<Exception>(async () => await jsonTextReader.ReadAsync(), ''Read error'')", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_187 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="273-273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_188 [label="Assert.AreEqual(1L, jsonTextReader.Value)", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_190 [label="await ExceptionAssert.ThrowsAsync<Exception>(async () => await jsonTextReader.ReadAsync(), ''Read error'')", span="278-278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_191 [label="await ExceptionAssert.ThrowsAsync<Exception>(async () => await jsonTextReader.ReadAsync(), ''Read error'')", span="279-279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_192 [label="await ExceptionAssert.ThrowsAsync<Exception>(async () => await jsonTextReader.ReadAsync(), ''Read error'')", span="280-280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_194 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ResetJsonTextReaderErrorCountAsync()", file="JsonDictionaryContract.cs"];
m0_569 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_InvalidEndArrayAsync()", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_570 [label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="769-769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_571 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsBytesAsync();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="771-774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_572 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_InvalidEndArrayAsync()", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_744 [label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonDictionaryContract.cs"];
m0_88 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNAsync()", span="155-155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNAsync()", file="JsonDictionaryContract.cs"];
m0_89 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''n''))", span="157-157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNAsync()", file="JsonDictionaryContract.cs"];
m0_90 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await reader.ReadAsync(), ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="158-158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNAsync()", file="JsonDictionaryContract.cs"];
m0_91 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNAsync()", span="155-155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNAsync()", file="JsonDictionaryContract.cs"];
m0_404 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", span="555-555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_405 [label="long i = int.MaxValue", span="557-557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_406 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="559-559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_411 [label="long total = j + i", span="565-565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_407 [label="await reader.ReadAsync()", span="560-560", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_408 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="561-561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_412 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    await reader.ReadAsInt32Async();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="566-570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_409 [label="int j = 1", span="563-563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_410 [label="j < 1000", span="563-563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_413 [label="j++", span="563-563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_414 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", span="555-555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_538 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesIntegerArrayWithNoEndAsync()", span="728-728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesIntegerArrayWithNoEndAsync()", file="JsonDictionaryContract.cs"];
m0_539 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="730-730", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesIntegerArrayWithNoEndAsync()", file="JsonDictionaryContract.cs"];
m0_540 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="732-732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesIntegerArrayWithNoEndAsync()", file="JsonDictionaryContract.cs"];
m0_541 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesIntegerArrayWithNoEndAsync()", span="728-728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesIntegerArrayWithNoEndAsync()", file="JsonDictionaryContract.cs"];
m0_34 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonDictionaryContract.cs"];
m0_36 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonDictionaryContract.cs"];
m0_37 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonDictionaryContract.cs"];
m0_38 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonDictionaryContract.cs"];
m0_513 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BadDataAsync()", span="698-698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_514 [label="string json = @''pie''", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_515 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="702-702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_516 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDoubleAsync(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="704-704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_517 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BadDataAsync()", span="698-698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDouble_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_743 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonDictionaryContract.cs"];
m0_54 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_611 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BooleanAsync()", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_612 [label="string json = @''true''", span="825-825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_613 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="827-827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_614 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDateTimeAsync(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="829-829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_615 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BooleanAsync()", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BooleanAsync()", file="JsonDictionaryContract.cs"];
m0_55 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffset_MissingCommaAsync()", span="112-112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffset_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_271 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedEndAsync()", span="356-356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_272 [label="string json = ''new Dat''", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_273 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="359-359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_274 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_275 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedEndAsync()", span="356-356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_481 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_AdditionalBadDataAsync()", span="658-658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_482 [label="string json = @''falseeeee''", span="660-660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_483 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="662-662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_484 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsStringAsync(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="664-664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_485 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_AdditionalBadDataAsync()", span="658-658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_756 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", span="1033-1033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", file="JsonDictionaryContract.cs"];
m0_757 [label="string json = ''[[]]''", span="1035-1035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", file="JsonDictionaryContract.cs"];
m0_758 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="1037-1040", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", file="JsonDictionaryContract.cs"];
m0_759 [label="Assert.IsTrue(await reader.ReadAsync())", span="1042-1042", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", file="JsonDictionaryContract.cs"];
m0_760 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { Assert.IsTrue(await reader.ReadAsync()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="1044-1044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", file="JsonDictionaryContract.cs"];
m0_761 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", span="1033-1033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthAsync()", file="JsonDictionaryContract.cs"];
m0_521 [label="Entry Unk.ReadAsDoubleAsync", span="", cluster="Unk.ReadAsDoubleAsync", file="JsonDictionaryContract.cs"];
m0_295 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_296 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="395-399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_297 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="401-401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_298 [label="await reader.ReadAsync()", span="406-406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_299 [label="Assert.AreEqual(1, reader.LineNumber)", span="407-407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_300 [label="await reader.ReadAsync()", span="409-409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_301 [label="Assert.AreEqual(2, reader.LineNumber)", span="410-410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_302 [label="await reader.ReadAsync()", span="412-412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_303 [label="Assert.AreEqual(3, reader.LineNumber)", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_304 [label="await reader.ReadAsync()", span="415-415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_305 [label="Assert.AreEqual(4, reader.LineNumber)", span="416-416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_306 [label="await reader.ReadAsync()", span="418-418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_307 [label="Assert.AreEqual(5, reader.LineNumber)", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_308 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 1.'')", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_309 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_TextAsync()", file="JsonDictionaryContract.cs"];
m0_420 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", span="575-575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_421 [label="long i = int.MinValue", span="577-577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_422 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="579-579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_425 [label="Assert.AreEqual(i, reader.Value)", span="582-582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_428 [label="long total = -j + i", span="586-586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_423 [label="await reader.ReadAsync()", span="580-580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_424 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="581-581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_429 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    await reader.ReadAsInt32Async();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="587-591", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_426 [label="int j = 1", span="584-584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_427 [label="j < 1000", span="584-584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_430 [label="j++", span="584-584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_431 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", span="575-575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_165 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", file="JsonDictionaryContract.cs"];
m0_166 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="242-242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", file="JsonDictionaryContract.cs"];
m0_167 [label="Assert.IsTrue(await reader.ReadAsync())", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", file="JsonDictionaryContract.cs"];
m0_168 [label="Assert.IsTrue(await reader.ReadAsync())", span="244-244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", file="JsonDictionaryContract.cs"];
m0_169 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="246-246", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", file="JsonDictionaryContract.cs"];
m0_170 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndTokenWhenParsingOddEndTokenAsync()", file="JsonDictionaryContract.cs"];
m0_737 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ErrorReadingCommentAsync()", span="997-997", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ErrorReadingCommentAsync()", file="JsonDictionaryContract.cs"];
m0_738 [label="string json = @''/''", span="999-999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ErrorReadingCommentAsync()", file="JsonDictionaryContract.cs"];
m0_739 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1001-1001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ErrorReadingCommentAsync()", file="JsonDictionaryContract.cs"];
m0_740 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="1003-1003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ErrorReadingCommentAsync()", file="JsonDictionaryContract.cs"];
m0_741 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ErrorReadingCommentAsync()", span="997-997", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ErrorReadingCommentAsync()", file="JsonDictionaryContract.cs"];
m0_657 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_InvalidEndArrayAsync()", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_658 [label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="885-885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_659 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsInt32Async();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="887-890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_660 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_InvalidEndArrayAsync()", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_719 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", span="972-972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_720 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[56,56]''))", span="974-974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_721 [label="await reader.ReadAsync()", span="975-975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_722 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsDateTimeAsync();\r\n            }, ''Unexpected character encountered while parsing value: 5. Path '', line 1, position 2.'')", span="977-980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_723 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsDateTimeAsync();\r\n            }, ''Unexpected character encountered while parsing value: 6. Path '', line 1, position 3.'')", span="982-985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_724 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsDateTimeAsync();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 4.'')", span="987-990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_725 [label="Assert.AreEqual(56, await reader.ReadAsInt32Async())", span="992-992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_726 [label="Assert.IsTrue(await reader.ReadAsync())", span="993-993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_727 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", span="972-972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_Numbers_NotStringAsync()", file="JsonDictionaryContract.cs"];
m0_142 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", span="210-210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_143 [label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_144 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_145 [label="Assert.IsTrue(await reader.ReadAsync())", span="216-216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_146 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="217-217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_147 [label="Assert.IsTrue(await reader.ReadAsync())", span="219-219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_148 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="220-220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_149 [label="Assert.IsTrue(await reader.ReadAsync())", span="222-222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_150 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="223-223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_151 [label="Assert.IsTrue(await reader.ReadAsync())", span="225-225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_152 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="226-226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_153 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 29.'')", span="228-228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_154 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", span="210-210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ThrowErrorWhenParsingUnquoteStringThatStartsWithNEAsync()", file="JsonDictionaryContract.cs"];
m0_242 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.BadCommentStartAsync()", span="318-318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.BadCommentStartAsync()", file="JsonDictionaryContract.cs"];
m0_243 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.BadCommentStartAsync()", file="JsonDictionaryContract.cs"];
m0_244 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="322-322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.BadCommentStartAsync()", file="JsonDictionaryContract.cs"];
m0_245 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.BadCommentStartAsync()", span="318-318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.BadCommentStartAsync()", file="JsonDictionaryContract.cs"];
m0_633 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContent_SecondLineAsync()", span="851-851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContent_SecondLineAsync()", file="JsonDictionaryContract.cs"];
m0_634 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''\r\nnew Date()''))", span="853-854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContent_SecondLineAsync()", file="JsonDictionaryContract.cs"];
m0_635 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDecimalAsync(); }, ''Unexpected character encountered while parsing value: e. Path '', line 2, position 2.'')", span="856-856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContent_SecondLineAsync()", file="JsonDictionaryContract.cs"];
m0_636 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContent_SecondLineAsync()", span="851-851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContent_SecondLineAsync()", file="JsonDictionaryContract.cs"];
m0_235 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnclosedCommentAsync()", span="310-310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnclosedCommentAsync()", file="JsonDictionaryContract.cs"];
m0_236 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="312-312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnclosedCommentAsync()", file="JsonDictionaryContract.cs"];
m0_237 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnclosedCommentAsync()", file="JsonDictionaryContract.cs"];
m0_238 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnclosedCommentAsync()", span="310-310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnclosedCommentAsync()", file="JsonDictionaryContract.cs"];
m0_391 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", span="526-526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_392 [label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="528-530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_393 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="532-532", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_394 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="534-534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_395 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="535-535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_396 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="537-537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_397 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_398 [label="await jsonTextReader.ReadAsBytesAsync()", span="542-542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_400 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_401 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="549-549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_402 [label="Assert.IsFalse(await jsonTextReader.ReadAsync())", span="551-551", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_399 [label=FormatException, span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_403 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", span="526-526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_640 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32WithBadCharacterAsync()", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32WithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_641 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32WithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_642 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsInt32Async(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32WithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_643 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32WithBadCharacterAsync()", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt32WithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_576 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", span="778-778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_577 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_578 [label="await reader.ReadAsync()", span="781-781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_579 [label="CollectionAssert.AreEquivalent(new byte[0], await reader.ReadAsBytesAsync())", span="782-782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_580 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsBytesAsync();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="784-787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_581 [label="CollectionAssert.AreEquivalent(new byte[0], await reader.ReadAsBytesAsync())", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_582 [label="Assert.IsTrue(await reader.ReadAsync())", span="790-790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_583 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", span="778-778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_626 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContentAsync()", span="843-843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_627 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="845-845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_628 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDecimalAsync(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="847-847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_629 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContentAsync()", span="843-843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDecimalBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_95 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNuAsync()", span="162-162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNuAsync()", file="JsonDictionaryContract.cs"];
m0_96 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''nu''))", span="164-164", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNuAsync()", file="JsonDictionaryContract.cs"];
m0_97 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await reader.ReadAsync(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="165-165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNuAsync()", file="JsonDictionaryContract.cs"];
m0_98 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNuAsync()", span="162-162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNuAsync()", file="JsonDictionaryContract.cs"];
m0_800 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndWhenParsingUnquotedPropertyAsync()", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndWhenParsingUnquotedPropertyAsync()", file="JsonDictionaryContract.cs"];
m0_801 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1099-1099", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndWhenParsingUnquotedPropertyAsync()", file="JsonDictionaryContract.cs"];
m0_802 [label="Assert.IsTrue(await reader.ReadAsync())", span="1100-1100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndWhenParsingUnquotedPropertyAsync()", file="JsonDictionaryContract.cs"];
m0_803 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1102-1102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndWhenParsingUnquotedPropertyAsync()", file="JsonDictionaryContract.cs"];
m0_804 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndWhenParsingUnquotedPropertyAsync()", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndWhenParsingUnquotedPropertyAsync()", file="JsonDictionaryContract.cs"];
m0_74 [label="Entry Unk.ReadAsStringAsync", span="", cluster="Unk.ReadAsStringAsync", file="JsonDictionaryContract.cs"];
m0_594 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_595 [label="string helloWorld = ''Hello world!''", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_596 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="805-805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_597 [label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="807-807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_598 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="809-809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_599 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithUnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_41 [label="reader.ReadAsBooleanAsync()", span="92-92", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_436 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_437 [label="BigInteger i = new BigInteger(long.MaxValue)", span="599-599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_438 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="601-601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_443 [label="BigInteger total = i + j", span="607-607", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_439 [label="await reader.ReadAsync()", span="602-602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_440 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="603-603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_441 [label="int j = 1", span="605-605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_442 [label="j < 1000", span="605-605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_447 [label="j++", span="605-605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_444 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="609-609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_445 [label="await reader.ReadAsync()", span="610-610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_446 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_448 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64OverflowAsync()", file="JsonDictionaryContract.cs"];
m0_116 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfControlCharacterAsync()", span="184-184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfControlCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_117 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfControlCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_118 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="188-188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfControlCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_119 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfControlCharacterAsync()", span="184-184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfControlCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_497 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_BadDataAsync()", span="678-678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_498 [label="string json = @''pie''", span="680-680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_499 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="682-682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_500 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBooleanAsync(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="684-684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_501 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_BadDataAsync()", span="678-678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_362 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonDictionaryContract.cs"];
m0_228 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithNoTrailingSeparatorAsync()", span="302-302", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithNoTrailingSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_229 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="304-304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithNoTrailingSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_230 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="306-306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithNoTrailingSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_231 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithNoTrailingSeparatorAsync()", span="302-302", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithNoTrailingSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_158 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfStringAsync()", span="232-232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfStringAsync()", file="JsonDictionaryContract.cs"];
m0_159 [label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="234-234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfStringAsync()", file="JsonDictionaryContract.cs"];
m0_160 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="236-236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfStringAsync()", file="JsonDictionaryContract.cs"];
m0_161 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfStringAsync()", span="232-232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfStringAsync()", file="JsonDictionaryContract.cs"];
m0_123 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", span="192-192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_124 [label="string json = ''0aq2dun13.hod''", span="194-194", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_125 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="196-196", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_127 [label="reader = new JsonTextReader(new StringReader(json))", span="200-200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_129 [label="reader = new JsonTextReader(new StringReader(json))", span="204-204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_126 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_128 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDecimalAsync(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="202-202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_130 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsInt32Async(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="206-206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_131 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", span="192-192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInvalidNonBase10NumberAsync()", file="JsonDictionaryContract.cs"];
m0_328 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBadCharInArrayAsync()", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBadCharInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_329 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="450-450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBadCharInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_330 [label="await reader.ReadAsync()", span="452-452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBadCharInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_331 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="454-454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBadCharInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_332 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBadCharInArrayAsync()", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBadCharInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_489 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_UnexpectedEndAsync()", span="668-668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_490 [label="string json = @''tru''", span="670-670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_491 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="672-672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_492 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBooleanAsync(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="674-674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_493 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_UnexpectedEndAsync()", span="668-668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_691 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_InvalidEndArrayAsync()", span="930-930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_692 [label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="932-932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_693 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsDateTimeAsync();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="934-937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_694 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_InvalidEndArrayAsync()", span="930-930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_InvalidEndArrayAsync()", file="JsonDictionaryContract.cs"];
m0_56 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="232-232", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m0_57 [label="_genericTemporaryDictionaryCreator == null", span="234-234", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m0_58 [label="Type temporaryDictionaryType = typeof(Dictionary<,>).MakeGenericType(DictionaryKeyType ?? typeof(object), DictionaryValueType ?? typeof(object))", span="236-236", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m0_59 [label="_genericTemporaryDictionaryCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryDictionaryType)", span="238-238", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m0_60 [label="return (IDictionary)_genericTemporaryDictionaryCreator();", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m0_61 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="232-232", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m0_748 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.EscapedPathInExceptionMessageAsync()", span="1007-1007", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.EscapedPathInExceptionMessageAsync()", file="JsonDictionaryContract.cs"];
m0_749 [label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1009-1019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.EscapedPathInExceptionMessageAsync()", file="JsonDictionaryContract.cs"];
m0_750 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(\r\n                async () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (await reader.ReadAsync())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source', line 6, position 20.'')", span="1021-1029", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.EscapedPathInExceptionMessageAsync()", file="JsonDictionaryContract.cs"];
m0_751 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.EscapedPathInExceptionMessageAsync()", span="1007-1007", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.EscapedPathInExceptionMessageAsync()", file="JsonDictionaryContract.cs"];
m0_505 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_BadDataAsync()", span="688-688", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_506 [label="string json = @''pie''", span="690-690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_507 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="692-692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_508 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsStringAsync(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="694-694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_509 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_BadDataAsync()", span="688-688", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_263 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithBadCharacterAsync()", span="347-347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_264 [label="string json = ''new Date,()''", span="349-349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_265 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="350-350", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_266 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { Assert.IsTrue(await reader.ReadAsync()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="352-352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_267 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithBadCharacterAsync()", span="347-347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseConstructorWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_63 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonDictionaryContract.cs"];
m0_109 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfHexAsync()", span="176-176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfHexAsync()", file="JsonDictionaryContract.cs"];
m0_110 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="178-178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfHexAsync()", file="JsonDictionaryContract.cs"];
m0_111 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected end while parsing Unicode escape sequence. Path '', line 1, position 4.'')", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfHexAsync()", file="JsonDictionaryContract.cs"];
m0_112 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfHexAsync()", span="176-176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndOfHexAsync()", file="JsonDictionaryContract.cs"];
m0_545 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesArrayWithBadContentAsync()", span="736-736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesArrayWithBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_546 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesArrayWithBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_547 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="740-740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesArrayWithBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_548 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesArrayWithBadContentAsync()", span="736-736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesArrayWithBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_450 [label="Entry StringReader.cstr", span="", cluster="StringReader.cstr", file="JsonDictionaryContract.cs"];
m0_415 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="JsonDictionaryContract.cs"];
m0_559 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", span="752-752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_560 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_561 [label="await reader.ReadAsync()", span="755-755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_562 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsBytesAsync();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="757-760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_563 [label="CollectionAssert.AreEquivalent(new byte[0], await reader.ReadAsBytesAsync())", span="762-762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_564 [label="Assert.IsTrue(await reader.ReadAsync())", span="763-763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_565 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", span="752-752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_313 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_WhitespaceThenTextAsync()", span="425-425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_WhitespaceThenTextAsync()", file="JsonDictionaryContract.cs"];
m0_314 [label="string json = @'''hi' a''", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_WhitespaceThenTextAsync()", file="JsonDictionaryContract.cs"];
m0_315 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="429-429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_WhitespaceThenTextAsync()", file="JsonDictionaryContract.cs"];
m0_316 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                while (await reader.ReadAsync())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="431-436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_WhitespaceThenTextAsync()", file="JsonDictionaryContract.cs"];
m0_317 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_WhitespaceThenTextAsync()", span="425-425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_WhitespaceThenTextAsync()", file="JsonDictionaryContract.cs"];
m0_221 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithWrongCharactersAsync()", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithWrongCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_222 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithWrongCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_223 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Error parsing null value. Path '', line 1, position 3.'')", span="298-298", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithWrongCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_224 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithWrongCharactersAsync()", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithWrongCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_366 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", span="497-497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_367 [label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="499-504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_368 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="506-506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_369 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="508-508", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_370 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_371 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await jsonTextReader.ReadAsInt32Async(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 41.'')", span="511-511", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_372 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await jsonTextReader.ReadAsInt32Async(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 5.'')", span="513-513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_373 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await jsonTextReader.ReadAsInt32Async(), ''Unexpected character encountered while parsing value: ,. Path '[2]', line 4, position 3.'')", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_374 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await jsonTextReader.ReadAsInt32Async(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 4.'')", span="517-517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_375 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="519-519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_376 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="520-520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_377 [label="Assert.IsFalse(await jsonTextReader.ReadAsync())", span="522-522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_378 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", span="497-497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorInArrayAsync()", file="JsonDictionaryContract.cs"];
m0_451 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonDictionaryContract.cs"];
m0_78 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", span="141-141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_79 [label="string json = ''[0 1 2]''", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_80 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="144-144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_81 [label="Assert.IsTrue(await reader.ReadAsync())", span="146-146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_82 [label="Assert.IsTrue(await reader.ReadAsync())", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_83 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(\r\n                () => reader.ReadAsync(),\r\n                ''After parsing a value an unexpected character was encountered: 1. Path '[0]', line 1, position 3.'')", span="149-151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_84 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", span="141-141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.Read_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_102 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNeAsync()", span="169-169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNeAsync()", file="JsonDictionaryContract.cs"];
m0_103 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''ne''))", span="171-171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNeAsync()", file="JsonDictionaryContract.cs"];
m0_104 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await reader.ReadAsync(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="172-172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNeAsync()", file="JsonDictionaryContract.cs"];
m0_105 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNeAsync()", span="169-169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.UnexpectedEndAfterReadingNeAsync()", file="JsonDictionaryContract.cs"];
m0_53 [label="reader.ReadAsDateTimeAsync()", span="106-106", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_321 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseIncompleteCommentSeparatorAsync()", span="440-440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseIncompleteCommentSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_322 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="442-442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseIncompleteCommentSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_323 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="444-444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseIncompleteCommentSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_324 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseIncompleteCommentSeparatorAsync()", span="440-440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseIncompleteCommentSeparatorAsync()", file="JsonDictionaryContract.cs"];
m0_62 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonDictionaryContract.cs"];
m0_42 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_698 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", span="941-941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_699 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="943-943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_700 [label="await reader.ReadAsync()", span="944-944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_701 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsStringAsync();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="946-949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_702 [label="Assert.AreEqual(string.Empty, await reader.ReadAsStringAsync())", span="951-951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_703 [label="Assert.IsTrue(await reader.ReadAsync())", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_704 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", span="941-941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadStringValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_805 [label="Entry lambda expression", span="1102-1102", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_40 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_65 [label="reader.ReadAsDateTimeOffsetAsync()", span="121-121", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_64 [label="Newtonsoft.Json.Serialization.JsonDictionaryContract", span="", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_66 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_76 [label="reader.ReadAsStringAsync()", span="136-136", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_75 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_77 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_86 [label="reader.ReadAsync()", span="150-150", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_85 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_87 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_93 [label="await reader.ReadAsync()", span="158-158", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_92 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_94 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_100 [label="await reader.ReadAsync()", span="165-165", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_99 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_101 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_107 [label="await reader.ReadAsync()", span="172-172", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_106 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_108 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_114 [label="await reader.ReadAsync()", span="180-180", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_113 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_115 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_121 [label="await reader.ReadAsync()", span="188-188", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_120 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_122 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_133 [label="await reader.ReadAsync()", span="198-198", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_132 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_136 [label="await reader.ReadAsDecimalAsync()", span="202-202", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_135 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_140 [label="await reader.ReadAsInt32Async()", span="206-206", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_139 [label="Entry lambda expression", span="206-206", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_134 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_137 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_141 [label="Exit lambda expression", span="206-206", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_156 [label="await reader.ReadAsync()", span="228-228", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_155 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_157 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_163 [label="await reader.ReadAsync()", span="236-236", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_162 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_164 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_172 [label="await reader.ReadAsync()", span="246-246", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_171 [label="Entry lambda expression", span="246-246", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_173 [label="Exit lambda expression", span="246-246", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_197 [label="await jsonTextReader.ReadAsync()", span="259-259", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_200 [label="await jsonTextReader.ReadAsync()", span="260-260", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_203 [label="await jsonTextReader.ReadAsync()", span="269-269", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_206 [label="await jsonTextReader.ReadAsync()", span="278-278", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_209 [label="await jsonTextReader.ReadAsync()", span="279-279", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_212 [label="await jsonTextReader.ReadAsync()", span="280-280", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_196 [label="Entry lambda expression", span="259-259", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_199 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_202 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_205 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_208 [label="Entry lambda expression", span="279-279", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_211 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_198 [label="Exit lambda expression", span="259-259", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_201 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_204 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_207 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_210 [label="Exit lambda expression", span="279-279", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_213 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_219 [label="await reader.ReadAsync()", span="290-290", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_218 [label="Entry lambda expression", span="290-290", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_220 [label="Exit lambda expression", span="290-290", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_226 [label="await reader.ReadAsync()", span="298-298", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_225 [label="Entry lambda expression", span="298-298", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_227 [label="Exit lambda expression", span="298-298", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_233 [label="await reader.ReadAsync()", span="306-306", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_232 [label="Entry lambda expression", span="306-306", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_234 [label="Exit lambda expression", span="306-306", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_240 [label="await reader.ReadAsync()", span="314-314", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_239 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_241 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_247 [label="await reader.ReadAsync()", span="322-322", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_246 [label="Entry lambda expression", span="322-322", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_248 [label="Exit lambda expression", span="322-322", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_261 [label="await reader.ReadAsync()", span="343-343", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_260 [label="Entry lambda expression", span="343-343", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_262 [label="Exit lambda expression", span="343-343", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_269 [label="Assert.IsTrue(await reader.ReadAsync())", span="352-352", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_268 [label="Entry lambda expression", span="352-352", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_270 [label="Exit lambda expression", span="352-352", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_277 [label="await reader.ReadAsync()", span="361-361", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_276 [label="Entry lambda expression", span="361-361", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_278 [label="Exit lambda expression", span="361-361", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_285 [label="await reader.ReadAsync()", span="370-370", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_284 [label="Entry lambda expression", span="370-370", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_286 [label="Exit lambda expression", span="370-370", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_293 [label="await reader.ReadAsync()", span="386-386", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_292 [label="Entry lambda expression", span="384-389", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_294 [label="Exit lambda expression", span="384-389", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_311 [label="await reader.ReadAsync()", span="421-421", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_310 [label="Entry lambda expression", span="421-421", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_312 [label="Exit lambda expression", span="421-421", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_319 [label="await reader.ReadAsync()", span="433-433", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_318 [label="Entry lambda expression", span="431-436", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_320 [label="Exit lambda expression", span="431-436", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_326 [label="await reader.ReadAsync()", span="444-444", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_325 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_327 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_334 [label="await reader.ReadAsync()", span="454-454", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_333 [label="Entry lambda expression", span="454-454", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_335 [label="Exit lambda expression", span="454-454", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_341 [label="await reader.ReadAsBytesAsync()", span="462-462", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_340 [label="Entry lambda expression", span="462-462", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_342 [label="Exit lambda expression", span="462-462", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_348 [label="await reader.ReadAsBytesAsync()", span="470-470", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_347 [label="Entry lambda expression", span="470-470", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_349 [label="Exit lambda expression", span="470-470", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_364 [label="await jsonTextReader.ReadAsInt32Async()", span="488-488", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_363 [label="Entry lambda expression", span="488-488", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_365 [label="Exit lambda expression", span="488-488", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_380 [label="await jsonTextReader.ReadAsInt32Async()", span="511-511", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_383 [label="await jsonTextReader.ReadAsInt32Async()", span="513-513", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_386 [label="await jsonTextReader.ReadAsInt32Async()", span="515-515", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_389 [label="await jsonTextReader.ReadAsInt32Async()", span="517-517", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_379 [label="Entry lambda expression", span="511-511", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_382 [label="Entry lambda expression", span="513-513", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_385 [label="Entry lambda expression", span="515-515", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_388 [label="Entry lambda expression", span="517-517", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_381 [label="Exit lambda expression", span="511-511", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_384 [label="Exit lambda expression", span="513-513", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_387 [label="Exit lambda expression", span="515-515", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_390 [label="Exit lambda expression", span="517-517", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_417 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="568-568", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_416 [label="Entry lambda expression", span="566-570", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_418 [label="await reader.ReadAsInt32Async()", span="569-569", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_419 [label="Exit lambda expression", span="566-570", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_433 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="589-589", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_432 [label="Entry lambda expression", span="587-591", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_434 [label="await reader.ReadAsInt32Async()", span="590-590", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_435 [label="Exit lambda expression", span="587-591", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_471 [label="await reader.ReadAsStringAsync()", span="644-644", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_470 [label="Entry lambda expression", span="644-644", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_472 [label="Exit lambda expression", span="644-644", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_479 [label="await reader.ReadAsBooleanAsync()", span="654-654", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_478 [label="Entry lambda expression", span="654-654", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_480 [label="Exit lambda expression", span="654-654", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_487 [label="await reader.ReadAsStringAsync()", span="664-664", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_486 [label="Entry lambda expression", span="664-664", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_488 [label="Exit lambda expression", span="664-664", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_495 [label="await reader.ReadAsBooleanAsync()", span="674-674", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_494 [label="Entry lambda expression", span="674-674", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_496 [label="Exit lambda expression", span="674-674", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_503 [label="await reader.ReadAsBooleanAsync()", span="684-684", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_502 [label="Entry lambda expression", span="684-684", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_504 [label="Exit lambda expression", span="684-684", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_511 [label="await reader.ReadAsStringAsync()", span="694-694", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_510 [label="Entry lambda expression", span="694-694", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_512 [label="Exit lambda expression", span="694-694", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_519 [label="await reader.ReadAsDoubleAsync()", span="704-704", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_518 [label="Entry lambda expression", span="704-704", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_520 [label="Exit lambda expression", span="704-704", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_528 [label="await reader.ReadAsDoubleAsync()", span="714-714", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_527 [label="Entry lambda expression", span="714-714", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_529 [label="Exit lambda expression", span="714-714", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_536 [label="await reader.ReadAsBytesAsync()", span="724-724", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_535 [label="Entry lambda expression", span="724-724", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_537 [label="Exit lambda expression", span="724-724", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_543 [label="await reader.ReadAsBytesAsync()", span="732-732", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_542 [label="Entry lambda expression", span="732-732", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_544 [label="Exit lambda expression", span="732-732", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_550 [label="await reader.ReadAsBytesAsync()", span="740-740", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_549 [label="Entry lambda expression", span="740-740", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_551 [label="Exit lambda expression", span="740-740", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_557 [label="await reader.ReadAsBytesAsync()", span="748-748", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_556 [label="Entry lambda expression", span="748-748", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_558 [label="Exit lambda expression", span="748-748", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_567 [label="await reader.ReadAsBytesAsync()", span="759-759", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_566 [label="Entry lambda expression", span="757-760", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_568 [label="Exit lambda expression", span="757-760", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_574 [label="await reader.ReadAsBytesAsync()", span="773-773", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_573 [label="Entry lambda expression", span="771-774", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_575 [label="Exit lambda expression", span="771-774", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_585 [label="await reader.ReadAsBytesAsync()", span="786-786", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_584 [label="Entry lambda expression", span="784-787", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_586 [label="Exit lambda expression", span="784-787", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_592 [label="await reader.ReadAsBytesAsync()", span="798-798", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_591 [label="Entry lambda expression", span="798-798", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_593 [label="Exit lambda expression", span="798-798", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_601 [label="await reader.ReadAsBytesAsync()", span="809-809", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_600 [label="Entry lambda expression", span="809-809", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_602 [label="Exit lambda expression", span="809-809", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_609 [label="await reader.ReadAsDateTimeAsync()", span="819-819", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_608 [label="Entry lambda expression", span="819-819", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_610 [label="Exit lambda expression", span="819-819", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_617 [label="await reader.ReadAsDateTimeAsync()", span="829-829", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_616 [label="Entry lambda expression", span="829-829", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_618 [label="Exit lambda expression", span="829-829", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_624 [label="await reader.ReadAsDateTimeOffsetAsync()", span="838-838", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_623 [label="Entry lambda expression", span="838-838", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_625 [label="Exit lambda expression", span="838-838", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_631 [label="await reader.ReadAsDecimalAsync()", span="847-847", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_630 [label="Entry lambda expression", span="847-847", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_632 [label="Exit lambda expression", span="847-847", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_638 [label="await reader.ReadAsDecimalAsync()", span="856-856", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_637 [label="Entry lambda expression", span="856-856", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_639 [label="Exit lambda expression", span="856-856", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_645 [label="await reader.ReadAsInt32Async()", span="864-864", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_644 [label="Entry lambda expression", span="864-864", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_646 [label="Exit lambda expression", span="864-864", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_655 [label="await reader.ReadAsInt32Async()", span="875-875", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_654 [label="Entry lambda expression", span="873-876", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_656 [label="Exit lambda expression", span="873-876", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_662 [label="await reader.ReadAsInt32Async()", span="889-889", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_661 [label="Entry lambda expression", span="887-890", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_663 [label="Exit lambda expression", span="887-890", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_673 [label="await reader.ReadAsInt32Async()", span="902-902", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_672 [label="Entry lambda expression", span="900-903", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_674 [label="Exit lambda expression", span="900-903", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_681 [label="await reader.ReadAsStringAsync()", span="916-916", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_680 [label="Entry lambda expression", span="916-916", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_682 [label="Exit lambda expression", span="916-916", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_689 [label="await reader.ReadAsStringAsync()", span="926-926", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_688 [label="Entry lambda expression", span="926-926", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_690 [label="Exit lambda expression", span="926-926", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_696 [label="await reader.ReadAsDateTimeAsync()", span="936-936", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_695 [label="Entry lambda expression", span="934-937", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_697 [label="Exit lambda expression", span="934-937", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_706 [label="await reader.ReadAsStringAsync()", span="948-948", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_705 [label="Entry lambda expression", span="946-949", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_707 [label="Exit lambda expression", span="946-949", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_717 [label="await reader.ReadAsStringAsync()", span="964-964", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_716 [label="Entry lambda expression", span="962-965", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_718 [label="Exit lambda expression", span="962-965", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_729 [label="await reader.ReadAsDateTimeAsync()", span="979-979", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_732 [label="await reader.ReadAsDateTimeAsync()", span="984-984", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_735 [label="await reader.ReadAsDateTimeAsync()", span="989-989", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_728 [label="Entry lambda expression", span="977-980", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_731 [label="Entry lambda expression", span="982-985", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_734 [label="Entry lambda expression", span="987-990", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_730 [label="Exit lambda expression", span="977-980", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_733 [label="Exit lambda expression", span="982-985", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_736 [label="Exit lambda expression", span="987-990", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_746 [label="await reader.ReadAsync()", span="1003-1003", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_745 [label="Entry lambda expression", span="1003-1003", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_747 [label="Exit lambda expression", span="1003-1003", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_753 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1024-1024", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_752 [label="Entry lambda expression", span="1022-1028", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_754 [label="await reader.ReadAsync()", span="1025-1025", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_755 [label="Exit lambda expression", span="1022-1028", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_763 [label="Assert.IsTrue(await reader.ReadAsync())", span="1044-1044", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_762 [label="Entry lambda expression", span="1044-1044", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_764 [label="Exit lambda expression", span="1044-1044", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_795 [label="Assert.IsTrue(await reader.ReadAsync())", span="1060-1060", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_798 [label="Assert.IsTrue(await reader.ReadAsync())", span="1078-1078", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_794 [label="Entry lambda expression", span="1060-1060", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_797 [label="Entry lambda expression", span="1078-1078", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_796 [label="Exit lambda expression", span="1060-1060", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_799 [label="Exit lambda expression", span="1078-1078", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_806 [label="await reader.ReadAsync()", span="1102-1102", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_807 [label="Exit lambda expression", span="1102-1102", cluster="lambda expression", file="JsonDictionaryContract.cs"];
m0_214 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithInsufficentCharactersAsync()", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithInsufficentCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_215 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="288-288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithInsufficentCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_216 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="290-290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithInsufficentCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_217 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithInsufficentCharactersAsync()", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MatchWithInsufficentCharactersAsync()", file="JsonDictionaryContract.cs"];
m0_587 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithBadCharacterAsync()", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_588 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="796-796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_589 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_590 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithBadCharacterAsync()", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesWithBadCharacterAsync()", file="JsonDictionaryContract.cs"];
m0_343 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesEmptyWrappedObjectAsync()", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesEmptyWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_344 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{}''))", span="468-468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesEmptyWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_345 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Error reading bytes. Unexpected token: StartObject. Path '', line 1, position 2.'' )", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesEmptyWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_346 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesEmptyWrappedObjectAsync()", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadBytesEmptyWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_452 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", span="617-617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_453 [label="BigInteger i = new BigInteger(long.MinValue)", span="619-619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_454 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="621-621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_459 [label="BigInteger total = i + -j", span="627-627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_455 [label="await reader.ReadAsync()", span="622-622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_456 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="623-623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_457 [label="int j = 1", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_458 [label="j < 1000", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_463 [label="j++", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_460 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="629-629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_461 [label="await reader.ReadAsync()", span="630-630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_462 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_464 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", span="617-617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadInt64Overflow_NegativeAsync()", file="JsonDictionaryContract.cs"];
m0_465 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_AdditionalBadDataAsync()", span="638-638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_466 [label="string json = @''nullllll''", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_467 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="642-642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_468 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsStringAsync(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="644-644", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_469 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_AdditionalBadDataAsync()", span="638-638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_765 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_766 [label="string json = ''[[[[]]],[[]]]''", span="1050-1050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_767 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="1052-1055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_768 [label="Assert.IsTrue(await reader.ReadAsync())", span="1057-1057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_769 [label="Assert.AreEqual(0, reader.Depth)", span="1058-1058", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_770 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { Assert.IsTrue(await reader.ReadAsync()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="1060-1060", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_771 [label="Assert.AreEqual(1, reader.Depth)", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_772 [label="Assert.IsTrue(await reader.ReadAsync())", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_773 [label="Assert.AreEqual(2, reader.Depth)", span="1064-1064", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_774 [label="Assert.IsTrue(await reader.ReadAsync())", span="1066-1066", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_775 [label="Assert.AreEqual(3, reader.Depth)", span="1067-1067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_776 [label="Assert.IsTrue(await reader.ReadAsync())", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_777 [label="Assert.AreEqual(3, reader.Depth)", span="1070-1070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_778 [label="Assert.IsTrue(await reader.ReadAsync())", span="1072-1072", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_779 [label="Assert.AreEqual(2, reader.Depth)", span="1073-1073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_780 [label="Assert.IsTrue(await reader.ReadAsync())", span="1075-1075", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_781 [label="Assert.AreEqual(1, reader.Depth)", span="1076-1076", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_782 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { Assert.IsTrue(await reader.ReadAsync()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="1078-1078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_783 [label="Assert.AreEqual(1, reader.Depth)", span="1079-1079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_784 [label="Assert.IsTrue(await reader.ReadAsync())", span="1081-1081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_785 [label="Assert.AreEqual(2, reader.Depth)", span="1082-1082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_786 [label="Assert.IsTrue(await reader.ReadAsync())", span="1084-1084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_787 [label="Assert.AreEqual(2, reader.Depth)", span="1085-1085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_788 [label="Assert.IsTrue(await reader.ReadAsync())", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_789 [label="Assert.AreEqual(1, reader.Depth)", span="1088-1088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_790 [label="Assert.IsTrue(await reader.ReadAsync())", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_791 [label="Assert.AreEqual(0, reader.Depth)", span="1091-1091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_792 [label="Assert.IsFalse(await reader.ReadAsync())", span="1093-1093", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_793 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MaxDepthDoesNotRecursivelyErrorAsync()", file="JsonDictionaryContract.cs"];
m0_287 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_CommaAsync()", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_CommaAsync()", file="JsonDictionaryContract.cs"];
m0_288 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="376-380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_CommaAsync()", file="JsonDictionaryContract.cs"];
m0_289 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="382-382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_CommaAsync()", file="JsonDictionaryContract.cs"];
m0_290 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                while (await reader.ReadAsync())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="384-389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_CommaAsync()", file="JsonDictionaryContract.cs"];
m0_291 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_CommaAsync()", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ParseAdditionalContent_CommaAsync()", file="JsonDictionaryContract.cs"];
m0_350 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_351 [label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="476-478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_352 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_353 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="482-482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_354 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_355 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="485-485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_356 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_357 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => await jsonTextReader.ReadAsInt32Async(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 52.'')", span="488-488", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_358 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="490-490", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_359 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="491-491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_360 [label="Assert.IsFalse(await jsonTextReader.ReadAsync())", span="493-493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_361 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadIntegerWithErrorAsync()", file="JsonDictionaryContract.cs"];
m0_647 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_648 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,1]''))", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_649 [label="await reader.ReadAsync()", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_650 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsInt32Async();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="873-876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_651 [label="Assert.AreEqual(1, await reader.ReadAsInt32Async())", span="878-878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_652 [label="Assert.IsTrue(await reader.ReadAsync())", span="879-879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_653 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrorsAsync()", file="JsonDictionaryContract.cs"];
m0_603 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BadDataAsync()", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_604 [label="string json = @''pie''", span="815-815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_605 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="817-817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_606 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDateTimeAsync(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_607 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BadDataAsync()", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTime_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_67 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", span="127-127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_68 [label="string json = ''['2017-02-04T00:00:00Z' '2018-02-04T00:00:00Z' '2019-02-04T00:00:00Z']''", span="129-129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_69 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="130-130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_70 [label="Assert.IsTrue(await reader.ReadAsync())", span="132-132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_71 [label="Assert.AreEqual(''2017-02-04T00:00:00Z'', await reader.ReadAsStringAsync())", span="133-133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_72 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(\r\n                () => reader.ReadAsStringAsync(),\r\n                ''After parsing a value an unexpected character was encountered: '. Path '[0]', line 1, position 24.'')", span="135-137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_73 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", span="127-127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_MissingCommaAsync()", file="JsonDictionaryContract.cs"];
m0_675 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_UnexpectedEndAsync()", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_676 [label="string json = @''tru''", span="912-912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_677 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="914-914", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_678 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsStringAsync(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="916-916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_679 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_UnexpectedEndAsync()", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_742 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonDictionaryContract.cs"];
m0_683 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_UnexpectedEndAsync()", span="920-920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_684 [label="string json = @''nul''", span="922-922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_685 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="924-924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_686 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsStringAsync(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="926-926", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_687 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_UnexpectedEndAsync()", span="920-920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsString_Null_UnexpectedEndAsync()", file="JsonDictionaryContract.cs"];
m0_449 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonDictionaryContract.cs"];
m0_619 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffsetBadContentAsync()", span="834-834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffsetBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_620 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffsetBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_621 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsDateTimeOffsetAsync(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="838-838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffsetBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_622 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffsetBadContentAsync()", span="834-834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsDateTimeOffsetBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_249 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_250 [label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="328-330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_251 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="332-332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_252 [label="await reader.ReadAsync()", span="334-334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_253 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="335-335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_254 [label="await reader.ReadAsync()", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_255 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_256 [label="await reader.ReadAsync()", span="340-340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_257 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="341-341", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_258 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsync(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 8.'')", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_259 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.MissingColonAsync()", file="JsonDictionaryContract.cs"];
m0_195 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonDictionaryContract.cs"];
m0_530 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_BadDataAsync()", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_531 [label="string json = @''pie''", span="720-720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_532 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="722-722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_533 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="724-724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_534 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_BadDataAsync()", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytes_BadDataAsync()", file="JsonDictionaryContract.cs"];
m0_473 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_AdditionalBadDataAsync()", span="648-648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_474 [label="string json = @''falseeeee''", span="650-650", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_475 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_476 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBooleanAsync(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="654-654", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_477 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_AdditionalBadDataAsync()", span="648-648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBoolean_AdditionalBadDataAsync()", file="JsonDictionaryContract.cs"];
m0_336 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesNoContentWrappedObjectAsync()", span="458-458", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesNoContentWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_337 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="460-460", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesNoContentWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_338 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="462-462", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesNoContentWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_339 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesNoContentWrappedObjectAsync()", span="458-458", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesNoContentWrappedObjectAsync()", file="JsonDictionaryContract.cs"];
m0_664 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", span="894-894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_665 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,,1]''))", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_666 [label="await reader.ReadAsync()", span="897-897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_667 [label="await reader.ReadAsInt32Async()", span="898-898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_668 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () =>\r\n            {\r\n                await reader.ReadAsInt32Async();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 4.'')", span="900-903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_669 [label="Assert.AreEqual(1, await reader.ReadAsInt32Async())", span="905-905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_670 [label="Assert.IsTrue(await reader.ReadAsync())", span="906-906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_671 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", span="894-894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadNumberValue_CommaErrors_MultipleAsync()", file="JsonDictionaryContract.cs"];
m0_552 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesBadContentAsync()", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_553 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_554 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await reader.ReadAsBytesAsync(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="748-748", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_555 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesBadContentAsync()", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.ExceptionHandlingAsyncTests.ReadAsBytesBadContentAsync()", file="JsonDictionaryContract.cs"];
m0_138 [label="Entry Unk.ReadAsDecimalAsync", span="", cluster="Unk.ReadAsDecimalAsync", file="JsonDictionaryContract.cs"];
m0_808 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_809 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_810 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_811 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_812 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_813 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_814 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_815 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_816 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_817 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_818 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_819 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_820 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_821 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_822 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_823 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_824 [label=jsonTextReader, span="", file="JsonDictionaryContract.cs"];
m0_825 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_826 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_827 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_828 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_829 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_830 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_831 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_832 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_833 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_834 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_835 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_836 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_837 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_838 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_839 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_840 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_841 [label=jsonTextReader, span="", file="JsonDictionaryContract.cs"];
m0_842 [label=jsonTextReader, span="", file="JsonDictionaryContract.cs"];
m0_843 [label=total, span="", file="JsonDictionaryContract.cs"];
m0_844 [label=total, span="", file="JsonDictionaryContract.cs"];
m0_845 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_846 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_847 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_848 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_849 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_850 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_851 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_852 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_853 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_854 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_855 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_856 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_857 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_858 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_859 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_860 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_861 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_862 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_863 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_864 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_865 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_866 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_867 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_868 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_869 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_870 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_871 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_872 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_873 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_874 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_875 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_876 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_877 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_878 [label=json, span="", file="JsonDictionaryContract.cs"];
m0_879 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_880 [label=reader, span="", file="JsonDictionaryContract.cs"];
m0_881 [label=reader, span="", file="JsonDictionaryContract.cs"];
m1_45 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)", span="136-136", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(System.Type, System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)", file="JsonSerializerCollectionsTests.cs"];
m1_40 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="104-104", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_39 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="384-384", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_42 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="78-78", cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JsonSerializerCollectionsTests.cs"];
m1_44 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_46 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="190-190", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerCollectionsTests.cs"];
m1_47 [label="_genericWrapperCreator == null", span="192-192", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerCollectionsTests.cs"];
m1_51 [label="return (IWrappedDictionary)_genericWrapperCreator(dictionary);", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerCollectionsTests.cs"];
m1_48 [label="_genericWrapperType = typeof(DictionaryWrapper<,>).MakeGenericType(DictionaryKeyType, DictionaryValueType)", span="194-194", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerCollectionsTests.cs"];
m1_49 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="196-196", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerCollectionsTests.cs"];
m1_50 [label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParametrizedConstructor(genericWrapperConstructor)", span="197-197", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerCollectionsTests.cs"];
m1_52 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="190-190", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerCollectionsTests.cs"];
m1_34 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="276-276", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_0 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="106-106", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_1 [label="ContractType = JsonContractType.Dictionary", span="109-109", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_4 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IDictionary<,>), out _genericCollectionDefinitionType)", span="114-114", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_9 [label="IsReadOnlyOrFixedSize = ReflectionUtils.InheritsGenericDefinition(underlyingType, typeof(ReadOnlyDictionary<,>))", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_10 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IReadOnlyDictionary<,>), out _genericCollectionDefinitionType)", span="127-127", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_21 [label="!HasParametrizedCreator && underlyingType.Name == FSharpUtils.FSharpMapTypeName", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_22 [label="FSharpUtils.EnsureInitialized(underlyingType.Assembly())", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_29 [label="ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(underlyingType, DictionaryKeyType, DictionaryValueType, out immutableCreatedType, out immutableParameterizedCreator)", span="181-181", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_2 [label="Type keyType", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_3 [label="Type valueType", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_5 [label="keyType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="116-116", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_6 [label="valueType = _genericCollectionDefinitionType.GetGenericArguments()[1]", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_8 [label="CreatedType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_19 [label="keyType != null && valueType != null", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_20 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(CreatedType, typeof(KeyValuePair<,>).MakeGenericType(keyType, valueType))", span="148-148", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_23 [label="_parametrizedCreator = FSharpUtils.CreateMap(keyType, valueType)", span="154-154", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_25 [label="DictionaryKeyType = keyType", span="161-161", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_7 [label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IDictionary<,>))", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_26 [label="DictionaryValueType = valueType", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_11 [label="keyType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="129-129", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_16 [label="ReflectionUtils.GetDictionaryKeyValueTypes(UnderlyingType, out keyType, out valueType)", span="140-140", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_12 [label="valueType = _genericCollectionDefinitionType.GetGenericArguments()[1]", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_14 [label="CreatedType = typeof(ReadOnlyDictionary<,>).MakeGenericType(keyType, valueType)", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_13 [label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IReadOnlyDictionary<,>))", span="132-132", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_15 [label="IsReadOnlyOrFixedSize = true", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_17 [label="UnderlyingType == typeof(IDictionary)", span="142-142", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_18 [label="CreatedType = typeof(Dictionary<object, object>)", span="143-143", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_24 [label="ShouldCreateWrapper = !typeof(IDictionary).IsAssignableFrom(CreatedType)", span="159-159", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_27 [label="Type immutableCreatedType", span="179-179", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_28 [label="ObjectConstructor<object> immutableParameterizedCreator", span="180-180", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_30 [label="CreatedType = immutableCreatedType", span="183-183", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_31 [label="_parametrizedCreator = immutableParameterizedCreator", span="184-184", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_32 [label="IsReadOnlyOrFixedSize = true", span="185-185", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_33 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="106-106", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_37 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonSerializerCollectionsTests.cs"];
m1_38 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="316-316", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_43 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", span="149-149", cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateMap(System.Type, System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_55 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonSerializerCollectionsTests.cs"];
m1_35 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JsonSerializerCollectionsTests.cs"];
m1_53 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonSerializerCollectionsTests.cs"];
m1_36 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_41 [label="Entry System.Type.Assembly()", span="160-160", cluster="System.Type.Assembly()", file="JsonSerializerCollectionsTests.cs"];
m1_56 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="203-203", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerCollectionsTests.cs"];
m1_57 [label="_genericTemporaryDictionaryCreator == null", span="205-205", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerCollectionsTests.cs"];
m1_58 [label="Type temporaryDictionaryType = typeof(Dictionary<,>).MakeGenericType(DictionaryKeyType, DictionaryValueType)", span="207-207", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerCollectionsTests.cs"];
m1_60 [label="return (IDictionary)_genericTemporaryDictionaryCreator();", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerCollectionsTests.cs"];
m1_59 [label="_genericTemporaryDictionaryCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryDictionaryType)", span="209-209", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerCollectionsTests.cs"];
m1_61 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="203-203", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerCollectionsTests.cs"];
m1_62 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonSerializerCollectionsTests.cs"];
m1_63 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonSerializerCollectionsTests.cs"];
m1_64 [label="Newtonsoft.Json.Serialization.JsonDictionaryContract", span="", file="JsonSerializerCollectionsTests.cs"];
m2_356 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="852-852", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonTextReader.cs"];
m2_653 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="55-55", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonTextReader.cs"];
m2_1087 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="840-840", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonTextReader.cs"];
m2_1228 [label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2344-2344", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m2_1229 [label="return true;", span="2346-2346", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m2_1230 [label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2344-2344", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m2_360 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="944-944", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextReader.cs"];
m2_138 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_139 [label="EnsureBuffer()", span="368-368", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_140 [label=true, span="370-370", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_141 [label=_currentState, span="372-372", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_142 [label="State.Start", span="374-374", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_149 [label="State.Object", span="381-381", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_152 [label="State.PostValue", span="384-384", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_155 [label="State.Finished", span="392-392", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_167 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="412-412", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_143 [label="State.Property", span="375-375", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_144 [label="State.Array", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_145 [label="State.ArrayStart", span="377-377", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_146 [label="State.Constructor", span="378-378", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_147 [label="State.ConstructorStart", span="379-379", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_148 [label="return ParseValue();", span="380-380", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_150 [label="State.ObjectStart", span="382-382", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_151 [label="return ParseObject();", span="383-383", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_153 [label="ParsePostValue()", span="387-387", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_154 [label="return true;", span="389-389", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_156 [label="EnsureChars(0, false)", span="393-393", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_157 [label="EatWhitespace(false)", span="395-395", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_165 [label="SetToken(JsonToken.None)", span="409-409", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_158 [label=_isEndOfFile, span="396-396", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_159 [label="SetToken(JsonToken.None)", span="398-398", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_161 [label="_chars[_charPos] == '/'", span="401-401", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_160 [label="return false;", span="399-399", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_162 [label="ParseComment(true)", span="403-403", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_164 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="407-407", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_163 [label="return true;", span="404-404", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_166 [label="return false;", span="410-410", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_168 [label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m2_916 [label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1706-1706", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_950 [label="MatchValueWithTrailingSeparator(''new'')", span="1708-1708", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_951 [label="EatWhitespace(false)", span="1710-1710", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_984 [label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1785-1785", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_952 [label="int initialPosition = _charPos", span="1712-1712", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_953 [label="int endPosition", span="1713-1713", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_976 [label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1767-1767", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_954 [label=true, span="1715-1715", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_955 [label="char currentChar = _chars[_charPos]", span="1717-1717", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_956 [label="currentChar == '\0'", span="1718-1718", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_962 [label="char.IsLetterOrDigit(currentChar)", span="1734-1734", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_964 [label="currentChar == StringUtils.CarriageReturn", span="1738-1738", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_967 [label="currentChar == StringUtils.LineFeed", span="1744-1744", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_970 [label="char.IsWhiteSpace(currentChar)", span="1750-1750", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_973 [label="currentChar == '('", span="1756-1756", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_975 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1763-1763", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_957 [label="_charsUsed == _charPos", span="1720-1720", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_958 [label="ReadData(true) == 0", span="1722-1722", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_960 [label="endPosition = _charPos", span="1729-1729", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_959 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1724-1724", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_961 [label="_charPos++", span="1730-1730", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_963 [label="_charPos++", span="1736-1736", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_965 [label="endPosition = _charPos", span="1740-1740", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_966 [label="ProcessCarriageReturn(true)", span="1741-1741", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_968 [label="endPosition = _charPos", span="1746-1746", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_969 [label="ProcessLineFeed()", span="1747-1747", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_971 [label="endPosition = _charPos", span="1752-1752", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_972 [label="_charPos++", span="1753-1753", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_974 [label="endPosition = _charPos", span="1758-1758", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_977 [label="string constructorName = _stringReference.ToString()", span="1768-1768", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_978 [label="EatWhitespace(false)", span="1770-1770", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_983 [label="SetToken(JsonToken.StartConstructor, constructorName)", span="1781-1781", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_979 [label="_chars[_charPos] != '('", span="1772-1772", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_980 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1774-1774", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_981 [label="_charPos++", span="1777-1777", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_982 [label="ClearRecentString()", span="1779-1779", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_985 [label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1706-1706", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m2_541 [label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="886-886", cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonTextReader.cs"];
m2_540 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="2226-2226", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m2_1185 [label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="2228-2228", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m2_1186 [label="SetToken(JsonToken.Null)", span="2230-2230", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m2_1187 [label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="2234-2234", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m2_1188 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="2226-2226", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m2_1225 [label="Entry Newtonsoft.Json.JsonReader.Close()", span="1117-1117", cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonTextReader.cs"];
m2_651 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonTextReader.cs"];
m2_263 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="JsonTextReader.cs"];
m2_1081 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="746-746", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonTextReader.cs"];
m2_814 [label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="JsonTextReader.cs"];
m2_1078 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReader.cs"];
m2_83 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m2_84 [label="return ReadData(append, 0);", span="242-242", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m2_85 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m2_1203 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonTextReader.cs"];
m2_186 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m2_187 [label="return (string)ReadStringValue(ReadType.ReadAsString);", span="441-441", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m2_188 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m2_1091 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonTextReader.cs"];
m2_17 [label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_18 [label="_charPos++", span="129-129", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_20 [label="ReadStringIntoBuffer(quote)", span="132-132", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_22 [label=readType, span="135-135", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_35 [label="_quoteChar = quote", span="159-159", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_41 [label="readType == ReadType.ReadAsDateTime", span="170-170", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_43 [label="readType == ReadType.ReadAsDateTimeOffset", span="175-175", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_56 [label="_quoteChar = quote", span="208-208", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_19 [label="ShiftBufferIfNeeded()", span="131-131", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_21 [label="SetPostValueState(true)", span="133-133", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_23 [label="ReadType.ReadAsBytes", span="137-137", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_32 [label="ReadType.ReadAsString", span="155-155", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_36 [label="ReadType.ReadAsInt32", span="161-161", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_39 [label="_dateParseHandling != DateParseHandling.None", span="167-167", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_24 [label="Guid g", span="138-138", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_25 [label="byte[] data", span="139-139", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_26 [label="_stringReference.Length == 0", span="140-140", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_27 [label="data = new byte[0]", span="142-142", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_28 [label="_stringReference.Length == 36 && ConvertUtils.TryConvertGuid(_stringReference.ToString(), out g)", span="144-144", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_29 [label="data = g.ToByteArray()", span="146-146", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_30 [label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="150-150", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_31 [label="SetToken(JsonToken.Bytes, data, false)", span="153-153", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_33 [label="string text = _stringReference.ToString()", span="156-156", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_34 [label="SetToken(JsonToken.String, text, false)", span="158-158", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_37 [label="ReadType.ReadAsDecimal", span="162-162", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_38 [label="ReadType.ReadAsBoolean", span="163-163", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_40 [label="DateParseHandling dateParseHandling", span="169-169", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_55 [label="SetToken(JsonToken.String, _stringReference.ToString(), false)", span="207-207", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_42 [label="dateParseHandling = DateParseHandling.DateTime", span="172-172", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_44 [label="dateParseHandling = DateParseHandling.DateTimeOffset", span="177-177", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_45 [label="dateParseHandling = _dateParseHandling", span="182-182", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_46 [label="dateParseHandling == DateParseHandling.DateTime", span="185-185", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_47 [label="DateTime dt", span="187-187", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_51 [label="DateTimeOffset dt", span="197-197", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_48 [label="DateTimeUtils.TryParseDateTime(_stringReference, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="188-188", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_49 [label="SetToken(JsonToken.Date, dt, false)", span="190-190", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_50 [label="return;", span="191-191", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_52 [label="DateTimeUtils.TryParseDateTimeOffset(_stringReference, DateFormatString, Culture, out dt)", span="198-198", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_53 [label="SetToken(JsonToken.Date, dt, false)", span="200-200", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_54 [label="return;", span="201-201", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_57 [label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_181 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="819-819", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_449 [label="EnsureBuffer()", span="821-821", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_467 [label="ParseString(currentChar, readType)", span="847-847", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_468 [label=readType, span="848-848", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_475 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="857-857", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_491 [label="ParseNumber(readType)", span="874-874", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_450 [label=_currentState, span="823-823", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_451 [label="State.Start", span="825-825", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_513 [label="State.Finished", span="913-913", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_516 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="917-917", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_452 [label="State.Property", span="826-826", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_453 [label="State.Array", span="827-827", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_454 [label="State.ArrayStart", span="828-828", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_455 [label="State.Constructor", span="829-829", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_456 [label="State.ConstructorStart", span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_457 [label="State.PostValue", span="831-831", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_458 [label=true, span="832-832", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_459 [label="char currentChar = _chars[_charPos]", span="834-834", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_460 [label=currentChar, span="836-836", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_502 [label="throw CreateUnexpectedCharacterException(currentChar);", span="889-889", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_511 [label="!char.IsWhiteSpace(currentChar)", span="904-904", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_512 [label="throw CreateUnexpectedCharacterException(currentChar);", span="906-906", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_461 [label="'\0'", span="838-838", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_465 [label="''''", span="845-845", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_476 [label="'n'", span="859-859", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_479 [label="'-'", span="862-862", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_493 [label="'/'", span="876-876", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_495 [label="','", span="879-879", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_497 [label="']'", span="882-882", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_503 [label="StringUtils.CarriageReturn", span="890-890", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_505 [label="StringUtils.LineFeed", span="893-893", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_507 [label="' '", span="896-896", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_510 [label="_charPos++", span="902-902", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_462 [label="ReadNullChar()", span="839-839", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_463 [label="SetToken(JsonToken.None, null, false)", span="841-841", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_464 [label="return null;", span="842-842", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_466 [label="'\''", span="846-846", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_469 [label="ReadType.ReadAsInt32", span="850-850", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_471 [label="ReadType.ReadAsDecimal", span="852-852", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_473 [label="ReadType.ReadAsDouble", span="854-854", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_470 [label="return ReadInt32String(_stringReference.ToString());", span="851-851", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_472 [label="return ReadDecimalString(_stringReference.ToString());", span="853-853", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_474 [label="return ReadDoubleString(_stringReference.ToString());", span="855-855", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_477 [label="HandleNull()", span="860-860", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_478 [label="return null;", span="861-861", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_480 [label="'.'", span="863-863", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_481 [label="'0'", span="864-864", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_482 [label="'1'", span="865-865", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_483 [label="'2'", span="866-866", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_484 [label="'3'", span="867-867", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_485 [label="'4'", span="868-868", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_486 [label="'5'", span="869-869", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_487 [label="'6'", span="870-870", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_488 [label="'7'", span="871-871", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_489 [label="'8'", span="872-872", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_490 [label="'9'", span="873-873", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_492 [label="return Value;", span="875-875", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_494 [label="ParseComment(false)", span="877-877", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_496 [label="ProcessValueComma()", span="880-880", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_498 [label="_charPos++", span="883-883", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_499 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="884-884", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_500 [label="SetToken(JsonToken.EndArray)", span="886-886", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_501 [label="return null;", span="887-887", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_504 [label="ProcessCarriageReturn(false)", span="891-891", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_506 [label="ProcessLineFeed()", span="894-894", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_508 [label="StringUtils.Tab", span="897-897", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_509 [label="_charPos++", span="899-899", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_514 [label="ReadFinished()", span="914-914", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_515 [label="return null;", span="915-915", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_517 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="819-819", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_668 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", span="956-956", cluster="Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", file="JsonTextReader.cs"];
m2_813 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1474-1474", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_818 [label="int initialPosition = _charPos", span="1476-1476", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_819 [label=true, span="1479-1479", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_825 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1494-1494", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_831 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1506-1506", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_820 [label="_chars[_charPos]", span="1481-1481", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_821 [label="'\0'", span="1483-1483", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_827 [label="char currentChar = _chars[_charPos]", span="1497-1497", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_822 [label="_charsUsed == _charPos", span="1484-1484", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_823 [label="ReadData(true) == 0", span="1486-1486", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_824 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="1488-1488", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_826 [label="return;", span="1495-1495", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_828 [label="ValidIdentifierChar(currentChar)", span="1499-1499", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_830 [label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="1504-1504", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_833 [label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1510-1510", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_829 [label="_charPos++", span="1501-1501", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_832 [label="return;", span="1507-1507", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_834 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1474-1474", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m2_1216 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2316-2316", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1217 [label="base.Close()", span="2318-2318", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1218 [label="_chars != null", span="2320-2320", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1219 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="2322-2322", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1221 [label="CloseInput && _reader != null", span="2326-2326", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1220 [label="_chars = null", span="2323-2323", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1222 [label="_reader.Close()", span="2329-2329", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1223 [label="_stringBuffer.Clear(_arrayPool)", span="2335-2335", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_1224 [label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="2316-2316", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m2_527 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="945-945", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs"];
m2_528 [label="return (double?)ReadNumberValue(ReadType.ReadAsDouble);", span="947-947", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs"];
m2_529 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="945-945", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReader.cs"];
m2_784 [label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1413-1413", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_785 [label="char firstChar = _chars[_charPos]", span="1415-1415", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_786 [label="char quoteChar", span="1416-1416", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_787 [label="firstChar == '''' || firstChar == '\''", span="1418-1418", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_789 [label="quoteChar = firstChar", span="1421-1421", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_792 [label="ValidIdentifierChar(firstChar)", span="1425-1425", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_808 [label="_quoteChar = quoteChar", span="1463-1463", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_788 [label="_charPos++", span="1420-1420", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_790 [label="ShiftBufferIfNeeded()", span="1422-1422", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_791 [label="ReadStringIntoBuffer(quoteChar)", span="1423-1423", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_793 [label="quoteChar = '\0'", span="1427-1427", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_796 [label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1433-1433", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_794 [label="ShiftBufferIfNeeded()", span="1428-1428", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_795 [label="ParseUnquotedProperty()", span="1429-1429", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_797 [label="string propertyName", span="1436-1436", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_798 [label="NameTable != null", span="1438-1438", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_799 [label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="1440-1440", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_802 [label="propertyName = _stringReference.ToString()", span="1450-1450", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_800 [label="propertyName == null", span="1443-1443", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_807 [label="SetToken(JsonToken.PropertyName, propertyName)", span="1462-1462", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_801 [label="propertyName = _stringReference.ToString()", span="1445-1445", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_803 [label="EatWhitespace(false)", span="1453-1453", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_804 [label="_chars[_charPos] != ':'", span="1455-1455", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_805 [label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1457-1457", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_806 [label="_charPos++", span="1460-1460", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_809 [label="ClearRecentString()", span="1464-1464", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_810 [label="return true;", span="1466-1466", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_811 [label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1413-1413", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m2_659 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", span="58-58", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", file="JsonTextReader.cs"];
m2_917 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="2296-2296", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m2_1210 [label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="2298-2298", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m2_1211 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2300-2300", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m2_1214 [label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="2309-2309", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m2_1212 [label="throw new JsonReaderException(''Cannot read NaN as a decimal.'');", span="2302-2302", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m2_1213 [label="SetToken(JsonToken.Float, double.NaN)", span="2305-2305", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m2_1215 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="2296-2296", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m2_440 [label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="696-696", cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonTextReader.cs"];
m2_1084 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReader.cs"];
m2_118 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonTextReader.cs"];
m2_189 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_190 [label="EnsureBuffer()", span="450-450", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_191 [label="bool isWrapped = false", span="451-451", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_192 [label=_currentState, span="453-453", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_211 [label=isWrapped, span="479-479", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_193 [label="State.Start", span="455-455", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_249 [label="State.Finished", span="539-539", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_252 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="543-543", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_194 [label="State.Property", span="456-456", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_195 [label="State.Array", span="457-457", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_196 [label="State.ArrayStart", span="458-458", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_197 [label="State.Constructor", span="459-459", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_198 [label="State.ConstructorStart", span="460-460", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_199 [label="State.PostValue", span="461-461", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_200 [label=true, span="462-462", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_201 [label="char currentChar = _chars[_charPos]", span="464-464", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_202 [label=currentChar, span="466-466", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_209 [label="ParseString(currentChar, ReadType.ReadAsBytes)", span="477-477", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_238 [label="throw CreateUnexpectedCharacterException(currentChar);", span="515-515", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_247 [label="!char.IsWhiteSpace(currentChar)", span="530-530", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_248 [label="throw CreateUnexpectedCharacterException(currentChar);", span="532-532", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_203 [label="'\0'", span="468-468", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_207 [label="''''", span="475-475", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_217 [label="'{'", span="489-489", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_222 [label="'['", span="495-495", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_226 [label="'n'", span="499-499", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_229 [label="'/'", span="502-502", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_231 [label="','", span="505-505", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_233 [label="']'", span="508-508", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_239 [label="StringUtils.CarriageReturn", span="516-516", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_241 [label="StringUtils.LineFeed", span="519-519", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_243 [label="' '", span="522-522", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_246 [label="_charPos++", span="528-528", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_204 [label="ReadNullChar()", span="469-469", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_205 [label="SetToken(JsonToken.None, null, false)", span="471-471", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_206 [label="return null;", span="472-472", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_208 [label="'\''", span="476-476", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_210 [label="byte[] data = (byte[])Value", span="478-478", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_215 [label="SetToken(JsonToken.Bytes, data, false)", span="486-486", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_216 [label="return data;", span="488-488", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_212 [label="ReaderReadAndAssert()", span="481-481", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_213 [label="TokenType != JsonToken.EndObject", span="482-482", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_214 [label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="484-484", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_218 [label="_charPos++", span="490-490", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_219 [label="SetToken(JsonToken.StartObject)", span="491-491", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_220 [label="ReadIntoWrappedTypeObject()", span="492-492", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_221 [label="isWrapped = true", span="493-493", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_223 [label="_charPos++", span="496-496", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_224 [label="SetToken(JsonToken.StartArray)", span="497-497", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_225 [label="return ReadArrayIntoByteArray();", span="498-498", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_227 [label="HandleNull()", span="500-500", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_228 [label="return null;", span="501-501", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_230 [label="ParseComment(false)", span="503-503", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_232 [label="ProcessValueComma()", span="506-506", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_234 [label="_charPos++", span="509-509", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_235 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="510-510", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_236 [label="SetToken(JsonToken.EndArray)", span="512-512", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_237 [label="return null;", span="513-513", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_240 [label="ProcessCarriageReturn(false)", span="517-517", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_242 [label="ProcessLineFeed()", span="520-520", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_244 [label="StringUtils.Tab", span="523-523", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_245 [label="_charPos++", span="525-525", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_250 [label="ReadFinished()", span="540-540", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_251 [label="return null;", span="541-541", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_253 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m2_652 [label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1191-1191", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m2_655 [label="writeToPosition > lastWritePosition", span="1193-1193", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m2_656 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, writeToPosition - lastWritePosition)", span="1195-1195", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m2_657 [label="_stringBuffer.Append(_arrayPool, writeChar)", span="1198-1198", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m2_658 [label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1191-1191", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonTextReader.cs"];
m2_359 [label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JsonTextReader.cs"];
m2_812 [label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1469-1469", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m2_815 [label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="1471-1471", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m2_816 [label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1469-1469", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m2_169 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1010-1010", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m2_558 [label="_chars == null", span="1012-1012", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m2_559 [label="_chars = BufferUtils.RentBuffer(_arrayPool, 1024)", span="1014-1014", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m2_560 [label="_chars[0] = '\0'", span="1015-1015", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m2_561 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1010-1010", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonTextReader.cs"];
m2_185 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_265 [label="EnsureBuffer()", span="549-549", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_283 [label="ParseString(currentChar, readType)", span="575-575", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_284 [label=readType, span="576-576", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_297 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="597-597", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_310 [label="readType != ReadType.ReadAsString", span="611-611", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_319 [label="readType != ReadType.ReadAsString", span="622-622", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_266 [label=_currentState, span="551-551", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_267 [label="State.Start", span="553-553", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_350 [label="State.Finished", span="674-674", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_353 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="678-678", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_268 [label="State.Property", span="554-554", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_269 [label="State.Array", span="555-555", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_270 [label="State.ArrayStart", span="556-556", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_271 [label="State.Constructor", span="557-557", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_272 [label="State.ConstructorStart", span="558-558", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_273 [label="State.PostValue", span="559-559", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_274 [label=true, span="560-560", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_275 [label="char currentChar = _chars[_charPos]", span="562-562", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_276 [label=currentChar, span="564-564", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_312 [label="throw CreateUnexpectedCharacterException(currentChar);", span="614-614", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_321 [label="throw CreateUnexpectedCharacterException(currentChar);", span="625-625", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_322 [label="string expected = currentChar == 't' ? JsonConvert.True : JsonConvert.False", span="627-627", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_339 [label="throw CreateUnexpectedCharacterException(currentChar);", span="650-650", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_348 [label="!char.IsWhiteSpace(currentChar)", span="665-665", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_349 [label="throw CreateUnexpectedCharacterException(currentChar);", span="667-667", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_277 [label="'\0'", span="566-566", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_281 [label="''''", span="573-573", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_298 [label="'-'", span="599-599", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_317 [label="'t'", span="620-620", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_327 [label="'n'", span="634-634", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_330 [label="'/'", span="637-637", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_332 [label="','", span="640-640", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_334 [label="']'", span="643-643", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_340 [label="StringUtils.CarriageReturn", span="651-651", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_342 [label="StringUtils.LineFeed", span="654-654", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_344 [label="' '", span="657-657", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_347 [label="_charPos++", span="663-663", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_278 [label="ReadNullChar()", span="567-567", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_279 [label="SetToken(JsonToken.None, null, false)", span="569-569", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_280 [label="return null;", span="570-570", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_282 [label="'\''", span="574-574", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_285 [label="ReadType.ReadAsBytes", span="578-578", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_287 [label="ReadType.ReadAsString", span="580-580", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_289 [label="ReadType.ReadAsDateTime", span="582-582", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_293 [label="ReadType.ReadAsDateTimeOffset", span="589-589", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_286 [label="return Value;", span="579-579", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_288 [label="return Value;", span="581-581", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_290 [label="Value is DateTime", span="583-583", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_291 [label="return (DateTime)Value;", span="585-585", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_292 [label="return ReadDateTimeString((string)Value);", span="587-587", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_294 [label="Value is DateTimeOffset", span="590-590", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_295 [label="return (DateTimeOffset)Value;", span="592-592", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_296 [label="return ReadDateTimeOffsetString((string)Value);", span="594-594", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_299 [label="'.'", span="600-600", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_300 [label="'0'", span="601-601", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_301 [label="'1'", span="602-602", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_302 [label="'2'", span="603-603", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_303 [label="'3'", span="604-604", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_304 [label="'4'", span="605-605", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_305 [label="'5'", span="606-606", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_306 [label="'6'", span="607-607", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_307 [label="'7'", span="608-608", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_308 [label="'8'", span="609-609", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_309 [label="'9'", span="610-610", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_311 [label="_charPos++", span="613-613", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_313 [label="ParseNumber(ReadType.Read)", span="616-616", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", color=red, community=0, file="JsonTextReader.cs"];
m2_314 [label="string s = ((IFormattable)Value).ToString(null, CultureInfo.InvariantCulture)", span="617-617", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", color=red, community=0, file="JsonTextReader.cs"];
m2_315 [label="SetToken(JsonToken.String, s)", span="618-618", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", color=red, community=0, file="JsonTextReader.cs"];
m2_316 [label="return s;", span="619-619", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", color=red, community=0, file="JsonTextReader.cs"];
m2_318 [label="'f'", span="621-621", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_320 [label="_charPos++", span="624-624", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_323 [label="!MatchValueWithTrailingSeparator(expected)", span="628-628", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_325 [label="SetToken(JsonToken.String, expected)", span="632-632", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_326 [label="return expected;", span="633-633", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_324 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="630-630", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_328 [label="HandleNull()", span="635-635", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_329 [label="return null;", span="636-636", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_331 [label="ParseComment(false)", span="638-638", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_333 [label="ProcessValueComma()", span="641-641", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_335 [label="_charPos++", span="644-644", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_336 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="645-645", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_337 [label="SetToken(JsonToken.EndArray)", span="647-647", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_338 [label="return null;", span="648-648", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_341 [label="ProcessCarriageReturn(false)", span="652-652", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_343 [label="ProcessLineFeed()", span="655-655", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_345 [label="StringUtils.Tab", span="658-658", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_346 [label="_charPos++", span="660-660", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_351 [label="ReadFinished()", span="675-675", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_352 [label="return null;", span="676-676", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_354 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_915 [label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2250-2250", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m2_1193 [label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="2252-2252", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m2_1194 [label="SetToken(JsonToken.Boolean, false)", span="2254-2254", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m2_1195 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2258-2258", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m2_1196 [label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2250-2250", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m2_1082 [label="Entry System.Convert.ToInt64(string, int)", span="0-0", cluster="System.Convert.ToInt64(string, int)", file="JsonTextReader.cs"];
m2_364 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="691-691", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_365 [label="EnsureBuffer()", span="693-693", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_366 [label=_currentState, span="695-695", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_367 [label="State.Start", span="697-697", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_435 [label="State.Finished", span="798-798", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_438 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="802-802", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_368 [label="State.Property", span="698-698", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_369 [label="State.Array", span="699-699", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_370 [label="State.ArrayStart", span="700-700", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_371 [label="State.Constructor", span="701-701", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_372 [label="State.ConstructorStart", span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_373 [label="State.PostValue", span="703-703", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_374 [label=true, span="704-704", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_375 [label="char currentChar = _chars[_charPos]", span="706-706", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_376 [label=currentChar, span="708-708", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_383 [label="ParseString(currentChar, ReadType.Read)", span="719-719", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_409 [label="bool isTrue = currentChar == 't'", span="752-752", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_424 [label="throw CreateUnexpectedCharacterException(currentChar);", span="774-774", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_433 [label="!char.IsWhiteSpace(currentChar)", span="789-789", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_434 [label="throw CreateUnexpectedCharacterException(currentChar);", span="791-791", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_377 [label="'\0'", span="710-710", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_381 [label="''''", span="717-717", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_385 [label="'n'", span="721-721", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_388 [label="'-'", span="724-724", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_407 [label="'t'", span="750-750", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_415 [label="'/'", span="761-761", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_417 [label="','", span="764-764", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_419 [label="']'", span="767-767", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_425 [label="StringUtils.CarriageReturn", span="775-775", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_427 [label="StringUtils.LineFeed", span="778-778", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_429 [label="' '", span="781-781", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_432 [label="_charPos++", span="787-787", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_378 [label="ReadNullChar()", span="711-711", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_379 [label="SetToken(JsonToken.None, null, false)", span="713-713", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_380 [label="return null;", span="714-714", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_382 [label="'\''", span="718-718", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_384 [label="return ReadBooleanString(_stringReference.ToString());", span="720-720", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_386 [label="HandleNull()", span="722-722", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_387 [label="return null;", span="723-723", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_389 [label="'.'", span="725-725", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_390 [label="'0'", span="726-726", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_391 [label="'1'", span="727-727", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_392 [label="'2'", span="728-728", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_393 [label="'3'", span="729-729", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_394 [label="'4'", span="730-730", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_395 [label="'5'", span="731-731", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_396 [label="'6'", span="732-732", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_397 [label="'7'", span="733-733", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_398 [label="'8'", span="734-734", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_399 [label="'9'", span="735-735", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_400 [label="ParseNumber(ReadType.Read)", span="736-736", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_401 [label="bool b", span="737-737", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_402 [label="Value is BigInteger", span="739-739", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_403 [label="b = (BigInteger)Value != 0", span="741-741", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_404 [label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="746-746", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_405 [label="SetToken(JsonToken.Boolean, b, false)", span="748-748", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_406 [label="return b;", span="749-749", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_408 [label="'f'", span="751-751", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_410 [label="string expected = isTrue ? JsonConvert.True : JsonConvert.False", span="753-753", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_413 [label="SetToken(JsonToken.Boolean, isTrue)", span="759-759", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_414 [label="return isTrue;", span="760-760", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_411 [label="!MatchValueWithTrailingSeparator(expected)", span="755-755", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_412 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="757-757", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_416 [label="ParseComment(false)", span="762-762", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_418 [label="ProcessValueComma()", span="765-765", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_420 [label="_charPos++", span="768-768", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_421 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="769-769", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_422 [label="SetToken(JsonToken.EndArray)", span="771-771", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_423 [label="return null;", span="772-772", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_426 [label="ProcessCarriageReturn(false)", span="776-776", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_428 [label="ProcessLineFeed()", span="779-779", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_430 [label="StringUtils.Tab", span="782-782", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_431 [label="_charPos++", span="784-784", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_436 [label="ReadFinished()", span="799-799", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_437 [label="return null;", span="800-800", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_439 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="691-691", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReader.cs"];
m2_654 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", span="70-70", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", file="JsonTextReader.cs"];
m2_670 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1218-1218", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_671 [label="int charPos = _charPos", span="1220-1220", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_672 [label=true, span="1222-1222", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_673 [label="_chars[charPos]", span="1224-1224", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_675 [label="_charPos = charPos", span="1227-1227", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_676 [label="_charsUsed == charPos", span="1229-1229", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_707 [label="charPos++", span="1268-1268", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_674 [label="'\0'", span="1226-1226", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_680 [label="'-'", span="1241-1241", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_708 [label="_charPos = charPos", span="1271-1271", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_677 [label="ReadData(true) == 0", span="1231-1231", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_679 [label="return;", span="1238-1238", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_678 [label="return;", span="1233-1233", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_681 [label="'+'", span="1242-1242", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_682 [label="'a'", span="1243-1243", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_683 [label="'A'", span="1244-1244", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_684 [label="'b'", span="1245-1245", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_685 [label="'B'", span="1246-1246", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_686 [label="'c'", span="1247-1247", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_687 [label="'C'", span="1248-1248", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_688 [label="'d'", span="1249-1249", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_689 [label="'D'", span="1250-1250", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_690 [label="'e'", span="1251-1251", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_691 [label="'E'", span="1252-1252", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_692 [label="'f'", span="1253-1253", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_693 [label="'F'", span="1254-1254", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_694 [label="'x'", span="1255-1255", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_695 [label="'X'", span="1256-1256", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_696 [label="'.'", span="1257-1257", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_697 [label="'0'", span="1258-1258", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_698 [label="'1'", span="1259-1259", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_699 [label="'2'", span="1260-1260", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_700 [label="'3'", span="1261-1261", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_701 [label="'4'", span="1262-1262", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_702 [label="'5'", span="1263-1263", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_703 [label="'6'", span="1264-1264", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_704 [label="'7'", span="1265-1265", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_705 [label="'8'", span="1266-1266", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_706 [label="'9'", span="1267-1267", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_709 [label="char currentChar = _chars[_charPos]", span="1273-1273", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_710 [label="char.IsWhiteSpace(currentChar) || currentChar == ',' || currentChar == '}' || currentChar == ']' || currentChar == ')' || currentChar == '/'", span="1274-1274", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_712 [label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1279-1279", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_711 [label="return;", span="1276-1276", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_713 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1218-1218", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m2_258 [label="Entry Newtonsoft.Json.JsonTextReader.HandleNull()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_530 [label="EnsureChars(1, true)", span="952-952", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_531 [label="char next = _chars[_charPos + 1]", span="954-954", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_537 [label="_charPos = _charsUsed", span="966-966", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_532 [label="next == 'u'", span="956-956", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_533 [label="ParseNull()", span="958-958", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_535 [label="_charPos += 2", span="962-962", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_534 [label="return;", span="959-959", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_536 [label="throw CreateUnexpectedCharacterException(_chars[_charPos - 1]);", span="963-963", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_538 [label="throw CreateUnexpectedEndException();", span="967-967", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_539 [label="Exit Newtonsoft.Json.JsonTextReader.HandleNull()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonTextReader.cs"];
m2_174 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="934-934", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs"];
m2_920 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2238-2238", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m2_1189 [label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="2240-2240", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m2_1190 [label="SetToken(JsonToken.Undefined)", span="2242-2242", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m2_1191 [label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="2246-2246", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m2_1192 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2238-2238", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m2_650 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonTextReader.cs"];
m2_1138 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2131-2131", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1139 [label="!EnsureChars(value.Length - 1, true)", span="2133-2133", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1143 [label="i < value.Length", span="2139-2139", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1144 [label="_chars[_charPos + i] != value[i]", span="2141-2141", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1148 [label="_charPos += value.Length", span="2148-2148", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1140 [label="_charPos = _charsUsed", span="2135-2135", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1142 [label="int i = 0", span="2139-2139", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1141 [label="throw CreateUnexpectedEndException();", span="2136-2136", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1145 [label="_charPos += i", span="2143-2143", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1147 [label="i++", span="2139-2139", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1146 [label="return false;", span="2144-2144", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1149 [label="return true;", span="2150-2150", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_1150 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2131-2131", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m2_521 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="926-926", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m2_522 [label="return (DateTimeOffset?)ReadStringValue(ReadType.ReadAsDateTimeOffset);", span="928-928", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m2_523 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="926-926", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m2_524 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="936-936", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m2_525 [label="return (decimal?)ReadNumberValue(ReadType.ReadAsDecimal);", span="938-938", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m2_526 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="936-936", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m2_355 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="796-796", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonTextReader.cs"];
m2_7 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonTextReader.cs"];
m2_441 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonTextReader.cs"];
m2_119 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReader.cs"];
m2_72 [label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonTextReader.cs"];
m2_361 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2153-2153", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1151 [label="bool match = MatchValue(value)", span="2156-2156", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1152 [label="!match", span="2158-2158", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1153 [label="return false;", span="2160-2160", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1154 [label="!EnsureChars(0, false)", span="2163-2163", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1155 [label="return true;", span="2165-2165", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1156 [label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="2168-2168", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1157 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2153-2153", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m2_1226 [label="Entry System.IO.TextReader.Close()", span="0-0", cluster="System.IO.TextReader.Close()", file="JsonTextReader.cs"];
m2_262 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1642-1642", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m2_922 [label="_charPos++", span="1644-1644", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m2_923 [label="OnNewLine(_charPos)", span="1645-1645", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m2_924 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1642-1642", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m2_0 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m2_1 [label="reader == null", span="80-80", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m2_2 [label="throw new ArgumentNullException(nameof(reader));", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m2_3 [label="_reader = reader", span="85-85", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m2_4 [label="_lineNumber = 1", span="86-86", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m2_5 [label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m2_1133 [label="Entry Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2123-2123", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m2_1134 [label=setToken, span="2125-2125", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m2_1135 [label="SetToken(JsonToken.Comment, new string(_chars, initialPosition, endPosition - initialPosition))", span="2127-2127", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m2_1136 [label="Exit Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2123-2123", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonTextReader.cs"];
m2_66 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="328-328", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonTextReader.cs"];
m2_116 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="JsonTextReader.cs"];
m2_1227 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", span="82-82", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", file="JsonTextReader.cs"];
m2_519 [label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="746-746", cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonTextReader.cs"];
m2_1158 [label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2171-2171", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1159 [label=c, span="2173-2173", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1177 [label="char.IsWhiteSpace(c)", span="2201-2201", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1160 [label="'}'", span="2175-2175", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1164 [label="'/'", span="2179-2179", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1169 [label="')'", span="2189-2189", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1172 [label="' '", span="2195-2195", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1161 [label="']'", span="2176-2176", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1162 [label="','", span="2177-2177", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1163 [label="return true;", span="2178-2178", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1165 [label="!EnsureChars(1, false)", span="2181-2181", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1166 [label="return false;", span="2183-2183", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1167 [label="var nextChart = _chars[_charPos + 1]", span="2186-2186", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1168 [label="return (nextChart == '*' || nextChart == '/');", span="2188-2188", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1170 [label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="2190-2190", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1171 [label="return true;", span="2192-2192", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1179 [label="return false;", span="2208-2208", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1173 [label="StringUtils.Tab", span="2196-2196", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1174 [label="StringUtils.LineFeed", span="2197-2197", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1175 [label="StringUtils.CarriageReturn", span="2198-2198", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1176 [label="return true;", span="2199-2199", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1178 [label="return true;", span="2203-2203", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_1180 [label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2171-2171", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m2_13 [label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m2_14 [label="_lineNumber++", span="123-123", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m2_15 [label="_lineStartPos = pos", span="124-124", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m2_16 [label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m2_1085 [label="Entry System.Convert.ToDouble(long)", span="0-0", cluster="System.Convert.ToDouble(long)", file="JsonTextReader.cs"];
m2_176 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReader.cs"];
m2_718 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="29-29", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonTextReader.cs"];
m2_256 [label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="891-891", cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonTextReader.cs"];
m2_520 [label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="635-635", cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonTextReader.cs"];
m2_12 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextReader.cs"];
m2_918 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="2279-2279", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m2_1204 [label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="2281-2281", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m2_1205 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2283-2283", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m2_1208 [label="throw JsonReaderException.Create(this, ''Error parsing positive infinity value.'');", span="2292-2292", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m2_1206 [label="throw new JsonReaderException(''Cannot read Infinity as a decimal.'');", span="2285-2285", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m2_1207 [label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="2288-2288", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m2_1209 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="2279-2279", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m2_67 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="401-401", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonTextReader.cs"];
m2_261 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1648-1648", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m2_925 [label="_charPos++", span="1650-1650", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m2_926 [label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1652-1652", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m2_927 [label="_charPos++", span="1654-1654", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m2_928 [label="OnNewLine(_charPos)", span="1657-1657", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m2_929 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1648-1648", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m2_125 [label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_126 [label=_isEndOfFile, span="329-329", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_128 [label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="334-334", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_130 [label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="342-342", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_127 [label="return false;", span="331-331", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_129 [label="int totalCharsRead = 0", span="336-336", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_133 [label="totalCharsRead < charsRequired", span="351-351", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_134 [label="totalCharsRead < charsRequired", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_132 [label="totalCharsRead += charsRead", span="350-350", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_131 [label="charsRead == 0", span="345-345", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_135 [label="return false;", span="355-355", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_136 [label="return true;", span="357-357", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_137 [label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m2_1077 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="JsonTextReader.cs"];
m2_255 [label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="878-878", cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonTextReader.cs"];
m2_914 [label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2211-2211", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m2_1181 [label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="2216-2216", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m2_1182 [label="SetToken(JsonToken.Boolean, true)", span="2218-2218", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m2_1183 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2222-2222", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m2_1184 [label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2211-2211", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m2_62 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="932-932", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonTextReader.cs"];
m2_8 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m2_9 [label="_stringBuffer.IsEmpty", span="115-115", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m2_10 [label="_stringBuffer = new StringBuffer(_arrayPool, 1024)", span="117-117", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m2_11 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonTextReader.cs"];
m2_1079 [label="Entry System.Convert.ToInt32(string, int)", span="0-0", cluster="System.Convert.ToInt32(string, int)", file="JsonTextReader.cs"];
m2_1137 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="JsonTextReader.cs"];
m2_68 [label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m2_69 [label="int charByteCount = 2", span="215-215", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m2_70 [label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="217-217", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m2_71 [label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m2_919 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="2262-2262", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m2_1197 [label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="2264-2264", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m2_1198 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2266-2266", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m2_1201 [label="throw JsonReaderException.Create(this, ''Error parsing negative infinity value.'');", span="2275-2275", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m2_1199 [label="throw new JsonReaderException(''Cannot read -Infinity as a decimal.'');", span="2268-2268", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m2_1200 [label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="2271-2271", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m2_1202 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="2262-2262", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m2_669 [label="Entry System.Convert.ToChar(int)", span="0-0", cluster="System.Convert.ToChar(int)", file="JsonTextReader.cs"];
m2_58 [label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_73 [label="int length = _chars.Length", span="224-224", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_74 [label="length - _charPos <= length * 0.1", span="225-225", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_75 [label="int count = _charsUsed - _charPos", span="227-227", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_76 [label="count > 0", span="228-228", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_77 [label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="230-230", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_80 [label="_charsUsed = count", span="235-235", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_78 [label="_lineStartPos -= _charPos", span="233-233", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_79 [label="_charPos = 0", span="234-234", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_81 [label="_chars[_charsUsed] = '\0'", span="236-236", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_82 [label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m2_260 [label="Entry Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="682-682", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs"];
m2_362 [label="return JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, c));", span="684-684", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs"];
m2_363 [label="Exit Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="682-682", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonTextReader.cs"];
m2_177 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs"];
m2_714 [label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1284-1284", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m2_715 [label="_stringBuffer.Position = 0", span="1286-1286", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m2_716 [label="_stringReference = new StringReference()", span="1287-1287", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m2_717 [label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1284-1284", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m2_264 [label="Entry Newtonsoft.Json.JsonTextReader.ReadFinished()", span="970-970", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_542 [label="EnsureChars(0, false)", span="972-972", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_543 [label="EatWhitespace(false)", span="974-974", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_549 [label="SetToken(JsonToken.None)", span="989-989", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_544 [label=_isEndOfFile, span="975-975", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_545 [label="return;", span="977-977", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_546 [label="_chars[_charPos] == '/'", span="979-979", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_547 [label="ParseComment(false)", span="981-981", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_548 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="985-985", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_550 [label="Exit Newtonsoft.Json.JsonTextReader.ReadFinished()", span="970-970", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonTextReader.cs"];
m2_64 [label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0", cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReader.cs"];
m2_175 [label="Entry Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2031-2031", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1092 [label="_charPos++", span="2034-2034", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1110 [label="EndComment(setToken, initialPosition, _charPos)", span="2074-2074", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1118 [label="EndComment(setToken, initialPosition, _charPos - 1)", span="2092-2092", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1123 [label="EndComment(setToken, initialPosition, _charPos)", span="2103-2103", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1128 [label="EndComment(setToken, initialPosition, _charPos)", span="2111-2111", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1093 [label="!EnsureChars(1, false)", span="2036-2036", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1094 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2038-2038", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1095 [label="bool singlelineComment", span="2041-2041", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1096 [label="_chars[_charPos] == '*'", span="2043-2043", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1108 [label="!singlelineComment", span="2069-2069", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1115 [label="!singlelineComment", span="2086-2086", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1122 [label=singlelineComment, span="2101-2101", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1127 [label=singlelineComment, span="2109-2109", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1097 [label="singlelineComment = false", span="2045-2045", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1098 [label="_chars[_charPos] == '/'", span="2047-2047", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1099 [label="singlelineComment = true", span="2049-2049", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1100 [label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="2053-2053", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1101 [label="_charPos++", span="2056-2056", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1102 [label="int initialPosition = _charPos", span="2058-2058", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1103 [label=true, span="2060-2060", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1104 [label="_chars[_charPos]", span="2062-2062", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1105 [label="'\0'", span="2064-2064", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1113 [label="'*'", span="2083-2083", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1121 [label="StringUtils.CarriageReturn", span="2100-2100", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1126 [label="StringUtils.LineFeed", span="2108-2108", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1131 [label="_charPos++", span="2117-2117", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1106 [label="_charsUsed == _charPos", span="2065-2065", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1107 [label="ReadData(true) == 0", span="2067-2067", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1112 [label="_charPos++", span="2080-2080", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1109 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2071-2071", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1111 [label="return;", span="2075-2075", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1114 [label="_charPos++", span="2084-2084", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1116 [label="EnsureChars(0, true)", span="2088-2088", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1117 [label="_chars[_charPos] == '/'", span="2090-2090", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1119 [label="_charPos++", span="2094-2094", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1120 [label="return;", span="2095-2095", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1125 [label="ProcessCarriageReturn(true)", span="2106-2106", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1124 [label="return;", span="2104-2104", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1130 [label="ProcessLineFeed()", span="2114-2114", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1129 [label="return;", span="2112-2112", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_1132 [label="Exit Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2031-2031", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonTextReader.cs"];
m2_60 [label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="996-996", cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonTextReader.cs"];
m2_1086 [label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0", cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonTextReader.cs"];
m2_59 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1019-1019", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_562 [label="int charPos = _charPos", span="1021-1021", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_573 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1038-1038", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_577 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1046-1046", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_637 [label="_chars[charPos - 1] == quote", span="1162-1162", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_563 [label="int initialPosition = _charPos", span="1022-1022", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_567 [label="_chars[charPos++]", span="1028-1028", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_564 [label="int lastWritePosition = _charPos", span="1023-1023", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_639 [label="initialPosition == lastWritePosition", span="1166-1166", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_640 [label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="1168-1168", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_565 [label="_stringBuffer.Position = 0", span="1024-1024", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_617 [label="WriteCharToBuffer(highSurrogate, lastWritePosition, escapeStartPos)", span="1126-1126", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_625 [label="WriteCharToBuffer(writeChar, lastWritePosition, escapeStartPos)", span="1146-1146", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_566 [label=true, span="1026-1026", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_568 [label="'\0'", span="1030-1030", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_574 [label="'\\'", span="1042-1042", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_627 [label="StringUtils.CarriageReturn", span="1150-1150", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_631 [label="StringUtils.LineFeed", span="1155-1155", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_635 [label="''''", span="1160-1160", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_569 [label="_charsUsed == charPos - 1", span="1031-1031", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_570 [label="charPos--", span="1033-1033", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_575 [label="_charPos = charPos", span="1043-1043", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_578 [label="int escapeStartPos = charPos - 1", span="1050-1050", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_579 [label="char currentChar = _chars[charPos]", span="1052-1052", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_580 [label="charPos++", span="1053-1053", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_571 [label="ReadData(true) == 0", span="1035-1035", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_572 [label="_charPos = charPos", span="1037-1037", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_576 [label="!EnsureChars(0, true)", span="1044-1044", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_582 [label=currentChar, span="1057-1057", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_598 [label="writeChar = currentChar", span="1080-1080", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_623 [label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="1142-1142", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_581 [label="char writeChar", span="1055-1055", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_600 [label="_charPos = charPos", span="1083-1083", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_583 [label="'b'", span="1059-1059", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_585 [label="'t'", span="1062-1062", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_587 [label="'n'", span="1065-1065", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_589 [label="'f'", span="1068-1068", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_591 [label="'r'", span="1071-1071", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_593 [label="'\\'", span="1074-1074", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_595 [label="''''", span="1077-1077", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_599 [label="'u'", span="1082-1082", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_622 [label="_charPos = charPos", span="1141-1141", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_584 [label="writeChar = '\b'", span="1060-1060", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_586 [label="writeChar = '\t'", span="1063-1063", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_588 [label="writeChar = '\n'", span="1066-1066", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_590 [label="writeChar = '\f'", span="1069-1069", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_592 [label="writeChar = '\r'", span="1072-1072", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_594 [label="writeChar = '\\'", span="1075-1075", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_596 [label="'\''", span="1078-1078", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_597 [label="'/'", span="1079-1079", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_601 [label="writeChar = ParseUnicode()", span="1084-1084", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_602 [label="StringUtils.IsLowSurrogate(writeChar)", span="1086-1086", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_604 [label="StringUtils.IsHighSurrogate(writeChar)", span="1091-1091", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_608 [label="char highSurrogate = writeChar", span="1103-1103", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_603 [label="writeChar = UnicodeReplacementChar", span="1089-1089", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_605 [label="bool anotherHighSurrogate", span="1093-1093", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_621 [label="charPos = _charPos", span="1138-1138", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_606 [label="anotherHighSurrogate = false", span="1098-1098", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_607 [label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="1101-1101", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_620 [label=anotherHighSurrogate, span="1135-1135", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_619 [label="writeChar = UnicodeReplacementChar", span="1133-1133", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_609 [label="_charPos += 2", span="1105-1105", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_610 [label="writeChar = ParseUnicode()", span="1106-1106", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_611 [label="StringUtils.IsLowSurrogate(writeChar)", span="1108-1108", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_612 [label="StringUtils.IsHighSurrogate(writeChar)", span="1112-1112", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_616 [label="EnsureBufferNotEmpty()", span="1124-1124", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_613 [label="highSurrogate = UnicodeReplacementChar", span="1115-1115", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_615 [label="highSurrogate = UnicodeReplacementChar", span="1121-1121", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_614 [label="anotherHighSurrogate = true", span="1116-1116", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_618 [label="lastWritePosition = _charPos", span="1127-1127", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_624 [label="EnsureBufferNotEmpty()", span="1145-1145", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_626 [label="lastWritePosition = charPos", span="1148-1148", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_628 [label="_charPos = charPos - 1", span="1151-1151", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_629 [label="ProcessCarriageReturn(true)", span="1152-1152", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_630 [label="charPos = _charPos", span="1153-1153", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_632 [label="_charPos = charPos - 1", span="1156-1156", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_633 [label="ProcessLineFeed()", span="1157-1157", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_634 [label="charPos = _charPos", span="1158-1158", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_636 [label="'\''", span="1161-1161", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_638 [label="charPos--", span="1164-1164", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_642 [label="charPos > lastWritePosition", span="1174-1174", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_643 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, charPos - lastWritePosition)", span="1176-1176", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_645 [label="charPos++", span="1182-1182", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_641 [label="EnsureBufferNotEmpty()", span="1172-1172", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_644 [label="_stringReference = new StringReference(_stringBuffer.InternalBuffer, 0, _stringBuffer.Position)", span="1179-1179", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_646 [label="_charPos = charPos", span="1183-1183", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_647 [label="return;", span="1184-1184", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_648 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1019-1019", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m2_172 [label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1290-1290", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_719 [label=true, span="1292-1292", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_720 [label="char currentChar = _chars[_charPos]", span="1294-1294", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_721 [label=currentChar, span="1296-1296", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_754 [label="char.IsWhiteSpace(currentChar)", span="1345-1345", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_756 [label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1352-1352", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_722 [label="'\0'", span="1298-1298", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_728 [label="'}'", span="1312-1312", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_732 [label="']'", span="1316-1316", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_736 [label="')'", span="1320-1320", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_740 [label="'/'", span="1324-1324", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_743 [label="','", span="1327-1327", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_747 [label="' '", span="1333-1333", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_750 [label="StringUtils.CarriageReturn", span="1338-1338", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_752 [label="StringUtils.LineFeed", span="1341-1341", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_723 [label="_charsUsed == _charPos", span="1299-1299", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_724 [label="ReadData(false) == 0", span="1301-1301", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_727 [label="_charPos++", span="1309-1309", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_725 [label="_currentState = State.Finished", span="1303-1303", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_726 [label="return false;", span="1304-1304", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_729 [label="_charPos++", span="1313-1313", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_730 [label="SetToken(JsonToken.EndObject)", span="1314-1314", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_731 [label="return true;", span="1315-1315", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_733 [label="_charPos++", span="1317-1317", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_734 [label="SetToken(JsonToken.EndArray)", span="1318-1318", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_735 [label="return true;", span="1319-1319", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_737 [label="_charPos++", span="1321-1321", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_738 [label="SetToken(JsonToken.EndConstructor)", span="1322-1322", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_739 [label="return true;", span="1323-1323", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_741 [label="ParseComment(true)", span="1325-1325", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_742 [label="return true;", span="1326-1326", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_744 [label="_charPos++", span="1328-1328", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_745 [label="SetStateBasedOnCurrent()", span="1331-1331", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_746 [label="return false;", span="1332-1332", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_748 [label="StringUtils.Tab", span="1334-1334", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_749 [label="_charPos++", span="1336-1336", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_751 [label="ProcessCarriageReturn(false)", span="1339-1339", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_753 [label="ProcessLineFeed()", span="1342-1342", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_755 [label="_charPos++", span="1348-1348", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_757 [label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1290-1290", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m2_254 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="992-992", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_551 [label="_charsUsed == _charPos", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_552 [label="ReadData(false) == 0", span="996-996", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_555 [label="_charPos++", span="1004-1004", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_553 [label="_isEndOfFile = true", span="998-998", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_556 [label="return false;", span="1007-1007", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_554 [label="return true;", span="999-999", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_557 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="992-992", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonTextReader.cs"];
m2_61 [label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonTextReader.cs"];
m2_1088 [label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2025-2025", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m2_1089 [label="return System.Numerics.BigInteger.Parse(number, culture);", span="2027-2027", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m2_1090 [label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2025-2025", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m2_817 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="JsonTextReader.cs"];
m2_518 [label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442", cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonTextReader.cs"];
m2_173 [label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1660-1660", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_930 [label="bool finished = false", span="1662-1662", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_948 [label="return (!oneOrMore || ateWhitespace);", span="1703-1703", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_931 [label="bool ateWhitespace = false", span="1663-1663", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_932 [label="!finished", span="1664-1664", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_933 [label="char currentChar = _chars[_charPos]", span="1666-1666", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_934 [label=currentChar, span="1668-1668", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_944 [label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1690-1690", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_935 [label="'\0'", span="1670-1670", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_940 [label="StringUtils.CarriageReturn", span="1683-1683", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_942 [label="StringUtils.LineFeed", span="1686-1686", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_936 [label="_charsUsed == _charPos", span="1671-1671", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_937 [label="ReadData(false) == 0", span="1673-1673", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_939 [label="_charPos++", span="1680-1680", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_938 [label="finished = true", span="1675-1675", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_941 [label="ProcessCarriageReturn(false)", span="1684-1684", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_943 [label="ProcessLineFeed()", span="1687-1687", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_945 [label="ateWhitespace = true", span="1692-1692", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_947 [label="finished = true", span="1697-1697", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_946 [label="_charPos++", span="1693-1693", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_949 [label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1660-1660", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m2_921 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="JsonTextReader.cs"];
m2_257 [label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582", cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonTextReader.cs"];
m2_120 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m2_121 [label="_charPos + relativePosition >= _charsUsed", span="319-319", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m2_122 [label="return ReadChars(relativePosition, append);", span="321-321", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m2_123 [label="return true;", span="324-324", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m2_124 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m2_182 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m2_183 [label="return (DateTime?)ReadStringValue(ReadType.ReadAsDateTime);", span="432-432", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m2_184 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m2_117 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43", cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextReader.cs"];
m2_86 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_87 [label=_isEndOfFile, span="247-247", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_89 [label="_charsUsed + charsRequired >= _chars.Length - 1", span="253-253", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_90 [label=append, span="255-255", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_91 [label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="258-258", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_97 [label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="273-273", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_98 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, remainingCharCount + charsRequired + 1)", span="276-276", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_88 [label="return 0;", span="249-249", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_108 [label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="302-302", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_96 [label="int remainingCharCount = _charsUsed - _charPos", span="271-271", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_92 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, newArrayLength)", span="261-261", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_93 [label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="263-263", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_95 [label="_chars = dst", span="267-267", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_94 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_99 [label="remainingCharCount > 0", span="278-278", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_100 [label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="280-280", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_103 [label="remainingCharCount > 0", span="290-290", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_104 [label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="292-292", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_107 [label="_charsUsed = remainingCharCount", span="298-298", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_102 [label="_chars = dst", span="285-285", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_101 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="283-283", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_105 [label="_lineStartPos -= _charPos", span="296-296", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_106 [label="_charPos = 0", span="297-297", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_109 [label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_110 [label="_charsUsed += charsRead", span="306-306", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_111 [label="charsRead == 0", span="308-308", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_114 [label="return charsRead;", span="314-314", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_112 [label="_isEndOfFile = true", span="310-310", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_113 [label="_chars[_charsUsed] = '\0'", span="313-313", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_115 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m2_63 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JsonTextReader.cs"];
m2_448 [label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1043-1043", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReader.cs"];
m2_357 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="JsonTextReader.cs"];
m2_65 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="949-949", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonTextReader.cs"];
m2_259 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="806-806", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m2_442 [label="_charPos++", span="808-808", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m2_443 [label="_currentState != State.PostValue", span="810-810", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m2_444 [label="SetToken(JsonToken.Undefined)", span="812-812", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m2_446 [label="SetStateBasedOnCurrent()", span="816-816", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m2_445 [label="throw CreateUnexpectedCharacterException(',');", span="813-813", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m2_447 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="806-806", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonTextReader.cs"];
m2_649 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1201-1201", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_660 [label="char writeChar", span="1203-1203", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_661 [label="EnsureChars(4, true)", span="1204-1204", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_666 [label="return writeChar;", span="1215-1215", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_662 [label="char hexChar = Convert.ToChar(ConvertUtils.HexTextToInt(_chars, _charPos, _charPos + 4))", span="1206-1206", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_665 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="1213-1213", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_663 [label="writeChar = hexChar", span="1207-1207", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_664 [label="_charPos += 4", span="1209-1209", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_667 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1201-1201", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m2_170 [label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="1515-1515", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_835 [label=true, span="1517-1517", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_836 [label="char currentChar = _chars[_charPos]", span="1519-1519", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_837 [label=currentChar, span="1521-1521", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_845 [label="ParseString(currentChar, ReadType.Read)", span="1538-1538", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_907 [label="char.IsWhiteSpace(currentChar)", span="1625-1625", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_909 [label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1631-1631", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_912 [label="throw CreateUnexpectedCharacterException(currentChar);", span="1637-1637", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_838 [label="'\0'", span="1523-1523", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_843 [label="''''", span="1536-1536", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_847 [label="'t'", span="1540-1540", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_850 [label="'f'", span="1543-1543", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_853 [label="'n'", span="1546-1546", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_864 [label="'N'", span="1570-1570", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_867 [label="'I'", span="1573-1573", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_870 [label="'-'", span="1576-1576", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_875 [label="'/'", span="1586-1586", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_878 [label="'u'", span="1589-1589", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_881 [label="'{'", span="1592-1592", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_885 [label="'['", span="1596-1596", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_889 [label="']'", span="1600-1600", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_893 [label="','", span="1604-1604", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_896 [label="')'", span="1609-1609", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_900 [label="StringUtils.CarriageReturn", span="1613-1613", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_902 [label="StringUtils.LineFeed", span="1616-1616", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_904 [label="' '", span="1619-1619", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_839 [label="_charsUsed == _charPos", span="1524-1524", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_840 [label="ReadData(false) == 0", span="1526-1526", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_842 [label="_charPos++", span="1533-1533", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_841 [label="return false;", span="1528-1528", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_844 [label="'\''", span="1537-1537", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_846 [label="return true;", span="1539-1539", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_848 [label="ParseTrue()", span="1541-1541", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_849 [label="return true;", span="1542-1542", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_851 [label="ParseFalse()", span="1544-1544", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_852 [label="return true;", span="1545-1545", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_854 [label="EnsureChars(1, true)", span="1547-1547", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_855 [label="char next = _chars[_charPos + 1]", span="1549-1549", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_861 [label="_charPos++", span="1566-1566", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_856 [label="next == 'u'", span="1551-1551", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_858 [label="next == 'e'", span="1555-1555", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_857 [label="ParseNull()", span="1553-1553", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_859 [label="ParseConstructor()", span="1557-1557", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_860 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="1561-1561", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_862 [label="throw CreateUnexpectedEndException();", span="1567-1567", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_863 [label="return true;", span="1569-1569", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_865 [label="ParseNumberNaN()", span="1571-1571", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_866 [label="return true;", span="1572-1572", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_868 [label="ParseNumberPositiveInfinity()", span="1574-1574", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_869 [label="return true;", span="1575-1575", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_871 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="1577-1577", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_872 [label="ParseNumberNegativeInfinity()", span="1579-1579", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_873 [label="ParseNumber(ReadType.Read)", span="1583-1583", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_874 [label="return true;", span="1585-1585", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_876 [label="ParseComment(true)", span="1587-1587", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_877 [label="return true;", span="1588-1588", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_879 [label="ParseUndefined()", span="1590-1590", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_880 [label="return true;", span="1591-1591", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_882 [label="_charPos++", span="1593-1593", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_883 [label="SetToken(JsonToken.StartObject)", span="1594-1594", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_884 [label="return true;", span="1595-1595", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_886 [label="_charPos++", span="1597-1597", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_887 [label="SetToken(JsonToken.StartArray)", span="1598-1598", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_888 [label="return true;", span="1599-1599", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_890 [label="_charPos++", span="1601-1601", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_891 [label="SetToken(JsonToken.EndArray)", span="1602-1602", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_892 [label="return true;", span="1603-1603", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_894 [label="SetToken(JsonToken.Undefined)", span="1607-1607", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_895 [label="return true;", span="1608-1608", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_897 [label="_charPos++", span="1610-1610", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_898 [label="SetToken(JsonToken.EndConstructor)", span="1611-1611", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_899 [label="return true;", span="1612-1612", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_901 [label="ProcessCarriageReturn(false)", span="1614-1614", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_903 [label="ProcessLineFeed()", span="1617-1617", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_905 [label="StringUtils.Tab", span="1620-1620", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_906 [label="_charPos++", span="1622-1622", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_908 [label="_charPos++", span="1628-1628", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_910 [label="ParseNumber(ReadType.Read)", span="1633-1633", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_911 [label="return true;", span="1634-1634", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_913 [label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="1515-1515", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m2_358 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1789-1789", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_986 [label="ShiftBufferIfNeeded()", span="1791-1791", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_996 [label="readType == ReadType.ReadAsInt32", span="1809-1809", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", color=red, community=0, file="JsonTextReader.cs"];
m2_1013 [label="readType == ReadType.ReadAsDecimal", span="1851-1851", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1028 [label="readType == ReadType.ReadAsDouble", span="1891-1891", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_987 [label="char firstChar = _chars[_charPos]", span="1793-1793", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_988 [label="int initialPosition = _charPos", span="1794-1794", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_994 [label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1806-1806", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_995 [label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1 && _stringReference.Chars[_stringReference.StartIndex + 1] != '.' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1807-1807", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_998 [label="numberValue = firstChar - 48", span="1814-1814", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1015 [label="numberValue = (decimal)firstChar - 48", span="1856-1856", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1030 [label="numberValue = (double)firstChar - 48", span="1896-1896", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1044 [label="numberValue = (long)firstChar - 48", span="1936-1936", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_989 [label="ReadNumberIntoBuffer()", span="1796-1796", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_991 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1801-1801", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_990 [label="SetPostValueState(true)", span="1799-1799", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_992 [label="object numberValue", span="1803-1803", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_993 [label="JsonToken numberType", span="1804-1804", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1075 [label="SetToken(numberType, numberValue, false)", span="2016-2016", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_997 [label=singleDigit, span="1811-1811", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1014 [label=singleDigit, span="1853-1853", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1029 [label=singleDigit, span="1893-1893", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1043 [label=singleDigit, span="1933-1933", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_999 [label=nonBase10, span="1816-1816", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1016 [label=nonBase10, span="1858-1858", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1031 [label=nonBase10, span="1898-1898", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1046 [label=nonBase10, span="1939-1939", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1000 [label="string number = _stringReference.ToString()", span="1818-1818", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1005 [label="int value", span="1833-1833", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1001 [label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt32(number, 16) : Convert.ToInt32(number, 8)", span="1822-1822", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1004 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1828-1828", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1002 [label="numberValue = integer", span="1824-1824", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1003 [label=Exception, span="1826-1826", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1012 [label="numberType = JsonToken.Integer", span="1849-1849", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1006 [label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1834-1834", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1007 [label="parseResult == ParseResult.Success", span="1835-1835", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1008 [label="numberValue = value", span="1837-1837", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1009 [label="parseResult == ParseResult.Overflow", span="1839-1839", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1010 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1841-1841", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1011 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1845-1845", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1017 [label="string number = _stringReference.ToString()", span="1860-1860", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1022 [label="string number = _stringReference.ToString()", span="1876-1876", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1018 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1865-1865", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1021 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1871-1871", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1019 [label="numberValue = Convert.ToDecimal(integer)", span="1867-1867", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1020 [label=Exception, span="1869-1869", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1027 [label="numberType = JsonToken.Float", span="1889-1889", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1023 [label="decimal value", span="1878-1878", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1024 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1879-1879", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1025 [label="numberValue = value", span="1881-1881", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1026 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1885-1885", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1032 [label="string number = _stringReference.ToString()", span="1900-1900", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1037 [label="string number = _stringReference.ToString()", span="1916-1916", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1033 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1905-1905", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1036 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1911-1911", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1034 [label="numberValue = Convert.ToDouble(integer)", span="1907-1907", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1035 [label=Exception, span="1909-1909", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1042 [label="numberType = JsonToken.Float", span="1929-1929", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1038 [label="double value", span="1918-1918", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1039 [label="double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1919-1919", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1040 [label="numberValue = value", span="1921-1921", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1041 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1925-1925", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1045 [label="numberType = JsonToken.Integer", span="1937-1937", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1047 [label="string number = _stringReference.ToString()", span="1941-1941", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1052 [label="long value", span="1956-1956", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1048 [label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1945-1945", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1050 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1949-1949", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1049 [label=Exception, span="1947-1947", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1051 [label="numberType = JsonToken.Integer", span="1952-1952", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1053 [label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1957-1957", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1054 [label="parseResult == ParseResult.Success", span="1958-1958", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1055 [label="numberValue = value", span="1960-1960", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1057 [label="parseResult == ParseResult.Overflow", span="1963-1963", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1056 [label="numberType = JsonToken.Integer", span="1961-1961", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1058 [label="string number = _stringReference.ToString()", span="1966-1966", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1063 [label="string number = _stringReference.ToString()", span="1981-1981", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1059 [label="number.Length > MaximumJavascriptIntegerCharacterLength", span="1968-1968", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1061 [label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="1973-1973", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1060 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1970-1970", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1062 [label="numberType = JsonToken.Integer", span="1974-1974", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1064 [label="_floatParseHandling == FloatParseHandling.Decimal", span="1983-1983", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1066 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="1986-1986", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1068 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1992-1992", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1070 [label="double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="1998-1998", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1072 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2004-2004", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1065 [label="decimal d", span="1985-1985", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1069 [label="double d", span="1997-1997", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1067 [label="numberValue = d", span="1988-1988", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1071 [label="numberValue = d", span="2000-2000", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1073 [label="numberType = JsonToken.Float", span="2008-2008", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1074 [label="ClearRecentString()", span="2013-2013", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1076 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1789-1789", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonTextReader.cs"];
m2_1083 [label="Entry System.Convert.ToDecimal(long)", span="0-0", cluster="System.Convert.ToDecimal(long)", file="JsonTextReader.cs"];
m2_178 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m2_179 [label="return (int?)ReadNumberValue(ReadType.ReadAsInt32);", span="423-423", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m2_180 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m2_171 [label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="1359-1359", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_758 [label=true, span="1361-1361", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_759 [label="char currentChar = _chars[_charPos]", span="1363-1363", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_760 [label=currentChar, span="1365-1365", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_780 [label="char.IsWhiteSpace(currentChar)", span="1399-1399", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_761 [label="'\0'", span="1367-1367", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_766 [label="'}'", span="1380-1380", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_770 [label="'/'", span="1384-1384", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_773 [label="StringUtils.CarriageReturn", span="1387-1387", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_775 [label="StringUtils.LineFeed", span="1390-1390", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_777 [label="' '", span="1393-1393", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_762 [label="_charsUsed == _charPos", span="1368-1368", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_763 [label="ReadData(false) == 0", span="1370-1370", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_765 [label="_charPos++", span="1377-1377", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_764 [label="return false;", span="1372-1372", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_767 [label="SetToken(JsonToken.EndObject)", span="1381-1381", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_768 [label="_charPos++", span="1382-1382", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_769 [label="return true;", span="1383-1383", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_771 [label="ParseComment(true)", span="1385-1385", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_772 [label="return true;", span="1386-1386", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_774 [label="ProcessCarriageReturn(false)", span="1388-1388", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_776 [label="ProcessLineFeed()", span="1391-1391", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_778 [label="StringUtils.Tab", span="1394-1394", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_779 [label="_charPos++", span="1396-1396", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_781 [label="_charPos++", span="1402-1402", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_782 [label="return ParseProperty();", span="1406-1406", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_783 [label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="1359-1359", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m2_1080 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextReader.cs"];
m2_1231 [label="Newtonsoft.Json.JsonTextReader", span="", file="JsonTextReader.cs"];
m3_118 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonTextReaderTest.cs"];
m3_839 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1360-1360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_840 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1362-1362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_841 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="1364-1364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_842 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1360-1360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_1869 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", span="2878-2878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1870 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false}''))", span="2880-2880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1871 [label="Assert.IsTrue(reader.Read())", span="2882-2882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1872 [label="Assert.IsTrue(reader.Read())", span="2883-2883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1875 [label="Assert.IsTrue(reader.Read())", span="2888-2888", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1876 [label="Assert.IsFalse(reader.Read())", span="2889-2889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1874 [label="Assert.AreEqual(''false'', s)", span="2886-2886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1873 [label="string s = reader.ReadAsString()", span="2885-2885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1877 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", span="2878-2878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean()", file="JsonTextReaderTest.cs"];
m3_1148 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextReaderTest.cs"];
m3_215 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_217 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="384-384", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_218 [label="Assert.IsTrue(jsonTextReader.Read())", span="386-386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_220 [label="Assert.IsTrue(jsonTextReader.Read())", span="389-389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_222 [label="Assert.IsTrue(jsonTextReader.Read())", span="392-392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_225 [label="Assert.IsTrue(jsonTextReader.Read())", span="396-396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_227 [label="Assert.IsFalse(jsonTextReader.Read())", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_219 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="387-387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_221 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="390-390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_223 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_224 [label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="394-394", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_226 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="397-397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_216 [label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="380-382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_228 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m3_1163 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1810-1810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1166 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1820-1820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1165 [label="StringReader sr = new StringReader(input)", span="1818-1818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1168 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1823-1823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1170 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1826-1826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1171 [label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1827-1827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1173 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1830-1830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1174 [label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1831-1831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1176 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1834-1834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1177 [label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1835-1835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1179 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1838-1838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1167 [label="jsonReader.Read()", span="1822-1822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1169 [label="jsonReader.Read()", span="1825-1825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1172 [label="jsonReader.Read()", span="1829-1829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1175 [label="jsonReader.Read()", span="1833-1833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1178 [label="jsonReader.Read()", span="1837-1837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1164 [label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1812-1816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_1180 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1810-1810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m3_674 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs"];
m3_675 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''n''))", span="1099-1099", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs"];
m3_676 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="1100-1100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs"];
m3_677 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingN()", file="JsonTextReaderTest.cs"];
m3_1543 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2369-2369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1545 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1546 [label="Assert.IsTrue(reader.Read())", span="2375-2375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1548 [label="Assert.IsTrue(reader.Read())", span="2378-2378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1554 [label="Assert.IsTrue(reader.Read())", span="2386-2386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1547 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2376-2376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1549 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2379-2379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1551 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2382-2382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1552 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2383-2383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1553 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2384-2384", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1555 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2387-2387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1544 [label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2371-2371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1550 [label="reader.ReadAsDateTimeOffset()", span="2381-2381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_1556 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2369-2369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m3_23 [label="DiagnosticsTrace.AutoFlush", span="67-67", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonTextReaderTest.cs"];
m3_1541 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReaderTest.cs"];
m3_871 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonTextReaderTest.cs"];
m3_880 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1406-1406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_887 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1445-1445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_884 [label="StringReader sr = new StringReader(newLinesText)", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_888 [label="Assert.IsTrue(reader.Read())", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_890 [label="Assert.IsTrue(reader.Read())", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_893 [label="Assert.IsTrue(reader.Read())", span="1453-1453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_895 [label="Assert.IsTrue(reader.Read())", span="1456-1456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_899 [label="Assert.IsTrue(reader.Read())", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_902 [label="Assert.IsTrue(reader.Read())", span="1465-1465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_905 [label="Assert.IsTrue(reader.Read())", span="1469-1469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_908 [label="Assert.IsTrue(reader.Read())", span="1473-1473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_910 [label="Assert.IsTrue(reader.Read())", span="1476-1476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_912 [label="Assert.IsTrue(reader.Read())", span="1479-1479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_914 [label="Assert.IsTrue(reader.Read())", span="1482-1482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_917 [label="Assert.IsTrue(reader.Read())", span="1486-1486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_919 [label="Assert.IsTrue(reader.Read())", span="1489-1489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_921 [label="Assert.IsTrue(reader.Read())", span="1492-1492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_892 [label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1451-1451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_907 [label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1471-1471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_889 [label="Assert.AreEqual(7, reader.LineNumber)", span="1447-1447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_891 [label="Assert.AreEqual(31, reader.LineNumber)", span="1450-1450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_894 [label="Assert.AreEqual(37, reader.LineNumber)", span="1454-1454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_896 [label="Assert.AreEqual(55, reader.LineNumber)", span="1457-1457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_897 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1458-1458", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_898 [label="Assert.AreEqual(''Date'', reader.Value)", span="1459-1459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_900 [label="Assert.AreEqual(61, reader.LineNumber)", span="1462-1462", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_901 [label="Assert.AreEqual(1L, reader.Value)", span="1463-1463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_903 [label="Assert.AreEqual(73, reader.LineNumber)", span="1466-1466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_904 [label="Assert.AreEqual(null, reader.Value)", span="1467-1467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_906 [label="Assert.AreEqual(91, reader.LineNumber)", span="1470-1470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_909 [label="Assert.AreEqual(97, reader.LineNumber)", span="1474-1474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_911 [label="Assert.AreEqual(109, reader.LineNumber)", span="1477-1477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_913 [label="Assert.AreEqual(115, reader.LineNumber)", span="1480-1480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_915 [label="Assert.AreEqual(133, reader.LineNumber)", span="1483-1483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_916 [label="Assert.AreEqual(''name2'', reader.Value)", span="1484-1484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_918 [label="Assert.AreEqual(139, reader.LineNumber)", span="1487-1487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_920 [label="Assert.AreEqual(145, reader.LineNumber)", span="1490-1490", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_922 [label="Assert.AreEqual(151, reader.LineNumber)", span="1493-1493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_882 [label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1410-1436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_885 [label="sr.ReadLine() != null", span="1440-1440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_881 [label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1408-1408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_883 [label="int count = 0", span="1438-1438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_886 [label="count++", span="1442-1442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_923 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1406-1406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m3_2790 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", span="4239-4239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs"];
m3_2794 [label="Assert.AreEqual(1, UnmanagedResourceFakingJsonReader.DisposalCalls)", span="4244-4244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs"];
m3_2793 [label="GC.WaitForPendingFinalizers()", span="4243-4243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs"];
m3_2792 [label="GC.Collect()", span="4242-4242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs"];
m3_2791 [label="UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4241-4241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs"];
m3_2795 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", span="4239-4239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DisposeSupressesFinalization()", file="JsonTextReaderTest.cs"];
m3_2423 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", span="3730-3730", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2425 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3734-3734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2424 [label="string json = @''tru''", span="3732-3732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2426 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3736-3736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2427 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", span="3730-3730", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_1902 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2927-2927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_1904 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2930-2930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_1903 [label="string json = ''new Date,()''", span="2929-2929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_1905 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2932-2932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_1906 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2927-2927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_861 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JsonTextReaderTest.cs"];
m3_135 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="259-259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_137 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="266-266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_138 [label="Assert.IsTrue(jsonTextReader.Read())", span="268-268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_140 [label="Assert.IsTrue(jsonTextReader.Read())", span="271-271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_142 [label="Assert.IsTrue(jsonTextReader.Read())", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_144 [label="Assert.IsTrue(jsonTextReader.Read())", span="277-277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_146 [label="Assert.IsTrue(jsonTextReader.Read())", span="280-280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_150 [label="Assert.IsTrue(jsonTextReader.Read())", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_152 [label="Assert.IsFalse(jsonTextReader.Read())", span="288-288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_139 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_141 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="272-272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_143 [label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="275-275", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_145 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="278-278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_147 [label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="281-281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_148 [label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="282-282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_149 [label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="283-283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_151 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_155 [label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="292-292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_136 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="261-264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_153 [label="JObject o = JObject.Parse(json)", span="290-290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_154 [label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="291-291", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_156 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="259-259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m3_1591 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2442-2442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1593 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2446-2446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1594 [label="Assert.IsTrue(reader.Read())", span="2448-2448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1596 [label="Assert.IsTrue(reader.Read())", span="2451-2451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1595 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2449-2449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1597 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2452-2452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1599 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2455-2455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1600 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2456-2456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1601 [label="Assert.AreEqual(1m, reader.Value)", span="2457-2457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1592 [label="string json = @''{''''Name'''':1}''", span="2444-2444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1598 [label="reader.ReadAsDecimal()", span="2454-2454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1602 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2442-2442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m3_1150 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs"];
m3_373 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="609-609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m3_375 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m3_374 [label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="611-630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m3_376 [label="jsonReader.Read()", span="634-634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m3_377 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="609-609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m3_397 [label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonTextReaderTest.cs"];
m3_2361 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", span="3649-3649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs"];
m3_2363 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3653-3653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs"];
m3_2364 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3655-3655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs"];
m3_2365 [label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3656-3656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs"];
m3_2362 [label="string json = '\0' + @''true'' + '\0' + '\0'", span="3651-3651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs"];
m3_2366 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", span="3649-3649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_NullChar()", file="JsonTextReaderTest.cs"];
m3_1574 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextReaderTest.cs"];
m3_1542 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonTextReaderTest.cs"];
m3_24 [label="listener.Flush()", span="68-68", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonTextReaderTest.cs"];
m3_2501 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3839-3839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m3_2503 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3843-3846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m3_2504 [label="Assert.IsTrue(reader.Read())", span="3848-3848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m3_2502 [label="string json = ''[[]]''", span="3841-3841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m3_2505 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3850-3850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m3_2506 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="3839-3839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m3_1156 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1033-1033", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs"];
m3_159 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="400-400", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReaderTest.cs"];
m3_1209 [label="Entry System.Convert.ToInt32(char)", span="0-0", cluster="System.Convert.ToInt32(char)", file="JsonTextReaderTest.cs"];
m3_1435 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2208-2208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m3_1436 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="2210-2210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m3_1437 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="2212-2212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m3_1438 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="2208-2208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m3_1295 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextReaderTest.cs"];
m3_2641 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="4032-4032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2643 [label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="4035-4035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2642 [label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="4034-4034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2644 [label="Assert.IsTrue(jsonTextReader.Read())", span="4037-4037", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2649 [label="Assert.IsTrue(jsonTextReader.Read())", span="4046-4046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2654 [label="Assert.IsTrue(jsonTextReader.Read())", span="4055-4055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2650 [label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="4047-4047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2655 [label="Assert.AreEqual(1L, jsonTextReader.Value)", span="4056-4056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2646 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4041-4041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2647 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4042-4042", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2652 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4051-4051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2657 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4060-4060", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2658 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4061-4061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2659 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="4062-4062", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2645 [label="toggleReaderError.Error = true", span="4039-4039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2648 [label="toggleReaderError.Error = false", span="4044-4044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2651 [label="toggleReaderError.Error = true", span="4049-4049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2653 [label="toggleReaderError.Error = false", span="4053-4053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2656 [label="toggleReaderError.Error = true", span="4058-4058", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2660 [label="toggleReaderError.Error = false", span="4064-4064", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_2661 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="4032-4032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m3_333 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonTextReaderTest.cs"];
m3_1028 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="JsonTextReaderTest.cs"];
m3_2353 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", span="3639-3639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2355 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3643-3643", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2354 [label="string json = @''tru''", span="3641-3641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2356 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3645-3645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2357 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", span="3639-3639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2499 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m3_2782 [label="Entry System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", span="0-0", cluster="System.Net.Sockets.TcpListener.TcpListener(System.Net.IPAddress, int)", file="JsonTextReaderTest.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", span="64-64", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs"];
m3_1 [label="string json = ''[9223372036854775807, 1.7976931348623157E+308, 792281625142643375935439503.35, 792281625142643375935555555555555555555555555555555555555555555555555439503.35]''", span="66-66", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_2 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="68-68", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_4 [label="Assert.IsTrue(reader.Read())", span="71-71", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_6 [label="Assert.AreEqual(''9223372036854775807'', reader.ReadAsString())", span="74-74", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_8 [label="Assert.AreEqual(''9223372036854775807'', reader.Value)", span="76-76", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_10 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="79-79", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_3 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="69-69", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_5 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="72-72", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_7 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_9 [label="Assert.AreEqual(''1.7976931348623157E+308'', reader.ReadAsString())", span="78-78", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_11 [label="Assert.AreEqual(''1.7976931348623157E+308'', reader.Value)", span="80-80", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_ReadAsString()", file="JsonTextReaderTest.cs", color=green, community=0];
m3_832 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m3_833 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1354-1354", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m3_834 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1356-1356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m3_835 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m3_1335 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1337 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2071-2071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1336 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2070-2070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1338 [label="Assert.IsTrue(jsonReader.Read())", span="2073-2073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1352 [label="Assert.IsTrue(jsonReader.Read())", span="2091-2091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1354 [label="Assert.IsFalse(jsonReader.Read())", span="2094-2094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1339 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2074-2074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1341 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1342 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2078-2078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1343 [label="Assert.AreEqual(250, jsonReader.Value)", span="2079-2079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1345 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2082-2082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1346 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2083-2083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1347 [label="Assert.AreEqual(250, jsonReader.Value)", span="2084-2084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1349 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2087-2087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1350 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="2088-2088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1351 [label="Assert.AreEqual(250, jsonReader.Value)", span="2089-2089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1353 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2092-2092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1340 [label="jsonReader.ReadAsInt32()", span="2076-2076", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1344 [label="jsonReader.ReadAsInt32()", span="2081-2081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1348 [label="jsonReader.ReadAsInt32()", span="2086-2086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1355 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m3_1911 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2936-2936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1913 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2939-2939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1914 [label="Assert.IsTrue(reader.Read())", span="2941-2941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1916 [label="Assert.IsTrue(reader.Read())", span="2944-2944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1918 [label="Assert.IsTrue(reader.Read())", span="2947-2947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1920 [label="Assert.IsTrue(reader.Read())", span="2950-2950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1922 [label="Assert.IsTrue(reader.Read())", span="2953-2953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1924 [label="Assert.IsTrue(reader.Read())", span="2956-2956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1926 [label="Assert.IsTrue(reader.Read())", span="2959-2959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1928 [label="Assert.IsTrue(reader.Read())", span="2962-2962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1930 [label="Assert.IsTrue(reader.Read())", span="2965-2965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1932 [label="Assert.IsFalse(reader.Read())", span="2968-2968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1915 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2942-2942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1917 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2945-2945", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1919 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2948-2948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1921 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2951-2951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1923 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2954-2954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1925 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2957-2957", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1927 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2960-2960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1929 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2963-2963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1931 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2966-2966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1912 [label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2938-2938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_1933 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2936-2936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m3_2662 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="4317-4317", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m3_2835 [label="_inner = inner", span="4319-4319", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m3_2836 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="4317-4317", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m3_1689 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="JsonTextReaderTest.cs"];
m3_1987 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", span="3051-3051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1988 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="3053-3053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1989 [label="reader.Read()", span="3054-3054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1993 [label="Assert.IsTrue(reader.Read())", span="3063-3063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1990 [label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3055-3055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1991 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="3057-3060", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1992 [label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3062-3062", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1994 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", span="3051-3051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_26 [label="Entry System.Diagnostics.TraceEventCache.TraceEventCache()", span="0-0", cluster="System.Diagnostics.TraceEventCache.TraceEventCache()", file="JsonTextReaderTest.cs"];
m3_157 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonTextReaderTest.cs"];
m3_2739 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", span="4176-4176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2753 [label="var jsonTextReader = new JsonTextReader(sr)", span="4215-4215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2754 [label="jsonTextReader.Read()", span="4217-4217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2752 [label="var sr = new StreamReader(stream, new UTF8Encoding(), false)", span="4214-4214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2758 [label="Console.WriteLine($''{i} - {jsonTextReader.TokenType} - {jsonTextReader.Value}'')", span="4226-4226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2755 [label="i++", span="4219-4219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2759 [label="clientReceivedEvent.Set()", span="4232-4232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2749 [label="var stream = new NetworkStream(socket)", span="4210-4210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2751 [label="int i = 0", span="4213-4213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2756 [label="i == 193", span="4221-4221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2757 [label="string s = string.Empty", span="4223-4223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2743 [label="var clientReceivedEvent = new ManualResetEvent(false)", span="4182-4182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2760 [label="Console.WriteLine(''Done'')", span="4234-4234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2750 [label="var serializer = new JsonSerializer()", span="4211-4211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2748 [label="socket.Connect(''127.0.0.1'', port)", span="4208-4208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2746 [label="var socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)", span="4206-4206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2742 [label="var serverStartedEvent = new ManualResetEvent(false)", span="4181-4181", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2744 [label="ThreadPool.QueueUserWorkItem(work =>\r\n            {\r\n                var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port);\r\n                server.Start();\r\n\r\n                serverStartedEvent.Set();\r\n\r\n                var serverSocket = server.AcceptSocket();\r\n\r\n                var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']'';\r\n                var bytes = new UTF8Encoding().GetBytes(jsonString);\r\n                serverSocket.Send(bytes);\r\n                Console.WriteLine(''server send: '' + bytes.Length);\r\n\r\n\r\n                clientReceivedEvent.WaitOne();\r\n\r\n            })", span="4184-4201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2740 [label="int port = 11999", span="4178-4178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2747 [label="socket.Blocking = false", span="4207-4207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2745 [label="serverStartedEvent.WaitOne()", span="4203-4203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2741 [label="int jsonArrayElementsCount = 193", span="4179-4179", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_2761 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", span="4176-4176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFromNetworkStream()", file="JsonTextReaderTest.cs"];
m3_695 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_697 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1122-1122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_698 [label="reader.Read()", span="1123-1123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_699 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1124-1124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_696 [label="long i = int.MaxValue", span="1120-1120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_703 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="1129-1133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_702 [label="long total = j + i", span="1128-1128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_700 [label="int j = 1", span="1126-1126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_704 [label="j++", span="1126-1126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_701 [label="j < 1000", span="1126-1126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_705 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m3_27 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", span="95-95", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_1400 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", span="2162-2162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs"];
m3_1401 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''\r\nnew Date()''))", span="2164-2165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs"];
m3_1402 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 2, position 2.'')", span="2167-2167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs"];
m3_1403 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", span="2162-2162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent_SecondLine()", file="JsonTextReaderTest.cs"];
m3_2639 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextReaderTest.cs"];
m3_2770 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="JsonTextReaderTest.cs"];
m3_379 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="641-641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_381 [label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="645-645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_382 [label="Assert.IsTrue(reader.Read())", span="647-647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_383 [label="Assert.IsTrue(reader.Read())", span="648-648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_384 [label="Assert.IsTrue(reader.Read())", span="649-649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_387 [label="Assert.IsTrue(reader.Read())", span="653-653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_389 [label="Assert.IsTrue(reader.Read())", span="656-656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_391 [label="Assert.IsTrue(reader.Read())", span="659-659", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_393 [label="Assert.IsTrue(reader.Read())", span="662-662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_385 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="650-650", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_386 [label="Assert.AreEqual(''Date'', reader.Value)", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_388 [label="Assert.AreEqual(0L, reader.Value)", span="654-654", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_390 [label="Assert.AreEqual(''hi'', reader.Value)", span="657-657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_392 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="660-660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_394 [label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="663-663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_380 [label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="643-643", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_395 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="641-641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m3_872 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1397-1397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m3_873 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1399-1399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m3_874 [label="Assert.IsTrue(reader.Read())", span="1400-1400", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m3_875 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1402-1402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m3_876 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1397-1397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m3_1181 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1843-1843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1184 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1848-1848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1185 [label="reader.Read()", span="1850-1850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1187 [label="reader.Read()", span="1853-1853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1191 [label="Assert.IsTrue(reader.Read())", span="1858-1858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1193 [label="Assert.IsFalse(reader.Read())", span="1861-1861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1186 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1851-1851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1188 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1854-1854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1189 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1855-1855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1190 [label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1856-1856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1192 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1859-1859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1194 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1862-1862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1183 [label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1846-1846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1182 [label="int length = 20000", span="1845-1845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_1195 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1843-1843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m3_2037 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", span="3124-3124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2039 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3128-3128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2040 [label="reader.Read()", span="3130-3130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2042 [label="Assert.AreEqual(''[0]'', reader.Path)", span="3132-3132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2044 [label="Assert.AreEqual(''[1]'', reader.Path)", span="3134-3134", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2046 [label="Assert.AreEqual(''[2]'', reader.Path)", span="3136-3136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2048 [label="Assert.AreEqual(''[3]'', reader.Path)", span="3138-3138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2050 [label="Assert.AreEqual(''[4]'', reader.Path)", span="3140-3140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2052 [label="Assert.AreEqual(''[5]'', reader.Path)", span="3142-3142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2054 [label="Assert.AreEqual(''[6]'', reader.Path)", span="3144-3144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2056 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3147-3147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2058 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3150-3150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2060 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3153-3153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2049 [label="reader.ReadAsString()", span="3139-3139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2055 [label="Assert.IsNull(reader.ReadAsString())", span="3146-3146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2057 [label="Assert.IsNull(reader.ReadAsString())", span="3149-3149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2038 [label="string json = @''['','','','','','','']''", span="3126-3126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2041 [label="reader.ReadAsInt32()", span="3131-3131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2043 [label="reader.ReadAsDecimal()", span="3133-3133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2045 [label="reader.ReadAsDateTime()", span="3135-3135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2047 [label="reader.ReadAsDateTimeOffset()", span="3137-3137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2051 [label="reader.ReadAsBytes()", span="3141-3141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2053 [label="reader.ReadAsDouble()", span="3143-3143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2059 [label="Assert.IsNull(reader.ReadAsBytes())", span="3152-3152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_2061 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", span="3124-3124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValue_EmptyString_Position()", file="JsonTextReaderTest.cs"];
m3_1855 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", span="2856-2856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs"];
m3_1856 [label="JsonTextReader reader = new JsonTextReader(new StringReader('''1,112.34'''))", span="2858-2858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs"];
m3_1857 [label="Assert.AreEqual(1112.34d, reader.ReadAsDouble())", span="2859-2859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs"];
m3_1858 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", span="2856-2856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_AllowThousands()", file="JsonTextReaderTest.cs"];
m3_632 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonTextReaderTest.cs"];
m3_2329 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", span="3609-3609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2331 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3613-3613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2330 [label="string json = @''nullllll''", span="3611-3611", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2332 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="3615-3615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2333 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", span="3609-3609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2699 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="4098-4098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m3_2700 [label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="4100-4110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m3_2701 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source', line 6, position 20.'')", span="4112-4120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m3_2702 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="4098-4098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m3_372 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2349-2349", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m3_83 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="172-172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_85 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="182-182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_86 [label="Assert.IsTrue(jsonTextReader.Read())", span="183-183", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_88 [label="Assert.IsTrue(jsonTextReader.Read())", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_90 [label="Assert.IsTrue(jsonTextReader.Read())", span="189-189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_92 [label="Assert.IsTrue(jsonTextReader.Read())", span="192-192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_95 [label="Assert.IsTrue(jsonTextReader.Read())", span="196-196", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_98 [label="Assert.IsTrue(jsonTextReader.Read())", span="200-200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_101 [label="Assert.IsTrue(jsonTextReader.Read())", span="204-204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_103 [label="Assert.IsTrue(jsonTextReader.Read())", span="207-207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_87 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="184-184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_89 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="187-187", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_91 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="190-190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_93 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="193-193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_94 [label="Assert.AreEqual(''src'', jsonTextReader.Value)", span="194-194", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_96 [label="Assert.AreEqual(JsonToken.Comment, jsonTextReader.TokenType)", span="197-197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_97 [label="Assert.AreEqual(@'''''''', jsonTextReader.Value)", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_99 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="201-201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_100 [label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="202-202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_102 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="205-205", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_104 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="208-208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_84 [label="string json = @''{\r\n    ''''projects'''': [\r\n        ''''src'''',\r\n        //''''\r\n        ''''test''''\r\n    ]\r\n}''", span="174-180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_105 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="172-172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m3_1846 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="943-943", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonTextReaderTest.cs"];
m3_1001 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1631-1631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1003 [label="reader = new JsonTextReader(new StringReader(''1''))", span="1635-1635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1005 [label="reader = new JsonTextReader(new StringReader(''-1''))", span="1638-1638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1007 [label="reader = new JsonTextReader(new StringReader(''0''))", span="1641-1641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1009 [label="reader = new JsonTextReader(new StringReader(''-0''))", span="1644-1644", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1011 [label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1647-1647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1013 [label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1650-1650", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1015 [label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1653-1653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1017 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1656-1656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1019 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1659-1659", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1021 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1662-1662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1023 [label="reader = new JsonTextReader(new StringReader(''''))", span="1665-1665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1025 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1668-1668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1004 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1636-1636", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1006 [label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1639-1639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1008 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1642-1642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1010 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1645-1645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1012 [label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1648-1648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1014 [label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1651-1651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1024 [label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1666-1666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1002 [label="JsonTextReader reader = null", span="1633-1633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1016 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1654-1654", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1018 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1657-1657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1020 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1660-1660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1022 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1663-1663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1026 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1669-1669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_1027 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1631-1631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m3_2446 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3764-3764", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m3_2447 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="3766-3766", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m3_2448 [label="Assert.IsTrue(reader.Read())", span="3767-3767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m3_2449 [label="Assert.IsTrue(reader.Read())", span="3768-3768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m3_2450 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="3770-3770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m3_2451 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="3764-3764", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m3_321 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_323 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="528-528", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_324 [label="Assert.IsTrue(reader.Read())", span="530-530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_325 [label="Assert.IsTrue(reader.Read())", span="531-531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_326 [label="Assert.IsTrue(reader.Read())", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_327 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="534-534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_329 [label="Assert.AreEqual(2, s.Length)", span="537-537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_331 [label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_322 [label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="526-526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_328 [label="string s = reader.Value.ToString()", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_330 [label="StringInfo stringInfo = new StringInfo(s)", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_332 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m3_1314 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="2038-2038", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1316 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2041-2041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1315 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2040-2040", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1317 [label="Assert.IsTrue(jsonReader.Read())", span="2043-2043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1319 [label="jsonReader.Read()", span="2046-2046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1323 [label="jsonReader.Read()", span="2051-2051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1327 [label="jsonReader.Read()", span="2056-2056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1331 [label="Assert.IsTrue(jsonReader.Read())", span="2061-2061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1333 [label="Assert.IsFalse(jsonReader.Read())", span="2064-2064", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1318 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2044-2044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1320 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2047-2047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1321 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2048-2048", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1322 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2049-2049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1324 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2052-2052", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1325 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2053-2053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1326 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2054-2054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1328 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2057-2057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1329 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="2058-2058", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1330 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1332 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2062-2062", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1334 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="2038-2038", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m3_1969 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", span="3024-3024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1970 [label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3026-3026", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1971 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3028-3031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1972 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", span="3024-3024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_116 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_1364 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2108-2108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m3_1365 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2110-2110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m3_1367 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2113-2113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m3_1366 [label="Assert.IsNull(reader.ReadAsDecimal())", span="2112-2112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m3_1368 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="2108-2108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m3_756 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1201-1201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_758 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1218-1218", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_761 [label="Assert.IsTrue(reader.Read())", span="1225-1225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_763 [label="Assert.IsTrue(reader.Read())", span="1228-1228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_764 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_765 [label="Assert.AreEqual(''type'', reader.Value)", span="1230-1230", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_757 [label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1203-1216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_759 [label="int i = 0", span="1223-1223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_760 [label="i < 14", span="1223-1223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_762 [label="i++", span="1223-1223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_766 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1201-1201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m3_1210 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1889-1889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1212 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1894-1894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1214 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1897-1897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1216 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1900-1900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1217 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1901-1901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1219 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1904-1904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1220 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1905-1905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1222 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1908-1908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1223 [label="Assert.AreEqual(0.1, jsonReader.Value)", span="1909-1909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1225 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1912-1912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1226 [label="Assert.AreEqual(1.0, jsonReader.Value)", span="1913-1913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1228 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1916-1916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1229 [label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1917-1917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1231 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1920-1920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1232 [label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1921-1921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1234 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1924-1924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1235 [label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1925-1925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1237 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1928-1928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1238 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1929-1929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1240 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1932-1932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1241 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1933-1933", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1243 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1936-1936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1244 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1937-1937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1246 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1940-1940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1247 [label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1941-1941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1249 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1944-1944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1250 [label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1945-1945", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1252 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1948-1948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1253 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1949-1949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1255 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1952-1952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1256 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1953-1953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1258 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1956-1956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1259 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1957-1957", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1261 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1960-1960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1262 [label="Assert.AreEqual(0d, jsonReader.Value)", span="1961-1961", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1264 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1964-1964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1265 [label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1965-1965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1267 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1968-1968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1268 [label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1969-1969", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1270 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1972-1972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1211 [label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1891-1892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1213 [label="jsonReader.Read()", span="1896-1896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1215 [label="jsonReader.Read()", span="1899-1899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1218 [label="jsonReader.Read()", span="1903-1903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1221 [label="jsonReader.Read()", span="1907-1907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1224 [label="jsonReader.Read()", span="1911-1911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1227 [label="jsonReader.Read()", span="1915-1915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1230 [label="jsonReader.Read()", span="1919-1919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1233 [label="jsonReader.Read()", span="1923-1923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1236 [label="jsonReader.Read()", span="1927-1927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1239 [label="jsonReader.Read()", span="1931-1931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1242 [label="jsonReader.Read()", span="1935-1935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1245 [label="jsonReader.Read()", span="1939-1939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1248 [label="jsonReader.Read()", span="1943-1943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1251 [label="jsonReader.Read()", span="1947-1947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1254 [label="jsonReader.Read()", span="1951-1951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1257 [label="jsonReader.Read()", span="1955-1955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1260 [label="jsonReader.Read()", span="1959-1959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1263 [label="jsonReader.Read()", span="1963-1963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1266 [label="jsonReader.Read()", span="1967-1967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1269 [label="jsonReader.Read()", span="1971-1971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1271 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1889-1889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m3_1575 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2416-2416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1577 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2420-2420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1579 [label="Assert.IsTrue(reader.Read())", span="2423-2423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1581 [label="Assert.IsTrue(reader.Read())", span="2426-2426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1588 [label="Assert.IsTrue(reader.Read())", span="2436-2436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1580 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2424-2424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1582 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2427-2427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1584 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2430-2430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1585 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2431-2431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1589 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2437-2437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1587 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2434-2434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1576 [label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2418-2418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1578 [label="reader.Culture = new CultureInfo(''en-NZ'')", span="2421-2421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1583 [label="reader.ReadAsDateTimeOffset()", span="2429-2429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1586 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2433-2433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_1590 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2416-2416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m3_2785 [label="Entry System.Net.Sockets.TcpListener.AcceptSocket()", span="0-0", cluster="System.Net.Sockets.TcpListener.AcceptSocket()", file="JsonTextReaderTest.cs"];
m3_29 [label="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter", span="", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_39 [label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="114-114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_57 [label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="138-138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_30 [label="Assert.IsTrue(jsonTextReader.Read())", span="101-101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_34 [label="Assert.IsTrue(jsonTextReader.Read())", span="106-106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_40 [label="Assert.IsTrue(jsonTextReader.Read())", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_44 [label="Assert.IsTrue(jsonTextReader.Read())", span="121-121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_48 [label="Assert.IsTrue(jsonTextReader.Read())", span="126-126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_52 [label="Assert.IsTrue(jsonTextReader.Read())", span="131-131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_58 [label="Assert.IsTrue(jsonTextReader.Read())", span="140-140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_62 [label="Assert.IsTrue(jsonTextReader.Read())", span="145-145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_66 [label="Assert.IsTrue(jsonTextReader.Read())", span="150-150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_70 [label="Assert.IsTrue(jsonTextReader.Read())", span="155-155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_74 [label="Assert.IsTrue(jsonTextReader.Read())", span="160-160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_78 [label="Assert.IsTrue(jsonTextReader.Read())", span="165-165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_31 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="102-102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_32 [label="Assert.AreEqual(1, jsonTextReader.LineNumber)", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_33 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="104-104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_35 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="108-108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_36 [label="Assert.AreEqual(1, jsonTextReader.LineNumber)", span="109-109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_37 [label="Assert.AreEqual(2, jsonTextReader.LinePosition)", span="110-110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_41 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="117-117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_42 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="118-118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_43 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="119-119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_45 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="122-122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_46 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="123-123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_47 [label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="124-124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_49 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="127-127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_50 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="128-128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_51 [label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="129-129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_53 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="132-132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_54 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="133-133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_55 [label="Assert.AreEqual(10, jsonTextReader.LinePosition)", span="134-134", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_59 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="141-141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_60 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="142-142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_61 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_63 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="146-146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_64 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_65 [label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="148-148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_67 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="151-151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_68 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="152-152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_69 [label="Assert.AreEqual(4, jsonTextReader.LinePosition)", span="153-153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_71 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="156-156", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_72 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="157-157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_73 [label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="158-158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_75 [label="Assert.AreEqual(JsonToken.Boolean, jsonTextReader.TokenType)", span="161-161", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_76 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="162-162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_77 [label="Assert.AreEqual(13, jsonTextReader.LinePosition)", span="163-163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_79 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_80 [label="Assert.AreEqual(4, jsonTextReader.LineNumber)", span="167-167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_81 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="168-168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_28 [label="Entry System.Diagnostics.TraceListener.Flush()", span="0-0", cluster="System.Diagnostics.TraceListener.Flush()", file="JsonTextReaderTest.cs"];
m3_38 [label="json = ''\n{\''a\'':\''bc\''}''", span="112-112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_56 [label="json = ''\n{\''a\'':\n\''bc\'',\''d\'':true\n}''", span="136-136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_82 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", span="95-95", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LineInfoAndNewLines()", file="JsonTextReaderTest.cs"];
m3_177 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_179 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="329-329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_180 [label="Assert.IsTrue(jsonTextReader.Read())", span="331-331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_186 [label="Assert.IsTrue(jsonTextReader.Read())", span="342-342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_188 [label="Assert.IsFalse(jsonTextReader.Read())", span="345-345", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_181 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="332-332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_187 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_178 [label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="322-327", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_182 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 41.'')", span="334-334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_183 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 5.'')", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_184 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Unexpected character encountered while parsing value: ,. Path '[2]', line 4, position 3.'')", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_185 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 4.'')", span="340-340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_189 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m3_1780 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2747-2747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m3_1782 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2750-2750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m3_1783 [label="Assert.IsTrue(reader.Read())", span="2752-2752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m3_1784 [label="Assert.IsTrue(reader.Read())", span="2753-2753", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m3_1785 [label="Assert.IsFalse(reader.Read())", span="2754-2754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m3_1781 [label="string json = ''[true ''", span="2749-2749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m3_1786 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2747-2747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m3_2802 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="JsonTextReaderTest.cs"];
m3_825 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1344-1344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m3_826 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1346-1346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m3_827 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1348-1348", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m3_828 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1344-1344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m3_290 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_292 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="482-482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_294 [label="Assert.IsTrue(reader.Read())", span="485-485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_295 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_291 [label="string json = ''[NaN]''", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_293 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_296 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="488-488", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_297 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m3_854 [label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="416-416", cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonTextReaderTest.cs"];
m3_633 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="1014-1014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_635 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1017-1017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_636 [label="Assert.IsTrue(reader.Read())", span="1019-1019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_638 [label="Assert.IsTrue(reader.Read())", span="1022-1022", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_640 [label="Assert.IsTrue(reader.Read())", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_642 [label="Assert.IsTrue(reader.Read())", span="1028-1028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_644 [label="Assert.IsTrue(reader.Read())", span="1031-1031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_646 [label="Assert.IsTrue(reader.Read())", span="1034-1034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_648 [label="Assert.IsTrue(reader.Read())", span="1037-1037", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_650 [label="Assert.IsTrue(reader.Read())", span="1040-1040", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_652 [label="Assert.IsTrue(reader.Read())", span="1043-1043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_654 [label="Assert.IsTrue(reader.Read())", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_656 [label="Assert.IsTrue(reader.Read())", span="1049-1049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_659 [label="Assert.IsTrue(reader.Read())", span="1053-1053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_662 [label="Assert.IsFalse(reader.Read())", span="1057-1057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_637 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1020-1020", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_639 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1023-1023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_641 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1026-1026", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_643 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1029-1029", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_645 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1032-1032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_647 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1035-1035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_649 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1038-1038", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_651 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1041-1041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_653 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1044-1044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_655 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1047-1047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_657 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1050-1050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_658 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_660 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="1054-1054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_661 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="1055-1055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_634 [label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="1016-1016", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_663 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="1014-1014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m3_248 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_250 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="425-425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_251 [label="Assert.IsTrue(reader.Read())", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_253 [label="Assert.IsTrue(reader.Read())", span="430-430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_255 [label="Assert.IsTrue(reader.Read())", span="433-433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_257 [label="Assert.IsTrue(reader.Read())", span="436-436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_252 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="428-428", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_254 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="431-431", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_256 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="434-434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_258 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="437-437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_249 [label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="423-423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_259 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 29.'')", span="439-439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_260 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m3_996 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1600-1600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m3_998 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1624-1624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m3_999 [label="reader.Read()", span="1625-1625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m3_997 [label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1602-1622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m3_1000 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1600-1600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m3_117 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonTextReaderTest.cs"];
m3_1149 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextReaderTest.cs"];
m3_1803 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2776-2776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1805 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2779-2779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1806 [label="Assert.IsTrue(reader.Read())", span="2781-2781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1807 [label="Assert.IsTrue(reader.Read())", span="2782-2782", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1808 [label="Assert.IsTrue(reader.Read())", span="2783-2783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1809 [label="Assert.IsFalse(reader.Read())", span="2784-2784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1804 [label="string json = ''{hi:1, ''", span="2778-2778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1810 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2776-2776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1392 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="689-689", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2391 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", span="3690-3690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs"];
m3_2393 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3694-3694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs"];
m3_2392 [label="string json = @''true''", span="3692-3692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs"];
m3_2394 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="3696-3696", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs"];
m3_2395 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", span="3690-3690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Boolean()", file="JsonTextReaderTest.cs"];
m3_1629 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2493-2493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m3_1630 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2495-2495", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m3_1631 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2497-2497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m3_1632 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2493-2493", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m3_2784 [label="Entry System.Net.Sockets.TcpListener.Start()", span="0-0", cluster="System.Net.Sockets.TcpListener.Start()", file="JsonTextReaderTest.cs"];
m3_2767 [label="Entry System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", span="0-0", cluster="System.Net.Sockets.NetworkStream.NetworkStream(System.Net.Sockets.Socket)", file="JsonTextReaderTest.cs"];
m3_586 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs"];
m3_587 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { new JsonTextReader(null); },\r\n                new string[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="960-966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs"];
m3_588 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs"];
m3_865 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1387-1387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_866 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1389-1389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_867 [label="Assert.IsTrue(reader.Read())", span="1390-1390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_869 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1393-1393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_868 [label="Assert.IsNull(reader.ReadAsBytes())", span="1392-1392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_870 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1387-1387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2787 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextReaderTest.cs"];
m3_424 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m3_426 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="728-728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m3_427 [label="reader.Read()", span="729-729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m3_425 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="720-726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m3_428 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m3_924 [label="Entry System.IO.StringReader.ReadLine()", span="0-0", cluster="System.IO.StringReader.ReadLine()", file="JsonTextReaderTest.cs"];
m3_1045 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1673-1673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1047 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1677-1677", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1049 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1680-1680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1051 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1683-1683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1053 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1686-1686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1055 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1689-1689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1057 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1692-1692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1060 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1696-1696", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1062 [label="reader = new JsonTextReader(new StringReader(''''))", span="1699-1699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1064 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1702-1702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1048 [label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1678-1678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1050 [label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1681-1681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1052 [label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1684-1684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1054 [label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1687-1687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1061 [label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1697-1697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1063 [label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1700-1700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1046 [label="JsonTextReader reader = null", span="1675-1675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1056 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1690-1690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1058 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1693-1693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1059 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1694-1694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1065 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1703-1703", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_1066 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1673-1673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m3_437 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_440 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="762-762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_439 [label="StringReader sr = new StringReader(input)", span="760-760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_444 [label="jsonReader.Read()", span="772-772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_448 [label="jsonReader.Read()", span="777-777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_453 [label="jsonReader.Read()", span="783-783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_458 [label="jsonReader.Read()", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_463 [label="jsonReader.Read()", span="795-795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_467 [label="jsonReader.Read()", span="800-800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_473 [label="jsonReader.Read()", span="807-807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_479 [label="jsonReader.Read()", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_483 [label="jsonReader.Read()", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_487 [label="Assert.IsFalse(jsonReader.Read())", span="824-824", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_441 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="768-768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_442 [label="Assert.AreEqual(0, jsonReader.LineNumber)", span="769-769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_443 [label="Assert.AreEqual(0, jsonReader.LinePosition)", span="770-770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_445 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="773-773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_446 [label="Assert.AreEqual(1, jsonReader.LineNumber)", span="774-774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_447 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_449 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="778-778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_450 [label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="779-779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_451 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_452 [label="Assert.AreEqual(6, jsonReader.LinePosition)", span="781-781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_454 [label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="784-784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_455 [label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_456 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="786-786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_457 [label="Assert.AreEqual(14, jsonReader.LinePosition)", span="787-787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_459 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="790-790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_460 [label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="791-791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_461 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="792-792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_462 [label="Assert.AreEqual(9, jsonReader.LinePosition)", span="793-793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_464 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="796-796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_465 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="797-797", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_466 [label="Assert.AreEqual(11, jsonReader.LinePosition)", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_468 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="801-801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_469 [label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_470 [label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="803-803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_471 [label="Assert.AreEqual(4, jsonReader.LineNumber)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_472 [label="Assert.AreEqual(21, jsonReader.LinePosition)", span="805-805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_474 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="808-808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_475 [label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="809-809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_476 [label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="810-810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_477 [label="Assert.AreEqual(5, jsonReader.LineNumber)", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_478 [label="Assert.AreEqual(29, jsonReader.LinePosition)", span="812-812", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_480 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="815-815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_481 [label="Assert.AreEqual(6, jsonReader.LineNumber)", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_482 [label="Assert.AreEqual(3, jsonReader.LinePosition)", span="817-817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_484 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="820-820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_485 [label="Assert.AreEqual(7, jsonReader.LineNumber)", span="821-821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_486 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="822-822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_438 [label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="752-758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_488 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m3_398 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="667-667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m3_400 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m3_399 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="669-673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m3_401 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 1.'')", span="677-682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m3_402 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="667-667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m3_1643 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2509-2509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m3_1644 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2511-2511", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m3_1645 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2513-2513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m3_1646 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2509-2509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m3_1664 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2539-2539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1666 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2543-2543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1668 [label="Assert.IsTrue(reader.Read())", span="2546-2546", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1670 [label="Assert.IsTrue(reader.Read())", span="2549-2549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1676 [label="Assert.IsTrue(reader.Read())", span="2557-2557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1669 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2547-2547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1671 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2550-2550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1673 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2553-2553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1674 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2554-2554", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1677 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2558-2558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1675 [label="Assert.AreEqual(9.99m, d)", span="2555-2555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1665 [label="string json = @''{''''decimal'''':''''9,99''''}''", span="2541-2541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1667 [label="reader.Culture = new CultureInfo(''fr-FR'')", span="2544-2544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1672 [label="decimal? d = reader.ReadAsDecimal()", span="2552-2552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1678 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2539-2539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m3_1636 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2501-2501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m3_1637 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2503-2503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m3_1638 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2505-2505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m3_1639 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2501-2501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m3_1679 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2562-2562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1681 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2577-2577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1684 [label="reader.Read()", span="2584-2584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1686 [label="Assert.IsTrue(reader.Read())", span="2587-2587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1687 [label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2588-2588", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1680 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2564-2575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1682 [label="int i = 0", span="2582-2582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1683 [label="i < 13", span="2582-2582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1685 [label="i++", span="2582-2582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_1688 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2562-2562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m3_2510 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3854-3854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2512 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="3858-3861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2513 [label="Assert.IsTrue(reader.Read())", span="3863-3863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2517 [label="Assert.IsTrue(reader.Read())", span="3869-3869", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2519 [label="Assert.IsTrue(reader.Read())", span="3872-3872", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2521 [label="Assert.IsTrue(reader.Read())", span="3875-3875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2523 [label="Assert.IsTrue(reader.Read())", span="3878-3878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2525 [label="Assert.IsTrue(reader.Read())", span="3881-3881", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2529 [label="Assert.IsTrue(reader.Read())", span="3887-3887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2531 [label="Assert.IsTrue(reader.Read())", span="3890-3890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2533 [label="Assert.IsTrue(reader.Read())", span="3893-3893", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2535 [label="Assert.IsTrue(reader.Read())", span="3896-3896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2537 [label="Assert.IsFalse(reader.Read())", span="3899-3899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2514 [label="Assert.AreEqual(0, reader.Depth)", span="3864-3864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2516 [label="Assert.AreEqual(1, reader.Depth)", span="3867-3867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2518 [label="Assert.AreEqual(2, reader.Depth)", span="3870-3870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2520 [label="Assert.AreEqual(3, reader.Depth)", span="3873-3873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2522 [label="Assert.AreEqual(3, reader.Depth)", span="3876-3876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2524 [label="Assert.AreEqual(2, reader.Depth)", span="3879-3879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2526 [label="Assert.AreEqual(1, reader.Depth)", span="3882-3882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2528 [label="Assert.AreEqual(1, reader.Depth)", span="3885-3885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2530 [label="Assert.AreEqual(2, reader.Depth)", span="3888-3888", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2532 [label="Assert.AreEqual(2, reader.Depth)", span="3891-3891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2534 [label="Assert.AreEqual(1, reader.Depth)", span="3894-3894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2536 [label="Assert.AreEqual(0, reader.Depth)", span="3897-3897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2511 [label="string json = ''[[[[]]],[[]]]''", span="3856-3856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2515 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="3866-3866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2527 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="3884-3884", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_2538 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="3854-3854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m3_158 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonTextReaderTest.cs"];
m3_244 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="934-934", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1386 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="924-924", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_2765 [label="Entry System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", span="0-0", cluster="System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)", file="JsonTextReaderTest.cs"];
m3_2786 [label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0", cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", file="JsonTextReaderTest.cs"];
m3_229 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="403-403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_231 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="407-407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_233 [label="reader = new JsonTextReader(new StringReader(json))", span="411-411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_235 [label="reader = new JsonTextReader(new StringReader(json))", span="415-415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_230 [label="string json = ''0aq2dun13.hod''", span="405-405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_232 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="409-409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_234 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_236 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="417-417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_237 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="403-403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m3_1414 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2180-2180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m3_1415 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2182-2182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m3_1416 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2184-2184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m3_1417 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="2180-2180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m3_349 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="578-578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m3_351 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="582-582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m3_352 [label="reader.Read()", span="583-583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m3_350 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="580-580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m3_353 [label="string s = (string)reader.Value", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m3_354 [label="return s;", span="587-587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m3_355 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="578-578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m3_1650 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2517-2517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1652 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2521-2521", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1653 [label="Assert.IsTrue(reader.Read())", span="2523-2523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1655 [label="Assert.IsTrue(reader.Read())", span="2526-2526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1661 [label="Assert.IsTrue(reader.Read())", span="2534-2534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1654 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2524-2524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1656 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2527-2527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1658 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2530-2530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1659 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2531-2531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1662 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2535-2535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1660 [label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2532-2532", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1651 [label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2519-2519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1657 [label="decimal? d = reader.ReadAsDecimal()", span="2529-2529", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1663 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2517-2517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m3_1111 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1747-1747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1141 [label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1793-1793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1146 [label="Assert.AreEqual(json, sb.ToString())", span="1806-1806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1139 [label="string json = sb.ToString()", span="1789-1789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1140 [label="JsonSerializer serializer = new JsonSerializer()", span="1791-1791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1142 [label="sb = new StringBuilder()", span="1795-1795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1145 [label="serializer.Serialize(jsonWriter, jsonObject)", span="1803-1803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1112 [label="StringBuilder sb = new StringBuilder()", span="1749-1749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1138 [label="jsonWriter.WriteEndArray()", span="1786-1786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1143 [label="sw = new StringWriter(sb)", span="1796-1796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1144 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1798-1801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1124 [label="int i = 0", span="1768-1768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1113 [label="StringWriter sw = new StringWriter(sb)", span="1750-1750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1114 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1752-1755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1137 [label="jsonWriter.WriteNull()", span="1785-1785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1133 [label="jsonWriter.WriteEndArray()", span="1779-1779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1123 [label="jsonWriter.WriteStartArray()", span="1767-1767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1125 [label="i < 5", span="1768-1768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1126 [label="jsonWriter.WriteValue(i)", span="1770-1770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1127 [label="i++", span="1768-1768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1115 [label="jsonWriter.WriteStartArray()", span="1757-1757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1116 [label="jsonWriter.WriteValue(true)", span="1758-1758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1117 [label="jsonWriter.WriteStartObject()", span="1760-1760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1118 [label="jsonWriter.WritePropertyName(''integer'')", span="1761-1761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1119 [label="jsonWriter.WriteValue(99)", span="1762-1762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1120 [label="jsonWriter.WritePropertyName(''string'')", span="1763-1763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1121 [label="jsonWriter.WriteValue(''how now brown cow?'')", span="1764-1764", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1122 [label="jsonWriter.WritePropertyName(''array'')", span="1765-1765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1128 [label="jsonWriter.WriteStartObject()", span="1773-1773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1129 [label="jsonWriter.WritePropertyName(''decimal'')", span="1774-1774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1130 [label="jsonWriter.WriteValue(990.00990099m)", span="1775-1775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1131 [label="jsonWriter.WriteEndObject()", span="1776-1776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1132 [label="jsonWriter.WriteValue(5)", span="1778-1778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1134 [label="jsonWriter.WriteEndObject()", span="1781-1781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1135 [label="jsonWriter.WriteValue(''This is a string.'')", span="1783-1783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1136 [label="jsonWriter.WriteNull()", span="1784-1784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_1147 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1747-1747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m3_371 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextReaderTest.cs"];
m3_2367 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", span="3660-3660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs"];
m3_2369 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3664-3664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs"];
m3_2368 [label="string json = @''pie''", span="3662-3662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs"];
m3_2370 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3666-3666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs"];
m3_2371 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", span="3660-3660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_BadData()", file="JsonTextReaderTest.cs"];
m3_2545 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3903-3903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2547 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3907-3907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2548 [label="Assert.IsTrue(reader.Read())", span="3909-3909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2549 [label="Assert.IsTrue(reader.Read())", span="3911-3911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2551 [label="Assert.IsTrue(reader.Read())", span="3914-3914", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2554 [label="Assert.IsTrue(reader.Read())", span="3918-3918", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2557 [label="Assert.IsTrue(reader.Read())", span="3922-3922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2560 [label="Assert.IsTrue(reader.Read())", span="3926-3926", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2563 [label="Assert.IsTrue(reader.Read())", span="3930-3930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2566 [label="Assert.IsTrue(reader.Read())", span="3934-3934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2569 [label="Assert.IsTrue(reader.Read())", span="3938-3938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2572 [label="Assert.IsTrue(reader.Read())", span="3942-3942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2575 [label="Assert.IsTrue(reader.Read())", span="3946-3946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2578 [label="Assert.IsTrue(reader.Read())", span="3950-3950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2581 [label="Assert.IsTrue(reader.Read())", span="3954-3954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2584 [label="Assert.IsTrue(reader.Read())", span="3958-3958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2550 [label="Assert.AreEqual(false, reader.Value)", span="3912-3912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2552 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3915-3915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2553 [label="Assert.AreEqual(true, reader.Value)", span="3916-3916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2555 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3919-3919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2556 [label="Assert.AreEqual(true, reader.Value)", span="3920-3920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2558 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3923-3923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2559 [label="Assert.AreEqual(false, reader.Value)", span="3924-3924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2561 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3927-3927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2562 [label="Assert.AreEqual(''test!'', reader.Value)", span="3928-3928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2564 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3931-3931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2565 [label="Assert.AreEqual(1.11d, reader.Value)", span="3932-3932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2567 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3935-3935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2568 [label="Assert.AreEqual(0d, reader.Value)", span="3936-3936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2570 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3939-3939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2571 [label="Assert.AreEqual(0d, reader.Value)", span="3940-3940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2573 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3943-3943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2574 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="3944-3944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2576 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3947-3947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2577 [label="Assert.AreEqual(3000000000d, reader.Value)", span="3948-3948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2579 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3951-3951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2580 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3952-3952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2582 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3955-3955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2583 [label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3956-3956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2546 [label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3905-3905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2585 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3903-3903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m3_2843 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m3_289 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)", file="JsonTextReaderTest.cs"];
m3_1701 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2622-2622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1703 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2625-2625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1704 [label="Assert.IsTrue(reader.Read())", span="2630-2630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1707 [label="Assert.IsTrue(reader.Read())", span="2634-2634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1705 [label="Assert.AreEqual(''Date'', reader.Value)", span="2631-2631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1706 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2632-2632", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1708 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2635-2635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1702 [label="string json = ''new Date\0()''", span="2624-2624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1709 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2622-2622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m3_1622 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2485-2485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m3_1623 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2487-2487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m3_1624 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 3.'')", span="2489-2489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m3_1625 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2485-2485", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m3_1076 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1707-1707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1078 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1711-1711", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1082 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1716-1716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1086 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1721-1721", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1090 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1726-1726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1094 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1731-1731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1096 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1734-1734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1100 [label="reader = new JsonTextReader(new StringReader(''''))", span="1739-1739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1102 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1742-1742", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1079 [label="Assert.IsTrue(reader.Read())", span="1712-1712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1083 [label="Assert.IsTrue(reader.Read())", span="1717-1717", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1087 [label="Assert.IsTrue(reader.Read())", span="1722-1722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1091 [label="Assert.IsTrue(reader.Read())", span="1727-1727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1097 [label="Assert.IsTrue(reader.Read())", span="1735-1735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1101 [label="Assert.IsFalse(reader.Read())", span="1740-1740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1080 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1713-1713", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1081 [label="Assert.AreEqual(1.1d, reader.Value)", span="1714-1714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1084 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1718-1718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1085 [label="Assert.AreEqual(-1.1d, reader.Value)", span="1719-1719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1088 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1723-1723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1089 [label="Assert.AreEqual(0.0d, reader.Value)", span="1724-1724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1092 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1728-1728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1093 [label="Assert.AreEqual(-0.0d, reader.Value)", span="1729-1729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1098 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1736-1736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1099 [label="Assert.AreEqual(0.000001d, reader.Value)", span="1737-1737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1077 [label="JsonTextReader reader = null", span="1709-1709", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1095 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1732-1732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1103 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1743-1743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_1104 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1707-1707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m3_820 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1335-1335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m3_821 [label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1337-1337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m3_822 [label="Assert.IsTrue(reader.Read())", span="1338-1338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m3_823 [label="Assert.AreEqual(''h\0i'', reader.Value)", span="1340-1340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m3_824 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1335-1335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m3_406 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="686-686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_408 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="694-694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_409 [label="reader.Read()", span="699-699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_411 [label="reader.Read()", span="702-702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_413 [label="reader.Read()", span="705-705", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_415 [label="reader.Read()", span="708-708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_417 [label="reader.Read()", span="711-711", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_410 [label="Assert.AreEqual(1, reader.LineNumber)", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_412 [label="Assert.AreEqual(2, reader.LineNumber)", span="703-703", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_414 [label="Assert.AreEqual(3, reader.LineNumber)", span="706-706", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_416 [label="Assert.AreEqual(4, reader.LineNumber)", span="709-709", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_418 [label="Assert.AreEqual(5, reader.LineNumber)", span="712-712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_407 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="688-692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_419 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 1.'')", span="714-714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_420 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="686-686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m3_1196 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1866-1866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1198 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1870-1870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1199 [label="reader.Read()", span="1875-1875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1201 [label="reader.Read()", span="1878-1878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1203 [label="reader.Read()", span="1881-1881", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1205 [label="reader.Read()", span="1884-1884", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1200 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1876-1876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1202 [label="Assert.AreEqual(''<'', reader.Value)", span="1879-1879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1204 [label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1882-1882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1206 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1885-1885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1197 [label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1868-1868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_1207 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1866-1866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m3_2415 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", span="3720-3720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs"];
m3_2417 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3724-3724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs"];
m3_2416 [label="string json = @''true''", span="3722-3722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs"];
m3_2418 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="3726-3726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs"];
m3_2419 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", span="3720-3720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_Boolean()", file="JsonTextReaderTest.cs"];
m3_819 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonTextReaderTest.cs"];
m3_1158 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs"];
m3_120 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="228-228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_122 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="232-232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_123 [label="jsonTextReader.Read()", span="233-233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_124 [label="jsonTextReader.Read()", span="234-234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_125 [label="jsonTextReader.Read()", span="235-235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_126 [label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="237-237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_121 [label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="230-230", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_127 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="228-228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m3_160 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="297-297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_162 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="303-303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_163 [label="Assert.IsTrue(jsonTextReader.Read())", span="305-305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_165 [label="Assert.IsTrue(jsonTextReader.Read())", span="308-308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_168 [label="Assert.IsTrue(jsonTextReader.Read())", span="313-313", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_170 [label="Assert.IsFalse(jsonTextReader.Read())", span="316-316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_164 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="306-306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_166 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="309-309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_169 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_161 [label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="299-301", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_167 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 52.'')", span="311-311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_171 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="297-297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m3_489 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="829-829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_492 [label="JsonReader reader = new JsonTextReader(sr)", span="839-839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_491 [label="StringReader sr = new StringReader(input)", span="837-837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_493 [label="Assert.AreEqual(0, reader.Depth)", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_495 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="844-844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_496 [label="Assert.AreEqual(0, reader.Depth)", span="845-845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_497 [label="Assert.AreEqual('''', reader.Path)", span="846-846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_499 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="849-849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_500 [label="Assert.AreEqual(1, reader.Depth)", span="850-850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_501 [label="Assert.AreEqual(''value'', reader.Path)", span="851-851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_503 [label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="854-854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_504 [label="Assert.AreEqual(reader.Value, @''Purple'')", span="855-855", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_505 [label="Assert.AreEqual(reader.QuoteChar, '\'')", span="856-856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_506 [label="Assert.AreEqual(1, reader.Depth)", span="857-857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_507 [label="Assert.AreEqual(''value'', reader.Path)", span="858-858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_509 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="861-861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_510 [label="Assert.AreEqual(1, reader.Depth)", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_511 [label="Assert.AreEqual(''array'', reader.Path)", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_513 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_514 [label="Assert.AreEqual(1, reader.Depth)", span="867-867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_515 [label="Assert.AreEqual(''array'', reader.Path)", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_517 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_518 [label="Assert.AreEqual(1L, reader.Value)", span="872-872", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_519 [label="Assert.AreEqual(2, reader.Depth)", span="873-873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_520 [label="Assert.AreEqual(''array[0]'', reader.Path)", span="874-874", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_522 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="877-877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_523 [label="Assert.AreEqual(2L, reader.Value)", span="878-878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_524 [label="Assert.AreEqual(2, reader.Depth)", span="879-879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_525 [label="Assert.AreEqual(''array[1]'', reader.Path)", span="880-880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_527 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_528 [label="Assert.AreEqual(''Date'', reader.Value)", span="884-884", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_529 [label="Assert.AreEqual(2, reader.Depth)", span="885-885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_530 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_532 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="889-889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_533 [label="Assert.AreEqual(1L, reader.Value)", span="890-890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_534 [label="Assert.AreEqual(3, reader.Depth)", span="891-891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_535 [label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="892-892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_537 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="895-895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_538 [label="Assert.AreEqual(null, reader.Value)", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_539 [label="Assert.AreEqual(2, reader.Depth)", span="897-897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_540 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="898-898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_542 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="901-901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_543 [label="Assert.AreEqual(1, reader.Depth)", span="902-902", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_544 [label="Assert.AreEqual(''array'', reader.Path)", span="903-903", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_546 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="906-906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_547 [label="Assert.AreEqual(1, reader.Depth)", span="907-907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_548 [label="Assert.AreEqual(''subobject'', reader.Path)", span="908-908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_550 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_551 [label="Assert.AreEqual(1, reader.Depth)", span="912-912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_552 [label="Assert.AreEqual(''subobject'', reader.Path)", span="913-913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_554 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="916-916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_555 [label="Assert.AreEqual(2, reader.Depth)", span="917-917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_556 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="918-918", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_558 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="921-921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_559 [label="Assert.AreEqual(2, reader.Depth)", span="922-922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_560 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="923-923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_562 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="926-926", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_563 [label="Assert.AreEqual(2, reader.Depth)", span="927-927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_564 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="928-928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_566 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="931-931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_567 [label="Assert.AreEqual(2, reader.Depth)", span="932-932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_568 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="933-933", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_570 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="936-936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_571 [label="Assert.AreEqual(3, reader.Depth)", span="937-937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_572 [label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="938-938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_574 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="941-941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_575 [label="Assert.AreEqual(2, reader.Depth)", span="942-942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_576 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="943-943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_578 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="946-946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_579 [label="Assert.AreEqual(1, reader.Depth)", span="947-947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_580 [label="Assert.AreEqual(''subobject'', reader.Path)", span="948-948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_582 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="951-951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_583 [label="Assert.AreEqual(0, reader.Depth)", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_584 [label="Assert.AreEqual('''', reader.Path)", span="953-953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_494 [label="reader.Read()", span="843-843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_498 [label="reader.Read()", span="848-848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_502 [label="reader.Read()", span="853-853", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_508 [label="reader.Read()", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_512 [label="reader.Read()", span="865-865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_516 [label="reader.Read()", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_521 [label="reader.Read()", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_526 [label="reader.Read()", span="882-882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_531 [label="reader.Read()", span="888-888", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_536 [label="reader.Read()", span="894-894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_541 [label="reader.Read()", span="900-900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_545 [label="reader.Read()", span="905-905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_549 [label="reader.Read()", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_553 [label="reader.Read()", span="915-915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_557 [label="reader.Read()", span="920-920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_561 [label="reader.Read()", span="925-925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_565 [label="reader.Read()", span="930-930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_569 [label="reader.Read()", span="935-935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_573 [label="reader.Read()", span="940-940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_577 [label="reader.Read()", span="945-945", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_581 [label="reader.Read()", span="950-950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_490 [label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="831-835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_585 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="829-829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m3_21 [label="listener.TraceEvent(eventCache, ''Newtonsoft.Json'', traceEventType, 0, message)", span="59-59", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonTextReaderTest.cs"];
m3_1954 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", span="3002-3002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1955 [label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3004-3004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1956 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3006-3009", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1957 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", span="3002-3002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_688 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs"];
m3_689 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''ne''))", span="1113-1113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs"];
m3_690 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="1114-1114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs"];
m3_691 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNe()", file="JsonTextReaderTest.cs"];
m3_855 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1376-1376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_858 [label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1381-1381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_857 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1379-1379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_859 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_856 [label="string helloWorld = ''Hello world!''", span="1378-1378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_860 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1376-1376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2431 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", span="3740-3740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2433 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3744-3744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2432 [label="string json = @''nul''", span="3742-3742", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2434 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="3746-3746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2435 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", span="3740-3740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Null_UnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2766 [label="Entry System.Net.Sockets.Socket.Connect(string, int)", span="0-0", cluster="System.Net.Sockets.Socket.Connect(string, int)", file="JsonTextReaderTest.cs"];
m3_1834 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2822-2822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_1836 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2825-2825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_1837 [label="Assert.IsTrue(reader.Read())", span="2827-2827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_1839 [label="Assert.IsTrue(reader.Read())", span="2830-2830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_1838 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2828-2828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_1840 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2831-2831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_1835 [label="string json = ''new Date()''", span="2824-2824", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_1841 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2822-2822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m3_727 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1160-1160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_729 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1164-1164", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_735 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1172-1172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_730 [label="reader.Read()", span="1165-1165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_736 [label="reader.Read()", span="1173-1173", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_731 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_737 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1175-1175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_728 [label="BigInteger i = new BigInteger(long.MaxValue)", span="1162-1162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_734 [label="BigInteger total = i + j", span="1170-1170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_732 [label="int j = 1", span="1168-1168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_738 [label="j++", span="1168-1168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_733 [label="j < 1000", span="1168-1168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_739 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1160-1160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m3_1470 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2265-2265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1472 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2269-2269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1473 [label="Assert.IsTrue(reader.Read())", span="2271-2271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1475 [label="Assert.IsTrue(reader.Read())", span="2274-2274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1481 [label="Assert.IsTrue(reader.Read())", span="2282-2282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1474 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2272-2272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1476 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2275-2275", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1478 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2278-2278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1479 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2279-2279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1480 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2280-2280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1482 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2283-2283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1471 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2267-2267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1477 [label="reader.ReadAsDateTimeOffset()", span="2277-2277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_1483 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="2265-2265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m3_971 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1555-1555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_974 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1561-1561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_973 [label="StringReader sr = new StringReader(input)", span="1559-1559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_975 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1563-1563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_977 [label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1566-1566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_978 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1567-1567", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_980 [label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1570-1570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_981 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1571-1571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_983 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1574-1574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_984 [label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1575-1575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_985 [label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1576-1576", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_986 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1577-1577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_988 [label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1580-1580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_989 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1581-1581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_976 [label="jsonReader.Read()", span="1565-1565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_979 [label="jsonReader.Read()", span="1569-1569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_982 [label="jsonReader.Read()", span="1573-1573", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_987 [label="jsonReader.Read()", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_972 [label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1557-1557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_990 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1555-1555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m3_2264 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3484-3484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m3_2266 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3488-3488", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m3_2268 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3491-3491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m3_2269 [label="Assert.AreEqual(32m, reader.Value)", span="3492-3492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m3_2265 [label="string json = @''0x20''", span="3486-3486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m3_2267 [label="reader.ReadAsDecimal()", span="3490-3490", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m3_2270 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="3484-3484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m3_711 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1138-1138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_713 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1142-1142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_714 [label="reader.Read()", span="1143-1143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_716 [label="Assert.AreEqual(i, reader.Value)", span="1145-1145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_715 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_712 [label="long i = int.MinValue", span="1140-1140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_720 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="1150-1154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_719 [label="long total = -j + i", span="1149-1149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_717 [label="int j = 1", span="1147-1147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_721 [label="j++", span="1147-1147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_718 [label="j < 1000", span="1147-1147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_722 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="1138-1138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_1961 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", span="3013-3013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1962 [label="JsonTextReader reader = new JsonTextReader(new StringReader('']''))", span="3015-3015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1963 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ]. Path '', line 1, position 1.'')", span="3017-3020", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_1964 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", span="3013-3013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_InvalidEndArray()", file="JsonTextReaderTest.cs"];
m3_2837 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="4322-4322", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m3_2838 [label=Error, span="4324-4324", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m3_2840 [label="return _inner.Read(buffer, index, 1);", span="4329-4329", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m3_2839 [label="throw new Exception(''Read error'');", span="4326-4326", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m3_2841 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="4322-4322", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m3_681 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", span="1104-1104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs"];
m3_682 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''nu''))", span="1106-1106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs"];
m3_683 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected end when reading JSON. Path '', line 1, position 2.'')", span="1107-1107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs"];
m3_684 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", span="1104-1104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndAfterReadingNu()", file="JsonTextReaderTest.cs"];
m3_1151 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="977-977", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs"];
m3_1907 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonTextReaderTest.cs"];
m3_1998 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", span="3067-3067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1999 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="3069-3069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_2000 [label="reader.Read()", span="3070-3070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_2003 [label="Assert.IsTrue(reader.Read())", span="3078-3078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_2002 [label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="3077-3077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_2001 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="3072-3075", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_2004 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", span="3067-3067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_925 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1497-1497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_926 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1499-1499", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_927 [label="Assert.IsTrue(reader.Read())", span="1500-1500", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_928 [label="Assert.IsTrue(reader.Read())", span="1501-1501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_931 [label="Assert.IsTrue(reader.Read())", span="1504-1504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_934 [label="Assert.IsTrue(reader.Read())", span="1507-1507", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_929 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1502-1502", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_930 [label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1503-1503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_932 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1505-1505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_933 [label="Assert.AreEqual(1L, reader.Value)", span="1506-1506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_935 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1508-1508", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_936 [label="Assert.IsFalse(reader.Read())", span="1509-1509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_937 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1497-1497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m3_1811 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2788-2788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1813 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2791-2791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1814 [label="Assert.IsTrue(reader.Read())", span="2793-2793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1816 [label="Assert.IsTrue(reader.Read())", span="2796-2796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1815 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2794-2794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1817 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2797-2797", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1812 [label="string json = ''[]''", span="2790-2790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1818 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2788-2788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m3_1795 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2767-2767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m3_1797 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2770-2770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m3_1796 [label="string json = ''new Date !''", span="2769-2769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m3_1798 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2772-2772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m3_1799 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2767-2767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m3_396 [label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="4346-4346", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs"];
m3_2849 [label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="4346-4346", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs"];
m3_2768 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream, System.Text.Encoding, bool)", file="JsonTextReaderTest.cs"];
m3_1944 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", span="2987-2987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1945 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,'']''))", span="2989-2989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1946 [label="reader.Read()", span="2990-2990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1949 [label="Assert.IsTrue(reader.Read())", span="2998-2998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1947 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsBytes();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="2992-2995", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1948 [label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="2997-2997", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1950 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", span="2987-2987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_2375 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", span="3670-3670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs"];
m3_2377 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3674-3674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs"];
m3_2376 [label="string json = @''pie''", span="3672-3672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs"];
m3_2378 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3676-3676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs"];
m3_2379 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", span="3670-3670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_BadData()", file="JsonTextReaderTest.cs"];
m3_1878 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", span="2893-2893", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1879 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="2895-2895", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1880 [label="Assert.IsTrue(reader.Read())", span="2897-2897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1881 [label="Assert.IsTrue(reader.Read())", span="2898-2898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1883 [label="Assert.IsTrue(reader.Read())", span="2904-2904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1884 [label="Assert.IsTrue(reader.Read())", span="2905-2905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1885 [label="Assert.IsFalse(reader.Read())", span="2906-2906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1882 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.Read(); },\r\n                ''Error parsing boolean value. Path 'Test1', line 1, position 14.'')", span="2900-2902", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1886 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", span="2893-2893", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Read_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_664 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_666 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1082-1082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_669 [label="reader.Read()", span="1089-1089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_671 [label="reader.Read()", span="1092-1092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_672 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1093-1093", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_665 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="1063-1080", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_667 [label="int i = 0", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_668 [label="i < 15", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_670 [label="i++", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_673 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m3_847 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", span="1368-1368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_848 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1370-1370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_849 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing value: t. Path '', line 1, position 1.'')", span="1372-1372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_850 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", span="1368-1368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32WithBadCharacter()", file="JsonTextReaderTest.cs"];
m3_1603 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2461-2461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1605 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2465-2465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1606 [label="Assert.IsTrue(reader.Read())", span="2467-2467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1608 [label="Assert.IsTrue(reader.Read())", span="2470-2470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1607 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2468-2468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1609 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2471-2471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1604 [label="string json = @''{''''Name'''': 1.1}''", span="2463-2463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1610 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2473-2473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1611 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2461-2461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m3_1387 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", span="2145-2145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs"];
m3_1388 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2147-2147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs"];
m3_1390 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2150-2150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs"];
m3_1389 [label="Assert.IsNull(reader.ReadAsBoolean())", span="2149-2149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs"];
m3_1391 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", span="2145-2145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBooleanNoContent()", file="JsonTextReaderTest.cs"];
m3_1737 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2681-2681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1738 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2683-2683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1740 [label="Assert.IsTrue(reader.Read())", span="2686-2686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1742 [label="Assert.IsTrue(reader.Read())", span="2689-2689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1744 [label="Assert.IsTrue(reader.Read())", span="2692-2692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1746 [label="Assert.IsTrue(reader.Read())", span="2695-2695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1748 [label="Assert.IsTrue(reader.Read())", span="2698-2698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1750 [label="Assert.IsTrue(reader.Read())", span="2701-2701", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1752 [label="Assert.IsTrue(reader.Read())", span="2704-2704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1754 [label="Assert.IsTrue(reader.Read())", span="2707-2707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1756 [label="Assert.IsTrue(reader.Read())", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1758 [label="Assert.IsTrue(reader.Read())", span="2713-2713", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1760 [label="Assert.IsTrue(reader.Read())", span="2716-2716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1762 [label="Assert.IsTrue(reader.Read())", span="2719-2719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1764 [label="Assert.IsTrue(reader.Read())", span="2722-2722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1766 [label="Assert.IsTrue(reader.Read())", span="2725-2725", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1768 [label="Assert.IsTrue(reader.Read())", span="2728-2728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1770 [label="Assert.IsTrue(reader.Read())", span="2731-2731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1772 [label="Assert.IsTrue(reader.Read())", span="2734-2734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1774 [label="Assert.IsTrue(reader.Read())", span="2737-2737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1776 [label="Assert.IsTrue(reader.Read())", span="2740-2740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1778 [label="Assert.IsFalse(reader.Read())", span="2743-2743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1741 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2687-2687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1743 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2690-2690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1745 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2693-2693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1747 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2696-2696", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1749 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2699-2699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1751 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2702-2702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1753 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2705-2705", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1755 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2708-2708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1757 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2711-2711", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1759 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2714-2714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1761 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2717-2717", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1763 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2720-2720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1765 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2723-2723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1767 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2726-2726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1769 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2729-2729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1771 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2732-2732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1773 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2735-2735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1775 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2738-2738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1777 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2741-2741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1739 [label="reader.SupportMultipleContent = true", span="2684-2684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_1779 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2681-2681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m3_2439 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", span="3750-3750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_2442 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3756-3756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_2441 [label="string json = @'''''''' + Convert.ToBase64String(data) + @''''''''", span="3754-3754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_2443 [label="byte[] result = reader.ReadAsBytes()", span="3758-3758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_2440 [label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="3752-3752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_2444 [label="CollectionAssert.AreEquivalent(data, result)", span="3760-3760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_2445 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", span="3750-3750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_1029 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="JsonTextReaderTest.cs"];
m3_378 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReaderTest.cs"];
m3_741 [label="Entry StringReader.cstr", span="", cluster="StringReader.cstr", file="JsonTextReaderTest.cs"];
m3_2762 [label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0", cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="JsonTextReaderTest.cs"];
m3_630 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextReaderTest.cs"];
m3_2241 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="3448-3448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_2243 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3452-3452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_2244 [label="Assert.IsTrue(reader.Read())", span="3454-3454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_2247 [label="Assert.IsFalse(reader.Read())", span="3458-3458", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_2245 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3455-3455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_2246 [label="Assert.AreEqual(''comment'', reader.Value)", span="3456-3456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_2242 [label="string json = @''//comment''", span="3450-3450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_2248 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="3448-3448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m3_1847 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", span="2842-2842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs"];
m3_1848 [label="JsonTextReader reader = new JsonTextReader(new StringReader('''12.34'''))", span="2844-2844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs"];
m3_1849 [label="Assert.AreEqual(12.34d, reader.ReadAsDouble())", span="2845-2845", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs"];
m3_1850 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", span="2842-2842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Success()", file="JsonTextReaderTest.cs"];
m3_706 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m3_1162 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReaderTest.cs"];
m3_2801 [label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", span="4257-4257", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonTextReaderTest.cs"];
m3_2803 [label="DisposalCalls = 0", span="4259-4259", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonTextReaderTest.cs"];
m3_2804 [label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", span="4257-4257", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.UnmanagedResourceFakingJsonReader()", file="JsonTextReaderTest.cs"];
m3_2769 [label="Entry System.Text.UTF8Encoding.UTF8Encoding()", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding()", file="JsonTextReaderTest.cs"];
m3_1160 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReaderTest.cs"];
m3_809 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", span="1304-1304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_812 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1315-1315", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_814 [label="reader.Read()", span="1319-1319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_816 [label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="1330-1330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_817 [label="Assert.AreEqual(2, arrayPool.FreeArrays.Count)", span="1331-1331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_810 [label="string json = @''{\r\n              ''''CPU'''': ''''Intel?\nYes'''',\r\n              ''''Description'''': ''''Amazin''", span="1306-1308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_811 [label="FakeArrayPool arrayPool = new FakeArrayPool()", span="1310-1310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_813 [label="reader.ArrayPool = arrayPool", span="1317-1317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_815 [label="Assert.Fail()", span="1324-1324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_818 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", span="1304-1304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest_WithError()", file="JsonTextReaderTest.cs"];
m3_2257 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="3472-3472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m3_2259 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3476-3476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m3_2261 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3479-3479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m3_2262 [label="Assert.AreEqual(8m, reader.Value)", span="3480-3480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m3_2258 [label="string json = @''010''", span="3474-3474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m3_2260 [label="reader.ReadAsDecimal()", span="3478-3478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m3_2263 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="3472-3472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m3_2498 [label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m3_2783 [label="Entry System.Net.IPAddress.Parse(string)", span="0-0", cluster="System.Net.IPAddress.Parse(string)", file="JsonTextReaderTest.cs"];
m3_807 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", span="1233-1233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", file="JsonTextReaderTest.cs"];
m3_808 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextReaderTest.cs"];
m3_1155 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs"];
m3_1272 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1977-1977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1274 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1983-1983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1275 [label="reader.Read()", span="1985-1985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1277 [label="reader.Read()", span="1988-1988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1279 [label="reader.Read()", span="1991-1991", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1276 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1986-1986", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1278 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1989-1989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1280 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1992-1992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1273 [label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1979-1981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1281 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 8.'')", span="1994-1994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1282 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1977-1977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m3_1819 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2801-2801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_1821 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2804-2804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_1822 [label="Assert.IsTrue(reader.Read())", span="2806-2806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_1824 [label="Assert.IsTrue(reader.Read())", span="2809-2809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_1823 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2807-2807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_1825 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2810-2810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_1820 [label="string json = ''{}''", span="2803-2803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_1826 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2801-2801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m3_2764 [label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0", cluster="System.Threading.WaitHandle.WaitOne()", file="JsonTextReaderTest.cs"];
m3_25 [label="Exit Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="45-45", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonTextReaderTest.cs"];
m3_1286 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1998-1998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_1288 [label="JsonTextReader reader = new JsonTextReader(s)", span="2001-2001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_1287 [label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="2000-2000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_1292 [label="Assert.AreEqual(''Hello world.'', text)", span="2007-2007", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_1289 [label="byte[] data = reader.ReadAsBytes()", span="2003-2003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_1291 [label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="2006-2006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_1290 [label="Assert.IsNotNull(data)", span="2004-2004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_1293 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1998-1998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m3_2698 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs"];
m3_1153 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs"];
m3_953 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonTextReaderTest.cs"];
m3_742 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonTextReaderTest.cs"];
m3_599 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m3_601 [label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="981-981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m3_603 [label="Assert.AreEqual(s, reader.Value)", span="984-984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m3_600 [label="string s = new string('a', 10000)", span="980-980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m3_602 [label="reader.Read()", span="982-982", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m3_604 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m3_1485 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextReaderTest.cs"];
m3_1374 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2126-2126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m3_1375 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="2128-2128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m3_1376 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading JSON. Path '', line 1, position 1.'')", span="2130-2130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m3_1377 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="2126-2126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m3_1294 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonTextReaderTest.cs"];
m3_631 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs"];
m3_1827 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2814-2814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m3_1828 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2816-2816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m3_1829 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2818-2818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m3_1830 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2814-2814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m3_2707 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="4125-4125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2709 [label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="4129-4129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2724 [label="r = new JsonTextReader(new StringReader(json2))", span="4151-4151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2710 [label="Assert.IsTrue(r.Read())", span="4131-4131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2713 [label="Assert.IsTrue(r.Read())", span="4135-4135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2716 [label="Assert.IsTrue(r.Read())", span="4139-4139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2719 [label="Assert.IsTrue(r.Read())", span="4143-4143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2722 [label="Assert.IsFalse(r.Read())", span="4147-4147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2725 [label="Assert.IsTrue(r.Read())", span="4153-4153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2728 [label="Assert.IsTrue(r.Read())", span="4157-4157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2731 [label="Assert.IsTrue(r.Read())", span="4161-4161", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2734 [label="Assert.IsTrue(r.Read())", span="4165-4165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2737 [label="Assert.IsFalse(r.Read())", span="4169-4169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2711 [label="Assert.AreEqual(1, r.LineNumber)", span="4132-4132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2712 [label="Assert.AreEqual(1, r.LinePosition)", span="4133-4133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2714 [label="Assert.AreEqual(1, r.LineNumber)", span="4136-4136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2715 [label="Assert.AreEqual(5, r.LinePosition)", span="4137-4137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2717 [label="Assert.AreEqual(1, r.LineNumber)", span="4140-4140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2718 [label="Assert.AreEqual(9, r.LinePosition)", span="4141-4141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2720 [label="Assert.AreEqual(1, r.LineNumber)", span="4144-4144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2721 [label="Assert.AreEqual(10, r.LinePosition)", span="4145-4145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2726 [label="Assert.AreEqual(2, r.LineNumber)", span="4154-4154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2727 [label="Assert.AreEqual(1, r.LinePosition)", span="4155-4155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2729 [label="Assert.AreEqual(2, r.LineNumber)", span="4158-4158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2730 [label="Assert.AreEqual(5, r.LinePosition)", span="4159-4159", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2732 [label="Assert.AreEqual(2, r.LineNumber)", span="4162-4162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2733 [label="Assert.AreEqual(9, r.LinePosition)", span="4163-4163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2735 [label="Assert.AreEqual(2, r.LineNumber)", span="4166-4166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2736 [label="Assert.AreEqual(10, r.LinePosition)", span="4167-4167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2708 [label="string json1 = ''{'a':'bc'}''", span="4127-4127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2723 [label="string json2 = ''\n{'a':'bc'}''", span="4149-4149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_2738 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", span="4125-4125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LinePositionOnNewLine()", file="JsonTextReaderTest.cs"];
m3_938 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1513-1513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_941 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1518-1518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_942 [label="Assert.IsTrue(reader.Read())", span="1519-1519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_944 [label="Assert.IsTrue(reader.Read())", span="1521-1521", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_949 [label="Assert.IsTrue(reader.Read())", span="1526-1526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_943 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1520-1520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_945 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1522-1522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_948 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1525-1525", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_950 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1527-1527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_940 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1516-1516", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_946 [label="byte[] data = reader.ReadAsBytes()", span="1523-1523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_951 [label="Assert.IsFalse(reader.Read())", span="1529-1529", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_947 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1524-1524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_939 [label="string helloWorld = ''Hello world!''", span="1515-1515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_952 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1513-1513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m3_301 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_303 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="496-496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_304 [label="Assert.IsTrue(reader.Read())", span="498-498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_306 [label="Assert.IsTrue(reader.Read())", span="501-501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_308 [label="Assert.IsTrue(reader.Read())", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_310 [label="Assert.IsTrue(reader.Read())", span="507-507", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_312 [label="Assert.IsTrue(reader.Read())", span="510-510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_314 [label="Assert.IsTrue(reader.Read())", span="513-513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_317 [label="Assert.IsTrue(reader.Read())", span="517-517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_305 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="499-499", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_307 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="502-502", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_309 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="505-505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_311 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="508-508", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_313 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="511-511", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_315 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="514-514", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_316 [label="Assert.AreEqual(''recipe_text'', reader.Value)", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_318 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="518-518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_319 [label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="520-520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_302 [label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="494-494", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_320 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m3_793 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1268-1268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_798 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1284-1284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_800 [label="reader.Read()", span="1288-1288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_804 [label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="1299-1299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_805 [label="Assert.AreEqual(6, arrayPool.FreeArrays.Count)", span="1300-1300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_794 [label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="1270-1278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_797 [label="i < 1000", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_799 [label="reader.ArrayPool = arrayPool", span="1286-1286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_801 [label="(i + 1) % 100 == 0", span="1293-1293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_795 [label="FakeArrayPool arrayPool = new FakeArrayPool()", span="1280-1280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_796 [label="int i = 0", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_803 [label="i++", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_802 [label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_806 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", span="1268-1268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BufferTest()", file="JsonTextReaderTest.cs"];
m3_2681 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="4071-4071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2690 [label="JsonTextReader reader = new JsonTextReader(sr)", span="4084-4084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2689 [label="StringReader sr = new StringReader(json)", span="4083-4083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2691 [label="Assert.IsTrue(reader.Read())", span="4086-4086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2696 [label="Assert.IsTrue(reader.Read())", span="4094-4094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2693 [label="Assert.AreEqual(decimal.MaxValue, max)", span="4089-4089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2695 [label="Assert.AreEqual(decimal.MinValue, min)", span="4092-4092", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2692 [label="decimal? max = reader.ReadAsDecimal()", span="4088-4088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2694 [label="decimal? min = reader.ReadAsDecimal()", span="4091-4091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2688 [label="string json = sw.ToString()", span="4081-4081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2682 [label="StringWriter sw = new StringWriter()", span="4073-4073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2687 [label="writer.WriteEndArray()", span="4079-4079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2683 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="4074-4074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2686 [label="writer.WriteValue(decimal.MinValue)", span="4078-4078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2684 [label="writer.WriteStartArray()", span="4076-4076", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2685 [label="writer.WriteValue(decimal.MaxValue)", span="4077-4077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_2697 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="4071-4071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m3_628 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextReaderTest.cs"];
m3_12 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_13 [label="Entry Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="45-45", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_14 [label="level == TraceLevel.Off", span="47-47", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_15 [label="return;", span="48-48", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_16 [label="TraceEventCache eventCache = new TraceEventCache()", span="50-50", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_17 [label="TraceEventType traceEventType = GetTraceEventType(level)", span="51-51", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_18 [label="DiagnosticsTrace.Listeners", span="53-53", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_19 [label="!listener.IsThreadSafe", span="55-55", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", color=green, community=0, file="JsonTextReaderTest.cs"];
m3_20 [label=listener, span="57-57", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonTextReaderTest.cs"];
m3_1208 [label="Entry System.Convert.ToChar(string)", span="0-0", cluster="System.Convert.ToChar(string)", file="JsonTextReaderTest.cs"];
m3_2771 [label="Entry lambda expression", span="4184-4201", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_590 [label="new JsonTextReader(null)", span="961-961", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_708 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1131-1131", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_724 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1152-1152", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2704 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4115-4115", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_239 [label="reader.Read()", span="409-409", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_262 [label="reader.Read()", span="439-439", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_299 [label="reader.Read()", span="488-488", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_404 [label="reader.Read()", span="679-679", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_422 [label="reader.Read()", span="714-714", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_435 [label="reader.Read()", span="743-743", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_679 [label="reader.Read()", span="1100-1100", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_686 [label="reader.Read()", span="1107-1107", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_693 [label="reader.Read()", span="1114-1114", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1071 [label="reader.Read()", span="1694-1694", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1106 [label="reader.Read()", span="1732-1732", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1109 [label="reader.Read()", span="1743-1743", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1284 [label="reader.Read()", span="1994-1994", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1362 [label="reader.Read()", span="2104-2104", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1620 [label="reader.Read()", span="2481-2481", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1627 [label="reader.Read()", span="2489-2489", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1634 [label="reader.Read()", span="2497-2497", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1641 [label="reader.Read()", span="2505-2505", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1648 [label="reader.Read()", span="2513-2513", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1793 [label="reader.Read()", span="2763-2763", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1801 [label="reader.Read()", span="2772-2772", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1832 [label="reader.Read()", span="2818-2818", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1888 [label="reader.Read()", span="2901-2901", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1909 [label="Assert.IsTrue(reader.Read())", span="2932-2932", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2255 [label="reader.Read()", span="3468-3468", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2508 [label="Assert.IsTrue(reader.Read())", span="3850-3850", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2540 [label="Assert.IsTrue(reader.Read())", span="3866-3866", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2543 [label="Assert.IsTrue(reader.Read())", span="3884-3884", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2664 [label="jsonTextReader.Read()", span="4041-4041", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2667 [label="jsonTextReader.Read()", span="4042-4042", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2670 [label="jsonTextReader.Read()", span="4051-4051", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2673 [label="jsonTextReader.Read()", span="4060-4060", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2676 [label="jsonTextReader.Read()", span="4061-4061", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2679 [label="jsonTextReader.Read()", span="4062-4062", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2705 [label="reader.Read()", span="4116-4116", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1900 [label="reader.ReadAsString()", span="2918-2918", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2006 [label="reader.ReadAsString()", span="3074-3074", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2017 [label="reader.ReadAsString()", span="3090-3090", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2335 [label="reader.ReadAsString()", span="3615-3615", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2351 [label="reader.ReadAsString()", span="3635-3635", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2381 [label="reader.ReadAsString()", span="3676-3676", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2429 [label="reader.ReadAsString()", span="3736-3736", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2437 [label="reader.ReadAsString()", span="3746-3746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_174 [label="jsonTextReader.ReadAsInt32()", span="311-311", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_191 [label="jsonTextReader.ReadAsInt32()", span="334-334", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_194 [label="jsonTextReader.ReadAsInt32()", span="336-336", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_197 [label="jsonTextReader.ReadAsInt32()", span="338-338", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_200 [label="jsonTextReader.ReadAsInt32()", span="340-340", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_242 [label="reader.ReadAsDecimal()", span="413-413", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_246 [label="reader.ReadAsInt32()", span="417-417", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_589 [label="Entry lambda expression", span="961-961", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_591 [label="Exit lambda expression", span="961-961", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_597 [label="reader.Read()", span="974-974", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_707 [label="Entry lambda expression", span="1129-1133", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_709 [label="reader.ReadAsInt32()", span="1132-1132", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_723 [label="Entry lambda expression", span="1150-1154", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_725 [label="reader.ReadAsInt32()", span="1153-1153", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_830 [label="reader.Read()", span="1348-1348", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_837 [label="reader.Read()", span="1356-1356", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_844 [label="reader.ReadAsBytes()", span="1364-1364", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_852 [label="reader.ReadAsInt32()", span="1372-1372", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_863 [label="reader.ReadAsBytes()", span="1383-1383", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_878 [label="reader.Read()", span="1402-1402", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1031 [label="reader.ReadAsInt32()", span="1654-1654", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1034 [label="reader.ReadAsInt32()", span="1657-1657", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1037 [label="reader.ReadAsInt32()", span="1660-1660", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1040 [label="reader.ReadAsInt32()", span="1663-1663", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1043 [label="reader.ReadAsInt32()", span="1669-1669", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1068 [label="reader.ReadAsDecimal()", span="1690-1690", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1074 [label="reader.ReadAsDecimal()", span="1703-1703", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1379 [label="reader.ReadAsBytes()", span="2130-2130", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1398 [label="reader.ReadAsDecimal()", span="2158-2158", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1405 [label="reader.ReadAsDecimal()", span="2167-2167", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1412 [label="reader.ReadAsBytes()", span="2175-2175", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1419 [label="reader.ReadAsDateTimeOffset()", span="2184-2184", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1433 [label="reader.ReadAsBytes()", span="2204-2204", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1440 [label="reader.ReadAsBytes()", span="2212-2212", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1511 [label="reader.ReadAsDateTimeOffset()", span="2321-2321", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1613 [label="reader.ReadAsInt32()", span="2473-2473", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1867 [label="reader.ReadAsDouble()", span="2870-2870", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1942 [label="reader.ReadAsInt32()", span="2979-2979", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1952 [label="reader.ReadAsBytes()", span="2994-2994", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1959 [label="reader.ReadAsInt32()", span="3008-3008", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1966 [label="reader.ReadAsDateTime()", span="3019-3019", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1974 [label="reader.ReadAsBytes()", span="3030-3030", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1985 [label="reader.ReadAsInt32()", span="3043-3043", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1996 [label="reader.ReadAsBytes()", span="3059-3059", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2029 [label="reader.ReadAsDateTime()", span="3105-3105", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2032 [label="reader.ReadAsDateTime()", span="3110-3110", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2035 [label="reader.ReadAsDateTime()", span="3115-3115", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2343 [label="reader.ReadAsBoolean()", span="3625-3625", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2359 [label="reader.ReadAsBoolean()", span="3645-3645", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2373 [label="reader.ReadAsBoolean()", span="3666-3666", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2389 [label="reader.ReadAsDouble()", span="3686-3686", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2397 [label="reader.ReadAsDouble()", span="3696-3696", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2405 [label="reader.ReadAsBytes()", span="3706-3706", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2413 [label="reader.ReadAsDateTime()", span="3716-3716", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2421 [label="reader.ReadAsDateTime()", span="3726-3726", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2453 [label="reader.Read()", span="3770-3770", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2703 [label="Entry lambda expression", span="4113-4119", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_238 [label="Entry lambda expression", span="409-409", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_240 [label="Exit lambda expression", span="409-409", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_261 [label="Entry lambda expression", span="439-439", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_263 [label="Exit lambda expression", span="439-439", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_298 [label="Entry lambda expression", span="488-488", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_300 [label="Exit lambda expression", span="488-488", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_403 [label="Entry lambda expression", span="677-682", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_405 [label="Exit lambda expression", span="677-682", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_421 [label="Entry lambda expression", span="714-714", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_423 [label="Exit lambda expression", span="714-714", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_434 [label="Entry lambda expression", span="741-746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_436 [label="Exit lambda expression", span="741-746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_678 [label="Entry lambda expression", span="1100-1100", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_680 [label="Exit lambda expression", span="1100-1100", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_685 [label="Entry lambda expression", span="1107-1107", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_687 [label="Exit lambda expression", span="1107-1107", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_692 [label="Entry lambda expression", span="1114-1114", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_694 [label="Exit lambda expression", span="1114-1114", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1070 [label="Entry lambda expression", span="1694-1694", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1072 [label="Exit lambda expression", span="1694-1694", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1105 [label="Entry lambda expression", span="1732-1732", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1107 [label="Exit lambda expression", span="1732-1732", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1108 [label="Entry lambda expression", span="1743-1743", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1110 [label="Exit lambda expression", span="1743-1743", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1283 [label="Entry lambda expression", span="1994-1994", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1285 [label="Exit lambda expression", span="1994-1994", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1361 [label="Entry lambda expression", span="2104-2104", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1363 [label="Exit lambda expression", span="2104-2104", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1619 [label="Entry lambda expression", span="2481-2481", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1621 [label="Exit lambda expression", span="2481-2481", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1626 [label="Entry lambda expression", span="2489-2489", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1628 [label="Exit lambda expression", span="2489-2489", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1633 [label="Entry lambda expression", span="2497-2497", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1635 [label="Exit lambda expression", span="2497-2497", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1640 [label="Entry lambda expression", span="2505-2505", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1642 [label="Exit lambda expression", span="2505-2505", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1647 [label="Entry lambda expression", span="2513-2513", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1649 [label="Exit lambda expression", span="2513-2513", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1792 [label="Entry lambda expression", span="2763-2763", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1794 [label="Exit lambda expression", span="2763-2763", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1800 [label="Entry lambda expression", span="2772-2772", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1802 [label="Exit lambda expression", span="2772-2772", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1831 [label="Entry lambda expression", span="2818-2818", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1833 [label="Exit lambda expression", span="2818-2818", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1887 [label="Entry lambda expression", span="2901-2901", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1889 [label="Exit lambda expression", span="2901-2901", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1908 [label="Entry lambda expression", span="2932-2932", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1910 [label="Exit lambda expression", span="2932-2932", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2254 [label="Entry lambda expression", span="3468-3468", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2256 [label="Exit lambda expression", span="3468-3468", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2507 [label="Entry lambda expression", span="3850-3850", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2509 [label="Exit lambda expression", span="3850-3850", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2539 [label="Entry lambda expression", span="3866-3866", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2541 [label="Exit lambda expression", span="3866-3866", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2542 [label="Entry lambda expression", span="3884-3884", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2544 [label="Exit lambda expression", span="3884-3884", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2663 [label="Entry lambda expression", span="4041-4041", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2665 [label="Exit lambda expression", span="4041-4041", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2666 [label="Entry lambda expression", span="4042-4042", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2668 [label="Exit lambda expression", span="4042-4042", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2669 [label="Entry lambda expression", span="4051-4051", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2671 [label="Exit lambda expression", span="4051-4051", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2672 [label="Entry lambda expression", span="4060-4060", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2674 [label="Exit lambda expression", span="4060-4060", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2675 [label="Entry lambda expression", span="4061-4061", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2677 [label="Exit lambda expression", span="4061-4061", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2678 [label="Entry lambda expression", span="4062-4062", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2680 [label="Exit lambda expression", span="4062-4062", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2706 [label="Exit lambda expression", span="4113-4119", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1899 [label="Entry lambda expression", span="2918-2918", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1901 [label="Exit lambda expression", span="2918-2918", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2005 [label="Entry lambda expression", span="3072-3075", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2007 [label="Exit lambda expression", span="3072-3075", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2016 [label="Entry lambda expression", span="3088-3091", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2018 [label="Exit lambda expression", span="3088-3091", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2334 [label="Entry lambda expression", span="3615-3615", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2336 [label="Exit lambda expression", span="3615-3615", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2350 [label="Entry lambda expression", span="3635-3635", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2352 [label="Exit lambda expression", span="3635-3635", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2380 [label="Entry lambda expression", span="3676-3676", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2382 [label="Exit lambda expression", span="3676-3676", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2428 [label="Entry lambda expression", span="3736-3736", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2430 [label="Exit lambda expression", span="3736-3736", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2436 [label="Entry lambda expression", span="3746-3746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2438 [label="Exit lambda expression", span="3746-3746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_173 [label="Entry lambda expression", span="311-311", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_175 [label="Exit lambda expression", span="311-311", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_190 [label="Entry lambda expression", span="334-334", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_192 [label="Exit lambda expression", span="334-334", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_193 [label="Entry lambda expression", span="336-336", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_195 [label="Exit lambda expression", span="336-336", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_196 [label="Entry lambda expression", span="338-338", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_198 [label="Exit lambda expression", span="338-338", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_199 [label="Entry lambda expression", span="340-340", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_201 [label="Exit lambda expression", span="340-340", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_241 [label="Entry lambda expression", span="413-413", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_243 [label="Exit lambda expression", span="413-413", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_245 [label="Entry lambda expression", span="417-417", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_247 [label="Exit lambda expression", span="417-417", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_596 [label="Entry lambda expression", span="974-974", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_598 [label="Exit lambda expression", span="974-974", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_710 [label="Exit lambda expression", span="1129-1133", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_726 [label="Exit lambda expression", span="1150-1154", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_829 [label="Entry lambda expression", span="1348-1348", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_831 [label="Exit lambda expression", span="1348-1348", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_836 [label="Entry lambda expression", span="1356-1356", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_838 [label="Exit lambda expression", span="1356-1356", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_843 [label="Entry lambda expression", span="1364-1364", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_845 [label="Exit lambda expression", span="1364-1364", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_851 [label="Entry lambda expression", span="1372-1372", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_853 [label="Exit lambda expression", span="1372-1372", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_862 [label="Entry lambda expression", span="1383-1383", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_864 [label="Exit lambda expression", span="1383-1383", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_877 [label="Entry lambda expression", span="1402-1402", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_879 [label="Exit lambda expression", span="1402-1402", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1030 [label="Entry lambda expression", span="1654-1654", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1032 [label="Exit lambda expression", span="1654-1654", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1033 [label="Entry lambda expression", span="1657-1657", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1035 [label="Exit lambda expression", span="1657-1657", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1036 [label="Entry lambda expression", span="1660-1660", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1038 [label="Exit lambda expression", span="1660-1660", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1039 [label="Entry lambda expression", span="1663-1663", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1041 [label="Exit lambda expression", span="1663-1663", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1042 [label="Entry lambda expression", span="1669-1669", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1044 [label="Exit lambda expression", span="1669-1669", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1067 [label="Entry lambda expression", span="1690-1690", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1069 [label="Exit lambda expression", span="1690-1690", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1073 [label="Entry lambda expression", span="1703-1703", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1075 [label="Exit lambda expression", span="1703-1703", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1378 [label="Entry lambda expression", span="2130-2130", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1380 [label="Exit lambda expression", span="2130-2130", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1397 [label="Entry lambda expression", span="2158-2158", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1399 [label="Exit lambda expression", span="2158-2158", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1404 [label="Entry lambda expression", span="2167-2167", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1406 [label="Exit lambda expression", span="2167-2167", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1411 [label="Entry lambda expression", span="2175-2175", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1413 [label="Exit lambda expression", span="2175-2175", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1418 [label="Entry lambda expression", span="2184-2184", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1420 [label="Exit lambda expression", span="2184-2184", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1432 [label="Entry lambda expression", span="2204-2204", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1434 [label="Exit lambda expression", span="2204-2204", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1439 [label="Entry lambda expression", span="2212-2212", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1441 [label="Exit lambda expression", span="2212-2212", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1510 [label="Entry lambda expression", span="2321-2321", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1512 [label="Exit lambda expression", span="2321-2321", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1612 [label="Entry lambda expression", span="2473-2473", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1614 [label="Exit lambda expression", span="2473-2473", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1866 [label="Entry lambda expression", span="2870-2870", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1868 [label="Exit lambda expression", span="2870-2870", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1941 [label="Entry lambda expression", span="2977-2980", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1943 [label="Exit lambda expression", span="2977-2980", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1951 [label="Entry lambda expression", span="2992-2995", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1953 [label="Exit lambda expression", span="2992-2995", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1958 [label="Entry lambda expression", span="3006-3009", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1960 [label="Exit lambda expression", span="3006-3009", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1965 [label="Entry lambda expression", span="3017-3020", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1967 [label="Exit lambda expression", span="3017-3020", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1973 [label="Entry lambda expression", span="3028-3031", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1975 [label="Exit lambda expression", span="3028-3031", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1984 [label="Entry lambda expression", span="3041-3044", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1986 [label="Exit lambda expression", span="3041-3044", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1995 [label="Entry lambda expression", span="3057-3060", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_1997 [label="Exit lambda expression", span="3057-3060", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2028 [label="Entry lambda expression", span="3103-3106", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2030 [label="Exit lambda expression", span="3103-3106", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2031 [label="Entry lambda expression", span="3108-3111", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2033 [label="Exit lambda expression", span="3108-3111", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2034 [label="Entry lambda expression", span="3113-3116", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2036 [label="Exit lambda expression", span="3113-3116", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2342 [label="Entry lambda expression", span="3625-3625", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2344 [label="Exit lambda expression", span="3625-3625", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2358 [label="Entry lambda expression", span="3645-3645", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2360 [label="Exit lambda expression", span="3645-3645", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2372 [label="Entry lambda expression", span="3666-3666", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2374 [label="Exit lambda expression", span="3666-3666", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2388 [label="Entry lambda expression", span="3686-3686", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2390 [label="Exit lambda expression", span="3686-3686", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2396 [label="Entry lambda expression", span="3696-3696", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2398 [label="Exit lambda expression", span="3696-3696", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2404 [label="Entry lambda expression", span="3706-3706", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2406 [label="Exit lambda expression", span="3706-3706", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2412 [label="Entry lambda expression", span="3716-3716", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2414 [label="Exit lambda expression", span="3716-3716", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2420 [label="Entry lambda expression", span="3726-3726", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2422 [label="Exit lambda expression", span="3726-3726", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2452 [label="Entry lambda expression", span="3770-3770", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2454 [label="Exit lambda expression", span="3770-3770", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2777 [label="var bytes = new UTF8Encoding().GetBytes(jsonString)", span="4194-4194", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2779 [label="Console.WriteLine(''server send: '' + bytes.Length)", span="4196-4196", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2780 [label="clientReceivedEvent.WaitOne()", span="4199-4199", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2774 [label="serverStartedEvent.Set()", span="4189-4189", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2776 [label="var jsonString = ''[\r\n'' + String.Join('','', Enumerable.Repeat(''  \''testdata\''\r\n'', jsonArrayElementsCount).ToArray()) + '']''", span="4193-4193", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2778 [label="serverSocket.Send(bytes)", span="4195-4195", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2773 [label="server.Start()", span="4187-4187", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2775 [label="var serverSocket = server.AcceptSocket()", span="4191-4191", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2772 [label="var server = new TcpListener(IPAddress.Parse(''0.0.0.0''), port)", span="4186-4186", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2781 [label="Exit lambda expression", span="4184-4201", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m3_2640 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReaderTest.cs"];
m3_1690 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2592-2592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1692 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2605-2605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1695 [label="Assert.IsTrue(reader.Read())", span="2612-2612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1697 [label="Assert.IsTrue(reader.Read())", span="2615-2615", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1699 [label="Assert.IsFalse(reader.Read())", span="2618-2618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1698 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2616-2616", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1691 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2594-2603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1693 [label="int i = 0", span="2610-2610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1694 [label="i < 26", span="2610-2610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1696 [label="i++", span="2610-2610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_1700 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2592-2592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m3_2094 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="3208-3208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2096 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3219-3219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2097 [label="Assert.IsTrue(reader.Read())", span="3221-3221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2099 [label="Assert.IsTrue(reader.Read())", span="3224-3224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2101 [label="Assert.IsTrue(reader.Read())", span="3227-3227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2103 [label="Assert.IsTrue(reader.Read())", span="3230-3230", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2106 [label="Assert.IsTrue(reader.Read())", span="3234-3234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2108 [label="Assert.IsTrue(reader.Read())", span="3237-3237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2111 [label="Assert.IsTrue(reader.Read())", span="3241-3241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2113 [label="Assert.IsTrue(reader.Read())", span="3244-3244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2115 [label="Assert.IsTrue(reader.Read())", span="3247-3247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2118 [label="Assert.IsTrue(reader.Read())", span="3251-3251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2120 [label="Assert.IsTrue(reader.Read())", span="3254-3254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2124 [label="Assert.IsTrue(reader.Read())", span="3259-3259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2126 [label="Assert.IsTrue(reader.Read())", span="3262-3262", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2128 [label="Assert.IsTrue(reader.Read())", span="3265-3265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2130 [label="Assert.IsTrue(reader.Read())", span="3268-3268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2098 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3222-3222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2100 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="3225-3225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2102 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3228-3228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2104 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3231-3231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2105 [label="Assert.AreEqual(''Name'', reader.Value)", span="3232-3232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2107 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3235-3235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2109 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3238-3238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2110 [label="Assert.AreEqual(true, reader.Value)", span="3239-3239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2112 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3242-3242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2114 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3245-3245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2116 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3248-3248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2117 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="3249-3249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2119 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3252-3252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2121 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="3255-3255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2122 [label="Assert.AreEqual(5, reader.LineNumber)", span="3256-3256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2123 [label="Assert.AreEqual(''Date'', reader.Value)", span="3257-3257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2125 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3260-3260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2127 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3263-3263", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2129 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3266-3266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2131 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="3269-3269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2095 [label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="3210-3217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_2132 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="3208-3208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m3_1428 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2200-2200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1429 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="2202-2202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1430 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="2204-2204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_1431 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="2200-2200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m3_2455 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3774-3774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2461 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3785-3785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2479 [label="reader = new JsonTextReader(new StringReader(json))", span="3811-3811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2462 [label="reader.Read()", span="3787-3787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2463 [label="reader.Read()", span="3789-3789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2466 [label="reader.Read()", span="3793-3793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2469 [label="reader.Read()", span="3797-3797", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2472 [label="reader.Read()", span="3801-3801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2475 [label="reader.Read()", span="3805-3805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2478 [label="reader.Read()", span="3809-3809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2480 [label="reader.Read()", span="3813-3813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2496 [label="reader.Read()", span="3835-3835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2458 [label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="3780-3780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2459 [label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="3781-3781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2464 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3790-3790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2465 [label="Assert.AreEqual(0d, reader.Value)", span="3791-3791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2467 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3794-3794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2468 [label="Assert.AreEqual(0d, reader.Value)", span="3795-3795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2470 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3798-3798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2471 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="3799-3799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2473 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3802-3802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2474 [label="Assert.AreEqual(3000000000d, reader.Value)", span="3803-3803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2476 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3806-3806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2477 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3807-3807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2482 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3816-3816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2483 [label="Assert.AreEqual(0m, reader.Value)", span="3817-3817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2485 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3820-3820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2486 [label="Assert.AreEqual(0m, reader.Value)", span="3821-3821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2488 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3824-3824", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2489 [label="Assert.AreEqual(0.0000025m, reader.Value)", span="3825-3825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2491 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3828-3828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2492 [label="Assert.AreEqual(3000000000m, reader.Value)", span="3829-3829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2494 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3832-3832", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2495 [label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="3833-3833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2460 [label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="3783-3783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2481 [label="reader.ReadAsDecimal()", span="3815-3815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2484 [label="reader.ReadAsDecimal()", span="3819-3819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2487 [label="reader.ReadAsDecimal()", span="3823-3823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2490 [label="reader.ReadAsDecimal()", span="3827-3827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2493 [label="reader.ReadAsDecimal()", span="3831-3831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2457 [label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="3778-3778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2456 [label="double d", span="3776-3776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2497 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="3774-3774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m3_2796 [label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4252-4252", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonTextReaderTest.cs"];
m3_2799 [label="((IDisposable)new UnmanagedResourceFakingJsonReader()).Dispose()", span="4254-4254", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonTextReaderTest.cs"];
m3_2800 [label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="4252-4252", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="JsonTextReaderTest.cs"];
m3_1859 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", span="2863-2863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs"];
m3_1860 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''['Trump',1]''))", span="2865-2865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs"];
m3_1861 [label="Assert.IsTrue(reader.Read())", span="2867-2867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs"];
m3_1864 [label="Assert.IsTrue(reader.Read())", span="2874-2874", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs"];
m3_1863 [label="Assert.AreEqual(1d, reader.ReadAsDouble())", span="2873-2873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs"];
m3_1862 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsDouble(); },\r\n                ''Could not convert string to double: Trump. Path '[0]', line 1, position 8.'')", span="2869-2871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs"];
m3_1865 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", span="2863-2863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Failure()", file="JsonTextReaderTest.cs"];
m3_1934 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", span="2972-2972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1935 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[,1]''))", span="2974-2974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1936 [label="reader.Read()", span="2975-2975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1939 [label="Assert.IsTrue(reader.Read())", span="2983-2983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1938 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="2982-2982", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1937 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 2.'')", span="2977-2980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1940 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", span="2972-2972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors()", file="JsonTextReaderTest.cs"];
m3_1152 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs"];
m3_1356 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m3_1357 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="2100-2100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m3_1358 [label="reader.Read()", span="2102-2102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m3_1359 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="2104-2104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m3_1360 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m3_2383 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", span="3680-3680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs"];
m3_2385 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3684-3684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs"];
m3_2384 [label="string json = @''pie''", span="3682-3682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs"];
m3_2386 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDouble(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3686-3686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs"];
m3_2387 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", span="3680-3680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_BadData()", file="JsonTextReaderTest.cs"];
m3_334 [label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0", cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonTextReaderTest.cs"];
m3_22 [label="listener.TraceEvent(eventCache, ''Newtonsoft.Json'', traceEventType, 0, message)", span="64-64", cluster="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonTextReaderTest.cs"];
m3_1527 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2347-2347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1529 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2351-2351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1530 [label="Assert.IsTrue(reader.Read())", span="2353-2353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1532 [label="Assert.IsTrue(reader.Read())", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1538 [label="Assert.IsTrue(reader.Read())", span="2364-2364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1531 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2354-2354", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1533 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2357-2357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1535 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2360-2360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1536 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2361-2361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1537 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2362-2362", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1539 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2365-2365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1528 [label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2349-2349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1534 [label="reader.ReadAsDateTimeOffset()", span="2359-2359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_1540 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2347-2347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m3_429 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="735-735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m3_431 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="739-739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m3_430 [label="string json = @'''hi' a''", span="737-737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m3_432 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="741-746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m3_433 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="735-735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m3_606 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="988-988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_617 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1002-1002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_618 [label="Assert.IsTrue(reader.Read())", span="1003-1003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_621 [label="Assert.IsTrue(reader.Read())", span="1006-1006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_624 [label="Assert.IsTrue(reader.Read())", span="1009-1009", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_625 [label="Assert.IsFalse(reader.Read())", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_622 [label="Assert.AreEqual((long)i, reader.Value)", span="1007-1007", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_616 [label="string json = sw.ToString()", span="1000-1000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_619 [label="int i = 0", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_620 [label="i < valueCount", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_623 [label="i++", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_608 [label="StringWriter sw = new StringWriter()", span="991-991", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_615 [label="writer.WriteEndArray()", span="998-998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_612 [label="i < valueCount", span="994-994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_607 [label="int valueCount = 10000", span="990-990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_609 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="992-992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_611 [label="int i = 0", span="994-994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_614 [label="i++", span="994-994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_613 [label="writer.WriteValue(i)", span="996-996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_610 [label="writer.WriteStartArray()", span="993-993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_626 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="988-988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m3_1484 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextReaderTest.cs"];
m3_1501 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2309-2309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1503 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2313-2313", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1504 [label="Assert.IsTrue(reader.Read())", span="2315-2315", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1506 [label="Assert.IsTrue(reader.Read())", span="2318-2318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1505 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2316-2316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1507 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2319-2319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1502 [label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2311-2311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1508 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2321-2321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1509 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2309-2309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m3_1393 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2154-2154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m3_1394 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2156-2156", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m3_1395 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2158-2158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m3_1396 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="2154-2154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m3_359 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_361 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="594-594", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_366 [label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="601-601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_362 [label="Assert.IsTrue(ms.CanRead)", span="596-596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_367 [label="Assert.IsTrue(ms.CanRead)", span="603-603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_369 [label="Assert.IsTrue(ms.CanRead)", span="605-605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_360 [label="MemoryStream ms = new MemoryStream()", span="593-593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_363 [label="reader.Close()", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_365 [label="ms = new MemoryStream()", span="600-600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_368 [label="reader.Close()", span="604-604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_364 [label="Assert.IsFalse(ms.CanRead)", span="598-598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_370 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m3_106 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_107 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'''))", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_111 [label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="220-220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_110 [label="CollectionAssert.AreEqual(expected, data)", span="218-218", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_114 [label="CollectionAssert.AreEqual(expected, data)", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_108 [label="byte[] data = jsonTextReader.ReadAsBytes()", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_112 [label="data = jsonTextReader.ReadAsBytes()", span="221-221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_109 [label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="216-216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_113 [label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="222-222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_115 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m3_1457 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2243-2243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1459 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2247-2247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1460 [label="Assert.IsTrue(reader.Read())", span="2249-2249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1462 [label="Assert.IsTrue(reader.Read())", span="2252-2252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1464 [label="Assert.IsTrue(reader.Read())", span="2255-2255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1467 [label="Assert.IsTrue(reader.Read())", span="2259-2259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1461 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2250-2250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1463 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2253-2253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1465 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2256-2256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1466 [label="Assert.AreEqual(11806310474565, reader.Value)", span="2257-2257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1468 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2260-2260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1458 [label="string json = @''{''''text'''':0xabcdef12345}''", span="2245-2245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1469 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="2243-2243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m3_1513 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2325-2325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1515 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2329-2329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1516 [label="Assert.IsTrue(reader.Read())", span="2331-2331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1518 [label="Assert.IsTrue(reader.Read())", span="2334-2334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1524 [label="Assert.IsTrue(reader.Read())", span="2342-2342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1517 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2332-2332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1519 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2335-2335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1521 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2338-2338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1522 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2339-2339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1523 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2340-2340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1525 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2343-2343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1514 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2327-2327", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1520 [label="reader.ReadAsDateTimeOffset()", span="2337-2337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_1526 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2325-2325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m3_592 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="970-970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m3_593 [label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="972-972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m3_594 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="974-974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m3_595 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="970-970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m3_1787 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2758-2758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_1789 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2761-2761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_1788 [label="string json = ''new Dat''", span="2760-2760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_1790 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2763-2763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_1791 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2758-2758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m3_2586 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3962-3962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2588 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3966-3966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2598 [label="reader = new JsonTextReader(new StringReader(json))", span="3979-3979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2608 [label="reader = new JsonTextReader(new StringReader(json))", span="3992-3992", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2618 [label="reader = new JsonTextReader(new StringReader(json))", span="4005-4005", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2628 [label="reader = new JsonTextReader(new StringReader(json))", span="4017-4017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2590 [label="Assert.IsTrue(reader.Read())", span="3969-3969", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2591 [label="Assert.IsTrue(reader.Read())", span="3970-3970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2594 [label="Assert.IsTrue(reader.Read())", span="3973-3973", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2597 [label="Assert.IsTrue(reader.Read())", span="3976-3976", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2600 [label="Assert.IsTrue(reader.Read())", span="3982-3982", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2601 [label="Assert.IsTrue(reader.Read())", span="3983-3983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2604 [label="Assert.IsTrue(reader.Read())", span="3986-3986", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2607 [label="Assert.IsTrue(reader.Read())", span="3989-3989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2610 [label="Assert.IsTrue(reader.Read())", span="3995-3995", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2611 [label="Assert.IsTrue(reader.Read())", span="3996-3996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2614 [label="Assert.IsTrue(reader.Read())", span="3999-3999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2617 [label="Assert.IsTrue(reader.Read())", span="4002-4002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2620 [label="Assert.IsTrue(reader.Read())", span="4008-4008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2627 [label="Assert.IsTrue(reader.Read())", span="4015-4015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2630 [label="Assert.IsTrue(reader.Read())", span="4020-4020", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2637 [label="Assert.IsTrue(reader.Read())", span="4027-4027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2592 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3971-3971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2593 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3972-3972", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2595 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3974-3974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2596 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3975-3975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2602 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3984-3984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2603 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3985-3985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2605 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3987-3987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2606 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3988-3988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2612 [label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3997-3997", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2613 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3998-3998", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2615 [label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="4000-4000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2616 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="4001-4001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2622 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="4010-4010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2623 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="4011-4011", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2625 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="4013-4013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2626 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="4014-4014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2632 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="4022-4022", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2633 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="4023-4023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2635 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="4025-4025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2636 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="4026-4026", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2587 [label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3964-3964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2589 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3967-3967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2599 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3980-3980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2609 [label="reader.DateParseHandling = Json.DateParseHandling.None", span="3993-3993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2619 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="4006-4006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2621 [label="reader.ReadAsDateTimeOffset()", span="4009-4009", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2624 [label="reader.ReadAsDateTimeOffset()", span="4012-4012", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2629 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="4018-4018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2631 [label="reader.ReadAsDateTime()", span="4021-4021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2634 [label="reader.ReadAsDateTime()", span="4024-4024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2638 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3962-3962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m3_2062 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", span="3158-3158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2064 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3162-3162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2065 [label="Assert.IsTrue(reader.Read())", span="3164-3164", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2067 [label="Assert.IsTrue(reader.Read())", span="3167-3167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2087 [label="Assert.IsTrue(reader.Read())", span="3197-3197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2089 [label="Assert.IsTrue(reader.Read())", span="3200-3200", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2066 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3165-3165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2068 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3168-3168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2069 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="3170-3170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2070 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3171-3171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2071 [label="Assert.AreEqual(2, reader.ReadAsInt32())", span="3173-3173", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2072 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3174-3174", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2073 [label="Assert.AreEqual(''three'', reader.ReadAsString())", span="3176-3176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2074 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3177-3177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2075 [label="Assert.AreEqual(''four'', reader.ReadAsString())", span="3179-3179", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2076 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3180-3180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2077 [label="Assert.AreEqual(null, reader.ReadAsString())", span="3182-3182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2078 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3183-3183", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2079 [label="Assert.AreEqual(null, reader.ReadAsInt32())", span="3185-3185", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2080 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3186-3186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2081 [label="Assert.AreEqual(3.99m, reader.ReadAsDecimal())", span="3188-3188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2082 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3189-3189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2083 [label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="3191-3191", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2084 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3192-3192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2086 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="3195-3195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2088 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3198-3198", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2090 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3201-3201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2091 [label="Assert.AreEqual(null, reader.ReadAsInt32())", span="3203-3203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2092 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3204-3204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2063 [label="string json = @''/*comment*/[/*comment*/1/*comment*/,2,/*comment*//*comment*/''''three''''/*comment*/,''''four''''/*comment*/,null,/*comment*/null,3.99,1.1/*comment*/,''/*comment*/]/*comment*/''", span="3160-3160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2085 [label="CollectionAssert.AreEquivalent(new byte[0], reader.ReadAsBytes())", span="3194-3194", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_2093 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", span="3158-3158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadValueComments()", file="JsonTextReaderTest.cs"];
m3_1486 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonTextReaderTest.cs"];
m3_1381 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2135-2135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m3_1382 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2137-2137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m3_1384 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2140-2140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m3_1383 [label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="2139-2139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m3_1385 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="2135-2135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m3_335 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_336 [label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="547-547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_337 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_338 [label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="553-553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_339 [label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_340 [label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="559-559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_341 [label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="562-562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_342 [label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="565-565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_343 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="568-568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_344 [label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="571-571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_345 [label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="573-573", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_346 [label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="574-574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_347 [label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="575-575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_348 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m3_2798 [label="Entry System.GC.WaitForPendingFinalizers()", span="0-0", cluster="System.GC.WaitForPendingFinalizers()", file="JsonTextReaderTest.cs"];
m3_2271 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3496-3496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2273 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3500-3500", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2274 [label="reader.Read()", span="3502-3502", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2276 [label="reader.Read()", span="3505-3505", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2278 [label="reader.Read()", span="3508-3508", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2280 [label="reader.Read()", span="3511-3511", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2282 [label="reader.Read()", span="3514-3514", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2284 [label="reader.Read()", span="3517-3517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2275 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3503-3503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2277 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3506-3506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2279 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3509-3509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2281 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3512-3512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2283 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="3515-3515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2285 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3518-3518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2272 [label="string json = @''[0,1,2 , 3]''", span="3498-3498", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_2286 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="3496-3496", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m3_264 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_266 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="447-447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_268 [label="Assert.IsTrue(reader.Read())", span="450-450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_270 [label="Assert.IsTrue(reader.Read())", span="453-453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_274 [label="Assert.IsTrue(reader.Read())", span="458-458", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_278 [label="Assert.IsTrue(reader.Read())", span="463-463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_282 [label="Assert.IsTrue(reader.Read())", span="468-468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_286 [label="Assert.IsTrue(reader.Read())", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_269 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_271 [label="Assert.AreEqual(1.0m, reader.Value)", span="454-454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_272 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="455-455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_273 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="456-456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_275 [label="Assert.AreEqual(1L, reader.Value)", span="459-459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_276 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="460-460", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_277 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="461-461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_279 [label="Assert.AreEqual(9.9m, reader.Value)", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_280 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="465-465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_281 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_283 [label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_284 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_285 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="471-471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_287 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_265 [label="string json = ''[1.0,1,9.9,1E-06]''", span="445-445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_267 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_288 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m3_1421 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m3_1422 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="2191-2191", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m3_1424 [label="Assert.AreEqual(2, data.Length)", span="2194-2194", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m3_1425 [label="Assert.AreEqual(1, data[0])", span="2195-2195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m3_1426 [label="Assert.AreEqual(2, data[1])", span="2196-2196", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m3_1423 [label="byte[] data = reader.ReadAsBytes()", span="2193-2193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m3_1427 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m3_2019 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", span="3098-3098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2020 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[56,56]''))", span="3100-3100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2021 [label="reader.Read()", span="3101-3101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2026 [label="Assert.IsTrue(reader.Read())", span="3119-3119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2025 [label="Assert.AreEqual(56, reader.ReadAsInt32())", span="3118-3118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2022 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 5. Path '', line 1, position 2.'')", span="3103-3106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2023 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: 6. Path '', line 1, position 3.'')", span="3108-3111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2024 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsDateTime();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[0]', line 1, position 4.'')", span="3113-3116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_2027 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", span="3098-3098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_Numbers_NotString()", file="JsonTextReaderTest.cs"];
m3_1976 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", span="3035-3035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1977 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,,1]''))", span="3037-3037", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1978 [label="reader.Read()", span="3038-3038", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1982 [label="Assert.IsTrue(reader.Read())", span="3047-3047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1981 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="3046-3046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1979 [label="reader.ReadAsInt32()", span="3039-3039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1980 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsInt32();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 4.'')", span="3041-3044", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_1983 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", span="3035-3035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNumberValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2788 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JsonTextReaderTest.cs"];
m3_1710 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2639-2639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1712 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2642-2642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1713 [label="Assert.IsTrue(reader.Read())", span="2644-2644", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1716 [label="Assert.IsTrue(reader.Read())", span="2648-2648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1714 [label="Assert.AreEqual(''Date'', reader.Value)", span="2645-2645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1715 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2646-2646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1717 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2649-2649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1711 [label="string json = ''new Date\n()''", span="2641-2641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1718 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2639-2639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m3_1296 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="2011-2011", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1298 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="2014-2014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1297 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="2013-2013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1299 [label="Assert.IsTrue(jsonReader.Read())", span="2016-2016", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1301 [label="Assert.IsTrue(jsonReader.Read())", span="2019-2019", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1304 [label="Assert.IsTrue(jsonReader.Read())", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1307 [label="Assert.IsTrue(jsonReader.Read())", span="2027-2027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1310 [label="Assert.IsTrue(jsonReader.Read())", span="2031-2031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1312 [label="Assert.IsFalse(jsonReader.Read())", span="2034-2034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1300 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="2017-2017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1302 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2020-2020", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1303 [label="Assert.AreEqual(250L, jsonReader.Value)", span="2021-2021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1305 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2024-2024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1306 [label="Assert.AreEqual(250L, jsonReader.Value)", span="2025-2025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1308 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="2028-2028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1309 [label="Assert.AreEqual(250L, jsonReader.Value)", span="2029-2029", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1311 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="2032-2032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_1313 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="2011-2011", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m3_358 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextReaderTest.cs"];
m3_954 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1533-1533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_957 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1538-1538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_958 [label="Assert.IsTrue(reader.Read())", span="1539-1539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_960 [label="Assert.IsTrue(reader.Read())", span="1541-1541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_961 [label="Assert.IsTrue(reader.Read())", span="1542-1542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_963 [label="Assert.IsTrue(reader.Read())", span="1544-1544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_967 [label="Assert.IsTrue(reader.Read())", span="1548-1548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_959 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1540-1540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_962 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1543-1543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_966 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1547-1547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_968 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1549-1549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_956 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1536-1536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_964 [label="byte[] data = reader.ReadAsBytes()", span="1545-1545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_969 [label="Assert.IsFalse(reader.Read())", span="1551-1551", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_965 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1546-1546", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_955 [label="string helloWorld = ''Hello world!''", span="1535-1535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_970 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1533-1533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m3_743 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1180-1180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_745 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1184-1184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_751 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1192-1192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_746 [label="reader.Read()", span="1185-1185", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_752 [label="reader.Read()", span="1193-1193", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_747 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1186-1186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_753 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1195-1195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_744 [label="BigInteger i = new BigInteger(long.MinValue)", span="1182-1182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_750 [label="BigInteger total = i + -j", span="1190-1190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_748 [label="int j = 1", span="1188-1188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_754 [label="j++", span="1188-1188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_749 [label="j < 1000", span="1188-1188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_755 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1180-1180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m3_627 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonTextReaderTest.cs"];
m3_2763 [label="Entry System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", span="0-0", cluster="System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", file="JsonTextReaderTest.cs"];
m3_740 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonTextReaderTest.cs"];
m3_1369 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2117-2117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m3_1370 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="2119-2119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m3_1372 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="2122-2122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m3_1371 [label="Assert.IsNull(reader.ReadAsBytes())", span="2121-2121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m3_1373 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="2117-2117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m3_1161 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="763-763", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m3_2337 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", span="3619-3619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2339 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3623-3623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2338 [label="string json = @''falseeeee''", span="3621-3621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2340 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBoolean(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="3625-3625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2341 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", span="3619-3619", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_1890 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", span="2910-2910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1891 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''{\''Test1\'':false1}''))", span="2912-2912", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1892 [label="Assert.IsTrue(reader.Read())", span="2914-2914", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1893 [label="Assert.IsTrue(reader.Read())", span="2915-2915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1895 [label="Assert.IsTrue(reader.Read())", span="2921-2921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1896 [label="Assert.IsTrue(reader.Read())", span="2922-2922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1897 [label="Assert.IsFalse(reader.Read())", span="2923-2923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1894 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsString(); },\r\n                ''Unexpected character encountered while parsing value: 1. Path 'Test1', line 1, position 14.'')", span="2917-2919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1898 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", span="2910-2910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_Boolean_Failure()", file="JsonTextReaderTest.cs"];
m3_1157 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs"];
m3_2399 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", span="3700-3700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs"];
m3_2401 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3704-3704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs"];
m3_2400 [label="string json = @''pie''", span="3702-3702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs"];
m3_2402 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3706-3706", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs"];
m3_2403 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", span="3700-3700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_BadData()", file="JsonTextReaderTest.cs"];
m3_846 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="511-511", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m3_1968 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReaderTest.cs"];
m3_605 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonTextReaderTest.cs"];
m3_1719 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2653-2653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1721 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2656-2656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1722 [label="Assert.IsTrue(reader.Read())", span="2658-2658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1724 [label="Assert.IsTrue(reader.Read())", span="2661-2661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1726 [label="Assert.IsTrue(reader.Read())", span="2664-2664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1728 [label="Assert.IsTrue(reader.Read())", span="2667-2667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1730 [label="Assert.IsTrue(reader.Read())", span="2670-2670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1732 [label="Assert.IsTrue(reader.Read())", span="2673-2673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1734 [label="Assert.IsTrue(reader.Read())", span="2676-2676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1723 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2659-2659", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1725 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2662-2662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1727 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2665-2665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1729 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2668-2668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1731 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2671-2671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1733 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2674-2674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1735 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2677-2677", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1720 [label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2655-2655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_1736 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2653-2653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m3_2008 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", span="3082-3082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2009 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''['',,'']''))", span="3084-3084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2010 [label="reader.Read()", span="3085-3085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2014 [label="Assert.IsTrue(reader.Read())", span="3094-3094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2013 [label="Assert.AreEqual(string.Empty, reader.ReadAsString())", span="3093-3093", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2011 [label="reader.ReadAsInt32()", span="3086-3086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2012 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                reader.ReadAsString();\r\n            }, ''Unexpected character encountered while parsing value: ,. Path '[1]', line 1, position 5.'')", span="3088-3091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_2015 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", span="3082-3082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadStringValue_CommaErrors_Multiple()", file="JsonTextReaderTest.cs"];
m3_119 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JsonTextReaderTest.cs"];
m3_2249 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="3462-3462", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m3_2251 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3466-3466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m3_2250 [label="string json = @''/''", span="3464-3464", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m3_2252 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="3468-3468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m3_2253 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="3462-3462", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m3_1842 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", span="2835-2835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs"];
m3_1843 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''null''))", span="2837-2837", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs"];
m3_1844 [label="Assert.AreEqual(null, reader.ReadAsDouble())", span="2838-2838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs"];
m3_1845 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", span="2835-2835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Null()", file="JsonTextReaderTest.cs"];
m3_2407 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", span="3710-3710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs"];
m3_2409 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3714-3714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs"];
m3_2408 [label="string json = @''pie''", span="3712-3712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs"];
m3_2410 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTime(); }, ''Unexpected character encountered while parsing value: p. Path '', line 1, position 1.'')", span="3716-3716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs"];
m3_2411 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", span="3710-3710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTime_BadData()", file="JsonTextReaderTest.cs"];
m3_2797 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="JsonTextReaderTest.cs"];
m3_2133 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="3273-3273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2135 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3295-3295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2136 [label="Assert.IsTrue(reader.Read())", span="3297-3297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2140 [label="Assert.IsTrue(reader.Read())", span="3302-3302", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2143 [label="Assert.IsTrue(reader.Read())", span="3306-3306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2146 [label="Assert.IsTrue(reader.Read())", span="3310-3310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2150 [label="Assert.IsTrue(reader.Read())", span="3315-3315", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2153 [label="Assert.IsTrue(reader.Read())", span="3319-3319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2157 [label="Assert.IsTrue(reader.Read())", span="3324-3324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2161 [label="Assert.IsTrue(reader.Read())", span="3329-3329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2165 [label="Assert.IsTrue(reader.Read())", span="3334-3334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2169 [label="Assert.IsTrue(reader.Read())", span="3339-3339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2172 [label="Assert.IsTrue(reader.Read())", span="3343-3343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2176 [label="Assert.IsTrue(reader.Read())", span="3348-3348", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2178 [label="Assert.IsTrue(reader.Read())", span="3351-3351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2181 [label="Assert.IsTrue(reader.Read())", span="3355-3355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2184 [label="Assert.IsTrue(reader.Read())", span="3359-3359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2187 [label="Assert.IsTrue(reader.Read())", span="3363-3363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2190 [label="Assert.IsTrue(reader.Read())", span="3367-3367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2192 [label="Assert.IsTrue(reader.Read())", span="3370-3370", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2195 [label="Assert.IsTrue(reader.Read())", span="3374-3374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2197 [label="Assert.IsTrue(reader.Read())", span="3377-3377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2199 [label="Assert.IsTrue(reader.Read())", span="3380-3380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2201 [label="Assert.IsTrue(reader.Read())", span="3383-3383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2203 [label="Assert.IsTrue(reader.Read())", span="3386-3386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2205 [label="Assert.IsTrue(reader.Read())", span="3389-3389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2207 [label="Assert.IsTrue(reader.Read())", span="3392-3392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2209 [label="Assert.IsTrue(reader.Read())", span="3395-3395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2211 [label="Assert.IsTrue(reader.Read())", span="3398-3398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2214 [label="Assert.IsTrue(reader.Read())", span="3402-3402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2217 [label="Assert.IsFalse(reader.Read())", span="3406-3406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2137 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3298-3298", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2138 [label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="3299-3299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2139 [label="Assert.AreEqual(1, reader.LineNumber)", span="3300-3300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2141 [label="Assert.AreEqual(2, reader.LineNumber)", span="3303-3303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2142 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="3304-3304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2144 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3307-3307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2145 [label="Assert.AreEqual(2, reader.LineNumber)", span="3308-3308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2147 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3311-3311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2148 [label="Assert.AreEqual(''Name'', reader.Value)", span="3312-3312", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2149 [label="Assert.AreEqual(3, reader.LineNumber)", span="3313-3313", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2151 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3316-3316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2152 [label="Assert.AreEqual(3, reader.LineNumber)", span="3317-3317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2154 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3320-3320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2155 [label="Assert.AreEqual(true, reader.Value)", span="3321-3321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2156 [label="Assert.AreEqual(4, reader.LineNumber)", span="3322-3322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2158 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3325-3325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2159 [label="Assert.AreEqual(''comment after true'', reader.Value)", span="3326-3326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2160 [label="Assert.AreEqual(4, reader.LineNumber)", span="3327-3327", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2162 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3330-3330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2163 [label="Assert.AreEqual(''comment after comma'', reader.Value)", span="3331-3331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2164 [label="Assert.AreEqual(5, reader.LineNumber)", span="3332-3332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2166 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3335-3335", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2167 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="3336-3336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2168 [label="Assert.AreEqual(6, reader.LineNumber)", span="3337-3337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2170 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3340-3340", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2171 [label="Assert.AreEqual(6, reader.LineNumber)", span="3341-3341", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2173 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="3344-3344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2174 [label="Assert.AreEqual(9, reader.LineNumber)", span="3345-3345", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2175 [label="Assert.AreEqual(''Date'', reader.Value)", span="3346-3346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2177 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3349-3349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2179 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="3352-3352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2180 [label="Assert.AreEqual(10, reader.LineNumber)", span="3353-3353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2182 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3356-3356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2183 [label="Assert.AreEqual(10, reader.LineNumber)", span="3357-3357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2185 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="3360-3360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2186 [label="Assert.AreEqual(11, reader.LineNumber)", span="3361-3361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2188 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3364-3364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2189 [label="Assert.AreEqual(''Price'', reader.Value)", span="3365-3365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2191 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3368-3368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2193 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="3371-3371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2194 [label="Assert.AreEqual(''Sizes'', reader.Value)", span="3372-3372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2196 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3375-3375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2198 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="3378-3378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2200 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3381-3381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2202 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3384-3384", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2204 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3387-3387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2206 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3390-3390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2208 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3393-3393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2210 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="3396-3396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2212 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3399-3399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2213 [label="Assert.AreEqual(''comment '', reader.Value)", span="3400-3400", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2215 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="3403-3403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2216 [label="Assert.AreEqual(''comment 1 '', reader.Value)", span="3404-3404", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2134 [label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n                          @'',//comment after comma'' + StringUtils.CarriageReturnLineFeed +\r\n                          @''''''ExpiryDate''''://comment'' + StringUtils.LineFeed +\r\n                          @''new '' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="3275-3293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_2218 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="3273-3273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m3_1558 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2391-2391", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1560 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2395-2395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1562 [label="Assert.IsTrue(reader.Read())", span="2398-2398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1564 [label="Assert.IsTrue(reader.Read())", span="2401-2401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1571 [label="Assert.IsTrue(reader.Read())", span="2411-2411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1563 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2399-2399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1565 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2402-2402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1567 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2405-2405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1568 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2406-2406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1572 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2412-2412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1570 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2409-2409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1559 [label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2393-2393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1561 [label="reader.Culture = new CultureInfo(''en-US'')", span="2396-2396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1566 [label="reader.ReadAsDateTimeOffset()", span="2404-2404", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1569 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2408-2408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_1573 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2391-2391", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m3_629 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextReaderTest.cs"];
m3_128 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="241-241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m3_130 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="247-247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m3_131 [label="Assert.IsTrue(jsonTextReader.Read())", span="249-249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m3_132 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m3_133 [label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="252-254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m3_129 [label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="243-245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m3_134 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="241-241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m3_1557 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderTest.cs"];
m3_1159 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonTextReaderTest.cs"];
m3_202 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="349-349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_204 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="355-355", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_205 [label="Assert.IsTrue(jsonTextReader.Read())", span="357-357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_207 [label="Assert.IsTrue(jsonTextReader.Read())", span="360-360", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_211 [label="Assert.IsTrue(jsonTextReader.Read())", span="371-371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_213 [label="Assert.IsFalse(jsonTextReader.Read())", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_206 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_208 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_212 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="372-372", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_203 [label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="351-353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_209 [label="jsonTextReader.ReadAsBytes()", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_210 [label=FormatException, span="367-367", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_214 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="349-349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m3_176 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReaderTest.cs"];
m3_356 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextReaderTest.cs"];
m3_2287 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", span="3523-3523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2289 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3545-3545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2290 [label="Assert.IsTrue(reader.Read())", span="3550-3550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2291 [label="Assert.AreEqual('''', reader.Path)", span="3551-3551", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2292 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3553-3553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2293 [label="Assert.AreEqual(''[0]'', reader.Path)", span="3554-3554", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2294 [label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3556-3556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2295 [label="Assert.AreEqual(''[1]'', reader.Path)", span="3557-3557", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2296 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3559-3559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2297 [label="Assert.AreEqual(''[2]'', reader.Path)", span="3560-3560", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2298 [label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3562-3562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2299 [label="Assert.AreEqual(''[3]'', reader.Path)", span="3563-3563", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2300 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3565-3565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2301 [label="Assert.AreEqual(''[4]'', reader.Path)", span="3566-3566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2302 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3568-3568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2303 [label="Assert.AreEqual(''[5]'', reader.Path)", span="3569-3569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2304 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3571-3571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2305 [label="Assert.AreEqual(''[6]'', reader.Path)", span="3572-3572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2306 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3574-3574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2307 [label="Assert.AreEqual(''[7]'', reader.Path)", span="3575-3575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2308 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3577-3577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2309 [label="Assert.AreEqual(''[8]'', reader.Path)", span="3578-3578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2310 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3580-3580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2311 [label="Assert.AreEqual(''[9]'', reader.Path)", span="3581-3581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2312 [label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="3583-3583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2313 [label="Assert.AreEqual(''[10]'', reader.Path)", span="3584-3584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2314 [label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3586-3586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2315 [label="Assert.AreEqual(''[11]'', reader.Path)", span="3587-3587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2316 [label="Assert.AreEqual(false, reader.ReadAsBoolean())", span="3589-3589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2317 [label="Assert.AreEqual(''[12]'', reader.Path)", span="3590-3590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2318 [label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3592-3592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2319 [label="Assert.AreEqual(''[13]'', reader.Path)", span="3593-3593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2320 [label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3595-3595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2321 [label="Assert.AreEqual(''[14]'', reader.Path)", span="3596-3596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2322 [label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3598-3598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2323 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="3599-3599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2324 [label="Assert.AreEqual('''', reader.Path)", span="3600-3600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2325 [label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="3602-3602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2326 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="3603-3603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2327 [label="Assert.AreEqual('''', reader.Path)", span="3604-3604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2288 [label="string json = @''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  // comment!\r\n  /* comment! */\r\n  '',\r\n  null\r\n]''", span="3525-3543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_2328 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", span="3523-3523", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBoolean()", file="JsonTextReaderTest.cs"];
m3_1407 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2171-2171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m3_1408 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="2173-2173", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m3_1409 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 2.'')", span="2175-2175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m3_1410 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="2171-2171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m3_357 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextReaderTest.cs"];
m3_1851 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", span="2849-2849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs"];
m3_1852 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''0XCAFEBABE''))", span="2851-2851", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs"];
m3_1853 [label="Assert.AreEqual(3405691582d, reader.ReadAsDouble())", span="2852-2852", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs"];
m3_1854 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", span="2849-2849", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDouble_Hex()", file="JsonTextReaderTest.cs"];
m3_1487 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2287-2287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1489 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2291-2291", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1490 [label="Assert.IsTrue(reader.Read())", span="2293-2293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1492 [label="Assert.IsTrue(reader.Read())", span="2296-2296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1498 [label="Assert.IsTrue(reader.Read())", span="2304-2304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1491 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2294-2294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1493 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2297-2297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1495 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2300-2300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1496 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2301-2301", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1497 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2302-2302", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1499 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2305-2305", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1488 [label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2289-2289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1494 [label="reader.ReadAsDateTimeOffset()", span="2299-2299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1500 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2287-2287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m3_1615 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2477-2477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m3_1616 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2479-2479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m3_1617 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end when reading JSON. Path '', line 1, position 3.'')", span="2481-2481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m3_1618 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2477-2477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m3_2789 [label="Entry System.Net.Sockets.Socket.Send(byte[])", span="0-0", cluster="System.Net.Sockets.Socket.Send(byte[])", file="JsonTextReaderTest.cs"];
m3_172 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonTextReaderTest.cs"];
m3_1154 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="921-921", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs"];
m3_2345 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", span="3629-3629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2347 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3633-3633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2346 [label="string json = @''falseeeee''", span="3631-3631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2348 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsString(); }, ''Unexpected character encountered while parsing value: e. Path '', line 1, position 5.'')", span="3635-3635", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2349 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", span="3629-3629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsString_AdditionalBadData()", file="JsonTextReaderTest.cs"];
m3_2500 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="JsonTextReaderTest.cs"];
m3_2219 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", span="3410-3410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2221 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3419-3419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2222 [label="reader.Read()", span="3421-3421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2236 [label="reader.Read()", span="3440-3440", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2239 [label="Assert.IsFalse(reader.Read())", span="3444-3444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2223 [label="Assert.AreEqual(1, reader.LineNumber)", span="3422-3422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2225 [label="Assert.AreEqual(2, reader.LineNumber)", span="3425-3425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2226 [label="Assert.AreEqual(''[0]'', reader.Path)", span="3426-3426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2228 [label="Assert.AreEqual(3, reader.LineNumber)", span="3429-3429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2229 [label="Assert.AreEqual(''[1]'', reader.Path)", span="3430-3430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2231 [label="Assert.AreEqual(4, reader.LineNumber)", span="3433-3433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2232 [label="Assert.AreEqual(''[2]'', reader.Path)", span="3434-3434", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2234 [label="Assert.AreEqual(5, reader.LineNumber)", span="3437-3437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2235 [label="Assert.AreEqual(''[3]'', reader.Path)", span="3438-3438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2237 [label="Assert.AreEqual(6, reader.LineNumber)", span="3441-3441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2238 [label="Assert.AreEqual(string.Empty, reader.Path)", span="3442-3442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2220 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="3412-3417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2224 [label="reader.ReadAsInt32()", span="3424-3424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2227 [label="reader.ReadAsInt32()", span="3428-3428", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2230 [label="reader.ReadAsInt32()", span="3432-3432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2233 [label="reader.ReadAsInt32()", span="3436-3436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_2240 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", span="3410-3410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullIntLineNumberAndPosition()", file="JsonTextReaderTest.cs"];
m3_1442 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2216-2216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1444 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2220-2220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1445 [label="Assert.IsTrue(reader.Read())", span="2225-2225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1447 [label="Assert.IsTrue(reader.Read())", span="2228-2228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1450 [label="Assert.IsTrue(reader.Read())", span="2232-2232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1453 [label="Assert.IsTrue(reader.Read())", span="2236-2236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1455 [label="Assert.IsFalse(reader.Read())", span="2239-2239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1446 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2226-2226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1448 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2229-2229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1449 [label="Assert.AreEqual(''Message'', reader.Value)", span="2230-2230", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1451 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2233-2233", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1452 [label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="2234-2234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1454 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2237-2237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1443 [label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="2218-2218", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_1456 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="2216-2216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m3_2885 [label=total, span="", file="JsonTextReaderTest.cs"];
m3_2886 [label=total, span="", file="JsonTextReaderTest.cs"];
m3_2949 [label=json, span="", file="JsonTextReaderTest.cs"];
m3_2874 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2875 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2876 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2878 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2879 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2880 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2882 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2883 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2884 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2896 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2897 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2898 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2899 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2909 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2910 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2911 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2912 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2913 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2914 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2915 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2916 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2918 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2920 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2931 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2946 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2947 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2948 [label=jsonTextReader, span="", file="JsonTextReaderTest.cs"];
m3_2877 [label="Newtonsoft.Json.Tests.JsonTextReaderTest", span="", file="JsonTextReaderTest.cs"];
m3_2919 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2928 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2929 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2932 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2934 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2937 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2943 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2944 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2872 [label=jsonTextReader, span="", file="JsonTextReaderTest.cs"];
m3_2873 [label=jsonTextReader, span="", file="JsonTextReaderTest.cs"];
m3_2881 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2889 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2890 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2891 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2892 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2893 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2894 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2895 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2900 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2901 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2902 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2903 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2904 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2905 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2906 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2907 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2908 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2917 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2921 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2922 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2923 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2924 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2925 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2926 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2927 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2930 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2933 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2935 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2936 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2938 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2939 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2940 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2941 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2942 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2945 [label=reader, span="", file="JsonTextReaderTest.cs"];
m3_2955 [label="Newtonsoft.Json.Tests.ToggleReaderError", span="", file="JsonTextReaderTest.cs"];
m3_2953 [label=clientReceivedEvent, span="", file="JsonTextReaderTest.cs"];
m3_2951 [label=serverStartedEvent, span="", file="JsonTextReaderTest.cs"];
m3_2952 [label=jsonArrayElementsCount, span="", file="JsonTextReaderTest.cs"];
m3_2950 [label=port, span="", file="JsonTextReaderTest.cs"];
m5_49 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JTokenWriterTest.cs"];
m5_51 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JTokenWriterTest.cs"];
m5_164 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_165 [label="JTokenWriter writer = new JTokenWriter()", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_166 [label="writer.WriteStartObject()", span="272-272", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_167 [label="writer.WritePropertyName(''prop1'')", span="274-274", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_168 [label="writer.WriteStartObject()", span="275-275", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_169 [label="writer.WriteEndObject()", span="276-276", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_170 [label="writer.WritePropertyName(''prop1'')", span="278-278", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_171 [label="writer.WriteStartArray()", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_172 [label="writer.WriteEndArray()", span="280-280", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_173 [label="writer.WriteEndObject()", span="282-282", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_174 [label="StringAssert.AreEqual(@''{\r\n  ''''prop1'''': []\r\n}'', writer.Token.ToString())", span="284-286", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_175 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteDuplicatePropertyName()", file="JTokenWriterTest.cs"];
m5_41 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", span="350-350", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(bool)", file="JTokenWriterTest.cs"];
m5_40 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="278-278", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JTokenWriterTest.cs"];
m5_43 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", span="340-340", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(double)", file="JTokenWriterTest.cs"];
m5_84 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JTokenWriterTest.cs"];
m5_39 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", span="381-381", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(char)", file="JTokenWriterTest.cs"];
m5_125 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="263-263", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenWriterTest.cs"];
m5_154 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", span="258-258", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(string)", file="JTokenWriterTest.cs"];
m5_134 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JTokenWriterTest.cs"];
m5_80 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JTokenWriterTest.cs"];
m5_136 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_137 [label="JTokenWriter writer = new JTokenWriter()", span="215-215", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_138 [label="writer.WriteStartArray()", span="217-217", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_139 [label="writer.WriteValue(new BigInteger(123))", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_140 [label="writer.WriteEndArray()", span="219-219", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_141 [label="JValue i = (JValue)writer.Token[0]", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_144 [label="StringAssert.AreEqual(@''[\r\n  123\r\n]'', writer.Token.ToString())", span="226-228", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_142 [label="Assert.AreEqual(new BigInteger(123), i.Value)", span="223-223", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_143 [label="Assert.AreEqual(JTokenType.Integer, i.Type)", span="224-224", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_145 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteBigInteger()", file="JTokenWriterTest.cs"];
m5_42 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="288-288", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="JTokenWriterTest.cs"];
m5_163 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="900-900", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JTokenWriterTest.cs"];
m5_86 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_87 [label="JTokenWriter jsonWriter = new JTokenWriter()", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_88 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="147-147", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_89 [label="Assert.AreEqual(null, jsonWriter.CurrentToken)", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_90 [label="jsonWriter.WriteStartObject()", span="150-150", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_91 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="151-151", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_92 [label="Assert.AreEqual(jsonWriter.Token, jsonWriter.CurrentToken)", span="152-152", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_93 [label="JObject o = (JObject)jsonWriter.Token", span="154-154", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_94 [label="jsonWriter.WritePropertyName(''CPU'')", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_95 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="157-157", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_96 [label="Assert.AreEqual(o.Property(''CPU''), jsonWriter.CurrentToken)", span="158-158", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_97 [label="jsonWriter.WriteValue(''Intel'')", span="160-160", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_98 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="161-161", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_99 [label="Assert.AreEqual(o[''CPU''], jsonWriter.CurrentToken)", span="162-162", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_100 [label="jsonWriter.WritePropertyName(''Drives'')", span="164-164", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_101 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="165-165", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_102 [label="Assert.AreEqual(o.Property(''Drives''), jsonWriter.CurrentToken)", span="166-166", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_103 [label="jsonWriter.WriteStartArray()", span="168-168", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_104 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="169-169", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_105 [label="Assert.AreEqual(o[''Drives''], jsonWriter.CurrentToken)", span="170-170", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_106 [label="JArray a = (JArray)jsonWriter.CurrentToken", span="172-172", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_107 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="174-174", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_108 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="175-175", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_109 [label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="176-176", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_110 [label="jsonWriter.WriteValue(new BigInteger(123))", span="179-179", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_111 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="180-180", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_112 [label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="181-181", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_113 [label="jsonWriter.WriteValue(new byte[0])", span="184-184", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_114 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="185-185", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_115 [label="Assert.AreEqual(a[a.Count - 1], jsonWriter.CurrentToken)", span="186-186", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_116 [label="jsonWriter.WriteEnd()", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_117 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="189-189", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_118 [label="Assert.AreEqual(a, jsonWriter.CurrentToken)", span="190-190", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_119 [label="jsonWriter.WriteEndObject()", span="192-192", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_120 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_121 [label="Assert.AreEqual(o, jsonWriter.CurrentToken)", span="194-194", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_122 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", span="143-143", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.CurrentToken()", file="JTokenWriterTest.cs"];
m5_123 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="107-107", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JTokenWriterTest.cs"];
m5_124 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="174-174", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JTokenWriterTest.cs"];
m5_133 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", span="268-268", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteComment(string)", file="JTokenWriterTest.cs"];
m5_53 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_54 [label="JsonWriter jsonWriter = new JTokenWriter()", span="104-104", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_55 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_56 [label="jsonWriter.WriteStartObject()", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_57 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_58 [label="jsonWriter.WritePropertyName(''CPU'')", span="111-111", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_59 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="112-112", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_60 [label="jsonWriter.WriteValue(''Intel'')", span="114-114", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_61 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="115-115", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_62 [label="jsonWriter.WritePropertyName(''Drives'')", span="117-117", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_63 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="118-118", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_64 [label="jsonWriter.WriteStartArray()", span="120-120", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_65 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_66 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_67 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="124-124", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_68 [label="jsonWriter.WriteValue(new BigInteger(123))", span="127-127", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_69 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="128-128", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_70 [label="jsonWriter.WriteValue(new byte[0])", span="131-131", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_71 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="132-132", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_72 [label="jsonWriter.WriteEnd()", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_73 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="135-135", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_74 [label="jsonWriter.WriteEndObject()", span="137-137", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_75 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="138-138", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_76 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.State()", file="JTokenWriterTest.cs"];
m5_81 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JTokenWriterTest.cs"];
m5_79 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenWriterTest.cs"];
m5_85 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JTokenWriterTest.cs"];
m5_52 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JTokenWriterTest.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_1 [label="byte[] data = Encoding.UTF8.GetBytes(''Hello world.'')", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_2 [label="JToken root", span="62-62", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_17 [label="jsonWriter.WriteValue(data)", span="78-78", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_34 [label="Assert.AreEqual(data, (byte[])root[12])", span="98-98", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_3 [label="JTokenWriter jsonWriter = new JTokenWriter()", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_4 [label="jsonWriter.WriteStartArray()", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_5 [label="jsonWriter.WriteValue('@')", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_6 [label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="67-67", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_7 [label="jsonWriter.WriteValue(true)", span="68-68", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_8 [label="jsonWriter.WriteValue(10)", span="69-69", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_9 [label="jsonWriter.WriteValue(10.99)", span="70-70", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_10 [label="jsonWriter.WriteValue(0.99)", span="71-71", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_11 [label="jsonWriter.WriteValue(0.000000000000000001d)", span="72-72", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_12 [label="jsonWriter.WriteValue(0.000000000000000001m)", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_13 [label="jsonWriter.WriteValue((string)null)", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_14 [label="jsonWriter.WriteValue(''This is a string.'')", span="75-75", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_15 [label="jsonWriter.WriteNull()", span="76-76", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_16 [label="jsonWriter.WriteUndefined()", span="77-77", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_18 [label="jsonWriter.WriteEndArray()", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_19 [label="root = jsonWriter.Token", span="81-81", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_20 [label="CustomAssert.IsInstanceOfType(typeof(JArray), root)", span="84-84", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_21 [label="Assert.AreEqual(13, root.Children().Count())", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_22 [label="Assert.AreEqual(''@'', (string)root[0])", span="86-86", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_23 [label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', (string)root[1])", span="87-87", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_24 [label="Assert.AreEqual(true, (bool)root[2])", span="88-88", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_25 [label="Assert.AreEqual(10, (int)root[3])", span="89-89", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_26 [label="Assert.AreEqual(10.99, (double)root[4])", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_27 [label="Assert.AreEqual(0.99, (double)root[5])", span="91-91", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_28 [label="Assert.AreEqual(0.000000000000000001d, (double)root[6])", span="92-92", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_29 [label="Assert.AreEqual(0.000000000000000001m, (decimal)root[7])", span="93-93", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_30 [label="Assert.AreEqual(null, (string)root[8])", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_31 [label="Assert.AreEqual(''This is a string.'', (string)root[9])", span="95-95", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_32 [label="Assert.AreEqual(null, ((JValue)root[10]).Value)", span="96-96", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_33 [label="Assert.AreEqual(null, ((JValue)root[11]).Value)", span="97-97", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_35 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", span="58-58", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.ValueFormatting()", file="JTokenWriterTest.cs"];
m5_83 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1358-1358", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JTokenWriterTest.cs"];
m5_78 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenWriterTest.cs"];
m5_155 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", span="252-252", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_156 [label="JTokenWriter writer = new JTokenWriter()", span="254-254", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_157 [label="writer.WriteStartArray()", span="256-256", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_158 [label="writer.WriteRawValue(''fail'')", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_159 [label="writer.WriteRawValue(''fail'')", span="258-258", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_160 [label="writer.WriteEndArray()", span="259-259", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_161 [label="StringAssert.AreEqual(@''[\r\n  fail,\r\n  fail\r\n]'', writer.Token.ToString())", span="261-264", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_162 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", span="252-252", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRawValue()", file="JTokenWriterTest.cs"];
m5_48 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JTokenWriterTest.cs"];
m5_46 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", span="248-248", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined()", file="JTokenWriterTest.cs"];
m5_176 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", span="290-290", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs"];
m5_177 [label="JTokenWriter writer = new JTokenWriter\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="292-295", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs"];
m5_178 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="297-297", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs"];
m5_179 [label="JValue value = (JValue)writer.Token", span="299-299", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs"];
m5_180 [label="DateTime dt = (DateTime)value.Value", span="300-300", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs"];
m5_181 [label="Assert.AreEqual(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc), dt)", span="302-302", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs"];
m5_182 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", span="290-290", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.DateTimeZoneHandling()", file="JTokenWriterTest.cs"];
m5_45 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", span="239-239", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteNull()", file="JTokenWriterTest.cs"];
m5_184 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", span="428-428", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)", file="JTokenWriterTest.cs"];
m5_44 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", span="418-418", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(decimal)", file="JTokenWriterTest.cs"];
m5_82 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JTokenWriterTest.cs"];
m5_183 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JTokenWriterTest.cs"];
m5_37 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JTokenWriterTest.cs"];
m5_47 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", span="451-451", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(byte[])", file="JTokenWriterTest.cs"];
m5_50 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JTokenWriterTest.cs"];
m5_135 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JTokenWriterTest.cs"];
m5_146 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", span="233-233", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_147 [label="JTokenWriter writer = new JTokenWriter()", span="235-235", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_148 [label="writer.WriteStartArray()", span="237-237", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_149 [label="writer.WriteRaw(''fail'')", span="238-238", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_150 [label="writer.WriteRaw(''fail'')", span="239-239", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_151 [label="writer.WriteEndArray()", span="240-240", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_152 [label="StringAssert.AreEqual(@''[\r\n  fail,\r\n  fail\r\n]'', writer.Token.ToString())", span="245-248", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_153 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", span="233-233", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteRaw()", file="JTokenWriterTest.cs"];
m5_126 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs"];
m5_127 [label="JTokenWriter writer = new JTokenWriter()", span="201-201", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs"];
m5_128 [label="writer.WriteStartArray()", span="203-203", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs"];
m5_129 [label="writer.WriteComment(''fail'')", span="204-204", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs"];
m5_130 [label="writer.WriteEndArray()", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs"];
m5_131 [label="StringAssert.AreEqual(@''[\r\n  /*fail*/]'', writer.Token.ToString())", span="207-208", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs"];
m5_132 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.JTokenWriterTest.WriteComment()", file="JTokenWriterTest.cs"];
m5_36 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JTokenWriterTest.cs"];
m5_38 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JTokenWriterTest.cs"];
m5_77 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenWriterTest.cs"];
m6_527 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_Converter()", span="1349-1349", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_Converter()", file="LinqToJsonTest.cs"];
m6_528 [label="JObject o = JObject.Parse(''{'FooBar':'SOME_OTHER_VALUE'}'')", span="1351-1351", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_Converter()", file="LinqToJsonTest.cs"];
m6_529 [label="FooBar e = o[''FooBar''].ToObject<FooBar>()", span="1353-1353", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_Converter()", file="LinqToJsonTest.cs"];
m6_530 [label="Assert.AreEqual(FooBar.SomeOtherValue, e)", span="1354-1354", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_Converter()", file="LinqToJsonTest.cs"];
m6_531 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_Converter()", span="1349-1349", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_Converter()", file="LinqToJsonTest.cs"];
m6_305 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", span="690-690", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", file="LinqToJsonTest.cs"];
m6_61 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="LinqToJsonTest.cs"];
m6_260 [label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="289-289", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="LinqToJsonTest.cs"];
m6_29 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="LinqToJsonTest.cs"];
m6_492 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="LinqToJsonTest.cs"];
m6_57 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_58 [label="IEnumerable tokens = new JEnumerable<JToken>()", span="136-136", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_59 [label="Assert.AreEqual(0, tokens.Cast<JToken>().Count())", span="138-138", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_60 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_299 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="LinqToJsonTest.cs"];
m6_137 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="LinqToJsonTest.cs"];
m6_461 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="LinqToJsonTest.cs"];
m6_31 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_32 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JArray.Parse(''[1,''),\r\n                ''Unexpected end of content while loading JArray. Path '[0]', line 1, position 3.'')", span="108-110", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_33 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JArray.Parse(''[1''),\r\n                ''Unexpected end of content while loading JArray. Path '[0]', line 1, position 2.'')", span="112-114", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_34 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JObject.Parse(''{'key':1,''),\r\n                ''Unexpected end of content while loading JObject. Path 'key', line 1, position 9.'')", span="116-118", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_35 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JObject.Parse(''{'key':1''),\r\n                ''Unexpected end of content while loading JObject. Path 'key', line 1, position 8.'')", span="120-122", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_36 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_392 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="943-943", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_393 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="945-951", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_394 [label="JsonSerializer serializer = new JsonSerializer()", span="953-953", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_399 [label="serializer.Serialize(writer, o)", span="958-958", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_395 [label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="954-954", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_396 [label="StringWriter sw = new StringWriter()", span="955-955", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_397 [label="JsonWriter writer = new JsonTextWriter(sw)", span="956-956", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_400 [label="string json = sw.ToString()", span="960-960", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_398 [label="writer.Formatting = Formatting.Indented", span="957-957", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_401 [label="StringAssert.AreEqual(@''{\r\n  ''''Test1'''': new Date(\r\n    971586305000\r\n  ),\r\n  ''''Test2'''': new Date(\r\n    971546045000\r\n  ),\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', json)", span="962-971", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_402 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="943-943", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_274 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="599-599", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_275 [label="string json = @''{''''Color'''':2,''''Establised'''':new Date(1264118400000),''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':new Date(949532490000),''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':new Date(-62135596800000),''''Price'''':0}]}''", span="601-601", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_276 [label="JObject o = JObject.Parse(json)", span="603-603", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_277 [label="StringAssert.AreEqual(@''''''Establised'''': new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').ToString())", span="605-607", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_278 [label="StringAssert.AreEqual(@''new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').Value.ToString())", span="608-610", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_279 [label="Assert.AreEqual(@''''''Width'''': 1.1'', o.Property(''Width'').ToString())", span="611-611", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_280 [label="Assert.AreEqual(@''1.1'', ((JValue)o.Property(''Width'').Value).ToString(CultureInfo.InvariantCulture))", span="612-612", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_281 [label="Assert.AreEqual(@''''''Open'''': false'', o.Property(''Open'').ToString())", span="613-613", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_282 [label="Assert.AreEqual(@''False'', o.Property(''Open'').Value.ToString())", span="614-614", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_283 [label="json = @''[null,undefined]''", span="616-616", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_284 [label="JArray a = JArray.Parse(json)", span="618-618", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_285 [label="StringAssert.AreEqual(@''[\r\n  null,\r\n  undefined\r\n]'', a.ToString())", span="619-622", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_286 [label="Assert.AreEqual(@'''', a.Children().ElementAt(0).ToString())", span="623-623", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_287 [label="Assert.AreEqual(@'''', a.Children().ElementAt(1).ToString())", span="624-624", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_288 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="599-599", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_162 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", span="339-339", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_163 [label="int v1 = int.MaxValue", span="341-341", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_165 [label="JObject o = new JObject(new JProperty(propertyName, value))", span="344-344", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_166 [label="Assert.AreEqual(expectedPath, value.Path)", span="346-346", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_164 [label="JValue value = new JValue(v1)", span="342-342", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_167 [label="JValue selectedValue = (JValue)o.SelectToken(value.Path)", span="348-348", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_168 [label="Assert.AreEqual(value, selectedValue)", span="350-350", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_169 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", span="339-339", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_493 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="1270-1270", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_494 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="1272-1279", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_495 [label="JObject o = JObject.FromObject(c1)", span="1280-1280", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_498 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="1291-1291", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_499 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="1292-1292", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_500 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="1293-1293", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_501 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_502 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="1295-1295", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_503 [label="string j = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1297-1297", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_496 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', o.ToString())", span="1282-1288", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_497 [label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="1290-1290", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_504 [label="StringAssert.AreEqual(j, o.ToString())", span="1299-1299", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_505 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="1270-1270", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_578 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs"];
m6_228 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="LinqToJsonTest.cs"];
m6_71 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="LinqToJsonTest.cs"];
m6_25 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="400-400", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="LinqToJsonTest.cs"];
m6_55 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable()", span="41-41", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable()", file="LinqToJsonTest.cs"];
m6_198 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="346-346", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs"];
m6_272 [label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="327-327", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="LinqToJsonTest.cs"];
m6_526 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="LinqToJsonTest.cs"];
m6_209 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="410-410", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_210 [label="string json = @''{\r\n        CPU: 'Intel',\r\n        Drives: [\r\n          'DVD read/writer',\r\n          ''''500 gigabyte hard drive''''\r\n        ]\r\n      }''", span="412-418", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_211 [label="JObject o = JObject.Parse(json)", span="420-420", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_212 [label="IList<JProperty> properties = o.Properties().ToList()", span="421-421", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_220 [label="List<object> parameterValues =\r\n                (from p in o.Properties()\r\n                    where p.Value is JValue\r\n                    select ((JValue)p.Value).Value).ToList()", span="432-435", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_213 [label="Assert.AreEqual(''CPU'', properties[0].Name)", span="423-423", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_214 [label="Assert.AreEqual(''Intel'', (string)properties[0].Value)", span="424-424", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_215 [label="Assert.AreEqual(''Drives'', properties[1].Name)", span="425-425", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_216 [label="JArray list = (JArray)properties[1].Value", span="427-427", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_217 [label="Assert.AreEqual(2, list.Children().Count())", span="428-428", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_218 [label="Assert.AreEqual(''DVD read/writer'', (string)list.Children().ElementAt(0))", span="429-429", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_219 [label="Assert.AreEqual(''500 gigabyte hard drive'', (string)list.Children().ElementAt(1))", span="430-430", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_221 [label="Assert.AreEqual(1, parameterValues.Count)", span="437-437", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_222 [label="Assert.AreEqual(''Intel'', parameterValues[0])", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_223 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="410-410", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_580 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="385-385", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="LinqToJsonTest.cs"];
m6_5 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_ULong.TestClass_ULong()", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_ULong.TestClass_ULong()", file="LinqToJsonTest.cs"];
m6_141 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", span="287-287", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_142 [label="JObject o = new JObject\r\n            {\r\n                {\r\n                    ''person'',\r\n                    new JObject\r\n                    {\r\n                        { ''$id'', 1 }\r\n                    }\r\n                }\r\n            }", span="289-298", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_143 [label="JContainer idProperty = o[''person''][''$id''].Parent", span="300-300", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_144 [label="Assert.AreEqual(''person.$id'', idProperty.Path)", span="301-301", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_145 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", span="287-287", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_130 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", span="275-275", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_131 [label="StringReader textReader = new StringReader(@''[]'')", span="277-277", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_132 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_133 [label="jsonReader.Read()", span="280-280", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_134 [label="jsonReader.Read()", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_135 [label="ExceptionAssert.Throws<JsonReaderException>(() => JToken.ReadFrom(jsonReader), @''Error reading JToken from JsonReader. Unexpected token: EndArray. Path '', line 1, position 2.'')", span="283-283", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_136 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", span="275-275", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_236 [label="Entry Newtonsoft.Json.Linq.JContainer.Values<T>()", span="280-280", cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="LinqToJsonTest.cs"];
m6_196 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="LinqToJsonTest.cs"];
m6_41 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="157-157", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="LinqToJsonTest.cs"];
m6_205 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="LinqToJsonTest.cs"];
m6_410 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="LinqToJsonTest.cs"];
m6_9 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs"];
m6_10 [label="TestClass_Byte instance = new TestClass_Byte { Value = byte.MaxValue }", span="81-81", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs"];
m6_11 [label="JObject output = JObject.FromObject(instance)", span="82-82", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs"];
m6_12 [label="StringAssert.AreEqual(@''{\r\n  ''''Value'''': 255\r\n}'', output.ToString())", span="84-86", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs"];
m6_13 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ByteMaxValue()", file="LinqToJsonTest.cs"];
m6_156 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", span="331-331", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_157 [label="EscapedPathAssert(''this has spaces'', ''['this has spaces']'')", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_158 [label="EscapedPathAssert(''(RoundBraces)'', ''['(RoundBraces)']'')", span="334-334", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_159 [label="EscapedPathAssert(''[SquareBraces]'', ''['[SquareBraces]']'')", span="335-335", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_160 [label="EscapedPathAssert(''this.has.dots'', ''['this.has.dots']'')", span="336-336", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_161 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", span="331-331", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_171 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="LinqToJsonTest.cs"];
m6_507 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="LinqToJsonTest.cs"];
m6_258 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="LinqToJsonTest.cs"];
m6_99 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", span="203-203", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_100 [label="StringReader textReader = new StringReader(@''\r\n// hi\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="205-211", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_101 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_102 [label="JValue v = (JValue)JToken.ReadFrom(jsonReader, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Load\r\n            })", span="214-217", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_103 [label="Assert.AreEqual(JTokenType.Comment, v.Type)", span="219-219", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_104 [label="IJsonLineInfo lineInfo = v", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_105 [label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="222-222", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_106 [label="Assert.AreEqual(2, lineInfo.LineNumber)", span="223-223", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_107 [label="Assert.AreEqual(5, lineInfo.LinePosition)", span="224-224", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_108 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", span="203-203", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_323 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="LinqToJsonTest.cs"];
m6_208 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="LinqToJsonTest.cs"];
m6_14 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_Byte.TestClass_Byte()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.TestClass_Byte.TestClass_Byte()", file="LinqToJsonTest.cs"];
m6_517 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="1316-1316", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_518 [label="dynamic name = new JValue(''Matthew Doig'')", span="1318-1318", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_519 [label="IDictionary<string, string> users = new Dictionary<string, string>()", span="1320-1320", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_520 [label="ExceptionAssert.Throws<Microsoft.CSharp.RuntimeBinder.RuntimeBinderException>(() =>\r\n            {\r\n                users.Add(''name2'', name);\r\n\r\n                Assert.AreEqual(users[''name2''], ''Matthew Doig'');\r\n            }, ''The best overloaded method match for 'System.Collections.Generic.IDictionary<string,string>.Add(string, string)' has some invalid arguments'')", span="1323-1328", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_521 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="1316-1316", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_62 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", span="142-142", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_63 [label="JEnumerable<JToken> tokens1 = new JEnumerable<JToken>()", span="144-144", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_64 [label="JEnumerable<JToken> tokens2 = new JEnumerable<JToken>()", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_65 [label="Assert.IsTrue(tokens1.Equals(tokens2))", span="147-147", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_66 [label="object o1 = new JEnumerable<JToken>()", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_67 [label="object o2 = new JEnumerable<JToken>()", span="150-150", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_68 [label="Assert.IsTrue(o1.Equals(o2))", span="152-152", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_69 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", span="142-142", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_577 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="LinqToJsonTest.cs"];
m6_146 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="LinqToJsonTest.cs"];
m6_579 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="LinqToJsonTest.cs"];
m6_56 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="LinqToJsonTest.cs"];
m6_70 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", span="112-112", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", file="LinqToJsonTest.cs"];
m6_27 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="LinqToJsonTest.cs"];
m6_255 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", span="113-113", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", file="LinqToJsonTest.cs"];
m6_302 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="698-698", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m6_303 [label="return new List<Post>()\r\n            {\r\n                new Post()\r\n                {\r\n                    Title = ''LINQ to JSON beta'',\r\n                    Description = ''Annoucing LINQ to JSON'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''LINQ'' }\r\n                },\r\n                new Post()\r\n                {\r\n                    Title = ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                    Description = ''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''CodePlex'' }\r\n                }\r\n            };", span="700-716", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m6_304 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="698-698", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m6_353 [label="Entry JArray.cstr", span="", cluster="JArray.cstr", file="LinqToJsonTest.cs"];
m6_481 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1248-1248", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_482 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="1250-1250", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_483 [label="JObject o = JObject.FromObject(c1)", span="1251-1251", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_486 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="1262-1262", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_487 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="1263-1263", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_488 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="1264-1264", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_489 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="1265-1265", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_490 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="1266-1266", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_484 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', o.ToString())", span="1253-1259", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_485 [label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="1261-1261", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_491 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1248-1248", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_77 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", span="140-140", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="LinqToJsonTest.cs"];
m6_90 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", span="185-185", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_91 [label="StringReader textReader = new StringReader(@''[\r\n    // hi\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="187-192", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_92 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="194-194", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_93 [label="JArray a = (JArray)JToken.ReadFrom(jsonReader)", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_94 [label="Assert.AreEqual(3, a.Count)", span="197-197", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_95 [label="Assert.AreEqual(JTokenType.Integer, a[0].Type)", span="198-198", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_96 [label="Assert.AreEqual(1L, ((JValue)a[0]).Value)", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_97 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", span="185-185", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_419 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="LinqToJsonTest.cs"];
m6_254 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="123-123", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="LinqToJsonTest.cs"];
m6_558 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LinqToJsonTest.cs"];
m6_301 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="111-111", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="LinqToJsonTest.cs"];
m6_172 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="326-326", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="LinqToJsonTest.cs"];
m6_411 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="975-975", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_412 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="977-983", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_413 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="985-985", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_416 [label="jsonSerializer.Serialize(jsonWriter, testDates)", span="990-990", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_414 [label="JTokenWriter jsonWriter", span="987-987", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_415 [label="jsonWriter = new JTokenWriter()", span="988-988", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_417 [label="Assert.AreEqual(4, jsonWriter.Token.Children().Count())", span="993-993", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_418 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="975-975", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_120 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", span="253-253", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_121 [label="StringReader textReader = new StringReader(@''\r\nundefined\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="255-261", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_122 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="263-263", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_123 [label="JValue v = (JValue)JToken.ReadFrom(jsonReader)", span="264-264", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_124 [label="Assert.AreEqual(JTokenType.Undefined, v.Type)", span="266-266", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_125 [label="IJsonLineInfo lineInfo = v", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_126 [label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="269-269", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_127 [label="Assert.AreEqual(2, lineInfo.LineNumber)", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_128 [label="Assert.AreEqual(9, lineInfo.LinePosition)", span="271-271", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_129 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", span="253-253", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_313 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", span="755-755", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_314 [label="JArray posts = JArray.Parse(@''[\r\n              {\r\n                'Title': 'JSON Serializer Basics',\r\n                'Date': '2013-12-21T00:00:00',\r\n                'Categories': []\r\n              },\r\n              {\r\n                'Title': 'Querying LINQ to JSON',\r\n                'Date': '2014-06-03T00:00:00',\r\n                'Categories': [\r\n                  'LINQ to JSON'\r\n                ]\r\n              }\r\n            ]'')", span="757-770", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_315 [label="JToken serializerBasics = posts\r\n                .Single(p => (string)p[''Title''] == ''JSON Serializer Basics'')", span="772-773", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_316 [label="IList<JToken> since2012 = posts\r\n                .Where(p => (DateTime)p[''Date''] > new DateTime(2012, 1, 1)).ToList()", span="776-777", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_317 [label="IList<JToken> linqToJson = posts\r\n                .Where(p => p[''Categories''].Any(c => (string)c == ''LINQ to JSON'')).ToList()", span="781-782", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_318 [label="Assert.IsNotNull(serializerBasics)", span="785-785", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_319 [label="Assert.AreEqual(2, since2012.Count)", span="786-786", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_320 [label="Assert.AreEqual(1, linqToJson.Count)", span="787-787", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_321 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", span="755-755", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_334 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="LinqToJsonTest.cs"];
m6_227 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="LinqToJsonTest.cs"];
m6_468 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1167-1167", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_469 [label="JToken olist = JArray.Parse(''[12,55]'')", span="1169-1169", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_470 [label="List<int> list1 = olist.AsEnumerable().Values<int>().ToList()", span="1171-1171", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_471 [label="Assert.AreEqual(12, list1[0])", span="1173-1173", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_472 [label="Assert.AreEqual(55, list1[1])", span="1174-1174", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_473 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1167-1167", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_259 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", span="135-135", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", file="LinqToJsonTest.cs"];
m6_384 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="932-932", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs"];
m6_385 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JConstructor c = new JConstructor(''ConstructorValue'');\r\n                Assert.AreEqual(null, c[''purple'']);\r\n            }, @''Accessed JConstructor values with invalid key value: ''''purple''''. Argument position index expected.'')", span="934-938", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs"];
m6_386 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="932-932", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs"];
m6_87 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="LinqToJsonTest.cs"];
m6_89 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2101-2101", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="LinqToJsonTest.cs"];
m6_434 [label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", span="192-192", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="LinqToJsonTest.cs"];
m6_229 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="442-442", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_230 [label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="444-444", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_231 [label="JArray a = JArray.Parse(json)", span="446-446", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_232 [label="List<int> list = a.Values<int>().ToList()", span="447-447", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_233 [label="List<int> expected = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }", span="449-449", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_234 [label="CollectionAssert.AreEqual(expected, list)", span="451-451", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_235 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="442-442", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_178 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="LinqToJsonTest.cs"];
m6_170 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="LinqToJsonTest.cs"];
m6_110 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", span="228-228", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_111 [label="StringReader textReader = new StringReader(@''\r\n// hi\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="230-236", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_112 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="238-238", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_113 [label="JArray a = (JArray)JToken.ReadFrom(jsonReader, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Ignore\r\n            })", span="239-242", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_114 [label="Assert.AreEqual(JTokenType.Array, a.Type)", span="244-244", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_115 [label="IJsonLineInfo lineInfo = a", span="246-246", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_116 [label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="247-247", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_117 [label="Assert.AreEqual(3, lineInfo.LineNumber)", span="248-248", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_118 [label="Assert.AreEqual(1, lineInfo.LinePosition)", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_119 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", span="228-228", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m6_179 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="367-367", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_180 [label="JArray j = JArray.Parse(''[-1E+4,100.0e-2]'')", span="369-369", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_181 [label="double value = (double)j[0]", span="371-371", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_183 [label="value = (double)j[1]", span="374-374", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_182 [label="Assert.AreEqual(-10000d, value)", span="372-372", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_184 [label="Assert.AreEqual(1d, value)", span="375-375", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_185 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="367-367", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_372 [label="Entry Unk.>", span="", cluster="Unk.>", file="LinqToJsonTest.cs"];
m6_448 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1126-1126", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_449 [label="JObject o = null", span="1128-1128", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_450 [label="IJEnumerable<JToken> enumerable = null", span="1129-1129", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_451 [label="enumerable = o.AsJEnumerable()", span="1131-1131", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_452 [label="Assert.IsNull(enumerable)", span="1132-1132", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_453 [label="o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', null)\r\n                    )", span="1134-1139", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_454 [label="enumerable = o.AsJEnumerable()", span="1141-1141", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_456 [label="Assert.AreEqual(o, enumerable)", span="1143-1143", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_455 [label="Assert.IsNotNull(enumerable)", span="1142-1142", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_457 [label="DateTime d = enumerable[''Test1''].Value<DateTime>()", span="1145-1145", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_458 [label="Assert.AreEqual(new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc), d)", span="1147-1147", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_459 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1126-1126", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_391 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="131-131", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="LinqToJsonTest.cs"];
m6_460 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", span="304-304", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_509 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="1303-1303", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_510 [label="string json = @''/* blah */ {'hi':'hi!'}''", span="1305-1305", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_511 [label="JObject o = JObject.Parse(json)", span="1306-1306", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_512 [label="Assert.AreEqual(''hi!'', (string)o[''hi''])", span="1307-1307", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_513 [label="json = @''/* blah */ ['hi!']''", span="1309-1309", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_514 [label="JArray a = JArray.Parse(json)", span="1310-1310", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_515 [label="Assert.AreEqual(''hi!'', (string)a[0])", span="1311-1311", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_516 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="1303-1303", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_26 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1921-1921", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="LinqToJsonTest.cs"];
m6_224 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="253-253", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="LinqToJsonTest.cs"];
m6_298 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="316-316", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="LinqToJsonTest.cs"];
m6_506 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="LinqToJsonTest.cs"];
m6_72 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="LinqToJsonTest.cs"];
m6_51 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="126-126", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_52 [label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="128-128", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_53 [label="Assert.AreEqual(0, tokens.Count())", span="130-130", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_54 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="126-126", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_404 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)", file="LinqToJsonTest.cs"];
m6_435 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="1061-1061", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_436 [label="List<Post> posts = GetPosts()", span="1063-1063", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_437 [label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new Dictionary<string, object>\r\n                {\r\n                    { ''title'', ''James Newton-King'' },\r\n                    { ''link'', ''http://james.newtonking.com'' },\r\n                    { ''description'', ''James Newton-King's blog.'' },\r\n                    {\r\n                        ''item'',\r\n                        (from p in posts\r\n                            orderby p.Title\r\n                            select new\r\n                            {\r\n                                title = p.Title,\r\n                                description = p.Description,\r\n                                link = p.Link,\r\n                                category = p.Categories\r\n                            })\r\n                    }\r\n                }\r\n            })", span="1065-1085", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_438 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", span="1087-1113", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_439 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="1115-1115", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_440 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="1116-1116", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_441 [label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="1117-1117", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_442 [label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="1118-1118", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_443 [label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="1120-1120", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_444 [label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="1121-1121", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_445 [label="Assert.AreEqual(5, a.Count())", span="1122-1122", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_446 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="1061-1061", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_7 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="LinqToJsonTest.cs"];
m6_155 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="2289-2289", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="LinqToJsonTest.cs"];
m6_409 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="LinqToJsonTest.cs"];
m6_206 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="LinqToJsonTest.cs"];
m6_422 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="998-998", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_423 [label="List<Post> posts = GetPosts()", span="1000-1000", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_424 [label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new\r\n                {\r\n                    title = ''James Newton-King'',\r\n                    link = ''http://james.newtonking.com'',\r\n                    description = ''James Newton-King's blog.'',\r\n                    item =\r\n                        from p in posts\r\n                        orderby p.Title\r\n                        select new\r\n                        {\r\n                            title = p.Title,\r\n                            description = p.Description,\r\n                            link = p.Link,\r\n                            category = p.Categories\r\n                        }\r\n                }\r\n            })", span="1002-1020", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_425 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", span="1022-1048", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_426 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="1050-1050", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_427 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="1051-1051", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_428 [label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="1052-1052", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_429 [label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="1053-1053", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_430 [label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="1055-1055", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_431 [label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="1056-1056", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_432 [label="Assert.AreEqual(5, a.Count())", span="1057-1057", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_433 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="998-998", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_195 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="LinqToJsonTest.cs"];
m6_6 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="435-435", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="LinqToJsonTest.cs"];
m6_406 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="LinqToJsonTest.cs"];
m6_475 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1179-1179", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_476 [label="string json = @''[\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        },\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]''", span="1181-1232", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_477 [label="JArray o = JArray.Parse(json)", span="1234-1234", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_478 [label="Assert.AreEqual(4, o.Children()[''item''].Children()[''title''].Count())", span="1236-1236", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_479 [label="CollectionAssert.AreEqual(new string[]\r\n            {\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta'',\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta''\r\n            },\r\n                o.Children()[''item''].Children()[''title''].Values<string>().ToArray())", span="1237-1244", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_480 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1179-1179", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_559 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="LinqToJsonTest.cs"];
m6_173 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="354-354", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_174 [label="JArray items = new JArray(new JObject(new JProperty(''name'', ''value!'')))", span="356-356", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_175 [label=items, span="358-358", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_176 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''value!''''\r\n}'', friend.ToString())", span="360-362", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_177 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="354-354", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_377 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="922-922", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m6_378 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JArray a = new JArray();\r\n                Assert.AreEqual(null, a[''purple'']);\r\n            }, @''Accessed JArray values with invalid key value: ''''purple''''. Int32 array index expected.'')", span="924-928", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m6_379 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="922-922", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m6_447 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LinqToJsonTest.cs"];
m6_28 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="LinqToJsonTest.cs"];
m6_15 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_16 [label="JObject o = JObject.Parse(''{'responseArray':'AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'}'')", span="92-92", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_17 [label="byte[] data = o[''responseArray''].ToObject<byte[]>()", span="93-93", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_18 [label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_19 [label="CollectionAssert.AreEqual(expected, data)", span="96-96", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_20 [label="o = JObject.Parse(''{'responseArray':'AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'}'')", span="98-98", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_21 [label="data = o[''responseArray''].ToObject<byte[]>()", span="99-99", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_22 [label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="100-100", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_23 [label="CollectionAssert.AreEqual(expected, data)", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_24 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_532 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_NoConverter()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_NoConverter()", file="LinqToJsonTest.cs"];
m6_533 [label="JObject o = JObject.Parse(''{'FooBarNoEnum':'SOME_OTHER_VALUE'}'')", span="1374-1374", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_NoConverter()", file="LinqToJsonTest.cs"];
m6_534 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                o[''FooBarNoEnum''].ToObject<FooBarNoEnum>();\r\n            }, ''Could not convert 'SOME_OTHER_VALUE' to FooBarNoEnum.'')", span="1376-1379", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_NoConverter()", file="LinqToJsonTest.cs"];
m6_535 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_NoConverter()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Enum_NoConverter()", file="LinqToJsonTest.cs"];
m6_197 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="LinqToJsonTest.cs"];
m6_324 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="LinqToJsonTest.cs"];
m6_147 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", span="305-305", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_148 [label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': ''''NuGet''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="307-317", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_149 [label="JObject o = JObject.Parse(json)", span="319-319", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_150 [label="JToken v1 = o[''frameworks''][''dnxcore50''][''dependencies''][''System.Xml.ReaderWriter''][''source'']", span="321-321", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_152 [label="JToken v2 = o.SelectToken(v1.Path)", span="325-325", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_151 [label="Assert.AreEqual(''frameworks.dnxcore50.dependencies['System.Xml.ReaderWriter'].source'', v1.Path)", span="323-323", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_153 [label="Assert.AreEqual(v1, v2)", span="327-327", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_154 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", span="305-305", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_257 [label="Entry System.Collections.Generic.IEnumerable<T>.Children<T>()", span="224-224", cluster="System.Collections.Generic.IEnumerable<T>.Children<T>()", file="LinqToJsonTest.cs"];
m6_355 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="146-146", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="LinqToJsonTest.cs"];
m6_403 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="LinqToJsonTest.cs"];
m6_356 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="866-866", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_357 [label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="868-894", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_358 [label="JObject o = JObject.Parse(json)", span="896-896", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_359 [label="Assert.AreEqual(null, o[''purple''])", span="898-898", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_360 [label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="899-899", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_361 [label="CustomAssert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="901-901", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_362 [label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="903-903", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_363 [label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="904-904", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_364 [label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', (string)o[''channel''][''item''][0][''title''])", span="906-906", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_365 [label="CollectionAssert.AreEqual(new string[] { ''Json.NET 1.3 + New license + Now on CodePlex'', ''LINQ to JSON beta'' }, o[''channel''][''item''].Children().Values<string>(''title'').ToArray())", span="908-908", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_366 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="866-866", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_408 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="LinqToJsonTest.cs"];
m6_226 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="LinqToJsonTest.cs"];
m6_8 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="LinqToJsonTest.cs"];
m6_587 [label="Entry lambda expression", span="1458-1458", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_38 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_42 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_45 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_48 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_39 [label="JArray.Parse(''[1,'')", span="109-109", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_40 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_43 [label="JArray.Parse(''[1'')", span="113-113", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_44 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_46 [label="JObject.Parse(''{'key':1,'')", span="117-117", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_47 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_49 [label="JObject.Parse(''{'key':1'')", span="121-121", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_50 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_139 [label="JToken.ReadFrom(jsonReader)", span="283-283", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_138 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_140 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_325 [label="Entry lambda expression", span="773-773", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_328 [label="Entry lambda expression", span="777-777", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_331 [label="Entry lambda expression", span="782-782", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_326 [label="(string)p[''Title''] == ''JSON Serializer Basics''", span="773-773", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_327 [label="Exit lambda expression", span="773-773", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_329 [label="(DateTime)p[''Date''] > new DateTime(2012, 1, 1)", span="777-777", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_330 [label="Exit lambda expression", span="777-777", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_332 [label="p[''Categories''].Any(c => (string)c == ''LINQ to JSON'')", span="782-782", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_333 [label="Exit lambda expression", span="782-782", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_335 [label="Entry lambda expression", span="782-782", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_336 [label="(string)c == ''LINQ to JSON''", span="782-782", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_337 [label="Exit lambda expression", span="782-782", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_373 [label="Entry lambda expression", span="914-918", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_374 [label="JObject o = new JObject()", span="916-916", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_375 [label="Assert.AreEqual(null, o[0])", span="917-917", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_376 [label="Exit lambda expression", span="914-918", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_380 [label="Entry lambda expression", span="924-928", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_381 [label="JArray a = new JArray()", span="926-926", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_382 [label="Assert.AreEqual(null, a[''purple''])", span="927-927", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_383 [label="Exit lambda expression", span="924-928", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_387 [label="Entry lambda expression", span="934-938", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_388 [label="JConstructor c = new JConstructor(''ConstructorValue'')", span="936-936", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_389 [label="Assert.AreEqual(null, c[''purple''])", span="937-937", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_390 [label="Exit lambda expression", span="934-938", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_523 [label="users.Add(''name2'', name)", span="1325-1325", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_524 [label="Assert.AreEqual(users[''name2''], ''Matthew Doig'')", span="1327-1327", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_522 [label="Entry lambda expression", span="1323-1328", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_525 [label="Exit lambda expression", span="1323-1328", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_537 [label="o[''FooBarNoEnum''].ToObject<FooBarNoEnum>()", span="1378-1378", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_536 [label="Entry lambda expression", span="1376-1379", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_538 [label="Exit lambda expression", span="1376-1379", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_581 [label="Entry lambda expression", span="1448-1448", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_584 [label="Entry lambda expression", span="1453-1453", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_588 [label="idProperty.Value.ToString() == r.Value.ToString()", span="1458-1458", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_582 [label="d.Name == ''$id''", span="1448-1448", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_583 [label="Exit lambda expression", span="1448-1448", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_585 [label="d.Name == ''$ref''", span="1453-1453", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_586 [label="Exit lambda expression", span="1453-1453", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_589 [label="Exit lambda expression", span="1458-1458", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_98 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2085-2085", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="LinqToJsonTest.cs"];
m6_194 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="LinqToJsonTest.cs"];
m6_560 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", span="1431-1431", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_561 [label="JTokenWriter writer = new JTokenWriter()", span="1433-1433", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_563 [label="serializer.Serialize(writer, o)", span="1439-1439", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_562 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="1434-1438", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_564 [label="JToken t = writer.Token", span="1441-1441", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_565 [label="t is JContainer", span="1443-1443", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_566 [label="JContainer c = t as JContainer", span="1445-1445", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_574 [label="string json = t.ToString()", span="1469-1469", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_567 [label="IList<JProperty> ids = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$id'').ToList()", span="1448-1448", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_569 [label="IList<JProperty> refs = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$ref'').ToList()", span="1453-1453", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_568 [label="ids.Count > 0", span="1450-1450", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_570 [label=ids, span="1455-1455", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_571 [label="bool idUsed = refs.Any(r => idProperty.Value.ToString() == r.Value.ToString())", span="1458-1458", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_573 [label="idProperty.Remove()", span="1463-1463", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_572 [label="!idUsed", span="1460-1460", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_575 [label="return json;", span="1470-1470", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_576 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", span="1431-1431", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_225 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LinqToJsonTest.cs"];
m6_290 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="628-628", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_291 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', ''Test1Value''),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="630-636", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_292 [label="Assert.AreEqual(4, o.Properties().Count())", span="638-638", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_293 [label="StringAssert.AreEqual(@''{\r\n  ''''Test1'''': ''''Test1Value'''',\r\n  ''''Test2'''': ''''Test2Value'''',\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', o.ToString())", span="640-645", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_294 [label="JArray a =\r\n                new JArray(\r\n                    o,\r\n                    new DateTime(2000, 10, 10, 0, 0, 0, DateTimeKind.Utc),\r\n                    55,\r\n                    new JArray(\r\n                        ''1'',\r\n                        2,\r\n                        3.0,\r\n                        new DateTime(4, 5, 6, 7, 8, 9, DateTimeKind.Utc)\r\n                        ),\r\n                    new JConstructor(\r\n                        ''ConstructorName'',\r\n                        ''param1'',\r\n                        2,\r\n                        3.0\r\n                        )\r\n                    )", span="647-664", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_295 [label="Assert.AreEqual(5, a.Count())", span="666-666", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_296 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''2000-10-10T00:00:00Z'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3.0,\r\n    ''''0004-05-06T07:08:09Z''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3.0\r\n  )\r\n]'', a.ToString())", span="667-687", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_297 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="628-628", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_367 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="LinqToJsonTest.cs"];
m6_86 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="LinqToJsonTest.cs"];
m6_462 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="LinqToJsonTest.cs"];
m6_322 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="LinqToJsonTest.cs"];
m6_539 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", span="1384-1384", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_540 [label="Dictionary<string, object> dic1 = new Dictionary<string, object>()", span="1386-1386", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_541 [label="Dictionary<string, object> dic2 = new Dictionary<string, object>()", span="1387-1387", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_545 [label="dic1.Add(''list1'', list1)", span="1392-1392", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_546 [label="dic1.Add(''list2'', list2)", span="1393-1393", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_547 [label="dic1.Add(''dic1'', dic1)", span="1394-1394", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_548 [label="dic1.Add(''dic2'', dic2)", span="1395-1395", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_549 [label="dic1.Add(''dic3'', dic3)", span="1396-1396", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_550 [label="dic1.Add(''integer'', 12345)", span="1397-1397", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_552 [label="list1.Add(dic1)", span="1400-1400", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_555 [label="var json = SerializeWithNoRedundentIdProperties(dic1)", span="1405-1405", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_542 [label="Dictionary<string, object> dic3 = new Dictionary<string, object>()", span="1388-1388", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_543 [label="List<object> list1 = new List<object>()", span="1389-1389", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_554 [label="dic3.Add(''dic3'', dic3)", span="1403-1403", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_544 [label="List<object> list2 = new List<object>()", span="1390-1390", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_551 [label="list1.Add(''A string!'')", span="1399-1399", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_553 [label="list1.Add(new List<object>())", span="1401-1401", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_556 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''list1'''': [\r\n    ''''A string!'''',\r\n    {\r\n      ''''$ref'''': ''''1''''\r\n    },\r\n    []\r\n  ],\r\n  ''''list2'''': [],\r\n  ''''dic1'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''dic2'''': {},\r\n  ''''dic3'''': {\r\n    ''''$id'''': ''''3'''',\r\n    ''''dic3'''': {\r\n      ''''$ref'''': ''''3''''\r\n    }\r\n  },\r\n  ''''integer'''': 12345\r\n}'', json)", span="1407-1428", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_557 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", span="1384-1384", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_207 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs"];
m6_237 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="LinqToJsonTest.cs"];
m6_273 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="263-263", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="LinqToJsonTest.cs"];
m6_73 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_74 [label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="158-158", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_75 [label="Assert.AreEqual(0, tokens.GetHashCode())", span="160-160", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_76 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_78 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="164-164", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_79 [label="StringReader textReader = new StringReader(@''[\r\n    // hi\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="166-171", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_80 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="173-173", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_81 [label="JArray a = (JArray)JToken.ReadFrom(jsonReader, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Load\r\n            })", span="174-177", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_82 [label="Assert.AreEqual(4, a.Count)", span="179-179", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_83 [label="Assert.AreEqual(JTokenType.Comment, a[0].Type)", span="180-180", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_84 [label="Assert.AreEqual('' hi'', ((JValue)a[0]).Value)", span="181-181", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_85 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="164-164", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_420 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="LinqToJsonTest.cs"];
m6_338 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="791-791", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_339 [label="List<Post> posts = GetPosts()", span="793-793", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_340 [label="JObject rss =\r\n                new JObject(\r\n                    new JProperty(''channel'',\r\n                        new JObject(\r\n                            new JProperty(''title'', ''James Newton-King''),\r\n                            new JProperty(''link'', ''http://james.newtonking.com''),\r\n                            new JProperty(''description'', ''James Newton-King's blog.''),\r\n                            new JProperty(''item'',\r\n                                new JArray(\r\n                                    from p in posts\r\n                                    orderby p.Title\r\n                                    select new JObject(\r\n                                        new JProperty(''title'', p.Title),\r\n                                        new JProperty(''description'', p.Description),\r\n                                        new JProperty(''link'', p.Link),\r\n                                        new JProperty(''category'',\r\n                                            new JArray(\r\n                                                from c in p.Categories\r\n                                                select new JValue(c)))))))))", span="795-813", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_341 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', rss.ToString())", span="815-841", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_342 [label="var postTitles =\r\n                from p in rss[''channel''][''item'']\r\n                select p.Value<string>(''title'')", span="843-845", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_345 [label="var categories =\r\n                from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n                group c by c\r\n                into g\r\n                orderby g.Count() descending\r\n                select new { Category = g.Key, Count = g.Count() }", span="850-855", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_343 [label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', postTitles.ElementAt(0))", span="847-847", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_344 [label="Assert.AreEqual(''LINQ to JSON beta'', postTitles.ElementAt(1))", span="848-848", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_346 [label="Assert.AreEqual(''Json.NET'', categories.ElementAt(0).Category)", span="857-857", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_347 [label="Assert.AreEqual(2, categories.ElementAt(0).Count)", span="858-858", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_348 [label="Assert.AreEqual(''CodePlex'', categories.ElementAt(1).Category)", span="859-859", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_349 [label="Assert.AreEqual(1, categories.ElementAt(1).Count)", span="860-860", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_350 [label="Assert.AreEqual(''LINQ'', categories.ElementAt(2).Category)", span="861-861", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_351 [label="Assert.AreEqual(1, categories.ElementAt(2).Count)", span="862-862", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_352 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="791-791", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_261 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="561-561", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_262 [label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="563-569", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_263 [label="JObject o = JObject.Parse(json)", span="571-571", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_264 [label="StringAssert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'', o.ToString())", span="573-579", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_265 [label="JArray list = o.Value<JArray>(''Drives'')", span="581-581", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_267 [label="JProperty cpuProperty = o.Property(''CPU'')", span="588-588", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_269 [label="JProperty drivesProperty = o.Property(''Drives'')", span="591-591", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_266 [label="StringAssert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="583-586", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_268 [label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="589-589", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_270 [label="StringAssert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="592-595", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_271 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="561-561", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_88 [label="Entry Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", span="7-7", cluster="Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", file="LinqToJsonTest.cs"];
m6_407 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="LinqToJsonTest.cs"];
m6_306 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="720-720", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_307 [label="Post p = new Post\r\n            {\r\n                Title = ''How to use FromObject'',\r\n                Categories = new[] { ''LINQ to JSON'' }\r\n            }", span="722-726", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_308 [label="JObject o = JObject.FromObject(p)", span="732-732", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_309 [label="o[''Title''] = o[''Title''] + '' - Super effective!''", span="734-734", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_310 [label="string json = o.ToString()", span="736-736", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_311 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''How to use FromObject - Super effective!'''',\r\n  ''''Description'''': null,\r\n  ''''Link'''': null,\r\n  ''''Categories'''': [\r\n    ''''LINQ to JSON''''\r\n  ]\r\n}'', json)", span="744-751", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_312 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="720-720", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_252 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="367-367", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="LinqToJsonTest.cs"];
m6_109 [label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38", cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="LinqToJsonTest.cs"];
m6_289 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="939-939", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="LinqToJsonTest.cs"];
m6_354 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="LinqToJsonTest.cs"];
m6_463 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1152-1152", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_464 [label="IEnumerable<JObject> o = new[]\r\n            {\r\n                JObject.FromObject(new { First = 1, Second = 2 }),\r\n                JObject.FromObject(new { First = 1, Second = 2 })\r\n            }", span="1154-1158", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_465 [label="IJEnumerable<JToken> values = o.Properties()", span="1160-1160", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_466 [label="Assert.AreEqual(4, values.Count())", span="1161-1161", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_467 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1152-1152", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_199 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="396-396", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_200 [label="JObject o = new JObject(\r\n                new JProperty(''Name'', ''John Smith''),\r\n                new JProperty(''BirthDate'', new DateTime(1983, 3, 20))\r\n                )", span="398-401", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_201 [label="JsonSerializer serializer = new JsonSerializer()", span="403-403", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_202 [label="Person p = (Person)serializer.Deserialize(new JTokenReader(o), typeof(Person))", span="404-404", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_203 [label="Assert.AreEqual(''John Smith'', p.Name)", span="406-406", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_204 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="396-396", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_253 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", span="100-100", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", file="LinqToJsonTest.cs"];
m6_508 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="LinqToJsonTest.cs"];
m6_369 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="912-912", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m6_370 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                Assert.AreEqual(null, o[0]);\r\n            }, ''Accessed JObject values with invalid key value: 0. Object property name expected.'')", span="914-918", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m6_371 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="912-912", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m6_405 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="LinqToJsonTest.cs"];
m6_30 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="LinqToJsonTest.cs"];
m6_474 [label="Entry System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", file="LinqToJsonTest.cs"];
m6_186 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="379-379", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_187 [label="JArray array = new JArray()", span="381-381", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_188 [label="JValue text = new JValue(''Manual text'')", span="382-382", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_190 [label="array.Add(text)", span="385-385", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_191 [label="array.Add(date)", span="386-386", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_192 [label="string json = array.ToString()", span="388-388", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_189 [label="JValue date = new JValue(new DateTime(2000, 5, 23))", span="383-383", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_193 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="379-379", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_300 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="LinqToJsonTest.cs"];
m6_421 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="LinqToJsonTest.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m6_1 [label="TestClass_ULong instance = new TestClass_ULong { Value = ulong.MaxValue }", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m6_2 [label="JObject output = JObject.FromObject(instance)", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m6_3 [label="StringAssert.AreEqual(@''{\r\n  ''''Value'''': 18446744073709551615\r\n}'', output.ToString())", span="68-70", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m6_4 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m6_238 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="455-455", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_239 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="458-535", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_240 [label="JObject o = JObject.Parse(json)", span="538-538", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_241 [label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="540-540", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_245 [label="Assert.AreEqual(5, o.PropertyValues().Cast<JArray>().Children().Count())", span="548-548", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_246 [label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="550-550", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_249 [label="List<JToken> descendants = o.Descendants().ToList()", span="556-556", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_242 [label="Assert.AreEqual(32, resultObjects.Properties().Count())", span="542-542", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_243 [label="Assert.AreEqual(32, resultObjects.Cast<JToken>().Values().Count())", span="544-544", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_244 [label="Assert.AreEqual(4, resultObjects.Cast<JToken>().Values(''GsearchResultClass'').Count())", span="546-546", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_247 [label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="552-552", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_248 [label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="554-554", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_250 [label="Assert.AreEqual(89, descendants.Count)", span="557-557", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_251 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="455-455", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_37 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="LinqToJsonTest.cs"];
m6_256 [label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="279-279", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="LinqToJsonTest.cs"];
m6_590 [label=jsonReader, span="", file="LinqToJsonTest.cs"];
m6_591 [label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", span="", file="LinqToJsonTest.cs"];
m6_592 [label=name, span="", file="LinqToJsonTest.cs"];
m6_593 [label=users, span="", file="LinqToJsonTest.cs"];
m6_594 [label=o, span="", file="LinqToJsonTest.cs"];
m6_595 [label=idProperty, span="", file="LinqToJsonTest.cs"];
m7_29 [label=_sharedCache, span="211-211", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="MetadataPropertyHandlingTests.cs"];
m7_358 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="76-76", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_576 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_51 [label="Assert.AreEqual(3, circularList.Count)", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_407 [label="return CreatePrimitiveContract(objectType);", span="847-847", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_409 [label="return CreateObjectContract(objectType);", span="850-850", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_411 [label="return CreateArrayContract(objectType);", span="853-853", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_413 [label="return CreateDictionaryContract(objectType);", span="856-856", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_415 [label="return CreateLinqContract(objectType);", span="859-859", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_417 [label="return CreateDictionaryContract(objectType);", span="862-862", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_419 [label="return CreateArrayContract(objectType);", span="865-865", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_421 [label="return CreateStringContract(objectType);", span="868-868", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_422 [label="!IgnoreSerializableInterface && typeof(ISerializable).IsAssignableFrom(t)", span="871-871", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_423 [label="return CreateISerializableContract(objectType);", span="872-872", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_425 [label="return CreateDynamicContract(objectType);", span="877-877", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_426 [label="return CreateObjectContract(objectType);", span="880-880", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_406 [label="JsonConvert.IsJsonPrimitiveType(objectType)", span="846-846", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_408 [label="JsonTypeReflector.GetJsonObjectAttribute(t) != null", span="849-849", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_410 [label="JsonTypeReflector.GetJsonArrayAttribute(t) != null", span="852-852", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_412 [label="JsonTypeReflector.GetJsonDictionaryAttribute(t) != null", span="855-855", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_414 [label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="858-858", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_416 [label="CollectionUtils.IsDictionaryType(t)", span="861-861", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_418 [label="typeof(IEnumerable).IsAssignableFrom(t)", span="864-864", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_420 [label="CanConvertToString(t)", span="867-867", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_405 [label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="844-844", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_424 [label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="876-876", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_427 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="842-842", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_391 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="812-812", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_393 [label="InitializeContract(contract)", span="815-815", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_392 [label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="814-814", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_394 [label="contract.PropertyNameResolver = ResolvePropertyName", span="817-817", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_395 [label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="818-818", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_396 [label="return contract;", span="820-820", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_397 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="812-812", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_172 [label="JObject o = (JObject)actual.Payload", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_44 [label="updatedCache[key] = contract", span="242-242", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_513 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="530-530", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_470 [label="Entry System.Type.ContainsGenericParameters()", span="107-107", cluster="System.Type.ContainsGenericParameters()", file="MetadataPropertyHandlingTests.cs"];
m7_105 [label="return false;", span="335-335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_179 [label="Assert.AreEqual(null, actual.Payload3.Parent)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_85 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''$id'''': ''''2'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="285-298", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="MetadataPropertyHandlingTests.cs"];
m7_59 [label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="270-270", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_84 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="MetadataPropertyHandlingTests.cs"];
m7_86 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MetadataPropertyHandlingTests.cs"];
m7_87 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_88 [label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_89 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="MetadataPropertyHandlingTests.cs"];
m7_90 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="MetadataPropertyHandlingTests.cs"];
m7_91 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="345-345", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="MetadataPropertyHandlingTests.cs"];
m7_106 [label="return true;", span="338-338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_278 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="863-863", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_0 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="59-59", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_1 [label="_resolverType = resolverType", span="61-61", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_2 [label="_contractType = contractType", span="62-62", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_3 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="59-59", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_4 [label="Assert.AreEqual(u.Name, ''James'')", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.Demo()", file="MetadataPropertyHandlingTests.cs"];
m7_5 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.Demo()", span="56-56", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.Demo()", file="MetadataPropertyHandlingTests.cs"];
m7_140 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="461-461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_138 [label="Assert.AreEqual(5, nested[4])", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_18 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_19 [label="string contextKey = ''k1''", span="120-120", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_20 [label="var someValue = new Guid(''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774'')", span="121-121", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_21 [label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_22 [label="inputContext.Add(contextKey, someValue)", span="124-124", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_207 [label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="MetadataPropertyHandlingTests.cs"];
m7_280 [label="Entry System.Type.IsValueType()", span="522-522", cluster="System.Type.IsValueType()", file="MetadataPropertyHandlingTests.cs"];
m7_141 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_224 [label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="509-509", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_221 [label="JsonProperty matchingMemberProperty = (parameterInfo.Name != null) ? memberProperties.GetClosestMatchProperty(parameterInfo.Name) : null", span="503-503", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_220 [label=constructorParameters, span="499-499", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_222 [label="matchingMemberProperty != null && matchingMemberProperty.PropertyType != parameterInfo.ParameterType", span="506-506", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_223 [label="matchingMemberProperty = null", span="507-507", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_225 [label="property != null", span="511-511", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_226 [label="parameterCollection.AddProperty(property)", span="513-513", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_218 [label="var constructorParameters = constructor.GetParameters()", span="495-495", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_219 [label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="497-497", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_227 [label="return parameterCollection;", span="517-517", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_228 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="493-493", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="MetadataPropertyHandlingTests.cs"];
m7_142 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MetadataPropertyHandlingTests.cs"];
m7_212 [label="IList<ConstructorInfo> constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance).ToList()", span="479-479", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_214 [label="return constructors[0];", span="482-482", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_215 [label="return null;", span="484-484", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_213 [label="constructors.Count == 1", span="481-481", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_216 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="477-477", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_386 [label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_282 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="611-611", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_288 [label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="619-619", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_283 [label="List<SerializationCallback> onSerializing", span="613-613", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_290 [label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="627-627", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_292 [label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="632-632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_294 [label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="635-635", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_296 [label="!t.IsGenericType() || (t.GetGenericTypeDefinition() != typeof(ConcurrentDictionary<,>))", span="641-641", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_297 [label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="642-642", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_299 [label="contract.OnErrorCallbacks.AddRange(onError)", span="649-649", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_287 [label="List<SerializationErrorCallback> onError", span="617-617", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_289 [label="onSerializing != null", span="621-621", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_291 [label="onSerialized != null", span="631-631", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_293 [label="onDeserializing != null", span="634-634", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_295 [label="onDeserialized != null", span="637-637", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_298 [label="onError != null", span="648-648", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_284 [label="List<SerializationCallback> onSerialized", span="614-614", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_286 [label="List<SerializationCallback> onDeserialized", span="616-616", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_285 [label="List<SerializationCallback> onDeserializing", span="615-615", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_300 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="611-611", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_9 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", span="77-77", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_10 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="79-103", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_11 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                    });\r\n            }, @''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: System.String[][]. Path '$values', line 3, position 14.'')", span="105-113", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_12 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", span="77-77", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_516 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1165-1165", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_591 [label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1171-1171", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_596 [label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1181-1181", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_588 [label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1167-1167", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_590 [label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1169-1169", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_594 [label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1178-1178", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_595 [label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1180-1180", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_589 [label="specifiedMember == null", span="1168-1168", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_592 [label="return;", span="1173-1173", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_593 [label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1176-1176", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_597 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1165-1165", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_232 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="526-526", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_237 [label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out allowNonPublicAccess)", span="532-532", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_234 [label="JsonProperty property = new JsonProperty()", span="528-528", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_236 [label="bool allowNonPublicAccess", span="531-531", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_238 [label="property.Readable = false", span="534-534", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_235 [label="property.PropertyType = parameterInfo.ParameterType", span="529-529", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_240 [label="matchingMemberProperty != null", span="538-538", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_241 [label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="540-540", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_242 [label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="541-541", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_243 [label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="542-542", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_244 [label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="544-544", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_245 [label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="545-545", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_246 [label="property._required = property._required ?? matchingMemberProperty._required", span="547-547", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_247 [label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="548-548", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_248 [label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="549-549", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_249 [label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="550-550", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_250 [label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="551-551", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_251 [label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="552-552", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_252 [label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="553-553", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_239 [label="property.Writable = true", span="535-535", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_253 [label="return property;", span="556-556", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_254 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="526-526", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_341 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="394-394", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_136 [label="Assert.AreEqual(3, nested[2])", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_264 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetJsonContainerAttribute(contract.NonNullableUnderlyingType)", span="579-579", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="MetadataPropertyHandlingTests.cs"];
m7_265 [label="containerAttribute != null", span="580-580", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_266 [label="contract.IsReference = containerAttribute._isReference", span="582-582", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_273 [label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="602-602", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_267 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(contract.NonNullableUnderlyingType)", span="587-587", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_269 [label="contract.IsReference = true", span="590-590", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_270 [label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="594-594", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_271 [label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="597-597", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_272 [label="ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true)\r\n        || contract.CreatedType.IsValueType()", span="599-600", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_274 [label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                            ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="604-605", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_275 [label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="608-608", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_268 [label="dataContractAttribute != null && dataContractAttribute.IsReference", span="589-589", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_276 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="577-577", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="MetadataPropertyHandlingTests.cs"];
m7_497 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_104 [label="propertyInfo.PropertyType.IsGenericType() && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="334-334", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_181 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="50-50", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_182 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="64-64", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_183 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="63-63", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="MetadataPropertyHandlingTests.cs"];
m7_184 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="MetadataPropertyHandlingTests.cs"];
m7_185 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="945-945", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_139 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="398-398", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_186 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs"];
m7_279 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="213-213", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_83 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_255 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="37-37", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_110 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_112 [label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="374-379", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_111 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''Name'''': null,\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="352-372", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_113 [label="Assert.AreEqual(4, values.Count)", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_114 [label="EmployeeReference e = (EmployeeReference)values[0]", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_116 [label="Assert.AreEqual(''Bob'', e.Name)", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_120 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_123 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_128 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="410-422", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_131 [label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_132 [label="List<int> nested = (List<int>)deserialized.Value", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_115 [label="Person p = (Person)values[1]", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_117 [label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_119 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_122 [label="Assert.AreEqual((long)int.MinValue, values[3])", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_124 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="398-398", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_126 [label="TypeNameHandlingTests.TypeNameProperty typeNameProperty = new TypeNameHandlingTests.TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="402-406", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_127 [label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_130 [label="Assert.AreEqual(''Name!'', deserialized.Name)", span="428-428", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_133 [label="Assert.AreEqual(5, nested.Count)", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_118 [label="Assert.AreEqual(null, p.Name)", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_121 [label="Assert.AreEqual(''String!'', values[2])", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_129 [label="TypeNameHandlingTests.TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameHandlingTests.TypeNameProperty>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="424-427", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_125 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), FormatterAssemblyStyle.Simple, null)", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_134 [label="Assert.AreEqual(1, nested[0])", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_431 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonDictionaryAttribute(System.Type)", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonDictionaryAttribute(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_6 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="MetadataPropertyHandlingTests.cs"];
m7_197 [label="Assert.AreEqual(''CircularReferenceClass'', c.Type)", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs"];
m7_82 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_463 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="62-62", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="MetadataPropertyHandlingTests.cs"];
m7_376 [label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_233 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="MetadataPropertyHandlingTests.cs"];
m7_177 [label="Assert.AreEqual(null, actual.Payload1.Parent)", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_429 [label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", span="492-492", cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_371 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="775-775", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_373 [label="InitializeContract(contract)", span="778-778", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_372 [label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="777-777", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_374 [label="return contract;", span="780-780", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_375 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="775-775", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_194 [label="MetadataPropertyDisabledTestClass c = new MetadataPropertyDisabledTestClass()", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs"];
m7_199 [label="markedConstructors.Count > 1", span="465-465", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_377 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="789-789", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_379 [label="InitializeContract(contract)", span="792-792", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_378 [label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="791-791", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_380 [label="ConstructorInfo constructorInfo = contract.NonNullableUnderlyingType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new[] { typeof(SerializationInfo), typeof(StreamingContext) }, null)", span="794-794", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_383 [label="contract.ISerializableCreator = (args => methodCall(null, args))", span="799-799", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_384 [label="return contract;", span="802-802", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_381 [label="constructorInfo != null", span="795-795", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_382 [label="MethodCall<object, object> methodCall = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(constructorInfo)", span="797-797", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_385 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="789-789", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_48 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_92 [label="Entry System.Reflection.MemberInfo.MemberType()", span="89-89", cluster="System.Reflection.MemberInfo.MemberType()", file="MetadataPropertyHandlingTests.cs"];
m7_93 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="531-531", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_94 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_95 [label="!ReflectionUtils.IsIndexedProperty(m)", span="268-268", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_96 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_101 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="329-329", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_97 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="443-443", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_98 [label="Entry lambda expression", span="279-279", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_99 [label="!ReflectionUtils.IsIndexedProperty(m)", span="279-279", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_100 [label="Exit lambda expression", span="279-279", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_102 [label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="331-331", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_103 [label="propertyInfo != null", span="332-332", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_155 [label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="421-421", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_7 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs"];
m7_54 [label="Assert.AreEqual(1, circularList[2].Count)", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_56 [label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_62 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                });\r\n            }, ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 55.'')", span="237-244", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs"];
m7_64 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_75 [label="child.Add(''Name'', ''Isabell'')", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_61 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="230-235", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs"];
m7_55 [label="Assert.AreEqual(1, circularList[2][0].Count)", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_57 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="MetadataPropertyHandlingTests.cs"];
m7_63 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs"];
m7_65 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="239-243", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_74 [label="child.Add(''_id'', 2)", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_80 [label="Assert.AreEqual(3, result.Count)", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_60 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="MetadataPropertyHandlingTests.cs"];
m7_69 [label="var reference = new Dictionary<string, object>()", span="250-250", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_58 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="MetadataPropertyHandlingTests.cs"];
m7_71 [label="reference.Add(''$ref'', null)", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_66 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_68 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_70 [label="reference.Add(''blah'', ''blah!'')", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_72 [label="reference.Add(''$id'', null)", span="253-253", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_73 [label="var child = new Dictionary<string, object>()", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_67 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="848-848", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs"];
m7_79 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="272-275", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_76 [label="child.Add(''Father'', reference)", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_78 [label="StringAssert.AreEqual(@''{\r\n  ''''_id'''': 2,\r\n  ''''Name'''': ''''Isabell'''',\r\n  ''''Father'''': {\r\n    ''''blah'''': ''''blah!'''',\r\n    ''''$ref'''': null,\r\n    ''''$id'''': null\r\n  }\r\n}'', json)", span="262-270", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_77 [label="string json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_81 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="MetadataPropertyHandlingTests.cs"];
m7_578 [label="Entry Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", span="60-60", cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_404 [label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_156 [label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="423-423", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_157 [label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="424-424", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_158 [label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="427-427", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_159 [label="t = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="428-428", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_160 [label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="430-430", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_31 [label="_instanceContractCache = cache", span="214-214", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="MetadataPropertyHandlingTests.cs"];
m7_444 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_428 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="254-254", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_33 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="MetadataPropertyHandlingTests.cs"];
m7_37 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="160-170", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_38 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="172-175", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_40 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="178-178", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_42 [label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }, bytes)", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_45 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="MetadataPropertyHandlingTests.cs"];
m7_36 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_39 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_41 [label="byte[] bytes = (byte[])actual.Payload", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_46 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="MetadataPropertyHandlingTests.cs"];
m7_43 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_34 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_35 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="148-156", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_47 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="MetadataPropertyHandlingTests.cs"];
m7_352 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="734-734", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_354 [label="InitializeContract(contract)", span="737-737", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_353 [label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="736-736", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_355 [label="contract.PropertyNameResolver = ResolvePropertyName", span="739-739", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_356 [label="return contract;", span="741-741", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_357 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="734-734", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_108 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_483 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="MetadataPropertyHandlingTests.cs"];
m7_144 [label="ExtensionDataSetter extensionDataSetter = null", span="400-400", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_145 [label="GetClassHierarchyForType(type)", span="402-402", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_146 [label="IList<MemberInfo> members = new List<MemberInfo>()", span="404-404", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_147 [label="members.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="405-405", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_148 [label="members.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="406-406", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_149 [label=members, span="408-408", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_150 [label="MemberTypes memberType = member.MemberType()", span="410-410", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_151 [label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="411-411", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_152 [label="!member.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="415-415", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_153 [label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="418-418", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_154 [label="Type dictionaryType", span="420-420", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_399 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="829-829", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_401 [label="InitializeContract(contract)", span="832-832", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_400 [label="JsonStringContract contract = new JsonStringContract(objectType)", span="831-831", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_402 [label="return contract;", span="834-834", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_403 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="829-829", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_430 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="100-100", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_196 [label="Assert.AreEqual(''1'', c.Id)", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="MetadataPropertyHandlingTests.cs"];
m7_260 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object, System.Type)", span="205-205", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object, System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_484 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1009-1009", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_501 [label="property.ValueProvider = CreateMemberValueProvider(member)", span="1014-1014", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_503 [label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="1017-1017", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_509 [label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1030-1030", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_510 [label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1032-1032", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_498 [label="JsonProperty property = new JsonProperty()", span="1011-1011", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_500 [label="property.DeclaringType = member.DeclaringType", span="1013-1013", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_502 [label="bool allowNonPublicAccess", span="1016-1016", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_504 [label="memberSerialization != MemberSerialization.Fields", span="1019-1019", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_505 [label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1021-1021", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_506 [label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1022-1022", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_508 [label="property.Writable = true", span="1028-1028", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_511 [label="return property;", span="1034-1034", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_499 [label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1012-1012", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_507 [label="property.Readable = true", span="1027-1027", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_512 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1009-1009", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_230 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_17 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="MetadataPropertyHandlingTests.cs"];
m7_398 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_261 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="569-569", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_262 [label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="571-571", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", color=green, community=0, file="MetadataPropertyHandlingTests.cs"];
m7_263 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="569-569", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_180 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_351 [label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()", file="MetadataPropertyHandlingTests.cs"];
m7_443 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="558-558", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_32 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="209-209", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="MetadataPropertyHandlingTests.cs"];
m7_465 [label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="947-947", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_466 [label="return type.FullName;", span="948-948", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_467 [label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="950-950", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_468 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="945-945", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_281 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="223-223", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_192 [label="setExtensionDataDictionaryValue(dictionary, key, value)", span="447-447", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_193 [label="Exit lambda expression", span="438-448", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_195 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="MetadataPropertyHandlingTests.cs"];
m7_198 [label="IList<ConstructorInfo> markedConstructors = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).ToList()", span="463-463", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_515 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1152-1152", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_582 [label="MethodCall<object, object> shouldSerializeCall =\r\n        JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1159-1160", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_579 [label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1154-1154", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_580 [label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1156-1156", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_583 [label="return o => (bool)shouldSerializeCall(o);", span="1162-1162", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_581 [label="return null;", span="1157-1157", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_584 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1152-1152", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_301 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="652-652", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_307 [label="GetClassHierarchyForType(type)", span="660-660", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_306 [label="onError = null", span="658-658", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_313 [label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="669-669", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_308 [label="MethodInfo currentOnSerializing = null", span="663-663", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_302 [label="onSerializing = null", span="654-654", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_305 [label="onDeserialized = null", span="657-657", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_334 [label="onError = onError ?? new List<SerializationErrorCallback>()", span="705-705", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_312 [label="MethodInfo currentOnError = null", span="667-667", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_333 [label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="703-703", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_314 [label="method.ContainsGenericParameters", span="673-673", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_336 [label="currentOnError = method", span="707-707", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_316 [label="ParameterInfo[] parameters = method.GetParameters()", span="677-677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_317 [label="IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="679-679", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_319 [label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="682-682", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_320 [label="currentOnSerializing = method", span="683-683", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_321 [label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="685-685", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_323 [label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="688-688", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_324 [label="currentOnSerialized = method", span="689-689", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_325 [label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="691-691", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_327 [label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="694-694", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_328 [label="currentOnDeserializing = method", span="695-695", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_329 [label="IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="697-697", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_331 [label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="700-700", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_332 [label="currentOnDeserialized = method", span="701-701", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_335 [label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="706-706", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_309 [label="MethodInfo currentOnSerialized = null", span="664-664", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_303 [label="onSerialized = null", span="655-655", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_318 [label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="681-681", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_304 [label="onDeserializing = null", span="656-656", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_322 [label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="687-687", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_326 [label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="693-693", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_330 [label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="699-699", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_311 [label="MethodInfo currentOnDeserialized = null", span="666-666", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_315 [label="Type prevAttributeType = null", span="676-676", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_310 [label="MethodInfo currentOnDeserializing = null", span="665-665", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_337 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="652-652", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="MetadataPropertyHandlingTests.cs"];
m7_135 [label="Assert.AreEqual(2, nested[1])", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="MetadataPropertyHandlingTests.cs"];
m7_514 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="564-564", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="MetadataPropertyHandlingTests.cs"];
m7_28 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="MetadataPropertyHandlingTests.cs"];
m7_30 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MetadataPropertyHandlingTests.cs"];
m7_49 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="MetadataPropertyHandlingTests.cs"];
m7_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MetadataPropertyHandlingTests.cs"];
m7_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="MetadataPropertyHandlingTests.cs"];
m7_53 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MetadataPropertyHandlingTests.cs"];
m7_605 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1199-1199", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="MetadataPropertyHandlingTests.cs"];
m7_606 [label="return ResolvePropertyName(propertyName);", span="1203-1203", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="MetadataPropertyHandlingTests.cs"];
m7_607 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1199-1199", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="MetadataPropertyHandlingTests.cs"];
m7_161 [label="MethodInfo addMethod = t.GetMethod(''Add'', new [] { keyType, valueType })", span="432-432", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_162 [label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="433-433", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_163 [label="Action<object, object> setExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)", span="434-434", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_164 [label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(t)", span="435-435", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_165 [label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="436-436", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_166 [label="extensionDataSetter = (o, key, value) =>\r\n                {\r\n                  object dictionary = getExtensionDataDictionary(o);\r\n                  if (dictionary == null)\r\n                  {\r\n                    dictionary = createExtensionDataDictionary();\r\n                    setExtensionDataDictionary(o, dictionary);\r\n                  }\r\n\r\n                  setExtensionDataDictionaryValue(dictionary, key, value);\r\n                }", span="438-448", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_167 [label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(member.DeclaringType), member.Name));", span="454-454", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_168 [label="return extensionDataSetter;", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_169 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", span="398-398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_27 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="201-201", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="MetadataPropertyHandlingTests.cs"];
m7_24 [label=_sharedCache, span="203-203", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="MetadataPropertyHandlingTests.cs"];
m7_23 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="201-201", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="MetadataPropertyHandlingTests.cs"];
m7_26 [label="return _instanceContractCache;", span="206-206", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="MetadataPropertyHandlingTests.cs"];
m7_25 [label="return _sharedContractCache;", span="204-204", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="MetadataPropertyHandlingTests.cs"];
m7_143 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="MetadataPropertyHandlingTests.cs"];
m7_229 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="MetadataPropertyHandlingTests.cs"];
m7_107 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="MetadataPropertyHandlingTests.cs"];
m7_469 [label="Entry System.Type.IsGenericTypeDefinition()", span="134-134", cluster="System.Type.IsGenericTypeDefinition()", file="MetadataPropertyHandlingTests.cs"];
m7_203 [label="objectType == typeof(Version)", span="471-471", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_204 [label="return objectType.GetConstructor(new [] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="472-472", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_201 [label=json, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_202 [label="return markedConstructors[0];", span="468-468", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_200 [label=json, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_205 [label="return null;", span="474-474", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_206 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="461-461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_359 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="749-749", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_361 [label="InitializeContract(contract)", span="752-752", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_360 [label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="751-751", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_362 [label="return contract;", span="754-754", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_363 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="749-749", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_8 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="MetadataPropertyHandlingTests.cs"];
m7_208 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="MetadataPropertyHandlingTests.cs"];
m7_171 [label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {}\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="536-542", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_137 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="959-959", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_577 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1189-1189", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="MetadataPropertyHandlingTests.cs"];
m7_603 [label="return propertyName;", span="1191-1191", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="MetadataPropertyHandlingTests.cs"];
m7_604 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1189-1189", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="MetadataPropertyHandlingTests.cs"];
m7_277 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="90-90", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_178 [label="Assert.AreEqual(null, actual.Payload2.Parent)", span="571-571", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_485 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="MetadataPropertyHandlingTests.cs"];
m7_174 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_600 [label="Entry lambda expression", span="1178-1178", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_15 [label="JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                    })", span="107-112", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_14 [label="Entry lambda expression", span="105-113", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_16 [label="Exit lambda expression", span="105-113", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_190 [label="Assert.IsTrue(actual.Payload is JObject)", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs"];
m7_191 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs"];
m7_188 [label="Assert.AreEqual(5f, actual.Payload)", span="609-609", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs"];
m7_189 [label="actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="611-621", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs"];
m7_187 [label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="598-607", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="MetadataPropertyHandlingTests.cs"];
m7_389 [label="methodCall(null, args)", span="799-799", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_210 [label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="463-463", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_586 [label="(bool)shouldSerializeCall(o)", span="1162-1162", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_601 [label="(bool)specifiedPropertyGet(o)", span="1178-1178", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_388 [label="Entry lambda expression", span="799-799", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_390 [label="Exit lambda expression", span="799-799", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_209 [label="Entry lambda expression", span="463-463", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_211 [label="Exit lambda expression", span="463-463", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_486 [label="Entry lambda expression", span="975-975", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_585 [label="Entry lambda expression", span="1162-1162", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_587 [label="Exit lambda expression", span="1162-1162", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_602 [label="Exit lambda expression", span="1178-1178", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_487 [label="p.Order ?? -1", span="975-975", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_488 [label="Exit lambda expression", span="975-975", cluster="lambda expression", file="MetadataPropertyHandlingTests.cs"];
m7_256 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1037-1037", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_532 [label="property.PropertyName = ResolvePropertyName(mappedName)", span="1065-1065", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_566 [label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1136-1136", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_517 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="1040-1040", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_531 [label="mappedName = name", span="1063-1063", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_530 [label="mappedName = dataMemberAttribute.Name", span="1060-1060", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_528 [label="mappedName = propertyAttribute.PropertyName", span="1057-1057", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_533 [label="property.UnderlyingName = name", span="1066-1066", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_565 [label="allowNonPublicAccess = false", span="1135-1135", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_567 [label="allowNonPublicAccess = true", span="1137-1137", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_568 [label="propertyAttribute != null", span="1138-1138", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_518 [label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="1042-1042", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_520 [label="dataContractAttribute != null && memberInfo != null", span="1045-1045", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_523 [label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1051-1051", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_525 [label="property.HasMemberAttribute = true", span="1053-1053", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_536 [label="property._required = propertyAttribute._required", span="1071-1071", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_537 [label="property.Order = propertyAttribute._order", span="1072-1072", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_538 [label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1073-1073", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_541 [label="property._required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="1079-1079", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_542 [label="property.Order = (dataMemberAttribute.Order != -1) ? (int?) dataMemberAttribute.Order : null", span="1080-1080", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_543 [label="property.DefaultValueHandling = (!dataMemberAttribute.EmitDefaultValue) ? (DefaultValueHandling?) DefaultValueHandling.Ignore : null", span="1081-1081", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_545 [label="bool hasJsonIgnoreAttribute =\r\n        JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n        // automatically ignore extension data dictionary property if it is public\r\n        || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE40 || PORTABLE)\r\n        || JsonTypeReflector.GetAttribute<NonSerializedAttribute>(attributeProvider) != null", span="1086-1091", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_546 [label="memberSerialization != MemberSerialization.OptIn", span="1095-1095", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_548 [label="hasIgnoreDataMemberAttribute = (JsonTypeReflector.GetAttribute<IgnoreDataMemberAttribute>(attributeProvider) != null)", span="1100-1100", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_549 [label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1104-1104", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_550 [label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1109-1109", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_551 [label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1114-1114", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_552 [label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1115-1115", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_553 [label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1117-1117", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_555 [label="property.DefaultValue = defaultValueAttribute.Value", span="1119-1119", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_556 [label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="1121-1121", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_557 [label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="1122-1122", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_558 [label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="1123-1123", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_559 [label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="1124-1124", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_560 [label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="1125-1125", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_561 [label="property.ItemIsReference = (propertyAttribute != null) ? propertyAttribute._itemIsReference : null", span="1127-1127", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_562 [label="property.ItemConverter =\r\n        (propertyAttribute != null && propertyAttribute.ItemConverterType != null)\r\n          ? JsonConverterAttribute.CreateJsonConverterInstance(propertyAttribute.ItemConverterType)\r\n          : null", span="1128-1131", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_563 [label="property.ItemReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._itemReferenceLoopHandling : null", span="1132-1132", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_564 [label="property.ItemTypeNameHandling = (propertyAttribute != null) ? propertyAttribute._itemTypeNameHandling : null", span="1133-1133", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_570 [label="memberSerialization == MemberSerialization.Fields", span="1140-1140", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_574 [label="property.HasMemberAttribute = true", span="1147-1147", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_529 [label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="1059-1059", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_521 [label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo) memberInfo)", span="1046-1046", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_522 [label="dataMemberAttribute = null", span="1048-1048", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_527 [label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="1056-1056", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_534 [label="bool hasMemberAttribute = false", span="1068-1068", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_569 [label="allowNonPublicAccess = true", span="1139-1139", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_519 [label="DataMemberAttribute dataMemberAttribute", span="1044-1044", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_572 [label="dataMemberAttribute != null", span="1144-1144", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_571 [label="allowNonPublicAccess = true", span="1141-1141", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_573 [label="allowNonPublicAccess = true", span="1146-1146", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_524 [label="propertyAttribute != null", span="1052-1052", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_535 [label="propertyAttribute != null", span="1069-1069", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_526 [label="string mappedName", span="1055-1055", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_539 [label="hasMemberAttribute = true", span="1074-1074", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_540 [label="dataMemberAttribute != null", span="1077-1077", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_544 [label="hasMemberAttribute = true", span="1082-1082", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_547 [label="bool hasIgnoreDataMemberAttribute = false", span="1097-1097", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_554 [label="defaultValueAttribute != null", span="1118-1118", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_575 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1037-1037", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="MetadataPropertyHandlingTests.cs"];
m7_387 [label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0", cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="MetadataPropertyHandlingTests.cs"];
m7_175 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="MetadataPropertyHandlingTests.cs"];
m7_176 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", color=red, community=0, file="MetadataPropertyHandlingTests.cs"];
m7_350 [label="Entry System.Type.BaseType()", span="143-143", cluster="System.Type.BaseType()", file="MetadataPropertyHandlingTests.cs"];
m7_217 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="MetadataPropertyHandlingTests.cs"];
m7_109 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="349-349", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="MetadataPropertyHandlingTests.cs"];
m7_364 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_340 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="389-389", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_599 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="MetadataPropertyHandlingTests.cs"];
m7_365 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="762-762", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_367 [label="InitializeContract(contract)", span="765-765", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_366 [label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="764-764", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_368 [label="return contract;", span="767-767", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_369 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="762-762", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_433 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_170 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="713-713", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_173 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="419-419", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_434 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="883-883", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_436 [label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n && !(converter is ReferenceConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="889-894", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_435 [label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="886-886", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_437 [label="converter.CanConvertTo(typeof(string))", span="896-896", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_439 [label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="901-901", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_438 [label="return true;", span="897-897", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_440 [label="return true;", span="902-902", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_441 [label="return false;", span="909-909", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_442 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="883-883", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_231 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="MetadataPropertyHandlingTests.cs"];
m7_432 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_339 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="912-912", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_445 [label="!method.IsDefined(attributeType, false)", span="914-914", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_446 [label="return false;", span="915-915", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_447 [label="currentCallback != null", span="917-917", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_448 [label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="918-918", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_450 [label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="921-921", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_452 [label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="924-924", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_454 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="927-927", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_457 [label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="932-932", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_459 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="937-937", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_449 [label="prevAttributeType != null", span="920-920", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_451 [label="method.IsVirtual", span="923-923", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_453 [label="method.ReturnType != typeof(void)", span="926-926", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_455 [label="attributeType == typeof(OnErrorAttribute)", span="929-929", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_456 [label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="931-931", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_458 [label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="936-936", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_460 [label="prevAttributeType = attributeType", span="940-940", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_461 [label="return true;", span="942-942", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_462 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="912-912", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_257 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="564-564", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_258 [label="return JsonTypeReflector.GetJsonConverter(objectType, objectType);", span="566-566", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_259 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="564-564", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_496 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_338 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="MetadataPropertyHandlingTests.cs"];
m7_489 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="984-984", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_491 [label=DynamicCodeGeneration, span="990-990", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_490 [label="IValueProvider valueProvider", span="987-987", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_492 [label="valueProvider = new DynamicValueProvider(member)", span="991-991", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_493 [label="valueProvider = new ReflectionValueProvider(member)", span="993-993", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_494 [label="return valueProvider;", span="1000-1000", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_495 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="984-984", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="MetadataPropertyHandlingTests.cs"];
m7_370 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="41-41", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_471 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="MetadataPropertyHandlingTests.cs"];
m7_342 [label="List<Type> ret = new List<Type>()", span="715-715", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_343 [label="Type current = type", span="717-717", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_348 [label="return ret;", span="726-726", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_345 [label="ret.Add(current)", span="720-720", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_347 [label="ret.Reverse()", span="725-725", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_344 [label="current != null && current != typeof(object)", span="718-718", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_346 [label="current = current.BaseType()", span="721-721", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_349 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="713-713", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="MetadataPropertyHandlingTests.cs"];
m7_598 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="MetadataPropertyHandlingTests.cs"];
m7_464 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="MetadataPropertyHandlingTests.cs"];
m7_472 [label="List<MemberInfo> members = GetSerializableMembers(type)", span="961-961", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_477 [label="JsonProperty property = CreateProperty(member, memberSerialization)", span="969-969", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_473 [label="members == null", span="962-962", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_476 [label=members, span="967-967", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_478 [label="property != null", span="971-971", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_479 [label="properties.AddProperty(property)", span="972-972", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_475 [label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="965-965", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_474 [label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="963-963", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_480 [label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="975-975", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_481 [label="return orderedProperties;", span="976-976", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_482 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="959-959", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="MetadataPropertyHandlingTests.cs"];
m7_13 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="MetadataPropertyHandlingTests.cs"];
m7_611 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span="", file="MetadataPropertyHandlingTests.cs"];
m7_613 [label=createExtensionDataDictionary, span="", file="MetadataPropertyHandlingTests.cs"];
m7_614 [label=setExtensionDataDictionary, span="", file="MetadataPropertyHandlingTests.cs"];
m7_615 [label=setExtensionDataDictionaryValue, span="", file="MetadataPropertyHandlingTests.cs"];
m7_612 [label=getExtensionDataDictionary, span="", file="MetadataPropertyHandlingTests.cs"];
m7_616 [label=methodCall, span="", file="MetadataPropertyHandlingTests.cs"];
m7_608 [label="out Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="MetadataPropertyHandlingTests.cs"];
m7_617 [label=shouldSerializeCall, span="", file="MetadataPropertyHandlingTests.cs"];
m7_618 [label=specifiedPropertyGet, span="", file="MetadataPropertyHandlingTests.cs"];
m8_382 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="ReflectionUtils.cs"];
m8_199 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="412-412", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_200 [label="ValidationUtils.ArgumentNotNull(dictionaryType, nameof(dictionaryType))", span="414-414", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_202 [label="ImplementsGenericDefinition(dictionaryType, typeof(IDictionary<,>), out genericDictionaryType)", span="417-417", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_204 [label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="421-421", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_209 [label="typeof(IDictionary).IsAssignableFrom(dictionaryType)", span="430-430", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_213 [label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="437-437", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_201 [label="Type genericDictionaryType", span="416-416", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_203 [label="genericDictionaryType.IsGenericTypeDefinition()", span="419-419", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_205 [label="Type[] dictionaryGenericArguments = genericDictionaryType.GetGenericArguments()", span="424-424", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_206 [label="keyType = dictionaryGenericArguments[0]", span="426-426", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_207 [label="valueType = dictionaryGenericArguments[1]", span="427-427", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_208 [label="return;", span="428-428", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_210 [label="keyType = null", span="432-432", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_211 [label="valueType = null", span="433-433", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_212 [label="return;", span="434-434", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_214 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="412-412", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_81 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ReflectionUtils.cs"];
m8_339 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ReflectionUtils.cs"];
m8_469 [label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_543 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1070-1070", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_544 [label="!type.IsValueType()", span="1072-1072", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_546 [label="ConvertUtils.GetTypeCode(type)", span="1077-1077", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_574 [label="IsNullable(type)", span="1112-1112", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_576 [label="return Activator.CreateInstance(type);", span="1118-1118", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_545 [label="return null;", span="1074-1074", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_547 [label="PrimitiveTypeCode.Boolean", span="1079-1079", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_549 [label="PrimitiveTypeCode.Char", span="1081-1081", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_557 [label="PrimitiveTypeCode.Int64", span="1089-1089", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_560 [label="PrimitiveTypeCode.Single", span="1092-1092", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_562 [label="PrimitiveTypeCode.Double", span="1094-1094", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_564 [label="PrimitiveTypeCode.Decimal", span="1096-1096", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_566 [label="PrimitiveTypeCode.DateTime", span="1098-1098", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_568 [label="PrimitiveTypeCode.BigInteger", span="1101-1101", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_570 [label="PrimitiveTypeCode.Guid", span="1104-1104", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_572 [label="PrimitiveTypeCode.DateTimeOffset", span="1107-1107", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_548 [label="return false;", span="1080-1080", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_550 [label="PrimitiveTypeCode.SByte", span="1082-1082", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_551 [label="PrimitiveTypeCode.Byte", span="1083-1083", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_552 [label="PrimitiveTypeCode.Int16", span="1084-1084", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_553 [label="PrimitiveTypeCode.UInt16", span="1085-1085", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_554 [label="PrimitiveTypeCode.Int32", span="1086-1086", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_555 [label="PrimitiveTypeCode.UInt32", span="1087-1087", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_556 [label="return 0;", span="1088-1088", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_558 [label="PrimitiveTypeCode.UInt64", span="1090-1090", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_559 [label="return 0L;", span="1091-1091", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_561 [label="return 0f;", span="1093-1093", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_563 [label="return 0.0;", span="1095-1095", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_565 [label="return 0m;", span="1097-1097", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_567 [label="return new DateTime();", span="1099-1099", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_569 [label="return new BigInteger();", span="1102-1102", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_571 [label="return new Guid();", span="1105-1105", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_573 [label="return new DateTimeOffset();", span="1108-1108", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_575 [label="return null;", span="1114-1114", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_577 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1070-1070", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="ReflectionUtils.cs"];
m8_415 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", file="ReflectionUtils.cs"];
m8_270 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_271 [label="member.MemberType()", span="564-564", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_273 [label="FieldInfo fieldInfo = (FieldInfo)member", span="567-567", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_274 [label=nonPublic, span="569-569", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_280 [label="PropertyInfo propertyInfo = (PropertyInfo)member", span="579-579", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_283 [label=nonPublic, span="585-585", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_285 [label="return (propertyInfo.GetGetMethod(nonPublic) != null);", span="589-589", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_272 [label="MemberTypes.Field", span="566-566", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_279 [label="MemberTypes.Property", span="578-578", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_286 [label="return false;", span="591-591", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_276 [label="fieldInfo.IsPublic", span="573-573", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_275 [label="return true;", span="571-571", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_277 [label="return true;", span="575-575", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_278 [label="return false;", span="577-577", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_281 [label="!propertyInfo.CanRead", span="581-581", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_282 [label="return false;", span="583-583", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_284 [label="return true;", span="587-587", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_287 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_39 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_40 [label="string fullyQualifiedTypeName", span="155-155", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_41 [label="binder != null", span="157-157", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_43 [label="binder.BindToName(t, out assemblyName, out typeName)", span="160-160", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_45 [label="fullyQualifiedTypeName = t.AssemblyQualifiedName", span="165-165", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_46 [label=assemblyFormat, span="171-171", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_42 [label="string assemblyName, typeName", span="159-159", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_44 [label="fullyQualifiedTypeName = typeName + (assemblyName == null ? '''' : '', '' + assemblyName)", span="161-161", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_48 [label="return RemoveAssemblyDetails(fullyQualifiedTypeName);", span="174-174", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_50 [label="return fullyQualifiedTypeName;", span="176-176", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_47 [label="FormatterAssemblyStyle.Simple", span="173-173", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_49 [label="FormatterAssemblyStyle.Full", span="175-175", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_51 [label="throw new ArgumentOutOfRangeException();", span="178-178", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_52 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="153-153", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ReflectionUtils.cs"];
m8_480 [label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64", cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m8_100 [label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_90 [label="Entry System.Type.IsValueType()", span="567-567", cluster="System.Type.IsValueType()", file="ReflectionUtils.cs"];
m8_336 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ReflectionUtils.cs"];
m8_129 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_130 [label="Type implementingType", span="294-294", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_131 [label="return ImplementsGenericDefinition(type, genericInterfaceDefinition, out implementingType);", span="295-295", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_132 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="292-292", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_27 [label="Entry System.Reflection.MethodInfo.GetBaseDefinition()", span="0-0", cluster="System.Reflection.MethodInfo.GetBaseDefinition()", file="ReflectionUtils.cs"];
m8_407 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ReflectionUtils.cs"];
m8_381 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_384 [label="ValidationUtils.ArgumentNotNull(attributeProvider, nameof(attributeProvider))", span="757-757", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_385 [label="object provider = attributeProvider", span="759-759", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_388 [label="object[] a = (attributeType != null) ? t.GetCustomAttributes(attributeType, inherit) : t.GetCustomAttributes(inherit)", span="767-767", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_393 [label="return (attributeType != null) ? Attribute.GetCustomAttributes(a, attributeType) : Attribute.GetCustomAttributes(a);", span="782-782", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_396 [label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="788-788", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_399 [label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="795-795", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_402 [label="return (attributeType != null) ? Attribute.GetCustomAttributes(p, attributeType, inherit) : Attribute.GetCustomAttributes(p, inherit);", span="802-802", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_403 [label="ICustomAttributeProvider customAttributeProvider = (ICustomAttributeProvider)attributeProvider", span="806-806", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_404 [label="object[] result = (attributeType != null) ? customAttributeProvider.GetCustomAttributes(attributeType, inherit) : customAttributeProvider.GetCustomAttributes(inherit)", span="807-807", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_386 [label="provider is Type", span="764-764", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_387 [label="Type t = (Type)provider", span="766-766", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_391 [label="provider is Assembly", span="779-779", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_392 [label="Assembly a = (Assembly)provider", span="781-781", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_394 [label="provider is MemberInfo", span="785-785", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_395 [label="MemberInfo m = (MemberInfo)provider", span="787-787", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_397 [label="provider is Module", span="792-792", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_398 [label="Module m = (Module)provider", span="794-794", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_400 [label="provider is ParameterInfo", span="799-799", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_401 [label="ParameterInfo p = (ParameterInfo)provider", span="801-801", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_389 [label="Attribute[] attributes = a.Cast<Attribute>().ToArray()", span="768-768", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_390 [label="return attributes;", span="776-776", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_405 [label="return (Attribute[])result;", span="809-809", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_406 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="755-755", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="ReflectionUtils.cs"];
m8_578 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="ReflectionUtils.cs"];
m8_468 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m8_14 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ReflectionUtils.cs"];
m8_53 [label="Entry System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", span="0-0", cluster="System.Runtime.Serialization.SerializationBinder.BindToName(System.Type, out string, out string)", file="ReflectionUtils.cs"];
m8_478 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ReflectionUtils.cs"];
m8_500 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="993-993", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_504 [label="(targetType = targetType.BaseType()) != null", span="1000-1000", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_505 [label="targetType.GetProperties(bindingAttr)", span="1002-1002", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_508 [label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name)", span="1010-1010", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_510 [label="initialProperties.Add(subTypeProperty)", span="1013-1013", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_511 [label="PropertyInfo childProperty = initialProperties[index]", span="1017-1017", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_513 [label="initialProperties[index] = subTypeProperty", span="1024-1024", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_515 [label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType)", span="1032-1033", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_517 [label="initialProperties.Add(subTypeProperty)", span="1037-1037", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_518 [label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                       && p.IsVirtual()\r\n                                                                       && p.GetBaseDefinition() != null\r\n                                                                       && p.GetBaseDefinition().DeclaringType.IsAssignableFrom(subTypeProperty.GetBaseDefinition().DeclaringType))", span="1042-1045", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_520 [label="initialProperties.Add(subTypeProperty)", span="1049-1049", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_506 [label="PropertyInfo subTypeProperty = propertyInfo", span="1004-1004", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_507 [label="!IsPublic(subTypeProperty)", span="1006-1006", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_514 [label="!subTypeProperty.IsVirtual()", span="1030-1030", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_509 [label="index == -1", span="1011-1011", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_512 [label="!IsPublic(childProperty)", span="1019-1019", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_516 [label="index == -1", span="1035-1035", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_519 [label="index == -1", span="1047-1047", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_521 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="993-993", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_257 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ReflectionUtils.cs"];
m8_182 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_183 [label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="388-388", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_185 [label="type.IsArray", span="391-391", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_186 [label="return type.GetElementType();", span="393-393", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_187 [label="ImplementsGenericDefinition(type, typeof(IEnumerable<>), out genericListType)", span="395-395", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_189 [label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="399-399", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_191 [label="typeof(IEnumerable).IsAssignableFrom(type)", span="404-404", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_193 [label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="409-409", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_184 [label="Type genericListType", span="389-389", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_188 [label="genericListType.IsGenericTypeDefinition()", span="397-397", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_190 [label="return genericListType.GetGenericArguments()[0];", span="402-402", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_192 [label="return null;", span="406-406", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_194 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="ReflectionUtils.cs"];
m8_84 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_85 [label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="229-229", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_86 [label="t.IsValueType()", span="231-231", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_88 [label="return (GetDefaultConstructor(t, nonPublic) != null);", span="236-236", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_87 [label="return true;", span="233-233", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_89 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_312 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_313 [label="List<MemberInfo> targetMembers = new List<MemberInfo>()", span="647-647", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_314 [label="targetMembers.AddRange(GetFields(type, bindingAttr))", span="649-649", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_315 [label="targetMembers.AddRange(GetProperties(type, bindingAttr))", span="650-650", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_326 [label="!IsOverridenGenericMember(memberInfo, bindingAttr) || memberInfo.Name == ''Item''", span="679-679", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_316 [label="List<MemberInfo> distinctMembers = new List<MemberInfo>(targetMembers.Count)", span="656-656", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_317 [label="targetMembers.GroupBy(m => m.Name)", span="658-658", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_321 [label="distinctMembers.Add(members.First())", span="665-665", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_328 [label="distinctMembers.AddRange(resolvedMembers)", span="685-685", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_329 [label="return distinctMembers;", span="689-689", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_318 [label="int count = groupedMember.Count()", span="660-660", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_319 [label="IList<MemberInfo> members = groupedMember.ToList()", span="661-661", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_320 [label="count == 1", span="663-663", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_323 [label=members, span="670-670", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_322 [label="IList<MemberInfo> resolvedMembers = new List<MemberInfo>()", span="669-669", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_324 [label="resolvedMembers.Count == 0", span="675-675", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_325 [label="resolvedMembers.Add(memberInfo)", span="677-677", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_327 [label="resolvedMembers.Add(memberInfo)", span="681-681", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_330 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_196 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="ReflectionUtils.cs"];
m8_35 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs"];
m8_36 [label="return (v != null) ? v.GetType() : null;", span="150-150", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs"];
m8_37 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ReflectionUtils.cs"];
m8_408 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionUtils.cs"];
m8_113 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs"];
m8_114 [label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="269-269", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs"];
m8_115 [label="return (t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(Nullable<>));", span="271-271", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs"];
m8_116 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ReflectionUtils.cs"];
m8_337 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ReflectionUtils.cs"];
m8_501 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="986-986", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_502 [label="return ((bindingAttr & flag) == flag)\r\n                ? bindingAttr ^ flag\r\n                : bindingAttr;", span="988-990", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_503 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="986-986", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_335 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="ReflectionUtils.cs"];
m8_155 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionUtils.cs"];
m8_413 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", file="ReflectionUtils.cs"];
m8_256 [label="Entry System.ArgumentException.ArgumentException(string, System.Exception)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, System.Exception)", file="ReflectionUtils.cs"];
m8_417 [label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="ReflectionUtils.cs"];
m8_383 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionUtils.cs"];
m8_342 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_346 [label="memberInfo.MemberType() != MemberTypes.Property", span="694-694", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_348 [label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="699-699", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_357 [label="MemberInfo[] members = genericTypeDefinition.GetMember(propertyInfo.Name, bindingAttr)", span="715-715", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_347 [label="return false;", span="696-696", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_349 [label="!IsVirtual(propertyInfo)", span="700-700", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_351 [label="Type declaringType = propertyInfo.DeclaringType", span="705-705", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_350 [label="return false;", span="702-702", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_352 [label="!declaringType.IsGenericType()", span="706-706", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_354 [label="Type genericTypeDefinition = declaringType.GetGenericTypeDefinition()", span="710-710", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_353 [label="return false;", span="708-708", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_355 [label="genericTypeDefinition == null", span="711-711", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_356 [label="return false;", span="713-713", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_358 [label="members.Length == 0", span="716-716", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_360 [label="Type memberUnderlyingType = GetMemberUnderlyingType(members[0])", span="720-720", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_359 [label="return false;", span="718-718", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_361 [label="!memberUnderlyingType.IsGenericParameter", span="721-721", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_362 [label="return false;", span="723-723", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_363 [label="return true;", span="726-726", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_364 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="692-692", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_456 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="ReflectionUtils.cs"];
m8_119 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs"];
m8_120 [label="return (IsNullableType(t))\r\n                ? Nullable.GetUnderlyingType(t)\r\n                : t;", span="276-278", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs"];
m8_121 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="ReflectionUtils.cs"];
m8_430 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="ReflectionUtils.cs"];
m8_414 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", file="ReflectionUtils.cs"];
m8_419 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="858-858", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_420 [label="int? assemblyDelimiterIndex = GetAssemblyDelimiterIndex(fullyQualifiedTypeName)", span="860-860", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_422 [label="typeName = fullyQualifiedTypeName.Substring(0, assemblyDelimiterIndex.GetValueOrDefault()).Trim()", span="864-864", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_423 [label="assemblyName = fullyQualifiedTypeName.Substring(assemblyDelimiterIndex.GetValueOrDefault() + 1, fullyQualifiedTypeName.Length - assemblyDelimiterIndex.GetValueOrDefault() - 1).Trim()", span="865-865", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_424 [label="typeName = fullyQualifiedTypeName", span="869-869", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_421 [label="assemblyDelimiterIndex != null", span="862-862", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_425 [label="assemblyName = null", span="870-870", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_426 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="858-858", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="ReflectionUtils.cs"];
m8_13 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ReflectionUtils.cs"];
m8_429 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ReflectionUtils.cs"];
m8_459 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ReflectionUtils.cs"];
m8_117 [label="Entry System.Type.IsGenericType()", span="153-153", cluster="System.Type.IsGenericType()", file="ReflectionUtils.cs"];
m8_268 [label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0", cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="ReflectionUtils.cs"];
m8_237 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="494-494", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_238 [label="ValidationUtils.ArgumentNotNull(property, nameof(property))", span="496-496", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_239 [label="return (property.GetIndexParameters().Length > 0);", span="498-498", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_240 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="494-494", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_418 [label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", file="ReflectionUtils.cs"];
m8_539 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ReflectionUtils.cs"];
m8_427 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="874-874", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_431 [label="int scope = 0", span="878-878", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_433 [label="i < fullyQualifiedTypeName.Length", span="879-879", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_434 [label="char current = fullyQualifiedTypeName[i]", span="881-881", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_432 [label="int i = 0", span="879-879", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_437 [label="scope++", span="885-885", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_442 [label="return i;", span="893-893", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_443 [label="i++", span="879-879", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_444 [label="return null;", span="899-899", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_435 [label=current, span="882-882", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_436 [label="'['", span="884-884", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_438 [label="']'", span="887-887", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_440 [label="','", span="890-890", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_439 [label="scope--", span="888-888", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_441 [label="scope == 0", span="891-891", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_445 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="874-874", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="ReflectionUtils.cs"];
m8_523 [label="Entry System.Reflection.PropertyInfo.IsVirtual()", span="96-96", cluster="System.Reflection.PropertyInfo.IsVirtual()", file="ReflectionUtils.cs"];
m8_366 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="729-729", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="ReflectionUtils.cs"];
m8_367 [label="return GetAttribute<T>(attributeProvider, true);", span="731-731", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="ReflectionUtils.cs"];
m8_368 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="729-729", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="ReflectionUtils.cs"];
m8_229 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="ReflectionUtils.cs"];
m8_374 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ReflectionUtils.cs"];
m8_91 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_95 [label="BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public", span="246-246", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_96 [label=nonPublic, span="247-247", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_98 [label="return t.GetConstructors(bindingFlags).SingleOrDefault(c => !c.GetParameters().Any());", span="252-252", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_97 [label="bindingFlags = bindingFlags | BindingFlags.NonPublic", span="249-249", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_99 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="244-244", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="ReflectionUtils.cs"];
m8_230 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="471-471", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_231 [label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="473-473", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_232 [label="PropertyInfo propertyInfo = member as PropertyInfo", span="475-475", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_233 [label="propertyInfo != null", span="477-477", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_234 [label="return IsIndexedProperty(propertyInfo);", span="479-479", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_235 [label="return false;", span="483-483", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_236 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="471-471", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_195 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="ReflectionUtils.cs"];
m8_311 [label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="ReflectionUtils.cs"];
m8_156 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="ReflectionUtils.cs"];
m8_522 [label="Entry System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", span="200-200", cluster="System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", file="ReflectionUtils.cs"];
m8_479 [label="Entry Unk.>", span="", cluster="Unk.>", file="ReflectionUtils.cs"];
m8_446 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="902-902", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_447 [label="BindingFlags bindingAttr = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic", span="904-904", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_448 [label="memberInfo.MemberType()", span="906-906", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_450 [label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="909-909", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_452 [label="return targetType.GetProperty(propertyInfo.Name, bindingAttr, null, propertyInfo.PropertyType, types, null);", span="913-913", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_453 [label="return targetType.GetMember(memberInfo.Name, memberInfo.MemberType(), bindingAttr).SingleOrDefault();", span="915-915", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_449 [label="MemberTypes.Property", span="908-908", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_451 [label="Type[] types = propertyInfo.GetIndexParameters().Select(p => p.ParameterType).ToArray()", span="911-911", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_454 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="902-902", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_332 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="919-919", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_463 [label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="921-921", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_464 [label="List<MemberInfo> fieldInfos = new List<MemberInfo>(targetType.GetFields(bindingAttr))", span="923-923", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_465 [label="GetChildPrivateFields(fieldInfos, targetType, bindingAttr)", span="927-927", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_466 [label="return fieldInfos.Cast<FieldInfo>();", span="930-930", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_467 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="919-919", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_455 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ReflectionUtils.cs"];
m8_92 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="ReflectionUtils.cs"];
m8_93 [label="return GetDefaultConstructor(t, false);", span="241-241", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="ReflectionUtils.cs"];
m8_94 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="ReflectionUtils.cs"];
m8_579 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="ReflectionUtils.cs"];
m8_289 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_290 [label="member.MemberType()", span="606-606", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_292 [label="FieldInfo fieldInfo = (FieldInfo)member", span="609-609", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_295 [label="fieldInfo.IsInitOnly && !canSetReadOnly", span="615-615", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_297 [label=nonPublic, span="619-619", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_303 [label="PropertyInfo propertyInfo = (PropertyInfo)member", span="629-629", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_306 [label=nonPublic, span="635-635", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_308 [label="return (propertyInfo.GetSetMethod(nonPublic) != null);", span="639-639", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_291 [label="MemberTypes.Field", span="608-608", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_302 [label="MemberTypes.Property", span="628-628", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_309 [label="return false;", span="641-641", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_293 [label="fieldInfo.IsLiteral", span="611-611", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_299 [label="fieldInfo.IsPublic", span="623-623", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_294 [label="return false;", span="613-613", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_296 [label="return false;", span="617-617", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_298 [label="return true;", span="621-621", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_300 [label="return true;", span="625-625", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_301 [label="return false;", span="627-627", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_304 [label="!propertyInfo.CanWrite", span="631-631", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_305 [label="return false;", span="633-633", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_307 [label="return true;", span="637-637", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_310 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionUtils.cs"];
m8_122 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ReflectionUtils.cs"];
m8_477 [label="Entry System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", span="986-986", cluster="System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_410 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", file="ReflectionUtils.cs"];
m8_105 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionUtils.cs"];
m8_153 [label="Entry System.Type.IsInterface()", span="144-144", cluster="System.Type.IsInterface()", file="ReflectionUtils.cs"];
m8_340 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ReflectionUtils.cs"];
m8_154 [label="Entry System.Type.IsGenericTypeDefinition()", span="162-162", cluster="System.Type.IsGenericTypeDefinition()", file="ReflectionUtils.cs"];
m8_533 [label="Entry System.Reflection.PropertyInfo.GetBaseDefinition()", span="115-115", cluster="System.Reflection.PropertyInfo.GetBaseDefinition()", file="ReflectionUtils.cs"];
m8_16 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="ReflectionUtils.cs"];
m8_170 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="359-359", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_171 [label="currentType.IsGenericType()", span="361-361", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_172 [label="Type currentGenericClassDefinition = currentType.GetGenericTypeDefinition()", span="363-363", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_173 [label="genericClassDefinition == currentGenericClassDefinition", span="365-365", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_174 [label="implementingType = currentType", span="367-367", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_176 [label="currentType.BaseType() == null", span="372-372", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_179 [label="return InheritsGenericDefinitionInternal(currentType.BaseType(), genericClassDefinition, out implementingType);", span="378-378", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_175 [label="return true;", span="368-368", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_177 [label="implementingType = null", span="374-374", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_178 [label="return false;", span="375-375", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_180 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="359-359", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_162 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="346-346", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_163 [label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="348-348", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_164 [label="ValidationUtils.ArgumentNotNull(genericClassDefinition, nameof(genericClassDefinition))", span="349-349", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_165 [label="!genericClassDefinition.IsClass() || !genericClassDefinition.IsGenericTypeDefinition()", span="351-351", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_166 [label="throw new ArgumentNullException('''{0}' is not a generic class definition.''.FormatWith(CultureInfo.InvariantCulture, genericClassDefinition));", span="353-353", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_167 [label="return InheritsGenericDefinitionInternal(type, genericClassDefinition, out implementingType);", span="356-356", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_168 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="346-346", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_241 [label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0", cluster="System.Reflection.PropertyInfo.GetIndexParameters()", file="ReflectionUtils.cs"];
m8_373 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m8_375 [label="Attribute[] a = GetAttributes(attributeProvider, typeof(T), inherit)", span="744-744", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m8_376 [label="T[] attributes = a as T[]", span="746-746", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m8_379 [label="return a.Cast<T>().ToArray();", span="752-752", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m8_377 [label="attributes != null", span="747-747", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m8_378 [label="return attributes;", span="749-749", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m8_380 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="742-742", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="ReflectionUtils.cs"];
m8_107 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs"];
m8_108 [label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="257-257", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs"];
m8_109 [label="t.IsValueType()", span="259-259", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs"];
m8_110 [label="return IsNullableType(t);", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs"];
m8_111 [label="return true;", span="264-264", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs"];
m8_112 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ReflectionUtils.cs"];
m8_17 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_18 [label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="117-117", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_19 [label="MethodInfo m = propertyInfo.GetGetMethod()", span="119-119", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_22 [label="m = propertyInfo.GetSetMethod()", span="125-125", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_20 [label="m != null", span="120-120", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_21 [label="return m.GetBaseDefinition();", span="122-122", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_23 [label="m != null", span="126-126", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_24 [label="return m.GetBaseDefinition();", span="128-128", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_25 [label="return null;", span="131-131", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_26 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_341 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReflectionUtils.cs"];
m8_416 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", file="ReflectionUtils.cs"];
m8_255 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ReflectionUtils.cs"];
m8_499 [label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_583 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="ReflectionUtils.cs"];
m8_198 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionUtils.cs"];
m8_3 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_4 [label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="98-98", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_5 [label="MethodInfo m = propertyInfo.GetGetMethod()", span="100-100", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_8 [label="m = propertyInfo.GetSetMethod()", span="106-106", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_6 [label="m != null && m.IsVirtual", span="101-101", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_7 [label="return true;", span="103-103", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_9 [label="m != null && m.IsVirtual", span="107-107", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_10 [label="return true;", span="109-109", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_11 [label="return false;", span="112-112", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_12 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_133 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_134 [label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="300-300", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_135 [label="ValidationUtils.ArgumentNotNull(genericInterfaceDefinition, nameof(genericInterfaceDefinition))", span="301-301", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_136 [label="!genericInterfaceDefinition.IsInterface() || !genericInterfaceDefinition.IsGenericTypeDefinition()", span="303-303", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_137 [label="throw new ArgumentNullException('''{0}' is not a generic interface definition.''.FormatWith(CultureInfo.InvariantCulture, genericInterfaceDefinition));", span="305-305", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_138 [label="type.IsInterface()", span="308-308", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_139 [label="type.IsGenericType()", span="310-310", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_140 [label="Type interfaceDefinition = type.GetGenericTypeDefinition()", span="312-312", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_141 [label="genericInterfaceDefinition == interfaceDefinition", span="314-314", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_142 [label="implementingType = type", span="316-316", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_144 [label="type.GetInterfaces()", span="322-322", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_147 [label="genericInterfaceDefinition == interfaceDefinition", span="328-328", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_143 [label="return true;", span="317-317", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_145 [label="i.IsGenericType()", span="324-324", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_150 [label="implementingType = null", span="336-336", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_146 [label="Type interfaceDefinition = i.GetGenericTypeDefinition()", span="326-326", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_148 [label="implementingType = i", span="330-330", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_149 [label="return true;", span="331-331", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_151 [label="return false;", span="337-337", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_152 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="ReflectionUtils.cs"];
m8_158 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_159 [label="Type implementingType", span="342-342", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_160 [label="return InheritsGenericDefinition(type, genericClassDefinition, out implementingType);", span="343-343", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_161 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_540 [label="Entry lambda expression", span="1060-1064", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_102 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_103 [label="!c.GetParameters().Any()", span="252-252", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_104 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_343 [label="Entry lambda expression", span="658-658", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_344 [label="m.Name", span="658-658", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_345 [label="Exit lambda expression", span="658-658", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_460 [label="Entry lambda expression", span="911-911", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_461 [label="p.ParameterType", span="911-911", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_462 [label="Exit lambda expression", span="911-911", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_481 [label="Entry lambda expression", span="947-947", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_482 [label="f.IsPrivate", span="947-947", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_483 [label="Exit lambda expression", span="947-947", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_525 [label="p.Name == subTypeProperty.Name", span="1010-1010", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_528 [label="p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType", span="1032-1033", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_531 [label="p.Name == subTypeProperty.Name\r\n                                                                       && p.IsVirtual()\r\n                                                                       && p.GetBaseDefinition() != null\r\n                                                                       && p.GetBaseDefinition().DeclaringType.IsAssignableFrom(subTypeProperty.GetBaseDefinition().DeclaringType)", span="1042-1045", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_524 [label="Entry lambda expression", span="1010-1010", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_527 [label="Entry lambda expression", span="1032-1033", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_530 [label="Entry lambda expression", span="1042-1045", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_526 [label="Exit lambda expression", span="1010-1010", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_529 [label="Exit lambda expression", span="1032-1033", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_532 [label="Exit lambda expression", span="1042-1045", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_541 [label="info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType", span="1061-1064", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_542 [label="Exit lambda expression", span="1060-1064", cluster="lambda expression", file="ReflectionUtils.cs"];
m8_38 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ReflectionUtils.cs"];
m8_181 [label="Entry System.Type.BaseType()", span="171-171", cluster="System.Type.BaseType()", file="ReflectionUtils.cs"];
m8_242 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_243 [label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="509-509", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_244 [label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="510-510", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_245 [label="member.MemberType()", span="512-512", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_247 [label="return ((FieldInfo)member).GetValue(target);", span="515-515", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_249 [label="return ((PropertyInfo)member).GetValue(target, null);", span="519-519", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_251 [label="throw new ArgumentException(''MemberInfo '{0}' has index parameters''.FormatWith(CultureInfo.InvariantCulture, member.Name), e);", span="523-523", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_252 [label="throw new ArgumentException(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, CultureInfo.InvariantCulture, member.Name), nameof(member));", span="526-526", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_246 [label="MemberTypes.Field", span="514-514", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_248 [label="MemberTypes.Property", span="516-516", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_250 [label=TargetParameterCountException, span="521-521", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_253 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="ReflectionUtils.cs"];
m8_534 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1057-1057", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m8_535 [label="bool isMethodOverriden = currentType.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)\r\n                .Any(info =>\r\n                    info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType\r\n                )", span="1059-1065", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m8_536 [label="return isMethodOverriden;", span="1067-1067", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m8_537 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1057-1057", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="ReflectionUtils.cs"];
m8_15 [label="Entry System.Reflection.PropertyInfo.GetGetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetGetMethod()", file="ReflectionUtils.cs"];
m8_106 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionUtils.cs"];
m8_269 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionUtils.cs"];
m8_470 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="934-934", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_471 [label="(bindingAttr & BindingFlags.NonPublic) != 0", span="938-938", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_472 [label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="941-941", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_473 [label="(targetType = targetType.BaseType()) != null", span="943-943", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_475 [label="initialFields.AddRange(childPrivateFields)", span="949-949", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_474 [label="IEnumerable<MemberInfo> childPrivateFields =\r\n                        targetType.GetFields(nonPublicBindingAttr).Where(f => f.IsPrivate).Cast<MemberInfo>()", span="946-947", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_476 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="934-934", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_338 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ReflectionUtils.cs"];
m8_118 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtils.cs"];
m8_169 [label="Entry System.Type.IsClass()", span="198-198", cluster="System.Type.IsClass()", file="ReflectionUtils.cs"];
m8_0 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs"];
m8_1 [label="EmptyTypes = Type.EmptyTypes", span="90-90", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs"];
m8_2 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="ReflectionUtils.cs"];
m8_333 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="ReflectionUtils.cs"];
m8_228 [label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107", cluster="System.Reflection.MemberInfo.MemberType()", file="ReflectionUtils.cs"];
m8_581 [label="Entry System.Guid.Guid()", span="0-0", cluster="System.Guid.Guid()", file="ReflectionUtils.cs"];
m8_258 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="536-536", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_259 [label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="538-538", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_260 [label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="539-539", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_261 [label="member.MemberType()", span="541-541", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_263 [label="((FieldInfo)member).SetValue(target, value)", span="544-544", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_265 [label="((PropertyInfo)member).SetValue(target, value, null)", span="547-547", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_266 [label="throw new ArgumentException(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, member.Name), nameof(member));", span="550-550", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_262 [label="MemberTypes.Field", span="543-543", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_264 [label="MemberTypes.Property", span="546-546", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_267 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="536-536", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="ReflectionUtils.cs"];
m8_331 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtils.cs"];
m8_428 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="ReflectionUtils.cs"];
m8_288 [label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0", cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="ReflectionUtils.cs"];
m8_54 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_56 [label="StringBuilder builder = new StringBuilder()", span="184-184", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_60 [label="i < fullyQualifiedTypeName.Length", span="189-189", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_61 [label="char current = fullyQualifiedTypeName[i]", span="191-191", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_57 [label="bool writingAssemblyName = false", span="187-187", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_66 [label="builder.Append(current)", span="197-197", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_70 [label="builder.Append(current)", span="202-202", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_74 [label="builder.Append(current)", span="208-208", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_77 [label="builder.Append(current)", span="218-218", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_79 [label="return builder.ToString();", span="224-224", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_58 [label="bool skippingAssemblyDetails = false", span="188-188", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_59 [label="int i = 0", span="189-189", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_78 [label="i++", span="189-189", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_62 [label=current, span="192-192", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_63 [label="'['", span="194-194", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_67 [label="']'", span="199-199", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_71 [label="','", span="204-204", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_76 [label="!skippingAssemblyDetails", span="216-216", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_64 [label="writingAssemblyName = false", span="195-195", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_65 [label="skippingAssemblyDetails = false", span="196-196", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_68 [label="writingAssemblyName = false", span="200-200", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_69 [label="skippingAssemblyDetails = false", span="201-201", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_72 [label="!writingAssemblyName", span="205-205", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_73 [label="writingAssemblyName = true", span="207-207", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_75 [label="skippingAssemblyDetails = true", span="212-212", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_80 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="182-182", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="ReflectionUtils.cs"];
m8_82 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="ReflectionUtils.cs"];
m8_580 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="ReflectionUtils.cs"];
m8_411 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", file="ReflectionUtils.cs"];
m8_55 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="ReflectionUtils.cs"];
m8_365 [label="Entry System.Type.GetMember(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMember(string, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_538 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_254 [label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0", cluster="System.Reflection.FieldInfo.GetValue(object)", file="ReflectionUtils.cs"];
m8_157 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="ReflectionUtils.cs"];
m8_412 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", file="ReflectionUtils.cs"];
m8_334 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="955-955", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_484 [label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="957-957", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_485 [label="List<PropertyInfo> propertyInfos = new List<PropertyInfo>(targetType.GetProperties(bindingAttr))", span="959-959", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_486 [label="targetType.IsInterface()", span="962-962", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_487 [label="targetType.GetInterfaces()", span="964-964", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_488 [label="propertyInfos.AddRange(i.GetProperties(bindingAttr))", span="966-966", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_489 [label="GetChildPrivateProperties(propertyInfos, targetType, bindingAttr)", span="970-970", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_493 [label="member.DeclaringType != targetType", span="976-976", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_491 [label="i < propertyInfos.Count", span="973-973", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_492 [label="PropertyInfo member = propertyInfos[i]", span="975-975", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_495 [label="propertyInfos[i] = declaredMember", span="979-979", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_497 [label="return propertyInfos;", span="983-983", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_490 [label="int i = 0", span="973-973", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_496 [label="i++", span="973-973", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_494 [label="PropertyInfo declaredMember = (PropertyInfo)GetMemberInfoFromType(member.DeclaringType, member)", span="978-978", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_498 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="955-955", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_458 [label="Entry System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="ReflectionUtils.cs"];
m8_409 [label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", span="0-0", cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", file="ReflectionUtils.cs"];
m8_215 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_216 [label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="447-447", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_217 [label="member.MemberType()", span="449-449", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_219 [label="return ((FieldInfo)member).FieldType;", span="452-452", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_221 [label="return ((PropertyInfo)member).PropertyType;", span="454-454", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_223 [label="return ((EventInfo)member).EventHandlerType;", span="456-456", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_225 [label="return ((MethodInfo)member).ReturnType;", span="458-458", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_226 [label="throw new ArgumentException(''MemberInfo must be of type FieldInfo, PropertyInfo, EventInfo or MethodInfo'', nameof(member));", span="460-460", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_218 [label="MemberTypes.Field", span="451-451", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_220 [label="MemberTypes.Property", span="453-453", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_222 [label="MemberTypes.Event", span="455-455", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_224 [label="MemberTypes.Method", span="457-457", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_227 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionUtils.cs"];
m8_28 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_29 [label="property.GetGetMethod() != null && property.GetGetMethod().IsPublic", span="136-136", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_31 [label="property.GetSetMethod() != null && property.GetSetMethod().IsPublic", span="140-140", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_30 [label="return true;", span="138-138", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_32 [label="return true;", span="142-142", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_33 [label="return false;", span="145-145", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_34 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="ReflectionUtils.cs"];
m8_83 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ReflectionUtils.cs"];
m8_457 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", file="ReflectionUtils.cs"];
m8_123 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_124 [label="!type.IsGenericType()", span="283-283", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_126 [label="Type t = type.GetGenericTypeDefinition()", span="288-288", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_127 [label="return (t == genericInterfaceDefinition);", span="289-289", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_125 [label="return false;", span="285-285", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_128 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="ReflectionUtils.cs"];
m8_582 [label="Entry System.DateTimeOffset.DateTimeOffset()", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset()", file="ReflectionUtils.cs"];
m8_101 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="ReflectionUtils.cs"];
m8_369 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs"];
m8_370 [label="T[] attributes = GetAttributes<T>(attributeProvider, inherit)", span="736-736", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs"];
m8_371 [label="return (attributes != null) ? attributes.FirstOrDefault() : null;", span="738-738", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs"];
m8_372 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="734-734", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="ReflectionUtils.cs"];
m8_584 [label=subTypeProperty, span="", file="ReflectionUtils.cs"];
m8_585 [label="System.Type", span="", file="ReflectionUtils.cs"];
m8_586 [label=string, span="", file="ReflectionUtils.cs"];
n104 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n0 -> n1  [key=0, style=solid];
n0 -> n11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n14  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n18  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n23  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n25  [key=1, style=dashed, color=red, label="System.Type"];
n0 -> n27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n30  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n32  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n38  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n42  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n43  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n44  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n1 -> n2  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n21  [key=0, style=solid];
n11 -> n69  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n12 -> n70  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n66  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n72  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n73  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n30  [key=0, style=solid];
n21 -> n70  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid, color=red];
n23 -> n74  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid, color=red];
n25 -> n27  [key=0, style=solid, color=red];
n25 -> n74  [key=2, style=dotted, color=red];
n27 -> n28  [key=0, style=solid];
n27 -> n72  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n38  [key=0, style=solid];
n30 -> n70  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n32 -> n74  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n55  [key=0, style=solid];
n38 -> n70  [key=2, style=dotted];
n38 -> n47  [key=1, style=dashed, color=darkseagreen4, label=tempCollectionType];
n42 -> n43  [key=0, style=solid];
n42 -> n72  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n46  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n75  [key=2, style=dotted];
n44 -> n76  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n51  [key=0, style=solid];
n46 -> n78  [key=2, style=dotted];
n46 -> n79  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n65  [key=0, style=solid];
n60 -> n80  [key=2, style=dotted];
n60 -> n62  [key=1, style=dashed, color=darkseagreen4, label=immutableParameterizedCreator];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n11  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n66  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n67  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
n10 -> n57  [key=0, style=solid];
n10 -> n68  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n13 -> n71  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=0, style=solid];
n20 -> n57  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n71  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid, color=red];
n24 -> n67  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n67  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
n29 -> n57  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n71  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n67  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n67  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n72  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n37 -> n57  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n71  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
n47 -> n48  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=0, style=solid];
n40 -> n74  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n67  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n77  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n67  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n50 -> n57  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n54 -> n57  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n65 -> n0  [key=0, style=bold, color=blue];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n90  [key=1, style=dashed, color=darkseagreen4, label=object];
n82 -> n83  [key=0, style=solid];
n82 -> n90  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n90 -> n94  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n67  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=0, style=solid];
n85 -> n73  [key=2, style=dotted];
n85 -> n79  [key=2, style=dotted];
n86 -> n88  [key=0, style=solid];
n86 -> n67  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n88 -> n92  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n93  [key=2, style=dotted];
n91 -> n81  [key=0, style=bold, color=blue];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n100  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n103  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n67  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n102  [key=2, style=dotted];
n101 -> n95  [key=0, style=bold, color=blue];
d30 -> d31  [key=0, style=solid, color=green];
d30 -> d33  [key=2, style=dotted, color=green];
d29 -> d30  [key=0, style=solid, color=green];
d29 -> d31  [key=1, style=dashed, color=green, label="System.Type"];
d29 -> d34  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo ResolveEnumerableCollectionConstructor"];
d34 -> d30  [key=3, color=green, style=bold, label="Parameter variable System.Type constructorArgumentType"];
d34 -> d44  [key=1, style=dashed, color=green, label="System.Type"];
d34 -> d29  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type collectionItemType"];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d34 -> d36  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo ResolveEnumerableCollectionConstructor"];
d31 -> d32  [key=0, style=solid, color=green];
d31 -> d34  [key=2, style=dotted, color=green];
d32 -> d29  [key=0, style=bold, color=blue];
d44 -> d45  [key=0, style=solid, color=green];
d44 -> d37  [key=0, style=solid, color=green];
d44 -> d27  [key=2, style=dotted, color=green];
d43 -> d44  [key=0, style=solid, color=green];
d43 -> d37  [key=0, style=solid];
d40 -> d44  [key=1, style=dashed, color=green, label=parameterType];
d40 -> d41  [key=0, style=solid, color=green];
d45 -> d37  [key=0, style=solid];
d45 -> d46  [key=1, style=dashed, color=darkseagreen4, label=match];
d37 -> d45  [key=1, style=dashed, color=darkseagreen4, label=constructor];
d37 -> d38  [key=0, style=solid];
d37 -> d46  [key=0, style=solid];
d37 -> d48  [key=2, style=dotted];
d37 -> d42  [key=1, style=dashed, color=darkseagreen4, label=constructor];
d41 -> d42  [key=0, style=solid, color=green];
d41 -> d43  [key=0, style=solid, color=green];
d35 -> d41  [key=1, style=dashed, color=green, label=genericEnumerable];
d35 -> d33  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d42 -> d43  [key=1, style=dashed, color=darkseagreen4, label=match];
d42 -> d46  [key=0, style=solid];
d38 -> d40  [key=1, style=dashed, color=green, label=parameters];
d38 -> d39  [key=0, style=solid];
d38 -> d49  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid, color=green];
d39 -> d37  [key=0, style=solid];
d47 -> d34  [key=0, style=bold, color=blue];
d36 -> d43  [key=1, style=dashed, color=darkseagreen4, label=match];
d36 -> d37  [key=0, style=solid];
d36 -> d36  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.ConstructorInfo match"];
d36 -> d46  [key=1, style=dashed, color=darkseagreen4, label=match];
d46 -> d47  [key=0, style=solid];
d18 -> d27  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=0, style=solid];
d16 -> d18  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d16 -> d17  [key=0, style=solid];
d16 -> d20  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d16 -> d22  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d16 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsDictionaryType"];
d16 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsDictionaryType"];
d17 -> d18  [key=0, style=solid];
d17 -> d14  [key=2, style=dotted];
d17 -> d26  [key=2, style=dotted];
d19 -> d25  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d20 -> d28  [key=2, style=dotted];
d25 -> d16  [key=0, style=bold, color=blue];
d22 -> d23  [key=0, style=solid];
d22 -> d24  [key=0, style=solid];
d22 -> d28  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d21 -> d25  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
d0 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNullOrEmpty"];
d0 -> d1  [key=0, style=solid];
d0 -> d2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<T>"];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d53 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AddDistinct"];
d53 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AddDistinct"];
d53 -> d50  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
d53 -> d74  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
d53 -> d72  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEqualityComparer<T> comparer"];
d60 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ContainsValue"];
d60 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ContainsValue"];
d60 -> d53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEqualityComparer<TSource> comparer"];
d73 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable bool allAdded"];
d73 -> d74  [key=0, style=solid];
d73 -> d77  [key=1, style=dashed, color=darkseagreen4, label=allAdded];
d88 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Contains"];
d88 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Contains"];
d88 -> d89  [key=0, style=solid];
d88 -> d90  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
d88 -> d91  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
d4 -> d0  [key=0, style=bold, color=blue];
d7 -> d14  [key=2, style=dotted];
d7 -> d12  [key=0, style=solid];
d7 -> d13  [key=2, style=dotted];
d65 -> d14  [key=2, style=dotted];
d65 -> d70  [key=0, style=solid];
d65 -> d13  [key=2, style=dotted];
d2 -> d4  [key=0, style=solid];
d50 -> d53  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AddDistinct"];
d50 -> d51  [key=0, style=solid];
d51 -> d53  [key=2, style=dotted];
d51 -> d52  [key=0, style=solid];
d75 -> d53  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d75 -> d74  [key=0, style=solid];
d74 -> d75  [key=0, style=solid];
d74 -> d77  [key=0, style=solid];
d72 -> d73  [key=0, style=solid];
d72 -> d75  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
d72 -> d74  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
d55 -> d60  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d55 -> d57  [key=0, style=solid];
d77 -> d78  [key=0, style=solid];
d95 -> d88  [key=0, style=bold, color=blue];
d89 -> d90  [key=0, style=solid];
d89 -> d91  [key=1, style=dashed, color=darkseagreen4, label=i];
d89 -> d93  [key=1, style=dashed, color=darkseagreen4, label=i];
d89 -> d80  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d90 -> d91  [key=0, style=solid];
d90 -> d94  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d91 -> d93  [key=0, style=solid];
d91 -> d96  [key=2, style=dotted];
d5 -> d7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
d5 -> d6  [key=0, style=solid];
d5 -> d8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
d5 -> d10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
d5 -> d11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
d6 -> d7  [key=0, style=solid];
d6 -> d8  [key=0, style=solid];
d12 -> d5  [key=0, style=bold, color=blue];
d61 -> d65  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
d61 -> d62  [key=0, style=solid];
d61 -> d64  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
d61 -> d66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
d61 -> d67  [key=1, style=dashed, color=darkseagreen4, label=TSource];
d64 -> d65  [key=0, style=solid];
d64 -> d66  [key=0, style=solid];
d70 -> d61  [key=0, style=bold, color=blue];
d52 -> d50  [key=0, style=bold, color=blue];
d76 -> d74  [key=0, style=solid];
d76 -> d77  [key=1, style=dashed, color=darkseagreen4, label=allAdded];
d78 -> d72  [key=0, style=bold, color=blue];
d54 -> d55  [key=0, style=solid];
d54 -> d57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
d56 -> d59  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d57 -> d15  [key=2, style=dotted];
d94 -> d95  [key=0, style=solid];
d92 -> d95  [key=0, style=solid];
d93 -> d90  [key=0, style=solid];
d93 -> d93  [key=1, style=dashed, color=darkseagreen4, label=i];
d80 -> d80  [key=3, color=darkorchid, style=bold, label="Local variable int index"];
d80 -> d81  [key=0, style=solid];
d80 -> d83  [key=1, style=dashed, color=darkseagreen4, label=index];
d80 -> d84  [key=1, style=dashed, color=darkseagreen4, label=index];
d8 -> d9  [key=0, style=solid];
d8 -> d10  [key=0, style=solid];
d10 -> d12  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d11 -> d10  [key=0, style=solid];
d11 -> d15  [key=2, style=dotted];
d9 -> d12  [key=0, style=solid];
d62 -> d64  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d66 -> d67  [key=0, style=solid];
d66 -> d69  [key=0, style=solid];
d67 -> d66  [key=0, style=solid];
d67 -> d68  [key=0, style=solid];
d67 -> d71  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d63 -> d67  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEqualityComparer<TSource>"];
d69 -> d70  [key=0, style=solid];
d68 -> d70  [key=0, style=solid];
d59 -> d54  [key=0, style=bold, color=blue];
d58 -> d59  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d79 -> d81  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
d79 -> d82  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T, bool>"];
d79 -> d85  [key=3, color=darkorchid, style=bold, label="method methodReturn int IndexOf"];
d98 -> d80  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d98 -> d99  [key=0, style=solid];
d98 -> d100  [key=1, style=dashed, color=darkseagreen4, label=i];
d98 -> d101  [key=1, style=dashed, color=darkseagreen4, label=i];
d98 -> d102  [key=1, style=dashed, color=darkseagreen4, label=i];
d135 -> d80  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d135 -> d136  [key=0, style=solid];
d135 -> d139  [key=0, style=solid];
d135 -> d142  [key=2, style=dotted];
d131 -> d80  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d131 -> d132  [key=0, style=solid];
d131 -> d134  [key=0, style=solid];
d146 -> d80  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d146 -> d147  [key=0, style=solid];
d146 -> d152  [key=0, style=solid];
d81 -> d82  [key=0, style=solid];
d81 -> d85  [key=0, style=solid];
d83 -> d86  [key=0, style=solid];
d84 -> d81  [key=0, style=solid];
d84 -> d84  [key=1, style=dashed, color=darkseagreen4, label=index];
d110 -> d15  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d157 -> d15  [key=2, style=dotted];
d157 -> d156  [key=0, style=solid];
d86 -> d79  [key=0, style=bold, color=blue];
d82 -> d83  [key=0, style=solid];
d82 -> d84  [key=0, style=solid];
d82 -> d87  [key=2, style=dotted];
d85 -> d86  [key=0, style=solid];
d97 -> d98  [key=0, style=solid];
d97 -> d85  [key=3, color=darkorchid, style=bold, label="method methodReturn int IndexOfReference"];
d97 -> d99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
d97 -> d100  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
d99 -> d100  [key=0, style=solid];
d99 -> d103  [key=0, style=solid];
d100 -> d101  [key=0, style=solid];
d100 -> d102  [key=0, style=solid];
d100 -> d105  [key=2, style=dotted];
d101 -> d104  [key=0, style=solid];
d102 -> d99  [key=0, style=solid];
d102 -> d102  [key=1, style=dashed, color=darkseagreen4, label=i];
d119 -> d135  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
d119 -> d119  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Array multidimensionalArray"];
d119 -> d120  [key=0, style=solid];
d119 -> d121  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
d119 -> d122  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
d119 -> d124  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
d119 -> d125  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
d119 -> d132  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
d119 -> d137  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
d119 -> d154  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.IList values"];
d119 -> d158  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Array multidimensionalArray"];
d119 -> d129  [key=3, color=darkorchid, style=bold, label="Parameter variable int[] indices"];
d120 -> d135  [key=1, style=dashed, color=darkseagreen4, label=dimension];
d120 -> d131  [key=1, style=dashed, color=darkseagreen4, label=dimension];
d120 -> d121  [key=0, style=solid];
d120 -> d124  [key=1, style=dashed, color=darkseagreen4, label=dimension];
d120 -> d129  [key=1, style=dashed, color=darkseagreen4, label=dimension];
d120 -> d136  [key=1, style=dashed, color=darkseagreen4, label=dimension];
d134 -> d135  [key=0, style=solid];
d134 -> d136  [key=1, style=dashed, color=darkseagreen4, label=i];
d134 -> d138  [key=1, style=dashed, color=darkseagreen4, label=i];
d138 -> d135  [key=0, style=solid];
d138 -> d138  [key=1, style=dashed, color=darkseagreen4, label=i];
d136 -> d137  [key=0, style=solid];
d139 -> d119  [key=0, style=bold, color=blue];
d130 -> d131  [key=0, style=solid];
d130 -> d132  [key=1, style=dashed, color=darkseagreen4, label=i];
d130 -> d133  [key=1, style=dashed, color=darkseagreen4, label=i];
d133 -> d131  [key=0, style=solid];
d133 -> d133  [key=1, style=dashed, color=darkseagreen4, label=i];
d132 -> d133  [key=0, style=solid];
d140 -> d146  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
d140 -> d119  [key=3, color=darkorchid, style=bold, label="Parameter variable int[] indices"];
d140 -> d144  [key=0, style=solid];
d140 -> d147  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
d140 -> d148  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
d145 -> d146  [key=0, style=solid];
d145 -> d147  [key=1, style=dashed, color=darkseagreen4, label=i];
d145 -> d148  [key=1, style=dashed, color=darkseagreen4, label=i];
d145 -> d151  [key=1, style=dashed, color=darkseagreen4, label=i];
d151 -> d146  [key=0, style=solid];
d151 -> d151  [key=1, style=dashed, color=darkseagreen4, label=i];
d147 -> d148  [key=0, style=solid];
d147 -> d149  [key=1, style=dashed, color=darkseagreen4, label=index];
d147 -> d150  [key=1, style=dashed, color=darkseagreen4, label=index];
d152 -> d153  [key=0, style=solid];
d107 -> d110  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
d107 -> d108  [key=0, style=solid];
d107 -> d118  [key=2, style=dotted];
d107 -> d111  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
d107 -> d116  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
d108 -> d110  [key=1, style=dashed, color=darkseagreen4, label=currentArray];
d108 -> d109  [key=0, style=solid];
d108 -> d112  [key=1, style=dashed, color=darkseagreen4, label=currentArray];
d108 -> d113  [key=1, style=dashed, color=darkseagreen4, label=currentArray];
d108 -> d106  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList currentArray"];
d109 -> d110  [key=0, style=solid];
d109 -> d116  [key=0, style=solid];
d111 -> d112  [key=0, style=solid];
d111 -> d116  [key=0, style=solid];
d155 -> d157  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
d155 -> d156  [key=0, style=solid];
d155 -> d106  [key=2, style=dotted];
d155 -> d158  [key=1, style=dashed, color=darkseagreen4, label=dimensions];
d156 -> d157  [key=0, style=solid];
d156 -> d158  [key=0, style=solid];
d104 -> d97  [key=0, style=bold, color=blue];
d103 -> d104  [key=0, style=solid];
d137 -> d119  [key=2, style=dotted];
d137 -> d138  [key=0, style=solid];
d159 -> d119  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d121 -> d124  [key=0, style=solid];
d122 -> d140  [key=2, style=dotted];
d122 -> d123  [key=0, style=solid];
d122 -> d141  [key=2, style=dotted];
d124 -> d142  [key=2, style=dotted];
d124 -> d125  [key=0, style=solid];
d124 -> d127  [key=1, style=dashed, color=darkseagreen4, label=dimensionLength];
d125 -> d140  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d154 -> d155  [key=0, style=solid];
d154 -> d156  [key=1, style=dashed, color=darkseagreen4, label=int];
d154 -> d159  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
d154 -> d158  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d158 -> d159  [key=0, style=solid];
d158 -> d162  [key=2, style=dotted];
d158 -> d163  [key=2, style=dotted];
d158 -> d160  [key=1, style=dashed, color=darkseagreen4, label=multidimensionalArray];
d129 -> d136  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
d129 -> d130  [key=0, style=solid];
d129 -> d132  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
d129 -> d137  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
d123 -> d139  [key=0, style=solid];
d128 -> d139  [key=0, style=solid];
d128 -> d143  [key=2, style=dotted];
d144 -> d140  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList currentList"];
d144 -> d145  [key=0, style=solid];
d144 -> d152  [key=1, style=dashed, color=darkseagreen4, label=currentList];
d144 -> d149  [key=1, style=dashed, color=darkseagreen4, label=currentList];
d144 -> d150  [key=1, style=dashed, color=darkseagreen4, label=currentList];
d153 -> d140  [key=0, style=bold, color=blue];
d148 -> d149  [key=0, style=solid];
d148 -> d150  [key=0, style=solid];
d150 -> d151  [key=0, style=solid];
d150 -> d152  [key=1, style=dashed, color=darkseagreen4, label=currentList];
d150 -> d150  [key=1, style=dashed, color=darkseagreen4, label=currentList];
d149 -> d153  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d106 -> d108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
d106 -> d111  [key=1, style=dashed, color=darkseagreen4, label=int];
d106 -> d154  [key=3, color=darkorchid, style=bold, label="Parameter variable int dimensionsCount"];
d116 -> d117  [key=0, style=solid];
d112 -> d116  [key=0, style=solid];
d112 -> d113  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d113 -> d115  [key=1, style=dashed, color=darkseagreen4, label=v];
d115 -> d109  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d127 -> d129  [key=0, style=solid];
d127 -> d128  [key=0, style=solid];
d126 -> d127  [key=0, style=solid];
d161 -> d154  [key=0, style=bold, color=blue];
d117 -> d106  [key=0, style=bold, color=blue];
d114 -> d116  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_280  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_10  [key=2, style=dotted];
m0_281 -> m0_11  [key=2, style=dotted];
m0_281 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_16  [key=2, style=dotted];
m0_282 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_283 -> m0_279  [key=0, style=bold, color=blue];
m0_522 -> m0_523  [key=0, style=solid];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_523  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_10  [key=2, style=dotted];
m0_524 -> m0_11  [key=2, style=dotted];
m0_524 -> m0_528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_16  [key=2, style=dotted];
m0_525 -> m0_527  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_526 -> m0_522  [key=0, style=bold, color=blue];
m0_708 -> m0_709  [key=0, style=solid];
m0_709 -> m0_710  [key=0, style=solid];
m0_709 -> m0_10  [key=2, style=dotted];
m0_709 -> m0_11  [key=2, style=dotted];
m0_709 -> m0_711  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_709 -> m0_712  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_709 -> m0_717  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_709 -> m0_713  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_709 -> m0_714  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_710 -> m0_711  [key=0, style=solid];
m0_710 -> m0_12  [key=2, style=dotted];
m0_711 -> m0_712  [key=0, style=solid];
m0_711 -> m0_27  [key=2, style=dotted];
m0_712 -> m0_713  [key=0, style=solid];
m0_712 -> m0_16  [key=2, style=dotted];
m0_712 -> m0_716  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_713 -> m0_714  [key=0, style=solid];
m0_713 -> m0_74  [key=2, style=dotted];
m0_713 -> m0_28  [key=2, style=dotted];
m0_714 -> m0_715  [key=0, style=solid];
m0_714 -> m0_12  [key=2, style=dotted];
m0_714 -> m0_13  [key=2, style=dotted];
m0_715 -> m0_708  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_46 -> m0_12  [key=2, style=dotted];
m0_46 -> m0_13  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_51  [key=0, style=solid];
m0_47 -> m0_50  [key=2, style=dotted];
m0_47 -> m0_28  [key=2, style=dotted];
m0_48 -> m0_37  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_16  [key=2, style=dotted];
m0_48 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_43  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_54  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_55  [key=2, style=dotted];
m0_52 -> m0_46  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_0 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_20 -> m0_21  [key=0, style=solid, color=green];
m0_20 -> m0_37  [key=2, style=dotted, color=green];
m0_20 -> d34  [key=2, style=dotted, color=green];
m0_5 -> m0_20  [key=1, style=dashed, color=green, label=keyType];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_35  [key=2, style=dotted];
m0_5 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_5 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_5 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_5 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_5 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_20  [key=1, style=dashed, color=green, label=valueType];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_35  [key=2, style=dotted];
m0_6 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_6 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_6 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_6 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_6 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_24  [key=0, style=solid];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_11 -> m0_20  [key=1, style=dashed, color=green, label=keyType];
m0_11 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_35  [key=2, style=dotted];
m0_11 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_11 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_11 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_16 -> m0_20  [key=1, style=dashed, color=green, label=keyType];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_39  [key=2, style=dotted];
m0_16 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_16 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_16 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_12 -> m0_20  [key=1, style=dashed, color=green, label=valueType];
m0_12 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_35  [key=2, style=dotted];
m0_12 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_12 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_12 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_24  [key=0, style=solid];
m0_21 -> m0_21  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=0, style=solid];
m0_4 -> m0_34  [key=2, style=dotted];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_13  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_7 -> m0_36  [key=2, style=dotted];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_8 -> m0_37  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_19  [key=0, style=solid];
m0_9 -> m0_38  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_16  [key=0, style=solid];
m0_10 -> m0_34  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_13 -> m0_36  [key=2, style=dotted];
m0_14 -> m0_37  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_19  [key=0, style=solid];
m0_17 -> m0_19  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_14  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_43  [key=2, style=dotted];
m0_23 -> m0_12  [key=2, style=dotted];
m0_23 -> m0_13  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_44  [key=2, style=dotted];
m0_24 -> m0_27  [key=2, style=dotted];
m0_24 -> m0_28  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_16  [key=2, style=dotted];
m0_25 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_20  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_33  [key=0, style=solid];
m0_29 -> m0_45  [key=2, style=dotted];
m0_29 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=immutableParameterizedCreator];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_27  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_29  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_41  [key=2, style=dotted];
m0_22 -> m0_42  [key=2, style=dotted];
m0_22 -> m0_10  [key=2, style=dotted];
m0_22 -> m0_11  [key=2, style=dotted];
m0_22 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_22 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_22 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_3 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_3 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_33 -> m0_0  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_33  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_44  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_10  [key=2, style=dotted];
m0_45 -> m0_11  [key=2, style=dotted];
m0_45 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_45 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_45 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_12  [key=2, style=dotted];
m0_35 -> m0_13  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_195  [key=2, style=dotted];
m0_175 -> m0_11  [key=2, style=dotted];
m0_175 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m0_175 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m0_175 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m0_175 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m0_175 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m0_175 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_10  [key=2, style=dotted];
m0_176 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_176 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_178 -> m0_179  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_193 -> m0_194  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_12  [key=2, style=dotted];
m0_177 -> m0_13  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_16  [key=2, style=dotted];
m0_179 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_16  [key=2, style=dotted];
m0_180 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_12  [key=2, style=dotted];
m0_182 -> m0_13  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_28  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_16  [key=2, style=dotted];
m0_185 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_12  [key=2, style=dotted];
m0_187 -> m0_13  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_28  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_16  [key=2, style=dotted];
m0_190 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_16  [key=2, style=dotted];
m0_191 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_16  [key=2, style=dotted];
m0_192 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_194 -> m0_174  [key=0, style=bold, color=blue];
m0_569 -> m0_570  [key=0, style=solid];
m0_570 -> m0_571  [key=0, style=solid];
m0_570 -> m0_10  [key=2, style=dotted];
m0_570 -> m0_11  [key=2, style=dotted];
m0_570 -> m0_574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_16  [key=2, style=dotted];
m0_571 -> m0_573  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_572 -> m0_569  [key=0, style=bold, color=blue];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_10  [key=2, style=dotted];
m0_89 -> m0_11  [key=2, style=dotted];
m0_89 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_16  [key=2, style=dotted];
m0_90 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_91 -> m0_88  [key=0, style=bold, color=blue];
m0_404 -> m0_405  [key=0, style=solid];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_405 -> m0_405  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_10  [key=2, style=dotted];
m0_406 -> m0_11  [key=2, style=dotted];
m0_406 -> m0_415  [key=2, style=dotted];
m0_406 -> m0_408  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_406 -> m0_412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label=total];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_12  [key=2, style=dotted];
m0_408 -> m0_409  [key=0, style=solid];
m0_408 -> m0_28  [key=2, style=dotted];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_16  [key=2, style=dotted];
m0_412 -> m0_412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_412 -> m0_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_409 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_409 -> m0_409  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_414  [key=0, style=solid];
m0_413 -> m0_410  [key=0, style=solid];
m0_413 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_414 -> m0_404  [key=0, style=bold, color=blue];
m0_538 -> m0_539  [key=0, style=solid];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_10  [key=2, style=dotted];
m0_539 -> m0_11  [key=2, style=dotted];
m0_539 -> m0_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_540 -> m0_541  [key=0, style=solid];
m0_540 -> m0_16  [key=2, style=dotted];
m0_540 -> m0_542  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_541 -> m0_538  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_10  [key=2, style=dotted];
m0_34 -> m0_11  [key=2, style=dotted];
m0_34 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_34 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_39  [key=2, style=dotted];
m0_36 -> m0_28  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_16  [key=2, style=dotted];
m0_37 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_38 -> m0_32  [key=0, style=bold, color=blue];
m0_513 -> m0_514  [key=0, style=solid];
m0_514 -> m0_515  [key=0, style=solid];
m0_514 -> m0_498  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_10  [key=2, style=dotted];
m0_515 -> m0_11  [key=2, style=dotted];
m0_515 -> m0_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_16  [key=2, style=dotted];
m0_516 -> m0_518  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_517 -> m0_513  [key=0, style=bold, color=blue];
m0_54 -> m0_52  [key=0, style=bold, color=blue];
m0_611 -> m0_612  [key=0, style=solid];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_523  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_613 -> m0_614  [key=0, style=solid];
m0_613 -> m0_10  [key=2, style=dotted];
m0_613 -> m0_11  [key=2, style=dotted];
m0_613 -> m0_617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_614 -> m0_615  [key=0, style=solid];
m0_614 -> m0_16  [key=2, style=dotted];
m0_614 -> m0_616  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_615 -> m0_611  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_271 -> m0_272  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_272  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_10  [key=2, style=dotted];
m0_273 -> m0_11  [key=2, style=dotted];
m0_273 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_16  [key=2, style=dotted];
m0_274 -> m0_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_275 -> m0_271  [key=0, style=bold, color=blue];
m0_481 -> m0_482  [key=0, style=solid];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_474  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_10  [key=2, style=dotted];
m0_483 -> m0_11  [key=2, style=dotted];
m0_483 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_16  [key=2, style=dotted];
m0_484 -> m0_486  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_485 -> m0_481  [key=0, style=bold, color=blue];
m0_756 -> m0_757  [key=0, style=solid];
m0_757 -> m0_758  [key=0, style=solid];
m0_757 -> m0_757  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_758 -> m0_759  [key=0, style=solid];
m0_758 -> m0_10  [key=2, style=dotted];
m0_758 -> m0_11  [key=2, style=dotted];
m0_758 -> m0_760  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_758 -> m0_763  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_759 -> m0_760  [key=0, style=solid];
m0_759 -> m0_12  [key=2, style=dotted];
m0_759 -> m0_13  [key=2, style=dotted];
m0_760 -> m0_761  [key=0, style=solid];
m0_760 -> m0_16  [key=2, style=dotted];
m0_760 -> m0_762  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_761 -> m0_756  [key=0, style=bold, color=blue];
m0_295 -> m0_296  [key=0, style=solid];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_296  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_10  [key=2, style=dotted];
m0_297 -> m0_11  [key=2, style=dotted];
m0_297 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_300  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_297 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_12  [key=2, style=dotted];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_28  [key=2, style=dotted];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_12  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_28  [key=2, style=dotted];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_12  [key=2, style=dotted];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_28  [key=2, style=dotted];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_12  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_28  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_12  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_28  [key=2, style=dotted];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_16  [key=2, style=dotted];
m0_308 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_309 -> m0_295  [key=0, style=bold, color=blue];
m0_420 -> m0_421  [key=0, style=solid];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_425  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_421 -> m0_428  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_421 -> m0_421  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_10  [key=2, style=dotted];
m0_422 -> m0_11  [key=2, style=dotted];
m0_422 -> m0_415  [key=2, style=dotted];
m0_422 -> m0_424  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_422 -> m0_425  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_422 -> m0_429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_425 -> m0_426  [key=0, style=solid];
m0_425 -> m0_28  [key=2, style=dotted];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_433  [key=1, style=dashed, color=darkseagreen4, label=total];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_12  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_28  [key=2, style=dotted];
m0_429 -> m0_430  [key=0, style=solid];
m0_429 -> m0_16  [key=2, style=dotted];
m0_429 -> m0_429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_429 -> m0_432  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_426 -> m0_427  [key=0, style=solid];
m0_426 -> m0_428  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_426 -> m0_430  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_426 -> m0_409  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_431  [key=0, style=solid];
m0_430 -> m0_427  [key=0, style=solid];
m0_430 -> m0_430  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_431 -> m0_420  [key=0, style=bold, color=blue];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_10  [key=2, style=dotted];
m0_166 -> m0_11  [key=2, style=dotted];
m0_166 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_166 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_166 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_12  [key=2, style=dotted];
m0_167 -> m0_13  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_12  [key=2, style=dotted];
m0_168 -> m0_13  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_16  [key=2, style=dotted];
m0_169 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_170 -> m0_165  [key=0, style=bold, color=blue];
m0_737 -> m0_738  [key=0, style=solid];
m0_738 -> m0_739  [key=0, style=solid];
m0_738 -> m0_738  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_739 -> m0_740  [key=0, style=solid];
m0_739 -> m0_10  [key=2, style=dotted];
m0_739 -> m0_742  [key=2, style=dotted];
m0_739 -> m0_743  [key=2, style=dotted];
m0_739 -> m0_744  [key=2, style=dotted];
m0_739 -> m0_746  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_740 -> m0_741  [key=0, style=solid];
m0_740 -> m0_16  [key=2, style=dotted];
m0_740 -> m0_745  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_741 -> m0_737  [key=0, style=bold, color=blue];
m0_657 -> m0_658  [key=0, style=solid];
m0_658 -> m0_659  [key=0, style=solid];
m0_658 -> m0_10  [key=2, style=dotted];
m0_658 -> m0_11  [key=2, style=dotted];
m0_658 -> m0_662  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_659 -> m0_660  [key=0, style=solid];
m0_659 -> m0_16  [key=2, style=dotted];
m0_659 -> m0_661  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_660 -> m0_657  [key=0, style=bold, color=blue];
m0_719 -> m0_720  [key=0, style=solid];
m0_720 -> m0_721  [key=0, style=solid];
m0_720 -> m0_10  [key=2, style=dotted];
m0_720 -> m0_11  [key=2, style=dotted];
m0_720 -> m0_722  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_720 -> m0_729  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_720 -> m0_723  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_720 -> m0_732  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_720 -> m0_724  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_720 -> m0_735  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_720 -> m0_725  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_720 -> m0_726  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_721 -> m0_722  [key=0, style=solid];
m0_721 -> m0_12  [key=2, style=dotted];
m0_722 -> m0_723  [key=0, style=solid];
m0_722 -> m0_16  [key=2, style=dotted];
m0_722 -> m0_728  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_723 -> m0_724  [key=0, style=solid];
m0_723 -> m0_16  [key=2, style=dotted];
m0_723 -> m0_731  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_724 -> m0_725  [key=0, style=solid];
m0_724 -> m0_16  [key=2, style=dotted];
m0_724 -> m0_734  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_725 -> m0_726  [key=0, style=solid];
m0_725 -> m0_27  [key=2, style=dotted];
m0_725 -> m0_28  [key=2, style=dotted];
m0_726 -> m0_727  [key=0, style=solid];
m0_726 -> m0_12  [key=2, style=dotted];
m0_726 -> m0_13  [key=2, style=dotted];
m0_727 -> m0_719  [key=0, style=bold, color=blue];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_143  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_10  [key=2, style=dotted];
m0_144 -> m0_11  [key=2, style=dotted];
m0_144 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_144 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_12  [key=2, style=dotted];
m0_145 -> m0_13  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_28  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_12  [key=2, style=dotted];
m0_147 -> m0_13  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_28  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_12  [key=2, style=dotted];
m0_149 -> m0_13  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_28  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_12  [key=2, style=dotted];
m0_151 -> m0_13  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_28  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_16  [key=2, style=dotted];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_154 -> m0_142  [key=0, style=bold, color=blue];
m0_242 -> m0_243  [key=0, style=solid];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_10  [key=2, style=dotted];
m0_243 -> m0_11  [key=2, style=dotted];
m0_243 -> m0_247  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_16  [key=2, style=dotted];
m0_244 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_245 -> m0_242  [key=0, style=bold, color=blue];
m0_633 -> m0_634  [key=0, style=solid];
m0_634 -> m0_635  [key=0, style=solid];
m0_634 -> m0_10  [key=2, style=dotted];
m0_634 -> m0_11  [key=2, style=dotted];
m0_634 -> m0_638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_635 -> m0_636  [key=0, style=solid];
m0_635 -> m0_16  [key=2, style=dotted];
m0_635 -> m0_637  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_636 -> m0_633  [key=0, style=bold, color=blue];
m0_235 -> m0_236  [key=0, style=solid];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_10  [key=2, style=dotted];
m0_236 -> m0_11  [key=2, style=dotted];
m0_236 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_16  [key=2, style=dotted];
m0_237 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_238 -> m0_235  [key=0, style=bold, color=blue];
m0_391 -> m0_392  [key=0, style=solid];
m0_392 -> m0_393  [key=0, style=solid];
m0_392 -> m0_392  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_10  [key=2, style=dotted];
m0_393 -> m0_11  [key=2, style=dotted];
m0_393 -> m0_395  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_393 -> m0_396  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_393 -> m0_397  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_393 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_393 -> m0_400  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_393 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_393 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_12  [key=2, style=dotted];
m0_394 -> m0_13  [key=2, style=dotted];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_28  [key=2, style=dotted];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_12  [key=2, style=dotted];
m0_396 -> m0_13  [key=2, style=dotted];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_28  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_400  [key=0, style=solid];
m0_398 -> m0_14  [key=2, style=dotted];
m0_400 -> m0_401  [key=0, style=solid];
m0_400 -> m0_12  [key=2, style=dotted];
m0_400 -> m0_13  [key=2, style=dotted];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_28  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_12  [key=2, style=dotted];
m0_402 -> m0_362  [key=2, style=dotted];
m0_399 -> m0_400  [key=0, style=solid];
m0_403 -> m0_391  [key=0, style=bold, color=blue];
m0_640 -> m0_641  [key=0, style=solid];
m0_641 -> m0_642  [key=0, style=solid];
m0_641 -> m0_10  [key=2, style=dotted];
m0_641 -> m0_11  [key=2, style=dotted];
m0_641 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_642 -> m0_643  [key=0, style=solid];
m0_642 -> m0_16  [key=2, style=dotted];
m0_642 -> m0_644  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_643 -> m0_640  [key=0, style=bold, color=blue];
m0_576 -> m0_577  [key=0, style=solid];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_10  [key=2, style=dotted];
m0_577 -> m0_11  [key=2, style=dotted];
m0_577 -> m0_579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_577 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_577 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_577 -> m0_581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_577 -> m0_582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_12  [key=2, style=dotted];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_14  [key=2, style=dotted];
m0_579 -> m0_15  [key=2, style=dotted];
m0_580 -> m0_581  [key=0, style=solid];
m0_580 -> m0_16  [key=2, style=dotted];
m0_580 -> m0_584  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_14  [key=2, style=dotted];
m0_581 -> m0_15  [key=2, style=dotted];
m0_582 -> m0_583  [key=0, style=solid];
m0_582 -> m0_12  [key=2, style=dotted];
m0_582 -> m0_13  [key=2, style=dotted];
m0_583 -> m0_576  [key=0, style=bold, color=blue];
m0_626 -> m0_627  [key=0, style=solid];
m0_627 -> m0_628  [key=0, style=solid];
m0_627 -> m0_10  [key=2, style=dotted];
m0_627 -> m0_11  [key=2, style=dotted];
m0_627 -> m0_631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_628 -> m0_629  [key=0, style=solid];
m0_628 -> m0_16  [key=2, style=dotted];
m0_628 -> m0_630  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_629 -> m0_626  [key=0, style=bold, color=blue];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_10  [key=2, style=dotted];
m0_96 -> m0_11  [key=2, style=dotted];
m0_96 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_16  [key=2, style=dotted];
m0_97 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_98 -> m0_95  [key=0, style=bold, color=blue];
m0_800 -> m0_801  [key=0, style=solid];
m0_801 -> m0_802  [key=0, style=solid];
m0_801 -> m0_10  [key=2, style=dotted];
m0_801 -> m0_11  [key=2, style=dotted];
m0_801 -> m0_803  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_801 -> m0_806  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_802 -> m0_803  [key=0, style=solid];
m0_802 -> m0_12  [key=2, style=dotted];
m0_802 -> m0_13  [key=2, style=dotted];
m0_803 -> m0_804  [key=0, style=solid];
m0_803 -> m0_16  [key=2, style=dotted];
m0_803 -> m0_805  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_804 -> m0_800  [key=0, style=bold, color=blue];
m0_594 -> m0_595  [key=0, style=solid];
m0_595 -> m0_596  [key=0, style=solid];
m0_595 -> m0_595  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m0_596 -> m0_597  [key=0, style=solid];
m0_596 -> m0_8  [key=2, style=dotted];
m0_597 -> m0_598  [key=0, style=solid];
m0_597 -> m0_10  [key=2, style=dotted];
m0_597 -> m0_11  [key=2, style=dotted];
m0_597 -> m0_9  [key=2, style=dotted];
m0_597 -> m0_601  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_598 -> m0_599  [key=0, style=solid];
m0_598 -> m0_16  [key=2, style=dotted];
m0_598 -> m0_600  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_599 -> m0_594  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_39  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_449  [key=2, style=dotted];
m0_437 -> m0_443  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_10  [key=2, style=dotted];
m0_438 -> m0_450  [key=2, style=dotted];
m0_438 -> m0_451  [key=2, style=dotted];
m0_438 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_443 -> m0_444  [key=0, style=solid];
m0_439 -> m0_440  [key=0, style=solid];
m0_439 -> m0_12  [key=2, style=dotted];
m0_440 -> m0_441  [key=0, style=solid];
m0_440 -> m0_28  [key=2, style=dotted];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_443  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_441 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_441 -> m0_409  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_448  [key=0, style=solid];
m0_447 -> m0_442  [key=0, style=solid];
m0_447 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_10  [key=2, style=dotted];
m0_444 -> m0_450  [key=2, style=dotted];
m0_444 -> m0_451  [key=2, style=dotted];
m0_444 -> m0_446  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_12  [key=2, style=dotted];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_28  [key=2, style=dotted];
m0_448 -> m0_436  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_10  [key=2, style=dotted];
m0_117 -> m0_11  [key=2, style=dotted];
m0_117 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_16  [key=2, style=dotted];
m0_118 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_119 -> m0_116  [key=0, style=bold, color=blue];
m0_497 -> m0_498  [key=0, style=solid];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_498  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_10  [key=2, style=dotted];
m0_499 -> m0_11  [key=2, style=dotted];
m0_499 -> m0_503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_16  [key=2, style=dotted];
m0_500 -> m0_502  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_501 -> m0_497  [key=0, style=bold, color=blue];
m0_228 -> m0_229  [key=0, style=solid];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_10  [key=2, style=dotted];
m0_229 -> m0_11  [key=2, style=dotted];
m0_229 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_16  [key=2, style=dotted];
m0_230 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_231 -> m0_228  [key=0, style=bold, color=blue];
m0_158 -> m0_159  [key=0, style=solid];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_10  [key=2, style=dotted];
m0_159 -> m0_11  [key=2, style=dotted];
m0_159 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_16  [key=2, style=dotted];
m0_160 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_161 -> m0_158  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_124 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_124 -> m0_124  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_10  [key=2, style=dotted];
m0_125 -> m0_11  [key=2, style=dotted];
m0_125 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_10  [key=2, style=dotted];
m0_127 -> m0_11  [key=2, style=dotted];
m0_127 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_10  [key=2, style=dotted];
m0_129 -> m0_11  [key=2, style=dotted];
m0_129 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_16  [key=2, style=dotted];
m0_126 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_16  [key=2, style=dotted];
m0_128 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_16  [key=2, style=dotted];
m0_130 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_131 -> m0_123  [key=0, style=bold, color=blue];
m0_328 -> m0_329  [key=0, style=solid];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_10  [key=2, style=dotted];
m0_329 -> m0_11  [key=2, style=dotted];
m0_329 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_329 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_12  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_16  [key=2, style=dotted];
m0_331 -> m0_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_332 -> m0_328  [key=0, style=bold, color=blue];
m0_489 -> m0_490  [key=0, style=solid];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_490  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_10  [key=2, style=dotted];
m0_491 -> m0_11  [key=2, style=dotted];
m0_491 -> m0_495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_16  [key=2, style=dotted];
m0_492 -> m0_494  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_493 -> m0_489  [key=0, style=bold, color=blue];
m0_691 -> m0_692  [key=0, style=solid];
m0_692 -> m0_693  [key=0, style=solid];
m0_692 -> m0_10  [key=2, style=dotted];
m0_692 -> m0_11  [key=2, style=dotted];
m0_692 -> m0_696  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_693 -> m0_694  [key=0, style=solid];
m0_693 -> m0_16  [key=2, style=dotted];
m0_693 -> m0_695  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_694 -> m0_691  [key=0, style=bold, color=blue];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_44  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_10  [key=2, style=dotted];
m0_57 -> m0_11  [key=2, style=dotted];
m0_57 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_57 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_57 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_12  [key=2, style=dotted];
m0_58 -> m0_13  [key=2, style=dotted];
m0_58 -> m0_37  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_62  [key=2, style=dotted];
m0_59 -> m0_63  [key=2, style=dotted];
m0_59 -> m0_28  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_16  [key=2, style=dotted];
m0_60 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_60 -> m0_63  [key=2, style=dotted];
m0_61 -> m0_55  [key=0, style=bold, color=blue];
m0_61 -> m0_56  [key=0, style=bold, color=blue];
m0_748 -> m0_749  [key=0, style=solid];
m0_749 -> m0_750  [key=0, style=solid];
m0_749 -> m0_753  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_749 -> m0_749  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_750 -> m0_751  [key=0, style=solid];
m0_750 -> m0_16  [key=2, style=dotted];
m0_750 -> m0_752  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_751 -> m0_748  [key=0, style=bold, color=blue];
m0_505 -> m0_506  [key=0, style=solid];
m0_506 -> m0_507  [key=0, style=solid];
m0_506 -> m0_498  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_10  [key=2, style=dotted];
m0_507 -> m0_11  [key=2, style=dotted];
m0_507 -> m0_511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_508 -> m0_509  [key=0, style=solid];
m0_508 -> m0_16  [key=2, style=dotted];
m0_508 -> m0_510  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_509 -> m0_505  [key=0, style=bold, color=blue];
m0_263 -> m0_264  [key=0, style=solid];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_264  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_10  [key=2, style=dotted];
m0_265 -> m0_11  [key=2, style=dotted];
m0_265 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_16  [key=2, style=dotted];
m0_266 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_267 -> m0_263  [key=0, style=bold, color=blue];
m0_109 -> m0_110  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_10  [key=2, style=dotted];
m0_110 -> m0_11  [key=2, style=dotted];
m0_110 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_16  [key=2, style=dotted];
m0_111 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_112 -> m0_109  [key=0, style=bold, color=blue];
m0_545 -> m0_546  [key=0, style=solid];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_10  [key=2, style=dotted];
m0_546 -> m0_11  [key=2, style=dotted];
m0_546 -> m0_550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_16  [key=2, style=dotted];
m0_547 -> m0_549  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_548 -> m0_545  [key=0, style=bold, color=blue];
m0_559 -> m0_560  [key=0, style=solid];
m0_560 -> m0_561  [key=0, style=solid];
m0_560 -> m0_10  [key=2, style=dotted];
m0_560 -> m0_11  [key=2, style=dotted];
m0_560 -> m0_562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_560 -> m0_567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_560 -> m0_563  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_560 -> m0_564  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_561 -> m0_562  [key=0, style=solid];
m0_561 -> m0_12  [key=2, style=dotted];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_16  [key=2, style=dotted];
m0_562 -> m0_566  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_563 -> m0_564  [key=0, style=solid];
m0_563 -> m0_14  [key=2, style=dotted];
m0_563 -> m0_15  [key=2, style=dotted];
m0_564 -> m0_565  [key=0, style=solid];
m0_564 -> m0_12  [key=2, style=dotted];
m0_564 -> m0_13  [key=2, style=dotted];
m0_565 -> m0_559  [key=0, style=bold, color=blue];
m0_313 -> m0_314  [key=0, style=solid];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_314  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_10  [key=2, style=dotted];
m0_315 -> m0_11  [key=2, style=dotted];
m0_315 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_16  [key=2, style=dotted];
m0_316 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_317 -> m0_313  [key=0, style=bold, color=blue];
m0_221 -> m0_222  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_10  [key=2, style=dotted];
m0_222 -> m0_11  [key=2, style=dotted];
m0_222 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_16  [key=2, style=dotted];
m0_223 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_224 -> m0_221  [key=0, style=bold, color=blue];
m0_366 -> m0_367  [key=0, style=solid];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_367  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_10  [key=2, style=dotted];
m0_368 -> m0_11  [key=2, style=dotted];
m0_368 -> m0_370  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_380  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_373  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_376  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_368 -> m0_377  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_12  [key=2, style=dotted];
m0_369 -> m0_13  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_28  [key=2, style=dotted];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_16  [key=2, style=dotted];
m0_371 -> m0_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_16  [key=2, style=dotted];
m0_372 -> m0_382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_16  [key=2, style=dotted];
m0_373 -> m0_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_16  [key=2, style=dotted];
m0_374 -> m0_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_12  [key=2, style=dotted];
m0_375 -> m0_13  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_28  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_12  [key=2, style=dotted];
m0_377 -> m0_362  [key=2, style=dotted];
m0_378 -> m0_366  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_21  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_10  [key=2, style=dotted];
m0_80 -> m0_11  [key=2, style=dotted];
m0_80 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_80 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_80 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_12  [key=2, style=dotted];
m0_81 -> m0_13  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_12  [key=2, style=dotted];
m0_82 -> m0_13  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_16  [key=2, style=dotted];
m0_83 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_84 -> m0_78  [key=0, style=bold, color=blue];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_10  [key=2, style=dotted];
m0_103 -> m0_11  [key=2, style=dotted];
m0_103 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_16  [key=2, style=dotted];
m0_104 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_105 -> m0_102  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_51  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_10  [key=2, style=dotted];
m0_322 -> m0_11  [key=2, style=dotted];
m0_322 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_16  [key=2, style=dotted];
m0_323 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_324 -> m0_321  [key=0, style=bold, color=blue];
m0_42 -> m0_40  [key=0, style=bold, color=blue];
m0_698 -> m0_699  [key=0, style=solid];
m0_699 -> m0_700  [key=0, style=solid];
m0_699 -> m0_10  [key=2, style=dotted];
m0_699 -> m0_11  [key=2, style=dotted];
m0_699 -> m0_701  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_699 -> m0_706  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_699 -> m0_702  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_699 -> m0_703  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_700 -> m0_701  [key=0, style=solid];
m0_700 -> m0_12  [key=2, style=dotted];
m0_701 -> m0_702  [key=0, style=solid];
m0_701 -> m0_16  [key=2, style=dotted];
m0_701 -> m0_705  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_702 -> m0_703  [key=0, style=solid];
m0_702 -> m0_74  [key=2, style=dotted];
m0_702 -> m0_28  [key=2, style=dotted];
m0_703 -> m0_704  [key=0, style=solid];
m0_703 -> m0_12  [key=2, style=dotted];
m0_703 -> m0_13  [key=2, style=dotted];
m0_704 -> m0_698  [key=0, style=bold, color=blue];
m0_805 -> m0_806  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_63  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_20  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_64 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_66 -> m0_64  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_74  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_77 -> m0_75  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_12  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_87 -> m0_85  [key=0, style=bold, color=blue];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_12  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_94 -> m0_92  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_12  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_101 -> m0_99  [key=0, style=bold, color=blue];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_12  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_108 -> m0_106  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_12  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_115 -> m0_113  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_12  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_122 -> m0_120  [key=0, style=bold, color=blue];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_12  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_138  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_27  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_134 -> m0_132  [key=0, style=bold, color=blue];
m0_137 -> m0_135  [key=0, style=bold, color=blue];
m0_141 -> m0_139  [key=0, style=bold, color=blue];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_12  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_157 -> m0_155  [key=0, style=bold, color=blue];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_12  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_164 -> m0_162  [key=0, style=bold, color=blue];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_12  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_173 -> m0_171  [key=0, style=bold, color=blue];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_12  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_12  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_12  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_12  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_12  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_12  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_199 -> m0_200  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_205 -> m0_206  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_211 -> m0_212  [key=0, style=solid];
m0_198 -> m0_196  [key=0, style=bold, color=blue];
m0_201 -> m0_199  [key=0, style=bold, color=blue];
m0_204 -> m0_202  [key=0, style=bold, color=blue];
m0_207 -> m0_205  [key=0, style=bold, color=blue];
m0_210 -> m0_208  [key=0, style=bold, color=blue];
m0_213 -> m0_211  [key=0, style=bold, color=blue];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_12  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_220 -> m0_218  [key=0, style=bold, color=blue];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_12  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_227 -> m0_225  [key=0, style=bold, color=blue];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_12  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_234 -> m0_232  [key=0, style=bold, color=blue];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_12  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_241 -> m0_239  [key=0, style=bold, color=blue];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_12  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_248 -> m0_246  [key=0, style=bold, color=blue];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_12  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_262 -> m0_260  [key=0, style=bold, color=blue];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_12  [key=2, style=dotted];
m0_269 -> m0_13  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_270 -> m0_268  [key=0, style=bold, color=blue];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_12  [key=2, style=dotted];
m0_276 -> m0_277  [key=0, style=solid];
m0_278 -> m0_276  [key=0, style=bold, color=blue];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_12  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_286 -> m0_284  [key=0, style=bold, color=blue];
m0_293 -> m0_293  [key=0, style=solid];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_12  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_294 -> m0_292  [key=0, style=bold, color=blue];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_12  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_312 -> m0_310  [key=0, style=bold, color=blue];
m0_319 -> m0_319  [key=0, style=solid];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_12  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_320 -> m0_318  [key=0, style=bold, color=blue];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_12  [key=2, style=dotted];
m0_325 -> m0_326  [key=0, style=solid];
m0_327 -> m0_325  [key=0, style=bold, color=blue];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_12  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_335 -> m0_333  [key=0, style=bold, color=blue];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_14  [key=2, style=dotted];
m0_340 -> m0_341  [key=0, style=solid];
m0_342 -> m0_340  [key=0, style=bold, color=blue];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_14  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_349 -> m0_347  [key=0, style=bold, color=blue];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_27  [key=2, style=dotted];
m0_363 -> m0_364  [key=0, style=solid];
m0_365 -> m0_363  [key=0, style=bold, color=blue];
m0_380 -> m0_381  [key=0, style=solid];
m0_380 -> m0_27  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_27  [key=2, style=dotted];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_27  [key=2, style=dotted];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_27  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_382 -> m0_383  [key=0, style=solid];
m0_385 -> m0_386  [key=0, style=solid];
m0_388 -> m0_389  [key=0, style=solid];
m0_381 -> m0_379  [key=0, style=bold, color=blue];
m0_384 -> m0_382  [key=0, style=bold, color=blue];
m0_387 -> m0_385  [key=0, style=bold, color=blue];
m0_390 -> m0_388  [key=0, style=bold, color=blue];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_10  [key=2, style=dotted];
m0_417 -> m0_11  [key=2, style=dotted];
m0_417 -> m0_415  [key=2, style=dotted];
m0_416 -> m0_417  [key=0, style=solid];
m0_418 -> m0_419  [key=0, style=solid];
m0_418 -> m0_27  [key=2, style=dotted];
m0_419 -> m0_416  [key=0, style=bold, color=blue];
m0_433 -> m0_434  [key=0, style=solid];
m0_433 -> m0_10  [key=2, style=dotted];
m0_433 -> m0_11  [key=2, style=dotted];
m0_433 -> m0_415  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_434 -> m0_435  [key=0, style=solid];
m0_434 -> m0_27  [key=2, style=dotted];
m0_435 -> m0_432  [key=0, style=bold, color=blue];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_74  [key=2, style=dotted];
m0_470 -> m0_471  [key=0, style=solid];
m0_472 -> m0_470  [key=0, style=bold, color=blue];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_39  [key=2, style=dotted];
m0_478 -> m0_479  [key=0, style=solid];
m0_480 -> m0_478  [key=0, style=bold, color=blue];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_74  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_488 -> m0_486  [key=0, style=bold, color=blue];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_39  [key=2, style=dotted];
m0_494 -> m0_495  [key=0, style=solid];
m0_496 -> m0_494  [key=0, style=bold, color=blue];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_39  [key=2, style=dotted];
m0_502 -> m0_503  [key=0, style=solid];
m0_504 -> m0_502  [key=0, style=bold, color=blue];
m0_511 -> m0_512  [key=0, style=solid];
m0_511 -> m0_74  [key=2, style=dotted];
m0_510 -> m0_511  [key=0, style=solid];
m0_512 -> m0_510  [key=0, style=bold, color=blue];
m0_519 -> m0_520  [key=0, style=solid];
m0_519 -> m0_521  [key=2, style=dotted];
m0_518 -> m0_519  [key=0, style=solid];
m0_520 -> m0_518  [key=0, style=bold, color=blue];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_521  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_529 -> m0_527  [key=0, style=bold, color=blue];
m0_536 -> m0_537  [key=0, style=solid];
m0_536 -> m0_14  [key=2, style=dotted];
m0_535 -> m0_536  [key=0, style=solid];
m0_537 -> m0_535  [key=0, style=bold, color=blue];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_14  [key=2, style=dotted];
m0_542 -> m0_543  [key=0, style=solid];
m0_544 -> m0_542  [key=0, style=bold, color=blue];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_14  [key=2, style=dotted];
m0_549 -> m0_550  [key=0, style=solid];
m0_551 -> m0_549  [key=0, style=bold, color=blue];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_14  [key=2, style=dotted];
m0_556 -> m0_557  [key=0, style=solid];
m0_558 -> m0_556  [key=0, style=bold, color=blue];
m0_567 -> m0_568  [key=0, style=solid];
m0_567 -> m0_14  [key=2, style=dotted];
m0_566 -> m0_567  [key=0, style=solid];
m0_568 -> m0_566  [key=0, style=bold, color=blue];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_14  [key=2, style=dotted];
m0_573 -> m0_574  [key=0, style=solid];
m0_575 -> m0_573  [key=0, style=bold, color=blue];
m0_585 -> m0_586  [key=0, style=solid];
m0_585 -> m0_14  [key=2, style=dotted];
m0_584 -> m0_585  [key=0, style=solid];
m0_586 -> m0_584  [key=0, style=bold, color=blue];
m0_592 -> m0_593  [key=0, style=solid];
m0_592 -> m0_14  [key=2, style=dotted];
m0_591 -> m0_592  [key=0, style=solid];
m0_593 -> m0_591  [key=0, style=bold, color=blue];
m0_601 -> m0_602  [key=0, style=solid];
m0_601 -> m0_14  [key=2, style=dotted];
m0_600 -> m0_601  [key=0, style=solid];
m0_602 -> m0_600  [key=0, style=bold, color=blue];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_51  [key=2, style=dotted];
m0_608 -> m0_609  [key=0, style=solid];
m0_610 -> m0_608  [key=0, style=bold, color=blue];
m0_617 -> m0_618  [key=0, style=solid];
m0_617 -> m0_51  [key=2, style=dotted];
m0_616 -> m0_617  [key=0, style=solid];
m0_618 -> m0_616  [key=0, style=bold, color=blue];
m0_624 -> m0_625  [key=0, style=solid];
m0_624 -> m0_63  [key=2, style=dotted];
m0_623 -> m0_624  [key=0, style=solid];
m0_625 -> m0_623  [key=0, style=bold, color=blue];
m0_631 -> m0_632  [key=0, style=solid];
m0_631 -> m0_138  [key=2, style=dotted];
m0_630 -> m0_631  [key=0, style=solid];
m0_632 -> m0_630  [key=0, style=bold, color=blue];
m0_638 -> m0_639  [key=0, style=solid];
m0_638 -> m0_138  [key=2, style=dotted];
m0_637 -> m0_638  [key=0, style=solid];
m0_639 -> m0_637  [key=0, style=bold, color=blue];
m0_645 -> m0_646  [key=0, style=solid];
m0_645 -> m0_27  [key=2, style=dotted];
m0_644 -> m0_645  [key=0, style=solid];
m0_646 -> m0_644  [key=0, style=bold, color=blue];
m0_655 -> m0_656  [key=0, style=solid];
m0_655 -> m0_27  [key=2, style=dotted];
m0_654 -> m0_655  [key=0, style=solid];
m0_656 -> m0_654  [key=0, style=bold, color=blue];
m0_662 -> m0_663  [key=0, style=solid];
m0_662 -> m0_27  [key=2, style=dotted];
m0_661 -> m0_662  [key=0, style=solid];
m0_663 -> m0_661  [key=0, style=bold, color=blue];
m0_673 -> m0_674  [key=0, style=solid];
m0_673 -> m0_27  [key=2, style=dotted];
m0_672 -> m0_673  [key=0, style=solid];
m0_674 -> m0_672  [key=0, style=bold, color=blue];
m0_681 -> m0_682  [key=0, style=solid];
m0_681 -> m0_74  [key=2, style=dotted];
m0_680 -> m0_681  [key=0, style=solid];
m0_682 -> m0_680  [key=0, style=bold, color=blue];
m0_689 -> m0_690  [key=0, style=solid];
m0_689 -> m0_74  [key=2, style=dotted];
m0_688 -> m0_689  [key=0, style=solid];
m0_690 -> m0_688  [key=0, style=bold, color=blue];
m0_696 -> m0_697  [key=0, style=solid];
m0_696 -> m0_51  [key=2, style=dotted];
m0_695 -> m0_696  [key=0, style=solid];
m0_697 -> m0_695  [key=0, style=bold, color=blue];
m0_706 -> m0_707  [key=0, style=solid];
m0_706 -> m0_74  [key=2, style=dotted];
m0_705 -> m0_706  [key=0, style=solid];
m0_707 -> m0_705  [key=0, style=bold, color=blue];
m0_717 -> m0_718  [key=0, style=solid];
m0_717 -> m0_74  [key=2, style=dotted];
m0_716 -> m0_717  [key=0, style=solid];
m0_718 -> m0_716  [key=0, style=bold, color=blue];
m0_729 -> m0_730  [key=0, style=solid];
m0_729 -> m0_51  [key=2, style=dotted];
m0_732 -> m0_733  [key=0, style=solid];
m0_732 -> m0_51  [key=2, style=dotted];
m0_735 -> m0_736  [key=0, style=solid];
m0_735 -> m0_51  [key=2, style=dotted];
m0_728 -> m0_729  [key=0, style=solid];
m0_731 -> m0_732  [key=0, style=solid];
m0_734 -> m0_735  [key=0, style=solid];
m0_730 -> m0_728  [key=0, style=bold, color=blue];
m0_733 -> m0_731  [key=0, style=bold, color=blue];
m0_736 -> m0_734  [key=0, style=bold, color=blue];
m0_746 -> m0_747  [key=0, style=solid];
m0_746 -> m0_12  [key=2, style=dotted];
m0_745 -> m0_746  [key=0, style=solid];
m0_747 -> m0_745  [key=0, style=bold, color=blue];
m0_753 -> m0_754  [key=0, style=solid];
m0_753 -> m0_10  [key=2, style=dotted];
m0_753 -> m0_11  [key=2, style=dotted];
m0_752 -> m0_753  [key=0, style=solid];
m0_754 -> m0_754  [key=0, style=solid];
m0_754 -> m0_755  [key=0, style=solid];
m0_754 -> m0_12  [key=2, style=dotted];
m0_755 -> m0_752  [key=0, style=bold, color=blue];
m0_763 -> m0_764  [key=0, style=solid];
m0_763 -> m0_12  [key=2, style=dotted];
m0_763 -> m0_13  [key=2, style=dotted];
m0_762 -> m0_763  [key=0, style=solid];
m0_764 -> m0_762  [key=0, style=bold, color=blue];
m0_795 -> m0_796  [key=0, style=solid];
m0_795 -> m0_12  [key=2, style=dotted];
m0_795 -> m0_13  [key=2, style=dotted];
m0_798 -> m0_799  [key=0, style=solid];
m0_798 -> m0_12  [key=2, style=dotted];
m0_798 -> m0_13  [key=2, style=dotted];
m0_794 -> m0_795  [key=0, style=solid];
m0_797 -> m0_798  [key=0, style=solid];
m0_796 -> m0_794  [key=0, style=bold, color=blue];
m0_799 -> m0_797  [key=0, style=bold, color=blue];
m0_806 -> m0_807  [key=0, style=solid];
m0_806 -> m0_12  [key=2, style=dotted];
m0_807 -> m0_805  [key=0, style=bold, color=blue];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_10  [key=2, style=dotted];
m0_215 -> m0_11  [key=2, style=dotted];
m0_215 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_16  [key=2, style=dotted];
m0_216 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_217 -> m0_214  [key=0, style=bold, color=blue];
m0_587 -> m0_588  [key=0, style=solid];
m0_588 -> m0_589  [key=0, style=solid];
m0_588 -> m0_10  [key=2, style=dotted];
m0_588 -> m0_11  [key=2, style=dotted];
m0_588 -> m0_592  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_16  [key=2, style=dotted];
m0_589 -> m0_591  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_590 -> m0_587  [key=0, style=bold, color=blue];
m0_343 -> m0_344  [key=0, style=solid];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_10  [key=2, style=dotted];
m0_344 -> m0_11  [key=2, style=dotted];
m0_344 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_16  [key=2, style=dotted];
m0_345 -> m0_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_346 -> m0_343  [key=0, style=bold, color=blue];
m0_452 -> m0_453  [key=0, style=solid];
m0_453 -> m0_454  [key=0, style=solid];
m0_453 -> m0_449  [key=2, style=dotted];
m0_453 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_454 -> m0_455  [key=0, style=solid];
m0_454 -> m0_10  [key=2, style=dotted];
m0_454 -> m0_450  [key=2, style=dotted];
m0_454 -> m0_451  [key=2, style=dotted];
m0_454 -> m0_456  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_459 -> m0_460  [key=0, style=solid];
m0_455 -> m0_456  [key=0, style=solid];
m0_455 -> m0_12  [key=2, style=dotted];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_28  [key=2, style=dotted];
m0_457 -> m0_458  [key=0, style=solid];
m0_457 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_457 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_457 -> m0_409  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_464  [key=0, style=solid];
m0_463 -> m0_458  [key=0, style=solid];
m0_463 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_10  [key=2, style=dotted];
m0_460 -> m0_450  [key=2, style=dotted];
m0_460 -> m0_451  [key=2, style=dotted];
m0_460 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_12  [key=2, style=dotted];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_28  [key=2, style=dotted];
m0_464 -> m0_452  [key=0, style=bold, color=blue];
m0_465 -> m0_466  [key=0, style=solid];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_466  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_10  [key=2, style=dotted];
m0_467 -> m0_11  [key=2, style=dotted];
m0_467 -> m0_471  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_16  [key=2, style=dotted];
m0_468 -> m0_470  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_469 -> m0_465  [key=0, style=bold, color=blue];
m0_765 -> m0_766  [key=0, style=solid];
m0_766 -> m0_767  [key=0, style=solid];
m0_766 -> m0_766  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_767 -> m0_768  [key=0, style=solid];
m0_767 -> m0_10  [key=2, style=dotted];
m0_767 -> m0_11  [key=2, style=dotted];
m0_767 -> m0_769  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_770  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_795  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_771  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_772  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_773  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_774  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_776  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_777  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_778  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_779  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_780  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_781  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_782  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_798  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_783  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_785  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_786  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_787  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_788  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_789  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_790  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_767 -> m0_792  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_768 -> m0_769  [key=0, style=solid];
m0_768 -> m0_12  [key=2, style=dotted];
m0_768 -> m0_13  [key=2, style=dotted];
m0_769 -> m0_770  [key=0, style=solid];
m0_769 -> m0_28  [key=2, style=dotted];
m0_770 -> m0_771  [key=0, style=solid];
m0_770 -> m0_16  [key=2, style=dotted];
m0_770 -> m0_794  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_771 -> m0_772  [key=0, style=solid];
m0_771 -> m0_28  [key=2, style=dotted];
m0_772 -> m0_773  [key=0, style=solid];
m0_772 -> m0_12  [key=2, style=dotted];
m0_772 -> m0_13  [key=2, style=dotted];
m0_773 -> m0_774  [key=0, style=solid];
m0_773 -> m0_28  [key=2, style=dotted];
m0_774 -> m0_775  [key=0, style=solid];
m0_774 -> m0_12  [key=2, style=dotted];
m0_774 -> m0_13  [key=2, style=dotted];
m0_775 -> m0_776  [key=0, style=solid];
m0_775 -> m0_28  [key=2, style=dotted];
m0_776 -> m0_777  [key=0, style=solid];
m0_776 -> m0_12  [key=2, style=dotted];
m0_776 -> m0_13  [key=2, style=dotted];
m0_777 -> m0_778  [key=0, style=solid];
m0_777 -> m0_28  [key=2, style=dotted];
m0_778 -> m0_779  [key=0, style=solid];
m0_778 -> m0_12  [key=2, style=dotted];
m0_778 -> m0_13  [key=2, style=dotted];
m0_779 -> m0_780  [key=0, style=solid];
m0_779 -> m0_28  [key=2, style=dotted];
m0_780 -> m0_781  [key=0, style=solid];
m0_780 -> m0_12  [key=2, style=dotted];
m0_780 -> m0_13  [key=2, style=dotted];
m0_781 -> m0_782  [key=0, style=solid];
m0_781 -> m0_28  [key=2, style=dotted];
m0_782 -> m0_783  [key=0, style=solid];
m0_782 -> m0_16  [key=2, style=dotted];
m0_782 -> m0_797  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_783 -> m0_784  [key=0, style=solid];
m0_783 -> m0_28  [key=2, style=dotted];
m0_784 -> m0_785  [key=0, style=solid];
m0_784 -> m0_12  [key=2, style=dotted];
m0_784 -> m0_13  [key=2, style=dotted];
m0_785 -> m0_786  [key=0, style=solid];
m0_785 -> m0_28  [key=2, style=dotted];
m0_786 -> m0_787  [key=0, style=solid];
m0_786 -> m0_12  [key=2, style=dotted];
m0_786 -> m0_13  [key=2, style=dotted];
m0_787 -> m0_788  [key=0, style=solid];
m0_787 -> m0_28  [key=2, style=dotted];
m0_788 -> m0_789  [key=0, style=solid];
m0_788 -> m0_12  [key=2, style=dotted];
m0_788 -> m0_13  [key=2, style=dotted];
m0_789 -> m0_790  [key=0, style=solid];
m0_789 -> m0_28  [key=2, style=dotted];
m0_790 -> m0_791  [key=0, style=solid];
m0_790 -> m0_12  [key=2, style=dotted];
m0_790 -> m0_13  [key=2, style=dotted];
m0_791 -> m0_792  [key=0, style=solid];
m0_791 -> m0_28  [key=2, style=dotted];
m0_792 -> m0_793  [key=0, style=solid];
m0_792 -> m0_12  [key=2, style=dotted];
m0_792 -> m0_362  [key=2, style=dotted];
m0_793 -> m0_765  [key=0, style=bold, color=blue];
m0_287 -> m0_288  [key=0, style=solid];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_288  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_10  [key=2, style=dotted];
m0_289 -> m0_11  [key=2, style=dotted];
m0_289 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_16  [key=2, style=dotted];
m0_290 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_291 -> m0_287  [key=0, style=bold, color=blue];
m0_350 -> m0_351  [key=0, style=solid];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_351  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_10  [key=2, style=dotted];
m0_352 -> m0_11  [key=2, style=dotted];
m0_352 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_352 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_352 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_352 -> m0_357  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_352 -> m0_364  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_352 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_352 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_352 -> m0_360  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_12  [key=2, style=dotted];
m0_353 -> m0_13  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_28  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_12  [key=2, style=dotted];
m0_355 -> m0_13  [key=2, style=dotted];
m0_356 -> m0_357  [key=0, style=solid];
m0_356 -> m0_28  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_16  [key=2, style=dotted];
m0_357 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_12  [key=2, style=dotted];
m0_358 -> m0_13  [key=2, style=dotted];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_28  [key=2, style=dotted];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_12  [key=2, style=dotted];
m0_360 -> m0_362  [key=2, style=dotted];
m0_361 -> m0_350  [key=0, style=bold, color=blue];
m0_647 -> m0_648  [key=0, style=solid];
m0_648 -> m0_649  [key=0, style=solid];
m0_648 -> m0_10  [key=2, style=dotted];
m0_648 -> m0_11  [key=2, style=dotted];
m0_648 -> m0_650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_648 -> m0_655  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_648 -> m0_651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_648 -> m0_652  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_649 -> m0_650  [key=0, style=solid];
m0_649 -> m0_12  [key=2, style=dotted];
m0_650 -> m0_651  [key=0, style=solid];
m0_650 -> m0_16  [key=2, style=dotted];
m0_650 -> m0_654  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_651 -> m0_652  [key=0, style=solid];
m0_651 -> m0_27  [key=2, style=dotted];
m0_651 -> m0_28  [key=2, style=dotted];
m0_652 -> m0_653  [key=0, style=solid];
m0_652 -> m0_12  [key=2, style=dotted];
m0_652 -> m0_13  [key=2, style=dotted];
m0_653 -> m0_647  [key=0, style=bold, color=blue];
m0_603 -> m0_604  [key=0, style=solid];
m0_604 -> m0_605  [key=0, style=solid];
m0_604 -> m0_498  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_605 -> m0_606  [key=0, style=solid];
m0_605 -> m0_10  [key=2, style=dotted];
m0_605 -> m0_11  [key=2, style=dotted];
m0_605 -> m0_609  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_606 -> m0_607  [key=0, style=solid];
m0_606 -> m0_16  [key=2, style=dotted];
m0_606 -> m0_608  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_607 -> m0_603  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_44  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_10  [key=2, style=dotted];
m0_69 -> m0_11  [key=2, style=dotted];
m0_69 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_69 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_69 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_12  [key=2, style=dotted];
m0_70 -> m0_13  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_74  [key=2, style=dotted];
m0_71 -> m0_28  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_16  [key=2, style=dotted];
m0_72 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_73 -> m0_67  [key=0, style=bold, color=blue];
m0_675 -> m0_676  [key=0, style=solid];
m0_676 -> m0_677  [key=0, style=solid];
m0_676 -> m0_490  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_677 -> m0_678  [key=0, style=solid];
m0_677 -> m0_10  [key=2, style=dotted];
m0_677 -> m0_11  [key=2, style=dotted];
m0_677 -> m0_681  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_678 -> m0_679  [key=0, style=solid];
m0_678 -> m0_16  [key=2, style=dotted];
m0_678 -> m0_680  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_679 -> m0_675  [key=0, style=bold, color=blue];
m0_683 -> m0_684  [key=0, style=solid];
m0_684 -> m0_685  [key=0, style=solid];
m0_684 -> m0_684  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_685 -> m0_686  [key=0, style=solid];
m0_685 -> m0_10  [key=2, style=dotted];
m0_685 -> m0_11  [key=2, style=dotted];
m0_685 -> m0_689  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_686 -> m0_687  [key=0, style=solid];
m0_686 -> m0_16  [key=2, style=dotted];
m0_686 -> m0_688  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_687 -> m0_683  [key=0, style=bold, color=blue];
m0_619 -> m0_620  [key=0, style=solid];
m0_620 -> m0_621  [key=0, style=solid];
m0_620 -> m0_10  [key=2, style=dotted];
m0_620 -> m0_11  [key=2, style=dotted];
m0_620 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_621 -> m0_622  [key=0, style=solid];
m0_621 -> m0_16  [key=2, style=dotted];
m0_621 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_622 -> m0_619  [key=0, style=bold, color=blue];
m0_249 -> m0_250  [key=0, style=solid];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_250  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_10  [key=2, style=dotted];
m0_251 -> m0_11  [key=2, style=dotted];
m0_251 -> m0_253  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_251 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_251 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_251 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_251 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_251 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_251 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_12  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_28  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_12  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_28  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_12  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_28  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_16  [key=2, style=dotted];
m0_258 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_259 -> m0_249  [key=0, style=bold, color=blue];
m0_530 -> m0_531  [key=0, style=solid];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_498  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_10  [key=2, style=dotted];
m0_532 -> m0_11  [key=2, style=dotted];
m0_532 -> m0_536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_16  [key=2, style=dotted];
m0_533 -> m0_535  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_534 -> m0_530  [key=0, style=bold, color=blue];
m0_473 -> m0_474  [key=0, style=solid];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_474  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_10  [key=2, style=dotted];
m0_475 -> m0_11  [key=2, style=dotted];
m0_475 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_16  [key=2, style=dotted];
m0_476 -> m0_478  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_477 -> m0_473  [key=0, style=bold, color=blue];
m0_336 -> m0_337  [key=0, style=solid];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_10  [key=2, style=dotted];
m0_337 -> m0_11  [key=2, style=dotted];
m0_337 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_16  [key=2, style=dotted];
m0_338 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_339 -> m0_336  [key=0, style=bold, color=blue];
m0_664 -> m0_665  [key=0, style=solid];
m0_665 -> m0_666  [key=0, style=solid];
m0_665 -> m0_10  [key=2, style=dotted];
m0_665 -> m0_11  [key=2, style=dotted];
m0_665 -> m0_667  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_665 -> m0_668  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_665 -> m0_673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_665 -> m0_669  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_665 -> m0_670  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_666 -> m0_667  [key=0, style=solid];
m0_666 -> m0_12  [key=2, style=dotted];
m0_667 -> m0_668  [key=0, style=solid];
m0_667 -> m0_27  [key=2, style=dotted];
m0_668 -> m0_669  [key=0, style=solid];
m0_668 -> m0_16  [key=2, style=dotted];
m0_668 -> m0_672  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_669 -> m0_670  [key=0, style=solid];
m0_669 -> m0_27  [key=2, style=dotted];
m0_669 -> m0_28  [key=2, style=dotted];
m0_670 -> m0_671  [key=0, style=solid];
m0_670 -> m0_12  [key=2, style=dotted];
m0_670 -> m0_13  [key=2, style=dotted];
m0_671 -> m0_664  [key=0, style=bold, color=blue];
m0_552 -> m0_553  [key=0, style=solid];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_10  [key=2, style=dotted];
m0_553 -> m0_11  [key=2, style=dotted];
m0_553 -> m0_557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_554 -> m0_555  [key=0, style=solid];
m0_554 -> m0_16  [key=2, style=dotted];
m0_554 -> m0_556  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_555 -> m0_552  [key=0, style=bold, color=blue];
m0_808 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_809 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_810 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_811 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_812 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_813 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_814 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_815 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_816 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_817 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_818 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_819 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_820 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_820 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_820 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_821 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_822 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_823 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_824 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_824 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_824 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_824 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_824 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_824 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_825 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_826 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_827 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_828 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_829 -> m0_247  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_830 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_831 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_832 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_833 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_834 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_835 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_836 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_837 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_838 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_839 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_840 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_841 -> m0_364  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_842 -> m0_380  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_842 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_842 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_842 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m0_843 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label=total];
m0_844 -> m0_433  [key=1, style=dashed, color=darkseagreen4, label=total];
m0_845 -> m0_471  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_846 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_847 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_848 -> m0_495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_849 -> m0_503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_850 -> m0_511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_851 -> m0_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_852 -> m0_528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_853 -> m0_536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_854 -> m0_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_855 -> m0_550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_856 -> m0_557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_857 -> m0_567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_858 -> m0_574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_859 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_860 -> m0_592  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_861 -> m0_601  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_862 -> m0_609  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_863 -> m0_617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_864 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_865 -> m0_631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_866 -> m0_638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_867 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_868 -> m0_655  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_869 -> m0_662  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_870 -> m0_673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_871 -> m0_681  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_872 -> m0_689  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_873 -> m0_696  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_874 -> m0_706  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_875 -> m0_717  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_876 -> m0_729  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_876 -> m0_732  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_876 -> m0_735  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_877 -> m0_746  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_878 -> m0_753  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_879 -> m0_763  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_880 -> m0_795  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_880 -> m0_798  [key=1, style=dashed, color=darkseagreen4, label=reader];
m0_881 -> m0_806  [key=1, style=dashed, color=darkseagreen4, label=reader];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_37  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_53  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> n93  [key=2, style=dotted];
m1_52 -> m1_46  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_1 -> m1_2  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=0, style=solid];
m1_4 -> m1_34  [key=2, style=dotted];
m1_9 -> m1_19  [key=0, style=solid];
m1_9 -> m1_38  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_16  [key=0, style=solid];
m1_10 -> m1_34  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_41  [key=2, style=dotted];
m1_22 -> m1_42  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_33  [key=0, style=solid];
m1_29 -> m1_45  [key=2, style=dotted];
m1_29 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=immutableParameterizedCreator];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_35  [key=2, style=dotted];
m1_5 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_5 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_5 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_5 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_5 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_35  [key=2, style=dotted];
m1_6 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_6 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_6 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_6 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_6 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_37  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_24  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_37  [key=2, style=dotted];
m1_20 -> m1_40  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_43  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_7 -> m1_36  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_35  [key=2, style=dotted];
m1_11 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_11 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_11 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_11 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_11 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_39  [key=2, style=dotted];
m1_16 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_16 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_16 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_16 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m1_16 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_35  [key=2, style=dotted];
m1_12 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_12 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_12 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_12 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_12 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_37  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_13 -> m1_36  [key=2, style=dotted];
m1_15 -> m1_19  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_44  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_0  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_60  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_37  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_63  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_62  [key=2, style=dotted];
m1_61 -> m1_56  [key=0, style=bold, color=blue];
m1_64 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m1_64 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_1228 -> m2_1229  [key=0, style=solid];
m2_1228 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasLineInfo"];
m2_1229 -> m2_1230  [key=0, style=solid];
m2_1230 -> m2_1228  [key=0, style=bold, color=blue];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_170  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_138 -> m2_171  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_138 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_138 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_169  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_168  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_149  [key=0, style=solid];
m2_141 -> m2_152  [key=0, style=solid];
m2_141 -> m2_155  [key=0, style=solid];
m2_141 -> m2_167  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_152 -> m2_153  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_176  [key=2, style=dotted];
m2_167 -> m2_177  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_148 -> m2_168  [key=0, style=solid];
m2_148 -> m2_170  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_151 -> m2_168  [key=0, style=solid];
m2_151 -> m2_171  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_140  [key=0, style=solid];
m2_153 -> m2_172  [key=2, style=dotted];
m2_154 -> m2_168  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_165  [key=0, style=solid];
m2_156 -> m2_120  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_173  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_174  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_161  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_174  [key=2, style=dotted];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_164  [key=0, style=solid];
m2_160 -> m2_168  [key=0, style=solid];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_175  [key=2, style=dotted];
m2_164 -> m2_168  [key=0, style=solid];
m2_164 -> m2_176  [key=2, style=dotted];
m2_164 -> m2_177  [key=2, style=dotted];
m2_163 -> m2_168  [key=0, style=solid];
m2_166 -> m2_168  [key=0, style=solid];
m2_168 -> m2_138  [key=0, style=bold, color=blue];
m2_916 -> m2_950  [key=0, style=solid];
m2_950 -> m2_951  [key=0, style=solid];
m2_950 -> m2_984  [key=0, style=solid];
m2_950 -> m2_361  [key=2, style=dotted];
m2_951 -> m2_952  [key=0, style=solid];
m2_951 -> m2_173  [key=2, style=dotted];
m2_984 -> m2_985  [key=0, style=solid];
m2_984 -> m2_177  [key=2, style=dotted];
m2_952 -> m2_953  [key=0, style=solid];
m2_952 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_953 -> m2_954  [key=0, style=solid];
m2_953 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m2_976 -> m2_977  [key=0, style=solid];
m2_976 -> m2_653  [key=2, style=dotted];
m2_954 -> m2_955  [key=0, style=solid];
m2_954 -> m2_976  [key=0, style=solid];
m2_955 -> m2_956  [key=0, style=solid];
m2_955 -> m2_962  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_955 -> m2_964  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_955 -> m2_967  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_955 -> m2_970  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_955 -> m2_973  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_955 -> m2_975  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_956 -> m2_957  [key=0, style=solid];
m2_956 -> m2_962  [key=0, style=solid];
m2_962 -> m2_963  [key=0, style=solid];
m2_962 -> m2_964  [key=0, style=solid];
m2_962 -> m2_817  [key=2, style=dotted];
m2_964 -> m2_965  [key=0, style=solid];
m2_964 -> m2_967  [key=0, style=solid];
m2_967 -> m2_968  [key=0, style=solid];
m2_967 -> m2_970  [key=0, style=solid];
m2_970 -> m2_971  [key=0, style=solid];
m2_970 -> m2_973  [key=0, style=solid];
m2_970 -> m2_263  [key=2, style=dotted];
m2_973 -> m2_974  [key=0, style=solid];
m2_973 -> m2_975  [key=0, style=solid];
m2_975 -> m2_985  [key=0, style=solid];
m2_975 -> m2_176  [key=2, style=dotted];
m2_975 -> m2_177  [key=2, style=dotted];
m2_957 -> m2_958  [key=0, style=solid];
m2_957 -> m2_960  [key=0, style=solid];
m2_958 -> m2_959  [key=0, style=solid];
m2_958 -> m2_954  [key=0, style=solid];
m2_958 -> m2_83  [key=2, style=dotted];
m2_960 -> m2_961  [key=0, style=solid];
m2_960 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m2_959 -> m2_985  [key=0, style=solid];
m2_959 -> m2_177  [key=2, style=dotted];
m2_961 -> m2_976  [key=0, style=solid];
m2_963 -> m2_954  [key=0, style=solid];
m2_965 -> m2_966  [key=0, style=solid];
m2_965 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m2_966 -> m2_976  [key=0, style=solid];
m2_966 -> m2_261  [key=2, style=dotted];
m2_968 -> m2_969  [key=0, style=solid];
m2_968 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m2_969 -> m2_976  [key=0, style=solid];
m2_969 -> m2_262  [key=2, style=dotted];
m2_971 -> m2_972  [key=0, style=solid];
m2_971 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m2_972 -> m2_976  [key=0, style=solid];
m2_974 -> m2_976  [key=0, style=solid];
m2_977 -> m2_978  [key=0, style=solid];
m2_977 -> m2_61  [key=2, style=dotted];
m2_977 -> m2_983  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m2_978 -> m2_979  [key=0, style=solid];
m2_978 -> m2_173  [key=2, style=dotted];
m2_983 -> m2_985  [key=0, style=solid];
m2_983 -> m2_360  [key=2, style=dotted];
m2_979 -> m2_980  [key=0, style=solid];
m2_979 -> m2_981  [key=0, style=solid];
m2_980 -> m2_985  [key=0, style=solid];
m2_980 -> m2_176  [key=2, style=dotted];
m2_980 -> m2_177  [key=2, style=dotted];
m2_981 -> m2_982  [key=0, style=solid];
m2_982 -> m2_983  [key=0, style=solid];
m2_982 -> m2_714  [key=2, style=dotted];
m2_985 -> m2_916  [key=0, style=bold, color=blue];
m2_540 -> m2_1185  [key=0, style=solid];
m2_1185 -> m2_1186  [key=0, style=solid];
m2_1185 -> m2_1187  [key=0, style=solid];
m2_1185 -> m2_361  [key=2, style=dotted];
m2_1186 -> m2_1188  [key=0, style=solid];
m2_1186 -> m2_174  [key=2, style=dotted];
m2_1187 -> m2_1188  [key=0, style=solid];
m2_1187 -> m2_177  [key=2, style=dotted];
m2_1188 -> m2_540  [key=0, style=bold, color=blue];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_86  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m2_83 -> m2_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_83 -> m2_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_85 -> m2_83  [key=0, style=bold, color=blue];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_185  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadAsString"];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_185  [key=2, style=dotted];
m2_188 -> m2_186  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_17 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_17 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_17 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_17 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_17 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_17 -> m2_201  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m2_17 -> m2_275  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m2_17 -> m2_375  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m2_17 -> m2_459  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m2_17 -> m2_836  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m2_17 -> m2_69  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_17 -> m2_185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_17 -> m2_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_17 -> m2_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_18 -> m2_19  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_59  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_32  [key=0, style=solid];
m2_22 -> m2_36  [key=0, style=solid];
m2_22 -> m2_39  [key=0, style=solid];
m2_35 -> m2_57  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_58  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_60  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_55  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=0, style=solid];
m2_27 -> m2_31  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_28 -> m2_61  [key=2, style=dotted];
m2_28 -> m2_62  [key=2, style=dotted];
m2_29 -> m2_31  [key=0, style=solid];
m2_29 -> m2_63  [key=2, style=dotted];
m2_29 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=g];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_64  [key=2, style=dotted];
m2_31 -> m2_57  [key=0, style=solid];
m2_31 -> m2_65  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_61  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_65  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_57  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_61  [key=2, style=dotted];
m2_55 -> m2_65  [key=2, style=dotted];
m2_42 -> m2_46  [key=0, style=solid];
m2_44 -> m2_46  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_51  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_55  [key=0, style=solid];
m2_48 -> m2_66  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_65  [key=2, style=dotted];
m2_50 -> m2_57  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_55  [key=0, style=solid];
m2_52 -> m2_67  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_65  [key=2, style=dotted];
m2_54 -> m2_57  [key=0, style=solid];
m2_57 -> m2_17  [key=0, style=bold, color=blue];
m2_181 -> m2_449  [key=0, style=solid];
m2_181 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_181 -> m2_468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_181 -> m2_475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_181 -> m2_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_181 -> m2_530  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_181 -> m2_661  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_181 -> m2_528  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_181 -> m2_205  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadNumberValue"];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_169  [key=2, style=dotted];
m2_467 -> m2_468  [key=0, style=solid];
m2_467 -> m2_17  [key=2, style=dotted];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_471  [key=0, style=solid];
m2_468 -> m2_473  [key=0, style=solid];
m2_468 -> m2_475  [key=0, style=solid];
m2_475 -> m2_517  [key=0, style=solid];
m2_475 -> m2_357  [key=2, style=dotted];
m2_475 -> m2_7  [key=2, style=dotted];
m2_491 -> m2_492  [key=0, style=solid];
m2_491 -> m2_358  [key=2, style=dotted];
m2_450 -> m2_451  [key=0, style=solid];
m2_450 -> m2_513  [key=0, style=solid];
m2_450 -> m2_516  [key=0, style=solid];
m2_451 -> m2_452  [key=0, style=solid];
m2_513 -> m2_514  [key=0, style=solid];
m2_516 -> m2_517  [key=0, style=solid];
m2_516 -> m2_176  [key=2, style=dotted];
m2_516 -> m2_177  [key=2, style=dotted];
m2_452 -> m2_453  [key=0, style=solid];
m2_453 -> m2_454  [key=0, style=solid];
m2_454 -> m2_455  [key=0, style=solid];
m2_455 -> m2_456  [key=0, style=solid];
m2_456 -> m2_457  [key=0, style=solid];
m2_457 -> m2_458  [key=0, style=solid];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_513  [key=0, style=solid];
m2_459 -> m2_460  [key=0, style=solid];
m2_459 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_459 -> m2_502  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_459 -> m2_511  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_459 -> m2_512  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_465  [key=0, style=solid];
m2_460 -> m2_476  [key=0, style=solid];
m2_460 -> m2_479  [key=0, style=solid];
m2_460 -> m2_493  [key=0, style=solid];
m2_460 -> m2_495  [key=0, style=solid];
m2_460 -> m2_497  [key=0, style=solid];
m2_460 -> m2_503  [key=0, style=solid];
m2_460 -> m2_505  [key=0, style=solid];
m2_460 -> m2_507  [key=0, style=solid];
m2_460 -> m2_510  [key=0, style=solid];
m2_502 -> m2_517  [key=0, style=solid];
m2_502 -> m2_260  [key=2, style=dotted];
m2_511 -> m2_512  [key=0, style=solid];
m2_511 -> m2_458  [key=0, style=solid];
m2_511 -> m2_263  [key=2, style=dotted];
m2_512 -> m2_517  [key=0, style=solid];
m2_512 -> m2_260  [key=2, style=dotted];
m2_461 -> m2_462  [key=0, style=solid];
m2_465 -> m2_466  [key=0, style=solid];
m2_476 -> m2_477  [key=0, style=solid];
m2_479 -> m2_480  [key=0, style=solid];
m2_493 -> m2_494  [key=0, style=solid];
m2_495 -> m2_496  [key=0, style=solid];
m2_497 -> m2_498  [key=0, style=solid];
m2_503 -> m2_504  [key=0, style=solid];
m2_505 -> m2_506  [key=0, style=solid];
m2_507 -> m2_508  [key=0, style=solid];
m2_510 -> m2_511  [key=0, style=solid];
m2_462 -> m2_463  [key=0, style=solid];
m2_462 -> m2_458  [key=0, style=solid];
m2_462 -> m2_254  [key=2, style=dotted];
m2_463 -> m2_464  [key=0, style=solid];
m2_463 -> m2_65  [key=2, style=dotted];
m2_464 -> m2_517  [key=0, style=solid];
m2_466 -> m2_467  [key=0, style=solid];
m2_469 -> m2_470  [key=0, style=solid];
m2_471 -> m2_472  [key=0, style=solid];
m2_473 -> m2_474  [key=0, style=solid];
m2_470 -> m2_517  [key=0, style=solid];
m2_470 -> m2_61  [key=2, style=dotted];
m2_470 -> m2_518  [key=2, style=dotted];
m2_472 -> m2_517  [key=0, style=solid];
m2_472 -> m2_61  [key=2, style=dotted];
m2_472 -> m2_519  [key=2, style=dotted];
m2_474 -> m2_517  [key=0, style=solid];
m2_474 -> m2_61  [key=2, style=dotted];
m2_474 -> m2_520  [key=2, style=dotted];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_258  [key=2, style=dotted];
m2_478 -> m2_517  [key=0, style=solid];
m2_480 -> m2_481  [key=0, style=solid];
m2_481 -> m2_482  [key=0, style=solid];
m2_482 -> m2_483  [key=0, style=solid];
m2_483 -> m2_484  [key=0, style=solid];
m2_484 -> m2_485  [key=0, style=solid];
m2_485 -> m2_486  [key=0, style=solid];
m2_486 -> m2_487  [key=0, style=solid];
m2_487 -> m2_488  [key=0, style=solid];
m2_488 -> m2_489  [key=0, style=solid];
m2_489 -> m2_490  [key=0, style=solid];
m2_490 -> m2_491  [key=0, style=solid];
m2_492 -> m2_517  [key=0, style=solid];
m2_494 -> m2_458  [key=0, style=solid];
m2_494 -> m2_175  [key=2, style=dotted];
m2_496 -> m2_458  [key=0, style=solid];
m2_496 -> m2_259  [key=2, style=dotted];
m2_498 -> m2_499  [key=0, style=solid];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_502  [key=0, style=solid];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_174  [key=2, style=dotted];
m2_501 -> m2_517  [key=0, style=solid];
m2_504 -> m2_458  [key=0, style=solid];
m2_504 -> m2_261  [key=2, style=dotted];
m2_506 -> m2_458  [key=0, style=solid];
m2_506 -> m2_262  [key=2, style=dotted];
m2_508 -> m2_509  [key=0, style=solid];
m2_509 -> m2_458  [key=0, style=solid];
m2_514 -> m2_515  [key=0, style=solid];
m2_514 -> m2_264  [key=2, style=dotted];
m2_515 -> m2_517  [key=0, style=solid];
m2_517 -> m2_181  [key=0, style=bold, color=blue];
m2_813 -> m2_818  [key=0, style=solid];
m2_818 -> m2_819  [key=0, style=solid];
m2_818 -> m2_825  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_818 -> m2_831  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_819 -> m2_820  [key=0, style=solid];
m2_819 -> m2_834  [key=0, style=solid];
m2_825 -> m2_826  [key=0, style=solid];
m2_825 -> m2_653  [key=2, style=dotted];
m2_831 -> m2_832  [key=0, style=solid];
m2_831 -> m2_653  [key=2, style=dotted];
m2_820 -> m2_821  [key=0, style=solid];
m2_820 -> m2_827  [key=0, style=solid];
m2_821 -> m2_822  [key=0, style=solid];
m2_827 -> m2_828  [key=0, style=solid];
m2_827 -> m2_830  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_827 -> m2_833  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_822 -> m2_823  [key=0, style=solid];
m2_822 -> m2_825  [key=0, style=solid];
m2_823 -> m2_824  [key=0, style=solid];
m2_823 -> m2_819  [key=0, style=solid];
m2_823 -> m2_83  [key=2, style=dotted];
m2_824 -> m2_834  [key=0, style=solid];
m2_824 -> m2_177  [key=2, style=dotted];
m2_826 -> m2_834  [key=0, style=solid];
m2_828 -> m2_829  [key=0, style=solid];
m2_828 -> m2_830  [key=0, style=solid];
m2_828 -> m2_812  [key=2, style=dotted];
m2_830 -> m2_831  [key=0, style=solid];
m2_830 -> m2_833  [key=0, style=solid];
m2_830 -> m2_263  [key=2, style=dotted];
m2_833 -> m2_834  [key=0, style=solid];
m2_833 -> m2_176  [key=2, style=dotted];
m2_833 -> m2_177  [key=2, style=dotted];
m2_829 -> m2_819  [key=0, style=solid];
m2_832 -> m2_834  [key=0, style=solid];
m2_834 -> m2_813  [key=0, style=bold, color=blue];
m2_1216 -> m2_1217  [key=0, style=solid];
m2_1217 -> m2_1218  [key=0, style=solid];
m2_1217 -> m2_1225  [key=2, style=dotted];
m2_1218 -> m2_1219  [key=0, style=solid];
m2_1218 -> m2_1221  [key=0, style=solid];
m2_1219 -> m2_1220  [key=0, style=solid];
m2_1219 -> m2_118  [key=2, style=dotted];
m2_1221 -> m2_1222  [key=0, style=solid];
m2_1221 -> m2_1223  [key=0, style=solid];
m2_1220 -> m2_1221  [key=0, style=solid];
m2_1222 -> m2_1223  [key=0, style=solid];
m2_1222 -> m2_1226  [key=2, style=dotted];
m2_1223 -> m2_1224  [key=0, style=solid];
m2_1223 -> m2_1227  [key=2, style=dotted];
m2_1224 -> m2_1216  [key=0, style=bold, color=blue];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_181  [key=3, color=darkorchid, style=bold, label="method methodReturn double? ReadAsDouble"];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_181  [key=2, style=dotted];
m2_529 -> m2_527  [key=0, style=bold, color=blue];
m2_784 -> m2_785  [key=0, style=solid];
m2_784 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseProperty"];
m2_785 -> m2_786  [key=0, style=solid];
m2_785 -> m2_787  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_785 -> m2_789  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_785 -> m2_792  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_808  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m2_786 -> m2_785  [key=3, color=darkorchid, style=bold, label="Local variable char quoteChar"];
m2_787 -> m2_788  [key=0, style=solid];
m2_787 -> m2_792  [key=0, style=solid];
m2_789 -> m2_790  [key=0, style=solid];
m2_789 -> m2_791  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m2_789 -> m2_808  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m2_792 -> m2_793  [key=0, style=solid];
m2_792 -> m2_796  [key=0, style=solid];
m2_792 -> m2_812  [key=2, style=dotted];
m2_808 -> m2_809  [key=0, style=solid];
m2_788 -> m2_789  [key=0, style=solid];
m2_790 -> m2_791  [key=0, style=solid];
m2_790 -> m2_58  [key=2, style=dotted];
m2_791 -> m2_797  [key=0, style=solid];
m2_791 -> m2_59  [key=2, style=dotted];
m2_793 -> m2_794  [key=0, style=solid];
m2_793 -> m2_808  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m2_796 -> m2_811  [key=0, style=solid];
m2_796 -> m2_176  [key=2, style=dotted];
m2_796 -> m2_177  [key=2, style=dotted];
m2_794 -> m2_795  [key=0, style=solid];
m2_794 -> m2_58  [key=2, style=dotted];
m2_795 -> m2_797  [key=0, style=solid];
m2_795 -> m2_813  [key=2, style=dotted];
m2_797 -> m2_798  [key=0, style=solid];
m2_798 -> m2_799  [key=0, style=solid];
m2_798 -> m2_802  [key=0, style=solid];
m2_799 -> m2_800  [key=0, style=solid];
m2_799 -> m2_814  [key=2, style=dotted];
m2_799 -> m2_807  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_802 -> m2_803  [key=0, style=solid];
m2_802 -> m2_61  [key=2, style=dotted];
m2_802 -> m2_807  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_800 -> m2_801  [key=0, style=solid];
m2_800 -> m2_803  [key=0, style=solid];
m2_807 -> m2_808  [key=0, style=solid];
m2_807 -> m2_360  [key=2, style=dotted];
m2_801 -> m2_803  [key=0, style=solid];
m2_801 -> m2_61  [key=2, style=dotted];
m2_801 -> m2_807  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_803 -> m2_804  [key=0, style=solid];
m2_803 -> m2_173  [key=2, style=dotted];
m2_804 -> m2_805  [key=0, style=solid];
m2_804 -> m2_806  [key=0, style=solid];
m2_805 -> m2_811  [key=0, style=solid];
m2_805 -> m2_176  [key=2, style=dotted];
m2_805 -> m2_177  [key=2, style=dotted];
m2_806 -> m2_807  [key=0, style=solid];
m2_809 -> m2_810  [key=0, style=solid];
m2_809 -> m2_714  [key=2, style=dotted];
m2_810 -> m2_811  [key=0, style=solid];
m2_811 -> m2_784  [key=0, style=bold, color=blue];
m2_917 -> m2_1210  [key=0, style=solid];
m2_1210 -> m2_1211  [key=0, style=solid];
m2_1210 -> m2_1214  [key=0, style=solid];
m2_1210 -> m2_361  [key=2, style=dotted];
m2_1211 -> m2_1212  [key=0, style=solid];
m2_1211 -> m2_1213  [key=0, style=solid];
m2_1214 -> m2_1215  [key=0, style=solid];
m2_1214 -> m2_177  [key=2, style=dotted];
m2_1212 -> m2_1215  [key=0, style=solid];
m2_1212 -> m2_1203  [key=2, style=dotted];
m2_1213 -> m2_1215  [key=0, style=solid];
m2_1213 -> m2_360  [key=2, style=dotted];
m2_1215 -> m2_917  [key=0, style=bold, color=blue];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_205  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytes"];
m2_189 -> m2_210  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytes"];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_169  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=isWrapped];
m2_191 -> m2_31  [key=3, color=darkorchid, style=bold, label="Local variable bool isWrapped"];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_249  [key=0, style=solid];
m2_192 -> m2_252  [key=0, style=solid];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_216  [key=0, style=solid];
m2_193 -> m2_194  [key=0, style=solid];
m2_249 -> m2_250  [key=0, style=solid];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_176  [key=2, style=dotted];
m2_252 -> m2_177  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_196 -> m2_197  [key=0, style=solid];
m2_197 -> m2_198  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_199 -> m2_200  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_249  [key=0, style=solid];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_201 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_201 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_201 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_207  [key=0, style=solid];
m2_202 -> m2_217  [key=0, style=solid];
m2_202 -> m2_222  [key=0, style=solid];
m2_202 -> m2_226  [key=0, style=solid];
m2_202 -> m2_229  [key=0, style=solid];
m2_202 -> m2_231  [key=0, style=solid];
m2_202 -> m2_233  [key=0, style=solid];
m2_202 -> m2_239  [key=0, style=solid];
m2_202 -> m2_241  [key=0, style=solid];
m2_202 -> m2_243  [key=0, style=solid];
m2_202 -> m2_246  [key=0, style=solid];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_17  [key=2, style=dotted];
m2_238 -> m2_253  [key=0, style=solid];
m2_238 -> m2_260  [key=2, style=dotted];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_200  [key=0, style=solid];
m2_247 -> m2_263  [key=2, style=dotted];
m2_248 -> m2_253  [key=0, style=solid];
m2_248 -> m2_260  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_207 -> m2_208  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_222 -> m2_223  [key=0, style=solid];
m2_226 -> m2_227  [key=0, style=solid];
m2_229 -> m2_230  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid];
m2_233 -> m2_234  [key=0, style=solid];
m2_239 -> m2_240  [key=0, style=solid];
m2_241 -> m2_242  [key=0, style=solid];
m2_243 -> m2_244  [key=0, style=solid];
m2_246 -> m2_247  [key=0, style=solid];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_200  [key=0, style=solid];
m2_204 -> m2_254  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_65  [key=2, style=dotted];
m2_206 -> m2_253  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label=data];
m2_210 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label=data];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_65  [key=2, style=dotted];
m2_216 -> m2_253  [key=0, style=solid];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_255  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_215  [key=0, style=solid];
m2_214 -> m2_253  [key=0, style=solid];
m2_214 -> m2_176  [key=2, style=dotted];
m2_214 -> m2_177  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_174  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_256  [key=2, style=dotted];
m2_221 -> m2_200  [key=0, style=solid];
m2_223 -> m2_224  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_174  [key=2, style=dotted];
m2_225 -> m2_253  [key=0, style=solid];
m2_225 -> m2_257  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_258  [key=2, style=dotted];
m2_228 -> m2_253  [key=0, style=solid];
m2_230 -> m2_200  [key=0, style=solid];
m2_230 -> m2_175  [key=2, style=dotted];
m2_232 -> m2_200  [key=0, style=solid];
m2_232 -> m2_259  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_238  [key=0, style=solid];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_174  [key=2, style=dotted];
m2_237 -> m2_253  [key=0, style=solid];
m2_240 -> m2_200  [key=0, style=solid];
m2_240 -> m2_261  [key=2, style=dotted];
m2_242 -> m2_200  [key=0, style=solid];
m2_242 -> m2_262  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_245 -> m2_200  [key=0, style=solid];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_264  [key=2, style=dotted];
m2_251 -> m2_253  [key=0, style=solid];
m2_253 -> m2_189  [key=0, style=bold, color=blue];
m2_652 -> m2_655  [key=0, style=solid];
m2_652 -> m2_656  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_652 -> m2_657  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_652 -> m2_608  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m2_652 -> m2_581  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m2_652 -> m2_564  [key=3, color=darkorchid, style=bold, label="Parameter variable int lastWritePosition"];
m2_652 -> m2_578  [key=3, color=darkorchid, style=bold, label="Parameter variable int writeToPosition"];
m2_655 -> m2_656  [key=0, style=solid];
m2_655 -> m2_657  [key=0, style=solid];
m2_656 -> m2_657  [key=0, style=solid];
m2_656 -> m2_654  [key=2, style=dotted];
m2_657 -> m2_658  [key=0, style=solid];
m2_657 -> m2_659  [key=2, style=dotted];
m2_658 -> m2_652  [key=0, style=bold, color=blue];
m2_812 -> m2_815  [key=0, style=solid];
m2_812 -> m2_785  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m2_812 -> m2_827  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m2_815 -> m2_816  [key=0, style=solid];
m2_815 -> m2_817  [key=2, style=dotted];
m2_816 -> m2_812  [key=0, style=bold, color=blue];
m2_169 -> m2_558  [key=0, style=solid];
m2_558 -> m2_559  [key=0, style=solid];
m2_558 -> m2_561  [key=0, style=solid];
m2_559 -> m2_560  [key=0, style=solid];
m2_559 -> m2_117  [key=2, style=dotted];
m2_560 -> m2_561  [key=0, style=solid];
m2_561 -> m2_169  [key=0, style=bold, color=blue];
m2_185 -> m2_265  [key=0, style=solid];
m2_185 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_185 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_185 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_185 -> m2_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_185 -> m2_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_185 -> m2_183  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_185 -> m2_187  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_185 -> m2_522  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_185 -> m2_205  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m2_185 -> m2_314  [key=3, color=red, style=bold, label="method methodReturn object ReadStringValue"];
m2_185 -> m2_322  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_169  [key=2, style=dotted];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_17  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_287  [key=0, style=solid];
m2_284 -> m2_289  [key=0, style=solid];
m2_284 -> m2_293  [key=0, style=solid];
m2_284 -> m2_297  [key=0, style=solid];
m2_297 -> m2_354  [key=0, style=solid];
m2_297 -> m2_357  [key=2, style=dotted];
m2_297 -> m2_7  [key=2, style=dotted];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_313  [key=0, style=solid, color=red];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_322  [key=0, style=solid];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_350  [key=0, style=solid];
m2_266 -> m2_353  [key=0, style=solid];
m2_267 -> m2_268  [key=0, style=solid];
m2_350 -> m2_351  [key=0, style=solid];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_176  [key=2, style=dotted];
m2_353 -> m2_177  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_269 -> m2_270  [key=0, style=solid];
m2_270 -> m2_271  [key=0, style=solid];
m2_271 -> m2_272  [key=0, style=solid];
m2_272 -> m2_273  [key=0, style=solid];
m2_273 -> m2_274  [key=0, style=solid];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_350  [key=0, style=solid];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_275 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_275 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_275 -> m2_322  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_275 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_275 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_275 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_281  [key=0, style=solid];
m2_276 -> m2_298  [key=0, style=solid];
m2_276 -> m2_317  [key=0, style=solid];
m2_276 -> m2_327  [key=0, style=solid];
m2_276 -> m2_330  [key=0, style=solid];
m2_276 -> m2_332  [key=0, style=solid];
m2_276 -> m2_334  [key=0, style=solid];
m2_276 -> m2_340  [key=0, style=solid];
m2_276 -> m2_342  [key=0, style=solid];
m2_276 -> m2_344  [key=0, style=solid];
m2_276 -> m2_347  [key=0, style=solid];
m2_312 -> m2_354  [key=0, style=solid];
m2_312 -> m2_260  [key=2, style=dotted];
m2_321 -> m2_354  [key=0, style=solid];
m2_321 -> m2_260  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_322 -> m2_326  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_339 -> m2_354  [key=0, style=solid];
m2_339 -> m2_260  [key=2, style=dotted];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_274  [key=0, style=solid];
m2_348 -> m2_263  [key=2, style=dotted];
m2_349 -> m2_354  [key=0, style=solid];
m2_349 -> m2_260  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_281 -> m2_282  [key=0, style=solid];
m2_298 -> m2_299  [key=0, style=solid];
m2_317 -> m2_318  [key=0, style=solid];
m2_327 -> m2_328  [key=0, style=solid];
m2_330 -> m2_331  [key=0, style=solid];
m2_332 -> m2_333  [key=0, style=solid];
m2_334 -> m2_335  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_342 -> m2_343  [key=0, style=solid];
m2_344 -> m2_345  [key=0, style=solid];
m2_347 -> m2_348  [key=0, style=solid];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_274  [key=0, style=solid];
m2_278 -> m2_254  [key=2, style=dotted];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_65  [key=2, style=dotted];
m2_280 -> m2_354  [key=0, style=solid];
m2_282 -> m2_283  [key=0, style=solid];
m2_285 -> m2_286  [key=0, style=solid];
m2_287 -> m2_288  [key=0, style=solid];
m2_289 -> m2_290  [key=0, style=solid];
m2_293 -> m2_294  [key=0, style=solid];
m2_286 -> m2_354  [key=0, style=solid];
m2_288 -> m2_354  [key=0, style=solid];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_292  [key=0, style=solid];
m2_291 -> m2_354  [key=0, style=solid];
m2_292 -> m2_354  [key=0, style=solid];
m2_292 -> m2_355  [key=2, style=dotted];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_296  [key=0, style=solid];
m2_295 -> m2_354  [key=0, style=solid];
m2_296 -> m2_354  [key=0, style=solid];
m2_296 -> m2_356  [key=2, style=dotted];
m2_299 -> m2_300  [key=0, style=solid];
m2_300 -> m2_301  [key=0, style=solid];
m2_301 -> m2_302  [key=0, style=solid];
m2_302 -> m2_303  [key=0, style=solid];
m2_303 -> m2_304  [key=0, style=solid];
m2_304 -> m2_305  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid];
m2_306 -> m2_307  [key=0, style=solid];
m2_307 -> m2_308  [key=0, style=solid];
m2_308 -> m2_309  [key=0, style=solid];
m2_309 -> m2_310  [key=0, style=solid];
m2_311 -> m2_312  [key=0, style=solid];
m2_313 -> m2_314  [key=0, style=solid, color=red];
m2_313 -> m2_358  [key=2, style=dotted, color=red];
m2_314 -> m2_315  [key=0, style=solid, color=red];
m2_314 -> m2_359  [key=2, style=dotted, color=red];
m2_314 -> m2_316  [key=1, style=dashed, color=red, label=s];
m2_315 -> m2_316  [key=0, style=solid, color=red];
m2_315 -> m2_360  [key=2, style=dotted, color=red];
m2_316 -> m2_354  [key=0, style=solid, color=red];
m2_318 -> m2_319  [key=0, style=solid];
m2_320 -> m2_321  [key=0, style=solid];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_325  [key=0, style=solid];
m2_323 -> m2_361  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_360  [key=2, style=dotted];
m2_326 -> m2_354  [key=0, style=solid];
m2_324 -> m2_354  [key=0, style=solid];
m2_324 -> m2_260  [key=2, style=dotted];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_258  [key=2, style=dotted];
m2_329 -> m2_354  [key=0, style=solid];
m2_331 -> m2_274  [key=0, style=solid];
m2_331 -> m2_175  [key=2, style=dotted];
m2_333 -> m2_274  [key=0, style=solid];
m2_333 -> m2_259  [key=2, style=dotted];
m2_335 -> m2_336  [key=0, style=solid];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_339  [key=0, style=solid];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_174  [key=2, style=dotted];
m2_338 -> m2_354  [key=0, style=solid];
m2_341 -> m2_274  [key=0, style=solid];
m2_341 -> m2_261  [key=2, style=dotted];
m2_343 -> m2_274  [key=0, style=solid];
m2_343 -> m2_262  [key=2, style=dotted];
m2_345 -> m2_346  [key=0, style=solid];
m2_346 -> m2_274  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_264  [key=2, style=dotted];
m2_352 -> m2_354  [key=0, style=solid];
m2_354 -> m2_185  [key=0, style=bold, color=blue];
m2_915 -> m2_1193  [key=0, style=solid];
m2_1193 -> m2_1194  [key=0, style=solid];
m2_1193 -> m2_1195  [key=0, style=solid];
m2_1193 -> m2_361  [key=2, style=dotted];
m2_1194 -> m2_1196  [key=0, style=solid];
m2_1194 -> m2_360  [key=2, style=dotted];
m2_1195 -> m2_1196  [key=0, style=solid];
m2_1195 -> m2_177  [key=2, style=dotted];
m2_1196 -> m2_915  [key=0, style=bold, color=blue];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_205  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m2_364 -> m2_401  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m2_364 -> m2_409  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_169  [key=2, style=dotted];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_435  [key=0, style=solid];
m2_366 -> m2_438  [key=0, style=solid];
m2_367 -> m2_368  [key=0, style=solid];
m2_435 -> m2_436  [key=0, style=solid];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_176  [key=2, style=dotted];
m2_438 -> m2_177  [key=2, style=dotted];
m2_368 -> m2_369  [key=0, style=solid];
m2_369 -> m2_370  [key=0, style=solid];
m2_370 -> m2_371  [key=0, style=solid];
m2_371 -> m2_372  [key=0, style=solid];
m2_372 -> m2_373  [key=0, style=solid];
m2_373 -> m2_374  [key=0, style=solid];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_435  [key=0, style=solid];
m2_375 -> m2_376  [key=0, style=solid];
m2_375 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_375 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_375 -> m2_424  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_375 -> m2_433  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_375 -> m2_434  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_376 -> m2_377  [key=0, style=solid];
m2_376 -> m2_381  [key=0, style=solid];
m2_376 -> m2_385  [key=0, style=solid];
m2_376 -> m2_388  [key=0, style=solid];
m2_376 -> m2_407  [key=0, style=solid];
m2_376 -> m2_415  [key=0, style=solid];
m2_376 -> m2_417  [key=0, style=solid];
m2_376 -> m2_419  [key=0, style=solid];
m2_376 -> m2_425  [key=0, style=solid];
m2_376 -> m2_427  [key=0, style=solid];
m2_376 -> m2_429  [key=0, style=solid];
m2_376 -> m2_432  [key=0, style=solid];
m2_383 -> m2_384  [key=0, style=solid];
m2_383 -> m2_17  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_413  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m2_409 -> m2_414  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m2_424 -> m2_439  [key=0, style=solid];
m2_424 -> m2_260  [key=2, style=dotted];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_374  [key=0, style=solid];
m2_433 -> m2_263  [key=2, style=dotted];
m2_434 -> m2_439  [key=0, style=solid];
m2_434 -> m2_260  [key=2, style=dotted];
m2_377 -> m2_378  [key=0, style=solid];
m2_381 -> m2_382  [key=0, style=solid];
m2_385 -> m2_386  [key=0, style=solid];
m2_388 -> m2_389  [key=0, style=solid];
m2_407 -> m2_408  [key=0, style=solid];
m2_415 -> m2_416  [key=0, style=solid];
m2_417 -> m2_418  [key=0, style=solid];
m2_419 -> m2_420  [key=0, style=solid];
m2_425 -> m2_426  [key=0, style=solid];
m2_427 -> m2_428  [key=0, style=solid];
m2_429 -> m2_430  [key=0, style=solid];
m2_432 -> m2_433  [key=0, style=solid];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_374  [key=0, style=solid];
m2_378 -> m2_254  [key=2, style=dotted];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_65  [key=2, style=dotted];
m2_380 -> m2_439  [key=0, style=solid];
m2_382 -> m2_383  [key=0, style=solid];
m2_384 -> m2_439  [key=0, style=solid];
m2_384 -> m2_61  [key=2, style=dotted];
m2_384 -> m2_440  [key=2, style=dotted];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_258  [key=2, style=dotted];
m2_387 -> m2_439  [key=0, style=solid];
m2_389 -> m2_390  [key=0, style=solid];
m2_390 -> m2_391  [key=0, style=solid];
m2_391 -> m2_392  [key=0, style=solid];
m2_392 -> m2_393  [key=0, style=solid];
m2_393 -> m2_394  [key=0, style=solid];
m2_394 -> m2_395  [key=0, style=solid];
m2_395 -> m2_396  [key=0, style=solid];
m2_396 -> m2_397  [key=0, style=solid];
m2_397 -> m2_398  [key=0, style=solid];
m2_398 -> m2_399  [key=0, style=solid];
m2_399 -> m2_400  [key=0, style=solid];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_358  [key=2, style=dotted];
m2_401 -> m2_402  [key=0, style=solid];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_404  [key=0, style=solid];
m2_403 -> m2_405  [key=0, style=solid];
m2_403 -> m2_406  [key=1, style=dashed, color=darkseagreen4, label=b];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_441  [key=2, style=dotted];
m2_404 -> m2_406  [key=1, style=dashed, color=darkseagreen4, label=b];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_65  [key=2, style=dotted];
m2_406 -> m2_439  [key=0, style=solid];
m2_408 -> m2_409  [key=0, style=solid];
m2_410 -> m2_411  [key=0, style=solid];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_360  [key=2, style=dotted];
m2_414 -> m2_439  [key=0, style=solid];
m2_411 -> m2_412  [key=0, style=solid];
m2_411 -> m2_413  [key=0, style=solid];
m2_411 -> m2_361  [key=2, style=dotted];
m2_412 -> m2_439  [key=0, style=solid];
m2_412 -> m2_260  [key=2, style=dotted];
m2_416 -> m2_374  [key=0, style=solid];
m2_416 -> m2_175  [key=2, style=dotted];
m2_418 -> m2_374  [key=0, style=solid];
m2_418 -> m2_259  [key=2, style=dotted];
m2_420 -> m2_421  [key=0, style=solid];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_424  [key=0, style=solid];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_174  [key=2, style=dotted];
m2_423 -> m2_439  [key=0, style=solid];
m2_426 -> m2_374  [key=0, style=solid];
m2_426 -> m2_261  [key=2, style=dotted];
m2_428 -> m2_374  [key=0, style=solid];
m2_428 -> m2_262  [key=2, style=dotted];
m2_430 -> m2_431  [key=0, style=solid];
m2_431 -> m2_374  [key=0, style=solid];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_264  [key=2, style=dotted];
m2_437 -> m2_439  [key=0, style=solid];
m2_439 -> m2_364  [key=0, style=bold, color=blue];
m2_670 -> m2_671  [key=0, style=solid];
m2_671 -> m2_672  [key=0, style=solid];
m2_671 -> m2_673  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_671 -> m2_675  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_671 -> m2_676  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_671 -> m2_707  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_672 -> m2_673  [key=0, style=solid];
m2_672 -> m2_713  [key=0, style=solid];
m2_673 -> m2_674  [key=0, style=solid];
m2_673 -> m2_680  [key=0, style=solid];
m2_673 -> m2_708  [key=0, style=solid];
m2_675 -> m2_676  [key=0, style=solid];
m2_676 -> m2_677  [key=0, style=solid];
m2_676 -> m2_679  [key=0, style=solid];
m2_707 -> m2_672  [key=0, style=solid];
m2_707 -> m2_707  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_707 -> m2_708  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_674 -> m2_675  [key=0, style=solid];
m2_680 -> m2_681  [key=0, style=solid];
m2_708 -> m2_709  [key=0, style=solid];
m2_677 -> m2_678  [key=0, style=solid];
m2_677 -> m2_672  [key=0, style=solid];
m2_677 -> m2_83  [key=2, style=dotted];
m2_679 -> m2_713  [key=0, style=solid];
m2_678 -> m2_713  [key=0, style=solid];
m2_681 -> m2_682  [key=0, style=solid];
m2_682 -> m2_683  [key=0, style=solid];
m2_683 -> m2_684  [key=0, style=solid];
m2_684 -> m2_685  [key=0, style=solid];
m2_685 -> m2_686  [key=0, style=solid];
m2_686 -> m2_687  [key=0, style=solid];
m2_687 -> m2_688  [key=0, style=solid];
m2_688 -> m2_689  [key=0, style=solid];
m2_689 -> m2_690  [key=0, style=solid];
m2_690 -> m2_691  [key=0, style=solid];
m2_691 -> m2_692  [key=0, style=solid];
m2_692 -> m2_693  [key=0, style=solid];
m2_693 -> m2_694  [key=0, style=solid];
m2_694 -> m2_695  [key=0, style=solid];
m2_695 -> m2_696  [key=0, style=solid];
m2_696 -> m2_697  [key=0, style=solid];
m2_697 -> m2_698  [key=0, style=solid];
m2_698 -> m2_699  [key=0, style=solid];
m2_699 -> m2_700  [key=0, style=solid];
m2_700 -> m2_701  [key=0, style=solid];
m2_701 -> m2_702  [key=0, style=solid];
m2_702 -> m2_703  [key=0, style=solid];
m2_703 -> m2_704  [key=0, style=solid];
m2_704 -> m2_705  [key=0, style=solid];
m2_705 -> m2_706  [key=0, style=solid];
m2_706 -> m2_707  [key=0, style=solid];
m2_709 -> m2_710  [key=0, style=solid];
m2_709 -> m2_712  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_710 -> m2_711  [key=0, style=solid];
m2_710 -> m2_712  [key=0, style=solid];
m2_710 -> m2_263  [key=2, style=dotted];
m2_712 -> m2_713  [key=0, style=solid];
m2_712 -> m2_176  [key=2, style=dotted];
m2_712 -> m2_177  [key=2, style=dotted];
m2_711 -> m2_713  [key=0, style=solid];
m2_713 -> m2_670  [key=0, style=bold, color=blue];
m2_258 -> m2_530  [key=0, style=solid];
m2_530 -> m2_531  [key=0, style=solid];
m2_530 -> m2_537  [key=0, style=solid];
m2_530 -> m2_120  [key=2, style=dotted];
m2_531 -> m2_532  [key=0, style=solid];
m2_537 -> m2_538  [key=0, style=solid];
m2_532 -> m2_533  [key=0, style=solid];
m2_532 -> m2_535  [key=0, style=solid];
m2_533 -> m2_534  [key=0, style=solid];
m2_533 -> m2_540  [key=2, style=dotted];
m2_535 -> m2_536  [key=0, style=solid];
m2_534 -> m2_539  [key=0, style=solid];
m2_536 -> m2_539  [key=0, style=solid];
m2_536 -> m2_260  [key=2, style=dotted];
m2_538 -> m2_539  [key=0, style=solid];
m2_538 -> m2_541  [key=2, style=dotted];
m2_539 -> m2_258  [key=0, style=bold, color=blue];
m2_920 -> m2_1189  [key=0, style=solid];
m2_1189 -> m2_1190  [key=0, style=solid];
m2_1189 -> m2_1191  [key=0, style=solid];
m2_1189 -> m2_361  [key=2, style=dotted];
m2_1190 -> m2_1192  [key=0, style=solid];
m2_1190 -> m2_174  [key=2, style=dotted];
m2_1191 -> m2_1192  [key=0, style=solid];
m2_1191 -> m2_177  [key=2, style=dotted];
m2_1192 -> m2_920  [key=0, style=bold, color=blue];
m2_1138 -> m2_1139  [key=0, style=solid];
m2_1138 -> m2_1143  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1138 -> m2_1144  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1138 -> m2_1148  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1138 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m2_1138 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m2_1138 -> m2_361  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_1139 -> m2_1140  [key=0, style=solid];
m2_1139 -> m2_1142  [key=0, style=solid];
m2_1139 -> m2_120  [key=2, style=dotted];
m2_1143 -> m2_1144  [key=0, style=solid];
m2_1143 -> m2_1148  [key=0, style=solid];
m2_1143 -> m2_205  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_1144 -> m2_1145  [key=0, style=solid];
m2_1144 -> m2_1147  [key=0, style=solid];
m2_1148 -> m2_1149  [key=0, style=solid];
m2_1140 -> m2_1141  [key=0, style=solid];
m2_1142 -> m2_1143  [key=0, style=solid];
m2_1142 -> m2_1144  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1142 -> m2_1145  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1142 -> m2_1147  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1141 -> m2_1150  [key=0, style=solid];
m2_1141 -> m2_541  [key=2, style=dotted];
m2_1145 -> m2_1146  [key=0, style=solid];
m2_1147 -> m2_1143  [key=0, style=solid];
m2_1147 -> m2_1147  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1146 -> m2_1150  [key=0, style=solid];
m2_1149 -> m2_1150  [key=0, style=solid];
m2_1150 -> m2_1138  [key=0, style=bold, color=blue];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_185  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffset"];
m2_522 -> m2_523  [key=0, style=solid];
m2_522 -> m2_185  [key=2, style=dotted];
m2_523 -> m2_521  [key=0, style=bold, color=blue];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_181  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal? ReadAsDecimal"];
m2_525 -> m2_526  [key=0, style=solid];
m2_525 -> m2_181  [key=2, style=dotted];
m2_526 -> m2_524  [key=0, style=bold, color=blue];
m2_361 -> m2_1151  [key=0, style=solid];
m2_361 -> m2_322  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_361 -> m2_410  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_361 -> m2_950  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_361 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m2_361 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m2_1151 -> m2_1152  [key=0, style=solid];
m2_1151 -> m2_1138  [key=2, style=dotted];
m2_1152 -> m2_1153  [key=0, style=solid];
m2_1152 -> m2_1154  [key=0, style=solid];
m2_1153 -> m2_1157  [key=0, style=solid];
m2_1154 -> m2_1155  [key=0, style=solid];
m2_1154 -> m2_1156  [key=0, style=solid];
m2_1154 -> m2_120  [key=2, style=dotted];
m2_1155 -> m2_1157  [key=0, style=solid];
m2_1156 -> m2_1157  [key=0, style=solid];
m2_1156 -> m2_1158  [key=2, style=dotted];
m2_1157 -> m2_361  [key=0, style=bold, color=blue];
m2_262 -> m2_922  [key=0, style=solid];
m2_922 -> m2_923  [key=0, style=solid];
m2_923 -> m2_924  [key=0, style=solid];
m2_923 -> m2_13  [key=2, style=dotted];
m2_924 -> m2_262  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=0, style=solid];
m2_2 -> d13  [key=2, style=dotted];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_1133 -> m2_1134  [key=0, style=solid];
m2_1133 -> m2_1135  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1133 -> m2_175  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m2_1133 -> m2_1102  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialPosition"];
m2_1134 -> m2_1135  [key=0, style=solid];
m2_1134 -> m2_1136  [key=0, style=solid];
m2_1135 -> m2_1136  [key=0, style=solid];
m2_1135 -> m2_1137  [key=2, style=dotted];
m2_1135 -> m2_360  [key=2, style=dotted];
m2_1136 -> m2_1133  [key=0, style=bold, color=blue];
m2_1158 -> m2_1159  [key=0, style=solid];
m2_1158 -> m2_1177  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_1158 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m2_1158 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m2_1159 -> m2_1160  [key=0, style=solid];
m2_1159 -> m2_1164  [key=0, style=solid];
m2_1159 -> m2_1169  [key=0, style=solid];
m2_1159 -> m2_1172  [key=0, style=solid];
m2_1159 -> m2_1177  [key=0, style=solid];
m2_1177 -> m2_1178  [key=0, style=solid];
m2_1177 -> m2_1179  [key=0, style=solid];
m2_1177 -> m2_263  [key=2, style=dotted];
m2_1160 -> m2_1161  [key=0, style=solid];
m2_1164 -> m2_1165  [key=0, style=solid];
m2_1169 -> m2_1170  [key=0, style=solid];
m2_1172 -> m2_1173  [key=0, style=solid];
m2_1161 -> m2_1162  [key=0, style=solid];
m2_1162 -> m2_1163  [key=0, style=solid];
m2_1163 -> m2_1180  [key=0, style=solid];
m2_1165 -> m2_1166  [key=0, style=solid];
m2_1165 -> m2_1167  [key=0, style=solid];
m2_1165 -> m2_120  [key=2, style=dotted];
m2_1166 -> m2_1180  [key=0, style=solid];
m2_1167 -> m2_1168  [key=0, style=solid];
m2_1168 -> m2_1180  [key=0, style=solid];
m2_1170 -> m2_1171  [key=0, style=solid];
m2_1170 -> m2_1179  [key=0, style=solid];
m2_1171 -> m2_1180  [key=0, style=solid];
m2_1179 -> m2_1180  [key=0, style=solid];
m2_1173 -> m2_1174  [key=0, style=solid];
m2_1174 -> m2_1175  [key=0, style=solid];
m2_1175 -> m2_1176  [key=0, style=solid];
m2_1176 -> m2_1180  [key=0, style=solid];
m2_1178 -> m2_1180  [key=0, style=solid];
m2_1180 -> m2_1158  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_13  [key=0, style=bold, color=blue];
m2_918 -> m2_1204  [key=0, style=solid];
m2_1204 -> m2_1205  [key=0, style=solid];
m2_1204 -> m2_1208  [key=0, style=solid];
m2_1204 -> m2_361  [key=2, style=dotted];
m2_1205 -> m2_1206  [key=0, style=solid];
m2_1205 -> m2_1207  [key=0, style=solid];
m2_1208 -> m2_1209  [key=0, style=solid];
m2_1208 -> m2_177  [key=2, style=dotted];
m2_1206 -> m2_1209  [key=0, style=solid];
m2_1206 -> m2_1203  [key=2, style=dotted];
m2_1207 -> m2_1209  [key=0, style=solid];
m2_1207 -> m2_360  [key=2, style=dotted];
m2_1209 -> m2_918  [key=0, style=bold, color=blue];
m2_261 -> m2_925  [key=0, style=solid];
m2_261 -> m2_926  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_261 -> m2_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_261 -> m2_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_925 -> m2_926  [key=0, style=solid];
m2_926 -> m2_927  [key=0, style=solid];
m2_926 -> m2_928  [key=0, style=solid];
m2_926 -> m2_120  [key=2, style=dotted];
m2_927 -> m2_928  [key=0, style=solid];
m2_928 -> m2_929  [key=0, style=solid];
m2_928 -> m2_13  [key=2, style=dotted];
m2_929 -> m2_261  [key=0, style=bold, color=blue];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_125 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_125 -> m2_120  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_125 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m2_125 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_128  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m2_128 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m2_128 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_86  [key=2, style=dotted];
m2_130 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m2_127 -> m2_137  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m2_129 -> m2_205  [key=3, color=darkorchid, style=bold, label="Local variable int totalCharsRead"];
m2_133 -> m2_129  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_136  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m2_132 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_134  [key=0, style=solid];
m2_135 -> m2_137  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_137 -> m2_125  [key=0, style=bold, color=blue];
m2_914 -> m2_1181  [key=0, style=solid];
m2_1181 -> m2_1182  [key=0, style=solid];
m2_1181 -> m2_1183  [key=0, style=solid];
m2_1181 -> m2_361  [key=2, style=dotted];
m2_1182 -> m2_1184  [key=0, style=solid];
m2_1182 -> m2_360  [key=2, style=dotted];
m2_1183 -> m2_1184  [key=0, style=solid];
m2_1183 -> m2_177  [key=2, style=dotted];
m2_1184 -> m2_914  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=2, style=dotted];
m2_11 -> m2_8  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m2_68 -> m2_205  [key=3, color=darkorchid, style=bold, label="Parameter variable int dstOffset"];
m2_68 -> m2_92  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m2_68 -> m2_98  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m2_68 -> m2_75  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_68 -> m2_96  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_69  [key=3, color=darkorchid, style=bold, label="Local variable int charByteCount"];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_71 -> m2_68  [key=0, style=bold, color=blue];
m2_919 -> m2_1197  [key=0, style=solid];
m2_1197 -> m2_1198  [key=0, style=solid];
m2_1197 -> m2_1201  [key=0, style=solid];
m2_1197 -> m2_361  [key=2, style=dotted];
m2_1198 -> m2_1199  [key=0, style=solid];
m2_1198 -> m2_1200  [key=0, style=solid];
m2_1201 -> m2_1202  [key=0, style=solid];
m2_1201 -> m2_177  [key=2, style=dotted];
m2_1199 -> m2_1202  [key=0, style=solid];
m2_1199 -> m2_1203  [key=2, style=dotted];
m2_1200 -> m2_1202  [key=0, style=solid];
m2_1200 -> m2_360  [key=2, style=dotted];
m2_1202 -> m2_919  [key=0, style=bold, color=blue];
m2_58 -> m2_73  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_82  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_75 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=count];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_68  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_58  [key=0, style=bold, color=blue];
m2_260 -> m2_362  [key=0, style=solid];
m2_260 -> m2_201  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m2_260 -> m2_275  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m2_260 -> m2_375  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m2_260 -> m2_445  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m2_260 -> m2_459  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m2_260 -> m2_836  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_176  [key=2, style=dotted];
m2_362 -> m2_177  [key=2, style=dotted];
m2_363 -> m2_260  [key=0, style=bold, color=blue];
m2_714 -> m2_715  [key=0, style=solid];
m2_715 -> m2_716  [key=0, style=solid];
m2_716 -> m2_717  [key=0, style=solid];
m2_716 -> m2_718  [key=2, style=dotted];
m2_717 -> m2_714  [key=0, style=bold, color=blue];
m2_264 -> m2_542  [key=0, style=solid];
m2_542 -> m2_543  [key=0, style=solid];
m2_542 -> m2_549  [key=0, style=solid];
m2_542 -> m2_120  [key=2, style=dotted];
m2_543 -> m2_544  [key=0, style=solid];
m2_543 -> m2_173  [key=2, style=dotted];
m2_549 -> m2_550  [key=0, style=solid];
m2_549 -> m2_174  [key=2, style=dotted];
m2_544 -> m2_545  [key=0, style=solid];
m2_544 -> m2_546  [key=0, style=solid];
m2_545 -> m2_550  [key=0, style=solid];
m2_546 -> m2_547  [key=0, style=solid];
m2_546 -> m2_548  [key=0, style=solid];
m2_547 -> m2_549  [key=0, style=solid];
m2_547 -> m2_175  [key=2, style=dotted];
m2_548 -> m2_550  [key=0, style=solid];
m2_548 -> m2_176  [key=2, style=dotted];
m2_548 -> m2_177  [key=2, style=dotted];
m2_550 -> m2_264  [key=0, style=bold, color=blue];
m2_175 -> m2_1092  [key=0, style=solid];
m2_175 -> m2_1110  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_175 -> m2_1118  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_175 -> m2_1123  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_175 -> m2_1128  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_175 -> m2_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m2_175 -> m2_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m2_1092 -> m2_1093  [key=0, style=solid];
m2_1110 -> m2_1111  [key=0, style=solid];
m2_1110 -> m2_1133  [key=2, style=dotted];
m2_1118 -> m2_1119  [key=0, style=solid];
m2_1118 -> m2_1133  [key=2, style=dotted];
m2_1123 -> m2_1124  [key=0, style=solid];
m2_1123 -> m2_1133  [key=2, style=dotted];
m2_1128 -> m2_1129  [key=0, style=solid];
m2_1128 -> m2_1133  [key=2, style=dotted];
m2_1093 -> m2_1094  [key=0, style=solid];
m2_1093 -> m2_1095  [key=0, style=solid];
m2_1093 -> m2_120  [key=2, style=dotted];
m2_1094 -> m2_1132  [key=0, style=solid];
m2_1094 -> m2_177  [key=2, style=dotted];
m2_1095 -> m2_1096  [key=0, style=solid];
m2_1095 -> m2_1108  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1095 -> m2_1115  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1095 -> m2_1122  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1095 -> m2_1127  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1096 -> m2_1097  [key=0, style=solid];
m2_1096 -> m2_1098  [key=0, style=solid];
m2_1108 -> m2_1109  [key=0, style=solid];
m2_1108 -> m2_1110  [key=0, style=solid];
m2_1115 -> m2_1116  [key=0, style=solid];
m2_1115 -> m2_1103  [key=0, style=solid];
m2_1122 -> m2_1123  [key=0, style=solid];
m2_1122 -> m2_1125  [key=0, style=solid];
m2_1127 -> m2_1128  [key=0, style=solid];
m2_1127 -> m2_1130  [key=0, style=solid];
m2_1097 -> m2_1101  [key=0, style=solid];
m2_1097 -> m2_1108  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1097 -> m2_1115  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1097 -> m2_1122  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1097 -> m2_1127  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1098 -> m2_1099  [key=0, style=solid];
m2_1098 -> m2_1100  [key=0, style=solid];
m2_1099 -> m2_1101  [key=0, style=solid];
m2_1099 -> m2_1108  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1099 -> m2_1115  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1099 -> m2_1122  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1099 -> m2_1127  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m2_1100 -> m2_1132  [key=0, style=solid];
m2_1100 -> m2_176  [key=2, style=dotted];
m2_1100 -> m2_177  [key=2, style=dotted];
m2_1101 -> m2_1102  [key=0, style=solid];
m2_1102 -> m2_1103  [key=0, style=solid];
m2_1102 -> m2_1110  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_1102 -> m2_1118  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_1102 -> m2_1123  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_1102 -> m2_1128  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_1103 -> m2_1104  [key=0, style=solid];
m2_1103 -> m2_1132  [key=0, style=solid];
m2_1104 -> m2_1105  [key=0, style=solid];
m2_1104 -> m2_1113  [key=0, style=solid];
m2_1104 -> m2_1121  [key=0, style=solid];
m2_1104 -> m2_1126  [key=0, style=solid];
m2_1104 -> m2_1131  [key=0, style=solid];
m2_1105 -> m2_1106  [key=0, style=solid];
m2_1113 -> m2_1114  [key=0, style=solid];
m2_1121 -> m2_1122  [key=0, style=solid];
m2_1126 -> m2_1127  [key=0, style=solid];
m2_1131 -> m2_1103  [key=0, style=solid];
m2_1106 -> m2_1107  [key=0, style=solid];
m2_1106 -> m2_1112  [key=0, style=solid];
m2_1107 -> m2_1108  [key=0, style=solid];
m2_1107 -> m2_1103  [key=0, style=solid];
m2_1107 -> m2_83  [key=2, style=dotted];
m2_1112 -> m2_1103  [key=0, style=solid];
m2_1109 -> m2_1132  [key=0, style=solid];
m2_1109 -> m2_177  [key=2, style=dotted];
m2_1111 -> m2_1132  [key=0, style=solid];
m2_1114 -> m2_1115  [key=0, style=solid];
m2_1116 -> m2_1117  [key=0, style=solid];
m2_1116 -> m2_1103  [key=0, style=solid];
m2_1116 -> m2_120  [key=2, style=dotted];
m2_1117 -> m2_1118  [key=0, style=solid];
m2_1117 -> m2_1103  [key=0, style=solid];
m2_1119 -> m2_1120  [key=0, style=solid];
m2_1120 -> m2_1132  [key=0, style=solid];
m2_1125 -> m2_1103  [key=0, style=solid];
m2_1125 -> m2_261  [key=2, style=dotted];
m2_1124 -> m2_1132  [key=0, style=solid];
m2_1130 -> m2_1103  [key=0, style=solid];
m2_1130 -> m2_262  [key=2, style=dotted];
m2_1129 -> m2_1132  [key=0, style=solid];
m2_1132 -> m2_175  [key=0, style=bold, color=blue];
m2_59 -> m2_562  [key=0, style=solid];
m2_59 -> m2_573  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_59 -> m2_577  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_59 -> m2_637  [key=1, style=dashed, color=darkseagreen4, label=char];
m2_59 -> m2_17  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m2_59 -> m2_786  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m2_562 -> m2_563  [key=0, style=solid];
m2_562 -> m2_567  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_573 -> m2_648  [key=0, style=solid];
m2_573 -> m2_176  [key=2, style=dotted];
m2_573 -> m2_177  [key=2, style=dotted];
m2_577 -> m2_648  [key=0, style=solid];
m2_577 -> m2_176  [key=2, style=dotted];
m2_577 -> m2_177  [key=2, style=dotted];
m2_637 -> m2_638  [key=0, style=solid];
m2_637 -> m2_566  [key=0, style=solid];
m2_563 -> m2_564  [key=0, style=solid];
m2_563 -> m2_639  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_563 -> m2_640  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_567 -> m2_568  [key=0, style=solid];
m2_567 -> m2_574  [key=0, style=solid];
m2_567 -> m2_627  [key=0, style=solid];
m2_567 -> m2_631  [key=0, style=solid];
m2_567 -> m2_635  [key=0, style=solid];
m2_567 -> m2_567  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_567 -> m2_569  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_567 -> m2_570  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_567 -> m2_575  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_567 -> m2_578  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_567 -> m2_579  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_567 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_564 -> m2_565  [key=0, style=solid];
m2_564 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_564 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_564 -> m2_562  [key=3, color=darkorchid, style=bold, label="Local variable int lastWritePosition"];
m2_639 -> m2_640  [key=0, style=solid];
m2_639 -> m2_641  [key=0, style=solid];
m2_640 -> m2_645  [key=0, style=solid];
m2_640 -> m2_653  [key=2, style=dotted];
m2_565 -> m2_566  [key=0, style=solid];
m2_617 -> m2_618  [key=0, style=solid];
m2_617 -> m2_652  [key=2, style=dotted];
m2_625 -> m2_626  [key=0, style=solid];
m2_625 -> m2_652  [key=2, style=dotted];
m2_566 -> m2_567  [key=0, style=solid];
m2_566 -> m2_648  [key=0, style=solid];
m2_568 -> m2_569  [key=0, style=solid];
m2_574 -> m2_575  [key=0, style=solid];
m2_627 -> m2_628  [key=0, style=solid];
m2_631 -> m2_632  [key=0, style=solid];
m2_635 -> m2_636  [key=0, style=solid];
m2_569 -> m2_570  [key=0, style=solid];
m2_569 -> m2_566  [key=0, style=solid];
m2_570 -> m2_571  [key=0, style=solid];
m2_570 -> m2_570  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_570 -> m2_572  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_570 -> m2_575  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_570 -> m2_578  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_570 -> m2_579  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_570 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_575 -> m2_576  [key=0, style=solid];
m2_578 -> m2_579  [key=0, style=solid];
m2_578 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m2_578 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m2_579 -> m2_580  [key=0, style=solid];
m2_579 -> m2_582  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_579 -> m2_598  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_579 -> m2_623  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_580 -> m2_581  [key=0, style=solid];
m2_580 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_580 -> m2_600  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_571 -> m2_572  [key=0, style=solid];
m2_571 -> m2_566  [key=0, style=solid];
m2_571 -> m2_83  [key=2, style=dotted];
m2_572 -> m2_573  [key=0, style=solid];
m2_576 -> m2_577  [key=0, style=solid];
m2_576 -> m2_578  [key=0, style=solid];
m2_576 -> m2_120  [key=2, style=dotted];
m2_582 -> m2_583  [key=0, style=solid];
m2_582 -> m2_585  [key=0, style=solid];
m2_582 -> m2_587  [key=0, style=solid];
m2_582 -> m2_589  [key=0, style=solid];
m2_582 -> m2_591  [key=0, style=solid];
m2_582 -> m2_593  [key=0, style=solid];
m2_582 -> m2_595  [key=0, style=solid];
m2_582 -> m2_599  [key=0, style=solid];
m2_582 -> m2_622  [key=0, style=solid];
m2_598 -> m2_624  [key=0, style=solid];
m2_623 -> m2_648  [key=0, style=solid];
m2_623 -> m2_176  [key=2, style=dotted];
m2_623 -> m2_177  [key=2, style=dotted];
m2_581 -> m2_582  [key=0, style=solid];
m2_581 -> m2_579  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m2_581 -> m2_649  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m2_600 -> m2_601  [key=0, style=solid];
m2_583 -> m2_584  [key=0, style=solid];
m2_585 -> m2_586  [key=0, style=solid];
m2_587 -> m2_588  [key=0, style=solid];
m2_589 -> m2_590  [key=0, style=solid];
m2_591 -> m2_592  [key=0, style=solid];
m2_593 -> m2_594  [key=0, style=solid];
m2_595 -> m2_596  [key=0, style=solid];
m2_599 -> m2_600  [key=0, style=solid];
m2_622 -> m2_623  [key=0, style=solid];
m2_584 -> m2_624  [key=0, style=solid];
m2_586 -> m2_624  [key=0, style=solid];
m2_588 -> m2_624  [key=0, style=solid];
m2_590 -> m2_624  [key=0, style=solid];
m2_592 -> m2_624  [key=0, style=solid];
m2_594 -> m2_624  [key=0, style=solid];
m2_596 -> m2_597  [key=0, style=solid];
m2_597 -> m2_598  [key=0, style=solid];
m2_601 -> m2_602  [key=0, style=solid];
m2_601 -> m2_649  [key=2, style=dotted];
m2_601 -> m2_604  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_601 -> m2_608  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_601 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_602 -> m2_603  [key=0, style=solid];
m2_602 -> m2_604  [key=0, style=solid];
m2_602 -> m2_650  [key=2, style=dotted];
m2_604 -> m2_605  [key=0, style=solid];
m2_604 -> m2_621  [key=0, style=solid];
m2_604 -> m2_651  [key=2, style=dotted];
m2_608 -> m2_609  [key=0, style=solid];
m2_608 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m2_608 -> m2_581  [key=3, color=darkorchid, style=bold, label="Local variable char highSurrogate"];
m2_603 -> m2_621  [key=0, style=solid];
m2_603 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_605 -> m2_606  [key=0, style=solid];
m2_621 -> m2_624  [key=0, style=solid];
m2_621 -> m2_622  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_621 -> m2_626  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_621 -> m2_628  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_606 -> m2_607  [key=0, style=solid];
m2_606 -> m2_620  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m2_607 -> m2_608  [key=0, style=solid];
m2_607 -> m2_619  [key=0, style=solid];
m2_607 -> m2_120  [key=2, style=dotted];
m2_620 -> m2_605  [key=0, style=solid];
m2_620 -> m2_621  [key=0, style=solid];
m2_619 -> m2_620  [key=0, style=solid];
m2_619 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_609 -> m2_610  [key=0, style=solid];
m2_610 -> m2_611  [key=0, style=solid];
m2_610 -> m2_649  [key=2, style=dotted];
m2_610 -> m2_612  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_610 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_611 -> m2_612  [key=0, style=solid];
m2_611 -> m2_616  [key=0, style=solid];
m2_611 -> m2_650  [key=2, style=dotted];
m2_612 -> m2_613  [key=0, style=solid];
m2_612 -> m2_615  [key=0, style=solid];
m2_612 -> m2_651  [key=2, style=dotted];
m2_616 -> m2_617  [key=0, style=solid];
m2_616 -> m2_8  [key=2, style=dotted];
m2_613 -> m2_614  [key=0, style=solid];
m2_613 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m2_615 -> m2_616  [key=0, style=solid];
m2_615 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m2_614 -> m2_616  [key=0, style=solid];
m2_614 -> m2_620  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m2_618 -> m2_620  [key=0, style=solid];
m2_618 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_624 -> m2_625  [key=0, style=solid];
m2_624 -> m2_8  [key=2, style=dotted];
m2_626 -> m2_566  [key=0, style=solid];
m2_626 -> m2_639  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_626 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_626 -> m2_643  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m2_628 -> m2_629  [key=0, style=solid];
m2_629 -> m2_630  [key=0, style=solid];
m2_629 -> m2_261  [key=2, style=dotted];
m2_630 -> m2_566  [key=0, style=solid];
m2_630 -> m2_632  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_632 -> m2_633  [key=0, style=solid];
m2_633 -> m2_634  [key=0, style=solid];
m2_633 -> m2_262  [key=2, style=dotted];
m2_634 -> m2_566  [key=0, style=solid];
m2_634 -> m2_637  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_634 -> m2_638  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_636 -> m2_637  [key=0, style=solid];
m2_638 -> m2_639  [key=0, style=solid];
m2_638 -> m2_638  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_638 -> m2_640  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_638 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_638 -> m2_643  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_638 -> m2_645  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_642 -> m2_643  [key=0, style=solid];
m2_642 -> m2_644  [key=0, style=solid];
m2_643 -> m2_644  [key=0, style=solid];
m2_643 -> m2_654  [key=2, style=dotted];
m2_645 -> m2_646  [key=0, style=solid];
m2_645 -> m2_645  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m2_641 -> m2_642  [key=0, style=solid];
m2_641 -> m2_8  [key=2, style=dotted];
m2_644 -> m2_645  [key=0, style=solid];
m2_644 -> m2_653  [key=2, style=dotted];
m2_646 -> m2_647  [key=0, style=solid];
m2_647 -> m2_648  [key=0, style=solid];
m2_648 -> m2_59  [key=0, style=bold, color=blue];
m2_172 -> m2_719  [key=0, style=solid];
m2_172 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m2_172 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m2_719 -> m2_720  [key=0, style=solid];
m2_719 -> m2_757  [key=0, style=solid];
m2_720 -> m2_721  [key=0, style=solid];
m2_720 -> m2_754  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_720 -> m2_756  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_721 -> m2_722  [key=0, style=solid];
m2_721 -> m2_728  [key=0, style=solid];
m2_721 -> m2_732  [key=0, style=solid];
m2_721 -> m2_736  [key=0, style=solid];
m2_721 -> m2_740  [key=0, style=solid];
m2_721 -> m2_743  [key=0, style=solid];
m2_721 -> m2_747  [key=0, style=solid];
m2_721 -> m2_750  [key=0, style=solid];
m2_721 -> m2_752  [key=0, style=solid];
m2_721 -> m2_754  [key=0, style=solid];
m2_754 -> m2_755  [key=0, style=solid];
m2_754 -> m2_756  [key=0, style=solid];
m2_754 -> m2_263  [key=2, style=dotted];
m2_756 -> m2_757  [key=0, style=solid];
m2_756 -> m2_176  [key=2, style=dotted];
m2_756 -> m2_177  [key=2, style=dotted];
m2_722 -> m2_723  [key=0, style=solid];
m2_728 -> m2_729  [key=0, style=solid];
m2_732 -> m2_733  [key=0, style=solid];
m2_736 -> m2_737  [key=0, style=solid];
m2_740 -> m2_741  [key=0, style=solid];
m2_743 -> m2_744  [key=0, style=solid];
m2_747 -> m2_748  [key=0, style=solid];
m2_750 -> m2_751  [key=0, style=solid];
m2_752 -> m2_753  [key=0, style=solid];
m2_723 -> m2_724  [key=0, style=solid];
m2_723 -> m2_727  [key=0, style=solid];
m2_724 -> m2_725  [key=0, style=solid];
m2_724 -> m2_719  [key=0, style=solid];
m2_724 -> m2_83  [key=2, style=dotted];
m2_727 -> m2_719  [key=0, style=solid];
m2_725 -> m2_726  [key=0, style=solid];
m2_726 -> m2_757  [key=0, style=solid];
m2_729 -> m2_730  [key=0, style=solid];
m2_730 -> m2_731  [key=0, style=solid];
m2_730 -> m2_174  [key=2, style=dotted];
m2_731 -> m2_757  [key=0, style=solid];
m2_733 -> m2_734  [key=0, style=solid];
m2_734 -> m2_735  [key=0, style=solid];
m2_734 -> m2_174  [key=2, style=dotted];
m2_735 -> m2_757  [key=0, style=solid];
m2_737 -> m2_738  [key=0, style=solid];
m2_738 -> m2_739  [key=0, style=solid];
m2_738 -> m2_174  [key=2, style=dotted];
m2_739 -> m2_757  [key=0, style=solid];
m2_741 -> m2_742  [key=0, style=solid];
m2_741 -> m2_175  [key=2, style=dotted];
m2_742 -> m2_757  [key=0, style=solid];
m2_744 -> m2_745  [key=0, style=solid];
m2_745 -> m2_746  [key=0, style=solid];
m2_745 -> m2_448  [key=2, style=dotted];
m2_746 -> m2_757  [key=0, style=solid];
m2_748 -> m2_749  [key=0, style=solid];
m2_749 -> m2_719  [key=0, style=solid];
m2_751 -> m2_719  [key=0, style=solid];
m2_751 -> m2_261  [key=2, style=dotted];
m2_753 -> m2_719  [key=0, style=solid];
m2_753 -> m2_262  [key=2, style=dotted];
m2_755 -> m2_719  [key=0, style=solid];
m2_757 -> m2_172  [key=0, style=bold, color=blue];
m2_254 -> m2_551  [key=0, style=solid];
m2_254 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNullChar"];
m2_254 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNullChar"];
m2_551 -> m2_552  [key=0, style=solid];
m2_551 -> m2_555  [key=0, style=solid];
m2_552 -> m2_553  [key=0, style=solid];
m2_552 -> m2_556  [key=0, style=solid];
m2_552 -> m2_83  [key=2, style=dotted];
m2_555 -> m2_556  [key=0, style=solid];
m2_553 -> m2_554  [key=0, style=solid];
m2_556 -> m2_557  [key=0, style=solid];
m2_554 -> m2_557  [key=0, style=solid];
m2_557 -> m2_254  [key=0, style=bold, color=blue];
m2_61 -> m2_0  [key=3, color=darkorchid, style=bold, label="Field variable System.IO.TextReader _reader"];
m2_1088 -> m2_1089  [key=0, style=solid];
m2_1088 -> m2_1058  [key=3, color=darkorchid, style=bold, label="Parameter variable string number"];
m2_1089 -> m2_1090  [key=0, style=solid];
m2_1089 -> m2_1091  [key=2, style=dotted];
m2_1090 -> m2_1088  [key=0, style=bold, color=blue];
m2_173 -> m2_930  [key=0, style=solid];
m2_173 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_173 -> m2_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool oneOrMore"];
m2_930 -> m2_931  [key=0, style=solid];
m2_930 -> m2_932  [key=1, style=dashed, color=darkseagreen4, label=finished];
m2_930 -> m2_31  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m2_948 -> m2_949  [key=0, style=solid];
m2_931 -> m2_932  [key=0, style=solid];
m2_931 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m2_931 -> m2_31  [key=3, color=darkorchid, style=bold, label="Local variable bool ateWhitespace"];
m2_932 -> m2_933  [key=0, style=solid];
m2_932 -> m2_948  [key=0, style=solid];
m2_933 -> m2_934  [key=0, style=solid];
m2_933 -> m2_944  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_934 -> m2_935  [key=0, style=solid];
m2_934 -> m2_940  [key=0, style=solid];
m2_934 -> m2_942  [key=0, style=solid];
m2_934 -> m2_944  [key=0, style=solid];
m2_944 -> m2_945  [key=0, style=solid];
m2_944 -> m2_947  [key=0, style=solid];
m2_944 -> m2_263  [key=2, style=dotted];
m2_935 -> m2_936  [key=0, style=solid];
m2_940 -> m2_941  [key=0, style=solid];
m2_942 -> m2_943  [key=0, style=solid];
m2_936 -> m2_937  [key=0, style=solid];
m2_936 -> m2_939  [key=0, style=solid];
m2_937 -> m2_938  [key=0, style=solid];
m2_937 -> m2_932  [key=0, style=solid];
m2_937 -> m2_83  [key=2, style=dotted];
m2_939 -> m2_932  [key=0, style=solid];
m2_938 -> m2_932  [key=0, style=solid];
m2_941 -> m2_932  [key=0, style=solid];
m2_941 -> m2_261  [key=2, style=dotted];
m2_943 -> m2_932  [key=0, style=solid];
m2_943 -> m2_262  [key=2, style=dotted];
m2_945 -> m2_946  [key=0, style=solid];
m2_945 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m2_947 -> m2_932  [key=0, style=solid];
m2_946 -> m2_932  [key=0, style=solid];
m2_949 -> m2_173  [key=0, style=bold, color=blue];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_120 -> m2_125  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnsureChars"];
m2_120 -> m2_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_120 -> m2_205  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m2_120 -> m2_530  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m2_120 -> m2_69  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m2_120 -> m2_661  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m2_120 -> m2_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_120 -> m2_261  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_123  [key=0, style=solid];
m2_122 -> m2_124  [key=0, style=solid];
m2_122 -> m2_125  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_120  [key=0, style=bold, color=blue];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_185  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? ReadAsDateTime"];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_185  [key=2, style=dotted];
m2_184 -> m2_182  [key=0, style=bold, color=blue];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_86 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_86 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_86 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_86 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_86 -> m2_83  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_86 -> m2_125  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m2_86 -> m2_205  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m2_86 -> m2_109  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_108  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_96  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_116  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_103  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_117  [key=2, style=dotted];
m2_98 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=dst];
m2_98 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=dst];
m2_88 -> m2_115  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m2_96 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m2_96 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m2_96 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m2_96 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m2_96 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_117  [key=2, style=dotted];
m2_92 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=dst];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_68  [key=2, style=dotted];
m2_95 -> m2_108  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_118  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_68  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_68  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_102 -> m2_105  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_118  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_119  [key=2, style=dotted];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m2_109 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_113  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_115 -> m2_86  [key=0, style=bold, color=blue];
m2_259 -> m2_442  [key=0, style=solid];
m2_442 -> m2_443  [key=0, style=solid];
m2_443 -> m2_444  [key=0, style=solid];
m2_443 -> m2_446  [key=0, style=solid];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_174  [key=2, style=dotted];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_448  [key=2, style=dotted];
m2_445 -> m2_447  [key=0, style=solid];
m2_445 -> m2_260  [key=2, style=dotted];
m2_447 -> m2_259  [key=0, style=bold, color=blue];
m2_649 -> m2_660  [key=0, style=solid];
m2_660 -> m2_661  [key=0, style=solid];
m2_660 -> m2_666  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_660 -> m2_662  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m2_661 -> m2_662  [key=0, style=solid];
m2_661 -> m2_665  [key=0, style=solid];
m2_661 -> m2_120  [key=2, style=dotted];
m2_666 -> m2_667  [key=0, style=solid];
m2_662 -> m2_663  [key=0, style=solid];
m2_662 -> m2_668  [key=2, style=dotted];
m2_662 -> m2_669  [key=2, style=dotted];
m2_665 -> m2_667  [key=0, style=solid];
m2_665 -> m2_177  [key=2, style=dotted];
m2_663 -> m2_664  [key=0, style=solid];
m2_663 -> m2_666  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m2_664 -> m2_666  [key=0, style=solid];
m2_667 -> m2_649  [key=0, style=bold, color=blue];
m2_170 -> m2_835  [key=0, style=solid];
m2_170 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m2_170 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m2_835 -> m2_836  [key=0, style=solid];
m2_835 -> m2_913  [key=0, style=solid];
m2_836 -> m2_837  [key=0, style=solid];
m2_836 -> m2_845  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_836 -> m2_907  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_836 -> m2_909  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_836 -> m2_912  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_837 -> m2_838  [key=0, style=solid];
m2_837 -> m2_843  [key=0, style=solid];
m2_837 -> m2_847  [key=0, style=solid];
m2_837 -> m2_850  [key=0, style=solid];
m2_837 -> m2_853  [key=0, style=solid];
m2_837 -> m2_864  [key=0, style=solid];
m2_837 -> m2_867  [key=0, style=solid];
m2_837 -> m2_870  [key=0, style=solid];
m2_837 -> m2_875  [key=0, style=solid];
m2_837 -> m2_878  [key=0, style=solid];
m2_837 -> m2_881  [key=0, style=solid];
m2_837 -> m2_885  [key=0, style=solid];
m2_837 -> m2_889  [key=0, style=solid];
m2_837 -> m2_893  [key=0, style=solid];
m2_837 -> m2_896  [key=0, style=solid];
m2_837 -> m2_900  [key=0, style=solid];
m2_837 -> m2_902  [key=0, style=solid];
m2_837 -> m2_904  [key=0, style=solid];
m2_837 -> m2_907  [key=0, style=solid];
m2_845 -> m2_846  [key=0, style=solid];
m2_845 -> m2_17  [key=2, style=dotted];
m2_907 -> m2_908  [key=0, style=solid];
m2_907 -> m2_909  [key=0, style=solid];
m2_907 -> m2_263  [key=2, style=dotted];
m2_909 -> m2_910  [key=0, style=solid];
m2_909 -> m2_912  [key=0, style=solid];
m2_909 -> m2_921  [key=2, style=dotted];
m2_912 -> m2_913  [key=0, style=solid];
m2_912 -> m2_260  [key=2, style=dotted];
m2_838 -> m2_839  [key=0, style=solid];
m2_843 -> m2_844  [key=0, style=solid];
m2_847 -> m2_848  [key=0, style=solid];
m2_850 -> m2_851  [key=0, style=solid];
m2_853 -> m2_854  [key=0, style=solid];
m2_864 -> m2_865  [key=0, style=solid];
m2_867 -> m2_868  [key=0, style=solid];
m2_870 -> m2_871  [key=0, style=solid];
m2_875 -> m2_876  [key=0, style=solid];
m2_878 -> m2_879  [key=0, style=solid];
m2_881 -> m2_882  [key=0, style=solid];
m2_885 -> m2_886  [key=0, style=solid];
m2_889 -> m2_890  [key=0, style=solid];
m2_893 -> m2_894  [key=0, style=solid];
m2_896 -> m2_897  [key=0, style=solid];
m2_900 -> m2_901  [key=0, style=solid];
m2_902 -> m2_903  [key=0, style=solid];
m2_904 -> m2_905  [key=0, style=solid];
m2_839 -> m2_840  [key=0, style=solid];
m2_839 -> m2_842  [key=0, style=solid];
m2_840 -> m2_841  [key=0, style=solid];
m2_840 -> m2_835  [key=0, style=solid];
m2_840 -> m2_83  [key=2, style=dotted];
m2_842 -> m2_835  [key=0, style=solid];
m2_841 -> m2_913  [key=0, style=solid];
m2_844 -> m2_845  [key=0, style=solid];
m2_846 -> m2_913  [key=0, style=solid];
m2_848 -> m2_849  [key=0, style=solid];
m2_848 -> m2_914  [key=2, style=dotted];
m2_849 -> m2_913  [key=0, style=solid];
m2_851 -> m2_852  [key=0, style=solid];
m2_851 -> m2_915  [key=2, style=dotted];
m2_852 -> m2_913  [key=0, style=solid];
m2_854 -> m2_855  [key=0, style=solid];
m2_854 -> m2_861  [key=0, style=solid];
m2_854 -> m2_120  [key=2, style=dotted];
m2_855 -> m2_856  [key=0, style=solid];
m2_855 -> m2_858  [key=1, style=dashed, color=darkseagreen4, label=next];
m2_861 -> m2_862  [key=0, style=solid];
m2_856 -> m2_857  [key=0, style=solid];
m2_856 -> m2_858  [key=0, style=solid];
m2_858 -> m2_859  [key=0, style=solid];
m2_858 -> m2_860  [key=0, style=solid];
m2_857 -> m2_863  [key=0, style=solid];
m2_857 -> m2_540  [key=2, style=dotted];
m2_859 -> m2_863  [key=0, style=solid];
m2_859 -> m2_916  [key=2, style=dotted];
m2_860 -> m2_913  [key=0, style=solid];
m2_860 -> m2_260  [key=2, style=dotted];
m2_862 -> m2_913  [key=0, style=solid];
m2_862 -> m2_541  [key=2, style=dotted];
m2_863 -> m2_913  [key=0, style=solid];
m2_865 -> m2_866  [key=0, style=solid];
m2_865 -> m2_917  [key=2, style=dotted];
m2_866 -> m2_913  [key=0, style=solid];
m2_868 -> m2_869  [key=0, style=solid];
m2_868 -> m2_918  [key=2, style=dotted];
m2_869 -> m2_913  [key=0, style=solid];
m2_871 -> m2_872  [key=0, style=solid];
m2_871 -> m2_873  [key=0, style=solid];
m2_871 -> m2_120  [key=2, style=dotted];
m2_872 -> m2_874  [key=0, style=solid];
m2_872 -> m2_919  [key=2, style=dotted];
m2_873 -> m2_874  [key=0, style=solid];
m2_873 -> m2_358  [key=2, style=dotted];
m2_874 -> m2_913  [key=0, style=solid];
m2_876 -> m2_877  [key=0, style=solid];
m2_876 -> m2_175  [key=2, style=dotted];
m2_877 -> m2_913  [key=0, style=solid];
m2_879 -> m2_880  [key=0, style=solid];
m2_879 -> m2_920  [key=2, style=dotted];
m2_880 -> m2_913  [key=0, style=solid];
m2_882 -> m2_883  [key=0, style=solid];
m2_883 -> m2_884  [key=0, style=solid];
m2_883 -> m2_174  [key=2, style=dotted];
m2_884 -> m2_913  [key=0, style=solid];
m2_886 -> m2_887  [key=0, style=solid];
m2_887 -> m2_888  [key=0, style=solid];
m2_887 -> m2_174  [key=2, style=dotted];
m2_888 -> m2_913  [key=0, style=solid];
m2_890 -> m2_891  [key=0, style=solid];
m2_891 -> m2_892  [key=0, style=solid];
m2_891 -> m2_174  [key=2, style=dotted];
m2_892 -> m2_913  [key=0, style=solid];
m2_894 -> m2_895  [key=0, style=solid];
m2_894 -> m2_174  [key=2, style=dotted];
m2_895 -> m2_913  [key=0, style=solid];
m2_897 -> m2_898  [key=0, style=solid];
m2_898 -> m2_899  [key=0, style=solid];
m2_898 -> m2_174  [key=2, style=dotted];
m2_899 -> m2_913  [key=0, style=solid];
m2_901 -> m2_835  [key=0, style=solid];
m2_901 -> m2_261  [key=2, style=dotted];
m2_903 -> m2_835  [key=0, style=solid];
m2_903 -> m2_262  [key=2, style=dotted];
m2_905 -> m2_906  [key=0, style=solid];
m2_906 -> m2_835  [key=0, style=solid];
m2_908 -> m2_835  [key=0, style=solid];
m2_910 -> m2_911  [key=0, style=solid];
m2_910 -> m2_358  [key=2, style=dotted];
m2_911 -> m2_913  [key=0, style=solid];
m2_913 -> m2_170  [key=0, style=bold, color=blue];
m2_358 -> m2_986  [key=0, style=solid];
m2_358 -> m2_996  [key=1, style=dashed, color=red, label="Newtonsoft.Json.ReadType"];
m2_358 -> m2_1013  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_358 -> m2_1028  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m2_358 -> m2_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_358 -> m2_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m2_986 -> m2_987  [key=0, style=solid];
m2_986 -> m2_58  [key=2, style=dotted];
m2_996 -> m2_997  [key=0, style=solid, color=red];
m2_996 -> m2_1013  [key=0, style=solid, color=red];
m2_1013 -> m2_1014  [key=0, style=solid];
m2_1013 -> m2_1028  [key=0, style=solid];
m2_1028 -> m2_1029  [key=0, style=solid];
m2_1028 -> m2_1043  [key=0, style=solid];
m2_987 -> m2_988  [key=0, style=solid];
m2_987 -> m2_994  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_987 -> m2_995  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_987 -> m2_998  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_987 -> m2_1015  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_987 -> m2_1030  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_987 -> m2_1044  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m2_988 -> m2_989  [key=0, style=solid];
m2_988 -> m2_991  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m2_994 -> m2_995  [key=0, style=solid];
m2_994 -> m2_1077  [key=2, style=dotted];
m2_994 -> m2_997  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m2_994 -> m2_1014  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m2_994 -> m2_1029  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m2_994 -> m2_1043  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m2_995 -> m2_996  [key=0, style=solid, color=red];
m2_995 -> m2_999  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m2_995 -> m2_1016  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m2_995 -> m2_1031  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m2_995 -> m2_1046  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m2_998 -> m2_1012  [key=0, style=solid];
m2_998 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1015 -> m2_1027  [key=0, style=solid];
m2_1015 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1030 -> m2_1042  [key=0, style=solid];
m2_1030 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1044 -> m2_1045  [key=0, style=solid];
m2_1044 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_989 -> m2_990  [key=0, style=solid];
m2_989 -> m2_670  [key=2, style=dotted];
m2_991 -> m2_992  [key=0, style=solid];
m2_991 -> m2_653  [key=2, style=dotted];
m2_990 -> m2_991  [key=0, style=solid];
m2_990 -> m2_60  [key=2, style=dotted];
m2_992 -> m2_993  [key=0, style=solid];
m2_992 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_992 -> m2_1001  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_992 -> m2_1005  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_992 -> m2_1023  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_992 -> m2_1038  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_992 -> m2_1052  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_992 -> m2_1088  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_992 -> m2_1065  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_992 -> m2_1069  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m2_993 -> m2_994  [key=0, style=solid];
m2_1075 -> m2_1076  [key=0, style=solid];
m2_1075 -> m2_65  [key=2, style=dotted];
m2_997 -> m2_998  [key=0, style=solid];
m2_997 -> m2_999  [key=0, style=solid];
m2_1014 -> m2_1015  [key=0, style=solid];
m2_1014 -> m2_1016  [key=0, style=solid];
m2_1029 -> m2_1030  [key=0, style=solid];
m2_1029 -> m2_1031  [key=0, style=solid];
m2_1043 -> m2_1044  [key=0, style=solid];
m2_1043 -> m2_1046  [key=0, style=solid];
m2_999 -> m2_1000  [key=0, style=solid];
m2_999 -> m2_1005  [key=0, style=solid];
m2_1016 -> m2_1017  [key=0, style=solid];
m2_1016 -> m2_1022  [key=0, style=solid];
m2_1031 -> m2_1032  [key=0, style=solid];
m2_1031 -> m2_1037  [key=0, style=solid];
m2_1046 -> m2_1047  [key=0, style=solid];
m2_1046 -> m2_1052  [key=0, style=solid];
m2_1000 -> m2_1001  [key=0, style=solid];
m2_1000 -> m2_61  [key=2, style=dotted];
m2_1000 -> m2_1004  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1005 -> m2_1006  [key=0, style=solid];
m2_1001 -> m2_1002  [key=0, style=solid];
m2_1001 -> m2_1078  [key=2, style=dotted];
m2_1001 -> m2_1079  [key=2, style=dotted];
m2_1004 -> m2_1076  [key=0, style=solid];
m2_1004 -> m2_176  [key=2, style=dotted];
m2_1004 -> m2_1080  [key=2, style=dotted];
m2_1002 -> m2_1003  [key=0, style=solid];
m2_1002 -> m2_1012  [key=0, style=solid];
m2_1002 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1003 -> m2_1004  [key=0, style=solid];
m2_1012 -> m2_1074  [key=0, style=solid];
m2_1012 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1006 -> m2_1007  [key=0, style=solid];
m2_1006 -> m2_1081  [key=2, style=dotted];
m2_1006 -> m2_1008  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_1006 -> m2_1009  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m2_1007 -> m2_1008  [key=0, style=solid];
m2_1007 -> m2_1009  [key=0, style=solid];
m2_1008 -> m2_1012  [key=0, style=solid];
m2_1008 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1009 -> m2_1010  [key=0, style=solid];
m2_1009 -> m2_1011  [key=0, style=solid];
m2_1010 -> m2_1076  [key=0, style=solid];
m2_1010 -> m2_61  [key=2, style=dotted];
m2_1010 -> m2_176  [key=2, style=dotted];
m2_1010 -> m2_177  [key=2, style=dotted];
m2_1011 -> m2_1076  [key=0, style=solid];
m2_1011 -> m2_61  [key=2, style=dotted];
m2_1011 -> m2_176  [key=2, style=dotted];
m2_1011 -> m2_177  [key=2, style=dotted];
m2_1017 -> m2_1018  [key=0, style=solid];
m2_1017 -> m2_61  [key=2, style=dotted];
m2_1017 -> m2_1021  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1022 -> m2_1023  [key=0, style=solid];
m2_1022 -> m2_61  [key=2, style=dotted];
m2_1022 -> m2_1024  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1018 -> m2_1019  [key=0, style=solid];
m2_1018 -> m2_1078  [key=2, style=dotted];
m2_1018 -> m2_1082  [key=2, style=dotted];
m2_1021 -> m2_1076  [key=0, style=solid];
m2_1021 -> m2_176  [key=2, style=dotted];
m2_1021 -> m2_1080  [key=2, style=dotted];
m2_1019 -> m2_1020  [key=0, style=solid];
m2_1019 -> m2_1027  [key=0, style=solid];
m2_1019 -> m2_1083  [key=2, style=dotted];
m2_1019 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1020 -> m2_1021  [key=0, style=solid];
m2_1027 -> m2_1074  [key=0, style=solid];
m2_1027 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1023 -> m2_1024  [key=0, style=solid];
m2_1024 -> m2_1025  [key=0, style=solid];
m2_1024 -> m2_1026  [key=0, style=solid];
m2_1024 -> m2_1084  [key=2, style=dotted];
m2_1025 -> m2_1027  [key=0, style=solid];
m2_1025 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1026 -> m2_1076  [key=0, style=solid];
m2_1026 -> m2_61  [key=2, style=dotted];
m2_1026 -> m2_176  [key=2, style=dotted];
m2_1026 -> m2_177  [key=2, style=dotted];
m2_1032 -> m2_1033  [key=0, style=solid];
m2_1032 -> m2_61  [key=2, style=dotted];
m2_1032 -> m2_1036  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1037 -> m2_1038  [key=0, style=solid];
m2_1037 -> m2_61  [key=2, style=dotted];
m2_1037 -> m2_1039  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1033 -> m2_1034  [key=0, style=solid];
m2_1033 -> m2_1078  [key=2, style=dotted];
m2_1033 -> m2_1082  [key=2, style=dotted];
m2_1036 -> m2_1076  [key=0, style=solid];
m2_1036 -> m2_176  [key=2, style=dotted];
m2_1036 -> m2_1080  [key=2, style=dotted];
m2_1034 -> m2_1035  [key=0, style=solid];
m2_1034 -> m2_1042  [key=0, style=solid];
m2_1034 -> m2_1085  [key=2, style=dotted];
m2_1034 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1035 -> m2_1036  [key=0, style=solid];
m2_1042 -> m2_1074  [key=0, style=solid];
m2_1042 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1038 -> m2_1039  [key=0, style=solid];
m2_1039 -> m2_1040  [key=0, style=solid];
m2_1039 -> m2_1041  [key=0, style=solid];
m2_1039 -> m2_1086  [key=2, style=dotted];
m2_1040 -> m2_1042  [key=0, style=solid];
m2_1040 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1041 -> m2_1076  [key=0, style=solid];
m2_1041 -> m2_61  [key=2, style=dotted];
m2_1041 -> m2_176  [key=2, style=dotted];
m2_1041 -> m2_177  [key=2, style=dotted];
m2_1045 -> m2_1074  [key=0, style=solid];
m2_1045 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1047 -> m2_1048  [key=0, style=solid];
m2_1047 -> m2_61  [key=2, style=dotted];
m2_1047 -> m2_1050  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1052 -> m2_1053  [key=0, style=solid];
m2_1048 -> m2_1049  [key=0, style=solid];
m2_1048 -> m2_1051  [key=0, style=solid];
m2_1048 -> m2_1078  [key=2, style=dotted];
m2_1048 -> m2_1082  [key=2, style=dotted];
m2_1048 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1050 -> m2_1076  [key=0, style=solid];
m2_1050 -> m2_176  [key=2, style=dotted];
m2_1050 -> m2_1080  [key=2, style=dotted];
m2_1049 -> m2_1050  [key=0, style=solid];
m2_1051 -> m2_1074  [key=0, style=solid];
m2_1051 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1053 -> m2_1054  [key=0, style=solid];
m2_1053 -> m2_1087  [key=2, style=dotted];
m2_1053 -> m2_1055  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_1053 -> m2_1057  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m2_1054 -> m2_1055  [key=0, style=solid];
m2_1054 -> m2_1057  [key=0, style=solid];
m2_1055 -> m2_1056  [key=0, style=solid];
m2_1055 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1057 -> m2_1058  [key=0, style=solid];
m2_1057 -> m2_1063  [key=0, style=solid];
m2_1056 -> m2_1074  [key=0, style=solid];
m2_1056 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1058 -> m2_1059  [key=0, style=solid];
m2_1058 -> m2_61  [key=2, style=dotted];
m2_1058 -> m2_1061  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1063 -> m2_1064  [key=0, style=solid];
m2_1063 -> m2_61  [key=2, style=dotted];
m2_1063 -> m2_1066  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1063 -> m2_1068  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1063 -> m2_1070  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1063 -> m2_1072  [key=1, style=dashed, color=darkseagreen4, label=number];
m2_1059 -> m2_1060  [key=0, style=solid];
m2_1059 -> m2_1061  [key=0, style=solid];
m2_1061 -> m2_1062  [key=0, style=solid];
m2_1061 -> m2_1088  [key=2, style=dotted];
m2_1061 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1060 -> m2_1076  [key=0, style=solid];
m2_1060 -> m2_61  [key=2, style=dotted];
m2_1060 -> m2_176  [key=2, style=dotted];
m2_1060 -> m2_177  [key=2, style=dotted];
m2_1062 -> m2_1074  [key=0, style=solid];
m2_1062 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1064 -> m2_1065  [key=0, style=solid];
m2_1064 -> m2_1069  [key=0, style=solid];
m2_1066 -> m2_1067  [key=0, style=solid];
m2_1066 -> m2_1068  [key=0, style=solid];
m2_1066 -> m2_1084  [key=2, style=dotted];
m2_1068 -> m2_1076  [key=0, style=solid];
m2_1068 -> m2_176  [key=2, style=dotted];
m2_1068 -> m2_177  [key=2, style=dotted];
m2_1070 -> m2_1071  [key=0, style=solid];
m2_1070 -> m2_1072  [key=0, style=solid];
m2_1070 -> m2_1086  [key=2, style=dotted];
m2_1072 -> m2_1076  [key=0, style=solid];
m2_1072 -> m2_176  [key=2, style=dotted];
m2_1072 -> m2_177  [key=2, style=dotted];
m2_1065 -> m2_1066  [key=0, style=solid];
m2_1069 -> m2_1070  [key=0, style=solid];
m2_1067 -> m2_1073  [key=0, style=solid];
m2_1067 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1071 -> m2_1073  [key=0, style=solid];
m2_1071 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m2_1073 -> m2_1074  [key=0, style=solid];
m2_1073 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m2_1074 -> m2_1075  [key=0, style=solid];
m2_1074 -> m2_714  [key=2, style=dotted];
m2_1076 -> m2_358  [key=0, style=bold, color=blue];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_181  [key=3, color=darkorchid, style=bold, label="method methodReturn int? ReadAsInt32"];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_181  [key=2, style=dotted];
m2_180 -> m2_178  [key=0, style=bold, color=blue];
m2_171 -> m2_758  [key=0, style=solid];
m2_171 -> m2_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m2_171 -> m2_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m2_171 -> m2_784  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m2_758 -> m2_759  [key=0, style=solid];
m2_758 -> m2_783  [key=0, style=solid];
m2_759 -> m2_760  [key=0, style=solid];
m2_759 -> m2_780  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m2_760 -> m2_761  [key=0, style=solid];
m2_760 -> m2_766  [key=0, style=solid];
m2_760 -> m2_770  [key=0, style=solid];
m2_760 -> m2_773  [key=0, style=solid];
m2_760 -> m2_775  [key=0, style=solid];
m2_760 -> m2_777  [key=0, style=solid];
m2_760 -> m2_780  [key=0, style=solid];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_782  [key=0, style=solid];
m2_780 -> m2_263  [key=2, style=dotted];
m2_761 -> m2_762  [key=0, style=solid];
m2_766 -> m2_767  [key=0, style=solid];
m2_770 -> m2_771  [key=0, style=solid];
m2_773 -> m2_774  [key=0, style=solid];
m2_775 -> m2_776  [key=0, style=solid];
m2_777 -> m2_778  [key=0, style=solid];
m2_762 -> m2_763  [key=0, style=solid];
m2_762 -> m2_765  [key=0, style=solid];
m2_763 -> m2_764  [key=0, style=solid];
m2_763 -> m2_758  [key=0, style=solid];
m2_763 -> m2_83  [key=2, style=dotted];
m2_765 -> m2_758  [key=0, style=solid];
m2_764 -> m2_783  [key=0, style=solid];
m2_767 -> m2_768  [key=0, style=solid];
m2_767 -> m2_174  [key=2, style=dotted];
m2_768 -> m2_769  [key=0, style=solid];
m2_769 -> m2_783  [key=0, style=solid];
m2_771 -> m2_772  [key=0, style=solid];
m2_771 -> m2_175  [key=2, style=dotted];
m2_772 -> m2_783  [key=0, style=solid];
m2_774 -> m2_758  [key=0, style=solid];
m2_774 -> m2_261  [key=2, style=dotted];
m2_776 -> m2_758  [key=0, style=solid];
m2_776 -> m2_262  [key=2, style=dotted];
m2_778 -> m2_779  [key=0, style=solid];
m2_779 -> m2_758  [key=0, style=solid];
m2_781 -> m2_758  [key=0, style=solid];
m2_782 -> m2_783  [key=0, style=solid];
m2_782 -> m2_784  [key=2, style=dotted];
m2_783 -> m2_171  [key=0, style=bold, color=blue];
m2_1231 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_313  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_314  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_315  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_438  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_474  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_498  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_536  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_537  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_548  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_549  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_553  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_558  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_559  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_572  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_573  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_577  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_600  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_601  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_629  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_630  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_643  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_661  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_664  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_665  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_675  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_676  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_708  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_709  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_712  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_720  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_723  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_725  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_729  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_733  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_737  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_738  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_744  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_749  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_751  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_753  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_755  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_756  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_759  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_762  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_763  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_774  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_776  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_781  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_782  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_785  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_788  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_790  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_791  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_794  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_796  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_799  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_801  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_802  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_803  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_804  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_805  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_806  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_807  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_808  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_809  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_818  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_822  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_823  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_824  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_827  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_828  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_829  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_831  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_833  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_836  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_839  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_840  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_842  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_845  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_848  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_851  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_854  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_855  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_857  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_859  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_860  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_861  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_862  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_865  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_868  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_871  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_872  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_876  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_879  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_882  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_883  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_886  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_887  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_890  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_891  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_894  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_897  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_901  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_908  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_910  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_912  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_922  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_923  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_925  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_926  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_927  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_928  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_937  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_939  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_941  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_943  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_946  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_950  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_951  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_952  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_955  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_957  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_958  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_959  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_960  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_961  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_963  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_965  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_966  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_968  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_969  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_971  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_972  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_975  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_977  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_978  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_979  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_980  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_981  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_982  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_983  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_984  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_986  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_987  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_988  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_989  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_990  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_991  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_994  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_995  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1004  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1006  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1010  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1011  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1017  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1021  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1022  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1026  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1032  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1036  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1037  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1041  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1047  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1050  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1053  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1058  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1060  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1063  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1064  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1068  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1072  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1074  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1075  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1092  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1094  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1096  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1098  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m2_1231 -> m2_1223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m3_839 -> m3_840  [key=0, style=solid];
m3_840 -> m3_21  [key=2, style=dotted];
m3_840 -> m3_22  [key=2, style=dotted];
m3_840 -> m3_841  [key=0, style=solid];
m3_840 -> m3_844  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_841 -> m3_842  [key=0, style=solid];
m3_841 -> m3_172  [key=2, style=dotted];
m3_841 -> m3_843  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_842 -> m3_839  [key=0, style=bold, color=blue];
m3_1869 -> m3_1870  [key=0, style=solid];
m3_1870 -> m3_21  [key=2, style=dotted];
m3_1870 -> m3_22  [key=2, style=dotted];
m3_1870 -> m3_1871  [key=0, style=solid];
m3_1870 -> m3_1872  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1870 -> m3_1873  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1870 -> m3_1875  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1870 -> m3_1876  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1871 -> m3_23  [key=2, style=dotted];
m3_1871 -> m3_24  [key=2, style=dotted];
m3_1871 -> m3_1872  [key=0, style=solid];
m3_1872 -> m3_23  [key=2, style=dotted];
m3_1872 -> m3_24  [key=2, style=dotted];
m3_1872 -> m3_1873  [key=0, style=solid];
m3_1875 -> m3_23  [key=2, style=dotted];
m3_1875 -> m3_24  [key=2, style=dotted];
m3_1875 -> m3_1876  [key=0, style=solid];
m3_1876 -> m3_23  [key=2, style=dotted];
m3_1876 -> m3_1877  [key=0, style=solid];
m3_1876 -> m3_158  [key=2, style=dotted];
m3_1874 -> m3_25  [key=2, style=dotted];
m3_1874 -> m3_1875  [key=0, style=solid];
m3_1873 -> m3_26  [key=2, style=dotted];
m3_1873 -> m3_1874  [key=0, style=solid];
m3_1877 -> m3_1869  [key=0, style=bold, color=blue];
m3_215 -> m3_216  [key=0, style=solid];
m3_217 -> m3_21  [key=2, style=dotted];
m3_217 -> m3_22  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_220  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_221  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_222  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_217 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_218 -> m3_23  [key=2, style=dotted];
m3_218 -> m3_24  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_220 -> m3_23  [key=2, style=dotted];
m3_220 -> m3_24  [key=2, style=dotted];
m3_220 -> m3_221  [key=0, style=solid];
m3_222 -> m3_23  [key=2, style=dotted];
m3_222 -> m3_24  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_225 -> m3_23  [key=2, style=dotted];
m3_225 -> m3_24  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_227 -> m3_23  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_158  [key=2, style=dotted];
m3_219 -> m3_25  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_221 -> m3_25  [key=2, style=dotted];
m3_221 -> m3_222  [key=0, style=solid];
m3_223 -> m3_25  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_224 -> m3_25  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_226 -> m3_25  [key=2, style=dotted];
m3_226 -> m3_227  [key=0, style=solid];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_216  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_228 -> m3_215  [key=0, style=bold, color=blue];
m3_1163 -> m3_1164  [key=0, style=solid];
m3_1166 -> m3_21  [key=2, style=dotted];
m3_1166 -> m3_1167  [key=0, style=solid];
m3_1166 -> m3_1168  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1169  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1170  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1171  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1172  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1173  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1174  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1175  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1176  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1177  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1178  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1166 -> m3_1179  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1165 -> m3_22  [key=2, style=dotted];
m3_1165 -> m3_1166  [key=0, style=solid];
m3_1168 -> m3_25  [key=2, style=dotted];
m3_1168 -> m3_1169  [key=0, style=solid];
m3_1170 -> m3_25  [key=2, style=dotted];
m3_1170 -> m3_1171  [key=0, style=solid];
m3_1171 -> m3_25  [key=2, style=dotted];
m3_1171 -> m3_1172  [key=0, style=solid];
m3_1173 -> m3_25  [key=2, style=dotted];
m3_1173 -> m3_1174  [key=0, style=solid];
m3_1174 -> m3_25  [key=2, style=dotted];
m3_1174 -> m3_1175  [key=0, style=solid];
m3_1176 -> m3_25  [key=2, style=dotted];
m3_1176 -> m3_1177  [key=0, style=solid];
m3_1177 -> m3_25  [key=2, style=dotted];
m3_1177 -> m3_1178  [key=0, style=solid];
m3_1179 -> m3_25  [key=2, style=dotted];
m3_1179 -> m3_1180  [key=0, style=solid];
m3_1167 -> m3_1168  [key=0, style=solid];
m3_1167 -> m3_378  [key=2, style=dotted];
m3_1169 -> m3_1170  [key=0, style=solid];
m3_1169 -> m3_378  [key=2, style=dotted];
m3_1172 -> m3_1173  [key=0, style=solid];
m3_1172 -> m3_378  [key=2, style=dotted];
m3_1175 -> m3_1176  [key=0, style=solid];
m3_1175 -> m3_378  [key=2, style=dotted];
m3_1178 -> m3_1179  [key=0, style=solid];
m3_1178 -> m3_378  [key=2, style=dotted];
m3_1164 -> m3_1165  [key=0, style=solid];
m3_1164 -> m3_1164  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m3_1180 -> m3_1163  [key=0, style=bold, color=blue];
m3_674 -> m3_675  [key=0, style=solid];
m3_675 -> m3_21  [key=2, style=dotted];
m3_675 -> m3_22  [key=2, style=dotted];
m3_675 -> m3_676  [key=0, style=solid];
m3_675 -> m3_679  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_676 -> m3_677  [key=0, style=solid];
m3_676 -> m3_172  [key=2, style=dotted];
m3_676 -> m3_678  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_677 -> m3_674  [key=0, style=bold, color=blue];
m3_1543 -> m3_1544  [key=0, style=solid];
m3_1545 -> m3_21  [key=2, style=dotted];
m3_1545 -> m3_22  [key=2, style=dotted];
m3_1545 -> m3_1546  [key=0, style=solid];
m3_1545 -> m3_1547  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1548  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1552  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1545 -> m3_1555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1546 -> m3_23  [key=2, style=dotted];
m3_1546 -> m3_24  [key=2, style=dotted];
m3_1546 -> m3_1547  [key=0, style=solid];
m3_1548 -> m3_23  [key=2, style=dotted];
m3_1548 -> m3_24  [key=2, style=dotted];
m3_1548 -> m3_1549  [key=0, style=solid];
m3_1554 -> m3_23  [key=2, style=dotted];
m3_1554 -> m3_24  [key=2, style=dotted];
m3_1554 -> m3_1555  [key=0, style=solid];
m3_1547 -> m3_25  [key=2, style=dotted];
m3_1547 -> m3_1548  [key=0, style=solid];
m3_1549 -> m3_25  [key=2, style=dotted];
m3_1549 -> m3_1550  [key=0, style=solid];
m3_1551 -> m3_25  [key=2, style=dotted];
m3_1551 -> m3_1552  [key=0, style=solid];
m3_1552 -> m3_25  [key=2, style=dotted];
m3_1552 -> m3_1553  [key=0, style=solid];
m3_1553 -> m3_25  [key=2, style=dotted];
m3_1553 -> m3_1554  [key=0, style=solid];
m3_1553 -> m3_1484  [key=2, style=dotted];
m3_1553 -> m3_1557  [key=2, style=dotted];
m3_1555 -> m3_25  [key=2, style=dotted];
m3_1555 -> m3_1556  [key=0, style=solid];
m3_1544 -> m3_1545  [key=0, style=solid];
m3_1544 -> m3_1544  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1550 -> m3_1551  [key=0, style=solid];
m3_1550 -> m3_1386  [key=2, style=dotted];
m3_1556 -> m3_1543  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_18  [key=0, style=solid];
m3_880 -> m3_881  [key=0, style=solid];
m3_887 -> m3_21  [key=2, style=dotted];
m3_887 -> m3_888  [key=0, style=solid];
m3_887 -> m3_358  [key=2, style=dotted];
m3_887 -> m3_396  [key=2, style=dotted];
m3_887 -> m3_397  [key=2, style=dotted];
m3_887 -> m3_889  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_890  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_891  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_892  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_893  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_894  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_895  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_896  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_897  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_901  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_902  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_903  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_904  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_905  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_906  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_907  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_909  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_910  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_911  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_912  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_913  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_914  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_915  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_916  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_917  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_918  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_919  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_920  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_921  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_887 -> m3_922  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_884 -> m3_22  [key=2, style=dotted];
m3_884 -> m3_885  [key=0, style=solid];
m3_888 -> m3_23  [key=2, style=dotted];
m3_888 -> m3_24  [key=2, style=dotted];
m3_888 -> m3_889  [key=0, style=solid];
m3_890 -> m3_23  [key=2, style=dotted];
m3_890 -> m3_24  [key=2, style=dotted];
m3_890 -> m3_891  [key=0, style=solid];
m3_893 -> m3_23  [key=2, style=dotted];
m3_893 -> m3_24  [key=2, style=dotted];
m3_893 -> m3_894  [key=0, style=solid];
m3_895 -> m3_23  [key=2, style=dotted];
m3_895 -> m3_24  [key=2, style=dotted];
m3_895 -> m3_896  [key=0, style=solid];
m3_899 -> m3_23  [key=2, style=dotted];
m3_899 -> m3_24  [key=2, style=dotted];
m3_899 -> m3_900  [key=0, style=solid];
m3_902 -> m3_23  [key=2, style=dotted];
m3_902 -> m3_24  [key=2, style=dotted];
m3_902 -> m3_903  [key=0, style=solid];
m3_905 -> m3_23  [key=2, style=dotted];
m3_905 -> m3_24  [key=2, style=dotted];
m3_905 -> m3_906  [key=0, style=solid];
m3_908 -> m3_23  [key=2, style=dotted];
m3_908 -> m3_24  [key=2, style=dotted];
m3_908 -> m3_909  [key=0, style=solid];
m3_910 -> m3_23  [key=2, style=dotted];
m3_910 -> m3_24  [key=2, style=dotted];
m3_910 -> m3_911  [key=0, style=solid];
m3_912 -> m3_23  [key=2, style=dotted];
m3_912 -> m3_24  [key=2, style=dotted];
m3_912 -> m3_913  [key=0, style=solid];
m3_914 -> m3_23  [key=2, style=dotted];
m3_914 -> m3_24  [key=2, style=dotted];
m3_914 -> m3_915  [key=0, style=solid];
m3_917 -> m3_23  [key=2, style=dotted];
m3_917 -> m3_24  [key=2, style=dotted];
m3_917 -> m3_918  [key=0, style=solid];
m3_919 -> m3_23  [key=2, style=dotted];
m3_919 -> m3_24  [key=2, style=dotted];
m3_919 -> m3_920  [key=0, style=solid];
m3_921 -> m3_23  [key=2, style=dotted];
m3_921 -> m3_24  [key=2, style=dotted];
m3_921 -> m3_922  [key=0, style=solid];
m3_892 -> m3_25  [key=2, style=dotted];
m3_892 -> m3_893  [key=0, style=solid];
m3_907 -> m3_25  [key=2, style=dotted];
m3_907 -> m3_908  [key=0, style=solid];
m3_889 -> m3_25  [key=2, style=dotted];
m3_889 -> m3_890  [key=0, style=solid];
m3_891 -> m3_25  [key=2, style=dotted];
m3_891 -> m3_892  [key=0, style=solid];
m3_894 -> m3_25  [key=2, style=dotted];
m3_894 -> m3_895  [key=0, style=solid];
m3_896 -> m3_25  [key=2, style=dotted];
m3_896 -> m3_897  [key=0, style=solid];
m3_897 -> m3_25  [key=2, style=dotted];
m3_897 -> m3_898  [key=0, style=solid];
m3_898 -> m3_25  [key=2, style=dotted];
m3_898 -> m3_899  [key=0, style=solid];
m3_900 -> m3_25  [key=2, style=dotted];
m3_900 -> m3_901  [key=0, style=solid];
m3_901 -> m3_25  [key=2, style=dotted];
m3_901 -> m3_902  [key=0, style=solid];
m3_903 -> m3_25  [key=2, style=dotted];
m3_903 -> m3_904  [key=0, style=solid];
m3_904 -> m3_25  [key=2, style=dotted];
m3_904 -> m3_905  [key=0, style=solid];
m3_906 -> m3_25  [key=2, style=dotted];
m3_906 -> m3_907  [key=0, style=solid];
m3_909 -> m3_25  [key=2, style=dotted];
m3_909 -> m3_910  [key=0, style=solid];
m3_911 -> m3_25  [key=2, style=dotted];
m3_911 -> m3_912  [key=0, style=solid];
m3_913 -> m3_25  [key=2, style=dotted];
m3_913 -> m3_914  [key=0, style=solid];
m3_915 -> m3_25  [key=2, style=dotted];
m3_915 -> m3_916  [key=0, style=solid];
m3_916 -> m3_25  [key=2, style=dotted];
m3_916 -> m3_917  [key=0, style=solid];
m3_918 -> m3_25  [key=2, style=dotted];
m3_918 -> m3_919  [key=0, style=solid];
m3_920 -> m3_25  [key=2, style=dotted];
m3_920 -> m3_921  [key=0, style=solid];
m3_922 -> m3_25  [key=2, style=dotted];
m3_922 -> m3_923  [key=0, style=solid];
m3_882 -> m3_887  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_882 -> m3_883  [key=0, style=solid];
m3_885 -> m3_887  [key=0, style=solid];
m3_885 -> m3_886  [key=0, style=solid];
m3_885 -> m3_924  [key=2, style=dotted];
m3_881 -> m3_884  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m3_881 -> m3_892  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m3_881 -> m3_907  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m3_881 -> m3_882  [key=0, style=solid];
m3_883 -> m3_884  [key=0, style=solid];
m3_883 -> m3_886  [key=1, style=dashed, color=darkseagreen4, label=count];
m3_883 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m3_886 -> m3_885  [key=0, style=solid];
m3_886 -> m3_886  [key=1, style=dashed, color=darkseagreen4, label=count];
m3_923 -> m3_880  [key=0, style=bold, color=blue];
m3_2790 -> m3_2791  [key=0, style=solid];
m3_2794 -> m3_25  [key=2, style=dotted];
m3_2794 -> m3_2795  [key=0, style=solid];
m3_2793 -> m3_2794  [key=0, style=solid];
m3_2793 -> m3_2798  [key=2, style=dotted];
m3_2792 -> m3_2793  [key=0, style=solid];
m3_2792 -> m3_2797  [key=2, style=dotted];
m3_2791 -> m3_2792  [key=0, style=solid];
m3_2791 -> m3_2796  [key=2, style=dotted];
m3_2795 -> m3_2790  [key=0, style=bold, color=blue];
m3_2423 -> m3_2424  [key=0, style=solid];
m3_2425 -> m3_21  [key=2, style=dotted];
m3_2425 -> m3_22  [key=2, style=dotted];
m3_2425 -> m3_2426  [key=0, style=solid];
m3_2425 -> m3_2429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2424 -> m3_2425  [key=0, style=solid];
m3_2424 -> m3_2354  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2426 -> m3_2427  [key=0, style=solid];
m3_2426 -> m3_172  [key=2, style=dotted];
m3_2426 -> m3_2428  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2427 -> m3_2423  [key=0, style=bold, color=blue];
m3_1902 -> m3_1903  [key=0, style=solid];
m3_1904 -> m3_21  [key=2, style=dotted];
m3_1904 -> m3_22  [key=2, style=dotted];
m3_1904 -> m3_1905  [key=0, style=solid];
m3_1904 -> m3_1909  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1903 -> m3_1904  [key=0, style=solid];
m3_1903 -> m3_1903  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1905 -> m3_1906  [key=0, style=solid];
m3_1905 -> m3_1907  [key=2, style=dotted];
m3_1905 -> m3_1908  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1906 -> m3_1902  [key=0, style=bold, color=blue];
m3_135 -> m3_136  [key=0, style=solid];
m3_137 -> m3_21  [key=2, style=dotted];
m3_137 -> m3_22  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_137 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_138 -> m3_23  [key=2, style=dotted];
m3_138 -> m3_24  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_140 -> m3_23  [key=2, style=dotted];
m3_140 -> m3_24  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_142 -> m3_23  [key=2, style=dotted];
m3_142 -> m3_24  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_144 -> m3_23  [key=2, style=dotted];
m3_144 -> m3_24  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_146 -> m3_23  [key=2, style=dotted];
m3_146 -> m3_24  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_150 -> m3_23  [key=2, style=dotted];
m3_150 -> m3_24  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_152 -> m3_23  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_158  [key=2, style=dotted];
m3_139 -> m3_25  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_141 -> m3_25  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_143 -> m3_25  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_145 -> m3_25  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_147 -> m3_25  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_25  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_149 -> m3_25  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_157  [key=2, style=dotted];
m3_151 -> m3_25  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_155 -> m3_25  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_157  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_136  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_136 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_159  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_156 -> m3_135  [key=0, style=bold, color=blue];
m3_1591 -> m3_1592  [key=0, style=solid];
m3_1593 -> m3_21  [key=2, style=dotted];
m3_1593 -> m3_22  [key=2, style=dotted];
m3_1593 -> m3_1594  [key=0, style=solid];
m3_1593 -> m3_1595  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1593 -> m3_1596  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1593 -> m3_1597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1593 -> m3_1598  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1593 -> m3_1599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1593 -> m3_1600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1593 -> m3_1601  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1594 -> m3_23  [key=2, style=dotted];
m3_1594 -> m3_24  [key=2, style=dotted];
m3_1594 -> m3_1595  [key=0, style=solid];
m3_1596 -> m3_23  [key=2, style=dotted];
m3_1596 -> m3_24  [key=2, style=dotted];
m3_1596 -> m3_1597  [key=0, style=solid];
m3_1595 -> m3_25  [key=2, style=dotted];
m3_1595 -> m3_1596  [key=0, style=solid];
m3_1597 -> m3_25  [key=2, style=dotted];
m3_1597 -> m3_1598  [key=0, style=solid];
m3_1599 -> m3_25  [key=2, style=dotted];
m3_1599 -> m3_1600  [key=0, style=solid];
m3_1600 -> m3_25  [key=2, style=dotted];
m3_1600 -> m3_1601  [key=0, style=solid];
m3_1601 -> m3_25  [key=2, style=dotted];
m3_1601 -> m3_1602  [key=0, style=solid];
m3_1592 -> m3_1593  [key=0, style=solid];
m3_1592 -> m3_1592  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1598 -> m3_1599  [key=0, style=solid];
m3_1598 -> m3_244  [key=2, style=dotted];
m3_1602 -> m3_1591  [key=0, style=bold, color=blue];
m3_373 -> m3_374  [key=0, style=solid];
m3_375 -> m3_21  [key=2, style=dotted];
m3_375 -> m3_22  [key=2, style=dotted];
m3_375 -> m3_376  [key=0, style=solid];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_374  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m3_376 -> m3_376  [key=0, style=solid];
m3_376 -> m3_377  [key=0, style=solid];
m3_376 -> m3_378  [key=2, style=dotted];
m3_377 -> m3_373  [key=0, style=bold, color=blue];
m3_2361 -> m3_2362  [key=0, style=solid];
m3_2363 -> m3_21  [key=2, style=dotted];
m3_2363 -> m3_22  [key=2, style=dotted];
m3_2363 -> m3_2364  [key=0, style=solid];
m3_2363 -> m3_2365  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2364 -> m3_25  [key=2, style=dotted];
m3_2364 -> m3_2365  [key=0, style=solid];
m3_2364 -> m3_1392  [key=2, style=dotted];
m3_2365 -> m3_25  [key=2, style=dotted];
m3_2365 -> m3_2366  [key=0, style=solid];
m3_2365 -> m3_1392  [key=2, style=dotted];
m3_2362 -> m3_2363  [key=0, style=solid];
m3_2366 -> m3_2361  [key=0, style=bold, color=blue];
m3_24 -> m3_18  [key=0, style=solid];
m3_24 -> m3_28  [key=2, style=dotted];
m3_2501 -> m3_2502  [key=0, style=solid];
m3_2503 -> m3_21  [key=2, style=dotted];
m3_2503 -> m3_22  [key=2, style=dotted];
m3_2503 -> m3_2504  [key=0, style=solid];
m3_2503 -> m3_2505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2503 -> m3_2508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2504 -> m3_23  [key=2, style=dotted];
m3_2504 -> m3_24  [key=2, style=dotted];
m3_2504 -> m3_2505  [key=0, style=solid];
m3_2502 -> m3_2503  [key=0, style=solid];
m3_2502 -> m3_2502  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2505 -> m3_2506  [key=0, style=solid];
m3_2505 -> m3_1907  [key=2, style=dotted];
m3_2505 -> m3_2507  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2506 -> m3_2501  [key=0, style=bold, color=blue];
m3_1435 -> m3_1436  [key=0, style=solid];
m3_1436 -> m3_21  [key=2, style=dotted];
m3_1436 -> m3_22  [key=2, style=dotted];
m3_1436 -> m3_1437  [key=0, style=solid];
m3_1436 -> m3_1440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1437 -> m3_1438  [key=0, style=solid];
m3_1437 -> m3_172  [key=2, style=dotted];
m3_1437 -> m3_1439  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1438 -> m3_1435  [key=0, style=bold, color=blue];
m3_2641 -> m3_2642  [key=0, style=solid];
m3_2643 -> m3_21  [key=2, style=dotted];
m3_2643 -> m3_2644  [key=0, style=solid];
m3_2643 -> m3_2646  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2664  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2647  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2667  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2649  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2650  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2652  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2670  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2654  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2655  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2657  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2673  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2658  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2676  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2659  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2643 -> m3_2679  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2642 -> m3_22  [key=2, style=dotted];
m3_2642 -> m3_2643  [key=0, style=solid];
m3_2642 -> m3_2662  [key=2, style=dotted];
m3_2642 -> m3_2645  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m3_2642 -> m3_2648  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m3_2642 -> m3_2651  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m3_2642 -> m3_2653  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m3_2642 -> m3_2656  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m3_2642 -> m3_2660  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m3_2644 -> m3_23  [key=2, style=dotted];
m3_2644 -> m3_24  [key=2, style=dotted];
m3_2644 -> m3_2645  [key=0, style=solid];
m3_2649 -> m3_23  [key=2, style=dotted];
m3_2649 -> m3_24  [key=2, style=dotted];
m3_2649 -> m3_2650  [key=0, style=solid];
m3_2654 -> m3_23  [key=2, style=dotted];
m3_2654 -> m3_24  [key=2, style=dotted];
m3_2654 -> m3_2655  [key=0, style=solid];
m3_2650 -> m3_25  [key=2, style=dotted];
m3_2650 -> m3_2651  [key=0, style=solid];
m3_2655 -> m3_25  [key=2, style=dotted];
m3_2655 -> m3_2656  [key=0, style=solid];
m3_2646 -> m3_2647  [key=0, style=solid];
m3_2646 -> m3_172  [key=2, style=dotted];
m3_2646 -> m3_2663  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2647 -> m3_2648  [key=0, style=solid];
m3_2647 -> m3_172  [key=2, style=dotted];
m3_2647 -> m3_2666  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2652 -> m3_2653  [key=0, style=solid];
m3_2652 -> m3_172  [key=2, style=dotted];
m3_2652 -> m3_2669  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2657 -> m3_2658  [key=0, style=solid];
m3_2657 -> m3_172  [key=2, style=dotted];
m3_2657 -> m3_2672  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2658 -> m3_2659  [key=0, style=solid];
m3_2658 -> m3_172  [key=2, style=dotted];
m3_2658 -> m3_2675  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2659 -> m3_2660  [key=0, style=solid];
m3_2659 -> m3_172  [key=2, style=dotted];
m3_2659 -> m3_2678  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2645 -> m3_2646  [key=0, style=solid];
m3_2648 -> m3_2649  [key=0, style=solid];
m3_2651 -> m3_2652  [key=0, style=solid];
m3_2653 -> m3_2654  [key=0, style=solid];
m3_2656 -> m3_2657  [key=0, style=solid];
m3_2660 -> m3_2661  [key=0, style=solid];
m3_2661 -> m3_2641  [key=0, style=bold, color=blue];
m3_2353 -> m3_2354  [key=0, style=solid];
m3_2355 -> m3_21  [key=2, style=dotted];
m3_2355 -> m3_22  [key=2, style=dotted];
m3_2355 -> m3_2356  [key=0, style=solid];
m3_2355 -> m3_2359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2354 -> m3_2355  [key=0, style=solid];
m3_2354 -> m3_2354  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2356 -> m3_2357  [key=0, style=solid];
m3_2356 -> m3_172  [key=2, style=dotted];
m3_2356 -> m3_2358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2357 -> m3_2353  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_4  [key=0, style=solid];
m3_1 -> m3_6  [key=0, style=solid];
m3_1 -> m3_8  [key=0, style=solid];
m3_1 -> m3_10  [key=0, style=solid];
m3_1 -> m3_1  [key=3, color=green, style=bold, label="Local variable string json"];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_21  [key=2, style=dotted, color=green];
m3_2 -> m3_22  [key=2, style=dotted, color=green];
m3_2 -> m3_4  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_5  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_6  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_7  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_8  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_9  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_10  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_11  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_12  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_13  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_14  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_15  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_16  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_17  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_18  [key=1, style=dashed, color=green, label=reader];
m3_2 -> m3_19  [key=1, style=dashed, color=green, label=reader];
m3_4 -> m3_5  [key=0, style=solid, color=green];
m3_4 -> m3_23  [key=2, style=dotted, color=green];
m3_4 -> m3_24  [key=2, style=dotted, color=green];
m3_6 -> m3_7  [key=0, style=solid, color=green];
m3_6 -> m3_26  [key=2, style=dotted, color=green];
m3_6 -> m3_25  [key=2, style=dotted, color=green];
m3_8 -> m3_9  [key=0, style=solid, color=green];
m3_8 -> m3_25  [key=2, style=dotted, color=green];
m3_10 -> m3_11  [key=0, style=solid, color=green];
m3_10 -> m3_12  [key=2, style=dotted];
m3_10 -> m3_25  [key=2, style=dotted, color=green];
m3_3 -> m3_11  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_5 -> m3_11  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid, color=green];
m3_5 -> m3_25  [key=2, style=dotted, color=green];
m3_7 -> m3_11  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid, color=green];
m3_7 -> m3_25  [key=2, style=dotted, color=green];
m3_9 -> m3_11  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid, color=green];
m3_9 -> m3_26  [key=2, style=dotted, color=green];
m3_9 -> m3_25  [key=2, style=dotted, color=green];
m3_11 -> m3_0  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid, color=green];
m3_11 -> m3_25  [key=2, style=dotted, color=green];
m3_832 -> m3_833  [key=0, style=solid];
m3_833 -> m3_21  [key=2, style=dotted];
m3_833 -> m3_22  [key=2, style=dotted];
m3_833 -> m3_834  [key=0, style=solid];
m3_833 -> m3_837  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_834 -> m3_835  [key=0, style=solid];
m3_834 -> m3_172  [key=2, style=dotted];
m3_834 -> m3_836  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_835 -> m3_832  [key=0, style=bold, color=blue];
m3_1335 -> m3_1336  [key=0, style=solid];
m3_1337 -> m3_21  [key=2, style=dotted];
m3_1337 -> m3_1338  [key=0, style=solid];
m3_1337 -> m3_1339  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1340  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1341  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1342  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1343  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1344  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1345  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1346  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1347  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1348  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1349  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1350  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1351  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1352  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1353  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1337 -> m3_1354  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1336 -> m3_22  [key=2, style=dotted];
m3_1336 -> m3_1337  [key=0, style=solid];
m3_1338 -> m3_23  [key=2, style=dotted];
m3_1338 -> m3_24  [key=2, style=dotted];
m3_1338 -> m3_1339  [key=0, style=solid];
m3_1352 -> m3_23  [key=2, style=dotted];
m3_1352 -> m3_24  [key=2, style=dotted];
m3_1352 -> m3_1353  [key=0, style=solid];
m3_1354 -> m3_23  [key=2, style=dotted];
m3_1354 -> m3_1355  [key=0, style=solid];
m3_1354 -> m3_158  [key=2, style=dotted];
m3_1339 -> m3_25  [key=2, style=dotted];
m3_1339 -> m3_1340  [key=0, style=solid];
m3_1341 -> m3_25  [key=2, style=dotted];
m3_1341 -> m3_1342  [key=0, style=solid];
m3_1342 -> m3_25  [key=2, style=dotted];
m3_1342 -> m3_1343  [key=0, style=solid];
m3_1343 -> m3_25  [key=2, style=dotted];
m3_1343 -> m3_1344  [key=0, style=solid];
m3_1345 -> m3_25  [key=2, style=dotted];
m3_1345 -> m3_1346  [key=0, style=solid];
m3_1346 -> m3_25  [key=2, style=dotted];
m3_1346 -> m3_1347  [key=0, style=solid];
m3_1347 -> m3_25  [key=2, style=dotted];
m3_1347 -> m3_1348  [key=0, style=solid];
m3_1349 -> m3_25  [key=2, style=dotted];
m3_1349 -> m3_1350  [key=0, style=solid];
m3_1350 -> m3_25  [key=2, style=dotted];
m3_1350 -> m3_1351  [key=0, style=solid];
m3_1351 -> m3_25  [key=2, style=dotted];
m3_1351 -> m3_1352  [key=0, style=solid];
m3_1353 -> m3_25  [key=2, style=dotted];
m3_1353 -> m3_1354  [key=0, style=solid];
m3_1340 -> m3_1341  [key=0, style=solid];
m3_1340 -> m3_176  [key=2, style=dotted];
m3_1344 -> m3_1345  [key=0, style=solid];
m3_1344 -> m3_176  [key=2, style=dotted];
m3_1348 -> m3_1349  [key=0, style=solid];
m3_1348 -> m3_176  [key=2, style=dotted];
m3_1355 -> m3_1335  [key=0, style=bold, color=blue];
m3_1911 -> m3_1912  [key=0, style=solid];
m3_1913 -> m3_21  [key=2, style=dotted];
m3_1913 -> m3_1914  [key=0, style=solid];
m3_1913 -> m3_358  [key=2, style=dotted];
m3_1913 -> m3_396  [key=2, style=dotted];
m3_1913 -> m3_397  [key=2, style=dotted];
m3_1913 -> m3_1915  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1916  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1917  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1918  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1919  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1920  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1921  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1922  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1923  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1924  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1925  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1926  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1927  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1928  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1929  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1930  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1931  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1913 -> m3_1932  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1914 -> m3_23  [key=2, style=dotted];
m3_1914 -> m3_24  [key=2, style=dotted];
m3_1914 -> m3_1915  [key=0, style=solid];
m3_1916 -> m3_23  [key=2, style=dotted];
m3_1916 -> m3_24  [key=2, style=dotted];
m3_1916 -> m3_1917  [key=0, style=solid];
m3_1918 -> m3_23  [key=2, style=dotted];
m3_1918 -> m3_24  [key=2, style=dotted];
m3_1918 -> m3_1919  [key=0, style=solid];
m3_1920 -> m3_23  [key=2, style=dotted];
m3_1920 -> m3_24  [key=2, style=dotted];
m3_1920 -> m3_1921  [key=0, style=solid];
m3_1922 -> m3_23  [key=2, style=dotted];
m3_1922 -> m3_24  [key=2, style=dotted];
m3_1922 -> m3_1923  [key=0, style=solid];
m3_1924 -> m3_23  [key=2, style=dotted];
m3_1924 -> m3_24  [key=2, style=dotted];
m3_1924 -> m3_1925  [key=0, style=solid];
m3_1926 -> m3_23  [key=2, style=dotted];
m3_1926 -> m3_24  [key=2, style=dotted];
m3_1926 -> m3_1927  [key=0, style=solid];
m3_1928 -> m3_23  [key=2, style=dotted];
m3_1928 -> m3_24  [key=2, style=dotted];
m3_1928 -> m3_1929  [key=0, style=solid];
m3_1930 -> m3_23  [key=2, style=dotted];
m3_1930 -> m3_24  [key=2, style=dotted];
m3_1930 -> m3_1931  [key=0, style=solid];
m3_1932 -> m3_23  [key=2, style=dotted];
m3_1932 -> m3_1933  [key=0, style=solid];
m3_1932 -> m3_158  [key=2, style=dotted];
m3_1915 -> m3_25  [key=2, style=dotted];
m3_1915 -> m3_1916  [key=0, style=solid];
m3_1917 -> m3_25  [key=2, style=dotted];
m3_1917 -> m3_1918  [key=0, style=solid];
m3_1919 -> m3_25  [key=2, style=dotted];
m3_1919 -> m3_1920  [key=0, style=solid];
m3_1921 -> m3_25  [key=2, style=dotted];
m3_1921 -> m3_1922  [key=0, style=solid];
m3_1923 -> m3_25  [key=2, style=dotted];
m3_1923 -> m3_1924  [key=0, style=solid];
m3_1925 -> m3_25  [key=2, style=dotted];
m3_1925 -> m3_1926  [key=0, style=solid];
m3_1927 -> m3_25  [key=2, style=dotted];
m3_1927 -> m3_1928  [key=0, style=solid];
m3_1929 -> m3_25  [key=2, style=dotted];
m3_1929 -> m3_1930  [key=0, style=solid];
m3_1931 -> m3_25  [key=2, style=dotted];
m3_1931 -> m3_1932  [key=0, style=solid];
m3_1912 -> m3_1913  [key=0, style=solid];
m3_1912 -> m3_1912  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1933 -> m3_1911  [key=0, style=bold, color=blue];
m3_2662 -> m3_2835  [key=0, style=solid];
m3_2835 -> m3_2836  [key=0, style=solid];
m3_2836 -> m3_2662  [key=0, style=bold, color=blue];
m3_1987 -> m3_1988  [key=0, style=solid];
m3_1988 -> m3_21  [key=2, style=dotted];
m3_1988 -> m3_22  [key=2, style=dotted];
m3_1988 -> m3_1989  [key=0, style=solid];
m3_1988 -> m3_1990  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1988 -> m3_1991  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1988 -> m3_1996  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1988 -> m3_1992  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1988 -> m3_1993  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1989 -> m3_23  [key=2, style=dotted];
m3_1989 -> m3_1990  [key=0, style=solid];
m3_1993 -> m3_23  [key=2, style=dotted];
m3_1993 -> m3_24  [key=2, style=dotted];
m3_1993 -> m3_1994  [key=0, style=solid];
m3_1990 -> m3_1991  [key=0, style=solid];
m3_1990 -> m3_116  [key=2, style=dotted];
m3_1990 -> m3_953  [key=2, style=dotted];
m3_1991 -> m3_1992  [key=0, style=solid];
m3_1991 -> m3_172  [key=2, style=dotted];
m3_1991 -> m3_1995  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1992 -> m3_1993  [key=0, style=solid];
m3_1992 -> m3_116  [key=2, style=dotted];
m3_1992 -> m3_953  [key=2, style=dotted];
m3_1994 -> m3_1987  [key=0, style=bold, color=blue];
m3_2739 -> m3_2740  [key=0, style=solid];
m3_2753 -> m3_21  [key=2, style=dotted];
m3_2753 -> m3_2754  [key=0, style=solid];
m3_2753 -> m3_2758  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2754 -> m3_23  [key=2, style=dotted];
m3_2754 -> m3_2755  [key=0, style=solid];
m3_2754 -> m3_2759  [key=0, style=solid];
m3_2752 -> m3_2753  [key=0, style=solid];
m3_2752 -> m3_2768  [key=2, style=dotted];
m3_2752 -> m3_2769  [key=2, style=dotted];
m3_2758 -> m3_2754  [key=0, style=solid];
m3_2758 -> m3_808  [key=2, style=dotted];
m3_2755 -> m3_2758  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_2755 -> m3_2755  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_2755 -> m3_2756  [key=0, style=solid];
m3_2759 -> m3_2760  [key=0, style=solid];
m3_2759 -> m3_2770  [key=2, style=dotted];
m3_2749 -> m3_2752  [key=1, style=dashed, color=darkseagreen4, label=stream];
m3_2749 -> m3_2750  [key=0, style=solid];
m3_2749 -> m3_2767  [key=2, style=dotted];
m3_2751 -> m3_2752  [key=0, style=solid];
m3_2751 -> m3_2755  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_2751 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_2756 -> m3_2758  [key=0, style=solid];
m3_2756 -> m3_2757  [key=0, style=solid];
m3_2757 -> m3_2758  [key=0, style=solid];
m3_2743 -> m3_2759  [key=1, style=dashed, color=darkseagreen4, label=clientReceivedEvent];
m3_2743 -> m3_2744  [key=0, style=solid];
m3_2743 -> m3_2762  [key=2, style=dotted];
m3_2743 -> m3_2780  [key=1, style=dashed, color=darkseagreen4, label=clientReceivedEvent];
m3_2760 -> m3_808  [key=2, style=dotted];
m3_2760 -> m3_2761  [key=0, style=solid];
m3_2750 -> m3_1160  [key=2, style=dotted];
m3_2750 -> m3_2751  [key=0, style=solid];
m3_2748 -> m3_2749  [key=0, style=solid];
m3_2748 -> m3_2766  [key=2, style=dotted];
m3_2746 -> m3_2749  [key=1, style=dashed, color=darkseagreen4, label=socket];
m3_2746 -> m3_2748  [key=1, style=dashed, color=darkseagreen4, label=socket];
m3_2746 -> m3_2747  [key=0, style=solid];
m3_2746 -> m3_2765  [key=2, style=dotted];
m3_2742 -> m3_2743  [key=0, style=solid];
m3_2742 -> m3_2762  [key=2, style=dotted];
m3_2742 -> m3_2744  [key=1, style=dashed, color=darkseagreen4, label=serverStartedEvent];
m3_2742 -> m3_2774  [key=1, style=dashed, color=darkseagreen4, label=serverStartedEvent];
m3_2742 -> m3_2745  [key=1, style=dashed, color=darkseagreen4, label=serverStartedEvent];
m3_2744 -> m3_2745  [key=0, style=solid];
m3_2744 -> m3_2763  [key=2, style=dotted];
m3_2744 -> m3_2771  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2740 -> m3_2748  [key=1, style=dashed, color=darkseagreen4, label=port];
m3_2740 -> m3_2744  [key=1, style=dashed, color=darkseagreen4, label=port];
m3_2740 -> m3_2740  [key=3, color=darkorchid, style=bold, label="Local variable int port"];
m3_2740 -> m3_2741  [key=0, style=solid];
m3_2740 -> m3_2772  [key=1, style=dashed, color=darkseagreen4, label=port];
m3_2747 -> m3_2748  [key=0, style=solid];
m3_2745 -> m3_2746  [key=0, style=solid];
m3_2745 -> m3_2764  [key=2, style=dotted];
m3_2741 -> m3_2742  [key=0, style=solid];
m3_2741 -> m3_2744  [key=1, style=dashed, color=darkseagreen4, label=jsonArrayElementsCount];
m3_2741 -> m3_2776  [key=1, style=dashed, color=darkseagreen4, label=jsonArrayElementsCount];
m3_2741 -> m3_2741  [key=3, color=darkorchid, style=bold, label="Local variable int jsonArrayElementsCount"];
m3_2761 -> m3_2739  [key=0, style=bold, color=blue];
m3_695 -> m3_696  [key=0, style=solid];
m3_697 -> m3_21  [key=2, style=dotted];
m3_697 -> m3_22  [key=2, style=dotted];
m3_697 -> m3_698  [key=0, style=solid];
m3_697 -> m3_706  [key=2, style=dotted];
m3_697 -> m3_699  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_697 -> m3_703  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_698 -> m3_23  [key=2, style=dotted];
m3_698 -> m3_699  [key=0, style=solid];
m3_699 -> m3_25  [key=2, style=dotted];
m3_699 -> m3_700  [key=0, style=solid];
m3_696 -> m3_697  [key=0, style=solid];
m3_696 -> m3_696  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m3_696 -> m3_702  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_703 -> m3_704  [key=0, style=solid];
m3_703 -> m3_172  [key=2, style=dotted];
m3_703 -> m3_707  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_702 -> m3_708  [key=1, style=dashed, color=darkseagreen4, label=total];
m3_702 -> m3_703  [key=0, style=solid];
m3_700 -> m3_702  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_700 -> m3_700  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m3_700 -> m3_701  [key=0, style=solid];
m3_700 -> m3_704  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_704 -> m3_704  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_704 -> m3_701  [key=0, style=solid];
m3_701 -> m3_702  [key=0, style=solid];
m3_701 -> m3_705  [key=0, style=solid];
m3_705 -> m3_695  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_1400 -> m3_1401  [key=0, style=solid];
m3_1401 -> m3_21  [key=2, style=dotted];
m3_1401 -> m3_22  [key=2, style=dotted];
m3_1401 -> m3_1402  [key=0, style=solid];
m3_1401 -> m3_1405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1402 -> m3_1403  [key=0, style=solid];
m3_1402 -> m3_172  [key=2, style=dotted];
m3_1402 -> m3_1404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1403 -> m3_1400  [key=0, style=bold, color=blue];
m3_379 -> m3_380  [key=0, style=solid];
m3_381 -> m3_21  [key=2, style=dotted];
m3_381 -> m3_382  [key=0, style=solid];
m3_381 -> m3_358  [key=2, style=dotted];
m3_381 -> m3_396  [key=2, style=dotted];
m3_381 -> m3_397  [key=2, style=dotted];
m3_381 -> m3_383  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_384  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_385  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_386  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_387  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_388  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_391  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_393  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_381 -> m3_394  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_382 -> m3_24  [key=2, style=dotted];
m3_382 -> m3_383  [key=0, style=solid];
m3_382 -> m3_378  [key=2, style=dotted];
m3_383 -> m3_24  [key=2, style=dotted];
m3_383 -> m3_384  [key=0, style=solid];
m3_383 -> m3_378  [key=2, style=dotted];
m3_384 -> m3_24  [key=2, style=dotted];
m3_384 -> m3_385  [key=0, style=solid];
m3_384 -> m3_378  [key=2, style=dotted];
m3_387 -> m3_24  [key=2, style=dotted];
m3_387 -> m3_388  [key=0, style=solid];
m3_387 -> m3_378  [key=2, style=dotted];
m3_389 -> m3_24  [key=2, style=dotted];
m3_389 -> m3_390  [key=0, style=solid];
m3_389 -> m3_378  [key=2, style=dotted];
m3_391 -> m3_24  [key=2, style=dotted];
m3_391 -> m3_392  [key=0, style=solid];
m3_391 -> m3_378  [key=2, style=dotted];
m3_393 -> m3_24  [key=2, style=dotted];
m3_393 -> m3_394  [key=0, style=solid];
m3_393 -> m3_378  [key=2, style=dotted];
m3_385 -> m3_25  [key=2, style=dotted];
m3_385 -> m3_386  [key=0, style=solid];
m3_386 -> m3_25  [key=2, style=dotted];
m3_386 -> m3_387  [key=0, style=solid];
m3_388 -> m3_25  [key=2, style=dotted];
m3_388 -> m3_389  [key=0, style=solid];
m3_390 -> m3_25  [key=2, style=dotted];
m3_390 -> m3_391  [key=0, style=solid];
m3_392 -> m3_25  [key=2, style=dotted];
m3_392 -> m3_393  [key=0, style=solid];
m3_394 -> m3_25  [key=2, style=dotted];
m3_394 -> m3_395  [key=0, style=solid];
m3_380 -> m3_381  [key=0, style=solid];
m3_380 -> m3_380  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_395 -> m3_379  [key=0, style=bold, color=blue];
m3_872 -> m3_873  [key=0, style=solid];
m3_873 -> m3_21  [key=2, style=dotted];
m3_873 -> m3_22  [key=2, style=dotted];
m3_873 -> m3_874  [key=0, style=solid];
m3_873 -> m3_875  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_873 -> m3_878  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_874 -> m3_24  [key=2, style=dotted];
m3_874 -> m3_875  [key=0, style=solid];
m3_874 -> m3_378  [key=2, style=dotted];
m3_875 -> m3_876  [key=0, style=solid];
m3_875 -> m3_172  [key=2, style=dotted];
m3_875 -> m3_877  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_876 -> m3_872  [key=0, style=bold, color=blue];
m3_1181 -> m3_1182  [key=0, style=solid];
m3_1184 -> m3_21  [key=2, style=dotted];
m3_1184 -> m3_22  [key=2, style=dotted];
m3_1184 -> m3_1185  [key=0, style=solid];
m3_1184 -> m3_1186  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1187  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1188  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1189  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1190  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1191  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1192  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1193  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1184 -> m3_1194  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1185 -> m3_23  [key=2, style=dotted];
m3_1185 -> m3_1186  [key=0, style=solid];
m3_1187 -> m3_23  [key=2, style=dotted];
m3_1187 -> m3_1188  [key=0, style=solid];
m3_1191 -> m3_23  [key=2, style=dotted];
m3_1191 -> m3_24  [key=2, style=dotted];
m3_1191 -> m3_1192  [key=0, style=solid];
m3_1193 -> m3_23  [key=2, style=dotted];
m3_1193 -> m3_1194  [key=0, style=solid];
m3_1193 -> m3_158  [key=2, style=dotted];
m3_1186 -> m3_25  [key=2, style=dotted];
m3_1186 -> m3_1187  [key=0, style=solid];
m3_1188 -> m3_25  [key=2, style=dotted];
m3_1188 -> m3_1189  [key=0, style=solid];
m3_1189 -> m3_25  [key=2, style=dotted];
m3_1189 -> m3_1190  [key=0, style=solid];
m3_1190 -> m3_25  [key=2, style=dotted];
m3_1190 -> m3_1191  [key=0, style=solid];
m3_1190 -> m3_333  [key=2, style=dotted];
m3_1192 -> m3_25  [key=2, style=dotted];
m3_1192 -> m3_1193  [key=0, style=solid];
m3_1194 -> m3_25  [key=2, style=dotted];
m3_1194 -> m3_1195  [key=0, style=solid];
m3_1183 -> m3_1184  [key=0, style=solid];
m3_1183 -> m3_605  [key=2, style=dotted];
m3_1182 -> m3_1183  [key=0, style=solid];
m3_1182 -> m3_1182  [key=3, color=darkorchid, style=bold, label="Local variable int length"];
m3_1195 -> m3_1181  [key=0, style=bold, color=blue];
m3_2037 -> m3_2038  [key=0, style=solid];
m3_2039 -> m3_21  [key=2, style=dotted];
m3_2039 -> m3_22  [key=2, style=dotted];
m3_2039 -> m3_2040  [key=0, style=solid];
m3_2039 -> m3_2041  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2042  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2044  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2046  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2047  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2049  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2050  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2051  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2052  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2053  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2054  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2055  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2056  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2057  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2058  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2059  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2039 -> m3_2060  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2040 -> m3_23  [key=2, style=dotted];
m3_2040 -> m3_2041  [key=0, style=solid];
m3_2042 -> m3_25  [key=2, style=dotted];
m3_2042 -> m3_2043  [key=0, style=solid];
m3_2044 -> m3_25  [key=2, style=dotted];
m3_2044 -> m3_2045  [key=0, style=solid];
m3_2046 -> m3_25  [key=2, style=dotted];
m3_2046 -> m3_2047  [key=0, style=solid];
m3_2048 -> m3_25  [key=2, style=dotted];
m3_2048 -> m3_2049  [key=0, style=solid];
m3_2050 -> m3_25  [key=2, style=dotted];
m3_2050 -> m3_2051  [key=0, style=solid];
m3_2052 -> m3_25  [key=2, style=dotted];
m3_2052 -> m3_2053  [key=0, style=solid];
m3_2054 -> m3_25  [key=2, style=dotted];
m3_2054 -> m3_2055  [key=0, style=solid];
m3_2056 -> m3_25  [key=2, style=dotted];
m3_2056 -> m3_2057  [key=0, style=solid];
m3_2058 -> m3_25  [key=2, style=dotted];
m3_2058 -> m3_2059  [key=0, style=solid];
m3_2060 -> m3_25  [key=2, style=dotted];
m3_2060 -> m3_2061  [key=0, style=solid];
m3_2049 -> m3_26  [key=2, style=dotted];
m3_2049 -> m3_2050  [key=0, style=solid];
m3_2055 -> m3_26  [key=2, style=dotted];
m3_2055 -> m3_2056  [key=0, style=solid];
m3_2055 -> m3_871  [key=2, style=dotted];
m3_2057 -> m3_26  [key=2, style=dotted];
m3_2057 -> m3_2058  [key=0, style=solid];
m3_2057 -> m3_871  [key=2, style=dotted];
m3_2038 -> m3_2039  [key=0, style=solid];
m3_2038 -> m3_2038  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2041 -> m3_2042  [key=0, style=solid];
m3_2041 -> m3_176  [key=2, style=dotted];
m3_2043 -> m3_2044  [key=0, style=solid];
m3_2043 -> m3_244  [key=2, style=dotted];
m3_2045 -> m3_2046  [key=0, style=solid];
m3_2045 -> m3_1968  [key=2, style=dotted];
m3_2047 -> m3_2048  [key=0, style=solid];
m3_2047 -> m3_1386  [key=2, style=dotted];
m3_2051 -> m3_2052  [key=0, style=solid];
m3_2051 -> m3_116  [key=2, style=dotted];
m3_2053 -> m3_2054  [key=0, style=solid];
m3_2053 -> m3_1846  [key=2, style=dotted];
m3_2059 -> m3_2060  [key=0, style=solid];
m3_2059 -> m3_116  [key=2, style=dotted];
m3_2059 -> m3_871  [key=2, style=dotted];
m3_2061 -> m3_2037  [key=0, style=bold, color=blue];
m3_1855 -> m3_1856  [key=0, style=solid];
m3_1856 -> m3_21  [key=2, style=dotted];
m3_1856 -> m3_22  [key=2, style=dotted];
m3_1856 -> m3_1857  [key=0, style=solid];
m3_1857 -> m3_25  [key=2, style=dotted];
m3_1857 -> m3_1858  [key=0, style=solid];
m3_1857 -> m3_1846  [key=2, style=dotted];
m3_1858 -> m3_1855  [key=0, style=bold, color=blue];
m3_2329 -> m3_2330  [key=0, style=solid];
m3_2331 -> m3_21  [key=2, style=dotted];
m3_2331 -> m3_22  [key=2, style=dotted];
m3_2331 -> m3_2332  [key=0, style=solid];
m3_2331 -> m3_2335  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2330 -> m3_2331  [key=0, style=solid];
m3_2330 -> m3_2330  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2332 -> m3_2333  [key=0, style=solid];
m3_2332 -> m3_172  [key=2, style=dotted];
m3_2332 -> m3_2334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2333 -> m3_2329  [key=0, style=bold, color=blue];
m3_2699 -> m3_2700  [key=0, style=solid];
m3_2700 -> m3_2704  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2700 -> m3_2700  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2700 -> m3_2701  [key=0, style=solid];
m3_2701 -> m3_2703  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2701 -> m3_172  [key=2, style=dotted];
m3_2701 -> m3_2702  [key=0, style=solid];
m3_2702 -> m3_2699  [key=0, style=bold, color=blue];
m3_372 -> m3_372  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_83 -> m3_84  [key=0, style=solid];
m3_85 -> m3_21  [key=2, style=dotted];
m3_85 -> m3_22  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_90  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_94  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_85 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_86 -> m3_23  [key=2, style=dotted];
m3_86 -> m3_24  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_88 -> m3_23  [key=2, style=dotted];
m3_88 -> m3_24  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_90 -> m3_23  [key=2, style=dotted];
m3_90 -> m3_24  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_92 -> m3_23  [key=2, style=dotted];
m3_92 -> m3_24  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_95 -> m3_23  [key=2, style=dotted];
m3_95 -> m3_24  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_98 -> m3_23  [key=2, style=dotted];
m3_98 -> m3_24  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_101 -> m3_23  [key=2, style=dotted];
m3_101 -> m3_24  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_103 -> m3_23  [key=2, style=dotted];
m3_103 -> m3_24  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_87 -> m3_25  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_89 -> m3_25  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_91 -> m3_25  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_93 -> m3_25  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_94 -> m3_25  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_96 -> m3_25  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_97 -> m3_25  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_99 -> m3_25  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_25  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_102 -> m3_25  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_104 -> m3_25  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_84  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_105 -> m3_83  [key=0, style=bold, color=blue];
m3_1001 -> m3_1002  [key=0, style=solid];
m3_1003 -> m3_21  [key=2, style=dotted];
m3_1003 -> m3_22  [key=2, style=dotted];
m3_1003 -> m3_1004  [key=0, style=solid];
m3_1005 -> m3_21  [key=2, style=dotted];
m3_1005 -> m3_22  [key=2, style=dotted];
m3_1005 -> m3_1006  [key=0, style=solid];
m3_1007 -> m3_21  [key=2, style=dotted];
m3_1007 -> m3_22  [key=2, style=dotted];
m3_1007 -> m3_1008  [key=0, style=solid];
m3_1009 -> m3_21  [key=2, style=dotted];
m3_1009 -> m3_22  [key=2, style=dotted];
m3_1009 -> m3_1010  [key=0, style=solid];
m3_1011 -> m3_21  [key=2, style=dotted];
m3_1011 -> m3_22  [key=2, style=dotted];
m3_1011 -> m3_1012  [key=0, style=solid];
m3_1011 -> m3_1028  [key=2, style=dotted];
m3_1013 -> m3_21  [key=2, style=dotted];
m3_1013 -> m3_22  [key=2, style=dotted];
m3_1013 -> m3_1014  [key=0, style=solid];
m3_1013 -> m3_1028  [key=2, style=dotted];
m3_1015 -> m3_21  [key=2, style=dotted];
m3_1015 -> m3_22  [key=2, style=dotted];
m3_1015 -> m3_1016  [key=0, style=solid];
m3_1015 -> m3_1029  [key=2, style=dotted];
m3_1015 -> m3_1031  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1017 -> m3_21  [key=2, style=dotted];
m3_1017 -> m3_22  [key=2, style=dotted];
m3_1017 -> m3_1018  [key=0, style=solid];
m3_1017 -> m3_1034  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1019 -> m3_21  [key=2, style=dotted];
m3_1019 -> m3_22  [key=2, style=dotted];
m3_1019 -> m3_1020  [key=0, style=solid];
m3_1019 -> m3_1037  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1021 -> m3_21  [key=2, style=dotted];
m3_1021 -> m3_22  [key=2, style=dotted];
m3_1021 -> m3_1022  [key=0, style=solid];
m3_1021 -> m3_1040  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1023 -> m3_21  [key=2, style=dotted];
m3_1023 -> m3_22  [key=2, style=dotted];
m3_1023 -> m3_1024  [key=0, style=solid];
m3_1025 -> m3_21  [key=2, style=dotted];
m3_1025 -> m3_22  [key=2, style=dotted];
m3_1025 -> m3_1026  [key=0, style=solid];
m3_1025 -> m3_1043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1004 -> m3_25  [key=2, style=dotted];
m3_1004 -> m3_1005  [key=0, style=solid];
m3_1004 -> m3_176  [key=2, style=dotted];
m3_1006 -> m3_25  [key=2, style=dotted];
m3_1006 -> m3_1007  [key=0, style=solid];
m3_1006 -> m3_176  [key=2, style=dotted];
m3_1008 -> m3_25  [key=2, style=dotted];
m3_1008 -> m3_1009  [key=0, style=solid];
m3_1008 -> m3_176  [key=2, style=dotted];
m3_1010 -> m3_25  [key=2, style=dotted];
m3_1010 -> m3_1011  [key=0, style=solid];
m3_1010 -> m3_176  [key=2, style=dotted];
m3_1012 -> m3_25  [key=2, style=dotted];
m3_1012 -> m3_1013  [key=0, style=solid];
m3_1012 -> m3_176  [key=2, style=dotted];
m3_1014 -> m3_25  [key=2, style=dotted];
m3_1014 -> m3_1015  [key=0, style=solid];
m3_1014 -> m3_176  [key=2, style=dotted];
m3_1024 -> m3_25  [key=2, style=dotted];
m3_1024 -> m3_1025  [key=0, style=solid];
m3_1024 -> m3_176  [key=2, style=dotted];
m3_1002 -> m3_1003  [key=0, style=solid];
m3_1002 -> m3_1002  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m3_1016 -> m3_1017  [key=0, style=solid];
m3_1016 -> m3_172  [key=2, style=dotted];
m3_1016 -> m3_1030  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1018 -> m3_1019  [key=0, style=solid];
m3_1018 -> m3_172  [key=2, style=dotted];
m3_1018 -> m3_1033  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1020 -> m3_1021  [key=0, style=solid];
m3_1020 -> m3_172  [key=2, style=dotted];
m3_1020 -> m3_1036  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1022 -> m3_1023  [key=0, style=solid];
m3_1022 -> m3_172  [key=2, style=dotted];
m3_1022 -> m3_1039  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1026 -> m3_1027  [key=0, style=solid];
m3_1026 -> m3_172  [key=2, style=dotted];
m3_1026 -> m3_1042  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1027 -> m3_1001  [key=0, style=bold, color=blue];
m3_2446 -> m3_2447  [key=0, style=solid];
m3_2447 -> m3_21  [key=2, style=dotted];
m3_2447 -> m3_22  [key=2, style=dotted];
m3_2447 -> m3_2448  [key=0, style=solid];
m3_2447 -> m3_2449  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2447 -> m3_2450  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2447 -> m3_2453  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2448 -> m3_24  [key=2, style=dotted];
m3_2448 -> m3_2449  [key=0, style=solid];
m3_2448 -> m3_378  [key=2, style=dotted];
m3_2449 -> m3_24  [key=2, style=dotted];
m3_2449 -> m3_2450  [key=0, style=solid];
m3_2449 -> m3_378  [key=2, style=dotted];
m3_2450 -> m3_2451  [key=0, style=solid];
m3_2450 -> m3_172  [key=2, style=dotted];
m3_2450 -> m3_2452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2451 -> m3_2446  [key=0, style=bold, color=blue];
m3_321 -> m3_322  [key=0, style=solid];
m3_323 -> m3_21  [key=2, style=dotted];
m3_323 -> m3_22  [key=2, style=dotted];
m3_323 -> m3_324  [key=0, style=solid];
m3_323 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_327  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_328  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_324 -> m3_23  [key=2, style=dotted];
m3_324 -> m3_24  [key=2, style=dotted];
m3_324 -> m3_325  [key=0, style=solid];
m3_325 -> m3_23  [key=2, style=dotted];
m3_325 -> m3_24  [key=2, style=dotted];
m3_325 -> m3_326  [key=0, style=solid];
m3_326 -> m3_23  [key=2, style=dotted];
m3_326 -> m3_24  [key=2, style=dotted];
m3_326 -> m3_327  [key=0, style=solid];
m3_327 -> m3_25  [key=2, style=dotted];
m3_327 -> m3_328  [key=0, style=solid];
m3_329 -> m3_25  [key=2, style=dotted];
m3_329 -> m3_330  [key=0, style=solid];
m3_331 -> m3_25  [key=2, style=dotted];
m3_331 -> m3_332  [key=0, style=solid];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_322  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_333  [key=2, style=dotted];
m3_328 -> m3_330  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_334  [key=2, style=dotted];
m3_332 -> m3_321  [key=0, style=bold, color=blue];
m3_1314 -> m3_1315  [key=0, style=solid];
m3_1316 -> m3_21  [key=2, style=dotted];
m3_1316 -> m3_1317  [key=0, style=solid];
m3_1316 -> m3_1318  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1319  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1320  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1321  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1322  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1323  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1324  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1325  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1326  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1327  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1328  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1329  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1330  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1331  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1332  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1316 -> m3_1333  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1315 -> m3_22  [key=2, style=dotted];
m3_1315 -> m3_1316  [key=0, style=solid];
m3_1317 -> m3_23  [key=2, style=dotted];
m3_1317 -> m3_24  [key=2, style=dotted];
m3_1317 -> m3_1318  [key=0, style=solid];
m3_1319 -> m3_23  [key=2, style=dotted];
m3_1319 -> m3_1320  [key=0, style=solid];
m3_1323 -> m3_23  [key=2, style=dotted];
m3_1323 -> m3_1324  [key=0, style=solid];
m3_1327 -> m3_23  [key=2, style=dotted];
m3_1327 -> m3_1328  [key=0, style=solid];
m3_1331 -> m3_23  [key=2, style=dotted];
m3_1331 -> m3_24  [key=2, style=dotted];
m3_1331 -> m3_1332  [key=0, style=solid];
m3_1333 -> m3_23  [key=2, style=dotted];
m3_1333 -> m3_1334  [key=0, style=solid];
m3_1333 -> m3_158  [key=2, style=dotted];
m3_1318 -> m3_25  [key=2, style=dotted];
m3_1318 -> m3_1319  [key=0, style=solid];
m3_1320 -> m3_25  [key=2, style=dotted];
m3_1320 -> m3_1321  [key=0, style=solid];
m3_1321 -> m3_25  [key=2, style=dotted];
m3_1321 -> m3_1322  [key=0, style=solid];
m3_1322 -> m3_25  [key=2, style=dotted];
m3_1322 -> m3_1323  [key=0, style=solid];
m3_1324 -> m3_25  [key=2, style=dotted];
m3_1324 -> m3_1325  [key=0, style=solid];
m3_1325 -> m3_25  [key=2, style=dotted];
m3_1325 -> m3_1326  [key=0, style=solid];
m3_1326 -> m3_25  [key=2, style=dotted];
m3_1326 -> m3_1327  [key=0, style=solid];
m3_1328 -> m3_25  [key=2, style=dotted];
m3_1328 -> m3_1329  [key=0, style=solid];
m3_1329 -> m3_25  [key=2, style=dotted];
m3_1329 -> m3_1330  [key=0, style=solid];
m3_1330 -> m3_25  [key=2, style=dotted];
m3_1330 -> m3_1331  [key=0, style=solid];
m3_1332 -> m3_25  [key=2, style=dotted];
m3_1332 -> m3_1333  [key=0, style=solid];
m3_1334 -> m3_1314  [key=0, style=bold, color=blue];
m3_1969 -> m3_1970  [key=0, style=solid];
m3_1970 -> m3_21  [key=2, style=dotted];
m3_1970 -> m3_22  [key=2, style=dotted];
m3_1970 -> m3_1971  [key=0, style=solid];
m3_1970 -> m3_1974  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1971 -> m3_1972  [key=0, style=solid];
m3_1971 -> m3_172  [key=2, style=dotted];
m3_1971 -> m3_1973  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1972 -> m3_1969  [key=0, style=bold, color=blue];
m3_1364 -> m3_1365  [key=0, style=solid];
m3_1365 -> m3_21  [key=2, style=dotted];
m3_1365 -> m3_22  [key=2, style=dotted];
m3_1365 -> m3_1366  [key=0, style=solid];
m3_1365 -> m3_1367  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1367 -> m3_25  [key=2, style=dotted];
m3_1367 -> m3_1368  [key=0, style=solid];
m3_1366 -> m3_1367  [key=0, style=solid];
m3_1366 -> m3_244  [key=2, style=dotted];
m3_1366 -> m3_871  [key=2, style=dotted];
m3_1368 -> m3_1364  [key=0, style=bold, color=blue];
m3_756 -> m3_757  [key=0, style=solid];
m3_758 -> m3_21  [key=2, style=dotted];
m3_758 -> m3_22  [key=2, style=dotted];
m3_758 -> m3_759  [key=0, style=solid];
m3_758 -> m3_761  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_758 -> m3_763  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_758 -> m3_764  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_758 -> m3_765  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_761 -> m3_23  [key=2, style=dotted];
m3_761 -> m3_24  [key=2, style=dotted];
m3_761 -> m3_762  [key=0, style=solid];
m3_763 -> m3_23  [key=2, style=dotted];
m3_763 -> m3_24  [key=2, style=dotted];
m3_763 -> m3_764  [key=0, style=solid];
m3_764 -> m3_25  [key=2, style=dotted];
m3_764 -> m3_765  [key=0, style=solid];
m3_765 -> m3_25  [key=2, style=dotted];
m3_765 -> m3_766  [key=0, style=solid];
m3_757 -> m3_758  [key=0, style=solid];
m3_757 -> m3_757  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_759 -> m3_760  [key=0, style=solid];
m3_759 -> m3_762  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_759 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_760 -> m3_761  [key=0, style=solid];
m3_760 -> m3_763  [key=0, style=solid];
m3_762 -> m3_760  [key=0, style=solid];
m3_762 -> m3_762  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_766 -> m3_756  [key=0, style=bold, color=blue];
m3_1210 -> m3_1211  [key=0, style=solid];
m3_1212 -> m3_21  [key=2, style=dotted];
m3_1212 -> m3_22  [key=2, style=dotted];
m3_1212 -> m3_1213  [key=0, style=solid];
m3_1212 -> m3_1214  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1215  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1216  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1217  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1218  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1219  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1220  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1221  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1222  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1223  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1224  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1225  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1226  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1227  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1228  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1229  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1230  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1231  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1232  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1233  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1234  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1235  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1236  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1237  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1238  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1239  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1240  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1241  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1242  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1243  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1244  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1245  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1246  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1247  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1248  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1249  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1250  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1251  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1252  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1253  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1254  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1255  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1256  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1257  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1258  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1259  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1260  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1261  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1262  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1263  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1264  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1265  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1266  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1267  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1268  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1269  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1212 -> m3_1270  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1214 -> m3_25  [key=2, style=dotted];
m3_1214 -> m3_1215  [key=0, style=solid];
m3_1216 -> m3_25  [key=2, style=dotted];
m3_1216 -> m3_1217  [key=0, style=solid];
m3_1217 -> m3_25  [key=2, style=dotted];
m3_1217 -> m3_1218  [key=0, style=solid];
m3_1219 -> m3_25  [key=2, style=dotted];
m3_1219 -> m3_1220  [key=0, style=solid];
m3_1220 -> m3_25  [key=2, style=dotted];
m3_1220 -> m3_1221  [key=0, style=solid];
m3_1222 -> m3_25  [key=2, style=dotted];
m3_1222 -> m3_1223  [key=0, style=solid];
m3_1223 -> m3_25  [key=2, style=dotted];
m3_1223 -> m3_1224  [key=0, style=solid];
m3_1225 -> m3_25  [key=2, style=dotted];
m3_1225 -> m3_1226  [key=0, style=solid];
m3_1226 -> m3_25  [key=2, style=dotted];
m3_1226 -> m3_1227  [key=0, style=solid];
m3_1228 -> m3_25  [key=2, style=dotted];
m3_1228 -> m3_1229  [key=0, style=solid];
m3_1229 -> m3_25  [key=2, style=dotted];
m3_1229 -> m3_1230  [key=0, style=solid];
m3_1231 -> m3_25  [key=2, style=dotted];
m3_1231 -> m3_1232  [key=0, style=solid];
m3_1232 -> m3_25  [key=2, style=dotted];
m3_1232 -> m3_1233  [key=0, style=solid];
m3_1234 -> m3_25  [key=2, style=dotted];
m3_1234 -> m3_1235  [key=0, style=solid];
m3_1235 -> m3_25  [key=2, style=dotted];
m3_1235 -> m3_1236  [key=0, style=solid];
m3_1237 -> m3_25  [key=2, style=dotted];
m3_1237 -> m3_1238  [key=0, style=solid];
m3_1238 -> m3_25  [key=2, style=dotted];
m3_1238 -> m3_1239  [key=0, style=solid];
m3_1240 -> m3_25  [key=2, style=dotted];
m3_1240 -> m3_1241  [key=0, style=solid];
m3_1241 -> m3_25  [key=2, style=dotted];
m3_1241 -> m3_1242  [key=0, style=solid];
m3_1243 -> m3_25  [key=2, style=dotted];
m3_1243 -> m3_1244  [key=0, style=solid];
m3_1244 -> m3_25  [key=2, style=dotted];
m3_1244 -> m3_1245  [key=0, style=solid];
m3_1246 -> m3_25  [key=2, style=dotted];
m3_1246 -> m3_1247  [key=0, style=solid];
m3_1247 -> m3_25  [key=2, style=dotted];
m3_1247 -> m3_1248  [key=0, style=solid];
m3_1249 -> m3_25  [key=2, style=dotted];
m3_1249 -> m3_1250  [key=0, style=solid];
m3_1250 -> m3_25  [key=2, style=dotted];
m3_1250 -> m3_1251  [key=0, style=solid];
m3_1252 -> m3_25  [key=2, style=dotted];
m3_1252 -> m3_1253  [key=0, style=solid];
m3_1253 -> m3_25  [key=2, style=dotted];
m3_1253 -> m3_1254  [key=0, style=solid];
m3_1255 -> m3_25  [key=2, style=dotted];
m3_1255 -> m3_1256  [key=0, style=solid];
m3_1256 -> m3_25  [key=2, style=dotted];
m3_1256 -> m3_1257  [key=0, style=solid];
m3_1258 -> m3_25  [key=2, style=dotted];
m3_1258 -> m3_1259  [key=0, style=solid];
m3_1259 -> m3_25  [key=2, style=dotted];
m3_1259 -> m3_1260  [key=0, style=solid];
m3_1261 -> m3_25  [key=2, style=dotted];
m3_1261 -> m3_1262  [key=0, style=solid];
m3_1262 -> m3_25  [key=2, style=dotted];
m3_1262 -> m3_1263  [key=0, style=solid];
m3_1264 -> m3_25  [key=2, style=dotted];
m3_1264 -> m3_1265  [key=0, style=solid];
m3_1265 -> m3_25  [key=2, style=dotted];
m3_1265 -> m3_1266  [key=0, style=solid];
m3_1267 -> m3_25  [key=2, style=dotted];
m3_1267 -> m3_1268  [key=0, style=solid];
m3_1268 -> m3_25  [key=2, style=dotted];
m3_1268 -> m3_1269  [key=0, style=solid];
m3_1270 -> m3_25  [key=2, style=dotted];
m3_1270 -> m3_1271  [key=0, style=solid];
m3_1211 -> m3_1212  [key=0, style=solid];
m3_1211 -> m3_1211  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1213 -> m3_1214  [key=0, style=solid];
m3_1213 -> m3_378  [key=2, style=dotted];
m3_1215 -> m3_1216  [key=0, style=solid];
m3_1215 -> m3_378  [key=2, style=dotted];
m3_1218 -> m3_1219  [key=0, style=solid];
m3_1218 -> m3_378  [key=2, style=dotted];
m3_1221 -> m3_1222  [key=0, style=solid];
m3_1221 -> m3_378  [key=2, style=dotted];
m3_1224 -> m3_1225  [key=0, style=solid];
m3_1224 -> m3_378  [key=2, style=dotted];
m3_1227 -> m3_1228  [key=0, style=solid];
m3_1227 -> m3_378  [key=2, style=dotted];
m3_1230 -> m3_1231  [key=0, style=solid];
m3_1230 -> m3_378  [key=2, style=dotted];
m3_1233 -> m3_1234  [key=0, style=solid];
m3_1233 -> m3_378  [key=2, style=dotted];
m3_1236 -> m3_1237  [key=0, style=solid];
m3_1236 -> m3_378  [key=2, style=dotted];
m3_1239 -> m3_1240  [key=0, style=solid];
m3_1239 -> m3_378  [key=2, style=dotted];
m3_1242 -> m3_1243  [key=0, style=solid];
m3_1242 -> m3_378  [key=2, style=dotted];
m3_1245 -> m3_1246  [key=0, style=solid];
m3_1245 -> m3_378  [key=2, style=dotted];
m3_1248 -> m3_1249  [key=0, style=solid];
m3_1248 -> m3_378  [key=2, style=dotted];
m3_1251 -> m3_1252  [key=0, style=solid];
m3_1251 -> m3_378  [key=2, style=dotted];
m3_1254 -> m3_1255  [key=0, style=solid];
m3_1254 -> m3_378  [key=2, style=dotted];
m3_1257 -> m3_1258  [key=0, style=solid];
m3_1257 -> m3_378  [key=2, style=dotted];
m3_1260 -> m3_1261  [key=0, style=solid];
m3_1260 -> m3_378  [key=2, style=dotted];
m3_1263 -> m3_1264  [key=0, style=solid];
m3_1263 -> m3_378  [key=2, style=dotted];
m3_1266 -> m3_1267  [key=0, style=solid];
m3_1266 -> m3_378  [key=2, style=dotted];
m3_1269 -> m3_1270  [key=0, style=solid];
m3_1269 -> m3_378  [key=2, style=dotted];
m3_1271 -> m3_1210  [key=0, style=bold, color=blue];
m3_1575 -> m3_1576  [key=0, style=solid];
m3_1577 -> m3_21  [key=2, style=dotted];
m3_1577 -> m3_22  [key=2, style=dotted];
m3_1577 -> m3_1578  [key=0, style=solid];
m3_1577 -> m3_1579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1585  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1586  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1588  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1577 -> m3_1589  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1579 -> m3_23  [key=2, style=dotted];
m3_1579 -> m3_24  [key=2, style=dotted];
m3_1579 -> m3_1580  [key=0, style=solid];
m3_1581 -> m3_23  [key=2, style=dotted];
m3_1581 -> m3_24  [key=2, style=dotted];
m3_1581 -> m3_1582  [key=0, style=solid];
m3_1588 -> m3_23  [key=2, style=dotted];
m3_1588 -> m3_24  [key=2, style=dotted];
m3_1588 -> m3_1589  [key=0, style=solid];
m3_1580 -> m3_25  [key=2, style=dotted];
m3_1580 -> m3_1581  [key=0, style=solid];
m3_1582 -> m3_25  [key=2, style=dotted];
m3_1582 -> m3_1583  [key=0, style=solid];
m3_1584 -> m3_25  [key=2, style=dotted];
m3_1584 -> m3_1585  [key=0, style=solid];
m3_1585 -> m3_25  [key=2, style=dotted];
m3_1585 -> m3_1586  [key=0, style=solid];
m3_1589 -> m3_25  [key=2, style=dotted];
m3_1589 -> m3_1590  [key=0, style=solid];
m3_1587 -> m3_25  [key=2, style=dotted];
m3_1587 -> m3_1588  [key=0, style=solid];
m3_1587 -> m3_1587  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_1587 -> m3_1557  [key=2, style=dotted];
m3_1576 -> m3_1577  [key=0, style=solid];
m3_1576 -> m3_1576  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1578 -> m3_1579  [key=0, style=solid];
m3_1578 -> m3_1574  [key=2, style=dotted];
m3_1583 -> m3_1584  [key=0, style=solid];
m3_1583 -> m3_1386  [key=2, style=dotted];
m3_1586 -> m3_1587  [key=0, style=solid];
m3_1590 -> m3_1575  [key=0, style=bold, color=blue];
m3_29 -> m3_21  [key=2, style=dotted];
m3_29 -> m3_22  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_29 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_29 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_29 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_29 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_29 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_29 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_29 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DiagnosticsTraceWriter"];
m3_39 -> m3_21  [key=2, style=dotted];
m3_39 -> m3_22  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_39 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_21  [key=2, style=dotted];
m3_57 -> m3_22  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_59  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_57 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_30 -> m3_23  [key=2, style=dotted];
m3_30 -> m3_24  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_34 -> m3_23  [key=2, style=dotted];
m3_34 -> m3_24  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_40 -> m3_23  [key=2, style=dotted];
m3_40 -> m3_24  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_44 -> m3_23  [key=2, style=dotted];
m3_44 -> m3_24  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_48 -> m3_23  [key=2, style=dotted];
m3_48 -> m3_24  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_52 -> m3_23  [key=2, style=dotted];
m3_52 -> m3_24  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_58 -> m3_23  [key=2, style=dotted];
m3_58 -> m3_24  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_62 -> m3_23  [key=2, style=dotted];
m3_62 -> m3_24  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_66 -> m3_23  [key=2, style=dotted];
m3_66 -> m3_24  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_70 -> m3_23  [key=2, style=dotted];
m3_70 -> m3_24  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_74 -> m3_23  [key=2, style=dotted];
m3_74 -> m3_24  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_78 -> m3_23  [key=2, style=dotted];
m3_78 -> m3_24  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_31 -> m3_25  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_25  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_25  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_35 -> m3_25  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_25  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_25  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_41 -> m3_25  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_25  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_25  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_45 -> m3_25  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_25  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_25  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_49 -> m3_25  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_25  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_51 -> m3_25  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_53 -> m3_25  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_25  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_25  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_59 -> m3_25  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_25  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_25  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_63 -> m3_25  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_25  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_65 -> m3_25  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_67 -> m3_25  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_68 -> m3_25  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_25  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_71 -> m3_25  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_25  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_25  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_75 -> m3_25  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_25  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_77 -> m3_25  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_79 -> m3_25  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_80 -> m3_25  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_81 -> m3_25  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_28  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_38 -> m3_39  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_82 -> m3_27  [key=0, style=bold, color=blue];
m3_177 -> m3_178  [key=0, style=solid];
m3_179 -> m3_21  [key=2, style=dotted];
m3_179 -> m3_22  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_179 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_180 -> m3_23  [key=2, style=dotted];
m3_180 -> m3_24  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_186 -> m3_23  [key=2, style=dotted];
m3_186 -> m3_24  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_188 -> m3_23  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_158  [key=2, style=dotted];
m3_181 -> m3_25  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_187 -> m3_25  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_178  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_172  [key=2, style=dotted];
m3_182 -> m3_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_172  [key=2, style=dotted];
m3_183 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_172  [key=2, style=dotted];
m3_184 -> m3_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_172  [key=2, style=dotted];
m3_185 -> m3_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_189 -> m3_177  [key=0, style=bold, color=blue];
m3_1780 -> m3_1781  [key=0, style=solid];
m3_1782 -> m3_21  [key=2, style=dotted];
m3_1782 -> m3_22  [key=2, style=dotted];
m3_1782 -> m3_1783  [key=0, style=solid];
m3_1782 -> m3_1784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1782 -> m3_1785  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1783 -> m3_23  [key=2, style=dotted];
m3_1783 -> m3_24  [key=2, style=dotted];
m3_1783 -> m3_1784  [key=0, style=solid];
m3_1784 -> m3_23  [key=2, style=dotted];
m3_1784 -> m3_24  [key=2, style=dotted];
m3_1784 -> m3_1785  [key=0, style=solid];
m3_1785 -> m3_23  [key=2, style=dotted];
m3_1785 -> m3_1786  [key=0, style=solid];
m3_1785 -> m3_158  [key=2, style=dotted];
m3_1781 -> m3_1782  [key=0, style=solid];
m3_1781 -> m3_1781  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1786 -> m3_1780  [key=0, style=bold, color=blue];
m3_825 -> m3_826  [key=0, style=solid];
m3_826 -> m3_21  [key=2, style=dotted];
m3_826 -> m3_22  [key=2, style=dotted];
m3_826 -> m3_827  [key=0, style=solid];
m3_826 -> m3_830  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_827 -> m3_828  [key=0, style=solid];
m3_827 -> m3_172  [key=2, style=dotted];
m3_827 -> m3_829  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_828 -> m3_825  [key=0, style=bold, color=blue];
m3_290 -> m3_291  [key=0, style=solid];
m3_292 -> m3_21  [key=2, style=dotted];
m3_292 -> m3_22  [key=2, style=dotted];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_294  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_292 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_292 -> m3_296  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_292 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_294 -> m3_23  [key=2, style=dotted];
m3_294 -> m3_24  [key=2, style=dotted];
m3_294 -> m3_295  [key=0, style=solid];
m3_295 -> m3_25  [key=2, style=dotted];
m3_295 -> m3_296  [key=0, style=solid];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_291  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_293 -> m3_294  [key=0, style=solid];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_172  [key=2, style=dotted];
m3_296 -> m3_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_297 -> m3_290  [key=0, style=bold, color=blue];
m3_633 -> m3_634  [key=0, style=solid];
m3_635 -> m3_21  [key=2, style=dotted];
m3_635 -> m3_636  [key=0, style=solid];
m3_635 -> m3_358  [key=2, style=dotted];
m3_635 -> m3_396  [key=2, style=dotted];
m3_635 -> m3_397  [key=2, style=dotted];
m3_635 -> m3_637  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_639  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_640  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_641  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_642  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_643  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_644  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_645  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_646  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_647  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_648  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_649  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_652  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_653  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_654  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_655  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_656  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_657  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_658  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_659  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_660  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_661  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_635 -> m3_662  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_636 -> m3_23  [key=2, style=dotted];
m3_636 -> m3_24  [key=2, style=dotted];
m3_636 -> m3_637  [key=0, style=solid];
m3_638 -> m3_23  [key=2, style=dotted];
m3_638 -> m3_24  [key=2, style=dotted];
m3_638 -> m3_639  [key=0, style=solid];
m3_640 -> m3_23  [key=2, style=dotted];
m3_640 -> m3_24  [key=2, style=dotted];
m3_640 -> m3_641  [key=0, style=solid];
m3_642 -> m3_23  [key=2, style=dotted];
m3_642 -> m3_24  [key=2, style=dotted];
m3_642 -> m3_643  [key=0, style=solid];
m3_644 -> m3_23  [key=2, style=dotted];
m3_644 -> m3_24  [key=2, style=dotted];
m3_644 -> m3_645  [key=0, style=solid];
m3_646 -> m3_23  [key=2, style=dotted];
m3_646 -> m3_24  [key=2, style=dotted];
m3_646 -> m3_647  [key=0, style=solid];
m3_648 -> m3_23  [key=2, style=dotted];
m3_648 -> m3_24  [key=2, style=dotted];
m3_648 -> m3_649  [key=0, style=solid];
m3_650 -> m3_23  [key=2, style=dotted];
m3_650 -> m3_24  [key=2, style=dotted];
m3_650 -> m3_651  [key=0, style=solid];
m3_652 -> m3_23  [key=2, style=dotted];
m3_652 -> m3_24  [key=2, style=dotted];
m3_652 -> m3_653  [key=0, style=solid];
m3_654 -> m3_23  [key=2, style=dotted];
m3_654 -> m3_24  [key=2, style=dotted];
m3_654 -> m3_655  [key=0, style=solid];
m3_656 -> m3_23  [key=2, style=dotted];
m3_656 -> m3_24  [key=2, style=dotted];
m3_656 -> m3_657  [key=0, style=solid];
m3_659 -> m3_23  [key=2, style=dotted];
m3_659 -> m3_24  [key=2, style=dotted];
m3_659 -> m3_660  [key=0, style=solid];
m3_662 -> m3_23  [key=2, style=dotted];
m3_662 -> m3_663  [key=0, style=solid];
m3_662 -> m3_158  [key=2, style=dotted];
m3_637 -> m3_25  [key=2, style=dotted];
m3_637 -> m3_638  [key=0, style=solid];
m3_639 -> m3_25  [key=2, style=dotted];
m3_639 -> m3_640  [key=0, style=solid];
m3_641 -> m3_25  [key=2, style=dotted];
m3_641 -> m3_642  [key=0, style=solid];
m3_643 -> m3_25  [key=2, style=dotted];
m3_643 -> m3_644  [key=0, style=solid];
m3_645 -> m3_25  [key=2, style=dotted];
m3_645 -> m3_646  [key=0, style=solid];
m3_647 -> m3_25  [key=2, style=dotted];
m3_647 -> m3_648  [key=0, style=solid];
m3_649 -> m3_25  [key=2, style=dotted];
m3_649 -> m3_650  [key=0, style=solid];
m3_651 -> m3_25  [key=2, style=dotted];
m3_651 -> m3_652  [key=0, style=solid];
m3_653 -> m3_25  [key=2, style=dotted];
m3_653 -> m3_654  [key=0, style=solid];
m3_655 -> m3_25  [key=2, style=dotted];
m3_655 -> m3_656  [key=0, style=solid];
m3_657 -> m3_25  [key=2, style=dotted];
m3_657 -> m3_658  [key=0, style=solid];
m3_658 -> m3_25  [key=2, style=dotted];
m3_658 -> m3_659  [key=0, style=solid];
m3_660 -> m3_25  [key=2, style=dotted];
m3_660 -> m3_661  [key=0, style=solid];
m3_661 -> m3_25  [key=2, style=dotted];
m3_661 -> m3_662  [key=0, style=solid];
m3_634 -> m3_635  [key=0, style=solid];
m3_634 -> m3_634  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_663 -> m3_633  [key=0, style=bold, color=blue];
m3_248 -> m3_249  [key=0, style=solid];
m3_250 -> m3_21  [key=2, style=dotted];
m3_250 -> m3_22  [key=2, style=dotted];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_253  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_254  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_257  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_258  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_250 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_251 -> m3_23  [key=2, style=dotted];
m3_251 -> m3_24  [key=2, style=dotted];
m3_251 -> m3_252  [key=0, style=solid];
m3_253 -> m3_23  [key=2, style=dotted];
m3_253 -> m3_24  [key=2, style=dotted];
m3_253 -> m3_254  [key=0, style=solid];
m3_255 -> m3_23  [key=2, style=dotted];
m3_255 -> m3_24  [key=2, style=dotted];
m3_255 -> m3_256  [key=0, style=solid];
m3_257 -> m3_23  [key=2, style=dotted];
m3_257 -> m3_24  [key=2, style=dotted];
m3_257 -> m3_258  [key=0, style=solid];
m3_252 -> m3_25  [key=2, style=dotted];
m3_252 -> m3_253  [key=0, style=solid];
m3_254 -> m3_25  [key=2, style=dotted];
m3_254 -> m3_255  [key=0, style=solid];
m3_256 -> m3_25  [key=2, style=dotted];
m3_256 -> m3_257  [key=0, style=solid];
m3_258 -> m3_25  [key=2, style=dotted];
m3_258 -> m3_259  [key=0, style=solid];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_249  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_172  [key=2, style=dotted];
m3_259 -> m3_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_260 -> m3_248  [key=0, style=bold, color=blue];
m3_996 -> m3_997  [key=0, style=solid];
m3_998 -> m3_21  [key=2, style=dotted];
m3_998 -> m3_22  [key=2, style=dotted];
m3_998 -> m3_999  [key=0, style=solid];
m3_999 -> m3_23  [key=2, style=dotted];
m3_999 -> m3_999  [key=0, style=solid];
m3_999 -> m3_1000  [key=0, style=solid];
m3_997 -> m3_998  [key=0, style=solid];
m3_997 -> m3_997  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1000 -> m3_996  [key=0, style=bold, color=blue];
m3_1803 -> m3_1804  [key=0, style=solid];
m3_1805 -> m3_21  [key=2, style=dotted];
m3_1805 -> m3_22  [key=2, style=dotted];
m3_1805 -> m3_1806  [key=0, style=solid];
m3_1805 -> m3_1807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1805 -> m3_1808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1805 -> m3_1809  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1806 -> m3_23  [key=2, style=dotted];
m3_1806 -> m3_24  [key=2, style=dotted];
m3_1806 -> m3_1807  [key=0, style=solid];
m3_1807 -> m3_23  [key=2, style=dotted];
m3_1807 -> m3_24  [key=2, style=dotted];
m3_1807 -> m3_1808  [key=0, style=solid];
m3_1808 -> m3_23  [key=2, style=dotted];
m3_1808 -> m3_24  [key=2, style=dotted];
m3_1808 -> m3_1809  [key=0, style=solid];
m3_1809 -> m3_23  [key=2, style=dotted];
m3_1809 -> m3_1810  [key=0, style=solid];
m3_1809 -> m3_158  [key=2, style=dotted];
m3_1804 -> m3_1805  [key=0, style=solid];
m3_1804 -> m3_1804  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1810 -> m3_1803  [key=0, style=bold, color=blue];
m3_2391 -> m3_2392  [key=0, style=solid];
m3_2393 -> m3_21  [key=2, style=dotted];
m3_2393 -> m3_22  [key=2, style=dotted];
m3_2393 -> m3_2394  [key=0, style=solid];
m3_2393 -> m3_2397  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2392 -> m3_2393  [key=0, style=solid];
m3_2392 -> m3_2392  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2394 -> m3_2395  [key=0, style=solid];
m3_2394 -> m3_172  [key=2, style=dotted];
m3_2394 -> m3_2396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2395 -> m3_2391  [key=0, style=bold, color=blue];
m3_1629 -> m3_1630  [key=0, style=solid];
m3_1630 -> m3_21  [key=2, style=dotted];
m3_1630 -> m3_22  [key=2, style=dotted];
m3_1630 -> m3_1631  [key=0, style=solid];
m3_1630 -> m3_1634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1631 -> m3_1632  [key=0, style=solid];
m3_1631 -> m3_172  [key=2, style=dotted];
m3_1631 -> m3_1633  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1632 -> m3_1629  [key=0, style=bold, color=blue];
m3_586 -> m3_587  [key=0, style=solid];
m3_587 -> m3_589  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_587 -> m3_172  [key=2, style=dotted];
m3_587 -> m3_588  [key=0, style=solid];
m3_588 -> m3_586  [key=0, style=bold, color=blue];
m3_865 -> m3_866  [key=0, style=solid];
m3_866 -> m3_21  [key=2, style=dotted];
m3_866 -> m3_22  [key=2, style=dotted];
m3_866 -> m3_867  [key=0, style=solid];
m3_866 -> m3_868  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_866 -> m3_869  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_867 -> m3_24  [key=2, style=dotted];
m3_867 -> m3_868  [key=0, style=solid];
m3_867 -> m3_378  [key=2, style=dotted];
m3_869 -> m3_25  [key=2, style=dotted];
m3_869 -> m3_870  [key=0, style=solid];
m3_868 -> m3_869  [key=0, style=solid];
m3_868 -> m3_846  [key=2, style=dotted];
m3_868 -> m3_871  [key=2, style=dotted];
m3_870 -> m3_865  [key=0, style=bold, color=blue];
m3_424 -> m3_425  [key=0, style=solid];
m3_426 -> m3_21  [key=2, style=dotted];
m3_426 -> m3_22  [key=2, style=dotted];
m3_426 -> m3_427  [key=0, style=solid];
m3_427 -> m3_23  [key=2, style=dotted];
m3_427 -> m3_427  [key=0, style=solid];
m3_427 -> m3_428  [key=0, style=solid];
m3_425 -> m3_426  [key=0, style=solid];
m3_425 -> m3_425  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_428 -> m3_424  [key=0, style=bold, color=blue];
m3_1045 -> m3_1046  [key=0, style=solid];
m3_1047 -> m3_21  [key=2, style=dotted];
m3_1047 -> m3_22  [key=2, style=dotted];
m3_1047 -> m3_1048  [key=0, style=solid];
m3_1049 -> m3_21  [key=2, style=dotted];
m3_1049 -> m3_22  [key=2, style=dotted];
m3_1049 -> m3_1050  [key=0, style=solid];
m3_1051 -> m3_21  [key=2, style=dotted];
m3_1051 -> m3_22  [key=2, style=dotted];
m3_1051 -> m3_1052  [key=0, style=solid];
m3_1053 -> m3_21  [key=2, style=dotted];
m3_1053 -> m3_22  [key=2, style=dotted];
m3_1053 -> m3_1054  [key=0, style=solid];
m3_1055 -> m3_21  [key=2, style=dotted];
m3_1055 -> m3_22  [key=2, style=dotted];
m3_1055 -> m3_1056  [key=0, style=solid];
m3_1055 -> m3_1068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1057 -> m3_21  [key=2, style=dotted];
m3_1057 -> m3_22  [key=2, style=dotted];
m3_1057 -> m3_1058  [key=0, style=solid];
m3_1057 -> m3_1059  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1057 -> m3_1071  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1060 -> m3_21  [key=2, style=dotted];
m3_1060 -> m3_22  [key=2, style=dotted];
m3_1060 -> m3_1061  [key=0, style=solid];
m3_1062 -> m3_21  [key=2, style=dotted];
m3_1062 -> m3_22  [key=2, style=dotted];
m3_1062 -> m3_1063  [key=0, style=solid];
m3_1064 -> m3_21  [key=2, style=dotted];
m3_1064 -> m3_22  [key=2, style=dotted];
m3_1064 -> m3_1065  [key=0, style=solid];
m3_1064 -> m3_1074  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1048 -> m3_25  [key=2, style=dotted];
m3_1048 -> m3_1049  [key=0, style=solid];
m3_1048 -> m3_244  [key=2, style=dotted];
m3_1050 -> m3_25  [key=2, style=dotted];
m3_1050 -> m3_1051  [key=0, style=solid];
m3_1050 -> m3_244  [key=2, style=dotted];
m3_1052 -> m3_25  [key=2, style=dotted];
m3_1052 -> m3_1053  [key=0, style=solid];
m3_1052 -> m3_244  [key=2, style=dotted];
m3_1054 -> m3_25  [key=2, style=dotted];
m3_1054 -> m3_1055  [key=0, style=solid];
m3_1054 -> m3_244  [key=2, style=dotted];
m3_1061 -> m3_25  [key=2, style=dotted];
m3_1061 -> m3_1062  [key=0, style=solid];
m3_1061 -> m3_244  [key=2, style=dotted];
m3_1063 -> m3_25  [key=2, style=dotted];
m3_1063 -> m3_1064  [key=0, style=solid];
m3_1063 -> m3_244  [key=2, style=dotted];
m3_1046 -> m3_1047  [key=0, style=solid];
m3_1046 -> m3_1002  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m3_1056 -> m3_1057  [key=0, style=solid];
m3_1056 -> m3_172  [key=2, style=dotted];
m3_1056 -> m3_1067  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1058 -> m3_1059  [key=0, style=solid];
m3_1059 -> m3_1060  [key=0, style=solid];
m3_1059 -> m3_172  [key=2, style=dotted];
m3_1059 -> m3_1070  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1065 -> m3_1066  [key=0, style=solid];
m3_1065 -> m3_172  [key=2, style=dotted];
m3_1065 -> m3_1073  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1066 -> m3_1045  [key=0, style=bold, color=blue];
m3_437 -> m3_438  [key=0, style=solid];
m3_440 -> m3_21  [key=2, style=dotted];
m3_440 -> m3_441  [key=0, style=solid];
m3_440 -> m3_442  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_443  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_444  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_445  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_446  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_447  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_448  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_449  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_450  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_451  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_452  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_453  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_454  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_455  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_456  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_457  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_458  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_459  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_460  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_461  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_462  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_463  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_464  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_465  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_466  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_467  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_468  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_469  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_470  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_471  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_472  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_473  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_474  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_475  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_476  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_477  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_478  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_479  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_480  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_481  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_482  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_483  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_484  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_485  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_486  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_440 -> m3_487  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_439 -> m3_22  [key=2, style=dotted];
m3_439 -> m3_440  [key=0, style=solid];
m3_444 -> m3_23  [key=2, style=dotted];
m3_444 -> m3_445  [key=0, style=solid];
m3_448 -> m3_23  [key=2, style=dotted];
m3_448 -> m3_449  [key=0, style=solid];
m3_453 -> m3_23  [key=2, style=dotted];
m3_453 -> m3_454  [key=0, style=solid];
m3_458 -> m3_23  [key=2, style=dotted];
m3_458 -> m3_459  [key=0, style=solid];
m3_463 -> m3_23  [key=2, style=dotted];
m3_463 -> m3_464  [key=0, style=solid];
m3_467 -> m3_23  [key=2, style=dotted];
m3_467 -> m3_468  [key=0, style=solid];
m3_473 -> m3_23  [key=2, style=dotted];
m3_473 -> m3_474  [key=0, style=solid];
m3_479 -> m3_23  [key=2, style=dotted];
m3_479 -> m3_480  [key=0, style=solid];
m3_483 -> m3_23  [key=2, style=dotted];
m3_483 -> m3_484  [key=0, style=solid];
m3_487 -> m3_23  [key=2, style=dotted];
m3_487 -> m3_488  [key=0, style=solid];
m3_487 -> m3_158  [key=2, style=dotted];
m3_441 -> m3_25  [key=2, style=dotted];
m3_441 -> m3_442  [key=0, style=solid];
m3_442 -> m3_25  [key=2, style=dotted];
m3_442 -> m3_443  [key=0, style=solid];
m3_443 -> m3_25  [key=2, style=dotted];
m3_443 -> m3_444  [key=0, style=solid];
m3_445 -> m3_25  [key=2, style=dotted];
m3_445 -> m3_446  [key=0, style=solid];
m3_446 -> m3_25  [key=2, style=dotted];
m3_446 -> m3_447  [key=0, style=solid];
m3_447 -> m3_25  [key=2, style=dotted];
m3_447 -> m3_448  [key=0, style=solid];
m3_449 -> m3_25  [key=2, style=dotted];
m3_449 -> m3_450  [key=0, style=solid];
m3_450 -> m3_25  [key=2, style=dotted];
m3_450 -> m3_451  [key=0, style=solid];
m3_451 -> m3_25  [key=2, style=dotted];
m3_451 -> m3_452  [key=0, style=solid];
m3_452 -> m3_25  [key=2, style=dotted];
m3_452 -> m3_453  [key=0, style=solid];
m3_454 -> m3_25  [key=2, style=dotted];
m3_454 -> m3_455  [key=0, style=solid];
m3_455 -> m3_25  [key=2, style=dotted];
m3_455 -> m3_456  [key=0, style=solid];
m3_456 -> m3_25  [key=2, style=dotted];
m3_456 -> m3_457  [key=0, style=solid];
m3_457 -> m3_25  [key=2, style=dotted];
m3_457 -> m3_458  [key=0, style=solid];
m3_459 -> m3_25  [key=2, style=dotted];
m3_459 -> m3_460  [key=0, style=solid];
m3_460 -> m3_25  [key=2, style=dotted];
m3_460 -> m3_461  [key=0, style=solid];
m3_461 -> m3_25  [key=2, style=dotted];
m3_461 -> m3_462  [key=0, style=solid];
m3_462 -> m3_25  [key=2, style=dotted];
m3_462 -> m3_463  [key=0, style=solid];
m3_464 -> m3_25  [key=2, style=dotted];
m3_464 -> m3_465  [key=0, style=solid];
m3_465 -> m3_25  [key=2, style=dotted];
m3_465 -> m3_466  [key=0, style=solid];
m3_466 -> m3_25  [key=2, style=dotted];
m3_466 -> m3_467  [key=0, style=solid];
m3_468 -> m3_25  [key=2, style=dotted];
m3_468 -> m3_469  [key=0, style=solid];
m3_469 -> m3_25  [key=2, style=dotted];
m3_469 -> m3_470  [key=0, style=solid];
m3_470 -> m3_25  [key=2, style=dotted];
m3_470 -> m3_471  [key=0, style=solid];
m3_471 -> m3_25  [key=2, style=dotted];
m3_471 -> m3_472  [key=0, style=solid];
m3_472 -> m3_25  [key=2, style=dotted];
m3_472 -> m3_473  [key=0, style=solid];
m3_474 -> m3_25  [key=2, style=dotted];
m3_474 -> m3_475  [key=0, style=solid];
m3_475 -> m3_25  [key=2, style=dotted];
m3_475 -> m3_476  [key=0, style=solid];
m3_476 -> m3_25  [key=2, style=dotted];
m3_476 -> m3_477  [key=0, style=solid];
m3_477 -> m3_25  [key=2, style=dotted];
m3_477 -> m3_478  [key=0, style=solid];
m3_478 -> m3_25  [key=2, style=dotted];
m3_478 -> m3_479  [key=0, style=solid];
m3_480 -> m3_25  [key=2, style=dotted];
m3_480 -> m3_481  [key=0, style=solid];
m3_481 -> m3_25  [key=2, style=dotted];
m3_481 -> m3_482  [key=0, style=solid];
m3_482 -> m3_25  [key=2, style=dotted];
m3_482 -> m3_483  [key=0, style=solid];
m3_484 -> m3_25  [key=2, style=dotted];
m3_484 -> m3_485  [key=0, style=solid];
m3_485 -> m3_25  [key=2, style=dotted];
m3_485 -> m3_486  [key=0, style=solid];
m3_486 -> m3_25  [key=2, style=dotted];
m3_486 -> m3_487  [key=0, style=solid];
m3_438 -> m3_439  [key=0, style=solid];
m3_438 -> m3_438  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m3_488 -> m3_437  [key=0, style=bold, color=blue];
m3_398 -> m3_399  [key=0, style=solid];
m3_400 -> m3_21  [key=2, style=dotted];
m3_400 -> m3_22  [key=2, style=dotted];
m3_400 -> m3_401  [key=0, style=solid];
m3_400 -> m3_404  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_399 -> m3_400  [key=0, style=solid];
m3_399 -> m3_399  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_401 -> m3_402  [key=0, style=solid];
m3_401 -> m3_172  [key=2, style=dotted];
m3_401 -> m3_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_402 -> m3_398  [key=0, style=bold, color=blue];
m3_1643 -> m3_1644  [key=0, style=solid];
m3_1644 -> m3_21  [key=2, style=dotted];
m3_1644 -> m3_22  [key=2, style=dotted];
m3_1644 -> m3_1645  [key=0, style=solid];
m3_1644 -> m3_1648  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1645 -> m3_1646  [key=0, style=solid];
m3_1645 -> m3_172  [key=2, style=dotted];
m3_1645 -> m3_1647  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1646 -> m3_1643  [key=0, style=bold, color=blue];
m3_1664 -> m3_1665  [key=0, style=solid];
m3_1666 -> m3_21  [key=2, style=dotted];
m3_1666 -> m3_22  [key=2, style=dotted];
m3_1666 -> m3_1667  [key=0, style=solid];
m3_1666 -> m3_1668  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1669  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1670  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1671  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1672  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1673  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1674  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1676  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1666 -> m3_1677  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1668 -> m3_23  [key=2, style=dotted];
m3_1668 -> m3_24  [key=2, style=dotted];
m3_1668 -> m3_1669  [key=0, style=solid];
m3_1670 -> m3_23  [key=2, style=dotted];
m3_1670 -> m3_24  [key=2, style=dotted];
m3_1670 -> m3_1671  [key=0, style=solid];
m3_1676 -> m3_23  [key=2, style=dotted];
m3_1676 -> m3_24  [key=2, style=dotted];
m3_1676 -> m3_1677  [key=0, style=solid];
m3_1669 -> m3_25  [key=2, style=dotted];
m3_1669 -> m3_1670  [key=0, style=solid];
m3_1671 -> m3_25  [key=2, style=dotted];
m3_1671 -> m3_1672  [key=0, style=solid];
m3_1673 -> m3_25  [key=2, style=dotted];
m3_1673 -> m3_1674  [key=0, style=solid];
m3_1674 -> m3_25  [key=2, style=dotted];
m3_1674 -> m3_1675  [key=0, style=solid];
m3_1677 -> m3_25  [key=2, style=dotted];
m3_1677 -> m3_1678  [key=0, style=solid];
m3_1675 -> m3_25  [key=2, style=dotted];
m3_1675 -> m3_1676  [key=0, style=solid];
m3_1665 -> m3_1666  [key=0, style=solid];
m3_1665 -> m3_1665  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1667 -> m3_1668  [key=0, style=solid];
m3_1667 -> m3_1574  [key=2, style=dotted];
m3_1672 -> m3_1673  [key=0, style=solid];
m3_1672 -> m3_1675  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1672 -> m3_244  [key=2, style=dotted];
m3_1678 -> m3_1664  [key=0, style=bold, color=blue];
m3_1636 -> m3_1637  [key=0, style=solid];
m3_1637 -> m3_21  [key=2, style=dotted];
m3_1637 -> m3_22  [key=2, style=dotted];
m3_1637 -> m3_1638  [key=0, style=solid];
m3_1637 -> m3_1641  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1638 -> m3_1639  [key=0, style=solid];
m3_1638 -> m3_172  [key=2, style=dotted];
m3_1638 -> m3_1640  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1639 -> m3_1636  [key=0, style=bold, color=blue];
m3_1679 -> m3_1680  [key=0, style=solid];
m3_1681 -> m3_21  [key=2, style=dotted];
m3_1681 -> m3_22  [key=2, style=dotted];
m3_1681 -> m3_1682  [key=0, style=solid];
m3_1681 -> m3_1684  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1681 -> m3_1686  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1681 -> m3_1687  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1684 -> m3_23  [key=2, style=dotted];
m3_1684 -> m3_1685  [key=0, style=solid];
m3_1686 -> m3_23  [key=2, style=dotted];
m3_1686 -> m3_24  [key=2, style=dotted];
m3_1686 -> m3_1687  [key=0, style=solid];
m3_1687 -> m3_25  [key=2, style=dotted];
m3_1687 -> m3_1688  [key=0, style=solid];
m3_1687 -> m3_1689  [key=2, style=dotted];
m3_1680 -> m3_1681  [key=0, style=solid];
m3_1680 -> m3_1680  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1682 -> m3_1683  [key=0, style=solid];
m3_1682 -> m3_1685  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1682 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_1683 -> m3_1684  [key=0, style=solid];
m3_1683 -> m3_1686  [key=0, style=solid];
m3_1685 -> m3_1683  [key=0, style=solid];
m3_1685 -> m3_1685  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1688 -> m3_1679  [key=0, style=bold, color=blue];
m3_2510 -> m3_2511  [key=0, style=solid];
m3_2512 -> m3_21  [key=2, style=dotted];
m3_2512 -> m3_22  [key=2, style=dotted];
m3_2512 -> m3_2513  [key=0, style=solid];
m3_2512 -> m3_2514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2540  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2516  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2517  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2520  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2529  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2530  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2531  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2512 -> m3_2537  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2513 -> m3_23  [key=2, style=dotted];
m3_2513 -> m3_24  [key=2, style=dotted];
m3_2513 -> m3_2514  [key=0, style=solid];
m3_2517 -> m3_23  [key=2, style=dotted];
m3_2517 -> m3_24  [key=2, style=dotted];
m3_2517 -> m3_2518  [key=0, style=solid];
m3_2519 -> m3_23  [key=2, style=dotted];
m3_2519 -> m3_24  [key=2, style=dotted];
m3_2519 -> m3_2520  [key=0, style=solid];
m3_2521 -> m3_23  [key=2, style=dotted];
m3_2521 -> m3_24  [key=2, style=dotted];
m3_2521 -> m3_2522  [key=0, style=solid];
m3_2523 -> m3_23  [key=2, style=dotted];
m3_2523 -> m3_24  [key=2, style=dotted];
m3_2523 -> m3_2524  [key=0, style=solid];
m3_2525 -> m3_23  [key=2, style=dotted];
m3_2525 -> m3_24  [key=2, style=dotted];
m3_2525 -> m3_2526  [key=0, style=solid];
m3_2529 -> m3_23  [key=2, style=dotted];
m3_2529 -> m3_24  [key=2, style=dotted];
m3_2529 -> m3_2530  [key=0, style=solid];
m3_2531 -> m3_23  [key=2, style=dotted];
m3_2531 -> m3_24  [key=2, style=dotted];
m3_2531 -> m3_2532  [key=0, style=solid];
m3_2533 -> m3_23  [key=2, style=dotted];
m3_2533 -> m3_24  [key=2, style=dotted];
m3_2533 -> m3_2534  [key=0, style=solid];
m3_2535 -> m3_23  [key=2, style=dotted];
m3_2535 -> m3_24  [key=2, style=dotted];
m3_2535 -> m3_2536  [key=0, style=solid];
m3_2537 -> m3_23  [key=2, style=dotted];
m3_2537 -> m3_2538  [key=0, style=solid];
m3_2537 -> m3_158  [key=2, style=dotted];
m3_2514 -> m3_25  [key=2, style=dotted];
m3_2514 -> m3_2515  [key=0, style=solid];
m3_2516 -> m3_25  [key=2, style=dotted];
m3_2516 -> m3_2517  [key=0, style=solid];
m3_2518 -> m3_25  [key=2, style=dotted];
m3_2518 -> m3_2519  [key=0, style=solid];
m3_2520 -> m3_25  [key=2, style=dotted];
m3_2520 -> m3_2521  [key=0, style=solid];
m3_2522 -> m3_25  [key=2, style=dotted];
m3_2522 -> m3_2523  [key=0, style=solid];
m3_2524 -> m3_25  [key=2, style=dotted];
m3_2524 -> m3_2525  [key=0, style=solid];
m3_2526 -> m3_25  [key=2, style=dotted];
m3_2526 -> m3_2527  [key=0, style=solid];
m3_2528 -> m3_25  [key=2, style=dotted];
m3_2528 -> m3_2529  [key=0, style=solid];
m3_2530 -> m3_25  [key=2, style=dotted];
m3_2530 -> m3_2531  [key=0, style=solid];
m3_2532 -> m3_25  [key=2, style=dotted];
m3_2532 -> m3_2533  [key=0, style=solid];
m3_2534 -> m3_25  [key=2, style=dotted];
m3_2534 -> m3_2535  [key=0, style=solid];
m3_2536 -> m3_25  [key=2, style=dotted];
m3_2536 -> m3_2537  [key=0, style=solid];
m3_2511 -> m3_2512  [key=0, style=solid];
m3_2511 -> m3_2511  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2515 -> m3_2516  [key=0, style=solid];
m3_2515 -> m3_1907  [key=2, style=dotted];
m3_2515 -> m3_2539  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2527 -> m3_2528  [key=0, style=solid];
m3_2527 -> m3_1907  [key=2, style=dotted];
m3_2527 -> m3_2542  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2538 -> m3_2510  [key=0, style=bold, color=blue];
m3_229 -> m3_230  [key=0, style=solid];
m3_231 -> m3_21  [key=2, style=dotted];
m3_231 -> m3_22  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_233 -> m3_21  [key=2, style=dotted];
m3_233 -> m3_22  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_242  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_235 -> m3_21  [key=2, style=dotted];
m3_235 -> m3_22  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_230 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_230 -> m3_230  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_172  [key=2, style=dotted];
m3_232 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_172  [key=2, style=dotted];
m3_234 -> m3_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_172  [key=2, style=dotted];
m3_236 -> m3_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_237 -> m3_229  [key=0, style=bold, color=blue];
m3_1414 -> m3_1415  [key=0, style=solid];
m3_1415 -> m3_21  [key=2, style=dotted];
m3_1415 -> m3_22  [key=2, style=dotted];
m3_1415 -> m3_1416  [key=0, style=solid];
m3_1415 -> m3_1419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1416 -> m3_1417  [key=0, style=solid];
m3_1416 -> m3_172  [key=2, style=dotted];
m3_1416 -> m3_1418  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1417 -> m3_1414  [key=0, style=bold, color=blue];
m3_349 -> m3_336  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_337  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_338  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_339  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_340  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_341  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_342  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_343  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_344  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_345  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_346  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_347  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m3_349 -> m3_350  [key=0, style=solid];
m3_349 -> m3_353  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadString"];
m3_351 -> m3_21  [key=2, style=dotted];
m3_351 -> m3_352  [key=0, style=solid];
m3_351 -> m3_358  [key=2, style=dotted];
m3_351 -> m3_353  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_352 -> m3_23  [key=2, style=dotted];
m3_352 -> m3_353  [key=0, style=solid];
m3_350 -> m3_351  [key=0, style=solid];
m3_350 -> m3_356  [key=2, style=dotted];
m3_350 -> m3_357  [key=2, style=dotted];
m3_353 -> m3_354  [key=0, style=solid];
m3_354 -> m3_355  [key=0, style=solid];
m3_355 -> m3_349  [key=0, style=bold, color=blue];
m3_1650 -> m3_1651  [key=0, style=solid];
m3_1652 -> m3_21  [key=2, style=dotted];
m3_1652 -> m3_22  [key=2, style=dotted];
m3_1652 -> m3_1653  [key=0, style=solid];
m3_1652 -> m3_1654  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1652 -> m3_1655  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1652 -> m3_1656  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1652 -> m3_1657  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1652 -> m3_1658  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1652 -> m3_1659  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1652 -> m3_1661  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1652 -> m3_1662  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1653 -> m3_23  [key=2, style=dotted];
m3_1653 -> m3_24  [key=2, style=dotted];
m3_1653 -> m3_1654  [key=0, style=solid];
m3_1655 -> m3_23  [key=2, style=dotted];
m3_1655 -> m3_24  [key=2, style=dotted];
m3_1655 -> m3_1656  [key=0, style=solid];
m3_1661 -> m3_23  [key=2, style=dotted];
m3_1661 -> m3_24  [key=2, style=dotted];
m3_1661 -> m3_1662  [key=0, style=solid];
m3_1654 -> m3_25  [key=2, style=dotted];
m3_1654 -> m3_1655  [key=0, style=solid];
m3_1656 -> m3_25  [key=2, style=dotted];
m3_1656 -> m3_1657  [key=0, style=solid];
m3_1658 -> m3_25  [key=2, style=dotted];
m3_1658 -> m3_1659  [key=0, style=solid];
m3_1659 -> m3_25  [key=2, style=dotted];
m3_1659 -> m3_1660  [key=0, style=solid];
m3_1662 -> m3_25  [key=2, style=dotted];
m3_1662 -> m3_1663  [key=0, style=solid];
m3_1660 -> m3_25  [key=2, style=dotted];
m3_1660 -> m3_1661  [key=0, style=solid];
m3_1651 -> m3_1652  [key=0, style=solid];
m3_1651 -> m3_1651  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1657 -> m3_1658  [key=0, style=solid];
m3_1657 -> m3_1660  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1657 -> m3_244  [key=2, style=dotted];
m3_1663 -> m3_1650  [key=0, style=bold, color=blue];
m3_1111 -> m3_1112  [key=0, style=solid];
m3_1141 -> m3_21  [key=2, style=dotted];
m3_1141 -> m3_22  [key=2, style=dotted];
m3_1141 -> m3_1142  [key=0, style=solid];
m3_1141 -> m3_1161  [key=2, style=dotted];
m3_1141 -> m3_1145  [key=1, style=dashed, color=darkseagreen4, label=jsonObject];
m3_1146 -> m3_25  [key=2, style=dotted];
m3_1146 -> m3_1147  [key=0, style=solid];
m3_1146 -> m3_1159  [key=2, style=dotted];
m3_1139 -> m3_1141  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1139 -> m3_1146  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1139 -> m3_1140  [key=0, style=solid];
m3_1139 -> m3_1159  [key=2, style=dotted];
m3_1140 -> m3_1141  [key=0, style=solid];
m3_1140 -> m3_1160  [key=2, style=dotted];
m3_1140 -> m3_1145  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_1142 -> m3_1146  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_1142 -> m3_1143  [key=0, style=solid];
m3_1142 -> m3_1148  [key=2, style=dotted];
m3_1145 -> m3_1146  [key=0, style=solid];
m3_1145 -> m3_1162  [key=2, style=dotted];
m3_1112 -> m3_1139  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_1112 -> m3_1113  [key=0, style=solid];
m3_1112 -> m3_1148  [key=2, style=dotted];
m3_1138 -> m3_1139  [key=0, style=solid];
m3_1138 -> m3_631  [key=2, style=dotted];
m3_1143 -> m3_1144  [key=0, style=solid];
m3_1143 -> m3_1149  [key=2, style=dotted];
m3_1144 -> m3_1145  [key=0, style=solid];
m3_1144 -> m3_628  [key=2, style=dotted];
m3_1124 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_1124 -> m3_1125  [key=0, style=solid];
m3_1124 -> m3_1126  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1124 -> m3_1127  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1113 -> m3_1114  [key=0, style=solid];
m3_1113 -> m3_1149  [key=2, style=dotted];
m3_1114 -> m3_1138  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1115  [key=0, style=solid];
m3_1114 -> m3_628  [key=2, style=dotted];
m3_1114 -> m3_1116  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1117  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1118  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1119  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1120  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1121  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1122  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1123  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1126  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1128  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1129  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1130  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1131  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1132  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1133  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1134  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1135  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1136  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1114 -> m3_1137  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_1137 -> m3_1138  [key=0, style=solid];
m3_1137 -> m3_1158  [key=2, style=dotted];
m3_1133 -> m3_631  [key=2, style=dotted];
m3_1133 -> m3_1134  [key=0, style=solid];
m3_1123 -> m3_1124  [key=0, style=solid];
m3_1123 -> m3_1150  [key=2, style=dotted];
m3_1125 -> m3_1126  [key=0, style=solid];
m3_1125 -> m3_1128  [key=0, style=solid];
m3_1126 -> m3_1127  [key=0, style=solid];
m3_1126 -> m3_1154  [key=2, style=dotted];
m3_1127 -> m3_1125  [key=0, style=solid];
m3_1127 -> m3_1127  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1115 -> m3_1116  [key=0, style=solid];
m3_1115 -> m3_1150  [key=2, style=dotted];
m3_1116 -> m3_1117  [key=0, style=solid];
m3_1116 -> m3_1151  [key=2, style=dotted];
m3_1117 -> m3_1118  [key=0, style=solid];
m3_1117 -> m3_1152  [key=2, style=dotted];
m3_1118 -> m3_1119  [key=0, style=solid];
m3_1118 -> m3_1153  [key=2, style=dotted];
m3_1119 -> m3_1120  [key=0, style=solid];
m3_1119 -> m3_1154  [key=2, style=dotted];
m3_1120 -> m3_1121  [key=0, style=solid];
m3_1120 -> m3_1153  [key=2, style=dotted];
m3_1121 -> m3_1122  [key=0, style=solid];
m3_1121 -> m3_1155  [key=2, style=dotted];
m3_1122 -> m3_1123  [key=0, style=solid];
m3_1122 -> m3_1153  [key=2, style=dotted];
m3_1128 -> m3_1129  [key=0, style=solid];
m3_1128 -> m3_1152  [key=2, style=dotted];
m3_1129 -> m3_1130  [key=0, style=solid];
m3_1129 -> m3_1153  [key=2, style=dotted];
m3_1130 -> m3_1131  [key=0, style=solid];
m3_1130 -> m3_1156  [key=2, style=dotted];
m3_1131 -> m3_1132  [key=0, style=solid];
m3_1131 -> m3_1157  [key=2, style=dotted];
m3_1132 -> m3_1133  [key=0, style=solid];
m3_1132 -> m3_1154  [key=2, style=dotted];
m3_1134 -> m3_1135  [key=0, style=solid];
m3_1134 -> m3_1157  [key=2, style=dotted];
m3_1135 -> m3_1136  [key=0, style=solid];
m3_1135 -> m3_1155  [key=2, style=dotted];
m3_1136 -> m3_1137  [key=0, style=solid];
m3_1136 -> m3_1158  [key=2, style=dotted];
m3_1147 -> m3_1111  [key=0, style=bold, color=blue];
m3_2367 -> m3_2368  [key=0, style=solid];
m3_2369 -> m3_21  [key=2, style=dotted];
m3_2369 -> m3_22  [key=2, style=dotted];
m3_2369 -> m3_2370  [key=0, style=solid];
m3_2369 -> m3_2373  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2368 -> m3_2369  [key=0, style=solid];
m3_2368 -> m3_2368  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2370 -> m3_2371  [key=0, style=solid];
m3_2370 -> m3_172  [key=2, style=dotted];
m3_2370 -> m3_2372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2371 -> m3_2367  [key=0, style=bold, color=blue];
m3_2545 -> m3_2546  [key=0, style=solid];
m3_2547 -> m3_21  [key=2, style=dotted];
m3_2547 -> m3_2548  [key=0, style=solid];
m3_2547 -> m3_358  [key=2, style=dotted];
m3_2547 -> m3_396  [key=2, style=dotted];
m3_2547 -> m3_397  [key=2, style=dotted];
m3_2547 -> m3_2549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2552  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2556  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2559  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2561  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2563  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2564  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2565  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2566  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2568  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2569  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2570  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2571  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2572  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2573  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2576  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2577  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2578  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2547 -> m3_2584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2548 -> m3_23  [key=2, style=dotted];
m3_2548 -> m3_24  [key=2, style=dotted];
m3_2548 -> m3_2549  [key=0, style=solid];
m3_2549 -> m3_23  [key=2, style=dotted];
m3_2549 -> m3_24  [key=2, style=dotted];
m3_2549 -> m3_2550  [key=0, style=solid];
m3_2551 -> m3_23  [key=2, style=dotted];
m3_2551 -> m3_24  [key=2, style=dotted];
m3_2551 -> m3_2552  [key=0, style=solid];
m3_2554 -> m3_23  [key=2, style=dotted];
m3_2554 -> m3_24  [key=2, style=dotted];
m3_2554 -> m3_2555  [key=0, style=solid];
m3_2557 -> m3_23  [key=2, style=dotted];
m3_2557 -> m3_24  [key=2, style=dotted];
m3_2557 -> m3_2558  [key=0, style=solid];
m3_2560 -> m3_23  [key=2, style=dotted];
m3_2560 -> m3_24  [key=2, style=dotted];
m3_2560 -> m3_2561  [key=0, style=solid];
m3_2563 -> m3_23  [key=2, style=dotted];
m3_2563 -> m3_24  [key=2, style=dotted];
m3_2563 -> m3_2564  [key=0, style=solid];
m3_2566 -> m3_23  [key=2, style=dotted];
m3_2566 -> m3_24  [key=2, style=dotted];
m3_2566 -> m3_2567  [key=0, style=solid];
m3_2569 -> m3_23  [key=2, style=dotted];
m3_2569 -> m3_24  [key=2, style=dotted];
m3_2569 -> m3_2570  [key=0, style=solid];
m3_2572 -> m3_23  [key=2, style=dotted];
m3_2572 -> m3_24  [key=2, style=dotted];
m3_2572 -> m3_2573  [key=0, style=solid];
m3_2575 -> m3_23  [key=2, style=dotted];
m3_2575 -> m3_24  [key=2, style=dotted];
m3_2575 -> m3_2576  [key=0, style=solid];
m3_2578 -> m3_23  [key=2, style=dotted];
m3_2578 -> m3_24  [key=2, style=dotted];
m3_2578 -> m3_2579  [key=0, style=solid];
m3_2581 -> m3_23  [key=2, style=dotted];
m3_2581 -> m3_24  [key=2, style=dotted];
m3_2581 -> m3_2582  [key=0, style=solid];
m3_2584 -> m3_23  [key=2, style=dotted];
m3_2584 -> m3_24  [key=2, style=dotted];
m3_2584 -> m3_2585  [key=0, style=solid];
m3_2550 -> m3_25  [key=2, style=dotted];
m3_2550 -> m3_2551  [key=0, style=solid];
m3_2552 -> m3_25  [key=2, style=dotted];
m3_2552 -> m3_2553  [key=0, style=solid];
m3_2553 -> m3_25  [key=2, style=dotted];
m3_2553 -> m3_2554  [key=0, style=solid];
m3_2555 -> m3_25  [key=2, style=dotted];
m3_2555 -> m3_2556  [key=0, style=solid];
m3_2556 -> m3_25  [key=2, style=dotted];
m3_2556 -> m3_2557  [key=0, style=solid];
m3_2558 -> m3_25  [key=2, style=dotted];
m3_2558 -> m3_2559  [key=0, style=solid];
m3_2559 -> m3_25  [key=2, style=dotted];
m3_2559 -> m3_2560  [key=0, style=solid];
m3_2561 -> m3_25  [key=2, style=dotted];
m3_2561 -> m3_2562  [key=0, style=solid];
m3_2562 -> m3_25  [key=2, style=dotted];
m3_2562 -> m3_2563  [key=0, style=solid];
m3_2564 -> m3_25  [key=2, style=dotted];
m3_2564 -> m3_2565  [key=0, style=solid];
m3_2565 -> m3_25  [key=2, style=dotted];
m3_2565 -> m3_2566  [key=0, style=solid];
m3_2567 -> m3_25  [key=2, style=dotted];
m3_2567 -> m3_2568  [key=0, style=solid];
m3_2568 -> m3_25  [key=2, style=dotted];
m3_2568 -> m3_2569  [key=0, style=solid];
m3_2570 -> m3_25  [key=2, style=dotted];
m3_2570 -> m3_2571  [key=0, style=solid];
m3_2571 -> m3_25  [key=2, style=dotted];
m3_2571 -> m3_2572  [key=0, style=solid];
m3_2573 -> m3_25  [key=2, style=dotted];
m3_2573 -> m3_2574  [key=0, style=solid];
m3_2574 -> m3_25  [key=2, style=dotted];
m3_2574 -> m3_2575  [key=0, style=solid];
m3_2576 -> m3_25  [key=2, style=dotted];
m3_2576 -> m3_2577  [key=0, style=solid];
m3_2577 -> m3_25  [key=2, style=dotted];
m3_2577 -> m3_2578  [key=0, style=solid];
m3_2579 -> m3_25  [key=2, style=dotted];
m3_2579 -> m3_2580  [key=0, style=solid];
m3_2580 -> m3_25  [key=2, style=dotted];
m3_2580 -> m3_2581  [key=0, style=solid];
m3_2582 -> m3_25  [key=2, style=dotted];
m3_2582 -> m3_2583  [key=0, style=solid];
m3_2583 -> m3_25  [key=2, style=dotted];
m3_2583 -> m3_2584  [key=0, style=solid];
m3_2546 -> m3_2547  [key=0, style=solid];
m3_2546 -> m3_2546  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2585 -> m3_2545  [key=0, style=bold, color=blue];
m3_1701 -> m3_1702  [key=0, style=solid];
m3_1703 -> m3_21  [key=2, style=dotted];
m3_1703 -> m3_22  [key=2, style=dotted];
m3_1703 -> m3_1704  [key=0, style=solid];
m3_1703 -> m3_1705  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1703 -> m3_1706  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1703 -> m3_1707  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1703 -> m3_1708  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1704 -> m3_23  [key=2, style=dotted];
m3_1704 -> m3_24  [key=2, style=dotted];
m3_1704 -> m3_1705  [key=0, style=solid];
m3_1707 -> m3_23  [key=2, style=dotted];
m3_1707 -> m3_24  [key=2, style=dotted];
m3_1707 -> m3_1708  [key=0, style=solid];
m3_1705 -> m3_25  [key=2, style=dotted];
m3_1705 -> m3_1706  [key=0, style=solid];
m3_1706 -> m3_25  [key=2, style=dotted];
m3_1706 -> m3_1707  [key=0, style=solid];
m3_1708 -> m3_25  [key=2, style=dotted];
m3_1708 -> m3_1709  [key=0, style=solid];
m3_1702 -> m3_1703  [key=0, style=solid];
m3_1702 -> m3_1702  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1709 -> m3_1701  [key=0, style=bold, color=blue];
m3_1622 -> m3_1623  [key=0, style=solid];
m3_1623 -> m3_21  [key=2, style=dotted];
m3_1623 -> m3_22  [key=2, style=dotted];
m3_1623 -> m3_1624  [key=0, style=solid];
m3_1623 -> m3_1627  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1624 -> m3_1625  [key=0, style=solid];
m3_1624 -> m3_172  [key=2, style=dotted];
m3_1624 -> m3_1626  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1625 -> m3_1622  [key=0, style=bold, color=blue];
m3_1076 -> m3_1077  [key=0, style=solid];
m3_1078 -> m3_21  [key=2, style=dotted];
m3_1078 -> m3_22  [key=2, style=dotted];
m3_1078 -> m3_1079  [key=0, style=solid];
m3_1078 -> m3_1080  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1078 -> m3_1081  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1082 -> m3_21  [key=2, style=dotted];
m3_1082 -> m3_22  [key=2, style=dotted];
m3_1082 -> m3_1083  [key=0, style=solid];
m3_1082 -> m3_1084  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1082 -> m3_1085  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1086 -> m3_21  [key=2, style=dotted];
m3_1086 -> m3_22  [key=2, style=dotted];
m3_1086 -> m3_1087  [key=0, style=solid];
m3_1086 -> m3_1088  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1086 -> m3_1089  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1090 -> m3_21  [key=2, style=dotted];
m3_1090 -> m3_22  [key=2, style=dotted];
m3_1090 -> m3_1091  [key=0, style=solid];
m3_1090 -> m3_1092  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1090 -> m3_1093  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1094 -> m3_21  [key=2, style=dotted];
m3_1094 -> m3_22  [key=2, style=dotted];
m3_1094 -> m3_1095  [key=0, style=solid];
m3_1094 -> m3_1106  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1096 -> m3_21  [key=2, style=dotted];
m3_1096 -> m3_22  [key=2, style=dotted];
m3_1096 -> m3_1097  [key=0, style=solid];
m3_1096 -> m3_1098  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1096 -> m3_1099  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1100 -> m3_21  [key=2, style=dotted];
m3_1100 -> m3_22  [key=2, style=dotted];
m3_1100 -> m3_1101  [key=0, style=solid];
m3_1102 -> m3_21  [key=2, style=dotted];
m3_1102 -> m3_22  [key=2, style=dotted];
m3_1102 -> m3_1103  [key=0, style=solid];
m3_1102 -> m3_1109  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1079 -> m3_23  [key=2, style=dotted];
m3_1079 -> m3_24  [key=2, style=dotted];
m3_1079 -> m3_1080  [key=0, style=solid];
m3_1083 -> m3_23  [key=2, style=dotted];
m3_1083 -> m3_24  [key=2, style=dotted];
m3_1083 -> m3_1084  [key=0, style=solid];
m3_1087 -> m3_23  [key=2, style=dotted];
m3_1087 -> m3_24  [key=2, style=dotted];
m3_1087 -> m3_1088  [key=0, style=solid];
m3_1091 -> m3_23  [key=2, style=dotted];
m3_1091 -> m3_24  [key=2, style=dotted];
m3_1091 -> m3_1092  [key=0, style=solid];
m3_1097 -> m3_23  [key=2, style=dotted];
m3_1097 -> m3_24  [key=2, style=dotted];
m3_1097 -> m3_1098  [key=0, style=solid];
m3_1101 -> m3_23  [key=2, style=dotted];
m3_1101 -> m3_1102  [key=0, style=solid];
m3_1101 -> m3_158  [key=2, style=dotted];
m3_1080 -> m3_25  [key=2, style=dotted];
m3_1080 -> m3_1081  [key=0, style=solid];
m3_1081 -> m3_25  [key=2, style=dotted];
m3_1081 -> m3_1082  [key=0, style=solid];
m3_1084 -> m3_25  [key=2, style=dotted];
m3_1084 -> m3_1085  [key=0, style=solid];
m3_1085 -> m3_25  [key=2, style=dotted];
m3_1085 -> m3_1086  [key=0, style=solid];
m3_1088 -> m3_25  [key=2, style=dotted];
m3_1088 -> m3_1089  [key=0, style=solid];
m3_1089 -> m3_25  [key=2, style=dotted];
m3_1089 -> m3_1090  [key=0, style=solid];
m3_1092 -> m3_25  [key=2, style=dotted];
m3_1092 -> m3_1093  [key=0, style=solid];
m3_1093 -> m3_25  [key=2, style=dotted];
m3_1093 -> m3_1094  [key=0, style=solid];
m3_1098 -> m3_25  [key=2, style=dotted];
m3_1098 -> m3_1099  [key=0, style=solid];
m3_1099 -> m3_25  [key=2, style=dotted];
m3_1099 -> m3_1100  [key=0, style=solid];
m3_1077 -> m3_1078  [key=0, style=solid];
m3_1077 -> m3_1002  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m3_1095 -> m3_1096  [key=0, style=solid];
m3_1095 -> m3_172  [key=2, style=dotted];
m3_1095 -> m3_1105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1103 -> m3_1104  [key=0, style=solid];
m3_1103 -> m3_172  [key=2, style=dotted];
m3_1103 -> m3_1108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1104 -> m3_1076  [key=0, style=bold, color=blue];
m3_820 -> m3_821  [key=0, style=solid];
m3_821 -> m3_21  [key=2, style=dotted];
m3_821 -> m3_22  [key=2, style=dotted];
m3_821 -> m3_822  [key=0, style=solid];
m3_821 -> m3_823  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_822 -> m3_24  [key=2, style=dotted];
m3_822 -> m3_823  [key=0, style=solid];
m3_822 -> m3_378  [key=2, style=dotted];
m3_823 -> m3_25  [key=2, style=dotted];
m3_823 -> m3_824  [key=0, style=solid];
m3_824 -> m3_820  [key=0, style=bold, color=blue];
m3_406 -> m3_407  [key=0, style=solid];
m3_408 -> m3_21  [key=2, style=dotted];
m3_408 -> m3_22  [key=2, style=dotted];
m3_408 -> m3_409  [key=0, style=solid];
m3_408 -> m3_410  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_411  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_414  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_415  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_416  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_417  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_418  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_408 -> m3_422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_409 -> m3_23  [key=2, style=dotted];
m3_409 -> m3_410  [key=0, style=solid];
m3_411 -> m3_23  [key=2, style=dotted];
m3_411 -> m3_412  [key=0, style=solid];
m3_413 -> m3_23  [key=2, style=dotted];
m3_413 -> m3_414  [key=0, style=solid];
m3_415 -> m3_23  [key=2, style=dotted];
m3_415 -> m3_416  [key=0, style=solid];
m3_417 -> m3_23  [key=2, style=dotted];
m3_417 -> m3_418  [key=0, style=solid];
m3_410 -> m3_25  [key=2, style=dotted];
m3_410 -> m3_411  [key=0, style=solid];
m3_412 -> m3_25  [key=2, style=dotted];
m3_412 -> m3_413  [key=0, style=solid];
m3_414 -> m3_25  [key=2, style=dotted];
m3_414 -> m3_415  [key=0, style=solid];
m3_416 -> m3_25  [key=2, style=dotted];
m3_416 -> m3_417  [key=0, style=solid];
m3_418 -> m3_25  [key=2, style=dotted];
m3_418 -> m3_419  [key=0, style=solid];
m3_407 -> m3_408  [key=0, style=solid];
m3_407 -> m3_407  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_419 -> m3_420  [key=0, style=solid];
m3_419 -> m3_172  [key=2, style=dotted];
m3_419 -> m3_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_420 -> m3_406  [key=0, style=bold, color=blue];
m3_1196 -> m3_1197  [key=0, style=solid];
m3_1198 -> m3_21  [key=2, style=dotted];
m3_1198 -> m3_22  [key=2, style=dotted];
m3_1198 -> m3_1199  [key=0, style=solid];
m3_1198 -> m3_1200  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1198 -> m3_1201  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1198 -> m3_1202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1198 -> m3_1203  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1198 -> m3_1204  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1198 -> m3_1205  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1198 -> m3_1206  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1199 -> m3_23  [key=2, style=dotted];
m3_1199 -> m3_1200  [key=0, style=solid];
m3_1201 -> m3_23  [key=2, style=dotted];
m3_1201 -> m3_1202  [key=0, style=solid];
m3_1203 -> m3_23  [key=2, style=dotted];
m3_1203 -> m3_1204  [key=0, style=solid];
m3_1205 -> m3_23  [key=2, style=dotted];
m3_1205 -> m3_1206  [key=0, style=solid];
m3_1200 -> m3_25  [key=2, style=dotted];
m3_1200 -> m3_1201  [key=0, style=solid];
m3_1202 -> m3_25  [key=2, style=dotted];
m3_1202 -> m3_1203  [key=0, style=solid];
m3_1204 -> m3_25  [key=2, style=dotted];
m3_1204 -> m3_1205  [key=0, style=solid];
m3_1204 -> m3_1208  [key=2, style=dotted];
m3_1204 -> m3_1209  [key=2, style=dotted];
m3_1206 -> m3_25  [key=2, style=dotted];
m3_1206 -> m3_1207  [key=0, style=solid];
m3_1197 -> m3_1198  [key=0, style=solid];
m3_1197 -> m3_1197  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1207 -> m3_1196  [key=0, style=bold, color=blue];
m3_2415 -> m3_2416  [key=0, style=solid];
m3_2417 -> m3_21  [key=2, style=dotted];
m3_2417 -> m3_22  [key=2, style=dotted];
m3_2417 -> m3_2418  [key=0, style=solid];
m3_2417 -> m3_2421  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2416 -> m3_2417  [key=0, style=solid];
m3_2416 -> m3_2392  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2418 -> m3_2419  [key=0, style=solid];
m3_2418 -> m3_172  [key=2, style=dotted];
m3_2418 -> m3_2420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2419 -> m3_2415  [key=0, style=bold, color=blue];
m3_120 -> m3_121  [key=0, style=solid];
m3_122 -> m3_21  [key=2, style=dotted];
m3_122 -> m3_22  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_122 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_122 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_123 -> m3_23  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_124 -> m3_23  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_125 -> m3_23  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_126 -> m3_25  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_121  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_127 -> m3_120  [key=0, style=bold, color=blue];
m3_160 -> m3_161  [key=0, style=solid];
m3_162 -> m3_21  [key=2, style=dotted];
m3_162 -> m3_22  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_162 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_162 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_162 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_162 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_162 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_162 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_162 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_163 -> m3_23  [key=2, style=dotted];
m3_163 -> m3_24  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_165 -> m3_23  [key=2, style=dotted];
m3_165 -> m3_24  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_168 -> m3_23  [key=2, style=dotted];
m3_168 -> m3_24  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_170 -> m3_23  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_158  [key=2, style=dotted];
m3_164 -> m3_25  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_166 -> m3_25  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_169 -> m3_25  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_161  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_172  [key=2, style=dotted];
m3_167 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_171 -> m3_160  [key=0, style=bold, color=blue];
m3_489 -> m3_490  [key=0, style=solid];
m3_492 -> m3_21  [key=2, style=dotted];
m3_492 -> m3_493  [key=0, style=solid];
m3_492 -> m3_494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_500  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_501  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_502  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_504  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_507  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_509  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_510  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_512  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_513  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_516  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_517  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_520  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_529  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_530  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_531  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_537  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_538  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_540  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_541  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_542  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_544  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_545  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_547  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_548  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_552  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_556  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_559  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_561  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_563  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_564  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_565  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_566  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_568  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_569  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_570  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_571  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_572  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_573  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_576  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_577  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_578  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_492 -> m3_584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_491 -> m3_22  [key=2, style=dotted];
m3_491 -> m3_492  [key=0, style=solid];
m3_493 -> m3_25  [key=2, style=dotted];
m3_493 -> m3_494  [key=0, style=solid];
m3_495 -> m3_25  [key=2, style=dotted];
m3_495 -> m3_496  [key=0, style=solid];
m3_496 -> m3_25  [key=2, style=dotted];
m3_496 -> m3_497  [key=0, style=solid];
m3_497 -> m3_25  [key=2, style=dotted];
m3_497 -> m3_498  [key=0, style=solid];
m3_499 -> m3_25  [key=2, style=dotted];
m3_499 -> m3_500  [key=0, style=solid];
m3_500 -> m3_25  [key=2, style=dotted];
m3_500 -> m3_501  [key=0, style=solid];
m3_501 -> m3_25  [key=2, style=dotted];
m3_501 -> m3_502  [key=0, style=solid];
m3_503 -> m3_25  [key=2, style=dotted];
m3_503 -> m3_504  [key=0, style=solid];
m3_504 -> m3_25  [key=2, style=dotted];
m3_504 -> m3_505  [key=0, style=solid];
m3_505 -> m3_25  [key=2, style=dotted];
m3_505 -> m3_506  [key=0, style=solid];
m3_506 -> m3_25  [key=2, style=dotted];
m3_506 -> m3_507  [key=0, style=solid];
m3_507 -> m3_25  [key=2, style=dotted];
m3_507 -> m3_508  [key=0, style=solid];
m3_509 -> m3_25  [key=2, style=dotted];
m3_509 -> m3_510  [key=0, style=solid];
m3_510 -> m3_25  [key=2, style=dotted];
m3_510 -> m3_511  [key=0, style=solid];
m3_511 -> m3_25  [key=2, style=dotted];
m3_511 -> m3_512  [key=0, style=solid];
m3_513 -> m3_25  [key=2, style=dotted];
m3_513 -> m3_514  [key=0, style=solid];
m3_514 -> m3_25  [key=2, style=dotted];
m3_514 -> m3_515  [key=0, style=solid];
m3_515 -> m3_25  [key=2, style=dotted];
m3_515 -> m3_516  [key=0, style=solid];
m3_517 -> m3_25  [key=2, style=dotted];
m3_517 -> m3_518  [key=0, style=solid];
m3_518 -> m3_25  [key=2, style=dotted];
m3_518 -> m3_519  [key=0, style=solid];
m3_519 -> m3_25  [key=2, style=dotted];
m3_519 -> m3_520  [key=0, style=solid];
m3_520 -> m3_25  [key=2, style=dotted];
m3_520 -> m3_521  [key=0, style=solid];
m3_522 -> m3_25  [key=2, style=dotted];
m3_522 -> m3_523  [key=0, style=solid];
m3_523 -> m3_25  [key=2, style=dotted];
m3_523 -> m3_524  [key=0, style=solid];
m3_524 -> m3_25  [key=2, style=dotted];
m3_524 -> m3_525  [key=0, style=solid];
m3_525 -> m3_25  [key=2, style=dotted];
m3_525 -> m3_526  [key=0, style=solid];
m3_527 -> m3_25  [key=2, style=dotted];
m3_527 -> m3_528  [key=0, style=solid];
m3_528 -> m3_25  [key=2, style=dotted];
m3_528 -> m3_529  [key=0, style=solid];
m3_529 -> m3_25  [key=2, style=dotted];
m3_529 -> m3_530  [key=0, style=solid];
m3_530 -> m3_25  [key=2, style=dotted];
m3_530 -> m3_531  [key=0, style=solid];
m3_532 -> m3_25  [key=2, style=dotted];
m3_532 -> m3_533  [key=0, style=solid];
m3_533 -> m3_25  [key=2, style=dotted];
m3_533 -> m3_534  [key=0, style=solid];
m3_534 -> m3_25  [key=2, style=dotted];
m3_534 -> m3_535  [key=0, style=solid];
m3_535 -> m3_25  [key=2, style=dotted];
m3_535 -> m3_536  [key=0, style=solid];
m3_537 -> m3_25  [key=2, style=dotted];
m3_537 -> m3_538  [key=0, style=solid];
m3_538 -> m3_25  [key=2, style=dotted];
m3_538 -> m3_539  [key=0, style=solid];
m3_539 -> m3_25  [key=2, style=dotted];
m3_539 -> m3_540  [key=0, style=solid];
m3_540 -> m3_25  [key=2, style=dotted];
m3_540 -> m3_541  [key=0, style=solid];
m3_542 -> m3_25  [key=2, style=dotted];
m3_542 -> m3_543  [key=0, style=solid];
m3_543 -> m3_25  [key=2, style=dotted];
m3_543 -> m3_544  [key=0, style=solid];
m3_544 -> m3_25  [key=2, style=dotted];
m3_544 -> m3_545  [key=0, style=solid];
m3_546 -> m3_25  [key=2, style=dotted];
m3_546 -> m3_547  [key=0, style=solid];
m3_547 -> m3_25  [key=2, style=dotted];
m3_547 -> m3_548  [key=0, style=solid];
m3_548 -> m3_25  [key=2, style=dotted];
m3_548 -> m3_549  [key=0, style=solid];
m3_550 -> m3_25  [key=2, style=dotted];
m3_550 -> m3_551  [key=0, style=solid];
m3_551 -> m3_25  [key=2, style=dotted];
m3_551 -> m3_552  [key=0, style=solid];
m3_552 -> m3_25  [key=2, style=dotted];
m3_552 -> m3_553  [key=0, style=solid];
m3_554 -> m3_25  [key=2, style=dotted];
m3_554 -> m3_555  [key=0, style=solid];
m3_555 -> m3_25  [key=2, style=dotted];
m3_555 -> m3_556  [key=0, style=solid];
m3_556 -> m3_25  [key=2, style=dotted];
m3_556 -> m3_557  [key=0, style=solid];
m3_558 -> m3_25  [key=2, style=dotted];
m3_558 -> m3_559  [key=0, style=solid];
m3_559 -> m3_25  [key=2, style=dotted];
m3_559 -> m3_560  [key=0, style=solid];
m3_560 -> m3_25  [key=2, style=dotted];
m3_560 -> m3_561  [key=0, style=solid];
m3_562 -> m3_25  [key=2, style=dotted];
m3_562 -> m3_563  [key=0, style=solid];
m3_563 -> m3_25  [key=2, style=dotted];
m3_563 -> m3_564  [key=0, style=solid];
m3_564 -> m3_25  [key=2, style=dotted];
m3_564 -> m3_565  [key=0, style=solid];
m3_566 -> m3_25  [key=2, style=dotted];
m3_566 -> m3_567  [key=0, style=solid];
m3_567 -> m3_25  [key=2, style=dotted];
m3_567 -> m3_568  [key=0, style=solid];
m3_568 -> m3_25  [key=2, style=dotted];
m3_568 -> m3_569  [key=0, style=solid];
m3_570 -> m3_25  [key=2, style=dotted];
m3_570 -> m3_571  [key=0, style=solid];
m3_571 -> m3_25  [key=2, style=dotted];
m3_571 -> m3_572  [key=0, style=solid];
m3_572 -> m3_25  [key=2, style=dotted];
m3_572 -> m3_573  [key=0, style=solid];
m3_574 -> m3_25  [key=2, style=dotted];
m3_574 -> m3_575  [key=0, style=solid];
m3_575 -> m3_25  [key=2, style=dotted];
m3_575 -> m3_576  [key=0, style=solid];
m3_576 -> m3_25  [key=2, style=dotted];
m3_576 -> m3_577  [key=0, style=solid];
m3_578 -> m3_25  [key=2, style=dotted];
m3_578 -> m3_579  [key=0, style=solid];
m3_579 -> m3_25  [key=2, style=dotted];
m3_579 -> m3_580  [key=0, style=solid];
m3_580 -> m3_25  [key=2, style=dotted];
m3_580 -> m3_581  [key=0, style=solid];
m3_582 -> m3_25  [key=2, style=dotted];
m3_582 -> m3_583  [key=0, style=solid];
m3_583 -> m3_25  [key=2, style=dotted];
m3_583 -> m3_584  [key=0, style=solid];
m3_584 -> m3_25  [key=2, style=dotted];
m3_584 -> m3_585  [key=0, style=solid];
m3_494 -> m3_495  [key=0, style=solid];
m3_494 -> m3_378  [key=2, style=dotted];
m3_498 -> m3_499  [key=0, style=solid];
m3_498 -> m3_378  [key=2, style=dotted];
m3_502 -> m3_503  [key=0, style=solid];
m3_502 -> m3_378  [key=2, style=dotted];
m3_508 -> m3_509  [key=0, style=solid];
m3_508 -> m3_378  [key=2, style=dotted];
m3_512 -> m3_513  [key=0, style=solid];
m3_512 -> m3_378  [key=2, style=dotted];
m3_516 -> m3_517  [key=0, style=solid];
m3_516 -> m3_378  [key=2, style=dotted];
m3_521 -> m3_522  [key=0, style=solid];
m3_521 -> m3_378  [key=2, style=dotted];
m3_526 -> m3_527  [key=0, style=solid];
m3_526 -> m3_378  [key=2, style=dotted];
m3_531 -> m3_532  [key=0, style=solid];
m3_531 -> m3_378  [key=2, style=dotted];
m3_536 -> m3_537  [key=0, style=solid];
m3_536 -> m3_378  [key=2, style=dotted];
m3_541 -> m3_542  [key=0, style=solid];
m3_541 -> m3_378  [key=2, style=dotted];
m3_545 -> m3_546  [key=0, style=solid];
m3_545 -> m3_378  [key=2, style=dotted];
m3_549 -> m3_550  [key=0, style=solid];
m3_549 -> m3_378  [key=2, style=dotted];
m3_553 -> m3_554  [key=0, style=solid];
m3_553 -> m3_378  [key=2, style=dotted];
m3_557 -> m3_558  [key=0, style=solid];
m3_557 -> m3_378  [key=2, style=dotted];
m3_561 -> m3_562  [key=0, style=solid];
m3_561 -> m3_378  [key=2, style=dotted];
m3_565 -> m3_566  [key=0, style=solid];
m3_565 -> m3_378  [key=2, style=dotted];
m3_569 -> m3_570  [key=0, style=solid];
m3_569 -> m3_378  [key=2, style=dotted];
m3_573 -> m3_574  [key=0, style=solid];
m3_573 -> m3_378  [key=2, style=dotted];
m3_577 -> m3_578  [key=0, style=solid];
m3_577 -> m3_378  [key=2, style=dotted];
m3_581 -> m3_582  [key=0, style=solid];
m3_581 -> m3_378  [key=2, style=dotted];
m3_490 -> m3_491  [key=0, style=solid];
m3_490 -> m3_490  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m3_585 -> m3_489  [key=0, style=bold, color=blue];
m3_21 -> m3_23  [key=0, style=solid];
m3_21 -> m3_27  [key=2, style=dotted];
m3_1954 -> m3_1955  [key=0, style=solid];
m3_1955 -> m3_21  [key=2, style=dotted];
m3_1955 -> m3_22  [key=2, style=dotted];
m3_1955 -> m3_1956  [key=0, style=solid];
m3_1955 -> m3_1959  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1956 -> m3_1957  [key=0, style=solid];
m3_1956 -> m3_172  [key=2, style=dotted];
m3_1956 -> m3_1958  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1957 -> m3_1954  [key=0, style=bold, color=blue];
m3_688 -> m3_689  [key=0, style=solid];
m3_689 -> m3_21  [key=2, style=dotted];
m3_689 -> m3_22  [key=2, style=dotted];
m3_689 -> m3_690  [key=0, style=solid];
m3_689 -> m3_693  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_690 -> m3_691  [key=0, style=solid];
m3_690 -> m3_172  [key=2, style=dotted];
m3_690 -> m3_692  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_691 -> m3_688  [key=0, style=bold, color=blue];
m3_855 -> m3_856  [key=0, style=solid];
m3_858 -> m3_21  [key=2, style=dotted];
m3_858 -> m3_22  [key=2, style=dotted];
m3_858 -> m3_859  [key=0, style=solid];
m3_858 -> m3_861  [key=2, style=dotted];
m3_858 -> m3_863  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_857 -> m3_858  [key=0, style=solid];
m3_857 -> m3_357  [key=2, style=dotted];
m3_859 -> m3_860  [key=0, style=solid];
m3_859 -> m3_172  [key=2, style=dotted];
m3_859 -> m3_862  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_856 -> m3_857  [key=0, style=solid];
m3_856 -> m3_856  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m3_860 -> m3_855  [key=0, style=bold, color=blue];
m3_2431 -> m3_2432  [key=0, style=solid];
m3_2433 -> m3_21  [key=2, style=dotted];
m3_2433 -> m3_22  [key=2, style=dotted];
m3_2433 -> m3_2434  [key=0, style=solid];
m3_2433 -> m3_2437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2432 -> m3_2433  [key=0, style=solid];
m3_2432 -> m3_2432  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2434 -> m3_2435  [key=0, style=solid];
m3_2434 -> m3_172  [key=2, style=dotted];
m3_2434 -> m3_2436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2435 -> m3_2431  [key=0, style=bold, color=blue];
m3_1834 -> m3_1835  [key=0, style=solid];
m3_1836 -> m3_21  [key=2, style=dotted];
m3_1836 -> m3_22  [key=2, style=dotted];
m3_1836 -> m3_1837  [key=0, style=solid];
m3_1836 -> m3_1838  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1836 -> m3_1839  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1836 -> m3_1840  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1837 -> m3_23  [key=2, style=dotted];
m3_1837 -> m3_24  [key=2, style=dotted];
m3_1837 -> m3_1838  [key=0, style=solid];
m3_1839 -> m3_23  [key=2, style=dotted];
m3_1839 -> m3_24  [key=2, style=dotted];
m3_1839 -> m3_1840  [key=0, style=solid];
m3_1838 -> m3_25  [key=2, style=dotted];
m3_1838 -> m3_1839  [key=0, style=solid];
m3_1840 -> m3_25  [key=2, style=dotted];
m3_1840 -> m3_1841  [key=0, style=solid];
m3_1835 -> m3_1836  [key=0, style=solid];
m3_1835 -> m3_1835  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1841 -> m3_1834  [key=0, style=bold, color=blue];
m3_727 -> m3_728  [key=0, style=solid];
m3_729 -> m3_21  [key=2, style=dotted];
m3_729 -> m3_730  [key=0, style=solid];
m3_729 -> m3_741  [key=2, style=dotted];
m3_729 -> m3_742  [key=2, style=dotted];
m3_729 -> m3_731  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_735 -> m3_21  [key=2, style=dotted];
m3_735 -> m3_736  [key=0, style=solid];
m3_735 -> m3_741  [key=2, style=dotted];
m3_735 -> m3_742  [key=2, style=dotted];
m3_735 -> m3_737  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_730 -> m3_23  [key=2, style=dotted];
m3_730 -> m3_731  [key=0, style=solid];
m3_736 -> m3_23  [key=2, style=dotted];
m3_736 -> m3_737  [key=0, style=solid];
m3_731 -> m3_25  [key=2, style=dotted];
m3_731 -> m3_732  [key=0, style=solid];
m3_737 -> m3_25  [key=2, style=dotted];
m3_737 -> m3_738  [key=0, style=solid];
m3_728 -> m3_729  [key=0, style=solid];
m3_728 -> m3_740  [key=2, style=dotted];
m3_728 -> m3_734  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_734 -> m3_735  [key=0, style=solid];
m3_732 -> m3_734  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_732 -> m3_700  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m3_732 -> m3_733  [key=0, style=solid];
m3_732 -> m3_738  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_738 -> m3_738  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_738 -> m3_733  [key=0, style=solid];
m3_733 -> m3_734  [key=0, style=solid];
m3_733 -> m3_739  [key=0, style=solid];
m3_739 -> m3_727  [key=0, style=bold, color=blue];
m3_1470 -> m3_1471  [key=0, style=solid];
m3_1472 -> m3_21  [key=2, style=dotted];
m3_1472 -> m3_22  [key=2, style=dotted];
m3_1472 -> m3_1473  [key=0, style=solid];
m3_1472 -> m3_1474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1480  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1472 -> m3_1482  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1473 -> m3_23  [key=2, style=dotted];
m3_1473 -> m3_24  [key=2, style=dotted];
m3_1473 -> m3_1474  [key=0, style=solid];
m3_1475 -> m3_23  [key=2, style=dotted];
m3_1475 -> m3_24  [key=2, style=dotted];
m3_1475 -> m3_1476  [key=0, style=solid];
m3_1481 -> m3_23  [key=2, style=dotted];
m3_1481 -> m3_24  [key=2, style=dotted];
m3_1481 -> m3_1482  [key=0, style=solid];
m3_1474 -> m3_25  [key=2, style=dotted];
m3_1474 -> m3_1475  [key=0, style=solid];
m3_1476 -> m3_25  [key=2, style=dotted];
m3_1476 -> m3_1477  [key=0, style=solid];
m3_1478 -> m3_25  [key=2, style=dotted];
m3_1478 -> m3_1479  [key=0, style=solid];
m3_1479 -> m3_25  [key=2, style=dotted];
m3_1479 -> m3_1480  [key=0, style=solid];
m3_1480 -> m3_25  [key=2, style=dotted];
m3_1480 -> m3_1481  [key=0, style=solid];
m3_1480 -> m3_1484  [key=2, style=dotted];
m3_1480 -> m3_1485  [key=2, style=dotted];
m3_1480 -> m3_1486  [key=2, style=dotted];
m3_1482 -> m3_25  [key=2, style=dotted];
m3_1482 -> m3_1483  [key=0, style=solid];
m3_1471 -> m3_1472  [key=0, style=solid];
m3_1471 -> m3_1471  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1477 -> m3_1478  [key=0, style=solid];
m3_1477 -> m3_1386  [key=2, style=dotted];
m3_1483 -> m3_1470  [key=0, style=bold, color=blue];
m3_971 -> m3_972  [key=0, style=solid];
m3_974 -> m3_21  [key=2, style=dotted];
m3_974 -> m3_975  [key=0, style=solid];
m3_974 -> m3_976  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_977  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_978  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_979  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_980  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_981  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_982  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_983  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_984  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_985  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_986  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_987  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_988  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_974 -> m3_989  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_973 -> m3_22  [key=2, style=dotted];
m3_973 -> m3_974  [key=0, style=solid];
m3_975 -> m3_25  [key=2, style=dotted];
m3_975 -> m3_976  [key=0, style=solid];
m3_977 -> m3_25  [key=2, style=dotted];
m3_977 -> m3_978  [key=0, style=solid];
m3_978 -> m3_25  [key=2, style=dotted];
m3_978 -> m3_979  [key=0, style=solid];
m3_980 -> m3_25  [key=2, style=dotted];
m3_980 -> m3_981  [key=0, style=solid];
m3_981 -> m3_25  [key=2, style=dotted];
m3_981 -> m3_982  [key=0, style=solid];
m3_983 -> m3_25  [key=2, style=dotted];
m3_983 -> m3_984  [key=0, style=solid];
m3_984 -> m3_25  [key=2, style=dotted];
m3_984 -> m3_985  [key=0, style=solid];
m3_985 -> m3_25  [key=2, style=dotted];
m3_985 -> m3_986  [key=0, style=solid];
m3_986 -> m3_25  [key=2, style=dotted];
m3_986 -> m3_987  [key=0, style=solid];
m3_988 -> m3_25  [key=2, style=dotted];
m3_988 -> m3_989  [key=0, style=solid];
m3_989 -> m3_25  [key=2, style=dotted];
m3_989 -> m3_990  [key=0, style=solid];
m3_976 -> m3_977  [key=0, style=solid];
m3_976 -> m3_378  [key=2, style=dotted];
m3_979 -> m3_980  [key=0, style=solid];
m3_979 -> m3_378  [key=2, style=dotted];
m3_982 -> m3_983  [key=0, style=solid];
m3_982 -> m3_378  [key=2, style=dotted];
m3_987 -> m3_988  [key=0, style=solid];
m3_987 -> m3_378  [key=2, style=dotted];
m3_972 -> m3_973  [key=0, style=solid];
m3_972 -> m3_972  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m3_990 -> m3_971  [key=0, style=bold, color=blue];
m3_2264 -> m3_2265  [key=0, style=solid];
m3_2266 -> m3_21  [key=2, style=dotted];
m3_2266 -> m3_22  [key=2, style=dotted];
m3_2266 -> m3_2267  [key=0, style=solid];
m3_2266 -> m3_2268  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2266 -> m3_2269  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2268 -> m3_25  [key=2, style=dotted];
m3_2268 -> m3_2269  [key=0, style=solid];
m3_2269 -> m3_25  [key=2, style=dotted];
m3_2269 -> m3_2270  [key=0, style=solid];
m3_2265 -> m3_2266  [key=0, style=solid];
m3_2265 -> m3_2265  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2267 -> m3_2268  [key=0, style=solid];
m3_2267 -> m3_244  [key=2, style=dotted];
m3_2270 -> m3_2264  [key=0, style=bold, color=blue];
m3_711 -> m3_712  [key=0, style=solid];
m3_713 -> m3_21  [key=2, style=dotted];
m3_713 -> m3_22  [key=2, style=dotted];
m3_713 -> m3_714  [key=0, style=solid];
m3_713 -> m3_706  [key=2, style=dotted];
m3_713 -> m3_715  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_713 -> m3_716  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_713 -> m3_720  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_714 -> m3_23  [key=2, style=dotted];
m3_714 -> m3_715  [key=0, style=solid];
m3_716 -> m3_25  [key=2, style=dotted];
m3_716 -> m3_717  [key=0, style=solid];
m3_715 -> m3_25  [key=2, style=dotted];
m3_715 -> m3_716  [key=0, style=solid];
m3_712 -> m3_713  [key=0, style=solid];
m3_712 -> m3_716  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_712 -> m3_712  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m3_712 -> m3_719  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_720 -> m3_721  [key=0, style=solid];
m3_720 -> m3_172  [key=2, style=dotted];
m3_720 -> m3_723  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_719 -> m3_724  [key=1, style=dashed, color=darkseagreen4, label=total];
m3_719 -> m3_720  [key=0, style=solid];
m3_717 -> m3_719  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_717 -> m3_700  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m3_717 -> m3_718  [key=0, style=solid];
m3_717 -> m3_721  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_721 -> m3_721  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_721 -> m3_718  [key=0, style=solid];
m3_718 -> m3_719  [key=0, style=solid];
m3_718 -> m3_722  [key=0, style=solid];
m3_722 -> m3_711  [key=0, style=bold, color=blue];
m3_1961 -> m3_1962  [key=0, style=solid];
m3_1962 -> m3_21  [key=2, style=dotted];
m3_1962 -> m3_22  [key=2, style=dotted];
m3_1962 -> m3_1963  [key=0, style=solid];
m3_1962 -> m3_1966  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1963 -> m3_1964  [key=0, style=solid];
m3_1963 -> m3_172  [key=2, style=dotted];
m3_1963 -> m3_1965  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1964 -> m3_1961  [key=0, style=bold, color=blue];
m3_2837 -> m3_2838  [key=0, style=solid];
m3_2837 -> m3_2840  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m3_2838 -> m3_2839  [key=0, style=solid];
m3_2838 -> m3_2840  [key=0, style=solid];
m3_2840 -> m3_2841  [key=0, style=solid];
m3_2840 -> m3_2843  [key=2, style=dotted];
m3_2839 -> m3_2841  [key=0, style=solid];
m3_2839 -> d143  [key=2, style=dotted];
m3_2841 -> m3_2837  [key=0, style=bold, color=blue];
m3_681 -> m3_682  [key=0, style=solid];
m3_682 -> m3_21  [key=2, style=dotted];
m3_682 -> m3_22  [key=2, style=dotted];
m3_682 -> m3_683  [key=0, style=solid];
m3_682 -> m3_686  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_683 -> m3_684  [key=0, style=solid];
m3_683 -> m3_172  [key=2, style=dotted];
m3_683 -> m3_685  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_684 -> m3_681  [key=0, style=bold, color=blue];
m3_1998 -> m3_1999  [key=0, style=solid];
m3_1999 -> m3_21  [key=2, style=dotted];
m3_1999 -> m3_22  [key=2, style=dotted];
m3_1999 -> m3_2000  [key=0, style=solid];
m3_1999 -> m3_2001  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1999 -> m3_2006  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1999 -> m3_2002  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1999 -> m3_2003  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2000 -> m3_23  [key=2, style=dotted];
m3_2000 -> m3_2001  [key=0, style=solid];
m3_2003 -> m3_23  [key=2, style=dotted];
m3_2003 -> m3_24  [key=2, style=dotted];
m3_2003 -> m3_2004  [key=0, style=solid];
m3_2002 -> m3_25  [key=2, style=dotted];
m3_2002 -> m3_26  [key=2, style=dotted];
m3_2002 -> m3_2003  [key=0, style=solid];
m3_2001 -> m3_2002  [key=0, style=solid];
m3_2001 -> m3_172  [key=2, style=dotted];
m3_2001 -> m3_2005  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2004 -> m3_1998  [key=0, style=bold, color=blue];
m3_925 -> m3_926  [key=0, style=solid];
m3_926 -> m3_21  [key=2, style=dotted];
m3_926 -> m3_22  [key=2, style=dotted];
m3_926 -> m3_927  [key=0, style=solid];
m3_926 -> m3_928  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_929  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_930  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_931  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_932  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_933  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_934  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_935  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_926 -> m3_936  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_927 -> m3_24  [key=2, style=dotted];
m3_927 -> m3_928  [key=0, style=solid];
m3_927 -> m3_378  [key=2, style=dotted];
m3_928 -> m3_24  [key=2, style=dotted];
m3_928 -> m3_929  [key=0, style=solid];
m3_928 -> m3_378  [key=2, style=dotted];
m3_931 -> m3_24  [key=2, style=dotted];
m3_931 -> m3_932  [key=0, style=solid];
m3_931 -> m3_378  [key=2, style=dotted];
m3_934 -> m3_24  [key=2, style=dotted];
m3_934 -> m3_935  [key=0, style=solid];
m3_934 -> m3_378  [key=2, style=dotted];
m3_929 -> m3_25  [key=2, style=dotted];
m3_929 -> m3_930  [key=0, style=solid];
m3_930 -> m3_25  [key=2, style=dotted];
m3_930 -> m3_931  [key=0, style=solid];
m3_932 -> m3_25  [key=2, style=dotted];
m3_932 -> m3_933  [key=0, style=solid];
m3_933 -> m3_25  [key=2, style=dotted];
m3_933 -> m3_934  [key=0, style=solid];
m3_935 -> m3_25  [key=2, style=dotted];
m3_935 -> m3_936  [key=0, style=solid];
m3_936 -> m3_937  [key=0, style=solid];
m3_936 -> m3_378  [key=2, style=dotted];
m3_936 -> m3_158  [key=2, style=dotted];
m3_937 -> m3_925  [key=0, style=bold, color=blue];
m3_1811 -> m3_1812  [key=0, style=solid];
m3_1813 -> m3_21  [key=2, style=dotted];
m3_1813 -> m3_22  [key=2, style=dotted];
m3_1813 -> m3_1814  [key=0, style=solid];
m3_1813 -> m3_1815  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1813 -> m3_1816  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1813 -> m3_1817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1814 -> m3_23  [key=2, style=dotted];
m3_1814 -> m3_24  [key=2, style=dotted];
m3_1814 -> m3_1815  [key=0, style=solid];
m3_1816 -> m3_23  [key=2, style=dotted];
m3_1816 -> m3_24  [key=2, style=dotted];
m3_1816 -> m3_1817  [key=0, style=solid];
m3_1815 -> m3_25  [key=2, style=dotted];
m3_1815 -> m3_1816  [key=0, style=solid];
m3_1817 -> m3_25  [key=2, style=dotted];
m3_1817 -> m3_1818  [key=0, style=solid];
m3_1812 -> m3_1813  [key=0, style=solid];
m3_1812 -> m3_1812  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1818 -> m3_1811  [key=0, style=bold, color=blue];
m3_1795 -> m3_1796  [key=0, style=solid];
m3_1797 -> m3_21  [key=2, style=dotted];
m3_1797 -> m3_22  [key=2, style=dotted];
m3_1797 -> m3_1798  [key=0, style=solid];
m3_1797 -> m3_1801  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1796 -> m3_1797  [key=0, style=solid];
m3_1796 -> m3_1796  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1798 -> m3_1799  [key=0, style=solid];
m3_1798 -> m3_172  [key=2, style=dotted];
m3_1798 -> m3_1800  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1799 -> m3_1795  [key=0, style=bold, color=blue];
m3_396 -> m3_2849  [key=0, style=solid];
m3_2849 -> m3_396  [key=0, style=bold, color=blue];
m3_1944 -> m3_1945  [key=0, style=solid];
m3_1945 -> m3_21  [key=2, style=dotted];
m3_1945 -> m3_22  [key=2, style=dotted];
m3_1945 -> m3_1946  [key=0, style=solid];
m3_1945 -> m3_1947  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1945 -> m3_1952  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1945 -> m3_1948  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1945 -> m3_1949  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1946 -> m3_23  [key=2, style=dotted];
m3_1946 -> m3_1947  [key=0, style=solid];
m3_1949 -> m3_23  [key=2, style=dotted];
m3_1949 -> m3_24  [key=2, style=dotted];
m3_1949 -> m3_1950  [key=0, style=solid];
m3_1947 -> m3_1948  [key=0, style=solid];
m3_1947 -> m3_172  [key=2, style=dotted];
m3_1947 -> m3_1951  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1948 -> m3_1949  [key=0, style=solid];
m3_1948 -> m3_116  [key=2, style=dotted];
m3_1948 -> m3_953  [key=2, style=dotted];
m3_1950 -> m3_1944  [key=0, style=bold, color=blue];
m3_2375 -> m3_2376  [key=0, style=solid];
m3_2377 -> m3_21  [key=2, style=dotted];
m3_2377 -> m3_22  [key=2, style=dotted];
m3_2377 -> m3_2378  [key=0, style=solid];
m3_2377 -> m3_2381  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2376 -> m3_2377  [key=0, style=solid];
m3_2376 -> m3_2368  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2378 -> m3_2379  [key=0, style=solid];
m3_2378 -> m3_172  [key=2, style=dotted];
m3_2378 -> m3_2380  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2379 -> m3_2375  [key=0, style=bold, color=blue];
m3_1878 -> m3_1879  [key=0, style=solid];
m3_1879 -> m3_21  [key=2, style=dotted];
m3_1879 -> m3_22  [key=2, style=dotted];
m3_1879 -> m3_1880  [key=0, style=solid];
m3_1879 -> m3_1881  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1879 -> m3_1882  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1879 -> m3_1888  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1879 -> m3_1883  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1879 -> m3_1884  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1879 -> m3_1885  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1880 -> m3_23  [key=2, style=dotted];
m3_1880 -> m3_24  [key=2, style=dotted];
m3_1880 -> m3_1881  [key=0, style=solid];
m3_1881 -> m3_23  [key=2, style=dotted];
m3_1881 -> m3_24  [key=2, style=dotted];
m3_1881 -> m3_1882  [key=0, style=solid];
m3_1883 -> m3_23  [key=2, style=dotted];
m3_1883 -> m3_24  [key=2, style=dotted];
m3_1883 -> m3_1884  [key=0, style=solid];
m3_1884 -> m3_23  [key=2, style=dotted];
m3_1884 -> m3_24  [key=2, style=dotted];
m3_1884 -> m3_1885  [key=0, style=solid];
m3_1885 -> m3_23  [key=2, style=dotted];
m3_1885 -> m3_1886  [key=0, style=solid];
m3_1885 -> m3_158  [key=2, style=dotted];
m3_1882 -> m3_1883  [key=0, style=solid];
m3_1882 -> m3_172  [key=2, style=dotted];
m3_1882 -> m3_1887  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1886 -> m3_1878  [key=0, style=bold, color=blue];
m3_664 -> m3_665  [key=0, style=solid];
m3_666 -> m3_21  [key=2, style=dotted];
m3_666 -> m3_22  [key=2, style=dotted];
m3_666 -> m3_667  [key=0, style=solid];
m3_666 -> m3_669  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_666 -> m3_671  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_666 -> m3_672  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_669 -> m3_23  [key=2, style=dotted];
m3_669 -> m3_670  [key=0, style=solid];
m3_671 -> m3_23  [key=2, style=dotted];
m3_671 -> m3_672  [key=0, style=solid];
m3_672 -> m3_25  [key=2, style=dotted];
m3_672 -> m3_673  [key=0, style=solid];
m3_665 -> m3_666  [key=0, style=solid];
m3_665 -> m3_665  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_667 -> m3_668  [key=0, style=solid];
m3_667 -> m3_670  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_667 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_668 -> m3_669  [key=0, style=solid];
m3_668 -> m3_671  [key=0, style=solid];
m3_670 -> m3_668  [key=0, style=solid];
m3_670 -> m3_670  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_673 -> m3_664  [key=0, style=bold, color=blue];
m3_847 -> m3_848  [key=0, style=solid];
m3_848 -> m3_21  [key=2, style=dotted];
m3_848 -> m3_22  [key=2, style=dotted];
m3_848 -> m3_849  [key=0, style=solid];
m3_848 -> m3_852  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_849 -> m3_850  [key=0, style=solid];
m3_849 -> m3_172  [key=2, style=dotted];
m3_849 -> m3_851  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_850 -> m3_847  [key=0, style=bold, color=blue];
m3_1603 -> m3_1604  [key=0, style=solid];
m3_1605 -> m3_21  [key=2, style=dotted];
m3_1605 -> m3_22  [key=2, style=dotted];
m3_1605 -> m3_1606  [key=0, style=solid];
m3_1605 -> m3_1607  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1605 -> m3_1608  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1605 -> m3_1609  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1605 -> m3_1610  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1605 -> m3_1613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1606 -> m3_23  [key=2, style=dotted];
m3_1606 -> m3_24  [key=2, style=dotted];
m3_1606 -> m3_1607  [key=0, style=solid];
m3_1608 -> m3_23  [key=2, style=dotted];
m3_1608 -> m3_24  [key=2, style=dotted];
m3_1608 -> m3_1609  [key=0, style=solid];
m3_1607 -> m3_25  [key=2, style=dotted];
m3_1607 -> m3_1608  [key=0, style=solid];
m3_1609 -> m3_25  [key=2, style=dotted];
m3_1609 -> m3_1610  [key=0, style=solid];
m3_1604 -> m3_1605  [key=0, style=solid];
m3_1604 -> m3_1604  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1610 -> m3_1611  [key=0, style=solid];
m3_1610 -> m3_172  [key=2, style=dotted];
m3_1610 -> m3_1612  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1611 -> m3_1603  [key=0, style=bold, color=blue];
m3_1387 -> m3_1388  [key=0, style=solid];
m3_1388 -> m3_21  [key=2, style=dotted];
m3_1388 -> m3_22  [key=2, style=dotted];
m3_1388 -> m3_1389  [key=0, style=solid];
m3_1388 -> m3_1390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1390 -> m3_25  [key=2, style=dotted];
m3_1390 -> m3_1391  [key=0, style=solid];
m3_1389 -> m3_1390  [key=0, style=solid];
m3_1389 -> m3_1392  [key=2, style=dotted];
m3_1389 -> m3_871  [key=2, style=dotted];
m3_1391 -> m3_1387  [key=0, style=bold, color=blue];
m3_1737 -> m3_1738  [key=0, style=solid];
m3_1738 -> m3_21  [key=2, style=dotted];
m3_1738 -> m3_22  [key=2, style=dotted];
m3_1738 -> m3_1739  [key=0, style=solid];
m3_1738 -> m3_1740  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1741  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1742  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1743  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1744  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1745  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1746  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1747  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1748  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1749  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1750  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1751  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1752  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1753  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1754  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1755  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1756  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1757  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1759  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1760  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1761  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1762  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1763  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1764  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1765  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1766  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1767  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1768  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1769  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1770  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1771  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1772  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1773  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1774  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1776  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1777  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1738 -> m3_1778  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1740 -> m3_23  [key=2, style=dotted];
m3_1740 -> m3_24  [key=2, style=dotted];
m3_1740 -> m3_1741  [key=0, style=solid];
m3_1742 -> m3_23  [key=2, style=dotted];
m3_1742 -> m3_24  [key=2, style=dotted];
m3_1742 -> m3_1743  [key=0, style=solid];
m3_1744 -> m3_23  [key=2, style=dotted];
m3_1744 -> m3_24  [key=2, style=dotted];
m3_1744 -> m3_1745  [key=0, style=solid];
m3_1746 -> m3_23  [key=2, style=dotted];
m3_1746 -> m3_24  [key=2, style=dotted];
m3_1746 -> m3_1747  [key=0, style=solid];
m3_1748 -> m3_23  [key=2, style=dotted];
m3_1748 -> m3_24  [key=2, style=dotted];
m3_1748 -> m3_1749  [key=0, style=solid];
m3_1750 -> m3_23  [key=2, style=dotted];
m3_1750 -> m3_24  [key=2, style=dotted];
m3_1750 -> m3_1751  [key=0, style=solid];
m3_1752 -> m3_23  [key=2, style=dotted];
m3_1752 -> m3_24  [key=2, style=dotted];
m3_1752 -> m3_1753  [key=0, style=solid];
m3_1754 -> m3_23  [key=2, style=dotted];
m3_1754 -> m3_24  [key=2, style=dotted];
m3_1754 -> m3_1755  [key=0, style=solid];
m3_1756 -> m3_23  [key=2, style=dotted];
m3_1756 -> m3_24  [key=2, style=dotted];
m3_1756 -> m3_1757  [key=0, style=solid];
m3_1758 -> m3_23  [key=2, style=dotted];
m3_1758 -> m3_24  [key=2, style=dotted];
m3_1758 -> m3_1759  [key=0, style=solid];
m3_1760 -> m3_23  [key=2, style=dotted];
m3_1760 -> m3_24  [key=2, style=dotted];
m3_1760 -> m3_1761  [key=0, style=solid];
m3_1762 -> m3_23  [key=2, style=dotted];
m3_1762 -> m3_24  [key=2, style=dotted];
m3_1762 -> m3_1763  [key=0, style=solid];
m3_1764 -> m3_23  [key=2, style=dotted];
m3_1764 -> m3_24  [key=2, style=dotted];
m3_1764 -> m3_1765  [key=0, style=solid];
m3_1766 -> m3_23  [key=2, style=dotted];
m3_1766 -> m3_24  [key=2, style=dotted];
m3_1766 -> m3_1767  [key=0, style=solid];
m3_1768 -> m3_23  [key=2, style=dotted];
m3_1768 -> m3_24  [key=2, style=dotted];
m3_1768 -> m3_1769  [key=0, style=solid];
m3_1770 -> m3_23  [key=2, style=dotted];
m3_1770 -> m3_24  [key=2, style=dotted];
m3_1770 -> m3_1771  [key=0, style=solid];
m3_1772 -> m3_23  [key=2, style=dotted];
m3_1772 -> m3_24  [key=2, style=dotted];
m3_1772 -> m3_1773  [key=0, style=solid];
m3_1774 -> m3_23  [key=2, style=dotted];
m3_1774 -> m3_24  [key=2, style=dotted];
m3_1774 -> m3_1775  [key=0, style=solid];
m3_1776 -> m3_23  [key=2, style=dotted];
m3_1776 -> m3_24  [key=2, style=dotted];
m3_1776 -> m3_1777  [key=0, style=solid];
m3_1778 -> m3_23  [key=2, style=dotted];
m3_1778 -> m3_1779  [key=0, style=solid];
m3_1778 -> m3_158  [key=2, style=dotted];
m3_1741 -> m3_25  [key=2, style=dotted];
m3_1741 -> m3_1742  [key=0, style=solid];
m3_1743 -> m3_25  [key=2, style=dotted];
m3_1743 -> m3_1744  [key=0, style=solid];
m3_1745 -> m3_25  [key=2, style=dotted];
m3_1745 -> m3_1746  [key=0, style=solid];
m3_1747 -> m3_25  [key=2, style=dotted];
m3_1747 -> m3_1748  [key=0, style=solid];
m3_1749 -> m3_25  [key=2, style=dotted];
m3_1749 -> m3_1750  [key=0, style=solid];
m3_1751 -> m3_25  [key=2, style=dotted];
m3_1751 -> m3_1752  [key=0, style=solid];
m3_1753 -> m3_25  [key=2, style=dotted];
m3_1753 -> m3_1754  [key=0, style=solid];
m3_1755 -> m3_25  [key=2, style=dotted];
m3_1755 -> m3_1756  [key=0, style=solid];
m3_1757 -> m3_25  [key=2, style=dotted];
m3_1757 -> m3_1758  [key=0, style=solid];
m3_1759 -> m3_25  [key=2, style=dotted];
m3_1759 -> m3_1760  [key=0, style=solid];
m3_1761 -> m3_25  [key=2, style=dotted];
m3_1761 -> m3_1762  [key=0, style=solid];
m3_1763 -> m3_25  [key=2, style=dotted];
m3_1763 -> m3_1764  [key=0, style=solid];
m3_1765 -> m3_25  [key=2, style=dotted];
m3_1765 -> m3_1766  [key=0, style=solid];
m3_1767 -> m3_25  [key=2, style=dotted];
m3_1767 -> m3_1768  [key=0, style=solid];
m3_1769 -> m3_25  [key=2, style=dotted];
m3_1769 -> m3_1770  [key=0, style=solid];
m3_1771 -> m3_25  [key=2, style=dotted];
m3_1771 -> m3_1772  [key=0, style=solid];
m3_1773 -> m3_25  [key=2, style=dotted];
m3_1773 -> m3_1774  [key=0, style=solid];
m3_1775 -> m3_25  [key=2, style=dotted];
m3_1775 -> m3_1776  [key=0, style=solid];
m3_1777 -> m3_25  [key=2, style=dotted];
m3_1777 -> m3_1778  [key=0, style=solid];
m3_1739 -> m3_1740  [key=0, style=solid];
m3_1779 -> m3_1737  [key=0, style=bold, color=blue];
m3_2439 -> m3_2440  [key=0, style=solid];
m3_2442 -> m3_21  [key=2, style=dotted];
m3_2442 -> m3_22  [key=2, style=dotted];
m3_2442 -> m3_2443  [key=0, style=solid];
m3_2441 -> m3_2442  [key=0, style=solid];
m3_2441 -> m3_861  [key=2, style=dotted];
m3_2443 -> m3_2444  [key=0, style=solid];
m3_2443 -> m3_116  [key=2, style=dotted];
m3_2440 -> m3_2441  [key=0, style=solid];
m3_2440 -> m3_357  [key=2, style=dotted];
m3_2440 -> m3_2444  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_2444 -> m3_953  [key=2, style=dotted];
m3_2444 -> m3_2445  [key=0, style=solid];
m3_2445 -> m3_2439  [key=0, style=bold, color=blue];
m3_2241 -> m3_2242  [key=0, style=solid];
m3_2243 -> m3_21  [key=2, style=dotted];
m3_2243 -> m3_2244  [key=0, style=solid];
m3_2243 -> m3_358  [key=2, style=dotted];
m3_2243 -> m3_396  [key=2, style=dotted];
m3_2243 -> m3_397  [key=2, style=dotted];
m3_2243 -> m3_2245  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2243 -> m3_2246  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2243 -> m3_2247  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2244 -> m3_23  [key=2, style=dotted];
m3_2244 -> m3_24  [key=2, style=dotted];
m3_2244 -> m3_2245  [key=0, style=solid];
m3_2247 -> m3_23  [key=2, style=dotted];
m3_2247 -> m3_2248  [key=0, style=solid];
m3_2247 -> m3_158  [key=2, style=dotted];
m3_2245 -> m3_25  [key=2, style=dotted];
m3_2245 -> m3_2246  [key=0, style=solid];
m3_2246 -> m3_25  [key=2, style=dotted];
m3_2246 -> m3_2247  [key=0, style=solid];
m3_2242 -> m3_2243  [key=0, style=solid];
m3_2242 -> m3_2242  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2248 -> m3_2241  [key=0, style=bold, color=blue];
m3_1847 -> m3_1848  [key=0, style=solid];
m3_1848 -> m3_21  [key=2, style=dotted];
m3_1848 -> m3_22  [key=2, style=dotted];
m3_1848 -> m3_1849  [key=0, style=solid];
m3_1849 -> m3_25  [key=2, style=dotted];
m3_1849 -> m3_1850  [key=0, style=solid];
m3_1849 -> m3_1846  [key=2, style=dotted];
m3_1850 -> m3_1847  [key=0, style=bold, color=blue];
m3_2801 -> m3_2803  [key=0, style=solid];
m3_2803 -> m3_2804  [key=0, style=solid];
m3_2804 -> m3_2801  [key=0, style=bold, color=blue];
m3_809 -> m3_810  [key=0, style=solid];
m3_812 -> m3_21  [key=2, style=dotted];
m3_812 -> m3_22  [key=2, style=dotted];
m3_812 -> m3_813  [key=0, style=solid];
m3_812 -> m3_814  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_814 -> m3_23  [key=2, style=dotted];
m3_814 -> m3_814  [key=0, style=solid];
m3_814 -> m3_815  [key=0, style=solid];
m3_816 -> m3_25  [key=2, style=dotted];
m3_816 -> m3_817  [key=0, style=solid];
m3_817 -> m3_25  [key=2, style=dotted];
m3_817 -> m3_818  [key=0, style=solid];
m3_810 -> m3_812  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_810 -> m3_810  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_810 -> m3_811  [key=0, style=solid];
m3_811 -> m3_812  [key=0, style=solid];
m3_811 -> m3_816  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_811 -> m3_817  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_811 -> m3_807  [key=2, style=dotted];
m3_811 -> m3_813  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_813 -> m3_814  [key=0, style=solid];
m3_815 -> m3_816  [key=0, style=solid];
m3_815 -> m3_819  [key=2, style=dotted];
m3_818 -> m3_809  [key=0, style=bold, color=blue];
m3_2257 -> m3_2258  [key=0, style=solid];
m3_2259 -> m3_21  [key=2, style=dotted];
m3_2259 -> m3_22  [key=2, style=dotted];
m3_2259 -> m3_2260  [key=0, style=solid];
m3_2259 -> m3_2261  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2259 -> m3_2262  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2261 -> m3_25  [key=2, style=dotted];
m3_2261 -> m3_2262  [key=0, style=solid];
m3_2262 -> m3_25  [key=2, style=dotted];
m3_2262 -> m3_2263  [key=0, style=solid];
m3_2258 -> m3_2259  [key=0, style=solid];
m3_2258 -> m3_2258  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2260 -> m3_2261  [key=0, style=solid];
m3_2260 -> m3_244  [key=2, style=dotted];
m3_2263 -> m3_2257  [key=0, style=bold, color=blue];
m3_1272 -> m3_1273  [key=0, style=solid];
m3_1274 -> m3_21  [key=2, style=dotted];
m3_1274 -> m3_22  [key=2, style=dotted];
m3_1274 -> m3_1275  [key=0, style=solid];
m3_1274 -> m3_1276  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1274 -> m3_1277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1274 -> m3_1278  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1274 -> m3_1279  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1274 -> m3_1280  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1274 -> m3_1281  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1274 -> m3_1284  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1275 -> m3_23  [key=2, style=dotted];
m3_1275 -> m3_1276  [key=0, style=solid];
m3_1277 -> m3_23  [key=2, style=dotted];
m3_1277 -> m3_1278  [key=0, style=solid];
m3_1279 -> m3_23  [key=2, style=dotted];
m3_1279 -> m3_1280  [key=0, style=solid];
m3_1276 -> m3_25  [key=2, style=dotted];
m3_1276 -> m3_1277  [key=0, style=solid];
m3_1278 -> m3_25  [key=2, style=dotted];
m3_1278 -> m3_1279  [key=0, style=solid];
m3_1280 -> m3_25  [key=2, style=dotted];
m3_1280 -> m3_1281  [key=0, style=solid];
m3_1273 -> m3_1274  [key=0, style=solid];
m3_1273 -> m3_1273  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1281 -> m3_1282  [key=0, style=solid];
m3_1281 -> m3_172  [key=2, style=dotted];
m3_1281 -> m3_1283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1282 -> m3_1272  [key=0, style=bold, color=blue];
m3_1819 -> m3_1820  [key=0, style=solid];
m3_1821 -> m3_21  [key=2, style=dotted];
m3_1821 -> m3_22  [key=2, style=dotted];
m3_1821 -> m3_1822  [key=0, style=solid];
m3_1821 -> m3_1823  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1821 -> m3_1824  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1821 -> m3_1825  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1822 -> m3_23  [key=2, style=dotted];
m3_1822 -> m3_24  [key=2, style=dotted];
m3_1822 -> m3_1823  [key=0, style=solid];
m3_1824 -> m3_23  [key=2, style=dotted];
m3_1824 -> m3_24  [key=2, style=dotted];
m3_1824 -> m3_1825  [key=0, style=solid];
m3_1823 -> m3_25  [key=2, style=dotted];
m3_1823 -> m3_1824  [key=0, style=solid];
m3_1825 -> m3_25  [key=2, style=dotted];
m3_1825 -> m3_1826  [key=0, style=solid];
m3_1820 -> m3_1821  [key=0, style=solid];
m3_1820 -> m3_28  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1826 -> m3_1819  [key=0, style=bold, color=blue];
m3_25 -> m3_13  [key=0, style=bold, color=blue];
m3_1286 -> m3_1287  [key=0, style=solid];
m3_1288 -> m3_21  [key=2, style=dotted];
m3_1288 -> m3_1289  [key=0, style=solid];
m3_1287 -> m3_22  [key=2, style=dotted];
m3_1287 -> m3_1288  [key=0, style=solid];
m3_1292 -> m3_25  [key=2, style=dotted];
m3_1292 -> m3_1293  [key=0, style=solid];
m3_1289 -> m3_1290  [key=0, style=solid];
m3_1289 -> m3_116  [key=2, style=dotted];
m3_1289 -> m3_1291  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_1291 -> m3_1292  [key=0, style=solid];
m3_1291 -> m3_1295  [key=2, style=dotted];
m3_1290 -> m3_1291  [key=0, style=solid];
m3_1290 -> m3_1294  [key=2, style=dotted];
m3_1293 -> m3_1286  [key=0, style=bold, color=blue];
m3_599 -> m3_600  [key=0, style=solid];
m3_601 -> m3_21  [key=2, style=dotted];
m3_601 -> m3_22  [key=2, style=dotted];
m3_601 -> m3_602  [key=0, style=solid];
m3_601 -> m3_603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_603 -> m3_25  [key=2, style=dotted];
m3_603 -> m3_604  [key=0, style=solid];
m3_600 -> m3_601  [key=0, style=solid];
m3_600 -> m3_603  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_600 -> m3_605  [key=2, style=dotted];
m3_602 -> m3_603  [key=0, style=solid];
m3_602 -> m3_378  [key=2, style=dotted];
m3_604 -> m3_599  [key=0, style=bold, color=blue];
m3_1374 -> m3_1375  [key=0, style=solid];
m3_1375 -> m3_21  [key=2, style=dotted];
m3_1375 -> m3_22  [key=2, style=dotted];
m3_1375 -> m3_1376  [key=0, style=solid];
m3_1375 -> m3_1379  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1376 -> m3_1377  [key=0, style=solid];
m3_1376 -> m3_172  [key=2, style=dotted];
m3_1376 -> m3_1378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1377 -> m3_1374  [key=0, style=bold, color=blue];
m3_1827 -> m3_1828  [key=0, style=solid];
m3_1828 -> m3_21  [key=2, style=dotted];
m3_1828 -> m3_22  [key=2, style=dotted];
m3_1828 -> m3_1829  [key=0, style=solid];
m3_1828 -> m3_1832  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1829 -> m3_1830  [key=0, style=solid];
m3_1829 -> m3_172  [key=2, style=dotted];
m3_1829 -> m3_1831  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1830 -> m3_1827  [key=0, style=bold, color=blue];
m3_2707 -> m3_2708  [key=0, style=solid];
m3_2709 -> m3_21  [key=2, style=dotted];
m3_2709 -> m3_22  [key=2, style=dotted];
m3_2709 -> m3_2710  [key=0, style=solid];
m3_2709 -> m3_2711  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2712  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2713  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2714  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2715  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2716  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2717  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2718  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2719  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2720  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2721  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2709 -> m3_2722  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_21  [key=2, style=dotted];
m3_2724 -> m3_22  [key=2, style=dotted];
m3_2724 -> m3_2725  [key=0, style=solid];
m3_2724 -> m3_2726  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2727  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2728  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2729  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2730  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2731  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2732  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2733  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2734  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2735  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2736  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2724 -> m3_2737  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2710 -> m3_23  [key=2, style=dotted];
m3_2710 -> m3_24  [key=2, style=dotted];
m3_2710 -> m3_2711  [key=0, style=solid];
m3_2713 -> m3_23  [key=2, style=dotted];
m3_2713 -> m3_24  [key=2, style=dotted];
m3_2713 -> m3_2714  [key=0, style=solid];
m3_2716 -> m3_23  [key=2, style=dotted];
m3_2716 -> m3_24  [key=2, style=dotted];
m3_2716 -> m3_2717  [key=0, style=solid];
m3_2719 -> m3_23  [key=2, style=dotted];
m3_2719 -> m3_24  [key=2, style=dotted];
m3_2719 -> m3_2720  [key=0, style=solid];
m3_2722 -> m3_23  [key=2, style=dotted];
m3_2722 -> m3_2723  [key=0, style=solid];
m3_2722 -> m3_158  [key=2, style=dotted];
m3_2725 -> m3_23  [key=2, style=dotted];
m3_2725 -> m3_24  [key=2, style=dotted];
m3_2725 -> m3_2726  [key=0, style=solid];
m3_2728 -> m3_23  [key=2, style=dotted];
m3_2728 -> m3_24  [key=2, style=dotted];
m3_2728 -> m3_2729  [key=0, style=solid];
m3_2731 -> m3_23  [key=2, style=dotted];
m3_2731 -> m3_24  [key=2, style=dotted];
m3_2731 -> m3_2732  [key=0, style=solid];
m3_2734 -> m3_23  [key=2, style=dotted];
m3_2734 -> m3_24  [key=2, style=dotted];
m3_2734 -> m3_2735  [key=0, style=solid];
m3_2737 -> m3_23  [key=2, style=dotted];
m3_2737 -> m3_2738  [key=0, style=solid];
m3_2737 -> m3_158  [key=2, style=dotted];
m3_2711 -> m3_25  [key=2, style=dotted];
m3_2711 -> m3_2712  [key=0, style=solid];
m3_2712 -> m3_25  [key=2, style=dotted];
m3_2712 -> m3_2713  [key=0, style=solid];
m3_2714 -> m3_25  [key=2, style=dotted];
m3_2714 -> m3_2715  [key=0, style=solid];
m3_2715 -> m3_25  [key=2, style=dotted];
m3_2715 -> m3_2716  [key=0, style=solid];
m3_2717 -> m3_25  [key=2, style=dotted];
m3_2717 -> m3_2718  [key=0, style=solid];
m3_2718 -> m3_25  [key=2, style=dotted];
m3_2718 -> m3_2719  [key=0, style=solid];
m3_2720 -> m3_25  [key=2, style=dotted];
m3_2720 -> m3_2721  [key=0, style=solid];
m3_2721 -> m3_25  [key=2, style=dotted];
m3_2721 -> m3_2722  [key=0, style=solid];
m3_2726 -> m3_25  [key=2, style=dotted];
m3_2726 -> m3_2727  [key=0, style=solid];
m3_2727 -> m3_25  [key=2, style=dotted];
m3_2727 -> m3_2728  [key=0, style=solid];
m3_2729 -> m3_25  [key=2, style=dotted];
m3_2729 -> m3_2730  [key=0, style=solid];
m3_2730 -> m3_25  [key=2, style=dotted];
m3_2730 -> m3_2731  [key=0, style=solid];
m3_2732 -> m3_25  [key=2, style=dotted];
m3_2732 -> m3_2733  [key=0, style=solid];
m3_2733 -> m3_25  [key=2, style=dotted];
m3_2733 -> m3_2734  [key=0, style=solid];
m3_2735 -> m3_25  [key=2, style=dotted];
m3_2735 -> m3_2736  [key=0, style=solid];
m3_2736 -> m3_25  [key=2, style=dotted];
m3_2736 -> m3_2737  [key=0, style=solid];
m3_2708 -> m3_2709  [key=0, style=solid];
m3_2708 -> m3_2708  [key=3, color=darkorchid, style=bold, label="Local variable string json1"];
m3_2723 -> m3_2724  [key=0, style=solid];
m3_2723 -> m3_2723  [key=3, color=darkorchid, style=bold, label="Local variable string json2"];
m3_2738 -> m3_2707  [key=0, style=bold, color=blue];
m3_938 -> m3_939  [key=0, style=solid];
m3_941 -> m3_21  [key=2, style=dotted];
m3_941 -> m3_22  [key=2, style=dotted];
m3_941 -> m3_942  [key=0, style=solid];
m3_941 -> m3_861  [key=2, style=dotted];
m3_941 -> m3_943  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_941 -> m3_944  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_941 -> m3_945  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_941 -> m3_946  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_941 -> m3_948  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_941 -> m3_949  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_941 -> m3_950  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_941 -> m3_951  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_942 -> m3_24  [key=2, style=dotted];
m3_942 -> m3_943  [key=0, style=solid];
m3_942 -> m3_378  [key=2, style=dotted];
m3_944 -> m3_24  [key=2, style=dotted];
m3_944 -> m3_945  [key=0, style=solid];
m3_944 -> m3_378  [key=2, style=dotted];
m3_949 -> m3_24  [key=2, style=dotted];
m3_949 -> m3_950  [key=0, style=solid];
m3_949 -> m3_378  [key=2, style=dotted];
m3_943 -> m3_25  [key=2, style=dotted];
m3_943 -> m3_944  [key=0, style=solid];
m3_945 -> m3_25  [key=2, style=dotted];
m3_945 -> m3_946  [key=0, style=solid];
m3_948 -> m3_25  [key=2, style=dotted];
m3_948 -> m3_949  [key=0, style=solid];
m3_950 -> m3_25  [key=2, style=dotted];
m3_950 -> m3_951  [key=0, style=solid];
m3_940 -> m3_941  [key=0, style=solid];
m3_940 -> m3_357  [key=2, style=dotted];
m3_940 -> m3_947  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m3_946 -> m3_947  [key=0, style=solid];
m3_946 -> m3_846  [key=2, style=dotted];
m3_951 -> m3_952  [key=0, style=solid];
m3_951 -> m3_378  [key=2, style=dotted];
m3_951 -> m3_158  [key=2, style=dotted];
m3_947 -> m3_948  [key=0, style=solid];
m3_947 -> m3_953  [key=2, style=dotted];
m3_939 -> m3_940  [key=0, style=solid];
m3_939 -> m3_856  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m3_952 -> m3_938  [key=0, style=bold, color=blue];
m3_301 -> m3_302  [key=0, style=solid];
m3_303 -> m3_21  [key=2, style=dotted];
m3_303 -> m3_22  [key=2, style=dotted];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_307  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_309  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_310  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_312  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_315  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_316  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_317  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_303 -> m3_319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_304 -> m3_23  [key=2, style=dotted];
m3_304 -> m3_24  [key=2, style=dotted];
m3_304 -> m3_305  [key=0, style=solid];
m3_306 -> m3_23  [key=2, style=dotted];
m3_306 -> m3_24  [key=2, style=dotted];
m3_306 -> m3_307  [key=0, style=solid];
m3_308 -> m3_23  [key=2, style=dotted];
m3_308 -> m3_24  [key=2, style=dotted];
m3_308 -> m3_309  [key=0, style=solid];
m3_310 -> m3_23  [key=2, style=dotted];
m3_310 -> m3_24  [key=2, style=dotted];
m3_310 -> m3_311  [key=0, style=solid];
m3_312 -> m3_23  [key=2, style=dotted];
m3_312 -> m3_24  [key=2, style=dotted];
m3_312 -> m3_313  [key=0, style=solid];
m3_314 -> m3_23  [key=2, style=dotted];
m3_314 -> m3_24  [key=2, style=dotted];
m3_314 -> m3_315  [key=0, style=solid];
m3_317 -> m3_23  [key=2, style=dotted];
m3_317 -> m3_24  [key=2, style=dotted];
m3_317 -> m3_318  [key=0, style=solid];
m3_305 -> m3_25  [key=2, style=dotted];
m3_305 -> m3_306  [key=0, style=solid];
m3_307 -> m3_25  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_309 -> m3_25  [key=2, style=dotted];
m3_309 -> m3_310  [key=0, style=solid];
m3_311 -> m3_25  [key=2, style=dotted];
m3_311 -> m3_312  [key=0, style=solid];
m3_313 -> m3_25  [key=2, style=dotted];
m3_313 -> m3_314  [key=0, style=solid];
m3_315 -> m3_25  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_316 -> m3_25  [key=2, style=dotted];
m3_316 -> m3_317  [key=0, style=solid];
m3_318 -> m3_25  [key=2, style=dotted];
m3_318 -> m3_319  [key=0, style=solid];
m3_319 -> m3_25  [key=2, style=dotted];
m3_319 -> m3_320  [key=0, style=solid];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_302  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_320 -> m3_301  [key=0, style=bold, color=blue];
m3_793 -> m3_794  [key=0, style=solid];
m3_798 -> m3_21  [key=2, style=dotted];
m3_798 -> m3_22  [key=2, style=dotted];
m3_798 -> m3_799  [key=0, style=solid];
m3_798 -> m3_800  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_800 -> m3_23  [key=2, style=dotted];
m3_800 -> m3_800  [key=0, style=solid];
m3_800 -> m3_801  [key=0, style=solid];
m3_804 -> m3_25  [key=2, style=dotted];
m3_804 -> m3_805  [key=0, style=solid];
m3_805 -> m3_25  [key=2, style=dotted];
m3_805 -> m3_806  [key=0, style=solid];
m3_794 -> m3_798  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_794 -> m3_795  [key=0, style=solid];
m3_794 -> m3_605  [key=2, style=dotted];
m3_797 -> m3_798  [key=0, style=solid];
m3_797 -> m3_804  [key=0, style=solid];
m3_799 -> m3_800  [key=0, style=solid];
m3_801 -> m3_802  [key=0, style=solid];
m3_801 -> m3_803  [key=0, style=solid];
m3_795 -> m3_804  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_795 -> m3_805  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_795 -> m3_799  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_795 -> m3_796  [key=0, style=solid];
m3_795 -> m3_807  [key=2, style=dotted];
m3_795 -> m3_802  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_796 -> m3_797  [key=0, style=solid];
m3_796 -> m3_801  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_796 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_796 -> m3_803  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_803 -> m3_797  [key=0, style=solid];
m3_803 -> m3_803  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_802 -> m3_803  [key=0, style=solid];
m3_802 -> m3_808  [key=2, style=dotted];
m3_806 -> m3_793  [key=0, style=bold, color=blue];
m3_2681 -> m3_2682  [key=0, style=solid];
m3_2690 -> m3_21  [key=2, style=dotted];
m3_2690 -> m3_2691  [key=0, style=solid];
m3_2690 -> m3_2692  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2690 -> m3_2694  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2690 -> m3_2696  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2689 -> m3_22  [key=2, style=dotted];
m3_2689 -> m3_2690  [key=0, style=solid];
m3_2691 -> m3_23  [key=2, style=dotted];
m3_2691 -> m3_24  [key=2, style=dotted];
m3_2691 -> m3_2692  [key=0, style=solid];
m3_2696 -> m3_23  [key=2, style=dotted];
m3_2696 -> m3_24  [key=2, style=dotted];
m3_2696 -> m3_2697  [key=0, style=solid];
m3_2693 -> m3_25  [key=2, style=dotted];
m3_2693 -> m3_2694  [key=0, style=solid];
m3_2695 -> m3_25  [key=2, style=dotted];
m3_2695 -> m3_2696  [key=0, style=solid];
m3_2692 -> m3_2693  [key=0, style=solid];
m3_2692 -> m3_244  [key=2, style=dotted];
m3_2694 -> m3_2695  [key=0, style=solid];
m3_2694 -> m3_244  [key=2, style=dotted];
m3_2688 -> m3_2689  [key=0, style=solid];
m3_2688 -> m3_632  [key=2, style=dotted];
m3_2682 -> m3_2688  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_2682 -> m3_2683  [key=0, style=solid];
m3_2682 -> m3_627  [key=2, style=dotted];
m3_2687 -> m3_2688  [key=0, style=solid];
m3_2687 -> m3_631  [key=2, style=dotted];
m3_2683 -> m3_2687  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_2683 -> m3_628  [key=2, style=dotted];
m3_2683 -> m3_2684  [key=0, style=solid];
m3_2683 -> m3_2685  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_2683 -> m3_2686  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_2686 -> m3_2687  [key=0, style=solid];
m3_2686 -> m3_2698  [key=2, style=dotted];
m3_2684 -> m3_2685  [key=0, style=solid];
m3_2684 -> m3_629  [key=2, style=dotted];
m3_2685 -> m3_2686  [key=0, style=solid];
m3_2685 -> m3_2698  [key=2, style=dotted];
m3_2697 -> m3_2681  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid, color=green];
m3_12 -> m3_26  [key=2, style=dotted, color=green];
m3_12 -> m3_25  [key=2, style=dotted, color=green];
m3_13 -> m3_14  [key=0, style=solid, color=green];
m3_13 -> m3_25  [key=2, style=dotted, color=green];
m3_13 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="System.Diagnostics.TraceLevel"];
m3_13 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_13 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_14 -> m3_15  [key=0, style=solid, color=green];
m3_14 -> m3_25  [key=2, style=dotted, color=green];
m3_14 -> m3_16  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid, color=green];
m3_15 -> m3_26  [key=2, style=dotted, color=green];
m3_15 -> m3_25  [key=2, style=dotted, color=green];
m3_16 -> m3_17  [key=0, style=solid, color=green];
m3_16 -> m3_25  [key=2, style=dotted, color=green];
m3_16 -> m3_26  [key=2, style=dotted];
m3_16 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=eventCache];
m3_16 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=eventCache];
m3_17 -> m3_18  [key=0, style=solid, color=green];
m3_17 -> m3_25  [key=2, style=dotted, color=green];
m3_17 -> m3_0  [key=2, style=dotted];
m3_17 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=traceEventType];
m3_17 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=traceEventType];
m3_18 -> m3_19  [key=0, style=solid, color=green];
m3_18 -> m3_23  [key=2, style=dotted, color=green];
m3_18 -> m3_24  [key=2, style=dotted, color=green];
m3_18 -> m3_25  [key=0, style=solid];
m3_18 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label=listener];
m3_18 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=listener];
m3_18 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=listener];
m3_19 -> m3_20  [key=0, style=solid, color=green];
m3_19 -> m3_25  [key=2, style=dotted, color=green];
m3_19 -> m3_22  [key=0, style=solid];
m3_20 -> m3_0  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_2771 -> m3_2772  [key=0, style=solid];
m3_590 -> m3_21  [key=2, style=dotted];
m3_590 -> m3_591  [key=0, style=solid];
m3_708 -> m3_21  [key=2, style=dotted];
m3_708 -> m3_22  [key=2, style=dotted];
m3_708 -> m3_709  [key=0, style=solid];
m3_708 -> m3_706  [key=2, style=dotted];
m3_724 -> m3_21  [key=2, style=dotted];
m3_724 -> m3_22  [key=2, style=dotted];
m3_724 -> m3_725  [key=0, style=solid];
m3_724 -> m3_706  [key=2, style=dotted];
m3_2704 -> m3_21  [key=2, style=dotted];
m3_2704 -> m3_22  [key=2, style=dotted];
m3_2704 -> m3_2705  [key=0, style=solid];
m3_239 -> m3_23  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_262 -> m3_23  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_299 -> m3_23  [key=2, style=dotted];
m3_299 -> m3_300  [key=0, style=solid];
m3_404 -> m3_23  [key=2, style=dotted];
m3_404 -> m3_404  [key=0, style=solid];
m3_404 -> m3_405  [key=0, style=solid];
m3_422 -> m3_23  [key=2, style=dotted];
m3_422 -> m3_423  [key=0, style=solid];
m3_435 -> m3_23  [key=2, style=dotted];
m3_435 -> m3_435  [key=0, style=solid];
m3_435 -> m3_436  [key=0, style=solid];
m3_679 -> m3_23  [key=2, style=dotted];
m3_679 -> m3_680  [key=0, style=solid];
m3_686 -> m3_23  [key=2, style=dotted];
m3_686 -> m3_687  [key=0, style=solid];
m3_693 -> m3_23  [key=2, style=dotted];
m3_693 -> m3_694  [key=0, style=solid];
m3_1071 -> m3_23  [key=2, style=dotted];
m3_1071 -> m3_1072  [key=0, style=solid];
m3_1106 -> m3_23  [key=2, style=dotted];
m3_1106 -> m3_1107  [key=0, style=solid];
m3_1109 -> m3_23  [key=2, style=dotted];
m3_1109 -> m3_1110  [key=0, style=solid];
m3_1284 -> m3_23  [key=2, style=dotted];
m3_1284 -> m3_1285  [key=0, style=solid];
m3_1362 -> m3_23  [key=2, style=dotted];
m3_1362 -> m3_1363  [key=0, style=solid];
m3_1620 -> m3_23  [key=2, style=dotted];
m3_1620 -> m3_1621  [key=0, style=solid];
m3_1627 -> m3_23  [key=2, style=dotted];
m3_1627 -> m3_1628  [key=0, style=solid];
m3_1634 -> m3_23  [key=2, style=dotted];
m3_1634 -> m3_1635  [key=0, style=solid];
m3_1641 -> m3_23  [key=2, style=dotted];
m3_1641 -> m3_1642  [key=0, style=solid];
m3_1648 -> m3_23  [key=2, style=dotted];
m3_1648 -> m3_1649  [key=0, style=solid];
m3_1793 -> m3_23  [key=2, style=dotted];
m3_1793 -> m3_1794  [key=0, style=solid];
m3_1801 -> m3_23  [key=2, style=dotted];
m3_1801 -> m3_1802  [key=0, style=solid];
m3_1832 -> m3_23  [key=2, style=dotted];
m3_1832 -> m3_1833  [key=0, style=solid];
m3_1888 -> m3_23  [key=2, style=dotted];
m3_1888 -> m3_1889  [key=0, style=solid];
m3_1909 -> m3_23  [key=2, style=dotted];
m3_1909 -> m3_24  [key=2, style=dotted];
m3_1909 -> m3_1910  [key=0, style=solid];
m3_2255 -> m3_23  [key=2, style=dotted];
m3_2255 -> m3_2256  [key=0, style=solid];
m3_2508 -> m3_23  [key=2, style=dotted];
m3_2508 -> m3_24  [key=2, style=dotted];
m3_2508 -> m3_2509  [key=0, style=solid];
m3_2540 -> m3_23  [key=2, style=dotted];
m3_2540 -> m3_24  [key=2, style=dotted];
m3_2540 -> m3_2541  [key=0, style=solid];
m3_2543 -> m3_23  [key=2, style=dotted];
m3_2543 -> m3_24  [key=2, style=dotted];
m3_2543 -> m3_2544  [key=0, style=solid];
m3_2664 -> m3_23  [key=2, style=dotted];
m3_2664 -> m3_2665  [key=0, style=solid];
m3_2667 -> m3_23  [key=2, style=dotted];
m3_2667 -> m3_2668  [key=0, style=solid];
m3_2670 -> m3_23  [key=2, style=dotted];
m3_2670 -> m3_2671  [key=0, style=solid];
m3_2673 -> m3_23  [key=2, style=dotted];
m3_2673 -> m3_2674  [key=0, style=solid];
m3_2676 -> m3_23  [key=2, style=dotted];
m3_2676 -> m3_2677  [key=0, style=solid];
m3_2679 -> m3_23  [key=2, style=dotted];
m3_2679 -> m3_2680  [key=0, style=solid];
m3_2705 -> m3_23  [key=2, style=dotted];
m3_2705 -> m3_2705  [key=0, style=solid];
m3_2705 -> m3_2706  [key=0, style=solid];
m3_1900 -> m3_26  [key=2, style=dotted];
m3_1900 -> m3_1901  [key=0, style=solid];
m3_2006 -> m3_26  [key=2, style=dotted];
m3_2006 -> m3_2007  [key=0, style=solid];
m3_2017 -> m3_26  [key=2, style=dotted];
m3_2017 -> m3_2018  [key=0, style=solid];
m3_2335 -> m3_26  [key=2, style=dotted];
m3_2335 -> m3_2336  [key=0, style=solid];
m3_2351 -> m3_26  [key=2, style=dotted];
m3_2351 -> m3_2352  [key=0, style=solid];
m3_2381 -> m3_26  [key=2, style=dotted];
m3_2381 -> m3_2382  [key=0, style=solid];
m3_2429 -> m3_26  [key=2, style=dotted];
m3_2429 -> m3_2430  [key=0, style=solid];
m3_2437 -> m3_26  [key=2, style=dotted];
m3_2437 -> m3_2438  [key=0, style=solid];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_176  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_176  [key=2, style=dotted];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_176  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_176  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_176  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_244  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_176  [key=2, style=dotted];
m3_589 -> m3_590  [key=0, style=solid];
m3_591 -> m3_589  [key=0, style=bold, color=blue];
m3_597 -> m3_598  [key=0, style=solid];
m3_597 -> m3_378  [key=2, style=dotted];
m3_707 -> m3_708  [key=0, style=solid];
m3_709 -> m3_710  [key=0, style=solid];
m3_709 -> m3_176  [key=2, style=dotted];
m3_723 -> m3_724  [key=0, style=solid];
m3_725 -> m3_726  [key=0, style=solid];
m3_725 -> m3_176  [key=2, style=dotted];
m3_830 -> m3_831  [key=0, style=solid];
m3_830 -> m3_378  [key=2, style=dotted];
m3_837 -> m3_838  [key=0, style=solid];
m3_837 -> m3_378  [key=2, style=dotted];
m3_844 -> m3_845  [key=0, style=solid];
m3_844 -> m3_846  [key=2, style=dotted];
m3_852 -> m3_853  [key=0, style=solid];
m3_852 -> m3_854  [key=2, style=dotted];
m3_863 -> m3_864  [key=0, style=solid];
m3_863 -> m3_846  [key=2, style=dotted];
m3_878 -> m3_879  [key=0, style=solid];
m3_878 -> m3_378  [key=2, style=dotted];
m3_1031 -> m3_1032  [key=0, style=solid];
m3_1031 -> m3_176  [key=2, style=dotted];
m3_1034 -> m3_1035  [key=0, style=solid];
m3_1034 -> m3_176  [key=2, style=dotted];
m3_1037 -> m3_1038  [key=0, style=solid];
m3_1037 -> m3_176  [key=2, style=dotted];
m3_1040 -> m3_1041  [key=0, style=solid];
m3_1040 -> m3_176  [key=2, style=dotted];
m3_1043 -> m3_1044  [key=0, style=solid];
m3_1043 -> m3_176  [key=2, style=dotted];
m3_1068 -> m3_1069  [key=0, style=solid];
m3_1068 -> m3_244  [key=2, style=dotted];
m3_1074 -> m3_1075  [key=0, style=solid];
m3_1074 -> m3_244  [key=2, style=dotted];
m3_1379 -> m3_1380  [key=0, style=solid];
m3_1379 -> m3_116  [key=2, style=dotted];
m3_1398 -> m3_1399  [key=0, style=solid];
m3_1398 -> m3_244  [key=2, style=dotted];
m3_1405 -> m3_1406  [key=0, style=solid];
m3_1405 -> m3_244  [key=2, style=dotted];
m3_1412 -> m3_1413  [key=0, style=solid];
m3_1412 -> m3_116  [key=2, style=dotted];
m3_1419 -> m3_1420  [key=0, style=solid];
m3_1419 -> m3_1386  [key=2, style=dotted];
m3_1433 -> m3_1434  [key=0, style=solid];
m3_1433 -> m3_116  [key=2, style=dotted];
m3_1440 -> m3_1441  [key=0, style=solid];
m3_1440 -> m3_116  [key=2, style=dotted];
m3_1511 -> m3_1512  [key=0, style=solid];
m3_1511 -> m3_1386  [key=2, style=dotted];
m3_1613 -> m3_1614  [key=0, style=solid];
m3_1613 -> m3_176  [key=2, style=dotted];
m3_1867 -> m3_1868  [key=0, style=solid];
m3_1867 -> m3_1846  [key=2, style=dotted];
m3_1942 -> m3_1943  [key=0, style=solid];
m3_1942 -> m3_176  [key=2, style=dotted];
m3_1952 -> m3_1953  [key=0, style=solid];
m3_1952 -> m3_116  [key=2, style=dotted];
m3_1959 -> m3_1960  [key=0, style=solid];
m3_1959 -> m3_176  [key=2, style=dotted];
m3_1966 -> m3_1967  [key=0, style=solid];
m3_1966 -> m3_1968  [key=2, style=dotted];
m3_1974 -> m3_1975  [key=0, style=solid];
m3_1974 -> m3_116  [key=2, style=dotted];
m3_1985 -> m3_1986  [key=0, style=solid];
m3_1985 -> m3_176  [key=2, style=dotted];
m3_1996 -> m3_1997  [key=0, style=solid];
m3_1996 -> m3_116  [key=2, style=dotted];
m3_2029 -> m3_2030  [key=0, style=solid];
m3_2029 -> m3_1968  [key=2, style=dotted];
m3_2032 -> m3_2033  [key=0, style=solid];
m3_2032 -> m3_1968  [key=2, style=dotted];
m3_2035 -> m3_2036  [key=0, style=solid];
m3_2035 -> m3_1968  [key=2, style=dotted];
m3_2343 -> m3_2344  [key=0, style=solid];
m3_2343 -> m3_1392  [key=2, style=dotted];
m3_2359 -> m3_2360  [key=0, style=solid];
m3_2359 -> m3_1392  [key=2, style=dotted];
m3_2373 -> m3_2374  [key=0, style=solid];
m3_2373 -> m3_1392  [key=2, style=dotted];
m3_2389 -> m3_2390  [key=0, style=solid];
m3_2389 -> m3_1846  [key=2, style=dotted];
m3_2397 -> m3_2398  [key=0, style=solid];
m3_2397 -> m3_1846  [key=2, style=dotted];
m3_2405 -> m3_2406  [key=0, style=solid];
m3_2405 -> m3_116  [key=2, style=dotted];
m3_2413 -> m3_2414  [key=0, style=solid];
m3_2413 -> m3_1968  [key=2, style=dotted];
m3_2421 -> m3_2422  [key=0, style=solid];
m3_2421 -> m3_1968  [key=2, style=dotted];
m3_2453 -> m3_2454  [key=0, style=solid];
m3_2453 -> m3_378  [key=2, style=dotted];
m3_2703 -> m3_2704  [key=0, style=solid];
m3_238 -> m3_239  [key=0, style=solid];
m3_240 -> m3_238  [key=0, style=bold, color=blue];
m3_261 -> m3_262  [key=0, style=solid];
m3_263 -> m3_261  [key=0, style=bold, color=blue];
m3_298 -> m3_299  [key=0, style=solid];
m3_300 -> m3_298  [key=0, style=bold, color=blue];
m3_403 -> m3_404  [key=0, style=solid];
m3_405 -> m3_403  [key=0, style=bold, color=blue];
m3_421 -> m3_422  [key=0, style=solid];
m3_423 -> m3_421  [key=0, style=bold, color=blue];
m3_434 -> m3_435  [key=0, style=solid];
m3_436 -> m3_434  [key=0, style=bold, color=blue];
m3_678 -> m3_679  [key=0, style=solid];
m3_680 -> m3_678  [key=0, style=bold, color=blue];
m3_685 -> m3_686  [key=0, style=solid];
m3_687 -> m3_685  [key=0, style=bold, color=blue];
m3_692 -> m3_693  [key=0, style=solid];
m3_694 -> m3_692  [key=0, style=bold, color=blue];
m3_1070 -> m3_1071  [key=0, style=solid];
m3_1072 -> m3_1070  [key=0, style=bold, color=blue];
m3_1105 -> m3_1106  [key=0, style=solid];
m3_1107 -> m3_1105  [key=0, style=bold, color=blue];
m3_1108 -> m3_1109  [key=0, style=solid];
m3_1110 -> m3_1108  [key=0, style=bold, color=blue];
m3_1283 -> m3_1284  [key=0, style=solid];
m3_1285 -> m3_1283  [key=0, style=bold, color=blue];
m3_1361 -> m3_1362  [key=0, style=solid];
m3_1363 -> m3_1361  [key=0, style=bold, color=blue];
m3_1619 -> m3_1620  [key=0, style=solid];
m3_1621 -> m3_1619  [key=0, style=bold, color=blue];
m3_1626 -> m3_1627  [key=0, style=solid];
m3_1628 -> m3_1626  [key=0, style=bold, color=blue];
m3_1633 -> m3_1634  [key=0, style=solid];
m3_1635 -> m3_1633  [key=0, style=bold, color=blue];
m3_1640 -> m3_1641  [key=0, style=solid];
m3_1642 -> m3_1640  [key=0, style=bold, color=blue];
m3_1647 -> m3_1648  [key=0, style=solid];
m3_1649 -> m3_1647  [key=0, style=bold, color=blue];
m3_1792 -> m3_1793  [key=0, style=solid];
m3_1794 -> m3_1792  [key=0, style=bold, color=blue];
m3_1800 -> m3_1801  [key=0, style=solid];
m3_1802 -> m3_1800  [key=0, style=bold, color=blue];
m3_1831 -> m3_1832  [key=0, style=solid];
m3_1833 -> m3_1831  [key=0, style=bold, color=blue];
m3_1887 -> m3_1888  [key=0, style=solid];
m3_1889 -> m3_1887  [key=0, style=bold, color=blue];
m3_1908 -> m3_1909  [key=0, style=solid];
m3_1910 -> m3_1908  [key=0, style=bold, color=blue];
m3_2254 -> m3_2255  [key=0, style=solid];
m3_2256 -> m3_2254  [key=0, style=bold, color=blue];
m3_2507 -> m3_2508  [key=0, style=solid];
m3_2509 -> m3_2507  [key=0, style=bold, color=blue];
m3_2539 -> m3_2540  [key=0, style=solid];
m3_2541 -> m3_2539  [key=0, style=bold, color=blue];
m3_2542 -> m3_2543  [key=0, style=solid];
m3_2544 -> m3_2542  [key=0, style=bold, color=blue];
m3_2663 -> m3_2664  [key=0, style=solid];
m3_2665 -> m3_2663  [key=0, style=bold, color=blue];
m3_2666 -> m3_2667  [key=0, style=solid];
m3_2668 -> m3_2666  [key=0, style=bold, color=blue];
m3_2669 -> m3_2670  [key=0, style=solid];
m3_2671 -> m3_2669  [key=0, style=bold, color=blue];
m3_2672 -> m3_2673  [key=0, style=solid];
m3_2674 -> m3_2672  [key=0, style=bold, color=blue];
m3_2675 -> m3_2676  [key=0, style=solid];
m3_2677 -> m3_2675  [key=0, style=bold, color=blue];
m3_2678 -> m3_2679  [key=0, style=solid];
m3_2680 -> m3_2678  [key=0, style=bold, color=blue];
m3_2706 -> m3_2703  [key=0, style=bold, color=blue];
m3_1899 -> m3_1900  [key=0, style=solid];
m3_1901 -> m3_1899  [key=0, style=bold, color=blue];
m3_2005 -> m3_2006  [key=0, style=solid];
m3_2007 -> m3_2005  [key=0, style=bold, color=blue];
m3_2016 -> m3_2017  [key=0, style=solid];
m3_2018 -> m3_2016  [key=0, style=bold, color=blue];
m3_2334 -> m3_2335  [key=0, style=solid];
m3_2336 -> m3_2334  [key=0, style=bold, color=blue];
m3_2350 -> m3_2351  [key=0, style=solid];
m3_2352 -> m3_2350  [key=0, style=bold, color=blue];
m3_2380 -> m3_2381  [key=0, style=solid];
m3_2382 -> m3_2380  [key=0, style=bold, color=blue];
m3_2428 -> m3_2429  [key=0, style=solid];
m3_2430 -> m3_2428  [key=0, style=bold, color=blue];
m3_2436 -> m3_2437  [key=0, style=solid];
m3_2438 -> m3_2436  [key=0, style=bold, color=blue];
m3_173 -> m3_174  [key=0, style=solid];
m3_175 -> m3_173  [key=0, style=bold, color=blue];
m3_190 -> m3_191  [key=0, style=solid];
m3_192 -> m3_190  [key=0, style=bold, color=blue];
m3_193 -> m3_194  [key=0, style=solid];
m3_195 -> m3_193  [key=0, style=bold, color=blue];
m3_196 -> m3_197  [key=0, style=solid];
m3_198 -> m3_196  [key=0, style=bold, color=blue];
m3_199 -> m3_200  [key=0, style=solid];
m3_201 -> m3_199  [key=0, style=bold, color=blue];
m3_241 -> m3_242  [key=0, style=solid];
m3_243 -> m3_241  [key=0, style=bold, color=blue];
m3_245 -> m3_246  [key=0, style=solid];
m3_247 -> m3_245  [key=0, style=bold, color=blue];
m3_596 -> m3_597  [key=0, style=solid];
m3_598 -> m3_596  [key=0, style=bold, color=blue];
m3_710 -> m3_707  [key=0, style=bold, color=blue];
m3_726 -> m3_723  [key=0, style=bold, color=blue];
m3_829 -> m3_830  [key=0, style=solid];
m3_831 -> m3_829  [key=0, style=bold, color=blue];
m3_836 -> m3_837  [key=0, style=solid];
m3_838 -> m3_836  [key=0, style=bold, color=blue];
m3_843 -> m3_844  [key=0, style=solid];
m3_845 -> m3_843  [key=0, style=bold, color=blue];
m3_851 -> m3_852  [key=0, style=solid];
m3_853 -> m3_851  [key=0, style=bold, color=blue];
m3_862 -> m3_863  [key=0, style=solid];
m3_864 -> m3_862  [key=0, style=bold, color=blue];
m3_877 -> m3_878  [key=0, style=solid];
m3_879 -> m3_877  [key=0, style=bold, color=blue];
m3_1030 -> m3_1031  [key=0, style=solid];
m3_1032 -> m3_1030  [key=0, style=bold, color=blue];
m3_1033 -> m3_1034  [key=0, style=solid];
m3_1035 -> m3_1033  [key=0, style=bold, color=blue];
m3_1036 -> m3_1037  [key=0, style=solid];
m3_1038 -> m3_1036  [key=0, style=bold, color=blue];
m3_1039 -> m3_1040  [key=0, style=solid];
m3_1041 -> m3_1039  [key=0, style=bold, color=blue];
m3_1042 -> m3_1043  [key=0, style=solid];
m3_1044 -> m3_1042  [key=0, style=bold, color=blue];
m3_1067 -> m3_1068  [key=0, style=solid];
m3_1069 -> m3_1067  [key=0, style=bold, color=blue];
m3_1073 -> m3_1074  [key=0, style=solid];
m3_1075 -> m3_1073  [key=0, style=bold, color=blue];
m3_1378 -> m3_1379  [key=0, style=solid];
m3_1380 -> m3_1378  [key=0, style=bold, color=blue];
m3_1397 -> m3_1398  [key=0, style=solid];
m3_1399 -> m3_1397  [key=0, style=bold, color=blue];
m3_1404 -> m3_1405  [key=0, style=solid];
m3_1406 -> m3_1404  [key=0, style=bold, color=blue];
m3_1411 -> m3_1412  [key=0, style=solid];
m3_1413 -> m3_1411  [key=0, style=bold, color=blue];
m3_1418 -> m3_1419  [key=0, style=solid];
m3_1420 -> m3_1418  [key=0, style=bold, color=blue];
m3_1432 -> m3_1433  [key=0, style=solid];
m3_1434 -> m3_1432  [key=0, style=bold, color=blue];
m3_1439 -> m3_1440  [key=0, style=solid];
m3_1441 -> m3_1439  [key=0, style=bold, color=blue];
m3_1510 -> m3_1511  [key=0, style=solid];
m3_1512 -> m3_1510  [key=0, style=bold, color=blue];
m3_1612 -> m3_1613  [key=0, style=solid];
m3_1614 -> m3_1612  [key=0, style=bold, color=blue];
m3_1866 -> m3_1867  [key=0, style=solid];
m3_1868 -> m3_1866  [key=0, style=bold, color=blue];
m3_1941 -> m3_1942  [key=0, style=solid];
m3_1943 -> m3_1941  [key=0, style=bold, color=blue];
m3_1951 -> m3_1952  [key=0, style=solid];
m3_1953 -> m3_1951  [key=0, style=bold, color=blue];
m3_1958 -> m3_1959  [key=0, style=solid];
m3_1960 -> m3_1958  [key=0, style=bold, color=blue];
m3_1965 -> m3_1966  [key=0, style=solid];
m3_1967 -> m3_1965  [key=0, style=bold, color=blue];
m3_1973 -> m3_1974  [key=0, style=solid];
m3_1975 -> m3_1973  [key=0, style=bold, color=blue];
m3_1984 -> m3_1985  [key=0, style=solid];
m3_1986 -> m3_1984  [key=0, style=bold, color=blue];
m3_1995 -> m3_1996  [key=0, style=solid];
m3_1997 -> m3_1995  [key=0, style=bold, color=blue];
m3_2028 -> m3_2029  [key=0, style=solid];
m3_2030 -> m3_2028  [key=0, style=bold, color=blue];
m3_2031 -> m3_2032  [key=0, style=solid];
m3_2033 -> m3_2031  [key=0, style=bold, color=blue];
m3_2034 -> m3_2035  [key=0, style=solid];
m3_2036 -> m3_2034  [key=0, style=bold, color=blue];
m3_2342 -> m3_2343  [key=0, style=solid];
m3_2344 -> m3_2342  [key=0, style=bold, color=blue];
m3_2358 -> m3_2359  [key=0, style=solid];
m3_2360 -> m3_2358  [key=0, style=bold, color=blue];
m3_2372 -> m3_2373  [key=0, style=solid];
m3_2374 -> m3_2372  [key=0, style=bold, color=blue];
m3_2388 -> m3_2389  [key=0, style=solid];
m3_2390 -> m3_2388  [key=0, style=bold, color=blue];
m3_2396 -> m3_2397  [key=0, style=solid];
m3_2398 -> m3_2396  [key=0, style=bold, color=blue];
m3_2404 -> m3_2405  [key=0, style=solid];
m3_2406 -> m3_2404  [key=0, style=bold, color=blue];
m3_2412 -> m3_2413  [key=0, style=solid];
m3_2414 -> m3_2412  [key=0, style=bold, color=blue];
m3_2420 -> m3_2421  [key=0, style=solid];
m3_2422 -> m3_2420  [key=0, style=bold, color=blue];
m3_2452 -> m3_2453  [key=0, style=solid];
m3_2454 -> m3_2452  [key=0, style=bold, color=blue];
m3_2777 -> m3_357  [key=2, style=dotted];
m3_2777 -> m3_2769  [key=2, style=dotted];
m3_2777 -> m3_2778  [key=0, style=solid];
m3_2777 -> m3_2779  [key=1, style=dashed, color=darkseagreen4, label=bytes];
m3_2779 -> m3_808  [key=2, style=dotted];
m3_2779 -> m3_2780  [key=0, style=solid];
m3_2780 -> m3_2781  [key=0, style=solid];
m3_2780 -> m3_2764  [key=2, style=dotted];
m3_2774 -> m3_2770  [key=2, style=dotted];
m3_2774 -> m3_2775  [key=0, style=solid];
m3_2776 -> m3_2777  [key=0, style=solid];
m3_2776 -> m3_2786  [key=2, style=dotted];
m3_2776 -> m3_2787  [key=2, style=dotted];
m3_2776 -> m3_2788  [key=2, style=dotted];
m3_2778 -> m3_2779  [key=0, style=solid];
m3_2778 -> m3_2789  [key=2, style=dotted];
m3_2773 -> m3_2774  [key=0, style=solid];
m3_2773 -> m3_2784  [key=2, style=dotted];
m3_2775 -> m3_2776  [key=0, style=solid];
m3_2775 -> m3_2778  [key=1, style=dashed, color=darkseagreen4, label=serverSocket];
m3_2775 -> m3_2785  [key=2, style=dotted];
m3_2772 -> m3_2773  [key=0, style=solid];
m3_2772 -> m3_2775  [key=1, style=dashed, color=darkseagreen4, label=server];
m3_2772 -> m3_2782  [key=2, style=dotted];
m3_2772 -> m3_2783  [key=2, style=dotted];
m3_2781 -> m3_2771  [key=0, style=bold, color=blue];
m3_1690 -> m3_1691  [key=0, style=solid];
m3_1692 -> m3_21  [key=2, style=dotted];
m3_1692 -> m3_22  [key=2, style=dotted];
m3_1692 -> m3_1693  [key=0, style=solid];
m3_1692 -> m3_1695  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1692 -> m3_1697  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1692 -> m3_1698  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1692 -> m3_1699  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1695 -> m3_23  [key=2, style=dotted];
m3_1695 -> m3_24  [key=2, style=dotted];
m3_1695 -> m3_1696  [key=0, style=solid];
m3_1697 -> m3_23  [key=2, style=dotted];
m3_1697 -> m3_24  [key=2, style=dotted];
m3_1697 -> m3_1698  [key=0, style=solid];
m3_1699 -> m3_23  [key=2, style=dotted];
m3_1699 -> m3_1700  [key=0, style=solid];
m3_1699 -> m3_158  [key=2, style=dotted];
m3_1698 -> m3_25  [key=2, style=dotted];
m3_1698 -> m3_1699  [key=0, style=solid];
m3_1691 -> m3_1692  [key=0, style=solid];
m3_1691 -> m3_1691  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1693 -> m3_1694  [key=0, style=solid];
m3_1693 -> m3_1696  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1693 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_1694 -> m3_1695  [key=0, style=solid];
m3_1694 -> m3_1697  [key=0, style=solid];
m3_1696 -> m3_1694  [key=0, style=solid];
m3_1696 -> m3_1696  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1700 -> m3_1690  [key=0, style=bold, color=blue];
m3_2094 -> m3_2095  [key=0, style=solid];
m3_2096 -> m3_21  [key=2, style=dotted];
m3_2096 -> m3_2097  [key=0, style=solid];
m3_2096 -> m3_358  [key=2, style=dotted];
m3_2096 -> m3_396  [key=2, style=dotted];
m3_2096 -> m3_397  [key=2, style=dotted];
m3_2096 -> m3_2098  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2099  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2100  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2101  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2102  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2103  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2104  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2105  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2106  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2107  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2108  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2109  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2110  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2111  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2112  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2113  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2114  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2115  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2116  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2117  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2118  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2119  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2120  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2122  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2123  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2124  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2125  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2126  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2127  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2129  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2130  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2096 -> m3_2131  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2097 -> m3_23  [key=2, style=dotted];
m3_2097 -> m3_24  [key=2, style=dotted];
m3_2097 -> m3_2098  [key=0, style=solid];
m3_2099 -> m3_23  [key=2, style=dotted];
m3_2099 -> m3_24  [key=2, style=dotted];
m3_2099 -> m3_2100  [key=0, style=solid];
m3_2101 -> m3_23  [key=2, style=dotted];
m3_2101 -> m3_24  [key=2, style=dotted];
m3_2101 -> m3_2102  [key=0, style=solid];
m3_2103 -> m3_23  [key=2, style=dotted];
m3_2103 -> m3_24  [key=2, style=dotted];
m3_2103 -> m3_2104  [key=0, style=solid];
m3_2106 -> m3_23  [key=2, style=dotted];
m3_2106 -> m3_24  [key=2, style=dotted];
m3_2106 -> m3_2107  [key=0, style=solid];
m3_2108 -> m3_23  [key=2, style=dotted];
m3_2108 -> m3_24  [key=2, style=dotted];
m3_2108 -> m3_2109  [key=0, style=solid];
m3_2111 -> m3_23  [key=2, style=dotted];
m3_2111 -> m3_24  [key=2, style=dotted];
m3_2111 -> m3_2112  [key=0, style=solid];
m3_2113 -> m3_23  [key=2, style=dotted];
m3_2113 -> m3_24  [key=2, style=dotted];
m3_2113 -> m3_2114  [key=0, style=solid];
m3_2115 -> m3_23  [key=2, style=dotted];
m3_2115 -> m3_24  [key=2, style=dotted];
m3_2115 -> m3_2116  [key=0, style=solid];
m3_2118 -> m3_23  [key=2, style=dotted];
m3_2118 -> m3_24  [key=2, style=dotted];
m3_2118 -> m3_2119  [key=0, style=solid];
m3_2120 -> m3_23  [key=2, style=dotted];
m3_2120 -> m3_24  [key=2, style=dotted];
m3_2120 -> m3_2121  [key=0, style=solid];
m3_2124 -> m3_23  [key=2, style=dotted];
m3_2124 -> m3_24  [key=2, style=dotted];
m3_2124 -> m3_2125  [key=0, style=solid];
m3_2126 -> m3_23  [key=2, style=dotted];
m3_2126 -> m3_24  [key=2, style=dotted];
m3_2126 -> m3_2127  [key=0, style=solid];
m3_2128 -> m3_23  [key=2, style=dotted];
m3_2128 -> m3_24  [key=2, style=dotted];
m3_2128 -> m3_2129  [key=0, style=solid];
m3_2130 -> m3_23  [key=2, style=dotted];
m3_2130 -> m3_24  [key=2, style=dotted];
m3_2130 -> m3_2131  [key=0, style=solid];
m3_2098 -> m3_25  [key=2, style=dotted];
m3_2098 -> m3_2099  [key=0, style=solid];
m3_2100 -> m3_25  [key=2, style=dotted];
m3_2100 -> m3_2101  [key=0, style=solid];
m3_2102 -> m3_25  [key=2, style=dotted];
m3_2102 -> m3_2103  [key=0, style=solid];
m3_2104 -> m3_25  [key=2, style=dotted];
m3_2104 -> m3_2105  [key=0, style=solid];
m3_2105 -> m3_25  [key=2, style=dotted];
m3_2105 -> m3_2106  [key=0, style=solid];
m3_2107 -> m3_25  [key=2, style=dotted];
m3_2107 -> m3_2108  [key=0, style=solid];
m3_2109 -> m3_25  [key=2, style=dotted];
m3_2109 -> m3_2110  [key=0, style=solid];
m3_2110 -> m3_25  [key=2, style=dotted];
m3_2110 -> m3_2111  [key=0, style=solid];
m3_2112 -> m3_25  [key=2, style=dotted];
m3_2112 -> m3_2113  [key=0, style=solid];
m3_2114 -> m3_25  [key=2, style=dotted];
m3_2114 -> m3_2115  [key=0, style=solid];
m3_2116 -> m3_25  [key=2, style=dotted];
m3_2116 -> m3_2117  [key=0, style=solid];
m3_2117 -> m3_25  [key=2, style=dotted];
m3_2117 -> m3_2118  [key=0, style=solid];
m3_2119 -> m3_25  [key=2, style=dotted];
m3_2119 -> m3_2120  [key=0, style=solid];
m3_2121 -> m3_25  [key=2, style=dotted];
m3_2121 -> m3_2122  [key=0, style=solid];
m3_2122 -> m3_25  [key=2, style=dotted];
m3_2122 -> m3_2123  [key=0, style=solid];
m3_2123 -> m3_25  [key=2, style=dotted];
m3_2123 -> m3_2124  [key=0, style=solid];
m3_2125 -> m3_25  [key=2, style=dotted];
m3_2125 -> m3_2126  [key=0, style=solid];
m3_2127 -> m3_25  [key=2, style=dotted];
m3_2127 -> m3_2128  [key=0, style=solid];
m3_2129 -> m3_25  [key=2, style=dotted];
m3_2129 -> m3_2130  [key=0, style=solid];
m3_2131 -> m3_25  [key=2, style=dotted];
m3_2131 -> m3_2132  [key=0, style=solid];
m3_2095 -> m3_2096  [key=0, style=solid];
m3_2132 -> m3_2094  [key=0, style=bold, color=blue];
m3_1428 -> m3_1429  [key=0, style=solid];
m3_1429 -> m3_21  [key=2, style=dotted];
m3_1429 -> m3_22  [key=2, style=dotted];
m3_1429 -> m3_1430  [key=0, style=solid];
m3_1429 -> m3_1433  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1430 -> m3_1431  [key=0, style=solid];
m3_1430 -> m3_172  [key=2, style=dotted];
m3_1430 -> m3_1432  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1431 -> m3_1428  [key=0, style=bold, color=blue];
m3_2455 -> m3_2456  [key=0, style=solid];
m3_2461 -> m3_21  [key=2, style=dotted];
m3_2461 -> m3_22  [key=2, style=dotted];
m3_2461 -> m3_2462  [key=0, style=solid];
m3_2461 -> m3_2463  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2464  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2465  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2466  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2467  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2468  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2469  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2470  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2471  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2461 -> m3_2478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_21  [key=2, style=dotted];
m3_2479 -> m3_22  [key=2, style=dotted];
m3_2479 -> m3_2480  [key=0, style=solid];
m3_2479 -> m3_2481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2482  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2483  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2484  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2485  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2486  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2490  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2479 -> m3_2496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2462 -> m3_23  [key=2, style=dotted];
m3_2462 -> m3_2463  [key=0, style=solid];
m3_2463 -> m3_23  [key=2, style=dotted];
m3_2463 -> m3_2464  [key=0, style=solid];
m3_2466 -> m3_23  [key=2, style=dotted];
m3_2466 -> m3_2467  [key=0, style=solid];
m3_2469 -> m3_23  [key=2, style=dotted];
m3_2469 -> m3_2470  [key=0, style=solid];
m3_2472 -> m3_23  [key=2, style=dotted];
m3_2472 -> m3_2473  [key=0, style=solid];
m3_2475 -> m3_23  [key=2, style=dotted];
m3_2475 -> m3_2476  [key=0, style=solid];
m3_2478 -> m3_23  [key=2, style=dotted];
m3_2478 -> m3_2479  [key=0, style=solid];
m3_2480 -> m3_23  [key=2, style=dotted];
m3_2480 -> m3_2481  [key=0, style=solid];
m3_2496 -> m3_23  [key=2, style=dotted];
m3_2496 -> m3_2497  [key=0, style=solid];
m3_2458 -> m3_25  [key=2, style=dotted];
m3_2458 -> m3_2459  [key=0, style=solid];
m3_2458 -> m3_1574  [key=2, style=dotted];
m3_2458 -> m3_2499  [key=2, style=dotted];
m3_2459 -> m3_25  [key=2, style=dotted];
m3_2459 -> m3_2460  [key=0, style=solid];
m3_2459 -> m3_2500  [key=2, style=dotted];
m3_2464 -> m3_25  [key=2, style=dotted];
m3_2464 -> m3_2465  [key=0, style=solid];
m3_2465 -> m3_25  [key=2, style=dotted];
m3_2465 -> m3_2466  [key=0, style=solid];
m3_2467 -> m3_25  [key=2, style=dotted];
m3_2467 -> m3_2468  [key=0, style=solid];
m3_2468 -> m3_25  [key=2, style=dotted];
m3_2468 -> m3_2469  [key=0, style=solid];
m3_2470 -> m3_25  [key=2, style=dotted];
m3_2470 -> m3_2471  [key=0, style=solid];
m3_2471 -> m3_25  [key=2, style=dotted];
m3_2471 -> m3_2472  [key=0, style=solid];
m3_2473 -> m3_25  [key=2, style=dotted];
m3_2473 -> m3_2474  [key=0, style=solid];
m3_2474 -> m3_25  [key=2, style=dotted];
m3_2474 -> m3_2475  [key=0, style=solid];
m3_2476 -> m3_25  [key=2, style=dotted];
m3_2476 -> m3_2477  [key=0, style=solid];
m3_2477 -> m3_25  [key=2, style=dotted];
m3_2477 -> m3_2478  [key=0, style=solid];
m3_2482 -> m3_25  [key=2, style=dotted];
m3_2482 -> m3_2483  [key=0, style=solid];
m3_2483 -> m3_25  [key=2, style=dotted];
m3_2483 -> m3_2484  [key=0, style=solid];
m3_2485 -> m3_25  [key=2, style=dotted];
m3_2485 -> m3_2486  [key=0, style=solid];
m3_2486 -> m3_25  [key=2, style=dotted];
m3_2486 -> m3_2487  [key=0, style=solid];
m3_2488 -> m3_25  [key=2, style=dotted];
m3_2488 -> m3_2489  [key=0, style=solid];
m3_2489 -> m3_25  [key=2, style=dotted];
m3_2489 -> m3_2490  [key=0, style=solid];
m3_2491 -> m3_25  [key=2, style=dotted];
m3_2491 -> m3_2492  [key=0, style=solid];
m3_2492 -> m3_25  [key=2, style=dotted];
m3_2492 -> m3_2493  [key=0, style=solid];
m3_2494 -> m3_25  [key=2, style=dotted];
m3_2494 -> m3_2495  [key=0, style=solid];
m3_2495 -> m3_25  [key=2, style=dotted];
m3_2495 -> m3_2496  [key=0, style=solid];
m3_2460 -> m3_2461  [key=0, style=solid];
m3_2460 -> m3_2479  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2460 -> m3_2460  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2481 -> m3_2482  [key=0, style=solid];
m3_2481 -> m3_244  [key=2, style=dotted];
m3_2484 -> m3_2485  [key=0, style=solid];
m3_2484 -> m3_244  [key=2, style=dotted];
m3_2487 -> m3_2488  [key=0, style=solid];
m3_2487 -> m3_244  [key=2, style=dotted];
m3_2490 -> m3_2491  [key=0, style=solid];
m3_2490 -> m3_244  [key=2, style=dotted];
m3_2493 -> m3_2494  [key=0, style=solid];
m3_2493 -> m3_244  [key=2, style=dotted];
m3_2457 -> m3_2458  [key=0, style=solid];
m3_2457 -> m3_2459  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2457 -> m3_2498  [key=2, style=dotted];
m3_2456 -> m3_2457  [key=0, style=solid];
m3_2497 -> m3_2455  [key=0, style=bold, color=blue];
m3_2796 -> m3_2799  [key=0, style=solid];
m3_2799 -> m3_2800  [key=0, style=solid];
m3_2799 -> m3_2801  [key=2, style=dotted];
m3_2799 -> m3_2802  [key=2, style=dotted];
m3_2800 -> m3_2796  [key=0, style=bold, color=blue];
m3_1859 -> m3_1860  [key=0, style=solid];
m3_1860 -> m3_21  [key=2, style=dotted];
m3_1860 -> m3_22  [key=2, style=dotted];
m3_1860 -> m3_1861  [key=0, style=solid];
m3_1860 -> m3_1862  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1860 -> m3_1867  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1860 -> m3_1863  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1860 -> m3_1864  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1861 -> m3_23  [key=2, style=dotted];
m3_1861 -> m3_24  [key=2, style=dotted];
m3_1861 -> m3_1862  [key=0, style=solid];
m3_1864 -> m3_23  [key=2, style=dotted];
m3_1864 -> m3_24  [key=2, style=dotted];
m3_1864 -> m3_1865  [key=0, style=solid];
m3_1863 -> m3_25  [key=2, style=dotted];
m3_1863 -> m3_1864  [key=0, style=solid];
m3_1863 -> m3_1846  [key=2, style=dotted];
m3_1862 -> m3_1863  [key=0, style=solid];
m3_1862 -> m3_172  [key=2, style=dotted];
m3_1862 -> m3_1866  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1865 -> m3_1859  [key=0, style=bold, color=blue];
m3_1934 -> m3_1935  [key=0, style=solid];
m3_1935 -> m3_21  [key=2, style=dotted];
m3_1935 -> m3_22  [key=2, style=dotted];
m3_1935 -> m3_1936  [key=0, style=solid];
m3_1935 -> m3_1937  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1935 -> m3_1942  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1935 -> m3_1938  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1935 -> m3_1939  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1936 -> m3_23  [key=2, style=dotted];
m3_1936 -> m3_1937  [key=0, style=solid];
m3_1939 -> m3_23  [key=2, style=dotted];
m3_1939 -> m3_24  [key=2, style=dotted];
m3_1939 -> m3_1940  [key=0, style=solid];
m3_1938 -> m3_25  [key=2, style=dotted];
m3_1938 -> m3_1939  [key=0, style=solid];
m3_1938 -> m3_176  [key=2, style=dotted];
m3_1937 -> m3_1938  [key=0, style=solid];
m3_1937 -> m3_172  [key=2, style=dotted];
m3_1937 -> m3_1941  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1940 -> m3_1934  [key=0, style=bold, color=blue];
m3_1356 -> m3_1357  [key=0, style=solid];
m3_1357 -> m3_21  [key=2, style=dotted];
m3_1357 -> m3_22  [key=2, style=dotted];
m3_1357 -> m3_1358  [key=0, style=solid];
m3_1357 -> m3_1359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1357 -> m3_1362  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1358 -> m3_23  [key=2, style=dotted];
m3_1358 -> m3_1359  [key=0, style=solid];
m3_1359 -> m3_1360  [key=0, style=solid];
m3_1359 -> m3_172  [key=2, style=dotted];
m3_1359 -> m3_1361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1360 -> m3_1356  [key=0, style=bold, color=blue];
m3_2383 -> m3_2384  [key=0, style=solid];
m3_2385 -> m3_21  [key=2, style=dotted];
m3_2385 -> m3_22  [key=2, style=dotted];
m3_2385 -> m3_2386  [key=0, style=solid];
m3_2385 -> m3_2389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2384 -> m3_2385  [key=0, style=solid];
m3_2384 -> m3_2368  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2386 -> m3_2387  [key=0, style=solid];
m3_2386 -> m3_172  [key=2, style=dotted];
m3_2386 -> m3_2388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2387 -> m3_2383  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_27  [key=2, style=dotted];
m3_1527 -> m3_1528  [key=0, style=solid];
m3_1529 -> m3_21  [key=2, style=dotted];
m3_1529 -> m3_22  [key=2, style=dotted];
m3_1529 -> m3_1530  [key=0, style=solid];
m3_1529 -> m3_1531  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1536  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1537  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1538  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1529 -> m3_1539  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1530 -> m3_23  [key=2, style=dotted];
m3_1530 -> m3_24  [key=2, style=dotted];
m3_1530 -> m3_1531  [key=0, style=solid];
m3_1532 -> m3_23  [key=2, style=dotted];
m3_1532 -> m3_24  [key=2, style=dotted];
m3_1532 -> m3_1533  [key=0, style=solid];
m3_1538 -> m3_23  [key=2, style=dotted];
m3_1538 -> m3_24  [key=2, style=dotted];
m3_1538 -> m3_1539  [key=0, style=solid];
m3_1531 -> m3_25  [key=2, style=dotted];
m3_1531 -> m3_1532  [key=0, style=solid];
m3_1533 -> m3_25  [key=2, style=dotted];
m3_1533 -> m3_1534  [key=0, style=solid];
m3_1535 -> m3_25  [key=2, style=dotted];
m3_1535 -> m3_1536  [key=0, style=solid];
m3_1536 -> m3_25  [key=2, style=dotted];
m3_1536 -> m3_1537  [key=0, style=solid];
m3_1537 -> m3_25  [key=2, style=dotted];
m3_1537 -> m3_1538  [key=0, style=solid];
m3_1537 -> m3_1484  [key=2, style=dotted];
m3_1537 -> m3_1485  [key=2, style=dotted];
m3_1537 -> m3_1486  [key=2, style=dotted];
m3_1537 -> m3_1541  [key=2, style=dotted];
m3_1537 -> m3_1542  [key=2, style=dotted];
m3_1539 -> m3_25  [key=2, style=dotted];
m3_1539 -> m3_1540  [key=0, style=solid];
m3_1528 -> m3_1529  [key=0, style=solid];
m3_1534 -> m3_1535  [key=0, style=solid];
m3_1534 -> m3_1386  [key=2, style=dotted];
m3_1540 -> m3_1527  [key=0, style=bold, color=blue];
m3_429 -> m3_430  [key=0, style=solid];
m3_431 -> m3_21  [key=2, style=dotted];
m3_431 -> m3_22  [key=2, style=dotted];
m3_431 -> m3_432  [key=0, style=solid];
m3_431 -> m3_435  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_430 -> m3_431  [key=0, style=solid];
m3_430 -> m3_430  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_432 -> m3_433  [key=0, style=solid];
m3_432 -> m3_172  [key=2, style=dotted];
m3_432 -> m3_434  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_433 -> m3_429  [key=0, style=bold, color=blue];
m3_606 -> m3_607  [key=0, style=solid];
m3_617 -> m3_21  [key=2, style=dotted];
m3_617 -> m3_22  [key=2, style=dotted];
m3_617 -> m3_618  [key=0, style=solid];
m3_617 -> m3_621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_617 -> m3_622  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_617 -> m3_624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_617 -> m3_625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_618 -> m3_23  [key=2, style=dotted];
m3_618 -> m3_24  [key=2, style=dotted];
m3_618 -> m3_619  [key=0, style=solid];
m3_621 -> m3_23  [key=2, style=dotted];
m3_621 -> m3_24  [key=2, style=dotted];
m3_621 -> m3_622  [key=0, style=solid];
m3_624 -> m3_23  [key=2, style=dotted];
m3_624 -> m3_24  [key=2, style=dotted];
m3_624 -> m3_625  [key=0, style=solid];
m3_625 -> m3_23  [key=2, style=dotted];
m3_625 -> m3_626  [key=0, style=solid];
m3_625 -> m3_158  [key=2, style=dotted];
m3_622 -> m3_25  [key=2, style=dotted];
m3_622 -> m3_623  [key=0, style=solid];
m3_616 -> m3_617  [key=0, style=solid];
m3_616 -> m3_632  [key=2, style=dotted];
m3_619 -> m3_622  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_619 -> m3_620  [key=0, style=solid];
m3_619 -> m3_623  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_620 -> m3_621  [key=0, style=solid];
m3_620 -> m3_624  [key=0, style=solid];
m3_620 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_623 -> m3_620  [key=0, style=solid];
m3_623 -> m3_623  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_608 -> m3_616  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_608 -> m3_609  [key=0, style=solid];
m3_608 -> m3_627  [key=2, style=dotted];
m3_615 -> m3_616  [key=0, style=solid];
m3_615 -> m3_631  [key=2, style=dotted];
m3_612 -> m3_615  [key=0, style=solid];
m3_612 -> m3_612  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_612 -> m3_613  [key=0, style=solid];
m3_607 -> m3_620  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m3_607 -> m3_608  [key=0, style=solid];
m3_607 -> m3_612  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m3_607 -> m3_607  [key=3, color=darkorchid, style=bold, label="Local variable int valueCount"];
m3_609 -> m3_615  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_609 -> m3_610  [key=0, style=solid];
m3_609 -> m3_628  [key=2, style=dotted];
m3_609 -> m3_613  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_611 -> m3_612  [key=0, style=solid];
m3_611 -> m3_613  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_611 -> m3_614  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_614 -> m3_612  [key=0, style=solid];
m3_614 -> m3_614  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_613 -> m3_614  [key=0, style=solid];
m3_613 -> m3_630  [key=2, style=dotted];
m3_610 -> m3_611  [key=0, style=solid];
m3_610 -> m3_629  [key=2, style=dotted];
m3_626 -> m3_606  [key=0, style=bold, color=blue];
m3_1501 -> m3_1502  [key=0, style=solid];
m3_1503 -> m3_21  [key=2, style=dotted];
m3_1503 -> m3_22  [key=2, style=dotted];
m3_1503 -> m3_1504  [key=0, style=solid];
m3_1503 -> m3_1505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1503 -> m3_1506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1503 -> m3_1507  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1503 -> m3_1508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1503 -> m3_1511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1504 -> m3_23  [key=2, style=dotted];
m3_1504 -> m3_24  [key=2, style=dotted];
m3_1504 -> m3_1505  [key=0, style=solid];
m3_1506 -> m3_23  [key=2, style=dotted];
m3_1506 -> m3_24  [key=2, style=dotted];
m3_1506 -> m3_1507  [key=0, style=solid];
m3_1505 -> m3_25  [key=2, style=dotted];
m3_1505 -> m3_1506  [key=0, style=solid];
m3_1507 -> m3_25  [key=2, style=dotted];
m3_1507 -> m3_1508  [key=0, style=solid];
m3_1502 -> m3_1503  [key=0, style=solid];
m3_1502 -> m3_1502  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1508 -> m3_1509  [key=0, style=solid];
m3_1508 -> m3_172  [key=2, style=dotted];
m3_1508 -> m3_1510  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1509 -> m3_1501  [key=0, style=bold, color=blue];
m3_1393 -> m3_1394  [key=0, style=solid];
m3_1394 -> m3_21  [key=2, style=dotted];
m3_1394 -> m3_22  [key=2, style=dotted];
m3_1394 -> m3_1395  [key=0, style=solid];
m3_1394 -> m3_1398  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1395 -> m3_1396  [key=0, style=solid];
m3_1395 -> m3_172  [key=2, style=dotted];
m3_1395 -> m3_1397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1396 -> m3_1393  [key=0, style=bold, color=blue];
m3_359 -> m3_360  [key=0, style=solid];
m3_361 -> m3_21  [key=2, style=dotted];
m3_361 -> m3_362  [key=0, style=solid];
m3_361 -> m3_358  [key=2, style=dotted];
m3_361 -> m3_363  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_366 -> m3_21  [key=2, style=dotted];
m3_366 -> m3_367  [key=0, style=solid];
m3_366 -> m3_358  [key=2, style=dotted];
m3_366 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_362 -> m3_24  [key=2, style=dotted];
m3_362 -> m3_363  [key=0, style=solid];
m3_367 -> m3_24  [key=2, style=dotted];
m3_367 -> m3_368  [key=0, style=solid];
m3_369 -> m3_24  [key=2, style=dotted];
m3_369 -> m3_370  [key=0, style=solid];
m3_360 -> m3_361  [key=0, style=solid];
m3_360 -> m3_362  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_360 -> m3_371  [key=2, style=dotted];
m3_360 -> m3_364  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_363 -> m3_364  [key=0, style=solid];
m3_363 -> m3_372  [key=2, style=dotted];
m3_365 -> m3_366  [key=0, style=solid];
m3_365 -> m3_367  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_365 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_365 -> m3_371  [key=2, style=dotted];
m3_368 -> m3_369  [key=0, style=solid];
m3_368 -> m3_372  [key=2, style=dotted];
m3_364 -> m3_365  [key=0, style=solid];
m3_364 -> m3_158  [key=2, style=dotted];
m3_370 -> m3_359  [key=0, style=bold, color=blue];
m3_106 -> m3_107  [key=0, style=solid];
m3_107 -> m3_21  [key=2, style=dotted];
m3_107 -> m3_22  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_111 -> m3_21  [key=2, style=dotted];
m3_111 -> m3_22  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_110 -> m3_25  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_114 -> m3_25  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_108 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_116  [key=2, style=dotted];
m3_112 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_116  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_117  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_118  [key=2, style=dotted];
m3_113 -> m3_119  [key=2, style=dotted];
m3_115 -> m3_106  [key=0, style=bold, color=blue];
m3_1457 -> m3_1458  [key=0, style=solid];
m3_1459 -> m3_21  [key=2, style=dotted];
m3_1459 -> m3_22  [key=2, style=dotted];
m3_1459 -> m3_1460  [key=0, style=solid];
m3_1459 -> m3_1461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1459 -> m3_1462  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1459 -> m3_1463  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1459 -> m3_1464  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1459 -> m3_1465  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1459 -> m3_1466  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1459 -> m3_1467  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1459 -> m3_1468  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1460 -> m3_23  [key=2, style=dotted];
m3_1460 -> m3_24  [key=2, style=dotted];
m3_1460 -> m3_1461  [key=0, style=solid];
m3_1462 -> m3_23  [key=2, style=dotted];
m3_1462 -> m3_24  [key=2, style=dotted];
m3_1462 -> m3_1463  [key=0, style=solid];
m3_1464 -> m3_23  [key=2, style=dotted];
m3_1464 -> m3_24  [key=2, style=dotted];
m3_1464 -> m3_1465  [key=0, style=solid];
m3_1467 -> m3_23  [key=2, style=dotted];
m3_1467 -> m3_24  [key=2, style=dotted];
m3_1467 -> m3_1468  [key=0, style=solid];
m3_1461 -> m3_25  [key=2, style=dotted];
m3_1461 -> m3_1462  [key=0, style=solid];
m3_1463 -> m3_25  [key=2, style=dotted];
m3_1463 -> m3_1464  [key=0, style=solid];
m3_1465 -> m3_25  [key=2, style=dotted];
m3_1465 -> m3_1466  [key=0, style=solid];
m3_1466 -> m3_25  [key=2, style=dotted];
m3_1466 -> m3_1467  [key=0, style=solid];
m3_1468 -> m3_25  [key=2, style=dotted];
m3_1468 -> m3_1469  [key=0, style=solid];
m3_1458 -> m3_1459  [key=0, style=solid];
m3_1458 -> m3_1458  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1469 -> m3_1457  [key=0, style=bold, color=blue];
m3_1513 -> m3_1514  [key=0, style=solid];
m3_1515 -> m3_21  [key=2, style=dotted];
m3_1515 -> m3_22  [key=2, style=dotted];
m3_1515 -> m3_1516  [key=0, style=solid];
m3_1515 -> m3_1517  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1520  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1515 -> m3_1525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1516 -> m3_23  [key=2, style=dotted];
m3_1516 -> m3_24  [key=2, style=dotted];
m3_1516 -> m3_1517  [key=0, style=solid];
m3_1518 -> m3_23  [key=2, style=dotted];
m3_1518 -> m3_24  [key=2, style=dotted];
m3_1518 -> m3_1519  [key=0, style=solid];
m3_1524 -> m3_23  [key=2, style=dotted];
m3_1524 -> m3_24  [key=2, style=dotted];
m3_1524 -> m3_1525  [key=0, style=solid];
m3_1517 -> m3_25  [key=2, style=dotted];
m3_1517 -> m3_1518  [key=0, style=solid];
m3_1519 -> m3_25  [key=2, style=dotted];
m3_1519 -> m3_1520  [key=0, style=solid];
m3_1521 -> m3_25  [key=2, style=dotted];
m3_1521 -> m3_1522  [key=0, style=solid];
m3_1522 -> m3_25  [key=2, style=dotted];
m3_1522 -> m3_1523  [key=0, style=solid];
m3_1523 -> m3_25  [key=2, style=dotted];
m3_1523 -> m3_1524  [key=0, style=solid];
m3_1523 -> m3_1484  [key=2, style=dotted];
m3_1523 -> m3_1485  [key=2, style=dotted];
m3_1523 -> m3_1486  [key=2, style=dotted];
m3_1525 -> m3_25  [key=2, style=dotted];
m3_1525 -> m3_1526  [key=0, style=solid];
m3_1514 -> m3_1515  [key=0, style=solid];
m3_1514 -> m3_1514  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1520 -> m3_1521  [key=0, style=solid];
m3_1520 -> m3_1386  [key=2, style=dotted];
m3_1526 -> m3_1513  [key=0, style=bold, color=blue];
m3_592 -> m3_593  [key=0, style=solid];
m3_593 -> m3_21  [key=2, style=dotted];
m3_593 -> m3_22  [key=2, style=dotted];
m3_593 -> m3_594  [key=0, style=solid];
m3_593 -> m3_597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_594 -> m3_595  [key=0, style=solid];
m3_594 -> m3_172  [key=2, style=dotted];
m3_594 -> m3_596  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_595 -> m3_592  [key=0, style=bold, color=blue];
m3_1787 -> m3_1788  [key=0, style=solid];
m3_1789 -> m3_21  [key=2, style=dotted];
m3_1789 -> m3_22  [key=2, style=dotted];
m3_1789 -> m3_1790  [key=0, style=solid];
m3_1789 -> m3_1793  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1788 -> m3_1789  [key=0, style=solid];
m3_1788 -> m3_1788  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1790 -> m3_1791  [key=0, style=solid];
m3_1790 -> m3_172  [key=2, style=dotted];
m3_1790 -> m3_1792  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1791 -> m3_1787  [key=0, style=bold, color=blue];
m3_2586 -> m3_2587  [key=0, style=solid];
m3_2588 -> m3_21  [key=2, style=dotted];
m3_2588 -> m3_22  [key=2, style=dotted];
m3_2588 -> m3_2589  [key=0, style=solid];
m3_2588 -> m3_2590  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2588 -> m3_2591  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2588 -> m3_2592  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2588 -> m3_2593  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2588 -> m3_2594  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2588 -> m3_2595  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2588 -> m3_2596  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2588 -> m3_2597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_21  [key=2, style=dotted];
m3_2598 -> m3_22  [key=2, style=dotted];
m3_2598 -> m3_2599  [key=0, style=solid];
m3_2598 -> m3_2600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_2601  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_2602  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_2603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_2604  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_2605  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_2606  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2598 -> m3_2607  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_21  [key=2, style=dotted];
m3_2608 -> m3_22  [key=2, style=dotted];
m3_2608 -> m3_2609  [key=0, style=solid];
m3_2608 -> m3_2610  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_2611  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_2612  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_2613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_2614  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_2615  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_2616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2608 -> m3_2617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_21  [key=2, style=dotted];
m3_2618 -> m3_22  [key=2, style=dotted];
m3_2618 -> m3_2619  [key=0, style=solid];
m3_2618 -> m3_2620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_2621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_2622  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_2623  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_2624  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_2625  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_2626  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2618 -> m3_2627  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_21  [key=2, style=dotted];
m3_2628 -> m3_22  [key=2, style=dotted];
m3_2628 -> m3_2629  [key=0, style=solid];
m3_2628 -> m3_2630  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_2631  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_2632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_2633  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_2634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_2635  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_2636  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2628 -> m3_2637  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2590 -> m3_23  [key=2, style=dotted];
m3_2590 -> m3_24  [key=2, style=dotted];
m3_2590 -> m3_2591  [key=0, style=solid];
m3_2591 -> m3_23  [key=2, style=dotted];
m3_2591 -> m3_24  [key=2, style=dotted];
m3_2591 -> m3_2592  [key=0, style=solid];
m3_2594 -> m3_23  [key=2, style=dotted];
m3_2594 -> m3_24  [key=2, style=dotted];
m3_2594 -> m3_2595  [key=0, style=solid];
m3_2597 -> m3_23  [key=2, style=dotted];
m3_2597 -> m3_24  [key=2, style=dotted];
m3_2597 -> m3_2598  [key=0, style=solid];
m3_2600 -> m3_23  [key=2, style=dotted];
m3_2600 -> m3_24  [key=2, style=dotted];
m3_2600 -> m3_2601  [key=0, style=solid];
m3_2601 -> m3_23  [key=2, style=dotted];
m3_2601 -> m3_24  [key=2, style=dotted];
m3_2601 -> m3_2602  [key=0, style=solid];
m3_2604 -> m3_23  [key=2, style=dotted];
m3_2604 -> m3_24  [key=2, style=dotted];
m3_2604 -> m3_2605  [key=0, style=solid];
m3_2607 -> m3_23  [key=2, style=dotted];
m3_2607 -> m3_24  [key=2, style=dotted];
m3_2607 -> m3_2608  [key=0, style=solid];
m3_2610 -> m3_23  [key=2, style=dotted];
m3_2610 -> m3_24  [key=2, style=dotted];
m3_2610 -> m3_2611  [key=0, style=solid];
m3_2611 -> m3_23  [key=2, style=dotted];
m3_2611 -> m3_24  [key=2, style=dotted];
m3_2611 -> m3_2612  [key=0, style=solid];
m3_2614 -> m3_23  [key=2, style=dotted];
m3_2614 -> m3_24  [key=2, style=dotted];
m3_2614 -> m3_2615  [key=0, style=solid];
m3_2617 -> m3_23  [key=2, style=dotted];
m3_2617 -> m3_24  [key=2, style=dotted];
m3_2617 -> m3_2618  [key=0, style=solid];
m3_2620 -> m3_23  [key=2, style=dotted];
m3_2620 -> m3_24  [key=2, style=dotted];
m3_2620 -> m3_2621  [key=0, style=solid];
m3_2627 -> m3_23  [key=2, style=dotted];
m3_2627 -> m3_24  [key=2, style=dotted];
m3_2627 -> m3_2628  [key=0, style=solid];
m3_2630 -> m3_23  [key=2, style=dotted];
m3_2630 -> m3_24  [key=2, style=dotted];
m3_2630 -> m3_2631  [key=0, style=solid];
m3_2637 -> m3_23  [key=2, style=dotted];
m3_2637 -> m3_24  [key=2, style=dotted];
m3_2637 -> m3_2638  [key=0, style=solid];
m3_2592 -> m3_25  [key=2, style=dotted];
m3_2592 -> m3_2593  [key=0, style=solid];
m3_2592 -> m3_2639  [key=2, style=dotted];
m3_2593 -> m3_25  [key=2, style=dotted];
m3_2593 -> m3_2594  [key=0, style=solid];
m3_2595 -> m3_25  [key=2, style=dotted];
m3_2595 -> m3_2596  [key=0, style=solid];
m3_2595 -> m3_2639  [key=2, style=dotted];
m3_2596 -> m3_25  [key=2, style=dotted];
m3_2596 -> m3_2597  [key=0, style=solid];
m3_2602 -> m3_25  [key=2, style=dotted];
m3_2602 -> m3_2603  [key=0, style=solid];
m3_2602 -> m3_2640  [key=2, style=dotted];
m3_2603 -> m3_25  [key=2, style=dotted];
m3_2603 -> m3_2604  [key=0, style=solid];
m3_2605 -> m3_25  [key=2, style=dotted];
m3_2605 -> m3_2606  [key=0, style=solid];
m3_2605 -> m3_2640  [key=2, style=dotted];
m3_2606 -> m3_25  [key=2, style=dotted];
m3_2606 -> m3_2607  [key=0, style=solid];
m3_2612 -> m3_25  [key=2, style=dotted];
m3_2612 -> m3_2613  [key=0, style=solid];
m3_2613 -> m3_25  [key=2, style=dotted];
m3_2613 -> m3_2614  [key=0, style=solid];
m3_2615 -> m3_25  [key=2, style=dotted];
m3_2615 -> m3_2616  [key=0, style=solid];
m3_2616 -> m3_25  [key=2, style=dotted];
m3_2616 -> m3_2617  [key=0, style=solid];
m3_2622 -> m3_25  [key=2, style=dotted];
m3_2622 -> m3_2623  [key=0, style=solid];
m3_2622 -> m3_2640  [key=2, style=dotted];
m3_2623 -> m3_25  [key=2, style=dotted];
m3_2623 -> m3_2624  [key=0, style=solid];
m3_2625 -> m3_25  [key=2, style=dotted];
m3_2625 -> m3_2626  [key=0, style=solid];
m3_2625 -> m3_2640  [key=2, style=dotted];
m3_2626 -> m3_25  [key=2, style=dotted];
m3_2626 -> m3_2627  [key=0, style=solid];
m3_2632 -> m3_25  [key=2, style=dotted];
m3_2632 -> m3_2633  [key=0, style=solid];
m3_2632 -> m3_2639  [key=2, style=dotted];
m3_2633 -> m3_25  [key=2, style=dotted];
m3_2633 -> m3_2634  [key=0, style=solid];
m3_2635 -> m3_25  [key=2, style=dotted];
m3_2635 -> m3_2636  [key=0, style=solid];
m3_2635 -> m3_2639  [key=2, style=dotted];
m3_2636 -> m3_25  [key=2, style=dotted];
m3_2636 -> m3_2637  [key=0, style=solid];
m3_2587 -> m3_2588  [key=0, style=solid];
m3_2587 -> m3_2598  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2587 -> m3_2608  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2587 -> m3_2618  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2587 -> m3_2628  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2587 -> m3_2587  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2589 -> m3_2590  [key=0, style=solid];
m3_2599 -> m3_2600  [key=0, style=solid];
m3_2609 -> m3_2610  [key=0, style=solid];
m3_2619 -> m3_2620  [key=0, style=solid];
m3_2621 -> m3_2622  [key=0, style=solid];
m3_2621 -> m3_1386  [key=2, style=dotted];
m3_2624 -> m3_2625  [key=0, style=solid];
m3_2624 -> m3_1386  [key=2, style=dotted];
m3_2629 -> m3_2630  [key=0, style=solid];
m3_2631 -> m3_2632  [key=0, style=solid];
m3_2631 -> m3_1968  [key=2, style=dotted];
m3_2634 -> m3_2635  [key=0, style=solid];
m3_2634 -> m3_1968  [key=2, style=dotted];
m3_2638 -> m3_2586  [key=0, style=bold, color=blue];
m3_2062 -> m3_2063  [key=0, style=solid];
m3_2064 -> m3_21  [key=2, style=dotted];
m3_2064 -> m3_2065  [key=0, style=solid];
m3_2064 -> m3_358  [key=2, style=dotted];
m3_2064 -> m3_396  [key=2, style=dotted];
m3_2064 -> m3_397  [key=2, style=dotted];
m3_2064 -> m3_2066  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2067  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2069  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2070  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2071  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2072  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2073  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2074  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2075  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2076  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2077  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2078  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2079  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2080  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2081  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2082  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2083  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2084  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2085  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2086  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2087  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2088  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2089  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2090  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2091  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2064 -> m3_2092  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2065 -> m3_23  [key=2, style=dotted];
m3_2065 -> m3_24  [key=2, style=dotted];
m3_2065 -> m3_2066  [key=0, style=solid];
m3_2067 -> m3_23  [key=2, style=dotted];
m3_2067 -> m3_24  [key=2, style=dotted];
m3_2067 -> m3_2068  [key=0, style=solid];
m3_2087 -> m3_23  [key=2, style=dotted];
m3_2087 -> m3_24  [key=2, style=dotted];
m3_2087 -> m3_2088  [key=0, style=solid];
m3_2089 -> m3_23  [key=2, style=dotted];
m3_2089 -> m3_24  [key=2, style=dotted];
m3_2089 -> m3_2090  [key=0, style=solid];
m3_2066 -> m3_25  [key=2, style=dotted];
m3_2066 -> m3_2067  [key=0, style=solid];
m3_2068 -> m3_25  [key=2, style=dotted];
m3_2068 -> m3_2069  [key=0, style=solid];
m3_2069 -> m3_25  [key=2, style=dotted];
m3_2069 -> m3_2070  [key=0, style=solid];
m3_2069 -> m3_176  [key=2, style=dotted];
m3_2070 -> m3_25  [key=2, style=dotted];
m3_2070 -> m3_2071  [key=0, style=solid];
m3_2071 -> m3_25  [key=2, style=dotted];
m3_2071 -> m3_2072  [key=0, style=solid];
m3_2071 -> m3_176  [key=2, style=dotted];
m3_2072 -> m3_25  [key=2, style=dotted];
m3_2072 -> m3_2073  [key=0, style=solid];
m3_2073 -> m3_25  [key=2, style=dotted];
m3_2073 -> m3_26  [key=2, style=dotted];
m3_2073 -> m3_2074  [key=0, style=solid];
m3_2074 -> m3_25  [key=2, style=dotted];
m3_2074 -> m3_2075  [key=0, style=solid];
m3_2075 -> m3_25  [key=2, style=dotted];
m3_2075 -> m3_26  [key=2, style=dotted];
m3_2075 -> m3_2076  [key=0, style=solid];
m3_2076 -> m3_25  [key=2, style=dotted];
m3_2076 -> m3_2077  [key=0, style=solid];
m3_2077 -> m3_25  [key=2, style=dotted];
m3_2077 -> m3_26  [key=2, style=dotted];
m3_2077 -> m3_2078  [key=0, style=solid];
m3_2078 -> m3_25  [key=2, style=dotted];
m3_2078 -> m3_2079  [key=0, style=solid];
m3_2079 -> m3_25  [key=2, style=dotted];
m3_2079 -> m3_2080  [key=0, style=solid];
m3_2079 -> m3_176  [key=2, style=dotted];
m3_2080 -> m3_25  [key=2, style=dotted];
m3_2080 -> m3_2081  [key=0, style=solid];
m3_2081 -> m3_25  [key=2, style=dotted];
m3_2081 -> m3_2082  [key=0, style=solid];
m3_2081 -> m3_244  [key=2, style=dotted];
m3_2082 -> m3_25  [key=2, style=dotted];
m3_2082 -> m3_2083  [key=0, style=solid];
m3_2083 -> m3_25  [key=2, style=dotted];
m3_2083 -> m3_2084  [key=0, style=solid];
m3_2083 -> m3_244  [key=2, style=dotted];
m3_2084 -> m3_25  [key=2, style=dotted];
m3_2084 -> m3_2085  [key=0, style=solid];
m3_2086 -> m3_25  [key=2, style=dotted];
m3_2086 -> m3_2087  [key=0, style=solid];
m3_2088 -> m3_25  [key=2, style=dotted];
m3_2088 -> m3_2089  [key=0, style=solid];
m3_2090 -> m3_25  [key=2, style=dotted];
m3_2090 -> m3_2091  [key=0, style=solid];
m3_2091 -> m3_25  [key=2, style=dotted];
m3_2091 -> m3_2092  [key=0, style=solid];
m3_2091 -> m3_176  [key=2, style=dotted];
m3_2092 -> m3_25  [key=2, style=dotted];
m3_2092 -> m3_2093  [key=0, style=solid];
m3_2063 -> m3_2064  [key=0, style=solid];
m3_2063 -> m3_2063  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2085 -> m3_2086  [key=0, style=solid];
m3_2085 -> m3_116  [key=2, style=dotted];
m3_2085 -> m3_953  [key=2, style=dotted];
m3_2093 -> m3_2062  [key=0, style=bold, color=blue];
m3_1381 -> m3_1382  [key=0, style=solid];
m3_1382 -> m3_21  [key=2, style=dotted];
m3_1382 -> m3_22  [key=2, style=dotted];
m3_1382 -> m3_1383  [key=0, style=solid];
m3_1382 -> m3_1384  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1384 -> m3_25  [key=2, style=dotted];
m3_1384 -> m3_1385  [key=0, style=solid];
m3_1383 -> m3_1384  [key=0, style=solid];
m3_1383 -> m3_1386  [key=2, style=dotted];
m3_1383 -> m3_871  [key=2, style=dotted];
m3_1385 -> m3_1381  [key=0, style=bold, color=blue];
m3_335 -> m3_336  [key=0, style=solid];
m3_336 -> m3_25  [key=2, style=dotted];
m3_336 -> m3_337  [key=0, style=solid];
m3_336 -> m3_349  [key=2, style=dotted];
m3_337 -> m3_25  [key=2, style=dotted];
m3_337 -> m3_338  [key=0, style=solid];
m3_337 -> m3_349  [key=2, style=dotted];
m3_338 -> m3_25  [key=2, style=dotted];
m3_338 -> m3_339  [key=0, style=solid];
m3_338 -> m3_349  [key=2, style=dotted];
m3_339 -> m3_25  [key=2, style=dotted];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_349  [key=2, style=dotted];
m3_340 -> m3_25  [key=2, style=dotted];
m3_340 -> m3_341  [key=0, style=solid];
m3_340 -> m3_349  [key=2, style=dotted];
m3_341 -> m3_25  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_349  [key=2, style=dotted];
m3_342 -> m3_25  [key=2, style=dotted];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_349  [key=2, style=dotted];
m3_343 -> m3_25  [key=2, style=dotted];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_349  [key=2, style=dotted];
m3_344 -> m3_25  [key=2, style=dotted];
m3_344 -> m3_345  [key=0, style=solid];
m3_344 -> m3_349  [key=2, style=dotted];
m3_345 -> m3_25  [key=2, style=dotted];
m3_345 -> m3_346  [key=0, style=solid];
m3_345 -> m3_349  [key=2, style=dotted];
m3_346 -> m3_25  [key=2, style=dotted];
m3_346 -> m3_347  [key=0, style=solid];
m3_346 -> m3_349  [key=2, style=dotted];
m3_347 -> m3_25  [key=2, style=dotted];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_349  [key=2, style=dotted];
m3_348 -> m3_335  [key=0, style=bold, color=blue];
m3_2271 -> m3_2272  [key=0, style=solid];
m3_2273 -> m3_21  [key=2, style=dotted];
m3_2273 -> m3_22  [key=2, style=dotted];
m3_2273 -> m3_2274  [key=0, style=solid];
m3_2273 -> m3_2275  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2276  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2278  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2279  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2280  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2281  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2282  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2283  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2284  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2273 -> m3_2285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2274 -> m3_23  [key=2, style=dotted];
m3_2274 -> m3_2275  [key=0, style=solid];
m3_2276 -> m3_23  [key=2, style=dotted];
m3_2276 -> m3_2277  [key=0, style=solid];
m3_2278 -> m3_23  [key=2, style=dotted];
m3_2278 -> m3_2279  [key=0, style=solid];
m3_2280 -> m3_23  [key=2, style=dotted];
m3_2280 -> m3_2281  [key=0, style=solid];
m3_2282 -> m3_23  [key=2, style=dotted];
m3_2282 -> m3_2283  [key=0, style=solid];
m3_2284 -> m3_23  [key=2, style=dotted];
m3_2284 -> m3_2285  [key=0, style=solid];
m3_2275 -> m3_25  [key=2, style=dotted];
m3_2275 -> m3_2276  [key=0, style=solid];
m3_2277 -> m3_25  [key=2, style=dotted];
m3_2277 -> m3_2278  [key=0, style=solid];
m3_2279 -> m3_25  [key=2, style=dotted];
m3_2279 -> m3_2280  [key=0, style=solid];
m3_2281 -> m3_25  [key=2, style=dotted];
m3_2281 -> m3_2282  [key=0, style=solid];
m3_2283 -> m3_25  [key=2, style=dotted];
m3_2283 -> m3_2284  [key=0, style=solid];
m3_2285 -> m3_25  [key=2, style=dotted];
m3_2285 -> m3_2286  [key=0, style=solid];
m3_2272 -> m3_2273  [key=0, style=solid];
m3_2272 -> m3_2272  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2286 -> m3_2271  [key=0, style=bold, color=blue];
m3_264 -> m3_265  [key=0, style=solid];
m3_266 -> m3_21  [key=2, style=dotted];
m3_266 -> m3_22  [key=2, style=dotted];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_268  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_270  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_271  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_273  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_274  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_275  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_278  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_279  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_280  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_281  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_282  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_283  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_284  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_286  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_266 -> m3_287  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_268 -> m3_23  [key=2, style=dotted];
m3_268 -> m3_24  [key=2, style=dotted];
m3_268 -> m3_269  [key=0, style=solid];
m3_270 -> m3_23  [key=2, style=dotted];
m3_270 -> m3_24  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_274 -> m3_23  [key=2, style=dotted];
m3_274 -> m3_24  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_278 -> m3_23  [key=2, style=dotted];
m3_278 -> m3_24  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_282 -> m3_23  [key=2, style=dotted];
m3_282 -> m3_24  [key=2, style=dotted];
m3_282 -> m3_283  [key=0, style=solid];
m3_286 -> m3_23  [key=2, style=dotted];
m3_286 -> m3_24  [key=2, style=dotted];
m3_286 -> m3_287  [key=0, style=solid];
m3_269 -> m3_25  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_271 -> m3_25  [key=2, style=dotted];
m3_271 -> m3_272  [key=0, style=solid];
m3_272 -> m3_25  [key=2, style=dotted];
m3_272 -> m3_273  [key=0, style=solid];
m3_273 -> m3_25  [key=2, style=dotted];
m3_273 -> m3_274  [key=0, style=solid];
m3_275 -> m3_25  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_276 -> m3_25  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_277 -> m3_25  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_279 -> m3_25  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_280 -> m3_25  [key=2, style=dotted];
m3_280 -> m3_281  [key=0, style=solid];
m3_281 -> m3_25  [key=2, style=dotted];
m3_281 -> m3_282  [key=0, style=solid];
m3_283 -> m3_25  [key=2, style=dotted];
m3_283 -> m3_284  [key=0, style=solid];
m3_283 -> m3_289  [key=2, style=dotted];
m3_284 -> m3_25  [key=2, style=dotted];
m3_284 -> m3_285  [key=0, style=solid];
m3_285 -> m3_25  [key=2, style=dotted];
m3_285 -> m3_286  [key=0, style=solid];
m3_287 -> m3_25  [key=2, style=dotted];
m3_287 -> m3_288  [key=0, style=solid];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_265  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_267 -> m3_268  [key=0, style=solid];
m3_288 -> m3_264  [key=0, style=bold, color=blue];
m3_1421 -> m3_1422  [key=0, style=solid];
m3_1422 -> m3_21  [key=2, style=dotted];
m3_1422 -> m3_22  [key=2, style=dotted];
m3_1422 -> m3_1423  [key=0, style=solid];
m3_1424 -> m3_25  [key=2, style=dotted];
m3_1424 -> m3_1425  [key=0, style=solid];
m3_1425 -> m3_25  [key=2, style=dotted];
m3_1425 -> m3_1426  [key=0, style=solid];
m3_1426 -> m3_25  [key=2, style=dotted];
m3_1426 -> m3_1427  [key=0, style=solid];
m3_1423 -> m3_1424  [key=0, style=solid];
m3_1423 -> m3_1425  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_1423 -> m3_1426  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_1423 -> m3_116  [key=2, style=dotted];
m3_1427 -> m3_1421  [key=0, style=bold, color=blue];
m3_2019 -> m3_2020  [key=0, style=solid];
m3_2020 -> m3_21  [key=2, style=dotted];
m3_2020 -> m3_22  [key=2, style=dotted];
m3_2020 -> m3_2021  [key=0, style=solid];
m3_2020 -> m3_2022  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2020 -> m3_2029  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2020 -> m3_2023  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2020 -> m3_2032  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2020 -> m3_2024  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2020 -> m3_2035  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2020 -> m3_2025  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2020 -> m3_2026  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2021 -> m3_23  [key=2, style=dotted];
m3_2021 -> m3_2022  [key=0, style=solid];
m3_2026 -> m3_23  [key=2, style=dotted];
m3_2026 -> m3_24  [key=2, style=dotted];
m3_2026 -> m3_2027  [key=0, style=solid];
m3_2025 -> m3_25  [key=2, style=dotted];
m3_2025 -> m3_2026  [key=0, style=solid];
m3_2025 -> m3_176  [key=2, style=dotted];
m3_2022 -> m3_2023  [key=0, style=solid];
m3_2022 -> m3_172  [key=2, style=dotted];
m3_2022 -> m3_2028  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2023 -> m3_2024  [key=0, style=solid];
m3_2023 -> m3_172  [key=2, style=dotted];
m3_2023 -> m3_2031  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2024 -> m3_2025  [key=0, style=solid];
m3_2024 -> m3_172  [key=2, style=dotted];
m3_2024 -> m3_2034  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2027 -> m3_2019  [key=0, style=bold, color=blue];
m3_1976 -> m3_1977  [key=0, style=solid];
m3_1977 -> m3_21  [key=2, style=dotted];
m3_1977 -> m3_22  [key=2, style=dotted];
m3_1977 -> m3_1978  [key=0, style=solid];
m3_1977 -> m3_1979  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1977 -> m3_1980  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1977 -> m3_1985  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1977 -> m3_1981  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1977 -> m3_1982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1978 -> m3_23  [key=2, style=dotted];
m3_1978 -> m3_1979  [key=0, style=solid];
m3_1982 -> m3_23  [key=2, style=dotted];
m3_1982 -> m3_24  [key=2, style=dotted];
m3_1982 -> m3_1983  [key=0, style=solid];
m3_1981 -> m3_25  [key=2, style=dotted];
m3_1981 -> m3_1982  [key=0, style=solid];
m3_1981 -> m3_176  [key=2, style=dotted];
m3_1979 -> m3_1980  [key=0, style=solid];
m3_1979 -> m3_176  [key=2, style=dotted];
m3_1980 -> m3_1981  [key=0, style=solid];
m3_1980 -> m3_172  [key=2, style=dotted];
m3_1980 -> m3_1984  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1983 -> m3_1976  [key=0, style=bold, color=blue];
m3_1710 -> m3_1711  [key=0, style=solid];
m3_1712 -> m3_21  [key=2, style=dotted];
m3_1712 -> m3_22  [key=2, style=dotted];
m3_1712 -> m3_1713  [key=0, style=solid];
m3_1712 -> m3_1714  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1712 -> m3_1715  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1712 -> m3_1716  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1712 -> m3_1717  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1713 -> m3_23  [key=2, style=dotted];
m3_1713 -> m3_24  [key=2, style=dotted];
m3_1713 -> m3_1714  [key=0, style=solid];
m3_1716 -> m3_23  [key=2, style=dotted];
m3_1716 -> m3_24  [key=2, style=dotted];
m3_1716 -> m3_1717  [key=0, style=solid];
m3_1714 -> m3_25  [key=2, style=dotted];
m3_1714 -> m3_1715  [key=0, style=solid];
m3_1715 -> m3_25  [key=2, style=dotted];
m3_1715 -> m3_1716  [key=0, style=solid];
m3_1717 -> m3_25  [key=2, style=dotted];
m3_1717 -> m3_1718  [key=0, style=solid];
m3_1711 -> m3_1712  [key=0, style=solid];
m3_1711 -> m3_1711  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1718 -> m3_1710  [key=0, style=bold, color=blue];
m3_1296 -> m3_1297  [key=0, style=solid];
m3_1298 -> m3_21  [key=2, style=dotted];
m3_1298 -> m3_1299  [key=0, style=solid];
m3_1298 -> m3_1300  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1301  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1302  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1303  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1304  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1305  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1306  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1307  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1308  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1309  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1310  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1311  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1298 -> m3_1312  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_1297 -> m3_22  [key=2, style=dotted];
m3_1297 -> m3_1298  [key=0, style=solid];
m3_1299 -> m3_23  [key=2, style=dotted];
m3_1299 -> m3_24  [key=2, style=dotted];
m3_1299 -> m3_1300  [key=0, style=solid];
m3_1301 -> m3_23  [key=2, style=dotted];
m3_1301 -> m3_24  [key=2, style=dotted];
m3_1301 -> m3_1302  [key=0, style=solid];
m3_1304 -> m3_23  [key=2, style=dotted];
m3_1304 -> m3_24  [key=2, style=dotted];
m3_1304 -> m3_1305  [key=0, style=solid];
m3_1307 -> m3_23  [key=2, style=dotted];
m3_1307 -> m3_24  [key=2, style=dotted];
m3_1307 -> m3_1308  [key=0, style=solid];
m3_1310 -> m3_23  [key=2, style=dotted];
m3_1310 -> m3_24  [key=2, style=dotted];
m3_1310 -> m3_1311  [key=0, style=solid];
m3_1312 -> m3_23  [key=2, style=dotted];
m3_1312 -> m3_1313  [key=0, style=solid];
m3_1312 -> m3_158  [key=2, style=dotted];
m3_1300 -> m3_25  [key=2, style=dotted];
m3_1300 -> m3_1301  [key=0, style=solid];
m3_1302 -> m3_25  [key=2, style=dotted];
m3_1302 -> m3_1303  [key=0, style=solid];
m3_1303 -> m3_25  [key=2, style=dotted];
m3_1303 -> m3_1304  [key=0, style=solid];
m3_1305 -> m3_25  [key=2, style=dotted];
m3_1305 -> m3_1306  [key=0, style=solid];
m3_1306 -> m3_25  [key=2, style=dotted];
m3_1306 -> m3_1307  [key=0, style=solid];
m3_1308 -> m3_25  [key=2, style=dotted];
m3_1308 -> m3_1309  [key=0, style=solid];
m3_1309 -> m3_25  [key=2, style=dotted];
m3_1309 -> m3_1310  [key=0, style=solid];
m3_1311 -> m3_25  [key=2, style=dotted];
m3_1311 -> m3_1312  [key=0, style=solid];
m3_1313 -> m3_1296  [key=0, style=bold, color=blue];
m3_954 -> m3_955  [key=0, style=solid];
m3_957 -> m3_21  [key=2, style=dotted];
m3_957 -> m3_22  [key=2, style=dotted];
m3_957 -> m3_958  [key=0, style=solid];
m3_957 -> m3_861  [key=2, style=dotted];
m3_957 -> m3_959  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_960  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_961  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_962  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_963  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_964  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_966  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_967  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_968  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_957 -> m3_969  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_958 -> m3_24  [key=2, style=dotted];
m3_958 -> m3_959  [key=0, style=solid];
m3_958 -> m3_378  [key=2, style=dotted];
m3_960 -> m3_24  [key=2, style=dotted];
m3_960 -> m3_961  [key=0, style=solid];
m3_960 -> m3_378  [key=2, style=dotted];
m3_961 -> m3_24  [key=2, style=dotted];
m3_961 -> m3_962  [key=0, style=solid];
m3_961 -> m3_378  [key=2, style=dotted];
m3_963 -> m3_24  [key=2, style=dotted];
m3_963 -> m3_964  [key=0, style=solid];
m3_963 -> m3_378  [key=2, style=dotted];
m3_967 -> m3_24  [key=2, style=dotted];
m3_967 -> m3_968  [key=0, style=solid];
m3_967 -> m3_378  [key=2, style=dotted];
m3_959 -> m3_25  [key=2, style=dotted];
m3_959 -> m3_960  [key=0, style=solid];
m3_962 -> m3_25  [key=2, style=dotted];
m3_962 -> m3_963  [key=0, style=solid];
m3_966 -> m3_25  [key=2, style=dotted];
m3_966 -> m3_967  [key=0, style=solid];
m3_968 -> m3_25  [key=2, style=dotted];
m3_968 -> m3_969  [key=0, style=solid];
m3_956 -> m3_957  [key=0, style=solid];
m3_956 -> m3_357  [key=2, style=dotted];
m3_956 -> m3_965  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m3_964 -> m3_965  [key=0, style=solid];
m3_964 -> m3_846  [key=2, style=dotted];
m3_969 -> m3_970  [key=0, style=solid];
m3_969 -> m3_378  [key=2, style=dotted];
m3_969 -> m3_158  [key=2, style=dotted];
m3_965 -> m3_966  [key=0, style=solid];
m3_965 -> m3_953  [key=2, style=dotted];
m3_955 -> m3_956  [key=0, style=solid];
m3_955 -> m3_856  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m3_970 -> m3_954  [key=0, style=bold, color=blue];
m3_743 -> m3_744  [key=0, style=solid];
m3_745 -> m3_21  [key=2, style=dotted];
m3_745 -> m3_746  [key=0, style=solid];
m3_745 -> m3_741  [key=2, style=dotted];
m3_745 -> m3_742  [key=2, style=dotted];
m3_745 -> m3_747  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_751 -> m3_21  [key=2, style=dotted];
m3_751 -> m3_752  [key=0, style=solid];
m3_751 -> m3_741  [key=2, style=dotted];
m3_751 -> m3_742  [key=2, style=dotted];
m3_751 -> m3_753  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_746 -> m3_23  [key=2, style=dotted];
m3_746 -> m3_747  [key=0, style=solid];
m3_752 -> m3_23  [key=2, style=dotted];
m3_752 -> m3_753  [key=0, style=solid];
m3_747 -> m3_25  [key=2, style=dotted];
m3_747 -> m3_748  [key=0, style=solid];
m3_753 -> m3_25  [key=2, style=dotted];
m3_753 -> m3_754  [key=0, style=solid];
m3_744 -> m3_745  [key=0, style=solid];
m3_744 -> m3_740  [key=2, style=dotted];
m3_744 -> m3_750  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_750 -> m3_751  [key=0, style=solid];
m3_748 -> m3_750  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_748 -> m3_700  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m3_748 -> m3_749  [key=0, style=solid];
m3_748 -> m3_754  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_754 -> m3_754  [key=1, style=dashed, color=darkseagreen4, label=j];
m3_754 -> m3_749  [key=0, style=solid];
m3_749 -> m3_750  [key=0, style=solid];
m3_749 -> m3_755  [key=0, style=solid];
m3_755 -> m3_743  [key=0, style=bold, color=blue];
m3_1369 -> m3_1370  [key=0, style=solid];
m3_1370 -> m3_21  [key=2, style=dotted];
m3_1370 -> m3_22  [key=2, style=dotted];
m3_1370 -> m3_1371  [key=0, style=solid];
m3_1370 -> m3_1372  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1372 -> m3_25  [key=2, style=dotted];
m3_1372 -> m3_1373  [key=0, style=solid];
m3_1371 -> m3_1372  [key=0, style=solid];
m3_1371 -> m3_116  [key=2, style=dotted];
m3_1371 -> m3_871  [key=2, style=dotted];
m3_1373 -> m3_1369  [key=0, style=bold, color=blue];
m3_2337 -> m3_2338  [key=0, style=solid];
m3_2339 -> m3_21  [key=2, style=dotted];
m3_2339 -> m3_22  [key=2, style=dotted];
m3_2339 -> m3_2340  [key=0, style=solid];
m3_2339 -> m3_2343  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2338 -> m3_2339  [key=0, style=solid];
m3_2338 -> m3_2338  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2340 -> m3_2341  [key=0, style=solid];
m3_2340 -> m3_172  [key=2, style=dotted];
m3_2340 -> m3_2342  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2341 -> m3_2337  [key=0, style=bold, color=blue];
m3_1890 -> m3_1891  [key=0, style=solid];
m3_1891 -> m3_21  [key=2, style=dotted];
m3_1891 -> m3_22  [key=2, style=dotted];
m3_1891 -> m3_1892  [key=0, style=solid];
m3_1891 -> m3_1893  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1891 -> m3_1894  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1891 -> m3_1900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1891 -> m3_1895  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1891 -> m3_1896  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1891 -> m3_1897  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1892 -> m3_23  [key=2, style=dotted];
m3_1892 -> m3_24  [key=2, style=dotted];
m3_1892 -> m3_1893  [key=0, style=solid];
m3_1893 -> m3_23  [key=2, style=dotted];
m3_1893 -> m3_24  [key=2, style=dotted];
m3_1893 -> m3_1894  [key=0, style=solid];
m3_1895 -> m3_23  [key=2, style=dotted];
m3_1895 -> m3_24  [key=2, style=dotted];
m3_1895 -> m3_1896  [key=0, style=solid];
m3_1896 -> m3_23  [key=2, style=dotted];
m3_1896 -> m3_24  [key=2, style=dotted];
m3_1896 -> m3_1897  [key=0, style=solid];
m3_1897 -> m3_23  [key=2, style=dotted];
m3_1897 -> m3_1898  [key=0, style=solid];
m3_1897 -> m3_158  [key=2, style=dotted];
m3_1894 -> m3_1895  [key=0, style=solid];
m3_1894 -> m3_172  [key=2, style=dotted];
m3_1894 -> m3_1899  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1898 -> m3_1890  [key=0, style=bold, color=blue];
m3_2399 -> m3_2400  [key=0, style=solid];
m3_2401 -> m3_21  [key=2, style=dotted];
m3_2401 -> m3_22  [key=2, style=dotted];
m3_2401 -> m3_2402  [key=0, style=solid];
m3_2401 -> m3_2405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2400 -> m3_2401  [key=0, style=solid];
m3_2400 -> m3_2368  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2402 -> m3_2403  [key=0, style=solid];
m3_2402 -> m3_172  [key=2, style=dotted];
m3_2402 -> m3_2404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2403 -> m3_2399  [key=0, style=bold, color=blue];
m3_1719 -> m3_1720  [key=0, style=solid];
m3_1721 -> m3_21  [key=2, style=dotted];
m3_1721 -> m3_22  [key=2, style=dotted];
m3_1721 -> m3_1722  [key=0, style=solid];
m3_1721 -> m3_1723  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1724  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1725  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1726  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1727  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1728  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1729  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1730  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1731  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1732  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1733  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1734  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1721 -> m3_1735  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1722 -> m3_23  [key=2, style=dotted];
m3_1722 -> m3_24  [key=2, style=dotted];
m3_1722 -> m3_1723  [key=0, style=solid];
m3_1724 -> m3_23  [key=2, style=dotted];
m3_1724 -> m3_24  [key=2, style=dotted];
m3_1724 -> m3_1725  [key=0, style=solid];
m3_1726 -> m3_23  [key=2, style=dotted];
m3_1726 -> m3_24  [key=2, style=dotted];
m3_1726 -> m3_1727  [key=0, style=solid];
m3_1728 -> m3_23  [key=2, style=dotted];
m3_1728 -> m3_24  [key=2, style=dotted];
m3_1728 -> m3_1729  [key=0, style=solid];
m3_1730 -> m3_23  [key=2, style=dotted];
m3_1730 -> m3_24  [key=2, style=dotted];
m3_1730 -> m3_1731  [key=0, style=solid];
m3_1732 -> m3_23  [key=2, style=dotted];
m3_1732 -> m3_24  [key=2, style=dotted];
m3_1732 -> m3_1733  [key=0, style=solid];
m3_1734 -> m3_23  [key=2, style=dotted];
m3_1734 -> m3_24  [key=2, style=dotted];
m3_1734 -> m3_1735  [key=0, style=solid];
m3_1723 -> m3_25  [key=2, style=dotted];
m3_1723 -> m3_1724  [key=0, style=solid];
m3_1725 -> m3_25  [key=2, style=dotted];
m3_1725 -> m3_1726  [key=0, style=solid];
m3_1727 -> m3_25  [key=2, style=dotted];
m3_1727 -> m3_1728  [key=0, style=solid];
m3_1729 -> m3_25  [key=2, style=dotted];
m3_1729 -> m3_1730  [key=0, style=solid];
m3_1731 -> m3_25  [key=2, style=dotted];
m3_1731 -> m3_1732  [key=0, style=solid];
m3_1733 -> m3_25  [key=2, style=dotted];
m3_1733 -> m3_1734  [key=0, style=solid];
m3_1735 -> m3_25  [key=2, style=dotted];
m3_1735 -> m3_1736  [key=0, style=solid];
m3_1720 -> m3_1721  [key=0, style=solid];
m3_1720 -> m3_1720  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1736 -> m3_1719  [key=0, style=bold, color=blue];
m3_2008 -> m3_2009  [key=0, style=solid];
m3_2009 -> m3_21  [key=2, style=dotted];
m3_2009 -> m3_22  [key=2, style=dotted];
m3_2009 -> m3_2010  [key=0, style=solid];
m3_2009 -> m3_2011  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2009 -> m3_2012  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2009 -> m3_2017  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2009 -> m3_2013  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2009 -> m3_2014  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2010 -> m3_23  [key=2, style=dotted];
m3_2010 -> m3_2011  [key=0, style=solid];
m3_2014 -> m3_23  [key=2, style=dotted];
m3_2014 -> m3_24  [key=2, style=dotted];
m3_2014 -> m3_2015  [key=0, style=solid];
m3_2013 -> m3_25  [key=2, style=dotted];
m3_2013 -> m3_26  [key=2, style=dotted];
m3_2013 -> m3_2014  [key=0, style=solid];
m3_2011 -> m3_2012  [key=0, style=solid];
m3_2011 -> m3_176  [key=2, style=dotted];
m3_2012 -> m3_2013  [key=0, style=solid];
m3_2012 -> m3_172  [key=2, style=dotted];
m3_2012 -> m3_2016  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2015 -> m3_2008  [key=0, style=bold, color=blue];
m3_2249 -> m3_2250  [key=0, style=solid];
m3_2251 -> m3_21  [key=2, style=dotted];
m3_2251 -> m3_2252  [key=0, style=solid];
m3_2251 -> m3_358  [key=2, style=dotted];
m3_2251 -> m3_396  [key=2, style=dotted];
m3_2251 -> m3_397  [key=2, style=dotted];
m3_2251 -> m3_2255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2250 -> m3_2251  [key=0, style=solid];
m3_2250 -> m3_2250  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2252 -> m3_2253  [key=0, style=solid];
m3_2252 -> m3_172  [key=2, style=dotted];
m3_2252 -> m3_2254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2253 -> m3_2249  [key=0, style=bold, color=blue];
m3_1842 -> m3_1843  [key=0, style=solid];
m3_1843 -> m3_21  [key=2, style=dotted];
m3_1843 -> m3_22  [key=2, style=dotted];
m3_1843 -> m3_1844  [key=0, style=solid];
m3_1844 -> m3_25  [key=2, style=dotted];
m3_1844 -> m3_1845  [key=0, style=solid];
m3_1844 -> m3_1846  [key=2, style=dotted];
m3_1845 -> m3_1842  [key=0, style=bold, color=blue];
m3_2407 -> m3_2408  [key=0, style=solid];
m3_2409 -> m3_21  [key=2, style=dotted];
m3_2409 -> m3_22  [key=2, style=dotted];
m3_2409 -> m3_2410  [key=0, style=solid];
m3_2409 -> m3_2413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2408 -> m3_2409  [key=0, style=solid];
m3_2408 -> m3_2368  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2410 -> m3_2411  [key=0, style=solid];
m3_2410 -> m3_172  [key=2, style=dotted];
m3_2410 -> m3_2412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2411 -> m3_2407  [key=0, style=bold, color=blue];
m3_2133 -> m3_2134  [key=0, style=solid];
m3_2135 -> m3_21  [key=2, style=dotted];
m3_2135 -> m3_2136  [key=0, style=solid];
m3_2135 -> m3_358  [key=2, style=dotted];
m3_2135 -> m3_396  [key=2, style=dotted];
m3_2135 -> m3_397  [key=2, style=dotted];
m3_2135 -> m3_2137  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2138  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2143  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2144  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2145  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2146  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2147  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2148  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2149  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2150  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2152  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2153  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2154  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2155  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2156  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2157  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2158  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2159  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2160  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2161  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2162  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2163  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2164  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2165  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2166  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2167  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2168  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2169  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2170  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2171  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2172  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2173  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2174  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2175  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2176  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2177  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2178  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2179  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2180  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2181  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2182  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2183  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2184  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2185  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2186  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2187  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2188  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2189  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2190  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2191  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2192  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2193  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2194  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2195  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2196  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2197  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2198  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2199  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2200  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2201  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2203  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2204  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2205  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2206  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2207  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2208  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2209  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2210  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2211  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2213  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2214  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2135 -> m3_2217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2136 -> m3_23  [key=2, style=dotted];
m3_2136 -> m3_24  [key=2, style=dotted];
m3_2136 -> m3_2137  [key=0, style=solid];
m3_2140 -> m3_23  [key=2, style=dotted];
m3_2140 -> m3_24  [key=2, style=dotted];
m3_2140 -> m3_2141  [key=0, style=solid];
m3_2143 -> m3_23  [key=2, style=dotted];
m3_2143 -> m3_24  [key=2, style=dotted];
m3_2143 -> m3_2144  [key=0, style=solid];
m3_2146 -> m3_23  [key=2, style=dotted];
m3_2146 -> m3_24  [key=2, style=dotted];
m3_2146 -> m3_2147  [key=0, style=solid];
m3_2150 -> m3_23  [key=2, style=dotted];
m3_2150 -> m3_24  [key=2, style=dotted];
m3_2150 -> m3_2151  [key=0, style=solid];
m3_2153 -> m3_23  [key=2, style=dotted];
m3_2153 -> m3_24  [key=2, style=dotted];
m3_2153 -> m3_2154  [key=0, style=solid];
m3_2157 -> m3_23  [key=2, style=dotted];
m3_2157 -> m3_24  [key=2, style=dotted];
m3_2157 -> m3_2158  [key=0, style=solid];
m3_2161 -> m3_23  [key=2, style=dotted];
m3_2161 -> m3_24  [key=2, style=dotted];
m3_2161 -> m3_2162  [key=0, style=solid];
m3_2165 -> m3_23  [key=2, style=dotted];
m3_2165 -> m3_24  [key=2, style=dotted];
m3_2165 -> m3_2166  [key=0, style=solid];
m3_2169 -> m3_23  [key=2, style=dotted];
m3_2169 -> m3_24  [key=2, style=dotted];
m3_2169 -> m3_2170  [key=0, style=solid];
m3_2172 -> m3_23  [key=2, style=dotted];
m3_2172 -> m3_24  [key=2, style=dotted];
m3_2172 -> m3_2173  [key=0, style=solid];
m3_2176 -> m3_23  [key=2, style=dotted];
m3_2176 -> m3_24  [key=2, style=dotted];
m3_2176 -> m3_2177  [key=0, style=solid];
m3_2178 -> m3_23  [key=2, style=dotted];
m3_2178 -> m3_24  [key=2, style=dotted];
m3_2178 -> m3_2179  [key=0, style=solid];
m3_2181 -> m3_23  [key=2, style=dotted];
m3_2181 -> m3_24  [key=2, style=dotted];
m3_2181 -> m3_2182  [key=0, style=solid];
m3_2184 -> m3_23  [key=2, style=dotted];
m3_2184 -> m3_24  [key=2, style=dotted];
m3_2184 -> m3_2185  [key=0, style=solid];
m3_2187 -> m3_23  [key=2, style=dotted];
m3_2187 -> m3_24  [key=2, style=dotted];
m3_2187 -> m3_2188  [key=0, style=solid];
m3_2190 -> m3_23  [key=2, style=dotted];
m3_2190 -> m3_24  [key=2, style=dotted];
m3_2190 -> m3_2191  [key=0, style=solid];
m3_2192 -> m3_23  [key=2, style=dotted];
m3_2192 -> m3_24  [key=2, style=dotted];
m3_2192 -> m3_2193  [key=0, style=solid];
m3_2195 -> m3_23  [key=2, style=dotted];
m3_2195 -> m3_24  [key=2, style=dotted];
m3_2195 -> m3_2196  [key=0, style=solid];
m3_2197 -> m3_23  [key=2, style=dotted];
m3_2197 -> m3_24  [key=2, style=dotted];
m3_2197 -> m3_2198  [key=0, style=solid];
m3_2199 -> m3_23  [key=2, style=dotted];
m3_2199 -> m3_24  [key=2, style=dotted];
m3_2199 -> m3_2200  [key=0, style=solid];
m3_2201 -> m3_23  [key=2, style=dotted];
m3_2201 -> m3_24  [key=2, style=dotted];
m3_2201 -> m3_2202  [key=0, style=solid];
m3_2203 -> m3_23  [key=2, style=dotted];
m3_2203 -> m3_24  [key=2, style=dotted];
m3_2203 -> m3_2204  [key=0, style=solid];
m3_2205 -> m3_23  [key=2, style=dotted];
m3_2205 -> m3_24  [key=2, style=dotted];
m3_2205 -> m3_2206  [key=0, style=solid];
m3_2207 -> m3_23  [key=2, style=dotted];
m3_2207 -> m3_24  [key=2, style=dotted];
m3_2207 -> m3_2208  [key=0, style=solid];
m3_2209 -> m3_23  [key=2, style=dotted];
m3_2209 -> m3_24  [key=2, style=dotted];
m3_2209 -> m3_2210  [key=0, style=solid];
m3_2211 -> m3_23  [key=2, style=dotted];
m3_2211 -> m3_24  [key=2, style=dotted];
m3_2211 -> m3_2212  [key=0, style=solid];
m3_2214 -> m3_23  [key=2, style=dotted];
m3_2214 -> m3_24  [key=2, style=dotted];
m3_2214 -> m3_2215  [key=0, style=solid];
m3_2217 -> m3_23  [key=2, style=dotted];
m3_2217 -> m3_2218  [key=0, style=solid];
m3_2217 -> m3_158  [key=2, style=dotted];
m3_2137 -> m3_25  [key=2, style=dotted];
m3_2137 -> m3_2138  [key=0, style=solid];
m3_2138 -> m3_25  [key=2, style=dotted];
m3_2138 -> m3_2139  [key=0, style=solid];
m3_2139 -> m3_25  [key=2, style=dotted];
m3_2139 -> m3_2140  [key=0, style=solid];
m3_2141 -> m3_25  [key=2, style=dotted];
m3_2141 -> m3_2142  [key=0, style=solid];
m3_2142 -> m3_25  [key=2, style=dotted];
m3_2142 -> m3_2143  [key=0, style=solid];
m3_2144 -> m3_25  [key=2, style=dotted];
m3_2144 -> m3_2145  [key=0, style=solid];
m3_2145 -> m3_25  [key=2, style=dotted];
m3_2145 -> m3_2146  [key=0, style=solid];
m3_2147 -> m3_25  [key=2, style=dotted];
m3_2147 -> m3_2148  [key=0, style=solid];
m3_2148 -> m3_25  [key=2, style=dotted];
m3_2148 -> m3_2149  [key=0, style=solid];
m3_2149 -> m3_25  [key=2, style=dotted];
m3_2149 -> m3_2150  [key=0, style=solid];
m3_2151 -> m3_25  [key=2, style=dotted];
m3_2151 -> m3_2152  [key=0, style=solid];
m3_2152 -> m3_25  [key=2, style=dotted];
m3_2152 -> m3_2153  [key=0, style=solid];
m3_2154 -> m3_25  [key=2, style=dotted];
m3_2154 -> m3_2155  [key=0, style=solid];
m3_2155 -> m3_25  [key=2, style=dotted];
m3_2155 -> m3_2156  [key=0, style=solid];
m3_2156 -> m3_25  [key=2, style=dotted];
m3_2156 -> m3_2157  [key=0, style=solid];
m3_2158 -> m3_25  [key=2, style=dotted];
m3_2158 -> m3_2159  [key=0, style=solid];
m3_2159 -> m3_25  [key=2, style=dotted];
m3_2159 -> m3_2160  [key=0, style=solid];
m3_2160 -> m3_25  [key=2, style=dotted];
m3_2160 -> m3_2161  [key=0, style=solid];
m3_2162 -> m3_25  [key=2, style=dotted];
m3_2162 -> m3_2163  [key=0, style=solid];
m3_2163 -> m3_25  [key=2, style=dotted];
m3_2163 -> m3_2164  [key=0, style=solid];
m3_2164 -> m3_25  [key=2, style=dotted];
m3_2164 -> m3_2165  [key=0, style=solid];
m3_2166 -> m3_25  [key=2, style=dotted];
m3_2166 -> m3_2167  [key=0, style=solid];
m3_2167 -> m3_25  [key=2, style=dotted];
m3_2167 -> m3_2168  [key=0, style=solid];
m3_2168 -> m3_25  [key=2, style=dotted];
m3_2168 -> m3_2169  [key=0, style=solid];
m3_2170 -> m3_25  [key=2, style=dotted];
m3_2170 -> m3_2171  [key=0, style=solid];
m3_2171 -> m3_25  [key=2, style=dotted];
m3_2171 -> m3_2172  [key=0, style=solid];
m3_2173 -> m3_25  [key=2, style=dotted];
m3_2173 -> m3_2174  [key=0, style=solid];
m3_2174 -> m3_25  [key=2, style=dotted];
m3_2174 -> m3_2175  [key=0, style=solid];
m3_2175 -> m3_25  [key=2, style=dotted];
m3_2175 -> m3_2176  [key=0, style=solid];
m3_2177 -> m3_25  [key=2, style=dotted];
m3_2177 -> m3_2178  [key=0, style=solid];
m3_2179 -> m3_25  [key=2, style=dotted];
m3_2179 -> m3_2180  [key=0, style=solid];
m3_2180 -> m3_25  [key=2, style=dotted];
m3_2180 -> m3_2181  [key=0, style=solid];
m3_2182 -> m3_25  [key=2, style=dotted];
m3_2182 -> m3_2183  [key=0, style=solid];
m3_2183 -> m3_25  [key=2, style=dotted];
m3_2183 -> m3_2184  [key=0, style=solid];
m3_2185 -> m3_25  [key=2, style=dotted];
m3_2185 -> m3_2186  [key=0, style=solid];
m3_2186 -> m3_25  [key=2, style=dotted];
m3_2186 -> m3_2187  [key=0, style=solid];
m3_2188 -> m3_25  [key=2, style=dotted];
m3_2188 -> m3_2189  [key=0, style=solid];
m3_2189 -> m3_25  [key=2, style=dotted];
m3_2189 -> m3_2190  [key=0, style=solid];
m3_2191 -> m3_25  [key=2, style=dotted];
m3_2191 -> m3_2192  [key=0, style=solid];
m3_2193 -> m3_25  [key=2, style=dotted];
m3_2193 -> m3_2194  [key=0, style=solid];
m3_2194 -> m3_25  [key=2, style=dotted];
m3_2194 -> m3_2195  [key=0, style=solid];
m3_2196 -> m3_25  [key=2, style=dotted];
m3_2196 -> m3_2197  [key=0, style=solid];
m3_2198 -> m3_25  [key=2, style=dotted];
m3_2198 -> m3_2199  [key=0, style=solid];
m3_2200 -> m3_25  [key=2, style=dotted];
m3_2200 -> m3_2201  [key=0, style=solid];
m3_2202 -> m3_25  [key=2, style=dotted];
m3_2202 -> m3_2203  [key=0, style=solid];
m3_2204 -> m3_25  [key=2, style=dotted];
m3_2204 -> m3_2205  [key=0, style=solid];
m3_2206 -> m3_25  [key=2, style=dotted];
m3_2206 -> m3_2207  [key=0, style=solid];
m3_2208 -> m3_25  [key=2, style=dotted];
m3_2208 -> m3_2209  [key=0, style=solid];
m3_2210 -> m3_25  [key=2, style=dotted];
m3_2210 -> m3_2211  [key=0, style=solid];
m3_2212 -> m3_25  [key=2, style=dotted];
m3_2212 -> m3_2213  [key=0, style=solid];
m3_2213 -> m3_25  [key=2, style=dotted];
m3_2213 -> m3_2214  [key=0, style=solid];
m3_2215 -> m3_25  [key=2, style=dotted];
m3_2215 -> m3_2216  [key=0, style=solid];
m3_2216 -> m3_25  [key=2, style=dotted];
m3_2216 -> m3_2217  [key=0, style=solid];
m3_2134 -> m3_2135  [key=0, style=solid];
m3_2218 -> m3_2133  [key=0, style=bold, color=blue];
m3_1558 -> m3_1559  [key=0, style=solid];
m3_1560 -> m3_21  [key=2, style=dotted];
m3_1560 -> m3_22  [key=2, style=dotted];
m3_1560 -> m3_1561  [key=0, style=solid];
m3_1560 -> m3_1562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1563  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1564  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1565  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1566  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1568  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1569  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1571  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1560 -> m3_1572  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1562 -> m3_23  [key=2, style=dotted];
m3_1562 -> m3_24  [key=2, style=dotted];
m3_1562 -> m3_1563  [key=0, style=solid];
m3_1564 -> m3_23  [key=2, style=dotted];
m3_1564 -> m3_24  [key=2, style=dotted];
m3_1564 -> m3_1565  [key=0, style=solid];
m3_1571 -> m3_23  [key=2, style=dotted];
m3_1571 -> m3_24  [key=2, style=dotted];
m3_1571 -> m3_1572  [key=0, style=solid];
m3_1563 -> m3_25  [key=2, style=dotted];
m3_1563 -> m3_1564  [key=0, style=solid];
m3_1565 -> m3_25  [key=2, style=dotted];
m3_1565 -> m3_1566  [key=0, style=solid];
m3_1567 -> m3_25  [key=2, style=dotted];
m3_1567 -> m3_1568  [key=0, style=solid];
m3_1568 -> m3_25  [key=2, style=dotted];
m3_1568 -> m3_1569  [key=0, style=solid];
m3_1572 -> m3_25  [key=2, style=dotted];
m3_1572 -> m3_1573  [key=0, style=solid];
m3_1570 -> m3_25  [key=2, style=dotted];
m3_1570 -> m3_1571  [key=0, style=solid];
m3_1570 -> m3_1570  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_1570 -> m3_1557  [key=2, style=dotted];
m3_1559 -> m3_1560  [key=0, style=solid];
m3_1559 -> m3_1559  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1561 -> m3_1562  [key=0, style=solid];
m3_1561 -> m3_1574  [key=2, style=dotted];
m3_1566 -> m3_1567  [key=0, style=solid];
m3_1566 -> m3_1386  [key=2, style=dotted];
m3_1569 -> m3_1570  [key=0, style=solid];
m3_1573 -> m3_1558  [key=0, style=bold, color=blue];
m3_128 -> m3_129  [key=0, style=solid];
m3_130 -> m3_21  [key=2, style=dotted];
m3_130 -> m3_22  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_130 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_131 -> m3_23  [key=2, style=dotted];
m3_131 -> m3_24  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_132 -> m3_25  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_133 -> m3_25  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_129  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_134 -> m3_128  [key=0, style=bold, color=blue];
m3_202 -> m3_203  [key=0, style=solid];
m3_204 -> m3_21  [key=2, style=dotted];
m3_204 -> m3_22  [key=2, style=dotted];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_204 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_204 -> m3_208  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_204 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_204 -> m3_211  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_204 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_204 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_205 -> m3_23  [key=2, style=dotted];
m3_205 -> m3_24  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_207 -> m3_23  [key=2, style=dotted];
m3_207 -> m3_24  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_211 -> m3_23  [key=2, style=dotted];
m3_211 -> m3_24  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_213 -> m3_23  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_158  [key=2, style=dotted];
m3_206 -> m3_25  [key=2, style=dotted];
m3_206 -> m3_207  [key=0, style=solid];
m3_208 -> m3_25  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_212 -> m3_25  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_203  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_209 -> m3_211  [key=0, style=solid];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_116  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_214 -> m3_202  [key=0, style=bold, color=blue];
m3_2287 -> m3_2288  [key=0, style=solid];
m3_2289 -> m3_21  [key=2, style=dotted];
m3_2289 -> m3_22  [key=2, style=dotted];
m3_2289 -> m3_2290  [key=0, style=solid];
m3_2289 -> m3_2291  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2292  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2293  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2294  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2295  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2296  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2297  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2298  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2299  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2300  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2302  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2303  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2304  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2307  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2309  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2310  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2312  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2313  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2314  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2315  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2316  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2317  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2320  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2321  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2322  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2323  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2324  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2325  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2289 -> m3_2327  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2290 -> m3_23  [key=2, style=dotted];
m3_2290 -> m3_24  [key=2, style=dotted];
m3_2290 -> m3_2291  [key=0, style=solid];
m3_2291 -> m3_25  [key=2, style=dotted];
m3_2291 -> m3_2292  [key=0, style=solid];
m3_2292 -> m3_25  [key=2, style=dotted];
m3_2292 -> m3_2293  [key=0, style=solid];
m3_2292 -> m3_1392  [key=2, style=dotted];
m3_2293 -> m3_25  [key=2, style=dotted];
m3_2293 -> m3_2294  [key=0, style=solid];
m3_2294 -> m3_25  [key=2, style=dotted];
m3_2294 -> m3_2295  [key=0, style=solid];
m3_2294 -> m3_1392  [key=2, style=dotted];
m3_2295 -> m3_25  [key=2, style=dotted];
m3_2295 -> m3_2296  [key=0, style=solid];
m3_2296 -> m3_25  [key=2, style=dotted];
m3_2296 -> m3_2297  [key=0, style=solid];
m3_2296 -> m3_1392  [key=2, style=dotted];
m3_2297 -> m3_25  [key=2, style=dotted];
m3_2297 -> m3_2298  [key=0, style=solid];
m3_2298 -> m3_25  [key=2, style=dotted];
m3_2298 -> m3_2299  [key=0, style=solid];
m3_2298 -> m3_1392  [key=2, style=dotted];
m3_2299 -> m3_25  [key=2, style=dotted];
m3_2299 -> m3_2300  [key=0, style=solid];
m3_2300 -> m3_25  [key=2, style=dotted];
m3_2300 -> m3_2301  [key=0, style=solid];
m3_2300 -> m3_1392  [key=2, style=dotted];
m3_2301 -> m3_25  [key=2, style=dotted];
m3_2301 -> m3_2302  [key=0, style=solid];
m3_2302 -> m3_25  [key=2, style=dotted];
m3_2302 -> m3_2303  [key=0, style=solid];
m3_2302 -> m3_1392  [key=2, style=dotted];
m3_2303 -> m3_25  [key=2, style=dotted];
m3_2303 -> m3_2304  [key=0, style=solid];
m3_2304 -> m3_25  [key=2, style=dotted];
m3_2304 -> m3_2305  [key=0, style=solid];
m3_2304 -> m3_1392  [key=2, style=dotted];
m3_2305 -> m3_25  [key=2, style=dotted];
m3_2305 -> m3_2306  [key=0, style=solid];
m3_2306 -> m3_25  [key=2, style=dotted];
m3_2306 -> m3_2307  [key=0, style=solid];
m3_2306 -> m3_1392  [key=2, style=dotted];
m3_2307 -> m3_25  [key=2, style=dotted];
m3_2307 -> m3_2308  [key=0, style=solid];
m3_2308 -> m3_25  [key=2, style=dotted];
m3_2308 -> m3_2309  [key=0, style=solid];
m3_2308 -> m3_1392  [key=2, style=dotted];
m3_2309 -> m3_25  [key=2, style=dotted];
m3_2309 -> m3_2310  [key=0, style=solid];
m3_2310 -> m3_25  [key=2, style=dotted];
m3_2310 -> m3_2311  [key=0, style=solid];
m3_2310 -> m3_1392  [key=2, style=dotted];
m3_2311 -> m3_25  [key=2, style=dotted];
m3_2311 -> m3_2312  [key=0, style=solid];
m3_2312 -> m3_25  [key=2, style=dotted];
m3_2312 -> m3_2313  [key=0, style=solid];
m3_2312 -> m3_1392  [key=2, style=dotted];
m3_2313 -> m3_25  [key=2, style=dotted];
m3_2313 -> m3_2314  [key=0, style=solid];
m3_2314 -> m3_25  [key=2, style=dotted];
m3_2314 -> m3_2315  [key=0, style=solid];
m3_2314 -> m3_1392  [key=2, style=dotted];
m3_2315 -> m3_25  [key=2, style=dotted];
m3_2315 -> m3_2316  [key=0, style=solid];
m3_2316 -> m3_25  [key=2, style=dotted];
m3_2316 -> m3_2317  [key=0, style=solid];
m3_2316 -> m3_1392  [key=2, style=dotted];
m3_2317 -> m3_25  [key=2, style=dotted];
m3_2317 -> m3_2318  [key=0, style=solid];
m3_2318 -> m3_25  [key=2, style=dotted];
m3_2318 -> m3_2319  [key=0, style=solid];
m3_2318 -> m3_1392  [key=2, style=dotted];
m3_2319 -> m3_25  [key=2, style=dotted];
m3_2319 -> m3_2320  [key=0, style=solid];
m3_2320 -> m3_25  [key=2, style=dotted];
m3_2320 -> m3_2321  [key=0, style=solid];
m3_2320 -> m3_1392  [key=2, style=dotted];
m3_2321 -> m3_25  [key=2, style=dotted];
m3_2321 -> m3_2322  [key=0, style=solid];
m3_2322 -> m3_25  [key=2, style=dotted];
m3_2322 -> m3_2323  [key=0, style=solid];
m3_2322 -> m3_1392  [key=2, style=dotted];
m3_2323 -> m3_25  [key=2, style=dotted];
m3_2323 -> m3_2324  [key=0, style=solid];
m3_2324 -> m3_25  [key=2, style=dotted];
m3_2324 -> m3_2325  [key=0, style=solid];
m3_2325 -> m3_25  [key=2, style=dotted];
m3_2325 -> m3_2326  [key=0, style=solid];
m3_2325 -> m3_1392  [key=2, style=dotted];
m3_2326 -> m3_25  [key=2, style=dotted];
m3_2326 -> m3_2327  [key=0, style=solid];
m3_2327 -> m3_25  [key=2, style=dotted];
m3_2327 -> m3_2328  [key=0, style=solid];
m3_2288 -> m3_2289  [key=0, style=solid];
m3_2288 -> m3_2288  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2328 -> m3_2287  [key=0, style=bold, color=blue];
m3_1407 -> m3_1408  [key=0, style=solid];
m3_1408 -> m3_21  [key=2, style=dotted];
m3_1408 -> m3_22  [key=2, style=dotted];
m3_1408 -> m3_1409  [key=0, style=solid];
m3_1408 -> m3_1412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1409 -> m3_1410  [key=0, style=solid];
m3_1409 -> m3_172  [key=2, style=dotted];
m3_1409 -> m3_1411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1410 -> m3_1407  [key=0, style=bold, color=blue];
m3_1851 -> m3_1852  [key=0, style=solid];
m3_1852 -> m3_21  [key=2, style=dotted];
m3_1852 -> m3_22  [key=2, style=dotted];
m3_1852 -> m3_1853  [key=0, style=solid];
m3_1853 -> m3_25  [key=2, style=dotted];
m3_1853 -> m3_1854  [key=0, style=solid];
m3_1853 -> m3_1846  [key=2, style=dotted];
m3_1854 -> m3_1851  [key=0, style=bold, color=blue];
m3_1487 -> m3_1488  [key=0, style=solid];
m3_1489 -> m3_21  [key=2, style=dotted];
m3_1489 -> m3_22  [key=2, style=dotted];
m3_1489 -> m3_1490  [key=0, style=solid];
m3_1489 -> m3_1491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1489 -> m3_1499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1490 -> m3_23  [key=2, style=dotted];
m3_1490 -> m3_24  [key=2, style=dotted];
m3_1490 -> m3_1491  [key=0, style=solid];
m3_1492 -> m3_23  [key=2, style=dotted];
m3_1492 -> m3_24  [key=2, style=dotted];
m3_1492 -> m3_1493  [key=0, style=solid];
m3_1498 -> m3_23  [key=2, style=dotted];
m3_1498 -> m3_24  [key=2, style=dotted];
m3_1498 -> m3_1499  [key=0, style=solid];
m3_1491 -> m3_25  [key=2, style=dotted];
m3_1491 -> m3_1492  [key=0, style=solid];
m3_1493 -> m3_25  [key=2, style=dotted];
m3_1493 -> m3_1494  [key=0, style=solid];
m3_1495 -> m3_25  [key=2, style=dotted];
m3_1495 -> m3_1496  [key=0, style=solid];
m3_1496 -> m3_25  [key=2, style=dotted];
m3_1496 -> m3_1497  [key=0, style=solid];
m3_1497 -> m3_25  [key=2, style=dotted];
m3_1497 -> m3_1498  [key=0, style=solid];
m3_1497 -> m3_1484  [key=2, style=dotted];
m3_1497 -> m3_1485  [key=2, style=dotted];
m3_1497 -> m3_1486  [key=2, style=dotted];
m3_1499 -> m3_25  [key=2, style=dotted];
m3_1499 -> m3_1500  [key=0, style=solid];
m3_1488 -> m3_1489  [key=0, style=solid];
m3_1488 -> m3_1488  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1494 -> m3_1495  [key=0, style=solid];
m3_1494 -> m3_1386  [key=2, style=dotted];
m3_1500 -> m3_1487  [key=0, style=bold, color=blue];
m3_1615 -> m3_1616  [key=0, style=solid];
m3_1616 -> m3_21  [key=2, style=dotted];
m3_1616 -> m3_22  [key=2, style=dotted];
m3_1616 -> m3_1617  [key=0, style=solid];
m3_1616 -> m3_1620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1617 -> m3_1618  [key=0, style=solid];
m3_1617 -> m3_172  [key=2, style=dotted];
m3_1617 -> m3_1619  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1618 -> m3_1615  [key=0, style=bold, color=blue];
m3_2345 -> m3_2346  [key=0, style=solid];
m3_2347 -> m3_21  [key=2, style=dotted];
m3_2347 -> m3_22  [key=2, style=dotted];
m3_2347 -> m3_2348  [key=0, style=solid];
m3_2347 -> m3_2351  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2346 -> m3_2347  [key=0, style=solid];
m3_2346 -> m3_2338  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2348 -> m3_2349  [key=0, style=solid];
m3_2348 -> m3_172  [key=2, style=dotted];
m3_2348 -> m3_2350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2349 -> m3_2345  [key=0, style=bold, color=blue];
m3_2219 -> m3_2220  [key=0, style=solid];
m3_2221 -> m3_21  [key=2, style=dotted];
m3_2221 -> m3_2222  [key=0, style=solid];
m3_2221 -> m3_358  [key=2, style=dotted];
m3_2221 -> m3_396  [key=2, style=dotted];
m3_2221 -> m3_397  [key=2, style=dotted];
m3_2221 -> m3_2223  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2224  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2225  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2226  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2227  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2228  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2229  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2230  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2231  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2233  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2234  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2235  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2236  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2237  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2238  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2221 -> m3_2239  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2222 -> m3_23  [key=2, style=dotted];
m3_2222 -> m3_2223  [key=0, style=solid];
m3_2236 -> m3_23  [key=2, style=dotted];
m3_2236 -> m3_2237  [key=0, style=solid];
m3_2239 -> m3_23  [key=2, style=dotted];
m3_2239 -> m3_2240  [key=0, style=solid];
m3_2239 -> m3_158  [key=2, style=dotted];
m3_2223 -> m3_25  [key=2, style=dotted];
m3_2223 -> m3_2224  [key=0, style=solid];
m3_2225 -> m3_25  [key=2, style=dotted];
m3_2225 -> m3_2226  [key=0, style=solid];
m3_2226 -> m3_25  [key=2, style=dotted];
m3_2226 -> m3_2227  [key=0, style=solid];
m3_2228 -> m3_25  [key=2, style=dotted];
m3_2228 -> m3_2229  [key=0, style=solid];
m3_2229 -> m3_25  [key=2, style=dotted];
m3_2229 -> m3_2230  [key=0, style=solid];
m3_2231 -> m3_25  [key=2, style=dotted];
m3_2231 -> m3_2232  [key=0, style=solid];
m3_2232 -> m3_25  [key=2, style=dotted];
m3_2232 -> m3_2233  [key=0, style=solid];
m3_2234 -> m3_25  [key=2, style=dotted];
m3_2234 -> m3_2235  [key=0, style=solid];
m3_2235 -> m3_25  [key=2, style=dotted];
m3_2235 -> m3_2236  [key=0, style=solid];
m3_2237 -> m3_25  [key=2, style=dotted];
m3_2237 -> m3_2238  [key=0, style=solid];
m3_2238 -> m3_25  [key=2, style=dotted];
m3_2238 -> m3_2239  [key=0, style=solid];
m3_2220 -> m3_2221  [key=0, style=solid];
m3_2220 -> m3_2220  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2224 -> m3_2225  [key=0, style=solid];
m3_2224 -> m3_176  [key=2, style=dotted];
m3_2227 -> m3_2228  [key=0, style=solid];
m3_2227 -> m3_176  [key=2, style=dotted];
m3_2230 -> m3_2231  [key=0, style=solid];
m3_2230 -> m3_176  [key=2, style=dotted];
m3_2233 -> m3_2234  [key=0, style=solid];
m3_2233 -> m3_176  [key=2, style=dotted];
m3_2240 -> m3_2219  [key=0, style=bold, color=blue];
m3_1442 -> m3_1443  [key=0, style=solid];
m3_1444 -> m3_21  [key=2, style=dotted];
m3_1444 -> m3_22  [key=2, style=dotted];
m3_1444 -> m3_1445  [key=0, style=solid];
m3_1444 -> m3_1446  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1448  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1449  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1450  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1451  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1452  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1453  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1454  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1444 -> m3_1455  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_1445 -> m3_23  [key=2, style=dotted];
m3_1445 -> m3_24  [key=2, style=dotted];
m3_1445 -> m3_1446  [key=0, style=solid];
m3_1447 -> m3_23  [key=2, style=dotted];
m3_1447 -> m3_24  [key=2, style=dotted];
m3_1447 -> m3_1448  [key=0, style=solid];
m3_1450 -> m3_23  [key=2, style=dotted];
m3_1450 -> m3_24  [key=2, style=dotted];
m3_1450 -> m3_1451  [key=0, style=solid];
m3_1453 -> m3_23  [key=2, style=dotted];
m3_1453 -> m3_24  [key=2, style=dotted];
m3_1453 -> m3_1454  [key=0, style=solid];
m3_1455 -> m3_23  [key=2, style=dotted];
m3_1455 -> m3_1456  [key=0, style=solid];
m3_1455 -> m3_158  [key=2, style=dotted];
m3_1446 -> m3_25  [key=2, style=dotted];
m3_1446 -> m3_1447  [key=0, style=solid];
m3_1448 -> m3_25  [key=2, style=dotted];
m3_1448 -> m3_1449  [key=0, style=solid];
m3_1449 -> m3_25  [key=2, style=dotted];
m3_1449 -> m3_1450  [key=0, style=solid];
m3_1451 -> m3_25  [key=2, style=dotted];
m3_1451 -> m3_1452  [key=0, style=solid];
m3_1452 -> m3_25  [key=2, style=dotted];
m3_1452 -> m3_1453  [key=0, style=solid];
m3_1454 -> m3_25  [key=2, style=dotted];
m3_1454 -> m3_1455  [key=0, style=solid];
m3_1443 -> m3_1444  [key=0, style=solid];
m3_1443 -> m3_1443  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_1456 -> m3_1442  [key=0, style=bold, color=blue];
m3_2885 -> m3_708  [key=1, style=dashed, color=darkseagreen4, label=total];
m3_2886 -> m3_724  [key=1, style=dashed, color=darkseagreen4, label=total];
m3_2949 -> m3_2704  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2874 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2874 -> m3_242  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2874 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2875 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2876 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2878 -> m3_404  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2879 -> m3_422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2880 -> m3_435  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2882 -> m3_679  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2883 -> m3_686  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2884 -> m3_693  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2896 -> m3_1071  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2896 -> m3_1068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2896 -> m3_1074  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2897 -> m3_1106  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2897 -> m3_1109  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2898 -> m3_1284  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2899 -> m3_1362  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2909 -> m3_1620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2910 -> m3_1627  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2911 -> m3_1634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2912 -> m3_1641  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2913 -> m3_1648  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2914 -> m3_1793  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2915 -> m3_1801  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2916 -> m3_1832  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2918 -> m3_1888  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2920 -> m3_1909  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2931 -> m3_2255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2946 -> m3_2508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2947 -> m3_2540  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2947 -> m3_2543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2948 -> m3_2664  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2948 -> m3_2667  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2948 -> m3_2670  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2948 -> m3_2673  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2948 -> m3_2676  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2948 -> m3_2679  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2877 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2877 -> m3_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m3_2919 -> m3_1900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2928 -> m3_2006  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2929 -> m3_2017  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2932 -> m3_2335  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2934 -> m3_2351  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2937 -> m3_2381  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2943 -> m3_2429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2944 -> m3_2437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2872 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2873 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2873 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2873 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2873 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2881 -> m3_597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2889 -> m3_830  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2890 -> m3_837  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2891 -> m3_844  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2892 -> m3_852  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2893 -> m3_863  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2894 -> m3_878  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2895 -> m3_1031  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2895 -> m3_1034  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2895 -> m3_1037  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2895 -> m3_1040  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2895 -> m3_1043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2900 -> m3_1379  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2901 -> m3_1398  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2902 -> m3_1405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2903 -> m3_1412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2904 -> m3_1419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2905 -> m3_1433  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2906 -> m3_1440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2907 -> m3_1511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2908 -> m3_1613  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2917 -> m3_1867  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2921 -> m3_1942  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2922 -> m3_1952  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2923 -> m3_1959  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2924 -> m3_1966  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2925 -> m3_1974  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2926 -> m3_1985  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2927 -> m3_1996  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2930 -> m3_2029  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2930 -> m3_2032  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2930 -> m3_2035  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2933 -> m3_2343  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2935 -> m3_2359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2936 -> m3_2373  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2938 -> m3_2389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2939 -> m3_2397  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2940 -> m3_2405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2941 -> m3_2413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2942 -> m3_2421  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2945 -> m3_2453  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2955 -> m3_2835  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m3_2955 -> m3_2838  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m3_2955 -> m3_2840  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m3_2953 -> m3_2780  [key=1, style=dashed, color=darkseagreen4, label=clientReceivedEvent];
m3_2951 -> m3_2774  [key=1, style=dashed, color=darkseagreen4, label=serverStartedEvent];
m3_2952 -> m3_2776  [key=1, style=dashed, color=darkseagreen4, label=jsonArrayElementsCount];
m3_2950 -> m3_2772  [key=1, style=dashed, color=darkseagreen4, label=port];
m5_164 -> m5_165  [key=0, style=solid];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_37  [key=2, style=dotted];
m5_165 -> m5_167  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_165 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_165 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_165 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_165 -> m5_171  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_165 -> m5_172  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_165 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_165 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_166 -> m5_167  [key=0, style=solid];
m5_166 -> m5_123  [key=2, style=dotted];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_124  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_123  [key=2, style=dotted];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_85  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_124  [key=2, style=dotted];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_38  [key=2, style=dotted];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_48  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_85  [key=2, style=dotted];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_134  [key=2, style=dotted];
m5_174 -> m5_135  [key=2, style=dotted];
m5_175 -> m5_164  [key=0, style=bold, color=blue];
m5_136 -> m5_137  [key=0, style=solid];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_37  [key=2, style=dotted];
m5_137 -> m5_139  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_137 -> m5_140  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_137 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_137 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_38  [key=2, style=dotted];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_81  [key=2, style=dotted];
m5_139 -> m5_82  [key=2, style=dotted];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_48  [key=2, style=dotted];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_134  [key=2, style=dotted];
m5_144 -> m5_135  [key=2, style=dotted];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_81  [key=2, style=dotted];
m5_142 -> m5_52  [key=2, style=dotted];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_52  [key=2, style=dotted];
m5_145 -> m5_136  [key=0, style=bold, color=blue];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_37  [key=2, style=dotted];
m5_87 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_113  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_114  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_115  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_120  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_87 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_52  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_52  [key=2, style=dotted];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_123  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_52  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_52  [key=2, style=dotted];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_93 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_93 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_93 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_93 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=o];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_124  [key=2, style=dotted];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_52  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_125  [key=2, style=dotted];
m5_96 -> m5_52  [key=2, style=dotted];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_40  [key=2, style=dotted];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_52  [key=2, style=dotted];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_52  [key=2, style=dotted];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_124  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_52  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_125  [key=2, style=dotted];
m5_102 -> m5_52  [key=2, style=dotted];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_38  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_52  [key=2, style=dotted];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_52  [key=2, style=dotted];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_106 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_106 -> m5_115  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_106 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_40  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_52  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_52  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_81  [key=2, style=dotted];
m5_110 -> m5_82  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_52  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_52  [key=2, style=dotted];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_47  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_52  [key=2, style=dotted];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_52  [key=2, style=dotted];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_84  [key=2, style=dotted];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_52  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_52  [key=2, style=dotted];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_85  [key=2, style=dotted];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_52  [key=2, style=dotted];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_52  [key=2, style=dotted];
m5_122 -> m5_86  [key=0, style=bold, color=blue];
m5_53 -> m5_54  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_37  [key=2, style=dotted];
m5_54 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_54 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_52  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_77  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_52  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_78  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_52  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_79  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_52  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_78  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_52  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_80  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_52  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_79  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_52  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_81  [key=2, style=dotted];
m5_68 -> m5_82  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_52  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_83  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_52  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_84  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_52  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_85  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_52  [key=2, style=dotted];
m5_76 -> m5_53  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_36  [key=2, style=dotted];
m5_1 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_1 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_2 -> m5_3  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_47  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_52  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_37  [key=2, style=dotted];
m5_3 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_3 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_38  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_39  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_40  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_41  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_42  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_43  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_43  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_43  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_44  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_40  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_40  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_45  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_46  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_48  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_19 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=root];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_49  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_50  [key=2, style=dotted];
m5_21 -> m5_51  [key=2, style=dotted];
m5_21 -> m5_52  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_52  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_52  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_52  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_52  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_52  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_52  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_52  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_52  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_52  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_52  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_52  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_52  [key=2, style=dotted];
m5_35 -> m5_0  [key=0, style=bold, color=blue];
m5_155 -> m5_156  [key=0, style=solid];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_37  [key=2, style=dotted];
m5_156 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_156 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_156 -> m5_160  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_156 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_38  [key=2, style=dotted];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_163  [key=2, style=dotted];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_163  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_48  [key=2, style=dotted];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_134  [key=2, style=dotted];
m5_161 -> m5_135  [key=2, style=dotted];
m5_162 -> m5_155  [key=0, style=bold, color=blue];
m5_176 -> m5_177  [key=0, style=solid];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_37  [key=2, style=dotted];
m5_177 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_183  [key=2, style=dotted];
m5_178 -> m5_184  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_180 -> m5_181  [key=0, style=solid];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_183  [key=2, style=dotted];
m5_181 -> m5_52  [key=2, style=dotted];
m5_182 -> m5_176  [key=0, style=bold, color=blue];
m5_146 -> m5_147  [key=0, style=solid];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_37  [key=2, style=dotted];
m5_147 -> m5_149  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_147 -> m5_150  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_147 -> m5_151  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_147 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_38  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_154  [key=2, style=dotted];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_154  [key=2, style=dotted];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_48  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_134  [key=2, style=dotted];
m5_152 -> m5_135  [key=2, style=dotted];
m5_153 -> m5_146  [key=0, style=bold, color=blue];
m5_126 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_37  [key=2, style=dotted];
m5_127 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_127 -> m5_130  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_127 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_38  [key=2, style=dotted];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_133  [key=2, style=dotted];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_48  [key=2, style=dotted];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_134  [key=2, style=dotted];
m5_131 -> m5_135  [key=2, style=dotted];
m5_132 -> m5_126  [key=0, style=bold, color=blue];
m6_527 -> m6_528  [key=0, style=solid];
m6_528 -> m6_529  [key=0, style=solid];
m6_528 -> m6_25  [key=2, style=dotted];
m6_529 -> m6_530  [key=0, style=solid];
m6_529 -> m6_26  [key=2, style=dotted];
m6_530 -> m6_531  [key=0, style=solid];
m6_530 -> m6_28  [key=2, style=dotted];
m6_531 -> m6_527  [key=0, style=bold, color=blue];
m6_57 -> m6_58  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_55  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_61  [key=2, style=dotted];
m6_59 -> m6_56  [key=2, style=dotted];
m6_59 -> m6_28  [key=2, style=dotted];
m6_60 -> m6_57  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_37  [key=2, style=dotted];
m6_32 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_37  [key=2, style=dotted];
m6_33 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_37  [key=2, style=dotted];
m6_34 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=2, style=dotted];
m6_35 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_36 -> m6_31  [key=0, style=bold, color=blue];
m6_392 -> m6_393  [key=0, style=solid];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_205  [key=2, style=dotted];
m6_393 -> m6_172  [key=2, style=dotted];
m6_393 -> m6_300  [key=2, style=dotted];
m6_393 -> m6_403  [key=2, style=dotted];
m6_393 -> m6_404  [key=2, style=dotted];
m6_393 -> m6_298  [key=2, style=dotted];
m6_393 -> m6_399  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_206  [key=2, style=dotted];
m6_394 -> m6_399  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_409  [key=2, style=dotted];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_405  [key=2, style=dotted];
m6_395 -> m6_406  [key=2, style=dotted];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_407  [key=2, style=dotted];
m6_396 -> m6_400  [key=1, style=dashed, color=darkseagreen4, label=sw];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_408  [key=2, style=dotted];
m6_397 -> m6_399  [key=1, style=dashed, color=darkseagreen4, label=writer];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_410  [key=2, style=dotted];
m6_398 -> m6_399  [key=0, style=solid];
m6_401 -> m6_402  [key=0, style=solid];
m6_401 -> m6_8  [key=2, style=dotted];
m6_402 -> m6_392  [key=0, style=bold, color=blue];
m6_274 -> m6_275  [key=0, style=solid];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_275  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_25  [key=2, style=dotted];
m6_276 -> m6_278  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_276 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_276 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_276 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_276 -> m6_282  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_273  [key=2, style=dotted];
m6_277 -> m6_7  [key=2, style=dotted];
m6_277 -> m6_8  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_273  [key=2, style=dotted];
m6_278 -> m6_7  [key=2, style=dotted];
m6_278 -> m6_8  [key=2, style=dotted];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_273  [key=2, style=dotted];
m6_279 -> m6_7  [key=2, style=dotted];
m6_279 -> m6_28  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_273  [key=2, style=dotted];
m6_280 -> m6_289  [key=2, style=dotted];
m6_280 -> m6_28  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_273  [key=2, style=dotted];
m6_281 -> m6_7  [key=2, style=dotted];
m6_281 -> m6_28  [key=2, style=dotted];
m6_282 -> m6_283  [key=0, style=solid];
m6_282 -> m6_273  [key=2, style=dotted];
m6_282 -> m6_7  [key=2, style=dotted];
m6_282 -> m6_28  [key=2, style=dotted];
m6_283 -> m6_284  [key=0, style=solid];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_41  [key=2, style=dotted];
m6_284 -> m6_286  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_284 -> m6_287  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_7  [key=2, style=dotted];
m6_285 -> m6_8  [key=2, style=dotted];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_226  [key=2, style=dotted];
m6_286 -> m6_227  [key=2, style=dotted];
m6_286 -> m6_7  [key=2, style=dotted];
m6_286 -> m6_28  [key=2, style=dotted];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_226  [key=2, style=dotted];
m6_287 -> m6_227  [key=2, style=dotted];
m6_287 -> m6_7  [key=2, style=dotted];
m6_287 -> m6_28  [key=2, style=dotted];
m6_288 -> m6_274  [key=0, style=bold, color=blue];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_162 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_162 -> m6_157  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_162 -> m6_158  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_162 -> m6_159  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_162 -> m6_160  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_163  [key=3, color=darkorchid, style=bold, label="Local variable int v1"];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_171  [key=2, style=dotted];
m6_165 -> m6_172  [key=2, style=dotted];
m6_165 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_28  [key=2, style=dotted];
m6_164 -> m6_165  [key=0, style=solid];
m6_164 -> m6_170  [key=2, style=dotted];
m6_164 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_164 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_164 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_155  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_28  [key=2, style=dotted];
m6_169 -> m6_162  [key=0, style=bold, color=blue];
m6_493 -> m6_494  [key=0, style=solid];
m6_494 -> m6_495  [key=0, style=solid];
m6_494 -> m6_492  [key=2, style=dotted];
m6_494 -> m6_29  [key=2, style=dotted];
m6_494 -> m6_506  [key=2, style=dotted];
m6_494 -> m6_420  [key=2, style=dotted];
m6_494 -> m6_507  [key=2, style=dotted];
m6_494 -> m6_498  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_494 -> m6_499  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_494 -> m6_500  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_494 -> m6_501  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_494 -> m6_502  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_494 -> m6_503  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_6  [key=2, style=dotted];
m6_495 -> m6_497  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_495 -> m6_504  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_28  [key=2, style=dotted];
m6_499 -> m6_500  [key=0, style=solid];
m6_499 -> m6_28  [key=2, style=dotted];
m6_500 -> m6_501  [key=0, style=solid];
m6_500 -> m6_28  [key=2, style=dotted];
m6_501 -> m6_502  [key=0, style=solid];
m6_501 -> m6_28  [key=2, style=dotted];
m6_502 -> m6_503  [key=0, style=solid];
m6_502 -> m6_28  [key=2, style=dotted];
m6_503 -> m6_504  [key=0, style=solid];
m6_503 -> m6_508  [key=2, style=dotted];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_7  [key=2, style=dotted];
m6_496 -> m6_8  [key=2, style=dotted];
m6_497 -> m6_498  [key=0, style=solid];
m6_497 -> m6_26  [key=2, style=dotted];
m6_497 -> m6_499  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_497 -> m6_500  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_497 -> m6_501  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_497 -> m6_502  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_504 -> m6_505  [key=0, style=solid];
m6_504 -> m6_7  [key=2, style=dotted];
m6_504 -> m6_8  [key=2, style=dotted];
m6_505 -> m6_493  [key=0, style=bold, color=blue];
m6_209 -> m6_210  [key=0, style=solid];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_210  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_25  [key=2, style=dotted];
m6_211 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_224  [key=2, style=dotted];
m6_212 -> m6_225  [key=2, style=dotted];
m6_212 -> m6_214  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_212 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_212 -> m6_216  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_224  [key=2, style=dotted];
m6_220 -> m6_228  [key=2, style=dotted];
m6_220 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_220 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label=parameterValues];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_28  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_28  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_28  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_218  [key=1, style=dashed, color=darkseagreen4, label=list];
m6_216 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label=list];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_226  [key=2, style=dotted];
m6_217 -> m6_56  [key=2, style=dotted];
m6_217 -> m6_28  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_226  [key=2, style=dotted];
m6_218 -> m6_227  [key=2, style=dotted];
m6_218 -> m6_28  [key=2, style=dotted];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_226  [key=2, style=dotted];
m6_219 -> m6_227  [key=2, style=dotted];
m6_219 -> m6_28  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_28  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_28  [key=2, style=dotted];
m6_223 -> m6_209  [key=0, style=bold, color=blue];
m6_141 -> m6_142  [key=0, style=solid];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_146  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_28  [key=2, style=dotted];
m6_145 -> m6_141  [key=0, style=bold, color=blue];
m6_130 -> m6_131  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_86  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_87  [key=2, style=dotted];
m6_132 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m6_132 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m6_132 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_137  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_137  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_37  [key=2, style=dotted];
m6_135 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_136 -> m6_130  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_6  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_7  [key=2, style=dotted];
m6_12 -> m6_8  [key=2, style=dotted];
m6_13 -> m6_9  [key=0, style=bold, color=blue];
m6_156 -> m6_157  [key=0, style=solid];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_162  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_162  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_162  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_162  [key=2, style=dotted];
m6_161 -> m6_156  [key=0, style=bold, color=blue];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_86  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_87  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_88  [key=2, style=dotted];
m6_102 -> m6_89  [key=2, style=dotted];
m6_102 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=v];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_28  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_104 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_104 -> m6_102  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_109  [key=2, style=dotted];
m6_105 -> m6_28  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_28  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_28  [key=2, style=dotted];
m6_108 -> m6_99  [key=0, style=bold, color=blue];
m6_517 -> m6_518  [key=0, style=solid];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_195  [key=2, style=dotted];
m6_518 -> m6_520  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_518 -> m6_523  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_519 -> m6_520  [key=0, style=solid];
m6_519 -> m6_447  [key=2, style=dotted];
m6_519 -> m6_523  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_519 -> m6_524  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_520 -> m6_521  [key=0, style=solid];
m6_520 -> m6_372  [key=2, style=dotted];
m6_520 -> m6_522  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_521 -> m6_517  [key=0, style=bold, color=blue];
m6_62 -> m6_63  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_55  [key=2, style=dotted];
m6_63 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=tokens1];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_55  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_70  [key=2, style=dotted];
m6_65 -> m6_71  [key=2, style=dotted];
m6_65 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=tokens1];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_55  [key=2, style=dotted];
m6_66 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=o1];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_55  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_72  [key=2, style=dotted];
m6_68 -> m6_71  [key=2, style=dotted];
m6_69 -> m6_62  [key=0, style=bold, color=blue];
m6_302 -> m6_303  [key=0, style=solid];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_237  [key=2, style=dotted];
m6_303 -> m6_305  [key=2, style=dotted];
m6_304 -> m6_302  [key=0, style=bold, color=blue];
m6_481 -> m6_482  [key=0, style=solid];
m6_482 -> m6_483  [key=0, style=solid];
m6_482 -> m6_492  [key=2, style=dotted];
m6_482 -> m6_486  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_482 -> m6_487  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_482 -> m6_488  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_482 -> m6_489  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_482 -> m6_490  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_483 -> m6_484  [key=0, style=solid];
m6_483 -> m6_6  [key=2, style=dotted];
m6_483 -> m6_485  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_486 -> m6_487  [key=0, style=solid];
m6_486 -> m6_28  [key=2, style=dotted];
m6_487 -> m6_488  [key=0, style=solid];
m6_487 -> m6_28  [key=2, style=dotted];
m6_488 -> m6_489  [key=0, style=solid];
m6_488 -> m6_28  [key=2, style=dotted];
m6_489 -> m6_490  [key=0, style=solid];
m6_489 -> m6_28  [key=2, style=dotted];
m6_490 -> m6_491  [key=0, style=solid];
m6_490 -> m6_28  [key=2, style=dotted];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> m6_7  [key=2, style=dotted];
m6_484 -> m6_8  [key=2, style=dotted];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_26  [key=2, style=dotted];
m6_485 -> m6_487  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_485 -> m6_488  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_485 -> m6_489  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_485 -> m6_490  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_491 -> m6_481  [key=0, style=bold, color=blue];
m6_90 -> m6_91  [key=0, style=solid];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_86  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_87  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_98  [key=2, style=dotted];
m6_93 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_93 -> m6_96  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_28  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_28  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_28  [key=2, style=dotted];
m6_97 -> m6_90  [key=0, style=bold, color=blue];
m6_411 -> m6_412  [key=0, style=solid];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_237  [key=2, style=dotted];
m6_412 -> m6_419  [key=2, style=dotted];
m6_412 -> m6_300  [key=2, style=dotted];
m6_412 -> m6_403  [key=2, style=dotted];
m6_412 -> m6_420  [key=2, style=dotted];
m6_412 -> m6_416  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_206  [key=2, style=dotted];
m6_413 -> m6_416  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_416 -> m6_417  [key=0, style=solid];
m6_416 -> m6_409  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_421  [key=2, style=dotted];
m6_415 -> m6_417  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_258  [key=2, style=dotted];
m6_417 -> m6_56  [key=2, style=dotted];
m6_417 -> m6_28  [key=2, style=dotted];
m6_418 -> m6_411  [key=0, style=bold, color=blue];
m6_120 -> m6_121  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_86  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_87  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_98  [key=2, style=dotted];
m6_123 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=v];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_28  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_125 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_125 -> m6_123  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_109  [key=2, style=dotted];
m6_126 -> m6_28  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_28  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_28  [key=2, style=dotted];
m6_129 -> m6_120  [key=0, style=bold, color=blue];
m6_313 -> m6_314  [key=0, style=solid];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_41  [key=2, style=dotted];
m6_314 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=posts];
m6_314 -> m6_317  [key=1, style=dashed, color=darkseagreen4, label=posts];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_322  [key=2, style=dotted];
m6_315 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_315 -> m6_318  [key=1, style=dashed, color=darkseagreen4, label=serializerBasics];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_323  [key=2, style=dotted];
m6_316 -> m6_228  [key=2, style=dotted];
m6_316 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_316 -> m6_319  [key=1, style=dashed, color=darkseagreen4, label=since2012];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_323  [key=2, style=dotted];
m6_317 -> m6_228  [key=2, style=dotted];
m6_317 -> m6_331  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_317 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label=linqToJson];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_324  [key=2, style=dotted];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_28  [key=2, style=dotted];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_28  [key=2, style=dotted];
m6_321 -> m6_313  [key=0, style=bold, color=blue];
m6_468 -> m6_469  [key=0, style=solid];
m6_469 -> m6_470  [key=0, style=solid];
m6_469 -> m6_41  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_474  [key=2, style=dotted];
m6_470 -> m6_355  [key=2, style=dotted];
m6_470 -> m6_225  [key=2, style=dotted];
m6_470 -> m6_472  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_471 -> m6_472  [key=0, style=solid];
m6_471 -> m6_28  [key=2, style=dotted];
m6_472 -> m6_473  [key=0, style=solid];
m6_472 -> m6_28  [key=2, style=dotted];
m6_473 -> m6_468  [key=0, style=bold, color=blue];
m6_384 -> m6_385  [key=0, style=solid];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_372  [key=2, style=dotted];
m6_385 -> m6_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_386 -> m6_384  [key=0, style=bold, color=blue];
m6_229 -> m6_230  [key=0, style=solid];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_230  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_41  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_236  [key=2, style=dotted];
m6_232 -> m6_225  [key=2, style=dotted];
m6_232 -> m6_234  [key=1, style=dashed, color=darkseagreen4, label=list];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_237  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_28  [key=2, style=dotted];
m6_235 -> m6_229  [key=0, style=bold, color=blue];
m6_110 -> m6_111  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_86  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_87  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_88  [key=2, style=dotted];
m6_113 -> m6_89  [key=2, style=dotted];
m6_113 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_28  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_115 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_115 -> m6_113  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_109  [key=2, style=dotted];
m6_116 -> m6_28  [key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_28  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_28  [key=2, style=dotted];
m6_119 -> m6_110  [key=0, style=bold, color=blue];
m6_179 -> m6_180  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_41  [key=2, style=dotted];
m6_180 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label=j];
m6_181 -> m6_182  [key=0, style=solid];
m6_183 -> m6_184  [key=0, style=solid];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_28  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_28  [key=2, style=dotted];
m6_185 -> m6_179  [key=0, style=bold, color=blue];
m6_448 -> m6_449  [key=0, style=solid];
m6_449 -> m6_450  [key=0, style=solid];
m6_449 -> m6_451  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_449 -> m6_449  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JObject o"];
m6_450 -> m6_451  [key=0, style=solid];
m6_450 -> m6_449  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken> enumerable"];
m6_451 -> m6_452  [key=0, style=solid];
m6_451 -> m6_460  [key=2, style=dotted];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_461  [key=2, style=dotted];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_205  [key=2, style=dotted];
m6_453 -> m6_172  [key=2, style=dotted];
m6_453 -> m6_300  [key=2, style=dotted];
m6_453 -> m6_298  [key=2, style=dotted];
m6_453 -> m6_456  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_460  [key=2, style=dotted];
m6_454 -> m6_456  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m6_454 -> m6_457  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m6_456 -> m6_457  [key=0, style=solid];
m6_456 -> m6_28  [key=2, style=dotted];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_324  [key=2, style=dotted];
m6_457 -> m6_458  [key=0, style=solid];
m6_457 -> m6_462  [key=2, style=dotted];
m6_458 -> m6_459  [key=0, style=solid];
m6_458 -> m6_300  [key=2, style=dotted];
m6_458 -> m6_28  [key=2, style=dotted];
m6_459 -> m6_448  [key=0, style=bold, color=blue];
m6_509 -> m6_510  [key=0, style=solid];
m6_510 -> m6_511  [key=0, style=solid];
m6_510 -> m6_510  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_511 -> m6_512  [key=0, style=solid];
m6_511 -> m6_25  [key=2, style=dotted];
m6_512 -> m6_513  [key=0, style=solid];
m6_512 -> m6_28  [key=2, style=dotted];
m6_513 -> m6_514  [key=0, style=solid];
m6_514 -> m6_515  [key=0, style=solid];
m6_514 -> m6_41  [key=2, style=dotted];
m6_515 -> m6_516  [key=0, style=solid];
m6_515 -> m6_28  [key=2, style=dotted];
m6_516 -> m6_509  [key=0, style=bold, color=blue];
m6_51 -> m6_52  [key=0, style=solid];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_55  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_56  [key=2, style=dotted];
m6_53 -> m6_28  [key=2, style=dotted];
m6_54 -> m6_51  [key=0, style=bold, color=blue];
m6_435 -> m6_436  [key=0, style=solid];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_302  [key=2, style=dotted];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_447  [key=2, style=dotted];
m6_437 -> m6_6  [key=2, style=dotted];
m6_437 -> m6_437  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_437 -> m6_439  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_437 -> m6_440  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_437 -> m6_441  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_437 -> m6_442  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_7  [key=2, style=dotted];
m6_438 -> m6_8  [key=2, style=dotted];
m6_439 -> m6_440  [key=0, style=solid];
m6_439 -> m6_367  [key=2, style=dotted];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_367  [key=2, style=dotted];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_28  [key=2, style=dotted];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_258  [key=2, style=dotted];
m6_442 -> m6_56  [key=2, style=dotted];
m6_442 -> m6_28  [key=2, style=dotted];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_237  [key=2, style=dotted];
m6_443 -> m6_434  [key=2, style=dotted];
m6_443 -> m6_445  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_367  [key=2, style=dotted];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_56  [key=2, style=dotted];
m6_445 -> m6_28  [key=2, style=dotted];
m6_446 -> m6_435  [key=0, style=bold, color=blue];
m6_422 -> m6_423  [key=0, style=solid];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_302  [key=2, style=dotted];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_6  [key=2, style=dotted];
m6_424 -> m6_424  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_424 -> m6_426  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_424 -> m6_427  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_424 -> m6_428  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_424 -> m6_429  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_425 -> m6_426  [key=0, style=solid];
m6_425 -> m6_7  [key=2, style=dotted];
m6_425 -> m6_8  [key=2, style=dotted];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_367  [key=2, style=dotted];
m6_427 -> m6_428  [key=0, style=solid];
m6_427 -> m6_367  [key=2, style=dotted];
m6_428 -> m6_429  [key=0, style=solid];
m6_428 -> m6_28  [key=2, style=dotted];
m6_429 -> m6_430  [key=0, style=solid];
m6_429 -> m6_258  [key=2, style=dotted];
m6_429 -> m6_56  [key=2, style=dotted];
m6_429 -> m6_28  [key=2, style=dotted];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_237  [key=2, style=dotted];
m6_430 -> m6_434  [key=2, style=dotted];
m6_430 -> m6_432  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_431 -> m6_432  [key=0, style=solid];
m6_431 -> m6_367  [key=2, style=dotted];
m6_432 -> m6_433  [key=0, style=solid];
m6_432 -> m6_56  [key=2, style=dotted];
m6_432 -> m6_28  [key=2, style=dotted];
m6_433 -> m6_422  [key=0, style=bold, color=blue];
m6_475 -> m6_476  [key=0, style=solid];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_476  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_41  [key=2, style=dotted];
m6_477 -> m6_479  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_478 -> m6_479  [key=0, style=solid];
m6_478 -> m6_226  [key=2, style=dotted];
m6_478 -> m6_257  [key=2, style=dotted];
m6_478 -> m6_56  [key=2, style=dotted];
m6_478 -> m6_28  [key=2, style=dotted];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_226  [key=2, style=dotted];
m6_479 -> m6_257  [key=2, style=dotted];
m6_479 -> m6_355  [key=2, style=dotted];
m6_479 -> d162  [key=2, style=dotted];
m6_479 -> m6_28  [key=2, style=dotted];
m6_480 -> m6_475  [key=0, style=bold, color=blue];
m6_173 -> m6_174  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_178  [key=2, style=dotted];
m6_174 -> m6_171  [key=2, style=dotted];
m6_174 -> m6_172  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_177  [key=0, style=solid];
m6_176 -> m6_175  [key=0, style=solid];
m6_176 -> m6_7  [key=2, style=dotted];
m6_176 -> m6_8  [key=2, style=dotted];
m6_177 -> m6_173  [key=0, style=bold, color=blue];
m6_377 -> m6_378  [key=0, style=solid];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_372  [key=2, style=dotted];
m6_378 -> m6_380  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_379 -> m6_377  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_25  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_26  [key=2, style=dotted];
m6_17 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=data];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_27  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_28  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_25  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_26  [key=2, style=dotted];
m6_21 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=data];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_29  [key=2, style=dotted];
m6_22 -> m6_30  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_28  [key=2, style=dotted];
m6_24 -> m6_15  [key=0, style=bold, color=blue];
m6_532 -> m6_533  [key=0, style=solid];
m6_533 -> m6_534  [key=0, style=solid];
m6_533 -> m6_25  [key=2, style=dotted];
m6_533 -> m6_537  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_534 -> m6_535  [key=0, style=solid];
m6_534 -> m6_37  [key=2, style=dotted];
m6_534 -> m6_536  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_535 -> m6_532  [key=0, style=bold, color=blue];
m6_147 -> m6_148  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_148  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_25  [key=2, style=dotted];
m6_149 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=v1];
m6_150 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=v1];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_155  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_28  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_28  [key=2, style=dotted];
m6_154 -> m6_147  [key=0, style=bold, color=blue];
m6_356 -> m6_357  [key=0, style=solid];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_357  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_25  [key=2, style=dotted];
m6_358 -> m6_360  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_358 -> m6_361  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_358 -> m6_362  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_358 -> m6_363  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_358 -> m6_364  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_358 -> m6_365  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_28  [key=2, style=dotted];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_272  [key=2, style=dotted];
m6_360 -> m6_28  [key=2, style=dotted];
m6_361 -> m6_362  [key=0, style=solid];
m6_361 -> m6_367  [key=2, style=dotted];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_258  [key=2, style=dotted];
m6_362 -> m6_56  [key=2, style=dotted];
m6_362 -> m6_28  [key=2, style=dotted];
m6_363 -> m6_364  [key=0, style=solid];
m6_363 -> m6_258  [key=2, style=dotted];
m6_363 -> m6_56  [key=2, style=dotted];
m6_363 -> m6_28  [key=2, style=dotted];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_28  [key=2, style=dotted];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_258  [key=2, style=dotted];
m6_365 -> m6_259  [key=2, style=dotted];
m6_365 -> d162  [key=2, style=dotted];
m6_365 -> m6_28  [key=2, style=dotted];
m6_366 -> m6_356  [key=0, style=bold, color=blue];
m6_587 -> m6_588  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_42 -> m6_43  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_48 -> m6_49  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_41  [key=2, style=dotted];
m6_40 -> m6_38  [key=0, style=bold, color=blue];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_41  [key=2, style=dotted];
m6_44 -> m6_42  [key=0, style=bold, color=blue];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_25  [key=2, style=dotted];
m6_47 -> m6_45  [key=0, style=bold, color=blue];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_25  [key=2, style=dotted];
m6_50 -> m6_48  [key=0, style=bold, color=blue];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_98  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_140 -> m6_138  [key=0, style=bold, color=blue];
m6_325 -> m6_326  [key=0, style=solid];
m6_328 -> m6_329  [key=0, style=solid];
m6_331 -> m6_332  [key=0, style=solid];
m6_326 -> m6_327  [key=0, style=solid];
m6_327 -> m6_325  [key=0, style=bold, color=blue];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_197  [key=2, style=dotted];
m6_330 -> m6_328  [key=0, style=bold, color=blue];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_334  [key=2, style=dotted];
m6_332 -> m6_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_333 -> m6_331  [key=0, style=bold, color=blue];
m6_335 -> m6_336  [key=0, style=solid];
m6_336 -> m6_337  [key=0, style=solid];
m6_337 -> m6_335  [key=0, style=bold, color=blue];
m6_373 -> m6_374  [key=0, style=solid];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_146  [key=2, style=dotted];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_28  [key=2, style=dotted];
m6_376 -> m6_373  [key=0, style=bold, color=blue];
m6_380 -> m6_381  [key=0, style=solid];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_194  [key=2, style=dotted];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_28  [key=2, style=dotted];
m6_383 -> m6_380  [key=0, style=bold, color=blue];
m6_387 -> m6_388  [key=0, style=solid];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_391  [key=2, style=dotted];
m6_389 -> m6_390  [key=0, style=solid];
m6_389 -> m6_28  [key=2, style=dotted];
m6_390 -> m6_387  [key=0, style=bold, color=blue];
m6_523 -> m6_524  [key=0, style=solid];
m6_523 -> m6_526  [key=2, style=dotted];
m6_524 -> m6_525  [key=0, style=solid];
m6_524 -> m6_28  [key=2, style=dotted];
m6_522 -> m6_523  [key=0, style=solid];
m6_525 -> m6_522  [key=0, style=bold, color=blue];
m6_537 -> m6_538  [key=0, style=solid];
m6_537 -> m6_26  [key=2, style=dotted];
m6_536 -> m6_537  [key=0, style=solid];
m6_538 -> m6_536  [key=0, style=bold, color=blue];
m6_581 -> m6_582  [key=0, style=solid];
m6_584 -> m6_585  [key=0, style=solid];
m6_588 -> m6_589  [key=0, style=solid];
m6_588 -> m6_7  [key=2, style=dotted];
m6_582 -> m6_583  [key=0, style=solid];
m6_583 -> m6_581  [key=0, style=bold, color=blue];
m6_585 -> m6_586  [key=0, style=solid];
m6_586 -> m6_584  [key=0, style=bold, color=blue];
m6_589 -> m6_587  [key=0, style=bold, color=blue];
m6_560 -> m6_561  [key=0, style=solid];
m6_560 -> m6_563  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_560 -> m6_540  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m6_560 -> m6_574  [key=3, color=darkorchid, style=bold, label="method methodReturn string SerializeWithNoRedundentIdProperties"];
m6_561 -> m6_562  [key=0, style=solid];
m6_561 -> m6_421  [key=2, style=dotted];
m6_561 -> m6_563  [key=1, style=dashed, color=darkseagreen4, label=writer];
m6_561 -> m6_564  [key=1, style=dashed, color=darkseagreen4, label=writer];
m6_563 -> m6_564  [key=0, style=solid];
m6_563 -> m6_409  [key=2, style=dotted];
m6_562 -> m6_563  [key=0, style=solid];
m6_562 -> m6_577  [key=2, style=dotted];
m6_562 -> m6_578  [key=2, style=dotted];
m6_564 -> m6_565  [key=0, style=solid];
m6_564 -> m6_566  [key=1, style=dashed, color=darkseagreen4, label=t];
m6_564 -> m6_574  [key=1, style=dashed, color=darkseagreen4, label=t];
m6_565 -> m6_566  [key=0, style=solid];
m6_565 -> m6_574  [key=0, style=solid];
m6_566 -> m6_567  [key=0, style=solid];
m6_566 -> m6_569  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_574 -> m6_575  [key=0, style=solid];
m6_574 -> m6_7  [key=2, style=dotted];
m6_567 -> m6_568  [key=0, style=solid];
m6_567 -> m6_260  [key=2, style=dotted];
m6_567 -> m6_579  [key=2, style=dotted];
m6_567 -> m6_323  [key=2, style=dotted];
m6_567 -> m6_228  [key=2, style=dotted];
m6_567 -> m6_581  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_567 -> m6_570  [key=1, style=dashed, color=darkseagreen4, label=ids];
m6_569 -> m6_570  [key=0, style=solid];
m6_569 -> m6_260  [key=2, style=dotted];
m6_569 -> m6_579  [key=2, style=dotted];
m6_569 -> m6_323  [key=2, style=dotted];
m6_569 -> m6_228  [key=2, style=dotted];
m6_569 -> m6_584  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_569 -> m6_571  [key=1, style=dashed, color=darkseagreen4, label=refs];
m6_568 -> m6_569  [key=0, style=solid];
m6_568 -> m6_574  [key=0, style=solid];
m6_570 -> m6_571  [key=0, style=solid];
m6_570 -> m6_574  [key=0, style=solid];
m6_570 -> m6_588  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m6_570 -> m6_573  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m6_571 -> m6_572  [key=0, style=solid];
m6_571 -> m6_334  [key=2, style=dotted];
m6_571 -> m6_587  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_573 -> m6_570  [key=0, style=solid];
m6_573 -> m6_580  [key=2, style=dotted];
m6_572 -> m6_573  [key=0, style=solid];
m6_572 -> m6_570  [key=0, style=solid];
m6_575 -> m6_576  [key=0, style=solid];
m6_576 -> m6_560  [key=0, style=bold, color=blue];
m6_290 -> m6_291  [key=0, style=solid];
m6_291 -> m6_292  [key=0, style=solid];
m6_291 -> m6_205  [key=2, style=dotted];
m6_291 -> m6_172  [key=2, style=dotted];
m6_291 -> m6_298  [key=2, style=dotted];
m6_291 -> m6_293  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_291 -> m6_294  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_224  [key=2, style=dotted];
m6_292 -> m6_56  [key=2, style=dotted];
m6_292 -> m6_28  [key=2, style=dotted];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_7  [key=2, style=dotted];
m6_293 -> m6_8  [key=2, style=dotted];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_299  [key=2, style=dotted];
m6_294 -> m6_300  [key=2, style=dotted];
m6_294 -> m6_301  [key=2, style=dotted];
m6_294 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_56  [key=2, style=dotted];
m6_295 -> m6_28  [key=2, style=dotted];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_7  [key=2, style=dotted];
m6_296 -> m6_8  [key=2, style=dotted];
m6_297 -> m6_290  [key=0, style=bold, color=blue];
m6_539 -> m6_540  [key=0, style=solid];
m6_540 -> m6_541  [key=0, style=solid];
m6_540 -> m6_447  [key=2, style=dotted];
m6_540 -> m6_545  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_540 -> m6_546  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_540 -> m6_547  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_540 -> m6_548  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_540 -> m6_549  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_540 -> m6_550  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_540 -> m6_552  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_540 -> m6_555  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_447  [key=2, style=dotted];
m6_541 -> m6_548  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m6_545 -> m6_546  [key=0, style=solid];
m6_545 -> m6_558  [key=2, style=dotted];
m6_546 -> m6_547  [key=0, style=solid];
m6_546 -> m6_558  [key=2, style=dotted];
m6_547 -> m6_548  [key=0, style=solid];
m6_547 -> m6_558  [key=2, style=dotted];
m6_548 -> m6_549  [key=0, style=solid];
m6_548 -> m6_558  [key=2, style=dotted];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_558  [key=2, style=dotted];
m6_550 -> m6_551  [key=0, style=solid];
m6_550 -> m6_558  [key=2, style=dotted];
m6_552 -> m6_553  [key=0, style=solid];
m6_552 -> m6_559  [key=2, style=dotted];
m6_555 -> m6_556  [key=0, style=solid];
m6_555 -> m6_560  [key=2, style=dotted];
m6_542 -> m6_543  [key=0, style=solid];
m6_542 -> m6_447  [key=2, style=dotted];
m6_542 -> m6_549  [key=1, style=dashed, color=darkseagreen4, label=dic3];
m6_542 -> m6_554  [key=1, style=dashed, color=darkseagreen4, label=dic3];
m6_543 -> m6_544  [key=0, style=solid];
m6_543 -> m6_237  [key=2, style=dotted];
m6_543 -> m6_545  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_543 -> m6_551  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_543 -> m6_552  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_543 -> m6_553  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_554 -> m6_555  [key=0, style=solid];
m6_554 -> m6_558  [key=2, style=dotted];
m6_544 -> m6_545  [key=0, style=solid];
m6_544 -> m6_237  [key=2, style=dotted];
m6_544 -> m6_546  [key=1, style=dashed, color=darkseagreen4, label=list2];
m6_551 -> m6_552  [key=0, style=solid];
m6_551 -> m6_559  [key=2, style=dotted];
m6_553 -> m6_554  [key=0, style=solid];
m6_553 -> m6_237  [key=2, style=dotted];
m6_553 -> m6_559  [key=2, style=dotted];
m6_556 -> m6_557  [key=0, style=solid];
m6_556 -> m6_8  [key=2, style=dotted];
m6_557 -> m6_539  [key=0, style=bold, color=blue];
m6_73 -> m6_74  [key=0, style=solid];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_55  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_77  [key=2, style=dotted];
m6_75 -> m6_28  [key=2, style=dotted];
m6_75 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m6_76 -> m6_73  [key=0, style=bold, color=blue];
m6_78 -> m6_79  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_86  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_87  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_88  [key=2, style=dotted];
m6_81 -> m6_89  [key=2, style=dotted];
m6_81 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_81 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_28  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_28  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_28  [key=2, style=dotted];
m6_85 -> m6_78  [key=0, style=bold, color=blue];
m6_338 -> m6_339  [key=0, style=solid];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_302  [key=2, style=dotted];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_171  [key=2, style=dotted];
m6_340 -> m6_172  [key=2, style=dotted];
m6_340 -> m6_205  [key=2, style=dotted];
m6_340 -> m6_353  [key=2, style=dotted];
m6_340 -> m6_195  [key=2, style=dotted];
m6_340 -> m6_340  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_340 -> m6_342  [key=1, style=dashed, color=darkseagreen4, label=rss];
m6_340 -> m6_345  [key=1, style=dashed, color=darkseagreen4, label=rss];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_7  [key=2, style=dotted];
m6_341 -> m6_8  [key=2, style=dotted];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_272  [key=2, style=dotted];
m6_342 -> m6_342  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_342 -> m6_344  [key=1, style=dashed, color=darkseagreen4, label=postTitles];
m6_345 -> m6_346  [key=0, style=solid];
m6_345 -> m6_258  [key=2, style=dotted];
m6_345 -> m6_355  [key=2, style=dotted];
m6_345 -> m6_56  [key=2, style=dotted];
m6_345 -> m6_345  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_345 -> m6_347  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_345 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_345 -> m6_349  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_345 -> m6_350  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_345 -> m6_351  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_354  [key=2, style=dotted];
m6_343 -> m6_28  [key=2, style=dotted];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_354  [key=2, style=dotted];
m6_344 -> m6_28  [key=2, style=dotted];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_354  [key=2, style=dotted];
m6_346 -> m6_28  [key=2, style=dotted];
m6_347 -> m6_348  [key=0, style=solid];
m6_347 -> m6_354  [key=2, style=dotted];
m6_347 -> m6_28  [key=2, style=dotted];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_354  [key=2, style=dotted];
m6_348 -> m6_28  [key=2, style=dotted];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_354  [key=2, style=dotted];
m6_349 -> m6_28  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_354  [key=2, style=dotted];
m6_350 -> m6_28  [key=2, style=dotted];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_354  [key=2, style=dotted];
m6_351 -> m6_28  [key=2, style=dotted];
m6_352 -> m6_338  [key=0, style=bold, color=blue];
m6_261 -> m6_262  [key=0, style=solid];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_262  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_25  [key=2, style=dotted];
m6_263 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_263 -> m6_267  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_263 -> m6_269  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_7  [key=2, style=dotted];
m6_264 -> m6_8  [key=2, style=dotted];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_272  [key=2, style=dotted];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_273  [key=2, style=dotted];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_273  [key=2, style=dotted];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_7  [key=2, style=dotted];
m6_266 -> m6_8  [key=2, style=dotted];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_7  [key=2, style=dotted];
m6_268 -> m6_28  [key=2, style=dotted];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_7  [key=2, style=dotted];
m6_270 -> m6_8  [key=2, style=dotted];
m6_271 -> m6_261  [key=0, style=bold, color=blue];
m6_306 -> m6_307  [key=0, style=solid];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_305  [key=2, style=dotted];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_6  [key=2, style=dotted];
m6_308 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_309 -> m6_310  [key=0, style=solid];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_7  [key=2, style=dotted];
m6_311 -> m6_312  [key=0, style=solid];
m6_311 -> m6_8  [key=2, style=dotted];
m6_312 -> m6_306  [key=0, style=bold, color=blue];
m6_463 -> m6_464  [key=0, style=solid];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_6  [key=2, style=dotted];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_253  [key=2, style=dotted];
m6_466 -> m6_467  [key=0, style=solid];
m6_466 -> m6_56  [key=2, style=dotted];
m6_466 -> m6_28  [key=2, style=dotted];
m6_467 -> m6_463  [key=0, style=bold, color=blue];
m6_199 -> m6_200  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_205  [key=2, style=dotted];
m6_200 -> m6_172  [key=2, style=dotted];
m6_200 -> m6_197  [key=2, style=dotted];
m6_200 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_206  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_207  [key=2, style=dotted];
m6_202 -> m6_208  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_28  [key=2, style=dotted];
m6_204 -> m6_199  [key=0, style=bold, color=blue];
m6_369 -> m6_370  [key=0, style=solid];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_372  [key=2, style=dotted];
m6_370 -> m6_373  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_371 -> m6_369  [key=0, style=bold, color=blue];
m6_186 -> m6_187  [key=0, style=solid];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_194  [key=2, style=dotted];
m6_187 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label=array];
m6_187 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label=array];
m6_187 -> m6_192  [key=1, style=dashed, color=darkseagreen4, label=array];
m6_188 -> m6_189  [key=0, style=solid];
m6_188 -> m6_195  [key=2, style=dotted];
m6_188 -> m6_190  [key=1, style=dashed, color=darkseagreen4, label=text];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_198  [key=2, style=dotted];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_198  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_7  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_196  [key=2, style=dotted];
m6_189 -> m6_197  [key=2, style=dotted];
m6_189 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_193 -> m6_186  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_3 -> m6_8  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_238 -> m6_239  [key=0, style=solid];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_239  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_25  [key=2, style=dotted];
m6_240 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_240 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_240 -> m6_249  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_252  [key=2, style=dotted];
m6_241 -> m6_225  [key=2, style=dotted];
m6_241 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label=resultObjects];
m6_241 -> m6_244  [key=1, style=dashed, color=darkseagreen4, label=resultObjects];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_256  [key=2, style=dotted];
m6_245 -> m6_61  [key=2, style=dotted];
m6_245 -> m6_257  [key=2, style=dotted];
m6_245 -> m6_56  [key=2, style=dotted];
m6_245 -> m6_28  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_258  [key=2, style=dotted];
m6_246 -> m6_259  [key=2, style=dotted];
m6_246 -> m6_225  [key=2, style=dotted];
m6_246 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label=resultUrls];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_260  [key=2, style=dotted];
m6_249 -> m6_225  [key=2, style=dotted];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_253  [key=2, style=dotted];
m6_242 -> m6_56  [key=2, style=dotted];
m6_242 -> m6_28  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_61  [key=2, style=dotted];
m6_243 -> m6_254  [key=2, style=dotted];
m6_243 -> m6_56  [key=2, style=dotted];
m6_243 -> m6_28  [key=2, style=dotted];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_61  [key=2, style=dotted];
m6_244 -> m6_255  [key=2, style=dotted];
m6_244 -> m6_56  [key=2, style=dotted];
m6_244 -> m6_28  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_237  [key=2, style=dotted];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_28  [key=2, style=dotted];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_28  [key=2, style=dotted];
m6_251 -> m6_238  [key=0, style=bold, color=blue];
m6_590 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m6_591 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_591 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_591 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_591 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_591 -> m6_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_591 -> m6_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_591 -> m6_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_592 -> m6_523  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_593 -> m6_523  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_593 -> m6_524  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_594 -> m6_537  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_595 -> m6_588  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=0, style=solid];
m7_51 -> m7_407  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_409  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_411  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_413  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_415  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_417  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_419  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_421  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_423  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_425  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_426  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_405  [key=0, style=solid];
m7_51 -> m7_406  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_8  [key=2, style=dotted];
m7_407 -> m7_427  [key=0, style=solid];
m7_407 -> m7_365  [key=2, style=dotted];
m7_409 -> m7_427  [key=0, style=solid];
m7_409 -> m7_110  [key=2, style=dotted];
m7_411 -> m7_427  [key=0, style=solid];
m7_411 -> m7_359  [key=2, style=dotted];
m7_413 -> m7_427  [key=0, style=solid];
m7_413 -> m7_352  [key=2, style=dotted];
m7_415 -> m7_427  [key=0, style=solid];
m7_415 -> m7_371  [key=2, style=dotted];
m7_417 -> m7_427  [key=0, style=solid];
m7_417 -> m7_352  [key=2, style=dotted];
m7_419 -> m7_427  [key=0, style=solid];
m7_419 -> m7_359  [key=2, style=dotted];
m7_421 -> m7_427  [key=0, style=solid];
m7_421 -> m7_399  [key=2, style=dotted];
m7_422 -> m7_423  [key=0, style=solid];
m7_422 -> m7_424  [key=0, style=solid];
m7_422 -> m7_178  [key=2, style=dotted];
m7_423 -> m7_427  [key=0, style=solid];
m7_423 -> m7_377  [key=2, style=dotted];
m7_425 -> m7_427  [key=0, style=solid];
m7_425 -> m7_391  [key=2, style=dotted];
m7_426 -> m7_427  [key=0, style=solid];
m7_426 -> m7_110  [key=2, style=dotted];
m7_406 -> m7_407  [key=0, style=solid];
m7_406 -> m7_408  [key=0, style=solid];
m7_406 -> m7_429  [key=2, style=dotted];
m7_408 -> m7_409  [key=0, style=solid];
m7_408 -> m7_410  [key=0, style=solid];
m7_408 -> m7_139  [key=2, style=dotted];
m7_410 -> m7_411  [key=0, style=solid];
m7_410 -> m7_412  [key=0, style=solid];
m7_410 -> m7_430  [key=2, style=dotted];
m7_412 -> m7_413  [key=0, style=solid];
m7_412 -> m7_414  [key=0, style=solid];
m7_412 -> m7_431  [key=2, style=dotted];
m7_414 -> m7_415  [key=0, style=solid];
m7_414 -> m7_416  [key=0, style=solid];
m7_414 -> m7_432  [key=2, style=dotted];
m7_416 -> m7_417  [key=0, style=solid];
m7_416 -> m7_418  [key=0, style=solid];
m7_416 -> m7_433  [key=2, style=dotted];
m7_418 -> m7_419  [key=0, style=solid];
m7_418 -> m7_420  [key=0, style=solid];
m7_418 -> m7_178  [key=2, style=dotted];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_422  [key=0, style=solid];
m7_420 -> m7_434  [key=2, style=dotted];
m7_405 -> m7_422  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_406  [key=0, style=solid];
m7_405 -> m7_408  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_410  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_412  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_414  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_416  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_418  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_420  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_405 -> m7_428  [key=2, style=dotted];
m7_405 -> m7_424  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_424 -> m7_425  [key=0, style=solid];
m7_424 -> m7_426  [key=0, style=solid];
m7_424 -> m7_178  [key=2, style=dotted];
m7_427 -> m7_51  [key=0, style=bold, color=blue];
m7_391 -> m7_392  [key=0, style=solid];
m7_391 -> m7_395  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_393 -> m7_136  [key=2, style=dotted];
m7_393 -> m7_394  [key=0, style=solid];
m7_392 -> m7_393  [key=0, style=solid];
m7_392 -> m7_398  [key=2, style=dotted];
m7_392 -> m7_394  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_392 -> m7_395  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_392 -> m7_396  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_394 -> m7_395  [key=0, style=solid];
m7_395 -> m7_396  [key=0, style=solid];
m7_395 -> m7_137  [key=2, style=dotted];
m7_395 -> m7_138  [key=2, style=dotted];
m7_396 -> m7_397  [key=0, style=solid];
m7_397 -> m7_391  [key=0, style=bold, color=blue];
m7_172 -> m7_173  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_105 -> m7_107  [key=0, style=solid];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_8  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_85  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_59 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_86  [key=2, style=dotted];
m7_59 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_59 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_59 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_59 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_59 -> m7_79  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_59 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_84 -> m7_85  [key=0, style=solid];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_6  [key=2, style=dotted];
m7_86 -> m7_17  [key=2, style=dotted];
m7_86 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label=employees];
m7_86 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=employees];
m7_86 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label=employees];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_8  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_8  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_8  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_8  [key=2, style=dotted];
m7_91 -> m7_84  [key=0, style=bold, color=blue];
m7_106 -> m7_107  [key=0, style=solid];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_1 -> m7_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_6  [key=2, style=dotted];
m7_2 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_0  [key=0, style=bold, color=blue];
m7_140 -> m7_198  [key=0, style=solid];
m7_140 -> m7_203  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_140 -> m7_204  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_8  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m7_19 -> m7_27  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m7_19 -> m7_19  [key=3, color=darkorchid, style=bold, label="Local variable string contextKey"];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_29  [key=2, style=dotted];
m7_20 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m7_20 -> m7_27  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_30  [key=2, style=dotted];
m7_21 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=inputContext];
m7_22 -> m7_18  [key=0, style=bold, color=blue];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_31  [key=2, style=dotted];
m7_141 -> m7_218  [key=0, style=solid];
m7_141 -> m7_219  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ConstructorInfo"];
m7_141 -> m7_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_232  [key=2, style=dotted];
m7_224 -> m7_226  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_221 -> m7_224  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_231  [key=2, style=dotted];
m7_220 -> m7_224  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_227  [key=0, style=solid];
m7_220 -> m7_222  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m7_222 -> m7_224  [key=0, style=solid];
m7_222 -> m7_223  [key=0, style=solid];
m7_223 -> m7_224  [key=0, style=solid];
m7_225 -> m7_220  [key=0, style=solid];
m7_225 -> m7_226  [key=0, style=solid];
m7_226 -> m7_220  [key=0, style=solid];
m7_226 -> m7_233  [key=2, style=dotted];
m7_218 -> m7_220  [key=1, style=dashed, color=darkseagreen4, label=constructorParameters];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_229  [key=2, style=dotted];
m7_219 -> m7_220  [key=0, style=solid];
m7_219 -> m7_226  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
m7_219 -> m7_230  [key=2, style=dotted];
m7_219 -> m7_227  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
m7_227 -> m7_228  [key=0, style=solid];
m7_228 -> m7_141  [key=0, style=bold, color=blue];
m7_142 -> m7_212  [key=0, style=solid];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_207  [key=2, style=dotted];
m7_212 -> m7_217  [key=2, style=dotted];
m7_212 -> m7_214  [key=1, style=dashed, color=darkseagreen4, label=constructors];
m7_214 -> m7_216  [key=0, style=solid];
m7_215 -> m7_216  [key=0, style=solid];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_215  [key=0, style=solid];
m7_216 -> m7_142  [key=0, style=bold, color=blue];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_288  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_282 -> m7_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_282 -> m7_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_282 -> m7_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_282 -> m7_296  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_282 -> m7_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_282 -> m7_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_301  [key=2, style=dotted];
m7_288 -> m7_290  [key=1, style=dashed, color=darkseagreen4, label=onSerializing];
m7_288 -> m7_291  [key=1, style=dashed, color=darkseagreen4, label=onSerialized];
m7_288 -> m7_292  [key=1, style=dashed, color=darkseagreen4, label=onSerialized];
m7_288 -> m7_293  [key=1, style=dashed, color=darkseagreen4, label=onDeserializing];
m7_288 -> m7_294  [key=1, style=dashed, color=darkseagreen4, label=onDeserializing];
m7_288 -> m7_295  [key=1, style=dashed, color=darkseagreen4, label=onDeserialized];
m7_288 -> m7_297  [key=1, style=dashed, color=darkseagreen4, label=onDeserialized];
m7_288 -> m7_298  [key=1, style=dashed, color=darkseagreen4, label=onError];
m7_288 -> m7_299  [key=1, style=dashed, color=darkseagreen4, label=onError];
m7_283 -> m7_284  [key=0, style=solid];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_138  [key=2, style=dotted];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_138  [key=2, style=dotted];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_138  [key=2, style=dotted];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_298  [key=0, style=solid];
m7_296 -> m7_108  [key=2, style=dotted];
m7_296 -> m7_109  [key=2, style=dotted];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_138  [key=2, style=dotted];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_138  [key=2, style=dotted];
m7_287 -> m7_288  [key=0, style=solid];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_291  [key=0, style=solid];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_293  [key=0, style=solid];
m7_293 -> m7_294  [key=0, style=solid];
m7_293 -> m7_295  [key=0, style=solid];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_298  [key=0, style=solid];
m7_298 -> m7_300  [key=0, style=solid];
m7_298 -> m7_299  [key=0, style=solid];
m7_284 -> m7_285  [key=0, style=solid];
m7_286 -> m7_287  [key=0, style=solid];
m7_285 -> m7_286  [key=0, style=solid];
m7_300 -> m7_282  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_10 -> m7_10  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_13  [key=2, style=dotted];
m7_11 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_12 -> m7_9  [key=0, style=bold, color=blue];
m7_516 -> m7_588  [key=0, style=solid];
m7_516 -> m7_590  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_516 -> m7_594  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_516 -> m7_595  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_516 -> m7_596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_591 -> m7_173  [key=2, style=dotted];
m7_591 -> m7_592  [key=0, style=solid];
m7_591 -> m7_593  [key=0, style=solid];
m7_596 -> m7_181  [key=2, style=dotted];
m7_596 -> m7_597  [key=0, style=solid];
m7_588 -> m7_591  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m7_588 -> m7_596  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m7_588 -> m7_589  [key=0, style=solid];
m7_588 -> m7_598  [key=2, style=dotted];
m7_588 -> m7_593  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m7_588 -> m7_595  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m7_590 -> m7_591  [key=0, style=solid];
m7_590 -> m7_596  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m7_590 -> m7_599  [key=2, style=dotted];
m7_590 -> m7_593  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m7_590 -> m7_595  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m7_594 -> m7_595  [key=0, style=solid];
m7_594 -> m7_601  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_595 -> m7_596  [key=0, style=solid];
m7_595 -> m7_514  [key=2, style=dotted];
m7_595 -> m7_597  [key=0, style=solid];
m7_589 -> m7_591  [key=0, style=solid];
m7_589 -> m7_590  [key=0, style=solid];
m7_592 -> m7_597  [key=0, style=solid];
m7_593 -> m7_180  [key=2, style=dotted];
m7_593 -> m7_594  [key=0, style=solid];
m7_593 -> m7_601  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m7_597 -> m7_516  [key=0, style=bold, color=blue];
m7_232 -> m7_237  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
m7_232 -> m7_234  [key=0, style=solid];
m7_232 -> m7_235  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
m7_232 -> m7_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_232 -> m7_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_256  [key=2, style=dotted];
m7_234 -> m7_237  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_255  [key=2, style=dotted];
m7_234 -> m7_238  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_239  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_241  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_242  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_243  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_244  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_245  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_246  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_247  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_248  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_249  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_250  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_251  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_252  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_234 -> m7_253  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_236 -> m7_237  [key=0, style=solid];
m7_238 -> m7_239  [key=0, style=solid];
m7_235 -> m7_236  [key=0, style=solid];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_253  [key=0, style=solid];
m7_241 -> m7_242  [key=0, style=solid];
m7_242 -> m7_243  [key=0, style=solid];
m7_243 -> m7_244  [key=0, style=solid];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_246  [key=0, style=solid];
m7_245 -> m7_246  [key=0, style=solid];
m7_246 -> m7_247  [key=0, style=solid];
m7_247 -> m7_248  [key=0, style=solid];
m7_248 -> m7_249  [key=0, style=solid];
m7_249 -> m7_250  [key=0, style=solid];
m7_250 -> m7_251  [key=0, style=solid];
m7_251 -> m7_252  [key=0, style=solid];
m7_252 -> m7_253  [key=0, style=solid];
m7_239 -> m7_240  [key=0, style=solid];
m7_253 -> m7_254  [key=0, style=solid];
m7_254 -> m7_232  [key=0, style=bold, color=blue];
m7_136 -> m7_264  [key=0, style=solid, color=green];
m7_136 -> m7_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_8  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid, color=green];
m7_264 -> m7_277  [key=2, style=dotted, color=green];
m7_264 -> m7_266  [key=1, style=dashed, color=green, label=containerAttribute];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_267  [key=0, style=solid];
m7_266 -> m7_270  [key=0, style=solid];
m7_273 -> m7_261  [key=2, style=dotted];
m7_273 -> m7_274  [key=0, style=solid];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_87  [key=2, style=dotted];
m7_269 -> m7_270  [key=0, style=solid];
m7_270 -> m7_271  [key=0, style=solid];
m7_270 -> m7_257  [key=2, style=dotted];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_278  [key=2, style=dotted];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_275  [key=0, style=solid];
m7_272 -> m7_279  [key=2, style=dotted];
m7_272 -> m7_280  [key=2, style=dotted];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_280  [key=2, style=dotted];
m7_274 -> m7_281  [key=2, style=dotted];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_282  [key=2, style=dotted];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_270  [key=0, style=solid];
m7_276 -> m7_136  [key=0, style=bold, color=blue];
m7_104 -> m7_108  [key=2, style=dotted];
m7_104 -> m7_109  [key=2, style=dotted];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_106  [key=0, style=solid];
m7_181 -> m7_182  [key=0, style=solid];
m7_182 -> m7_183  [key=0, style=solid];
m7_182 -> m7_6  [key=2, style=dotted];
m7_182 -> m7_17  [key=2, style=dotted];
m7_183 -> m7_184  [key=0, style=solid];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_8  [key=2, style=dotted];
m7_185 -> m7_181  [key=0, style=bold, color=blue];
m7_185 -> m7_465  [key=0, style=solid];
m7_185 -> m7_466  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_185 -> m7_467  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_139 -> m7_124  [key=0, style=bold, color=blue];
m7_186 -> m7_187  [key=0, style=solid];
m7_83 -> m7_68  [key=0, style=bold, color=blue];
m7_110 -> m7_111  [key=0, style=solid];
m7_112 -> m7_136  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_6  [key=2, style=dotted];
m7_112 -> m7_67  [key=2, style=dotted];
m7_112 -> m7_114  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_112 -> m7_115  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_112 -> m7_121  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_112 -> m7_122  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_135  [key=2, style=dotted];
m7_111 -> m7_115  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_116  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_117  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_119  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_120  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_122  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_124  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_126  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_127  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_128  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_130  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_132  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_111 -> m7_133  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_8  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_116  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_114 -> m7_117  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_137  [key=2, style=dotted];
m7_116 -> m7_138  [key=2, style=dotted];
m7_116 -> m7_8  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_140  [key=2, style=dotted];
m7_120 -> m7_122  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
m7_120 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
m7_120 -> m7_45  [key=2, style=dotted];
m7_120 -> m7_8  [key=2, style=dotted];
m7_123 -> m7_132  [key=0, style=solid];
m7_123 -> m7_141  [key=2, style=dotted];
m7_123 -> m7_138  [key=2, style=dotted];
m7_123 -> m7_108  [key=0, style=bold, color=blue];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_142  [key=2, style=dotted];
m7_128 -> m7_130  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m7_128 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m7_128 -> m7_33  [key=2, style=dotted];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_141  [key=2, style=dotted];
m7_131 -> m7_138  [key=2, style=dotted];
m7_131 -> m7_143  [key=2, style=dotted];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_143  [key=2, style=dotted];
m7_132 -> m7_134  [key=1, style=dashed, color=darkseagreen4, label=nested];
m7_132 -> m7_135  [key=1, style=dashed, color=darkseagreen4, label=nested];
m7_132 -> m7_136  [key=1, style=dashed, color=darkseagreen4, label=nested];
m7_132 -> m7_137  [key=1, style=dashed, color=darkseagreen4, label=nested];
m7_132 -> m7_138  [key=1, style=dashed, color=darkseagreen4, label=nested];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_82  [key=2, style=dotted];
m7_115 -> m7_118  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_115 -> m7_119  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_115 -> m7_120  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_139  [key=2, style=dotted];
m7_117 -> m7_119  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m7_117 -> m7_8  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_45  [key=2, style=dotted];
m7_119 -> m7_8  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_8  [key=2, style=dotted];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_127  [key=0, style=solid];
m7_126 -> m7_132  [key=0, style=solid];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_141  [key=2, style=dotted];
m7_126 -> m7_142  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_132  [key=0, style=solid];
m7_127 -> m7_46  [key=2, style=dotted];
m7_127 -> m7_129  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_8  [key=2, style=dotted];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_8  [key=2, style=dotted];
m7_118 -> m7_120  [key=0, style=solid];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_8  [key=2, style=dotted];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_124  [key=0, style=solid];
m7_121 -> m7_8  [key=2, style=dotted];
m7_129 -> m7_132  [key=0, style=solid];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_6  [key=2, style=dotted];
m7_129 -> m7_17  [key=2, style=dotted];
m7_129 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m7_125 -> m7_132  [key=0, style=solid];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_140  [key=2, style=dotted];
m7_125 -> m7_128  [key=1, style=dashed, color=darkseagreen4, label=listRef];
m7_134 -> m7_110  [key=0, style=bold, color=blue];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_8  [key=2, style=dotted];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_8  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_8  [key=2, style=dotted];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_8  [key=2, style=dotted];
m7_371 -> m7_372  [key=0, style=solid];
m7_373 -> m7_136  [key=2, style=dotted];
m7_373 -> m7_374  [key=0, style=solid];
m7_372 -> m7_373  [key=0, style=solid];
m7_372 -> m7_376  [key=2, style=dotted];
m7_372 -> m7_374  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_374 -> m7_375  [key=0, style=solid];
m7_375 -> m7_371  [key=0, style=bold, color=blue];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_155  [key=2, style=dotted];
m7_194 -> m7_196  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_194 -> m7_197  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_201  [key=0, style=solid];
m7_377 -> m7_378  [key=0, style=solid];
m7_379 -> m7_136  [key=2, style=dotted];
m7_379 -> m7_380  [key=0, style=solid];
m7_378 -> m7_379  [key=0, style=solid];
m7_378 -> m7_386  [key=2, style=dotted];
m7_378 -> m7_380  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_378 -> m7_383  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_378 -> m7_384  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_380 -> m7_381  [key=0, style=solid];
m7_380 -> m7_387  [key=2, style=dotted];
m7_380 -> m7_382  [key=1, style=dashed, color=darkseagreen4, label=constructorInfo];
m7_383 -> m7_384  [key=0, style=solid];
m7_383 -> m7_389  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m7_384 -> m7_385  [key=0, style=solid];
m7_381 -> m7_384  [key=0, style=solid];
m7_381 -> m7_382  [key=0, style=solid];
m7_382 -> m7_183  [key=2, style=dotted];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_389  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m7_385 -> m7_377  [key=0, style=bold, color=blue];
m7_48 -> m7_49  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_85  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_103  [key=2, style=dotted];
m7_94 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label=t1];
m7_94 -> m7_101  [key=1, style=dashed, color=darkseagreen4, label=t1];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_104  [key=2, style=dotted];
m7_95 -> m7_101  [key=1, style=dashed, color=darkseagreen4, label=t2];
m7_95 -> m7_97  [key=2, style=dotted];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_6  [key=2, style=dotted];
m7_96 -> m7_105  [key=2, style=dotted];
m7_96 -> m7_106  [key=2, style=dotted];
m7_96 -> m7_98  [key=1, style=dashed, color=darkseagreen4, label=employees];
m7_96 -> m7_99  [key=1, style=dashed, color=darkseagreen4, label=employees];
m7_96 -> m7_100  [key=1, style=dashed, color=darkseagreen4, label=employees];
m7_96 -> m7_94  [key=0, style=bold, color=blue];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_107  [key=2, style=dotted];
m7_101 -> m7_59  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_8  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_8  [key=2, style=dotted];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_8  [key=2, style=dotted];
m7_99 -> m7_97  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_8  [key=2, style=dotted];
m7_100 -> m7_98  [key=0, style=bold, color=blue];
m7_102 -> m7_92  [key=0, style=bold, color=blue];
m7_102 -> m7_104  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m7_102 -> m7_103  [key=0, style=solid];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_106  [key=0, style=solid];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_167  [key=0, style=solid];
m7_155 -> m7_174  [key=2, style=dotted];
m7_155 -> m7_157  [key=1, style=dashed, color=darkseagreen4, label=dictionaryType];
m7_54 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_54 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_54 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_54 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_54 -> m7_8  [key=2, style=dotted];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_58  [key=2, style=dotted];
m7_56 -> m7_59  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_83  [key=2, style=dotted];
m7_62 -> m7_84  [key=2, style=dotted];
m7_62 -> m7_85  [key=2, style=dotted];
m7_62 -> m7_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_62 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=defaultMembers];
m7_62 -> m7_13  [key=2, style=dotted];
m7_62 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_63  [key=0, style=solid];
m7_64 -> m7_88  [key=2, style=dotted];
m7_75 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m7_75 -> m7_80  [key=0, style=solid];
m7_75 -> m7_84  [key=2, style=dotted];
m7_75 -> m7_85  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_31  [key=2, style=dotted];
m7_61 -> m7_87  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m7_61 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_61 -> m7_61  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_8  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_82  [key=2, style=dotted];
m7_57 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
m7_57 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
m7_57 -> m7_48  [key=0, style=bold, color=blue];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_73  [key=0, style=solid];
m7_63 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_63 -> m7_60  [key=0, style=bold, color=blue];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_67  [key=0, style=solid];
m7_65 -> m7_89  [key=2, style=dotted];
m7_65 -> m7_6  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_80  [key=0, style=solid];
m7_74 -> m7_93  [key=2, style=dotted];
m7_74 -> m7_31  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_8  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_76  [key=0, style=solid];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_71  [key=0, style=solid];
m7_69 -> m7_91  [key=2, style=dotted];
m7_69 -> m7_30  [key=2, style=dotted];
m7_69 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=reference];
m7_69 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label=reference];
m7_58 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m7_58 -> m7_83  [key=2, style=dotted];
m7_58 -> m7_84  [key=2, style=dotted];
m7_58 -> m7_85  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_58 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m7_71 -> m7_63  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_92  [key=2, style=dotted];
m7_71 -> m7_31  [key=2, style=dotted];
m7_66 -> m7_63  [key=0, style=solid];
m7_66 -> m7_90  [key=2, style=dotted];
m7_66 -> m7_64  [key=0, style=bold, color=blue];
m7_68 -> m7_63  [key=0, style=solid];
m7_68 -> m7_90  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_70 -> m7_63  [key=0, style=solid];
m7_70 -> m7_90  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_31  [key=2, style=dotted];
m7_72 -> m7_63  [key=0, style=solid];
m7_72 -> m7_90  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_31  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_30  [key=2, style=dotted];
m7_73 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=child];
m7_73 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label=child];
m7_73 -> m7_77  [key=1, style=dashed, color=darkseagreen4, label=child];
m7_67 -> m7_69  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_91  [key=2, style=dotted];
m7_79 -> m7_76  [key=0, style=solid];
m7_79 -> m7_90  [key=2, style=dotted];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_6  [key=2, style=dotted];
m7_79 -> m7_17  [key=2, style=dotted];
m7_79 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_79 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_76 -> m7_80  [key=0, style=solid];
m7_76 -> m7_79  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_31  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_76  [key=0, style=solid];
m7_78 -> m7_33  [key=2, style=dotted];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_46  [key=2, style=dotted];
m7_77 -> m7_79  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_81 -> m7_54  [key=0, style=bold, color=blue];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_8  [key=2, style=dotted];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_159  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m7_156 -> m7_161  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m7_156 -> n71  [key=2, style=dotted];
m7_156 -> m7_160  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_157  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_157 -> m7_159  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m7_157 -> m7_161  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m7_157 -> n71  [key=2, style=dotted];
m7_157 -> m7_160  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_6  [key=2, style=dotted];
m7_158 -> m7_17  [key=2, style=dotted];
m7_158 -> m7_160  [key=0, style=solid];
m7_158 -> m7_176  [key=2, style=dotted];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_8  [key=2, style=dotted];
m7_159 -> m7_164  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_159 -> m7_177  [key=2, style=dotted];
m7_159 -> m7_161  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_160 -> m7_156  [key=0, style=bold, color=blue];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_167  [key=0, style=solid];
m7_160 -> m7_178  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_33 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_33 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_33 -> m7_34  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_0  [key=2, style=dotted];
m7_37 -> m7_49  [key=2, style=dotted];
m7_37 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label=key];
m7_37 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=key];
m7_37 -> m7_33  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_23  [key=2, style=dotted];
m7_38 -> m7_6  [key=2, style=dotted];
m7_38 -> m7_17  [key=2, style=dotted];
m7_38 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label=actual];
m7_38 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=actual];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_51  [key=2, style=dotted];
m7_40 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_40 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_40 -> m7_29  [key=2, style=dotted];
m7_40 -> m7_8  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_23  [key=2, style=dotted];
m7_42 -> m7_47  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_28  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_46  [key=2, style=dotted];
m7_36 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_46  [key=0, style=solid];
m7_39 -> m7_50  [key=2, style=dotted];
m7_39 -> m7_29  [key=2, style=dotted];
m7_39 -> m7_8  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_43 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=updatedCache];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_52  [key=2, style=dotted];
m7_43 -> m7_53  [key=2, style=dotted];
m7_43 -> m7_34  [key=0, style=bold, color=blue];
m7_34 -> m7_36  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_35 -> m7_47  [key=0, style=solid];
m7_35 -> m7_48  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_44  [key=2, style=dotted];
m7_35 -> m7_29  [key=2, style=dotted];
m7_35 -> m7_45  [key=2, style=dotted];
m7_47 -> m7_33  [key=0, style=bold, color=blue];
m7_352 -> m7_353  [key=0, style=solid];
m7_354 -> m7_136  [key=2, style=dotted];
m7_354 -> m7_355  [key=0, style=solid];
m7_353 -> m7_354  [key=0, style=solid];
m7_353 -> m7_358  [key=2, style=dotted];
m7_353 -> m7_355  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_353 -> m7_356  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_355 -> m7_356  [key=0, style=solid];
m7_356 -> m7_357  [key=0, style=solid];
m7_357 -> m7_352  [key=0, style=bold, color=blue];
m7_108 -> m7_109  [key=0, style=solid];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_168  [key=1, style=dashed, color=darkseagreen4, label=extensionDataSetter];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_155  [key=2, style=dotted];
m7_145 -> m7_168  [key=0, style=solid];
m7_145 -> m7_170  [key=2, style=dotted];
m7_145 -> m7_147  [key=1, style=dashed, color=darkseagreen4, label=baseType];
m7_145 -> m7_148  [key=1, style=dashed, color=darkseagreen4, label=baseType];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_46  [key=2, style=dotted];
m7_146 -> m7_148  [key=1, style=dashed, color=darkseagreen4, label=members];
m7_146 -> m7_149  [key=1, style=dashed, color=darkseagreen4, label=members];
m7_146 -> m7_86  [key=2, style=dotted];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_33  [key=2, style=dotted];
m7_147 -> m7_138  [key=2, style=dotted];
m7_147 -> m7_171  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_6  [key=2, style=dotted];
m7_148 -> m7_17  [key=2, style=dotted];
m7_148 -> m7_150  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_148 -> m7_151  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_148 -> m7_152  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_148 -> m7_153  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_148 -> m7_138  [key=2, style=dotted];
m7_148 -> m7_172  [key=2, style=dotted];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_8  [key=2, style=dotted];
m7_149 -> m7_153  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_149 -> m7_163  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_149 -> m7_145  [key=0, style=solid];
m7_149 -> m7_152  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_149 -> m7_162  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_149 -> m7_167  [key=1, style=dashed, color=darkseagreen4, label=member];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_8  [key=2, style=dotted];
m7_150 -> m7_92  [key=2, style=dotted];
m7_151 -> m7_152  [key=0, style=solid];
m7_151 -> m7_8  [key=2, style=dotted];
m7_151 -> m7_149  [key=0, style=solid];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_8  [key=2, style=dotted];
m7_152 -> m7_149  [key=0, style=solid];
m7_152 -> m7_88  [key=2, style=dotted];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_8  [key=2, style=dotted];
m7_153 -> m7_164  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_153 -> m7_173  [key=2, style=dotted];
m7_153 -> m7_155  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_153 -> m7_158  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_153 -> m7_161  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_154 -> m7_144  [key=0, style=bold, color=blue];
m7_154 -> m7_155  [key=0, style=solid];
m7_399 -> m7_400  [key=0, style=solid];
m7_401 -> m7_136  [key=2, style=dotted];
m7_401 -> m7_402  [key=0, style=solid];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_404  [key=2, style=dotted];
m7_400 -> m7_402  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_402 -> m7_403  [key=0, style=solid];
m7_403 -> m7_399  [key=0, style=bold, color=blue];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_8  [key=2, style=dotted];
m7_484 -> m7_501  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_484 -> m7_503  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_484 -> m7_509  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_484 -> m7_510  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_484 -> m7_498  [key=0, style=solid];
m7_484 -> m7_499  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_484 -> m7_500  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_484 -> m7_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m7_484 -> m7_505  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_484 -> m7_506  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_501 -> m7_502  [key=0, style=solid];
m7_501 -> m7_489  [key=2, style=dotted];
m7_503 -> m7_504  [key=0, style=solid];
m7_503 -> m7_256  [key=2, style=dotted];
m7_503 -> m7_505  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m7_503 -> m7_506  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m7_503 -> m7_510  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m7_509 -> m7_510  [key=0, style=solid];
m7_509 -> m7_515  [key=2, style=dotted];
m7_510 -> m7_511  [key=0, style=solid];
m7_510 -> m7_516  [key=2, style=dotted];
m7_498 -> m7_501  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_503  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_509  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_510  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_499  [key=0, style=solid];
m7_498 -> m7_255  [key=2, style=dotted];
m7_498 -> m7_500  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_505  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_506  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_507  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_508  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_498 -> m7_511  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_500 -> m7_501  [key=0, style=solid];
m7_502 -> m7_503  [key=0, style=solid];
m7_504 -> m7_505  [key=0, style=solid];
m7_504 -> m7_507  [key=0, style=solid];
m7_505 -> m7_506  [key=0, style=solid];
m7_505 -> m7_513  [key=2, style=dotted];
m7_506 -> m7_509  [key=0, style=solid];
m7_506 -> m7_514  [key=2, style=dotted];
m7_508 -> m7_509  [key=0, style=solid];
m7_511 -> m7_512  [key=0, style=solid];
m7_499 -> m7_173  [key=2, style=dotted];
m7_499 -> m7_500  [key=0, style=solid];
m7_507 -> m7_508  [key=0, style=solid];
m7_512 -> m7_484  [key=0, style=bold, color=blue];
m7_261 -> m7_262  [key=0, style=solid, color=green];
m7_262 -> m7_263  [key=0, style=solid, color=green];
m7_262 -> m7_182  [key=2, style=dotted, color=green];
m7_263 -> m7_261  [key=0, style=bold, color=blue];
m7_180 -> m7_175  [key=0, style=bold, color=blue];
m7_32 -> m7_28  [key=0, style=bold, color=blue];
m7_465 -> m7_466  [key=0, style=solid];
m7_465 -> m7_467  [key=0, style=solid];
m7_465 -> m7_469  [key=2, style=dotted];
m7_465 -> m7_470  [key=2, style=dotted];
m7_466 -> m7_468  [key=0, style=solid];
m7_467 -> m7_468  [key=0, style=solid];
m7_467 -> m7_471  [key=2, style=dotted];
m7_468 -> m7_185  [key=0, style=bold, color=blue];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_197  [key=2, style=dotted];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_195  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_193 -> m7_193  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_193 -> m7_187  [key=0, style=bold, color=blue];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_6  [key=2, style=dotted];
m7_195 -> m7_199  [key=2, style=dotted];
m7_198 -> m7_192  [key=0, style=bold, color=blue];
m7_198 -> m7_84  [key=2, style=dotted];
m7_198 -> m7_85  [key=2, style=dotted];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_207  [key=2, style=dotted];
m7_198 -> m7_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_198 -> m7_201  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m7_198 -> m7_202  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m7_515 -> m7_579  [key=0, style=solid];
m7_582 -> m7_183  [key=2, style=dotted];
m7_582 -> m7_583  [key=0, style=solid];
m7_582 -> m7_586  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m7_579 -> m7_179  [key=2, style=dotted];
m7_579 -> m7_582  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeMethod];
m7_579 -> m7_580  [key=0, style=solid];
m7_580 -> m7_582  [key=0, style=solid];
m7_580 -> m7_581  [key=0, style=solid];
m7_583 -> m7_584  [key=0, style=solid];
m7_583 -> m7_586  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_581 -> m7_584  [key=0, style=solid];
m7_584 -> m7_515  [key=0, style=bold, color=blue];
m7_301 -> m7_307  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_301 -> m7_302  [key=0, style=solid];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_337  [key=0, style=solid];
m7_307 -> m7_170  [key=2, style=dotted];
m7_307 -> m7_313  [key=1, style=dashed, color=darkseagreen4, label=baseType];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_334  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m7_306 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m7_313 -> m7_307  [key=0, style=solid];
m7_313 -> m7_314  [key=0, style=solid];
m7_313 -> m7_338  [key=2, style=dotted];
m7_313 -> m7_316  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_317  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_319  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_320  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_323  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_324  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_325  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_327  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_328  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_329  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_331  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_332  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_333  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_335  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_313 -> m7_336  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_317  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerializing];
m7_302 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_302 -> m7_303  [key=0, style=solid];
m7_302 -> m7_318  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_305 -> m7_330  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_334 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m7_334 -> m7_86  [key=2, style=dotted];
m7_334 -> m7_334  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m7_334 -> m7_335  [key=0, style=solid];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_333  [key=1, style=dashed, color=darkseagreen4, label=currentOnError];
m7_333 -> m7_313  [key=0, style=solid];
m7_333 -> m7_334  [key=0, style=solid];
m7_333 -> m7_333  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m7_333 -> m7_339  [key=2, style=dotted];
m7_314 -> m7_313  [key=0, style=solid];
m7_314 -> m7_315  [key=0, style=solid];
m7_336 -> m7_313  [key=0, style=solid];
m7_316 -> m7_333  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m7_316 -> m7_317  [key=0, style=solid];
m7_316 -> m7_229  [key=2, style=dotted];
m7_316 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m7_316 -> m7_325  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m7_316 -> m7_329  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m7_317 -> m7_317  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_321  [key=0, style=solid];
m7_317 -> m7_339  [key=2, style=dotted];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_340  [key=2, style=dotted];
m7_319 -> m7_90  [key=2, style=dotted];
m7_320 -> m7_321  [key=0, style=solid];
m7_321 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_325  [key=0, style=solid];
m7_321 -> m7_339  [key=2, style=dotted];
m7_323 -> m7_324  [key=0, style=solid];
m7_323 -> m7_340  [key=2, style=dotted];
m7_323 -> m7_90  [key=2, style=dotted];
m7_324 -> m7_325  [key=0, style=solid];
m7_325 -> m7_325  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_329  [key=0, style=solid];
m7_325 -> m7_339  [key=2, style=dotted];
m7_327 -> m7_328  [key=0, style=solid];
m7_327 -> m7_340  [key=2, style=dotted];
m7_327 -> m7_90  [key=2, style=dotted];
m7_328 -> m7_329  [key=0, style=solid];
m7_329 -> m7_333  [key=0, style=solid];
m7_329 -> m7_329  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_339  [key=2, style=dotted];
m7_331 -> m7_332  [key=0, style=solid];
m7_331 -> m7_340  [key=2, style=dotted];
m7_331 -> m7_90  [key=2, style=dotted];
m7_332 -> m7_333  [key=0, style=solid];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_341  [key=2, style=dotted];
m7_335 -> m7_90  [key=2, style=dotted];
m7_309 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerialized];
m7_309 -> m7_310  [key=0, style=solid];
m7_303 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_322  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_318 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_318 -> m7_86  [key=2, style=dotted];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_318  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_304 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_326  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_322 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_322 -> m7_86  [key=2, style=dotted];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_322  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_326 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_326 -> m7_86  [key=2, style=dotted];
m7_326 -> m7_327  [key=0, style=solid];
m7_326 -> m7_326  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_330 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_330 -> m7_86  [key=2, style=dotted];
m7_330 -> m7_331  [key=0, style=solid];
m7_330 -> m7_330  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m7_311 -> m7_312  [key=0, style=solid];
m7_311 -> m7_329  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserialized];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_317  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m7_310 -> m7_325  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserializing];
m7_310 -> m7_311  [key=0, style=solid];
m7_337 -> m7_301  [key=0, style=bold, color=blue];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_8  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m7_28 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m7_28 -> m7_18  [key=0, style=bold, color=blue];
m7_30 -> m7_32  [key=0, style=solid];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_10  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_6  [key=2, style=dotted];
m7_50 -> m7_17  [key=2, style=dotted];
m7_50 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m7_50 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m7_50 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m7_50 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m7_50 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_8  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_8  [key=2, style=dotted];
m7_605 -> m7_606  [key=0, style=solid];
m7_606 -> m7_607  [key=0, style=solid];
m7_606 -> m7_577  [key=2, style=dotted];
m7_607 -> m7_605  [key=0, style=bold, color=blue];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_165  [key=1, style=dashed, color=darkseagreen4, label=addMethod];
m7_161 -> m7_179  [key=2, style=dotted];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_6  [key=2, style=dotted];
m7_162 -> m7_17  [key=2, style=dotted];
m7_162 -> m7_164  [key=1, style=dashed, color=darkseagreen4, label=actual];
m7_162 -> m7_165  [key=1, style=dashed, color=darkseagreen4, label=actual];
m7_162 -> m7_166  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m7_162 -> m7_180  [key=2, style=dotted];
m7_162 -> m7_188  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_29  [key=2, style=dotted];
m7_163 -> m7_8  [key=2, style=dotted];
m7_163 -> m7_181  [key=2, style=dotted];
m7_163 -> m7_166  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m7_163 -> m7_191  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> m7_29  [key=2, style=dotted];
m7_164 -> m7_8  [key=2, style=dotted];
m7_164 -> m7_182  [key=2, style=dotted];
m7_164 -> m7_166  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m7_164 -> m7_190  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_167  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_165 -> m7_168  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_165 -> m7_183  [key=2, style=dotted];
m7_165 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_8  [key=2, style=dotted];
m7_166 -> m7_149  [key=0, style=solid];
m7_166 -> m7_188  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_166 -> m7_191  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_166 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_166 -> m7_168  [key=1, style=dashed, color=darkseagreen4, label=extensionDataSetter];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_8  [key=2, style=dotted];
m7_167 -> m7_169  [key=0, style=solid];
m7_167 -> m7_184  [key=2, style=dotted];
m7_167 -> m7_185  [key=2, style=dotted];
m7_167 -> m7_186  [key=2, style=dotted];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_8  [key=2, style=dotted];
m7_169 -> m7_161  [key=0, style=bold, color=blue];
m7_169 -> m7_143  [key=0, style=bold, color=blue];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_8  [key=2, style=dotted];
m7_27 -> m7_23  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_32  [key=2, style=dotted];
m7_24 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=serializedString];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_6  [key=2, style=dotted];
m7_23 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerSettings];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_7  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_33  [key=2, style=dotted];
m7_25 -> m7_27  [key=0, style=solid];
m7_143 -> m7_145  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_143 -> m7_144  [key=0, style=solid];
m7_107 -> m7_101  [key=0, style=bold, color=blue];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_205  [key=0, style=solid];
m7_204 -> m7_206  [key=0, style=solid];
m7_204 -> m7_208  [key=2, style=dotted];
m7_201 -> m7_203  [key=0, style=solid];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_202 -> m7_206  [key=0, style=solid];
m7_200 -> m7_206  [key=0, style=solid];
m7_200 -> m7_184  [key=2, style=dotted];
m7_200 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_205 -> m7_206  [key=0, style=solid];
m7_206 -> m7_140  [key=0, style=bold, color=blue];
m7_359 -> m7_360  [key=0, style=solid];
m7_361 -> m7_136  [key=2, style=dotted];
m7_361 -> m7_362  [key=0, style=solid];
m7_360 -> m7_361  [key=0, style=solid];
m7_360 -> m7_364  [key=2, style=dotted];
m7_360 -> m7_362  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_362 -> m7_363  [key=0, style=solid];
m7_363 -> m7_359  [key=0, style=bold, color=blue];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_6  [key=2, style=dotted];
m7_171 -> m7_17  [key=2, style=dotted];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_8  [key=2, style=dotted];
m7_137 -> m7_472  [key=0, style=solid];
m7_137 -> m7_477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m7_137 -> m7_475  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_577 -> m7_603  [key=0, style=solid];
m7_603 -> m7_604  [key=0, style=solid];
m7_604 -> m7_577  [key=0, style=bold, color=blue];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_8  [key=2, style=dotted];
m7_174 -> m7_170  [key=0, style=bold, color=blue];
m7_600 -> m7_601  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_6  [key=2, style=dotted];
m7_15 -> m7_17  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_195  [key=2, style=dotted];
m7_190 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m7_190 -> m7_59  [key=2, style=dotted];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_196  [key=2, style=dotted];
m7_191 -> m7_186  [key=0, style=bold, color=blue];
m7_188 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_194  [key=2, style=dotted];
m7_188 -> m7_8  [key=2, style=dotted];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_192  [key=0, style=solid];
m7_189 -> m7_6  [key=2, style=dotted];
m7_189 -> m7_17  [key=2, style=dotted];
m7_187 -> m7_191  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_187 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_6  [key=2, style=dotted];
m7_187 -> m7_17  [key=2, style=dotted];
m7_389 -> m7_197  [key=2, style=dotted];
m7_389 -> m7_390  [key=0, style=solid];
m7_210 -> m7_88  [key=2, style=dotted];
m7_210 -> m7_211  [key=0, style=solid];
m7_586 -> m7_197  [key=2, style=dotted];
m7_586 -> m7_587  [key=0, style=solid];
m7_601 -> m7_194  [key=2, style=dotted];
m7_601 -> m7_602  [key=0, style=solid];
m7_388 -> m7_389  [key=0, style=solid];
m7_390 -> m7_388  [key=0, style=bold, color=blue];
m7_209 -> m7_210  [key=0, style=solid];
m7_211 -> m7_209  [key=0, style=bold, color=blue];
m7_486 -> m7_487  [key=0, style=solid];
m7_585 -> m7_586  [key=0, style=solid];
m7_587 -> m7_585  [key=0, style=bold, color=blue];
m7_602 -> m7_600  [key=0, style=bold, color=blue];
m7_487 -> m7_488  [key=0, style=solid];
m7_488 -> m7_486  [key=0, style=bold, color=blue];
m7_256 -> m7_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_517  [key=0, style=solid];
m7_256 -> m7_518  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_256 -> m7_523  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_256 -> m7_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_531  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_256 -> m7_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_536  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_537  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_545  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_256 -> m7_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m7_256 -> m7_548  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_256 -> m7_549  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_552  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_553  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_256 -> m7_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_556  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_558  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_559  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_561  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_256 -> m7_570  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m7_256 -> m7_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m7_532 -> m7_533  [key=0, style=solid];
m7_532 -> m7_577  [key=2, style=dotted];
m7_566 -> m7_567  [key=0, style=solid];
m7_566 -> m7_568  [key=0, style=solid];
m7_517 -> m7_87  [key=2, style=dotted];
m7_517 -> m7_518  [key=0, style=solid];
m7_517 -> m7_520  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m7_531 -> m7_532  [key=0, style=solid];
m7_530 -> m7_532  [key=0, style=solid];
m7_528 -> m7_532  [key=0, style=solid];
m7_533 -> m7_534  [key=0, style=solid];
m7_565 -> m7_566  [key=0, style=solid];
m7_565 -> m7_575  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m7_567 -> m7_568  [key=0, style=solid];
m7_567 -> m7_575  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m7_568 -> m7_569  [key=0, style=solid];
m7_568 -> m7_570  [key=0, style=solid];
m7_518 -> m7_519  [key=0, style=solid];
m7_518 -> m7_520  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m7_518 -> m7_521  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m7_520 -> m7_521  [key=0, style=solid];
m7_520 -> m7_522  [key=0, style=solid];
m7_523 -> m7_528  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_568  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_524  [key=0, style=solid];
m7_523 -> m7_91  [key=2, style=dotted];
m7_523 -> m7_527  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_535  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_536  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_537  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_538  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_556  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_557  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_558  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_559  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_560  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_561  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_562  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_563  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_523 -> m7_564  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m7_525 -> m7_526  [key=0, style=solid];
m7_536 -> m7_537  [key=0, style=solid];
m7_537 -> m7_538  [key=0, style=solid];
m7_538 -> m7_539  [key=0, style=solid];
m7_541 -> m7_542  [key=0, style=solid];
m7_542 -> m7_543  [key=0, style=solid];
m7_543 -> m7_544  [key=0, style=solid];
m7_545 -> m7_546  [key=0, style=solid];
m7_545 -> m7_91  [key=2, style=dotted];
m7_545 -> m7_549  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
m7_545 -> m7_550  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
m7_546 -> m7_547  [key=0, style=solid];
m7_546 -> m7_550  [key=0, style=solid];
m7_548 -> m7_549  [key=0, style=solid];
m7_548 -> m7_91  [key=2, style=dotted];
m7_549 -> m7_551  [key=0, style=solid];
m7_550 -> m7_551  [key=0, style=solid];
m7_551 -> m7_260  [key=2, style=dotted];
m7_551 -> m7_552  [key=0, style=solid];
m7_552 -> m7_260  [key=2, style=dotted];
m7_552 -> m7_553  [key=0, style=solid];
m7_553 -> m7_554  [key=0, style=solid];
m7_553 -> m7_91  [key=2, style=dotted];
m7_553 -> m7_555  [key=1, style=dashed, color=darkseagreen4, label=defaultValueAttribute];
m7_555 -> m7_556  [key=0, style=solid];
m7_556 -> m7_557  [key=0, style=solid];
m7_557 -> m7_558  [key=0, style=solid];
m7_558 -> m7_559  [key=0, style=solid];
m7_559 -> m7_560  [key=0, style=solid];
m7_560 -> m7_561  [key=0, style=solid];
m7_561 -> m7_562  [key=0, style=solid];
m7_562 -> m7_563  [key=0, style=solid];
m7_562 -> m7_578  [key=2, style=dotted];
m7_563 -> m7_564  [key=0, style=solid];
m7_564 -> m7_565  [key=0, style=solid];
m7_570 -> m7_571  [key=0, style=solid];
m7_570 -> m7_572  [key=0, style=solid];
m7_574 -> m7_575  [key=0, style=solid];
m7_529 -> m7_531  [key=0, style=solid];
m7_529 -> m7_530  [key=0, style=solid];
m7_521 -> m7_530  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_521 -> m7_523  [key=0, style=solid];
m7_521 -> m7_541  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_521 -> m7_542  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_521 -> m7_543  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_521 -> m7_529  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_521 -> m7_576  [key=2, style=dotted];
m7_521 -> m7_540  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_521 -> m7_572  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_522 -> m7_530  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_522 -> m7_523  [key=0, style=solid];
m7_522 -> m7_541  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_522 -> m7_542  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_522 -> m7_543  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_522 -> m7_529  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_522 -> m7_540  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_522 -> m7_572  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m7_527 -> m7_528  [key=0, style=solid];
m7_527 -> m7_529  [key=0, style=solid];
m7_534 -> m7_550  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m7_534 -> m7_535  [key=0, style=solid];
m7_569 -> m7_575  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m7_569 -> m7_570  [key=0, style=solid];
m7_519 -> m7_520  [key=0, style=solid];
m7_572 -> m7_575  [key=0, style=solid];
m7_572 -> m7_573  [key=0, style=solid];
m7_571 -> m7_575  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m7_571 -> m7_572  [key=0, style=solid];
m7_573 -> m7_575  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m7_573 -> m7_574  [key=0, style=solid];
m7_524 -> m7_525  [key=0, style=solid];
m7_524 -> m7_526  [key=0, style=solid];
m7_535 -> m7_536  [key=0, style=solid];
m7_535 -> m7_540  [key=0, style=solid];
m7_526 -> m7_527  [key=0, style=solid];
m7_539 -> m7_545  [key=0, style=solid];
m7_539 -> m7_550  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m7_540 -> m7_541  [key=0, style=solid];
m7_540 -> m7_545  [key=0, style=solid];
m7_544 -> m7_545  [key=0, style=solid];
m7_544 -> m7_550  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m7_547 -> m7_548  [key=0, style=solid];
m7_554 -> m7_555  [key=0, style=solid];
m7_554 -> m7_556  [key=0, style=solid];
m7_575 -> m7_256  [key=0, style=bold, color=blue];
m7_175 -> m7_176  [key=0, style=solid, color=red];
m7_176 -> m7_177  [key=0, style=solid, color=red];
m7_176 -> m7_6  [key=2, style=dotted, color=red];
m7_176 -> m7_7  [key=2, style=dotted, color=red];
m7_176 -> m7_178  [key=1, style=dashed, color=red, label=actual];
m7_176 -> m7_179  [key=1, style=dashed, color=red, label=actual];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_111  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m7_365 -> m7_366  [key=0, style=solid];
m7_367 -> m7_136  [key=2, style=dotted];
m7_367 -> m7_368  [key=0, style=solid];
m7_366 -> m7_367  [key=0, style=solid];
m7_366 -> m7_370  [key=2, style=dotted];
m7_366 -> m7_368  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_368 -> m7_369  [key=0, style=solid];
m7_369 -> m7_365  [key=0, style=bold, color=blue];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_342  [key=0, style=solid];
m7_170 -> m7_343  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_8  [key=2, style=dotted];
m7_434 -> m7_435  [key=0, style=solid];
m7_434 -> m7_439  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_436 -> m7_49  [key=2, style=dotted];
m7_436 -> m7_437  [key=0, style=solid];
m7_436 -> m7_439  [key=0, style=solid];
m7_435 -> m7_436  [key=0, style=solid];
m7_435 -> m7_443  [key=2, style=dotted];
m7_435 -> m7_437  [key=1, style=dashed, color=darkseagreen4, label=converter];
m7_437 -> m7_438  [key=0, style=solid];
m7_437 -> m7_439  [key=0, style=solid];
m7_437 -> m7_444  [key=2, style=dotted];
m7_439 -> m7_432  [key=2, style=dotted];
m7_439 -> m7_440  [key=0, style=solid];
m7_439 -> m7_441  [key=0, style=solid];
m7_438 -> m7_442  [key=0, style=solid];
m7_440 -> m7_442  [key=0, style=solid];
m7_441 -> m7_442  [key=0, style=solid];
m7_442 -> m7_434  [key=0, style=bold, color=blue];
m7_339 -> m7_445  [key=0, style=solid];
m7_339 -> m7_447  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_448  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_449  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m7_339 -> m7_450  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_451  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_452  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_453  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_454  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_455  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_339 -> m7_456  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m7_339 -> m7_457  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_458  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m7_339 -> m7_459  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m7_339 -> m7_460  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_445 -> m7_88  [key=2, style=dotted];
m7_445 -> m7_446  [key=0, style=solid];
m7_445 -> m7_447  [key=0, style=solid];
m7_446 -> m7_462  [key=0, style=solid];
m7_447 -> m7_448  [key=0, style=solid];
m7_447 -> m7_449  [key=0, style=solid];
m7_448 -> m7_184  [key=2, style=dotted];
m7_448 -> m7_185  [key=2, style=dotted];
m7_448 -> m7_462  [key=0, style=solid];
m7_448 -> m7_463  [key=2, style=dotted];
m7_450 -> m7_184  [key=2, style=dotted];
m7_450 -> m7_185  [key=2, style=dotted];
m7_450 -> m7_462  [key=0, style=solid];
m7_450 -> m7_463  [key=2, style=dotted];
m7_452 -> m7_184  [key=2, style=dotted];
m7_452 -> m7_185  [key=2, style=dotted];
m7_452 -> m7_462  [key=0, style=solid];
m7_452 -> m7_464  [key=2, style=dotted];
m7_454 -> m7_184  [key=2, style=dotted];
m7_454 -> m7_185  [key=2, style=dotted];
m7_454 -> m7_186  [key=2, style=dotted];
m7_454 -> m7_462  [key=0, style=solid];
m7_457 -> m7_184  [key=2, style=dotted];
m7_457 -> m7_185  [key=2, style=dotted];
m7_457 -> m7_462  [key=0, style=solid];
m7_457 -> m7_463  [key=2, style=dotted];
m7_459 -> m7_184  [key=2, style=dotted];
m7_459 -> m7_185  [key=2, style=dotted];
m7_459 -> m7_462  [key=0, style=solid];
m7_459 -> m7_464  [key=2, style=dotted];
m7_449 -> m7_450  [key=0, style=solid];
m7_449 -> m7_451  [key=0, style=solid];
m7_451 -> m7_452  [key=0, style=solid];
m7_451 -> m7_453  [key=0, style=solid];
m7_453 -> m7_454  [key=0, style=solid];
m7_453 -> m7_455  [key=0, style=solid];
m7_455 -> m7_456  [key=0, style=solid];
m7_455 -> m7_458  [key=0, style=solid];
m7_456 -> m7_457  [key=0, style=solid];
m7_456 -> m7_460  [key=0, style=solid];
m7_458 -> m7_459  [key=0, style=solid];
m7_458 -> m7_460  [key=0, style=solid];
m7_460 -> m7_462  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m7_460 -> m7_461  [key=0, style=solid];
m7_461 -> m7_462  [key=0, style=solid];
m7_462 -> m7_339  [key=0, style=bold, color=blue];
m7_257 -> m7_258  [key=0, style=solid];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_260  [key=2, style=dotted];
m7_259 -> m7_257  [key=0, style=bold, color=blue];
m7_489 -> m7_490  [key=0, style=solid];
m7_489 -> m7_492  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_489 -> m7_493  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m7_491 -> m7_492  [key=0, style=solid];
m7_491 -> m7_493  [key=0, style=solid];
m7_490 -> m7_491  [key=0, style=solid];
m7_492 -> m7_494  [key=0, style=solid];
m7_492 -> m7_496  [key=2, style=dotted];
m7_493 -> m7_494  [key=0, style=solid];
m7_493 -> m7_497  [key=2, style=dotted];
m7_494 -> m7_495  [key=0, style=solid];
m7_495 -> m7_489  [key=0, style=bold, color=blue];
m7_342 -> m7_86  [key=2, style=dotted];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_345  [key=1, style=dashed, color=darkseagreen4, label=ret];
m7_342 -> m7_347  [key=1, style=dashed, color=darkseagreen4, label=ret];
m7_342 -> m7_348  [key=1, style=dashed, color=darkseagreen4, label=ret];
m7_343 -> m7_344  [key=0, style=solid];
m7_343 -> m7_345  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_343 -> m7_346  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_348 -> m7_349  [key=0, style=solid];
m7_345 -> m7_90  [key=2, style=dotted];
m7_345 -> m7_346  [key=0, style=solid];
m7_347 -> m7_348  [key=0, style=solid];
m7_347 -> m7_351  [key=2, style=dotted];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_347  [key=0, style=solid];
m7_346 -> m7_344  [key=0, style=solid];
m7_346 -> m7_346  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_346 -> m7_350  [key=2, style=dotted];
m7_349 -> m7_170  [key=0, style=bold, color=blue];
m7_472 -> m7_473  [key=0, style=solid];
m7_472 -> m7_54  [key=2, style=dotted];
m7_472 -> m7_476  [key=1, style=dashed, color=darkseagreen4, label=members];
m7_477 -> m7_478  [key=0, style=solid];
m7_477 -> m7_484  [key=2, style=dotted];
m7_477 -> m7_479  [key=1, style=dashed, color=darkseagreen4, label=property];
m7_473 -> m7_474  [key=0, style=solid];
m7_473 -> m7_475  [key=0, style=solid];
m7_476 -> m7_477  [key=0, style=solid];
m7_476 -> m7_480  [key=0, style=solid];
m7_478 -> m7_476  [key=0, style=solid];
m7_478 -> m7_479  [key=0, style=solid];
m7_479 -> m7_476  [key=0, style=solid];
m7_479 -> m7_233  [key=2, style=dotted];
m7_475 -> m7_476  [key=0, style=solid];
m7_475 -> m7_479  [key=1, style=dashed, color=darkseagreen4, label=properties];
m7_475 -> m7_230  [key=2, style=dotted];
m7_475 -> m7_480  [key=1, style=dashed, color=darkseagreen4, label=properties];
m7_474 -> m7_482  [key=0, style=solid];
m7_474 -> m7_483  [key=2, style=dotted];
m7_480 -> m7_481  [key=0, style=solid];
m7_480 -> m7_485  [key=2, style=dotted];
m7_480 -> m7_217  [key=2, style=dotted];
m7_480 -> m7_486  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_481 -> m7_482  [key=0, style=solid];
m7_482 -> m7_137  [key=0, style=bold, color=blue];
m7_611 -> m7_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_394  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_611 -> m7_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m7_613 -> m7_190  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m7_614 -> m7_191  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m7_615 -> m7_192  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
m7_612 -> m7_188  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m7_616 -> m7_389  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m7_617 -> m7_586  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m7_618 -> m7_601  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_202  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_199 -> m8_204  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_199 -> m8_209  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_199 -> m8_213  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_13  [key=2, style=dotted];
m8_200 -> m8_14  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_209  [key=0, style=solid];
m8_202 -> m8_133  [key=2, style=dotted];
m8_202 -> m8_205  [key=1, style=dashed, color=darkseagreen4, label=genericDictionaryType];
m8_204 -> m8_214  [key=0, style=solid];
m8_204 -> m8_196  [key=2, style=dotted];
m8_204 -> m8_156  [key=2, style=dotted];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_213  [key=0, style=solid];
m8_209 -> m8_198  [key=2, style=dotted];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_196  [key=2, style=dotted];
m8_213 -> m8_156  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_205  [key=0, style=solid];
m8_203 -> m8_154  [key=2, style=dotted];
m8_205 -> m8_206  [key=0, style=solid];
m8_205 -> n71  [key=2, style=dotted];
m8_205 -> m8_207  [key=1, style=dashed, color=darkseagreen4, label=dictionaryGenericArguments];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m8_208 -> m8_214  [key=0, style=solid];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m8_211 -> m8_212  [key=0, style=solid];
m8_211 -> m8_214  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m8_212 -> m8_214  [key=0, style=solid];
m8_214 -> m8_199  [key=0, style=bold, color=blue];
m8_543 -> m8_544  [key=0, style=solid];
m8_543 -> m8_546  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_543 -> m8_574  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_543 -> m8_576  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_543 -> m8_25  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m8_543 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m8_543 -> m8_60  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m8_543 -> m8_559  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m8_543 -> m8_561  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m8_543 -> m8_563  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m8_543 -> m8_565  [key=3, color=darkorchid, style=bold, label="method methodReturn object GetDefaultValue"];
m8_544 -> m8_545  [key=0, style=solid];
m8_544 -> m8_546  [key=0, style=solid];
m8_544 -> m8_90  [key=2, style=dotted];
m8_546 -> m8_547  [key=0, style=solid];
m8_546 -> m8_549  [key=0, style=solid];
m8_546 -> m8_557  [key=0, style=solid];
m8_546 -> m8_560  [key=0, style=solid];
m8_546 -> m8_562  [key=0, style=solid];
m8_546 -> m8_564  [key=0, style=solid];
m8_546 -> m8_566  [key=0, style=solid];
m8_546 -> m8_568  [key=0, style=solid];
m8_546 -> m8_570  [key=0, style=solid];
m8_546 -> m8_572  [key=0, style=solid];
m8_546 -> m8_578  [key=2, style=dotted];
m8_574 -> m8_575  [key=0, style=solid];
m8_574 -> m8_576  [key=0, style=solid];
m8_574 -> m8_107  [key=2, style=dotted];
m8_576 -> m8_577  [key=0, style=solid];
m8_576 -> m8_583  [key=2, style=dotted];
m8_545 -> m8_577  [key=0, style=solid];
m8_547 -> m8_548  [key=0, style=solid];
m8_549 -> m8_550  [key=0, style=solid];
m8_557 -> m8_558  [key=0, style=solid];
m8_560 -> m8_561  [key=0, style=solid];
m8_562 -> m8_563  [key=0, style=solid];
m8_564 -> m8_565  [key=0, style=solid];
m8_566 -> m8_567  [key=0, style=solid];
m8_568 -> m8_569  [key=0, style=solid];
m8_570 -> m8_571  [key=0, style=solid];
m8_572 -> m8_573  [key=0, style=solid];
m8_548 -> m8_577  [key=0, style=solid];
m8_550 -> m8_551  [key=0, style=solid];
m8_551 -> m8_552  [key=0, style=solid];
m8_552 -> m8_553  [key=0, style=solid];
m8_553 -> m8_554  [key=0, style=solid];
m8_554 -> m8_555  [key=0, style=solid];
m8_555 -> m8_556  [key=0, style=solid];
m8_556 -> m8_577  [key=0, style=solid];
m8_558 -> m8_559  [key=0, style=solid];
m8_559 -> m8_577  [key=0, style=solid];
m8_561 -> m8_577  [key=0, style=solid];
m8_563 -> m8_577  [key=0, style=solid];
m8_565 -> m8_577  [key=0, style=solid];
m8_567 -> m8_577  [key=0, style=solid];
m8_567 -> m8_579  [key=2, style=dotted];
m8_569 -> m8_577  [key=0, style=solid];
m8_569 -> m8_580  [key=2, style=dotted];
m8_571 -> m8_577  [key=0, style=solid];
m8_571 -> m8_581  [key=2, style=dotted];
m8_573 -> m8_577  [key=0, style=solid];
m8_573 -> m8_582  [key=2, style=dotted];
m8_575 -> m8_577  [key=0, style=solid];
m8_577 -> m8_543  [key=0, style=bold, color=blue];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_273  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_270 -> m8_274  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_270 -> m8_280  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_270 -> m8_283  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_270 -> m8_285  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_270 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanReadMemberValue"];
m8_270 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanReadMemberValue"];
m8_271 -> m8_272  [key=0, style=solid];
m8_271 -> m8_279  [key=0, style=solid];
m8_271 -> m8_286  [key=0, style=solid];
m8_271 -> m8_228  [key=2, style=dotted];
m8_273 -> m8_274  [key=0, style=solid];
m8_273 -> m8_276  [key=1, style=dashed, color=darkseagreen4, label=fieldInfo];
m8_274 -> m8_275  [key=0, style=solid];
m8_274 -> m8_276  [key=0, style=solid];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_285  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_285  [key=0, style=solid];
m8_285 -> m8_287  [key=0, style=solid];
m8_285 -> m8_288  [key=2, style=dotted];
m8_272 -> m8_273  [key=0, style=solid];
m8_279 -> m8_280  [key=0, style=solid];
m8_286 -> m8_287  [key=0, style=solid];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_278  [key=0, style=solid];
m8_275 -> m8_287  [key=0, style=solid];
m8_277 -> m8_287  [key=0, style=solid];
m8_278 -> m8_287  [key=0, style=solid];
m8_281 -> m8_282  [key=0, style=solid];
m8_281 -> m8_283  [key=0, style=solid];
m8_282 -> m8_287  [key=0, style=solid];
m8_284 -> m8_287  [key=0, style=solid];
m8_287 -> m8_270  [key=0, style=bold, color=blue];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationBinder"];
m8_39 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_39 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_39 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"];
m8_39 -> m8_54  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetTypeName"];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_45  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_53  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m8_45 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_49  [key=0, style=solid];
m8_46 -> m8_51  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_44 -> m8_46  [key=0, style=solid];
m8_44 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m8_44 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label=fullyQualifiedTypeName];
m8_48 -> m8_52  [key=0, style=solid];
m8_48 -> m8_54  [key=2, style=dotted];
m8_50 -> m8_52  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_55  [key=2, style=dotted];
m8_52 -> m8_39  [key=0, style=bold, color=blue];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_131  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_129 -> m8_133  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m8_130 -> m8_131  [key=0, style=solid];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_133  [key=2, style=dotted];
m8_132 -> m8_129  [key=0, style=bold, color=blue];
m8_381 -> m8_384  [key=0, style=solid];
m8_381 -> m8_385  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_381 -> m8_388  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_381 -> m8_393  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_381 -> m8_396  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_381 -> m8_399  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_381 -> m8_402  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_381 -> m8_403  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_381 -> m8_404  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_381 -> m8_373  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m8_381 -> m8_389  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Attribute[] GetAttributes"];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_13  [key=2, style=dotted];
m8_384 -> m8_14  [key=2, style=dotted];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_387  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_391  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_392  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_394  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_395  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_397  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_398  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_400  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_401  [key=1, style=dashed, color=darkseagreen4, label=provider];
m8_385 -> m8_381  [key=3, color=darkorchid, style=bold, label="Local variable object provider"];
m8_388 -> m8_389  [key=0, style=solid];
m8_388 -> m8_407  [key=2, style=dotted];
m8_388 -> m8_408  [key=2, style=dotted];
m8_393 -> m8_406  [key=0, style=solid];
m8_393 -> m8_409  [key=2, style=dotted];
m8_393 -> m8_410  [key=2, style=dotted];
m8_396 -> m8_406  [key=0, style=solid];
m8_396 -> m8_411  [key=2, style=dotted];
m8_396 -> m8_412  [key=2, style=dotted];
m8_399 -> m8_406  [key=0, style=solid];
m8_399 -> m8_413  [key=2, style=dotted];
m8_399 -> m8_414  [key=2, style=dotted];
m8_402 -> m8_406  [key=0, style=solid];
m8_402 -> m8_415  [key=2, style=dotted];
m8_402 -> m8_416  [key=2, style=dotted];
m8_403 -> m8_404  [key=0, style=solid];
m8_404 -> m8_405  [key=0, style=solid];
m8_404 -> m8_417  [key=2, style=dotted];
m8_404 -> m8_418  [key=2, style=dotted];
m8_386 -> m8_387  [key=0, style=solid];
m8_386 -> m8_391  [key=0, style=solid];
m8_387 -> m8_388  [key=0, style=solid];
m8_391 -> m8_392  [key=0, style=solid];
m8_391 -> m8_394  [key=0, style=solid];
m8_392 -> m8_393  [key=0, style=solid];
m8_394 -> m8_395  [key=0, style=solid];
m8_394 -> m8_397  [key=0, style=solid];
m8_395 -> m8_396  [key=0, style=solid];
m8_397 -> m8_398  [key=0, style=solid];
m8_397 -> m8_400  [key=0, style=solid];
m8_398 -> m8_399  [key=0, style=solid];
m8_400 -> m8_401  [key=0, style=solid];
m8_400 -> m8_403  [key=0, style=solid];
m8_401 -> m8_402  [key=0, style=solid];
m8_389 -> m8_390  [key=0, style=solid];
m8_389 -> m8_382  [key=2, style=dotted];
m8_389 -> m8_383  [key=2, style=dotted];
m8_390 -> m8_406  [key=0, style=solid];
m8_405 -> m8_406  [key=0, style=solid];
m8_406 -> m8_381  [key=0, style=bold, color=blue];
m8_500 -> m8_504  [key=0, style=solid];
m8_500 -> m8_505  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m8_500 -> m8_508  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_510  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_511  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_513  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_515  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_517  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_518  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_520  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>"];
m8_500 -> m8_485  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<System.Reflection.PropertyInfo> initialProperties"];
m8_500 -> m8_334  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m8_504 -> m8_505  [key=0, style=solid];
m8_504 -> m8_521  [key=0, style=solid];
m8_504 -> m8_181  [key=2, style=dotted];
m8_504 -> m8_504  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_505 -> m8_506  [key=0, style=solid];
m8_505 -> m8_504  [key=0, style=solid];
m8_505 -> m8_499  [key=2, style=dotted];
m8_508 -> m8_509  [key=0, style=solid];
m8_508 -> m8_522  [key=2, style=dotted];
m8_508 -> m8_524  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_508 -> m8_511  [key=1, style=dashed, color=darkseagreen4, label=index];
m8_508 -> m8_513  [key=1, style=dashed, color=darkseagreen4, label=index];
m8_510 -> m8_505  [key=0, style=solid];
m8_510 -> m8_341  [key=2, style=dotted];
m8_511 -> m8_512  [key=0, style=solid];
m8_513 -> m8_505  [key=0, style=solid];
m8_515 -> m8_516  [key=0, style=solid];
m8_515 -> m8_522  [key=2, style=dotted];
m8_515 -> m8_527  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_517 -> m8_505  [key=0, style=solid];
m8_517 -> m8_341  [key=2, style=dotted];
m8_518 -> m8_519  [key=0, style=solid];
m8_518 -> m8_522  [key=2, style=dotted];
m8_518 -> m8_530  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_520 -> m8_505  [key=0, style=solid];
m8_520 -> m8_341  [key=2, style=dotted];
m8_506 -> m8_507  [key=0, style=solid];
m8_506 -> m8_508  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_525  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_510  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_513  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_514  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_515  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_528  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_517  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_518  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_531  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_520  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_506 -> m8_505  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.PropertyInfo subTypeProperty"];
m8_507 -> m8_508  [key=0, style=solid];
m8_507 -> m8_514  [key=0, style=solid];
m8_507 -> m8_28  [key=2, style=dotted];
m8_514 -> m8_515  [key=0, style=solid];
m8_514 -> m8_518  [key=0, style=solid];
m8_514 -> m8_523  [key=2, style=dotted];
m8_509 -> m8_510  [key=0, style=solid];
m8_509 -> m8_511  [key=0, style=solid];
m8_512 -> m8_513  [key=0, style=solid];
m8_512 -> m8_505  [key=0, style=solid];
m8_512 -> m8_28  [key=2, style=dotted];
m8_516 -> m8_517  [key=0, style=solid];
m8_516 -> m8_505  [key=0, style=solid];
m8_519 -> m8_520  [key=0, style=solid];
m8_519 -> m8_505  [key=0, style=solid];
m8_521 -> m8_500  [key=0, style=bold, color=blue];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_185  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_182 -> m8_186  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_182 -> m8_187  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_182 -> m8_189  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_182 -> m8_191  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_182 -> m8_193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_182 -> m8_25  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type GetCollectionItemType"];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_13  [key=2, style=dotted];
m8_183 -> m8_14  [key=2, style=dotted];
m8_185 -> m8_186  [key=0, style=solid];
m8_185 -> m8_187  [key=0, style=solid];
m8_186 -> m8_194  [key=0, style=solid];
m8_186 -> m8_195  [key=2, style=dotted];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_191  [key=0, style=solid];
m8_187 -> m8_133  [key=2, style=dotted];
m8_187 -> m8_190  [key=1, style=dashed, color=darkseagreen4, label=genericListType];
m8_189 -> m8_194  [key=0, style=solid];
m8_189 -> m8_196  [key=2, style=dotted];
m8_189 -> m8_156  [key=2, style=dotted];
m8_191 -> m8_192  [key=0, style=solid];
m8_191 -> m8_193  [key=0, style=solid];
m8_191 -> m8_198  [key=2, style=dotted];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_196  [key=2, style=dotted];
m8_193 -> m8_156  [key=2, style=dotted];
m8_184 -> m8_185  [key=0, style=solid];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_190  [key=0, style=solid];
m8_188 -> m8_154  [key=2, style=dotted];
m8_190 -> m8_194  [key=0, style=solid];
m8_190 -> n71  [key=2, style=dotted];
m8_192 -> m8_194  [key=0, style=solid];
m8_194 -> m8_182  [key=0, style=bold, color=blue];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_86  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_84 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_84 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasDefaultConstructor"];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_13  [key=2, style=dotted];
m8_85 -> m8_14  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_88  [key=0, style=solid];
m8_86 -> m8_90  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_91  [key=2, style=dotted];
m8_87 -> m8_89  [key=0, style=solid];
m8_89 -> m8_84  [key=0, style=bold, color=blue];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_314  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_312 -> m8_315  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_312 -> m8_326  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m8_312 -> m8_316  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetFieldsAndProperties"];
m8_313 -> m8_314  [key=0, style=solid];
m8_313 -> m8_331  [key=2, style=dotted];
m8_313 -> m8_315  [key=1, style=dashed, color=darkseagreen4, label=targetMembers];
m8_313 -> m8_316  [key=1, style=dashed, color=darkseagreen4, label=targetMembers];
m8_313 -> m8_317  [key=1, style=dashed, color=darkseagreen4, label=targetMembers];
m8_314 -> m8_315  [key=0, style=solid];
m8_314 -> m8_332  [key=2, style=dotted];
m8_314 -> m8_333  [key=2, style=dotted];
m8_315 -> m8_316  [key=0, style=solid];
m8_315 -> m8_334  [key=2, style=dotted];
m8_315 -> m8_333  [key=2, style=dotted];
m8_326 -> m8_327  [key=0, style=solid];
m8_326 -> m8_323  [key=0, style=solid];
m8_326 -> m8_342  [key=2, style=dotted];
m8_316 -> m8_317  [key=0, style=solid];
m8_316 -> m8_335  [key=2, style=dotted];
m8_316 -> m8_321  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m8_316 -> m8_328  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m8_316 -> m8_329  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m8_317 -> m8_318  [key=0, style=solid];
m8_317 -> m8_329  [key=0, style=solid];
m8_317 -> m8_336  [key=2, style=dotted];
m8_317 -> m8_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_317 -> m8_319  [key=1, style=dashed, color=darkseagreen4, label=groupedMember];
m8_321 -> m8_317  [key=0, style=solid];
m8_321 -> m8_339  [key=2, style=dotted];
m8_321 -> m8_340  [key=2, style=dotted];
m8_328 -> m8_317  [key=0, style=solid];
m8_328 -> m8_333  [key=2, style=dotted];
m8_329 -> m8_330  [key=0, style=solid];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_337  [key=2, style=dotted];
m8_318 -> m8_320  [key=1, style=dashed, color=darkseagreen4, label=count];
m8_319 -> m8_320  [key=0, style=solid];
m8_319 -> m8_338  [key=2, style=dotted];
m8_319 -> m8_321  [key=1, style=dashed, color=darkseagreen4, label=members];
m8_319 -> m8_323  [key=1, style=dashed, color=darkseagreen4, label=members];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_322  [key=0, style=solid];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_328  [key=0, style=solid];
m8_323 -> m8_325  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m8_323 -> m8_326  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m8_323 -> m8_327  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m8_322 -> m8_323  [key=0, style=solid];
m8_322 -> m8_331  [key=2, style=dotted];
m8_322 -> m8_324  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m8_322 -> m8_325  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m8_322 -> m8_327  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m8_322 -> m8_328  [key=1, style=dashed, color=darkseagreen4, label=resolvedMembers];
m8_324 -> m8_325  [key=0, style=solid];
m8_324 -> m8_326  [key=0, style=solid];
m8_325 -> m8_323  [key=0, style=solid];
m8_325 -> m8_341  [key=2, style=dotted];
m8_327 -> m8_323  [key=0, style=solid];
m8_327 -> m8_341  [key=2, style=dotted];
m8_330 -> m8_312  [key=0, style=bold, color=blue];
m8_35 -> m8_36  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [key=2, style=dotted];
m8_37 -> m8_35  [key=0, style=bold, color=blue];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_113 -> m8_107  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m8_113 -> m8_119  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_13  [key=2, style=dotted];
m8_114 -> m8_14  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_117  [key=2, style=dotted];
m8_115 -> m8_118  [key=2, style=dotted];
m8_116 -> m8_113  [key=0, style=bold, color=blue];
m8_501 -> m8_502  [key=0, style=solid];
m8_502 -> m8_503  [key=0, style=solid];
m8_503 -> m8_501  [key=0, style=bold, color=blue];
m8_342 -> m8_346  [key=0, style=solid];
m8_342 -> m8_348  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_342 -> m8_357  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m8_342 -> m8_323  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo memberInfo"];
m8_342 -> m8_312  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m8_342 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsOverridenGenericMember"];
m8_342 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsOverridenGenericMember"];
m8_346 -> m8_347  [key=0, style=solid];
m8_346 -> m8_348  [key=0, style=solid];
m8_346 -> m8_228  [key=2, style=dotted];
m8_348 -> m8_349  [key=0, style=solid];
m8_348 -> m8_351  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m8_348 -> m8_357  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m8_357 -> m8_358  [key=0, style=solid];
m8_357 -> m8_365  [key=2, style=dotted];
m8_357 -> m8_360  [key=1, style=dashed, color=darkseagreen4, label=members];
m8_347 -> m8_364  [key=0, style=solid];
m8_349 -> m8_350  [key=0, style=solid];
m8_349 -> m8_351  [key=0, style=solid];
m8_349 -> m8_3  [key=2, style=dotted];
m8_351 -> m8_352  [key=0, style=solid];
m8_351 -> m8_354  [key=1, style=dashed, color=darkseagreen4, label=declaringType];
m8_350 -> m8_364  [key=0, style=solid];
m8_352 -> m8_353  [key=0, style=solid];
m8_352 -> m8_354  [key=0, style=solid];
m8_352 -> m8_117  [key=2, style=dotted];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_118  [key=2, style=dotted];
m8_354 -> m8_357  [key=1, style=dashed, color=darkseagreen4, label=genericTypeDefinition];
m8_353 -> m8_364  [key=0, style=solid];
m8_355 -> m8_356  [key=0, style=solid];
m8_355 -> m8_357  [key=0, style=solid];
m8_356 -> m8_364  [key=0, style=solid];
m8_358 -> m8_359  [key=0, style=solid];
m8_358 -> m8_360  [key=0, style=solid];
m8_360 -> m8_361  [key=0, style=solid];
m8_360 -> m8_215  [key=2, style=dotted];
m8_359 -> m8_364  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_361 -> m8_363  [key=0, style=solid];
m8_362 -> m8_364  [key=0, style=solid];
m8_363 -> m8_364  [key=0, style=solid];
m8_364 -> m8_342  [key=0, style=bold, color=blue];
m8_119 -> m8_120  [key=0, style=solid];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_113  [key=2, style=dotted];
m8_120 -> m8_122  [key=2, style=dotted];
m8_121 -> m8_119  [key=0, style=bold, color=blue];
m8_419 -> m8_420  [key=0, style=solid];
m8_419 -> m8_422  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_419 -> m8_423  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_419 -> m8_424  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_419 -> m8_419  [key=3, color=darkorchid, style=bold, label="Parameter variable string typeName"];
m8_420 -> m8_421  [key=0, style=solid];
m8_420 -> m8_427  [key=2, style=dotted];
m8_420 -> m8_422  [key=1, style=dashed, color=darkseagreen4, label=assemblyDelimiterIndex];
m8_420 -> m8_423  [key=1, style=dashed, color=darkseagreen4, label=assemblyDelimiterIndex];
m8_422 -> m8_423  [key=0, style=solid];
m8_422 -> m8_428  [key=2, style=dotted];
m8_422 -> m8_429  [key=2, style=dotted];
m8_422 -> m8_430  [key=2, style=dotted];
m8_422 -> m8_426  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m8_423 -> m8_426  [key=0, style=solid];
m8_423 -> m8_428  [key=2, style=dotted];
m8_423 -> m8_429  [key=2, style=dotted];
m8_423 -> m8_430  [key=2, style=dotted];
m8_424 -> m8_425  [key=0, style=solid];
m8_424 -> m8_426  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m8_421 -> m8_422  [key=0, style=solid];
m8_421 -> m8_424  [key=0, style=solid];
m8_425 -> m8_426  [key=0, style=solid];
m8_426 -> m8_419  [key=0, style=bold, color=blue];
m8_237 -> m8_238  [key=0, style=solid];
m8_237 -> m8_239  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m8_237 -> m8_232  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo property"];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_13  [key=2, style=dotted];
m8_238 -> m8_14  [key=2, style=dotted];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_241  [key=2, style=dotted];
m8_240 -> m8_237  [key=0, style=bold, color=blue];
m8_427 -> m8_431  [key=0, style=solid];
m8_427 -> m8_433  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_427 -> m8_434  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_427 -> m8_419  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullyQualifiedTypeName"];
m8_427 -> m8_25  [key=3, color=darkorchid, style=bold, label="method methodReturn int? GetAssemblyDelimiterIndex"];
m8_431 -> m8_432  [key=0, style=solid];
m8_431 -> m8_437  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_431 -> m8_60  [key=3, color=darkorchid, style=bold, label="Local variable int scope"];
m8_433 -> m8_434  [key=0, style=solid];
m8_433 -> m8_444  [key=0, style=solid];
m8_433 -> m8_60  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_434 -> m8_435  [key=0, style=solid];
m8_432 -> m8_433  [key=0, style=solid];
m8_432 -> m8_434  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_432 -> m8_442  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_432 -> m8_443  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_437 -> m8_443  [key=0, style=solid];
m8_437 -> m8_437  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_437 -> m8_439  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_442 -> m8_445  [key=0, style=solid];
m8_443 -> m8_433  [key=0, style=solid];
m8_443 -> m8_443  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_444 -> m8_445  [key=0, style=solid];
m8_435 -> m8_436  [key=0, style=solid];
m8_435 -> m8_438  [key=0, style=solid];
m8_435 -> m8_440  [key=0, style=solid];
m8_436 -> m8_437  [key=0, style=solid];
m8_438 -> m8_439  [key=0, style=solid];
m8_440 -> m8_441  [key=0, style=solid];
m8_439 -> m8_443  [key=0, style=solid];
m8_439 -> m8_439  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_439 -> m8_441  [key=1, style=dashed, color=darkseagreen4, label=scope];
m8_441 -> m8_442  [key=0, style=solid];
m8_441 -> m8_443  [key=0, style=solid];
m8_445 -> m8_427  [key=0, style=bold, color=blue];
m8_366 -> m8_367  [key=0, style=solid];
m8_366 -> m8_369  [key=3, color=darkorchid, style=bold, label="method methodReturn T GetAttribute"];
m8_367 -> m8_368  [key=0, style=solid];
m8_367 -> m8_369  [key=2, style=dotted];
m8_368 -> m8_366  [key=0, style=bold, color=blue];
m8_91 -> m8_95  [key=0, style=solid];
m8_91 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_91 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_91 -> m8_84  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nonPublic"];
m8_91 -> m8_92  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m8_91 -> m8_11  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nonPublic"];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label=bindingFlags];
m8_95 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label=bindingFlags];
m8_95 -> m8_95  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.BindingFlags bindingFlags"];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_98  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_100  [key=2, style=dotted];
m8_98 -> m8_101  [key=2, style=dotted];
m8_98 -> m8_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label=bindingFlags];
m8_99 -> m8_91  [key=0, style=bold, color=blue];
m8_230 -> m8_231  [key=0, style=solid];
m8_230 -> m8_232  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_230 -> m8_237  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsIndexedProperty"];
m8_230 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsIndexedProperty"];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_13  [key=2, style=dotted];
m8_231 -> m8_14  [key=2, style=dotted];
m8_232 -> m8_233  [key=0, style=solid];
m8_232 -> m8_234  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_235  [key=0, style=solid];
m8_234 -> m8_236  [key=0, style=solid];
m8_234 -> m8_237  [key=2, style=dotted];
m8_235 -> m8_236  [key=0, style=solid];
m8_236 -> m8_230  [key=0, style=bold, color=blue];
m8_446 -> m8_447  [key=0, style=solid];
m8_446 -> m8_448  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_446 -> m8_450  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_446 -> m8_452  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_446 -> m8_453  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_446 -> m8_492  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo memberInfo"];
m8_447 -> m8_448  [key=0, style=solid];
m8_447 -> m8_452  [key=1, style=dashed, color=darkseagreen4, label=bindingAttr];
m8_447 -> m8_453  [key=1, style=dashed, color=darkseagreen4, label=bindingAttr];
m8_447 -> m8_447  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.BindingFlags bindingAttr"];
m8_448 -> m8_449  [key=0, style=solid];
m8_448 -> m8_453  [key=0, style=solid];
m8_448 -> m8_228  [key=2, style=dotted];
m8_450 -> m8_451  [key=0, style=solid];
m8_450 -> m8_452  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m8_452 -> m8_454  [key=0, style=solid];
m8_452 -> m8_457  [key=2, style=dotted];
m8_453 -> m8_454  [key=0, style=solid];
m8_453 -> m8_228  [key=2, style=dotted];
m8_453 -> m8_458  [key=2, style=dotted];
m8_453 -> m8_459  [key=2, style=dotted];
m8_449 -> m8_450  [key=0, style=solid];
m8_451 -> m8_452  [key=0, style=solid];
m8_451 -> m8_241  [key=2, style=dotted];
m8_451 -> m8_455  [key=2, style=dotted];
m8_451 -> m8_456  [key=2, style=dotted];
m8_451 -> m8_460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_454 -> m8_446  [key=0, style=bold, color=blue];
m8_332 -> m8_463  [key=0, style=solid];
m8_332 -> m8_464  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_332 -> m8_465  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_332 -> m8_312  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m8_463 -> m8_464  [key=0, style=solid];
m8_463 -> m8_13  [key=2, style=dotted];
m8_463 -> m8_14  [key=2, style=dotted];
m8_464 -> m8_465  [key=0, style=solid];
m8_464 -> m8_468  [key=2, style=dotted];
m8_464 -> m8_469  [key=2, style=dotted];
m8_464 -> m8_466  [key=1, style=dashed, color=darkseagreen4, label=fieldInfos];
m8_465 -> m8_466  [key=0, style=solid];
m8_465 -> m8_470  [key=2, style=dotted];
m8_466 -> m8_467  [key=0, style=solid];
m8_466 -> m8_382  [key=2, style=dotted];
m8_467 -> m8_332  [key=0, style=bold, color=blue];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_91  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetDefaultConstructor"];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_91  [key=2, style=dotted];
m8_94 -> m8_92  [key=0, style=bold, color=blue];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_292  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_289 -> m8_295  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_289 -> m8_297  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_289 -> m8_303  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_289 -> m8_306  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_289 -> m8_308  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_289 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSetMemberValue"];
m8_289 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSetMemberValue"];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_302  [key=0, style=solid];
m8_290 -> m8_309  [key=0, style=solid];
m8_290 -> m8_228  [key=2, style=dotted];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_295  [key=1, style=dashed, color=darkseagreen4, label=fieldInfo];
m8_292 -> m8_299  [key=1, style=dashed, color=darkseagreen4, label=fieldInfo];
m8_295 -> m8_296  [key=0, style=solid];
m8_295 -> m8_297  [key=0, style=solid];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_299  [key=0, style=solid];
m8_303 -> m8_304  [key=0, style=solid];
m8_303 -> m8_308  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_308  [key=0, style=solid];
m8_308 -> m8_310  [key=0, style=solid];
m8_308 -> m8_311  [key=2, style=dotted];
m8_291 -> m8_292  [key=0, style=solid];
m8_302 -> m8_303  [key=0, style=solid];
m8_309 -> m8_310  [key=0, style=solid];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_295  [key=0, style=solid];
m8_299 -> m8_300  [key=0, style=solid];
m8_299 -> m8_301  [key=0, style=solid];
m8_294 -> m8_310  [key=0, style=solid];
m8_296 -> m8_310  [key=0, style=solid];
m8_298 -> m8_310  [key=0, style=solid];
m8_300 -> m8_310  [key=0, style=solid];
m8_301 -> m8_310  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_306  [key=0, style=solid];
m8_305 -> m8_310  [key=0, style=solid];
m8_307 -> m8_310  [key=0, style=solid];
m8_310 -> m8_289  [key=0, style=bold, color=blue];
m8_477 -> m8_472  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags flag"];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_170 -> m8_173  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_170 -> m8_174  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_170 -> m8_176  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_170 -> m8_179  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_170 -> m8_162  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m8_170 -> m8_170  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m8_170 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m8_170 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_176  [key=0, style=solid];
m8_171 -> m8_117  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_118  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_176  [key=0, style=solid];
m8_174 -> m8_175  [key=0, style=solid];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_179  [key=0, style=solid];
m8_176 -> m8_181  [key=2, style=dotted];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_181  [key=2, style=dotted];
m8_179 -> m8_170  [key=2, style=dotted];
m8_175 -> m8_180  [key=0, style=solid];
m8_177 -> m8_178  [key=0, style=solid];
m8_178 -> m8_180  [key=0, style=solid];
m8_180 -> m8_170  [key=0, style=bold, color=blue];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_162 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_162 -> m8_166  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_162 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_162 -> m8_158  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type genericClassDefinition"];
m8_162 -> m8_159  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m8_162 -> m8_170  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinition"];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_13  [key=2, style=dotted];
m8_163 -> m8_14  [key=2, style=dotted];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_13  [key=2, style=dotted];
m8_164 -> m8_14  [key=2, style=dotted];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_167  [key=0, style=solid];
m8_165 -> m8_169  [key=2, style=dotted];
m8_165 -> m8_154  [key=2, style=dotted];
m8_166 -> m8_168  [key=0, style=solid];
m8_166 -> m8_155  [key=2, style=dotted];
m8_166 -> m8_156  [key=2, style=dotted];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_170  [key=2, style=dotted];
m8_168 -> m8_162  [key=0, style=bold, color=blue];
m8_373 -> m8_375  [key=0, style=solid];
m8_373 -> m8_369  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m8_373 -> m8_376  [key=3, color=darkorchid, style=bold, label="method methodReturn T[] GetAttributes"];
m8_375 -> m8_376  [key=0, style=solid];
m8_375 -> m8_381  [key=2, style=dotted];
m8_375 -> m8_379  [key=1, style=dashed, color=darkseagreen4, label=a];
m8_376 -> m8_377  [key=0, style=solid];
m8_376 -> m8_378  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m8_379 -> m8_380  [key=0, style=solid];
m8_379 -> m8_382  [key=2, style=dotted];
m8_379 -> m8_383  [key=2, style=dotted];
m8_377 -> m8_378  [key=0, style=solid];
m8_377 -> m8_379  [key=0, style=solid];
m8_378 -> m8_380  [key=0, style=solid];
m8_380 -> m8_373  [key=0, style=bold, color=blue];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_109  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_107 -> m8_110  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_107 -> m8_113  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNullable"];
m8_107 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNullable"];
m8_107 -> m8_543  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_13  [key=2, style=dotted];
m8_108 -> m8_14  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_111  [key=0, style=solid];
m8_109 -> m8_90  [key=2, style=dotted];
m8_110 -> m8_112  [key=0, style=solid];
m8_110 -> m8_113  [key=2, style=dotted];
m8_111 -> m8_112  [key=0, style=solid];
m8_112 -> m8_107  [key=0, style=bold, color=blue];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m8_17 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m8_17 -> m8_25  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MethodInfo GetBaseDefinition"];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_13  [key=2, style=dotted];
m8_18 -> m8_14  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_15  [key=2, style=dotted];
m8_19 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=m];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_16  [key=2, style=dotted];
m8_22 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label=m];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_22  [key=0, style=solid];
m8_21 -> m8_26  [key=0, style=solid];
m8_21 -> m8_27  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [key=0, style=solid];
m8_24 -> m8_27  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_26 -> m8_17  [key=0, style=bold, color=blue];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m8_3 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m8_3 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsVirtual"];
m8_3 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsVirtual"];
m8_3 -> m8_348  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo propertyInfo"];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_13  [key=2, style=dotted];
m8_4 -> m8_14  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_15  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_16  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [key=0, style=solid];
m8_7 -> m8_12  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_3  [key=0, style=bold, color=blue];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_135  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_136  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_138  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_140  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_141  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_142  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_144  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_147  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_133 -> m8_129  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type genericInterfaceDefinition"];
m8_133 -> m8_182  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m8_133 -> m8_199  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m8_133 -> m8_130  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m8_133 -> m8_133  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m8_133 -> m8_184  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m8_133 -> m8_201  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m8_133 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m8_133 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_13  [key=2, style=dotted];
m8_134 -> m8_14  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_13  [key=2, style=dotted];
m8_135 -> m8_14  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_138  [key=0, style=solid];
m8_136 -> m8_153  [key=2, style=dotted];
m8_136 -> m8_154  [key=2, style=dotted];
m8_137 -> m8_152  [key=0, style=solid];
m8_137 -> m8_155  [key=2, style=dotted];
m8_137 -> m8_156  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_144  [key=0, style=solid];
m8_138 -> m8_153  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_144  [key=0, style=solid];
m8_139 -> m8_117  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_118  [key=2, style=dotted];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_144  [key=0, style=solid];
m8_142 -> m8_143  [key=0, style=solid];
m8_144 -> m8_145  [key=0, style=solid];
m8_144 -> m8_150  [key=0, style=solid];
m8_144 -> m8_157  [key=2, style=dotted];
m8_144 -> m8_146  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_144 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_144  [key=0, style=solid];
m8_143 -> m8_152  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_144  [key=0, style=solid];
m8_145 -> m8_117  [key=2, style=dotted];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_152  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_118  [key=2, style=dotted];
m8_148 -> m8_149  [key=0, style=solid];
m8_149 -> m8_152  [key=0, style=solid];
m8_151 -> m8_152  [key=0, style=solid];
m8_152 -> m8_133  [key=0, style=bold, color=blue];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_160  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_158 -> m8_162  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinition"];
m8_159 -> m8_160  [key=0, style=solid];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_162  [key=2, style=dotted];
m8_161 -> m8_158  [key=0, style=bold, color=blue];
m8_540 -> m8_541  [key=0, style=solid];
m8_102 -> m8_103  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_105  [key=2, style=dotted];
m8_103 -> m8_106  [key=2, style=dotted];
m8_104 -> m8_102  [key=0, style=bold, color=blue];
m8_343 -> m8_344  [key=0, style=solid];
m8_344 -> m8_345  [key=0, style=solid];
m8_345 -> m8_343  [key=0, style=bold, color=blue];
m8_460 -> m8_461  [key=0, style=solid];
m8_461 -> m8_462  [key=0, style=solid];
m8_462 -> m8_460  [key=0, style=bold, color=blue];
m8_481 -> m8_482  [key=0, style=solid];
m8_482 -> m8_483  [key=0, style=solid];
m8_483 -> m8_481  [key=0, style=bold, color=blue];
m8_525 -> m8_526  [key=0, style=solid];
m8_528 -> m8_529  [key=0, style=solid];
m8_531 -> m8_532  [key=0, style=solid];
m8_531 -> m8_523  [key=2, style=dotted];
m8_531 -> m8_533  [key=2, style=dotted];
m8_531 -> m8_198  [key=2, style=dotted];
m8_524 -> m8_525  [key=0, style=solid];
m8_527 -> m8_528  [key=0, style=solid];
m8_530 -> m8_531  [key=0, style=solid];
m8_526 -> m8_524  [key=0, style=bold, color=blue];
m8_529 -> m8_527  [key=0, style=bold, color=blue];
m8_532 -> m8_530  [key=0, style=bold, color=blue];
m8_541 -> m8_542  [key=0, style=solid];
m8_541 -> m8_27  [key=2, style=dotted];
m8_542 -> m8_540  [key=0, style=bold, color=blue];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_244  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_242 -> m8_245  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_242 -> m8_247  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_242 -> m8_249  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_242 -> m8_251  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_242 -> m8_252  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_13  [key=2, style=dotted];
m8_243 -> m8_14  [key=2, style=dotted];
m8_244 -> m8_245  [key=0, style=solid];
m8_244 -> m8_13  [key=2, style=dotted];
m8_244 -> m8_14  [key=2, style=dotted];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_248  [key=0, style=solid];
m8_245 -> m8_252  [key=0, style=solid];
m8_245 -> m8_228  [key=2, style=dotted];
m8_247 -> m8_253  [key=0, style=solid];
m8_247 -> m8_254  [key=2, style=dotted];
m8_249 -> m8_253  [key=0, style=solid];
m8_249 -> m8_255  [key=2, style=dotted];
m8_251 -> m8_253  [key=0, style=solid];
m8_251 -> m8_256  [key=2, style=dotted];
m8_251 -> m8_156  [key=2, style=dotted];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_229  [key=2, style=dotted];
m8_252 -> m8_257  [key=2, style=dotted];
m8_252 -> m8_13  [key=2, style=dotted];
m8_246 -> m8_247  [key=0, style=solid];
m8_248 -> m8_249  [key=0, style=solid];
m8_250 -> m8_251  [key=0, style=solid];
m8_253 -> m8_242  [key=0, style=bold, color=blue];
m8_534 -> m8_535  [key=0, style=solid];
m8_534 -> m8_541  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_535 -> m8_536  [key=0, style=solid];
m8_535 -> m8_538  [key=2, style=dotted];
m8_535 -> m8_539  [key=2, style=dotted];
m8_535 -> m8_540  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_536 -> m8_537  [key=0, style=solid];
m8_537 -> m8_534  [key=0, style=bold, color=blue];
m8_470 -> m8_471  [key=0, style=solid];
m8_470 -> m8_472  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m8_470 -> m8_473  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_470 -> m8_475  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>"];
m8_470 -> m8_464  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<System.Reflection.MemberInfo> initialFields"];
m8_470 -> m8_332  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m8_471 -> m8_472  [key=0, style=solid];
m8_471 -> m8_476  [key=0, style=solid];
m8_472 -> m8_473  [key=0, style=solid];
m8_472 -> m8_477  [key=2, style=dotted];
m8_472 -> m8_474  [key=1, style=dashed, color=darkseagreen4, label=nonPublicBindingAttr];
m8_473 -> m8_474  [key=0, style=solid];
m8_473 -> m8_476  [key=0, style=solid];
m8_473 -> m8_181  [key=2, style=dotted];
m8_473 -> m8_473  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_475 -> m8_473  [key=0, style=solid];
m8_475 -> m8_480  [key=2, style=dotted];
m8_474 -> m8_475  [key=0, style=solid];
m8_474 -> m8_469  [key=2, style=dotted];
m8_474 -> m8_478  [key=2, style=dotted];
m8_474 -> m8_479  [key=2, style=dotted];
m8_474 -> m8_481  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_476 -> m8_470  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_258 -> m8_259  [key=0, style=solid];
m8_258 -> m8_260  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_258 -> m8_261  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_258 -> m8_263  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_258 -> m8_265  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_258 -> m8_266  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_259 -> m8_260  [key=0, style=solid];
m8_259 -> m8_13  [key=2, style=dotted];
m8_259 -> m8_14  [key=2, style=dotted];
m8_260 -> m8_261  [key=0, style=solid];
m8_260 -> m8_13  [key=2, style=dotted];
m8_260 -> m8_14  [key=2, style=dotted];
m8_261 -> m8_262  [key=0, style=solid];
m8_261 -> m8_264  [key=0, style=solid];
m8_261 -> m8_266  [key=0, style=solid];
m8_261 -> m8_228  [key=2, style=dotted];
m8_263 -> m8_267  [key=0, style=solid];
m8_263 -> m8_268  [key=2, style=dotted];
m8_265 -> m8_267  [key=0, style=solid];
m8_265 -> m8_269  [key=2, style=dotted];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_229  [key=2, style=dotted];
m8_266 -> m8_156  [key=2, style=dotted];
m8_266 -> m8_13  [key=2, style=dotted];
m8_262 -> m8_263  [key=0, style=solid];
m8_264 -> m8_265  [key=0, style=solid];
m8_267 -> m8_258  [key=0, style=bold, color=blue];
m8_54 -> m8_56  [key=0, style=solid];
m8_54 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_54 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_54 -> m8_40  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullyQualifiedTypeName"];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_81  [key=2, style=dotted];
m8_56 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=builder];
m8_56 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=builder];
m8_56 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label=builder];
m8_56 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=builder];
m8_56 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label=builder];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_79  [key=0, style=solid];
m8_60 -> m8_60  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=current];
m8_61 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label=current];
m8_61 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label=current];
m8_61 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=current];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_11  [key=3, color=darkorchid, style=bold, label="Local variable bool writingAssemblyName"];
m8_66 -> m8_78  [key=0, style=solid];
m8_66 -> m8_82  [key=2, style=dotted];
m8_70 -> m8_78  [key=0, style=solid];
m8_70 -> m8_82  [key=2, style=dotted];
m8_74 -> m8_78  [key=0, style=solid];
m8_74 -> m8_82  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_82  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_83  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_11  [key=3, color=darkorchid, style=bold, label="Local variable bool skippingAssemblyDetails"];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_59 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_78 -> m8_60  [key=0, style=solid];
m8_78 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_67  [key=0, style=solid];
m8_62 -> m8_71  [key=0, style=solid];
m8_62 -> m8_76  [key=0, style=solid];
m8_63 -> m8_64  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_71 -> m8_72  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_78  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label=writingAssemblyName];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label=skippingAssemblyDetails];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_75  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_75 -> m8_78  [key=0, style=solid];
m8_75 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label=skippingAssemblyDetails];
m8_80 -> m8_54  [key=0, style=bold, color=blue];
m8_334 -> m8_484  [key=0, style=solid];
m8_334 -> m8_485  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_334 -> m8_486  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_334 -> m8_487  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_334 -> m8_488  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m8_334 -> m8_489  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_334 -> m8_493  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_334 -> m8_312  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m8_484 -> m8_485  [key=0, style=solid];
m8_484 -> m8_13  [key=2, style=dotted];
m8_484 -> m8_14  [key=2, style=dotted];
m8_485 -> m8_486  [key=0, style=solid];
m8_485 -> m8_468  [key=2, style=dotted];
m8_485 -> m8_499  [key=2, style=dotted];
m8_485 -> m8_488  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m8_485 -> m8_489  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m8_485 -> m8_491  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m8_485 -> m8_492  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m8_485 -> m8_495  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m8_485 -> m8_497  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m8_486 -> m8_487  [key=0, style=solid];
m8_486 -> m8_489  [key=0, style=solid];
m8_486 -> m8_153  [key=2, style=dotted];
m8_487 -> m8_488  [key=0, style=solid];
m8_487 -> m8_489  [key=0, style=solid];
m8_487 -> m8_157  [key=2, style=dotted];
m8_488 -> m8_487  [key=0, style=solid];
m8_488 -> m8_499  [key=2, style=dotted];
m8_488 -> m8_333  [key=2, style=dotted];
m8_489 -> m8_490  [key=0, style=solid];
m8_489 -> m8_500  [key=2, style=dotted];
m8_493 -> m8_494  [key=0, style=solid];
m8_493 -> m8_496  [key=0, style=solid];
m8_491 -> m8_492  [key=0, style=solid];
m8_491 -> m8_497  [key=0, style=solid];
m8_491 -> m8_60  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_492 -> m8_493  [key=0, style=solid];
m8_492 -> m8_494  [key=1, style=dashed, color=darkseagreen4, label=member];
m8_495 -> m8_496  [key=0, style=solid];
m8_497 -> m8_498  [key=0, style=solid];
m8_490 -> m8_491  [key=0, style=solid];
m8_490 -> m8_492  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_490 -> m8_495  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_490 -> m8_496  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_496 -> m8_491  [key=0, style=solid];
m8_496 -> m8_496  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_494 -> m8_495  [key=0, style=solid];
m8_494 -> m8_446  [key=2, style=dotted];
m8_498 -> m8_334  [key=0, style=bold, color=blue];
m8_215 -> m8_216  [key=0, style=solid];
m8_215 -> m8_217  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_215 -> m8_219  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_215 -> m8_221  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_215 -> m8_223  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_215 -> m8_225  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_215 -> m8_226  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_13  [key=2, style=dotted];
m8_216 -> m8_14  [key=2, style=dotted];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_220  [key=0, style=solid];
m8_217 -> m8_222  [key=0, style=solid];
m8_217 -> m8_224  [key=0, style=solid];
m8_217 -> m8_226  [key=0, style=solid];
m8_217 -> m8_228  [key=2, style=dotted];
m8_219 -> m8_227  [key=0, style=solid];
m8_221 -> m8_227  [key=0, style=solid];
m8_223 -> m8_227  [key=0, style=solid];
m8_225 -> m8_227  [key=0, style=solid];
m8_226 -> m8_227  [key=0, style=solid];
m8_226 -> m8_229  [key=2, style=dotted];
m8_226 -> m8_13  [key=2, style=dotted];
m8_218 -> m8_219  [key=0, style=solid];
m8_220 -> m8_221  [key=0, style=solid];
m8_222 -> m8_223  [key=0, style=solid];
m8_224 -> m8_225  [key=0, style=solid];
m8_227 -> m8_215  [key=0, style=bold, color=blue];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m8_28 -> m8_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsPublic"];
m8_28 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsPublic"];
m8_28 -> m8_506  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo property"];
m8_28 -> m8_511  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo property"];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [key=0, style=solid];
m8_29 -> m8_15  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=0, style=solid];
m8_31 -> m8_16  [key=2, style=dotted];
m8_30 -> m8_34  [key=0, style=solid];
m8_32 -> m8_34  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_28  [key=0, style=bold, color=blue];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_126  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_123 -> m8_127  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_123 -> m8_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsGenericDefinition"];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_126  [key=0, style=solid];
m8_124 -> m8_117  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_118  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_125 -> m8_128  [key=0, style=solid];
m8_128 -> m8_123  [key=0, style=bold, color=blue];
m8_369 -> m8_370  [key=0, style=solid];
m8_369 -> m8_366  [key=3, color=darkorchid, style=bold, label="Parameter variable object attributeProvider"];
m8_369 -> m8_7  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m8_370 -> m8_371  [key=0, style=solid];
m8_370 -> m8_373  [key=2, style=dotted];
m8_371 -> m8_372  [key=0, style=solid];
m8_371 -> m8_374  [key=2, style=dotted];
m8_372 -> m8_369  [key=0, style=bold, color=blue];
m8_584 -> m8_525  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_584 -> m8_528  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_584 -> m8_531  [key=1, style=dashed, color=darkseagreen4, label=subTypeProperty];
m8_585 -> m8_541  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_586 -> m8_541  [key=1, style=dashed, color=darkseagreen4, label=string];
}
