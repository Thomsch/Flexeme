digraph  {
n104 [label="Newtonsoft.Json.Serialization.JsonArrayContract", span=""];
n0 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="92-92", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n1 [label="ContractType = JsonContractType.Array", span="95-95", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n11 [label="typeof(IList).IsAssignableFrom(underlyingType)", span="110-110", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n12 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n14 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(underlyingType)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n15 [label="underlyingType == typeof(IList)", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n18 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="121-121", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n19 [label="IsReadOnlyOrFixedSize = ReflectionUtils.InheritsGenericDefinition(underlyingType, typeof(ReadOnlyCollection<>))", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n21 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="126-126", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n23 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(ICollection<>))\r\n                    || ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IList<>))", span="130-131", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n25 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(ISet<>))", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n27 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="139-139", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n30 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IReadOnlyCollection<>), out tempCollectionType)", span="144-144", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n32 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IReadOnlyCollection<>))\r\n                    || ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IReadOnlyList<>))", span="148-149", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n38 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IEnumerable<>), out tempCollectionType)", span="158-158", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n42 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n43 [label="!HasParametrizedCreator && underlyingType.Name == FSharpUtils.FSharpListTypeName", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n44 [label="FSharpUtils.EnsureInitialized(underlyingType.Assembly())", span="170-170", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n46 [label="underlyingType.IsGenericType() && underlyingType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="175-175", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n60 [label="ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(underlyingType, CollectionItemType, out immutableCreatedType, out immutableParameterizedCreator)", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n2 [label="IsArray = CreatedType.IsArray", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n3 [label="bool canDeserialize", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n4 [label="Type tempCollectionType", span="100-100", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n5 [label=IsArray, span="101-101", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n6 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="103-103", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n7 [label="IsReadOnlyOrFixedSize = true", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n66 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="360-360", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)"];
n8 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n9 [label="canDeserialize = true", span="107-107", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n67 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
n10 [label="IsMultidimensionalArray = (IsArray && UnderlyingType.GetArrayRank() > 1)", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n57 [label="CanDeserialize = canDeserialize", span="199-199", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n69 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n13 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="113-113", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n70 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="276-276", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)"];
n71 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()"];
n16 [label="CreatedType = typeof(List<object>)", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n17 [label="CollectionItemType != null", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n72 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="104-104", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)"];
n20 [label="canDeserialize = true", span="124-124", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n73 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="316-316", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)"];
n22 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n24 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="132-132", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n74 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)"];
n26 [label="CreatedType = typeof(HashSet<>).MakeGenericType(CollectionItemType)", span="136-136", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n28 [label="canDeserialize = true", span="140-140", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n29 [label="ShouldCreateWrapper = true", span="141-141", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n31 [label="CollectionItemType = tempCollectionType.GetGenericArguments()[0]", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n33 [label="CreatedType = typeof(ReadOnlyCollection<>).MakeGenericType(CollectionItemType)", span="150-150", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n34 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n35 [label="_parametrizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(CreatedType, CollectionItemType)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n36 [label="IsReadOnlyOrFixedSize = true", span="154-154", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n37 [label="canDeserialize = HasParametrizedCreator", span="155-155", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n39 [label="CollectionItemType = tempCollectionType.GetGenericArguments()[0]", span="160-160", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n55 [label="canDeserialize = false", span="195-195", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n47 [label="_genericCollectionDefinitionType = tempCollectionType", span="177-177", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n40 [label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IEnumerable<>))", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n41 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n45 [label="_parametrizedCreator = FSharpUtils.CreateSeq(CollectionItemType)", span="171-171", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n75 [label="Entry System.Type.Assembly()", span="164-164", cluster="System.Type.Assembly()"];
n76 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="78-78", cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)"];
n77 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)", span="142-142", cluster="Newtonsoft.Json.Utilities.FSharpUtils.CreateSeq(System.Type)"];
n51 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="185-185", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n78 [label="Entry System.Type.IsGenericType()", span="137-137", cluster="System.Type.IsGenericType()"];
n79 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()"];
n48 [label="IsReadOnlyOrFixedSize = false", span="179-179", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n49 [label="ShouldCreateWrapper = false", span="180-180", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n50 [label="canDeserialize = true", span="181-181", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n52 [label="IsReadOnlyOrFixedSize = true", span="187-187", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n53 [label="ShouldCreateWrapper = true", span="188-188", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n54 [label="canDeserialize = HasParametrizedCreator", span="189-189", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n56 [label="ShouldCreateWrapper = true", span="196-196", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n68 [label="Entry System.Type.GetArrayRank()", span="0-0", cluster="System.Type.GetArrayRank()"];
n58 [label="Type immutableCreatedType", span="215-215", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n59 [label="ObjectConstructor<object> immutableParameterizedCreator", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n61 [label="CreatedType = immutableCreatedType", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n65 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="92-92", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n80 [label="Entry Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)", span="104-104", cluster="Newtonsoft.Json.Utilities.ImmutableCollectionsUtils.TryBuildImmutableForArrayContract(System.Type, System.Type, out System.Type, out Newtonsoft.Json.Serialization.ObjectConstructor<object>)"];
n62 [label="_parametrizedCreator = immutableParameterizedCreator", span="220-220", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n63 [label="IsReadOnlyOrFixedSize = true", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n64 [label="CanDeserialize = true", span="222-222", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n81 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n82 [label="_genericWrapperCreator == null", span="229-229", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n90 [label="return (IWrappedCollection)_genericWrapperCreator(list);", span="245-245", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n83 [label="_genericWrapperType = typeof(CollectionWrapper<>).MakeGenericType(CollectionItemType)", span="231-231", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n84 [label="Type constructorArgument", span="233-233", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n85 [label="ReflectionUtils.InheritsGenericDefinition(_genericCollectionDefinitionType, typeof(List<>))\r\n                    || _genericCollectionDefinitionType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="235-236", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n86 [label="constructorArgument = typeof(ICollection<>).MakeGenericType(CollectionItemType)", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n87 [label="constructorArgument = _genericCollectionDefinitionType", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n88 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { constructorArgument })", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n89 [label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParametrizedConstructor(genericWrapperConstructor)", span="242-242", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n92 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])"];
n93 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)", span="65-65", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)"];
n91 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)"];
n94 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])"];
n95 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="248-248", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n96 [label="_genericTemporaryCollectionCreator == null", span="250-250", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n97 [label="Type collectionItemType = (IsMultidimensionalArray) ? typeof(object) : CollectionItemType", span="253-253", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n100 [label="return (IList)_genericTemporaryCollectionCreator();", span="258-258", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n98 [label="Type temporaryListType = typeof(List<>).MakeGenericType(collectionItemType)", span="254-254", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n99 [label="_genericTemporaryCollectionCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryListType)", span="255-255", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n102 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)"];
n101 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="248-248", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()"];
n103 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
m0_550 [label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1077-1077", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_553 [label="method.IsVirtual", span="1082-1082", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_552 [label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1080-1080", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_551 [label="prevAttributeType != null", span="1079-1079", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_554 [label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1083-1083", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_329 [label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="672-672", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="LinqToJsonTest.cs"];
m0_87 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="LinqToJsonTest.cs"];
m0_516 [label="return CreateDynamicContract(objectType);", span="1017-1017", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="LinqToJsonTest.cs"];
m0_55 [label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="277-277", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_284 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="577-577", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="LinqToJsonTest.cs"];
m0_83 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="LinqToJsonTest.cs"];
m0_85 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="72-72", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="LinqToJsonTest.cs"];
m0_84 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="LinqToJsonTest.cs"];
m0_86 [label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="LinqToJsonTest.cs"];
m0_451 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="1082-1082", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m0_7 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()", file="LinqToJsonTest.cs"];
m0_680 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="89-89", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_47 [label="CollectionAssert.AreEqual(expected, data)", span="127-127", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m0_495 [label="Assert.AreEqual(12, list1[0])", span="1204-1204", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m0_496 [label="Assert.AreEqual(55, list1[1])", span="1205-1205", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m0_497 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1198-1198", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m0_500 [label="string json = @''[\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        },\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]''", span="1212-1263", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m0_502 [label="Assert.AreEqual(4, o.Children()[''item''].Children()[''title''].Count())", span="1267-1267", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m0_504 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1210-1210", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m0_506 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="1281-1281", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_508 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', o.ToString())", span="1284-1290", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_510 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="1293-1293", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_512 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="1295-1295", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_514 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="1297-1297", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_519 [label="JObject o = JObject.FromObject(c1)", span="1311-1311", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m0_498 [label="Entry System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", file="LinqToJsonTest.cs"];
m0_505 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1279-1279", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_507 [label="JObject o = JObject.FromObject(c1)", span="1282-1282", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_509 [label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="1292-1292", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_511 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_513 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="1296-1296", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_515 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1279-1279", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m0_517 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="1301-1301", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m0_518 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="1303-1310", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m0_499 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1210-1210", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m0_501 [label="JArray o = JArray.Parse(json)", span="1265-1265", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m0_503 [label="CollectionAssert.AreEqual(new string[]\r\n            {\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta'',\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta''\r\n            },\r\n                o.Children()[''item''].Children()[''title''].Values<string>().ToArray())", span="1268-1275", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m0_520 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', o.ToString())", span="1313-1319", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m0_323 [label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="664-664", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="LinqToJsonTest.cs"];
m0_481 [label="DateTime d = enumerable[''Test1''].Value<DateTime>()", span="1176-1176", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_482 [label="Assert.AreEqual(new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc), d)", span="1178-1178", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_485 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="LinqToJsonTest.cs"];
m0_483 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1157-1157", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_484 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", span="304-304", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_486 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="LinqToJsonTest.cs"];
m0_487 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1183-1183", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m0_224 [label="JObject o = new JObject(\r\n                new JProperty(''Name'', ''John Smith''),\r\n                new JProperty(''BirthDate'', new DateTime(1983, 3, 20))\r\n                )", span="429-432", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m0_162 [label="MemberTypes memberType = m.MemberType()", span="431-431", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_160 [label="ExceptionAssert.Throws<JsonReaderException>(() => JToken.ReadFrom(jsonReader), @''Error reading JToken from JsonReader. Unexpected token: EndArray. Path '', line 1, position 2.'')", span="314-314", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m0_57 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(objectType)", span="282-282", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_60 [label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="293-293", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_61 [label="defaultMembers.Contains(member)", span="295-295", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_58 [label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n                    .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="286-287", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_59 [label=allMembers, span="290-290", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_62 [label="serializableMembers.Add(member)", span="298-298", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_416 [label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="816-816", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_417 [label="currentOnError = method", span="817-817", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_425 [label="t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(ConcurrentDictionary<,>)", span="827-827", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="LinqToJsonTest.cs"];
m0_423 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="400-400", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="LinqToJsonTest.cs"];
m0_418 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="759-759", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_424 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="405-405", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="LinqToJsonTest.cs"];
m0_421 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="LinqToJsonTest.cs"];
m0_422 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1071-1071", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_419 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="838-838", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="LinqToJsonTest.cs"];
m0_420 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="823-823", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="LinqToJsonTest.cs"];
m0_426 [label="return true;", span="828-828", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="LinqToJsonTest.cs"];
m0_298 [label=constructorParameters, span="615-615", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_303 [label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="629-629", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_304 [label="property != null", span="631-631", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_305 [label="parameterCollection.AddProperty(property)", span="633-633", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_306 [label="return parameterCollection;", span="638-638", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_310 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="LinqToJsonTest.cs"];
m0_311 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="647-647", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="LinqToJsonTest.cs"];
m0_300 [label="matchingMemberProperty != null && matchingMemberProperty.PropertyType != parameterInfo.ParameterType", span="622-622", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_302 [label="matchingMemberProperty != null || parameterInfo.Name != null", span="627-627", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_307 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="609-609", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_308 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="LinqToJsonTest.cs"];
m0_309 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="LinqToJsonTest.cs"];
m0_301 [label="matchingMemberProperty = null", span="623-623", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_299 [label="JsonProperty matchingMemberProperty = (parameterInfo.Name != null) ? memberProperties.GetClosestMatchProperty(parameterInfo.Name) : null", span="619-619", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_312 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="LinqToJsonTest.cs"];
m0_178 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", span="336-336", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m0_572 [label="dic1.Add(''dic3'', dic3)", span="1427-1427", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m0_12 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="72-72", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="LinqToJsonTest.cs"];
m0_13 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="80-80", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", color=green, community=0, file="LinqToJsonTest.cs"];
m0_14 [label="return (_resolverType == other._resolverType && _contractType == other._contractType);", span="82-82", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", color=green, community=0, file="LinqToJsonTest.cs"];
m0_15 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="80-80", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", color=green, community=0, file="LinqToJsonTest.cs"];
m0_16 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="188-188", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", color=green, community=0, file="LinqToJsonTest.cs"];
m0_17 [label="IgnoreSerializableAttribute = true", span="191-191", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="LinqToJsonTest.cs"];
m0_186 [label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="462-462", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_190 [label="Type dictionaryType", span="468-468", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_192 [label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="471-471", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_189 [label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="466-466", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_188 [label="return;", span="464-464", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_191 [label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="469-469", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_187 [label="extensionDataAttribute == null", span="463-463", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_193 [label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="472-472", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_221 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="LinqToJsonTest.cs"];
m0_522 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="254-254", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="LinqToJsonTest.cs"];
m0_523 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)", file="LinqToJsonTest.cs"];
m0_524 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="LinqToJsonTest.cs"];
m0_525 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1049-1049", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_526 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", span="1037-1037", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="LinqToJsonTest.cs"];
m0_521 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1029-1029", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="LinqToJsonTest.cs"];
m0_527 [label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1031-1031", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="LinqToJsonTest.cs"];
m0_528 [label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1033-1033", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="LinqToJsonTest.cs"];
m0_529 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1029-1029", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="LinqToJsonTest.cs"];
m0_252 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="535-535", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="LinqToJsonTest.cs"];
m0_10 [label="return false;", span="75-75", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="LinqToJsonTest.cs"];
m0_601 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_358 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="LinqToJsonTest.cs"];
m0_53 [label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="272-272", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_139 [label="Assert.AreEqual(JTokenType.Array, a.Type)", span="275-275", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_20 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", span="76-76", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", file="LinqToJsonTest.cs"];
m0_21 [label="JObject anon = new JObject\r\n            {\r\n                [''id''] = Guid.NewGuid()\r\n            }", span="78-81", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", file="LinqToJsonTest.cs", color=green, community=0];
m0_22 [label="Assert.AreEqual(JTokenType.Guid, anon[''id''].Type)", span="82-82", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", file="LinqToJsonTest.cs", color=green, community=0];
m0_285 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="592-592", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_23 [label="Dictionary<string, JToken> dict = anon.ToObject<Dictionary<string, JToken>>()", span="84-84", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", file="LinqToJsonTest.cs"];
m0_24 [label="Assert.AreEqual(JTokenType.Guid, dict[''id''].Type)", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", file="LinqToJsonTest.cs"];
m0_25 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", span="76-76", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Guid()", file="LinqToJsonTest.cs"];
m0_26 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="LinqToJsonTest.cs"];
m0_27 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1921-1921", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="LinqToJsonTest.cs"];
m0_360 [label="(string)c == ''LINQ to JSON''", span="813-813", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_81 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="591-591", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="LinqToJsonTest.cs"];
m0_222 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="LinqToJsonTest.cs"];
m0_296 [label="var constructorParameters = constructor.GetParameters()", span="611-611", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="LinqToJsonTest.cs"];
m0_549 [label="currentCallback != null", span="1076-1076", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_233 [label="isJTokenValueType && !(value is JToken)", span="505-505", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_237 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="LinqToJsonTest.cs"];
m0_238 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="LinqToJsonTest.cs"];
m0_239 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="LinqToJsonTest.cs"];
m0_241 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="LinqToJsonTest.cs"];
m0_242 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1674-1674", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="LinqToJsonTest.cs"];
m0_243 [label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="547-547", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="LinqToJsonTest.cs"];
m0_245 [label="Entry lambda expression", span="515-522", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_246 [label="object dictionary = getExtensionDataDictionary(o)", span="517-517", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_236 [label="Exit lambda expression", span="491-509", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_240 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="LinqToJsonTest.cs"];
m0_244 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="LinqToJsonTest.cs"];
m0_235 [label="setExtensionDataDictionaryValue(dictionary, key, value)", span="508-508", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_234 [label="value = (value != null) ? JToken.FromObject(value) : JValue.CreateNull()", span="506-506", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_247 [label="dictionary == null", span="518-518", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_261 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="LinqToJsonTest.cs"];
m0_89 [label="JEnumerable<JToken> tokens1 = new JEnumerable<JToken>()", span="175-175", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m0_142 [label="Assert.AreEqual(3, lineInfo.LineNumber)", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_297 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="263-263", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="LinqToJsonTest.cs"];
m0_143 [label="Assert.AreEqual(1, lineInfo.LinePosition)", span="280-280", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_290 [label="StringAssert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="614-617", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_291 [label="JProperty cpuProperty = o.Property(''CPU'')", span="619-619", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_292 [label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="620-620", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_293 [label="JProperty drivesProperty = o.Property(''Drives'')", span="622-622", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_294 [label="StringAssert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="623-626", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_603 [label="JsonProperty property = new JsonProperty()", span="1180-1180", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_479 [label="Assert.IsNotNull(enumerable)", span="1173-1173", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_18 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.TimeSpan)", file="LinqToJsonTest.cs"];
m0_19 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="LinqToJsonTest.cs"];
m0_4 [label="Assert.AreEqual(token1.Type, token2.Type)", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectGuid()", file="LinqToJsonTest.cs", color=green, community=0];
m0_5 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectGuid()", span="58-58", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectGuid()", file="LinqToJsonTest.cs"];
m0_6 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", span="163-163", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Guid)", file="LinqToJsonTest.cs"];
m0_531 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="LinqToJsonTest.cs"];
m0_532 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="1334-1334", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m0_533 [label="string json = @''/* blah */ {'hi':'hi!'}''", span="1336-1336", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m0_534 [label="JObject o = JObject.Parse(json)", span="1337-1337", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m0_166 [label="return false;", span="437-437", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_169 [label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="442-442", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_167 [label="!ReflectionUtils.CanReadMemberValue(m, true)", span="439-439", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_168 [label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="440-440", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_170 [label="Type dictionaryType", span="444-444", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_362 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="822-822", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_363 [label="List<Post> posts = GetPosts()", span="824-824", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_368 [label="Assert.AreEqual(''LINQ to JSON beta'', postTitles.ElementAt(1))", span="879-879", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_370 [label="Assert.AreEqual(''Json.NET'', categories.ElementAt(0).Category)", span="888-888", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_372 [label="Assert.AreEqual(''CodePlex'', categories.ElementAt(1).Category)", span="890-890", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_374 [label="Assert.AreEqual(''LINQ'', categories.ElementAt(2).Category)", span="892-892", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_376 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="822-822", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_378 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="LinqToJsonTest.cs"];
m0_364 [label="JObject rss =\r\n                new JObject(\r\n                    new JProperty(''channel'',\r\n                        new JObject(\r\n                            new JProperty(''title'', ''James Newton-King''),\r\n                            new JProperty(''link'', ''http://james.newtonking.com''),\r\n                            new JProperty(''description'', ''James Newton-King's blog.''),\r\n                            new JProperty(''item'',\r\n                                new JArray(\r\n                                    from p in posts\r\n                                    orderby p.Title\r\n                                    select new JObject(\r\n                                        new JProperty(''title'', p.Title),\r\n                                        new JProperty(''description'', p.Description),\r\n                                        new JProperty(''link'', p.Link),\r\n                                        new JProperty(''category'',\r\n                                            new JArray(\r\n                                                from c in p.Categories\r\n                                                select new JValue(c)))))))))", span="826-844", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_365 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', rss.ToString())", span="846-872", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_366 [label="var postTitles =\r\n                from p in rss[''channel''][''item'']\r\n                select p.Value<string>(''title'')", span="874-876", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_367 [label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', postTitles.ElementAt(0))", span="878-878", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_369 [label="var categories =\r\n                from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n                group c by c\r\n                into g\r\n                orderby g.Count() descending\r\n                select new { Category = g.Key, Count = g.Count() }", span="881-886", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_371 [label="Assert.AreEqual(2, categories.ElementAt(0).Count)", span="889-889", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_373 [label="Assert.AreEqual(1, categories.ElementAt(1).Count)", span="891-891", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_375 [label="Assert.AreEqual(1, categories.ElementAt(2).Count)", span="893-893", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m0_377 [label="Entry JArray.cstr", span="", cluster="JArray.cstr", file="LinqToJsonTest.cs"];
m0_379 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="146-146", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="LinqToJsonTest.cs"];
m0_260 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", span="541-541", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", file="LinqToJsonTest.cs"];
m0_155 [label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="423-423", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_158 [label="Exit lambda expression", span="420-427", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_159 [label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="LinqToJsonTest.cs"];
m0_157 [label="return m;", span="426-426", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_156 [label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="424-424", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_161 [label="Entry lambda expression", span="429-455", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_33 [label="ResolverContractKey key = new ResolverContractKey(GetType(), type)", span="236-236", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_140 [label="IJsonLineInfo lineInfo = a", span="277-277", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_251 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="LinqToJsonTest.cs"];
m0_530 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="LinqToJsonTest.cs"];
m0_220 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="LinqToJsonTest.cs"];
m0_620 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1335-1335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_692 [label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1337-1337", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_694 [label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1339-1339", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_698 [label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1348-1348", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_699 [label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1350-1350", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_700 [label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1351-1351", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_693 [label="specifiedMember == null", span="1338-1338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_695 [label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1341-1341", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_697 [label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1346-1346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_696 [label="return;", span="1343-1343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_701 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1335-1335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="LinqToJsonTest.cs"];
m0_313 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="941-941", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="LinqToJsonTest.cs"];
m0_314 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="659-659", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_315 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', ''Test1Value''),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="661-667", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_317 [label="StringAssert.AreEqual(@''{\r\n  ''''Test1'''': ''''Test1Value'''',\r\n  ''''Test2'''': ''''Test2Value'''',\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', o.ToString())", span="671-676", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_320 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''2000-10-10T00:00:00Z'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3.0,\r\n    ''''0004-05-06T07:08:09Z''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3.0\r\n  )\r\n]'', a.ToString())", span="698-718", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_321 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="659-659", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_322 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="316-316", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="LinqToJsonTest.cs"];
m0_324 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="LinqToJsonTest.cs"];
m0_325 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="111-111", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="LinqToJsonTest.cs"];
m0_326 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="729-729", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m0_327 [label="return new List<Post>()\r\n            {\r\n                new Post()\r\n                {\r\n                    Title = ''LINQ to JSON beta'',\r\n                    Description = ''Annoucing LINQ to JSON'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''LINQ'' }\r\n                },\r\n                new Post()\r\n                {\r\n                    Title = ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                    Description = ''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''CodePlex'' }\r\n                }\r\n            };", span="731-747", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m0_328 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="729-729", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m0_330 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="751-751", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m0_331 [label="Post p = new Post\r\n            {\r\n                Title = ''How to use FromObject'',\r\n                Categories = new[] { ''LINQ to JSON'' }\r\n            }", span="753-757", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m0_332 [label="JObject o = JObject.FromObject(p)", span="763-763", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m0_318 [label="JArray a =\r\n                new JArray(\r\n                    o,\r\n                    new DateTime(2000, 10, 10, 0, 0, 0, DateTimeKind.Utc),\r\n                    55,\r\n                    new JArray(\r\n                        ''1'',\r\n                        2,\r\n                        3.0,\r\n                        new DateTime(4, 5, 6, 7, 8, 9, DateTimeKind.Utc)\r\n                        ),\r\n                    new JConstructor(\r\n                        ''ConstructorName'',\r\n                        ''param1'',\r\n                        2,\r\n                        3.0\r\n                        )\r\n                    )", span="678-695", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_319 [label="Assert.AreEqual(5, a.Count())", span="697-697", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_333 [label="o[''Title''] = o[''Title''] + '' - Super effective!''", span="765-765", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m0_316 [label="Assert.AreEqual(4, o.Properties().Count())", span="669-669", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m0_334 [label="string json = o.ToString()", span="767-767", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m0_67 [label="dataContractAttribute != null && JsonTypeReflector.GetAttribute<DataMemberAttribute>(member) != null", span="309-309", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_229 [label="setExtensionDataDictionary == null", span="496-496", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_434 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="838-838", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", file="LinqToJsonTest.cs"];
m0_137 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="269-269", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_345 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", span="786-786", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m0_347 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="LinqToJsonTest.cs"];
m0_348 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="LinqToJsonTest.cs"];
m0_350 [label="(string)p[''Title''] == ''JSON Serializer Basics''", span="804-804", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_351 [label="Exit lambda expression", span="804-804", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_352 [label="Entry lambda expression", span="808-808", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_353 [label="(DateTime)p[''Date''] > new DateTime(2012, 1, 1)", span="808-808", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_354 [label="Exit lambda expression", span="808-808", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_355 [label="Entry lambda expression", span="813-813", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_356 [label="p[''Categories''].Any(c => (string)c == ''LINQ to JSON'')", span="813-813", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_346 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="LinqToJsonTest.cs"];
m0_349 [label="Entry lambda expression", span="804-804", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_357 [label="Exit lambda expression", span="813-813", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_256 [label="List<int> list = a.Values<int>().ToList()", span="478-478", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m0_180 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1104-1104", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="LinqToJsonTest.cs"];
m0_181 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="LinqToJsonTest.cs"];
m0_182 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="415-415", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_183 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="276-276", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="LinqToJsonTest.cs"];
m0_184 [label="EscapedPathAssert(''this.has.dots'', ''['this.has.dots']'')", span="367-367", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m0_185 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="LinqToJsonTest.cs"];
m0_152 [label="Assert.AreEqual(2, lineInfo.LineNumber)", span="301-301", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m0_37 [label=TypeContractCacheLock, span="243-243", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_40 [label="updatedCache[key] = contract", span="249-249", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_39 [label="Dictionary<ResolverContractKey, JsonContract> updatedCache = (cache != null)\r\n                        ? new Dictionary<ResolverContractKey, JsonContract>(cache)\r\n                        : new Dictionary<ResolverContractKey, JsonContract>()", span="246-248", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_38 [label="cache = state.ContractCache", span="245-245", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_41 [label="state.ContractCache = updatedCache", span="251-251", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_602 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="LinqToJsonTest.cs"];
m0_195 [label="Type createdType", span="475-475", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_124 [label="JsonTypeReflector.FullyTrusted", span="394-394", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_128 [label="constructor != null", span="401-401", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_130 [label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="406-406", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_131 [label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="411-411", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_132 [label="extensionDataMember != null", span="412-412", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_127 [label="ConstructorInfo constructor = GetParametrizedConstructor(contract.NonNullableUnderlyingType)", span="400-400", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_129 [label="contract.ParametrizedConstructor = constructor", span="404-404", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_126 [label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="398-398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_125 [label="contract.DefaultCreator = contract.GetUninitializedObject", span="395-395", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_133 [label="SetExtensionDataDelegates(contract, extensionDataMember)", span="413-413", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_282 [label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="588-588", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="LinqToJsonTest.cs"];
m0_82 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="LinqToJsonTest.cs"];
m0_232 [label="setExtensionDataDictionary(o, dictionary)", span="500-500", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_8 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="72-72", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="LinqToJsonTest.cs"];
m0_9 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs"];
m0_11 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="LinqToJsonTest.cs"];
m0_359 [label="Entry lambda expression", span="813-813", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_335 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''How to use FromObject - Super effective!'''',\r\n  ''''Description'''': null,\r\n  ''''Link'''': null,\r\n  ''''Categories'''': [\r\n    ''''LINQ to JSON''''\r\n  ]\r\n}'', json)", span="775-782", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m0_42 [label="return contract;", span="255-255", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_540 [label="return true;", span="1061-1061", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_542 [label="return true;", span="1066-1066", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_541 [label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1065-1065", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_543 [label="return false;", span="1068-1068", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_544 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1049-1049", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_108 [label="Assert.AreEqual(JTokenType.Comment, a[0].Type)", span="211-211", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_109 [label="Assert.AreEqual('' hi'', ((JValue)a[0]).Value)", span="212-212", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_110 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_113 [label="Entry Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", span="7-7", cluster="Newtonsoft.Json.Linq.JsonLoadSettings.JsonLoadSettings()", file="LinqToJsonTest.cs"];
m0_114 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2101-2101", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="LinqToJsonTest.cs"];
m0_115 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", span="216-216", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_117 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="225-225", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_118 [label="JArray a = (JArray)JToken.ReadFrom(jsonReader)", span="226-226", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_119 [label="Assert.AreEqual(3, a.Count)", span="228-228", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_121 [label="Assert.AreEqual(1L, ((JValue)a[0]).Value)", span="230-230", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_122 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", span="216-216", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_123 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2085-2085", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="LinqToJsonTest.cs"];
m0_134 [label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38", cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="LinqToJsonTest.cs"];
m0_111 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="LinqToJsonTest.cs"];
m0_112 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="LinqToJsonTest.cs"];
m0_116 [label="StringReader textReader = new StringReader(@''[\r\n    // hi\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="218-223", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_120 [label="Assert.AreEqual(JTokenType.Integer, a[0].Type)", span="229-229", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_135 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", span="259-259", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_88 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="LinqToJsonTest.cs"];
m0_91 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="519-519", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="LinqToJsonTest.cs"];
m0_94 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_90 [label="Entry System.Reflection.MemberInfo.MemberType()", span="101-101", cluster="System.Reflection.MemberInfo.MemberType()", file="LinqToJsonTest.cs"];
m0_92 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_93 [label="!ReflectionUtils.IsIndexedProperty(m)", span="275-275", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_95 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="441-441", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_600 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1153-1153", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_80 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="157-157", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m0_535 [label="Assert.AreEqual(''hi!'', (string)o[''hi''])", span="1338-1338", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m0_469 [label="Assert.AreEqual(5, a.Count())", span="1153-1153", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m0_216 [label="string json = array.ToString()", span="419-419", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m0_96 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_464 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="1147-1147", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m0_465 [label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="1148-1148", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m0_466 [label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="1149-1149", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m0_467 [label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="1151-1151", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m0_468 [label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="1152-1152", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m0_54 [label="List<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="274-275", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="LinqToJsonTest.cs"];
m0_470 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="1092-1092", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m0_471 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LinqToJsonTest.cs"];
m0_472 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1157-1157", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_473 [label="JObject o = null", span="1159-1159", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_476 [label="Assert.IsNull(enumerable)", span="1163-1163", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_477 [label="o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', null)\r\n                    )", span="1165-1170", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_474 [label="IJEnumerable<JToken> enumerable = null", span="1160-1160", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_475 [label="enumerable = o.AsJEnumerable()", span="1162-1162", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_478 [label="enumerable = o.AsJEnumerable()", span="1172-1172", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m0_44 [label="JObject o = JObject.Parse(''{'responseArray':'AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'}'')", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m0_279 [label="markedConstructors.Count == 1", span="583-583", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="LinqToJsonTest.cs"];
m0_253 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="473-473", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m0_254 [label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="475-475", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m0_255 [label="JArray a = JArray.Parse(json)", span="477-477", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m0_50 [label="expected = new Guid(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="131-131", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m0_51 [label="CollectionAssert.AreEqual(expected, data)", span="133-133", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m0_72 [label="JObject.Parse(''{'key':1,'')", span="148-148", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_52 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m0_56 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="LinqToJsonTest.cs"];
m0_69 [label="JArray.Parse(''[1'')", span="144-144", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_74 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_64 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_66 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_68 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_70 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_73 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_77 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="157-157", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m0_78 [label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="159-159", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m0_71 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_63 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="LinqToJsonTest.cs"];
m0_65 [label="JArray.Parse(''[1,'')", span="140-140", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_75 [label="JObject.Parse(''{'key':1'')", span="152-152", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_76 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_79 [label="Assert.AreEqual(0, tokens.Count())", span="161-161", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m0_102 [label="propertyInfo.PropertyType.IsGenericType() && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="345-345", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_494 [label="List<int> list1 = olist.AsEnumerable().Values<int>().ToList()", span="1202-1202", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m0_144 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", span="259-259", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom_IgnoreComments()", file="LinqToJsonTest.cs"];
m0_146 [label="StringReader textReader = new StringReader(@''\r\nundefined\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="286-292", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m0_147 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="294-294", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m0_148 [label="JValue v = (JValue)JToken.ReadFrom(jsonReader)", span="295-295", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m0_149 [label="Assert.AreEqual(JTokenType.Undefined, v.Type)", span="297-297", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m0_262 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_263 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="489-566", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_264 [label="JObject o = JObject.Parse(json)", span="569-569", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_392 [label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="776-776", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_443 [label="Entry System.Type.BaseType()", span="155-155", cluster="System.Type.BaseType()", file="LinqToJsonTest.cs"];
m0_278 [label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="582-582", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="LinqToJsonTest.cs"];
m0_546 [label="users.Add(''name2'', name)", span="1356-1356", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_682 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="LinqToJsonTest.cs"];
m0_581 [label="DefaultContractResolverState state = GetState()", span="1132-1132", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_28 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m0_29 [label="TestClass_ULong instance = new TestClass_ULong { Value = ulong.MaxValue }", span="96-96", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m0_36 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="LinqToJsonTest.cs"];
m0_30 [label="JObject output = JObject.FromObject(instance)", span="97-97", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m0_31 [label="StringAssert.AreEqual(@''{\r\n  ''''Value'''': 18446744073709551615\r\n}'', output.ToString())", span="99-101", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m0_32 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject_ULongMaxValue()", file="LinqToJsonTest.cs"];
m0_34 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="435-435", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="LinqToJsonTest.cs"];
m0_35 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="LinqToJsonTest.cs"];
m0_43 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m0_270 [label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="581-581", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_271 [label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="583-583", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_272 [label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="585-585", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_196 [label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="478-478", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_223 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="427-427", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m0_106 [label="JArray a = (JArray)JToken.ReadFrom(jsonReader, new JsonLoadSettings\r\n            {\r\n                CommentHandling = CommentHandling.Load\r\n            })", span="205-208", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_445 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="LinqToJsonTest.cs"];
m0_446 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="1029-1029", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m0_447 [label="List<Post> posts = GetPosts()", span="1031-1031", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m0_448 [label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new\r\n                {\r\n                    title = ''James Newton-King'',\r\n                    link = ''http://james.newtonking.com'',\r\n                    description = ''James Newton-King's blog.'',\r\n                    item =\r\n                        from p in posts\r\n                        orderby p.Title\r\n                        select new\r\n                        {\r\n                            title = p.Title,\r\n                            description = p.Description,\r\n                            link = p.Link,\r\n                            category = p.Categories\r\n                        }\r\n                }\r\n            })", span="1033-1051", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m0_449 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", span="1053-1079", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m0_450 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="1081-1081", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m0_435 [label="List<Type> ret = new List<Type>()", span="854-854", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_441 [label="return ret;", span="865-865", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_440 [label="ret.Reverse()", span="864-864", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_439 [label="current = current.BaseType()", span="860-860", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_436 [label="Type current = type", span="856-856", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_437 [label="current != null && current != typeof(object)", span="857-857", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_438 [label="ret.Add(current)", span="859-859", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_442 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="852-852", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_431 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="LinqToJsonTest.cs"];
m0_432 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="LinqToJsonTest.cs"];
m0_433 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="LinqToJsonTest.cs"];
m0_489 [label="IJEnumerable<JToken> values = o.Properties()", span="1191-1191", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m0_490 [label="Assert.AreEqual(4, values.Count())", span="1192-1192", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m0_491 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1183-1183", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m0_492 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1198-1198", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m0_493 [label="JToken olist = JArray.Parse(''[12,55]'')", span="1200-1200", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m0_145 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="460-460", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_151 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="LinqToJsonTest.cs"];
m0_153 [label="Entry lambda expression", span="420-427", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_150 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="852-852", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="LinqToJsonTest.cs"];
m0_154 [label="IList<MemberInfo> m = new List<MemberInfo>()", span="422-422", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_337 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1207-1207", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_343 [label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="693-693", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="LinqToJsonTest.cs"];
m0_344 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="691-691", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="LinqToJsonTest.cs"];
m0_340 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="686-686", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="LinqToJsonTest.cs"];
m0_342 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="691-691", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="LinqToJsonTest.cs"];
m0_341 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="LinqToJsonTest.cs"];
m0_338 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="686-686", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="LinqToJsonTest.cs"];
m0_339 [label="return JsonTypeReflector.GetJsonConverter(objectType);", span="688-688", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="LinqToJsonTest.cs"];
m0_266 [label="Assert.AreEqual(32, resultObjects.Properties().Count())", span="573-573", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_267 [label="Assert.AreEqual(32, resultObjects.Cast<JToken>().Values().Count())", span="575-575", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_268 [label="Assert.AreEqual(4, resultObjects.Cast<JToken>().Values(''GsearchResultClass'').Count())", span="577-577", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_588 [label="t is JContainer", span="1474-1474", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m0_604 [label="Entry lambda expression", span="1479-1479", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_605 [label="d.Name == ''$id''", span="1479-1479", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_606 [label="Exit lambda expression", span="1479-1479", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_607 [label="Entry lambda expression", span="1484-1484", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_609 [label="Exit lambda expression", span="1484-1484", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_610 [label="Entry lambda expression", span="1489-1489", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_611 [label="idProperty.Value.ToString() == r.Value.ToString()", span="1489-1489", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_612 [label="Exit lambda expression", span="1489-1489", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_615 [label=name, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_616 [label=users, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_613 [label=jsonReader, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_614 [label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_617 [label=o, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_608 [label="d.Name == ''$ref''", span="1484-1484", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_618 [label=idProperty, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_214 [label="array.Add(text)", span="416-416", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m0_283 [label="return null;", span="590-590", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="LinqToJsonTest.cs"];
m0_408 [label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="804-804", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_409 [label="currentOnDeserializing = method", span="805-805", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_410 [label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="807-807", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_225 [label="JsonSerializer serializer = new JsonSerializer()", span="434-434", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m0_219 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="LinqToJsonTest.cs"];
m0_488 [label="IEnumerable<JObject> o = new[]\r\n            {\r\n                JObject.FromObject(new { First = 1, Second = 2 }),\r\n                JObject.FromObject(new { First = 1, Second = 2 })\r\n            }", span="1185-1189", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m0_217 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="410-410", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m0_258 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", span="541-541", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", file="LinqToJsonTest.cs"];
m0_257 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="LinqToJsonTest.cs"];
m0_259 [label="return _e.MoveNext();", span="543-543", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", file="LinqToJsonTest.cs"];
m0_458 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="901-901", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_444 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="LinqToJsonTest.cs"];
m0_202 [label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="488-488", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_545 [label="Entry lambda expression", span="1354-1359", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_194 [label="bool isJTokenValueType = typeof(JToken).IsAssignableFrom(valueType)", span="473-473", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_141 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="577-577", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="LinqToJsonTest.cs"];
m0_138 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1118-1118", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_136 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="174-174", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="LinqToJsonTest.cs"];
m0_203 [label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="489-489", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_206 [label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="512-512", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_208 [label="ExtensionDataGetter extensionDataGetter = o =>\r\n            {\r\n                object dictionary = getExtensionDataDictionary(o);\r\n                if (dictionary == null)\r\n                    return null;\r\n\r\n                return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n            }", span="515-522", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_205 [label="Type enumerableWrapper = typeof(DictionaryEnumerator<,>).MakeGenericType(keyType, valueType)", span="511-511", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_207 [label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParametrizedConstructor(constructors)", span="513-513", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_204 [label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\r\n            {\r\n                object dictionary = getExtensionDataDictionary(o);\r\n                if (dictionary == null)\r\n                {\r\n                    if (setExtensionDataDictionary == null)\r\n                        throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\r\n\r\n                    dictionary = createExtensionDataDictionary();\r\n                    setExtensionDataDictionary(o, dictionary);\r\n                }\r\n\r\n                // convert object value to JToken so it is compatible with dictionary\r\n                // could happen because of primitive types, type name handling and references\r\n                if (isJTokenValueType && !(value is JToken))\r\n                    value = (value != null) ? JToken.FromObject(value) : JValue.CreateNull();\r\n\r\n                setExtensionDataDictionaryValue(dictionary, key, value);\r\n            }", span="491-509", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_209 [label="extensionDataAttribute.ReadData", span="524-524", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_396 [label="Type prevAttributeType = null", span="786-786", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_567 [label="List<object> list2 = new List<object>()", span="1421-1421", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m0_568 [label="dic1.Add(''list1'', list1)", span="1423-1423", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m0_569 [label="dic1.Add(''list2'', list2)", span="1424-1424", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m0_570 [label="dic1.Add(''dic1'', dic1)", span="1425-1425", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m0_480 [label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0", cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="LinqToJsonTest.cs"];
m0_538 [label="converter != null\r\n                && !(converter is ComponentConverter)\r\n                && !(converter is ReferenceConverter)\r\n                && converter.GetType() != typeof(TypeConverter)", span="1055-1058", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_536 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="LinqToJsonTest.cs"];
m0_537 [label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="1052-1052", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_539 [label="converter.CanConvertTo(typeof(string))", span="1060-1060", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="LinqToJsonTest.cs"];
m0_415 [label="onError = onError ?? new List<SerializationErrorCallback>()", span="815-815", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="LinqToJsonTest.cs"];
m0_361 [label="Exit lambda expression", span="813-813", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_199 [label=items, span="389-389", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m0_200 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''value!''''\r\n}'', friend.ToString())", span="391-393", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m0_210 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="410-410", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m0_212 [label="JValue text = new JValue(''Manual text'')", span="413-413", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m0_211 [label="JArray array = new JArray()", span="412-412", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m0_198 [label="JArray items = new JArray(new JObject(new JProperty(''name'', ''value!'')))", span="387-387", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m0_197 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="385-385", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m0_201 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="385-385", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m0_213 [label="JValue date = new JValue(new DateTime(2000, 5, 23))", span="414-414", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m0_248 [label="return null;", span="519-519", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_619 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1322-1322", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_683 [label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1324-1324", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_684 [label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1326-1326", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_686 [label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1329-1330", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_685 [label="return null;", span="1327-1327", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_687 [label="return o => (bool)shouldSerializeCall(o);", span="1332-1332", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_688 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1322-1322", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_380 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="897-897", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_381 [label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="899-925", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_386 [label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="934-934", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_382 [label="JObject o = JObject.Parse(json)", span="927-927", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_399 [label="Assert.AreEqual(null, o[0])", span="948-948", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_383 [label="Assert.AreEqual(null, o[''purple''])", span="929-929", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_403 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="953-953", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m0_384 [label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="930-930", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_407 [label="Exit lambda expression", span="955-959", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_385 [label="CustomAssert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="932-932", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_411 [label="Entry lambda expression", span="965-969", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_387 [label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="935-935", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_393 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="943-943", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m0_394 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                Assert.AreEqual(null, o[0]);\r\n            }, ''Accessed JObject values with invalid key value: 0. Object property name expected.'')", span="945-949", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m0_388 [label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', (string)o[''channel''][''item''][0][''title''])", span="937-937", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_398 [label="JObject o = new JObject()", span="947-947", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_389 [label="CollectionAssert.AreEqual(new string[] { ''Json.NET 1.3 + New license + Now on CodePlex'', ''LINQ to JSON beta'' }, o[''channel''][''item''].Children().Values<string>(''title'').ToArray())", span="939-939", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_402 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JArray a = new JArray();\r\n                Assert.AreEqual(null, a[''purple'']);\r\n            }, @''Accessed JArray values with invalid key value: ''''purple''''. Int32 array index expected.'')", span="955-959", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m0_390 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="897-897", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m0_406 [label="Assert.AreEqual(null, a[''purple''])", span="958-958", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_391 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="LinqToJsonTest.cs"];
m0_414 [label="Exit lambda expression", span="965-969", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_395 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="943-943", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m0_397 [label="Entry lambda expression", span="945-949", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_400 [label="Exit lambda expression", span="945-949", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_401 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="953-953", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m0_404 [label="Entry lambda expression", span="955-959", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_405 [label="JArray a = new JArray()", span="957-957", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_412 [label="JConstructor c = new JConstructor(''ConstructorValue'')", span="967-967", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_413 [label="Assert.AreEqual(null, c[''purple''])", span="968-968", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_218 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="LinqToJsonTest.cs"];
m0_459 [label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="903-903", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_461 [label="return contract;", span="906-906", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_462 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="901-901", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_460 [label="InitializeContract(contract)", span="904-904", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_463 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="41-41", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="LinqToJsonTest.cs"];
m0_97 [label="!ReflectionUtils.IsIndexedProperty(m)", span="287-287", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_265 [label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="571-571", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_428 [label="return true;", span="832-832", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="LinqToJsonTest.cs"];
m0_179 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="LinqToJsonTest.cs"];
m0_562 [label="prevAttributeType = attributeType", span="1099-1099", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_566 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="LinqToJsonTest.cs"];
m0_576 [label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="1122-1122", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_579 [label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1128-1128", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_563 [label="return true;", span="1101-1101", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_564 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1071-1071", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_565 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62", cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="LinqToJsonTest.cs"];
m0_574 [label="List<MemberInfo> members = GetSerializableMembers(type)", span="1120-1120", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_575 [label="members == null", span="1121-1121", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_577 [label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1124-1124", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_578 [label=members, span="1126-1126", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_571 [label="Entry System.Type.IsGenericTypeDefinition()", span="146-146", cluster="System.Type.IsGenericTypeDefinition()", file="LinqToJsonTest.cs"];
m0_573 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="LinqToJsonTest.cs"];
m0_580 [label="property != null", span="1130-1130", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_712 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1379-1379", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="LinqToJsonTest.cs"];
m0_713 [label="return ResolvePropertyName(propertyName);", span="1383-1383", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="LinqToJsonTest.cs"];
m0_714 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1379-1379", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="LinqToJsonTest.cs"];
m0_230 [label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="497-497", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_273 [label="List<JToken> descendants = o.Descendants().ToList()", span="587-587", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_274 [label="Assert.AreEqual(89, descendants.Count)", span="588-588", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_275 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m0_452 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="888-888", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="LinqToJsonTest.cs"];
m0_453 [label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="890-890", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="LinqToJsonTest.cs"];
m0_456 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="888-888", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="LinqToJsonTest.cs"];
m0_454 [label="InitializeContract(contract)", span="891-891", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="LinqToJsonTest.cs"];
m0_455 [label="return contract;", span="893-893", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="LinqToJsonTest.cs"];
m0_457 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="92-92", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="LinqToJsonTest.cs"];
m0_582 [label="state.NameTable", span="1135-1135", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_99 [label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="189-189", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m0_100 [label="Assert.AreEqual(0, tokens.GetHashCode())", span="191-191", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m0_101 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="187-187", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m0_104 [label="StringReader textReader = new StringReader(@''[\r\n    // hi\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="197-202", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_103 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_105 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="204-204", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_430 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="823-823", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="LinqToJsonTest.cs"];
m0_276 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="367-367", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="LinqToJsonTest.cs"];
m0_281 [label="Entry System.Collections.Generic.IEnumerable<T>.Children<T>()", span="224-224", cluster="System.Collections.Generic.IEnumerable<T>.Children<T>()", file="LinqToJsonTest.cs"];
m0_277 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", span="100-100", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", file="LinqToJsonTest.cs"];
m0_280 [label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="279-279", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="LinqToJsonTest.cs"];
m0_49 [label="data = o[''responseArray''].ToObject<byte[]>()", span="130-130", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m0_45 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="LinqToJsonTest.cs"];
m0_46 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LinqToJsonTest.cs"];
m0_48 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="LinqToJsonTest.cs"];
m0_555 [label="method.ReturnType != typeof(void)", span="1085-1085", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_556 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1086-1086", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_557 [label="attributeType == typeof(OnErrorAttribute)", span="1088-1088", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_558 [label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1090-1090", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_336 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="751-751", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m0_286 [label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="594-600", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_171 [label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="445-445", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_175 [label="return true;", span="451-451", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_177 [label="Exit lambda expression", span="429-455", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_174 [label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="450-450", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_176 [label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="454-454", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_173 [label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="448-448", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_172 [label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="447-447", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_681 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1359-1359", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="LinqToJsonTest.cs"];
m0_707 [label="return propertyName;", span="1361-1361", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="LinqToJsonTest.cs"];
m0_708 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1359-1359", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="LinqToJsonTest.cs"];
m0_427 [label="t.Name == FSharpUtils.FSharpSetTypeName || t.Name == FSharpUtils.FSharpMapTypeName", span="831-831", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="LinqToJsonTest.cs"];
m0_709 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1369-1369", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="LinqToJsonTest.cs"];
m0_710 [label="return ResolvePropertyName(dictionaryKey);", span="1371-1371", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="LinqToJsonTest.cs"];
m0_711 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1369-1369", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="LinqToJsonTest.cs"];
m0_590 [label="IList<JProperty> ids = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$id'').ToList()", span="1479-1479", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m0_98 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="187-187", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m0_165 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_163 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_164 [label="JToken.ReadFrom(jsonReader)", span="314-314", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_227 [label="Assert.AreEqual(''John Smith'', p.Name)", span="437-437", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m0_231 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs"];
m0_249 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LinqToJsonTest.cs"];
m0_226 [label="Person p = (Person)serializer.Deserialize(new JTokenReader(o), typeof(Person))", span="435-435", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m0_228 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="427-427", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m0_250 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="LinqToJsonTest.cs"];
m0_287 [label="JObject o = JObject.Parse(json)", span="602-602", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_288 [label="StringAssert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'', o.ToString())", span="604-610", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_289 [label="JArray list = o.Value<JArray>(''Drives'')", span="612-612", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_591 [label="ids.Count > 0", span="1481-1481", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m0_592 [label="IList<JProperty> refs = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$ref'').ToList()", span="1484-1484", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m0_593 [label=ids, span="1486-1486", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m0_690 [label="(bool)shouldSerializeCall(o)", span="1332-1332", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_689 [label="Entry lambda expression", span="1332-1332", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_691 [label="Exit lambda expression", span="1332-1332", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_705 [label="(bool)specifiedPropertyGet(o)", span="1348-1348", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_704 [label="Entry lambda expression", span="1348-1348", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_706 [label="Exit lambda expression", span="1348-1348", cluster="lambda expression", file="LinqToJsonTest.cs"];
m0_547 [label="!method.IsDefined(attributeType, false)", span="1073-1073", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_548 [label="return false;", span="1074-1074", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_560 [label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1095-1095", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_559 [label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1091-1091", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_561 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1096-1096", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="LinqToJsonTest.cs"];
m0_621 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="1210-1210", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_622 [label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="1212-1212", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_627 [label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1221-1221", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_628 [label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1222-1222", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_634 [label="mappedName = name", span="1232-1232", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_635 [label="property.PropertyName = ResolvePropertyName(mappedName)", span="1234-1234", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_636 [label="property.UnderlyingName = name", span="1235-1235", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_639 [label="property._required = propertyAttribute._required", span="1240-1240", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_640 [label="property.Order = propertyAttribute._order", span="1241-1241", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_641 [label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1242-1242", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_644 [label="property._required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="1248-1248", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_645 [label="property.Order = (dataMemberAttribute.Order != -1) ? (int?)dataMemberAttribute.Order : null", span="1249-1249", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_646 [label="property.DefaultValueHandling = (!dataMemberAttribute.EmitDefaultValue) ? (DefaultValueHandling?)DefaultValueHandling.Ignore : null", span="1250-1250", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_649 [label="property._required = Required.Always", span="1256-1256", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_651 [label="property.HasMemberAttribute = hasMemberAttribute", span="1260-1260", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_652 [label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null\r\n#if !(DOTNET || PORTABLE40 || PORTABLE)\r\n                || JsonTypeReflector.GetAttribute<NonSerializedAttribute>(attributeProvider) != null", span="1262-1267", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_653 [label="memberSerialization != MemberSerialization.OptIn", span="1271-1271", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_655 [label="hasIgnoreDataMemberAttribute = (JsonTypeReflector.GetAttribute<IgnoreDataMemberAttribute>(attributeProvider) != null)", span="1276-1276", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_656 [label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1280-1280", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_657 [label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1285-1285", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_658 [label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1290-1290", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_659 [label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1291-1291", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_660 [label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1293-1293", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_662 [label="property.DefaultValue = defaultValueAttribute.Value", span="1295-1295", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_663 [label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="1297-1297", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_664 [label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="1298-1298", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_665 [label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="1299-1299", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_666 [label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="1300-1300", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_667 [label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="1301-1301", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_668 [label="property.ItemIsReference = (propertyAttribute != null) ? propertyAttribute._itemIsReference : null", span="1303-1303", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_669 [label="property.ItemConverter =\r\n                (propertyAttribute != null && propertyAttribute.ItemConverterType != null)\r\n                    ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, propertyAttribute.ItemConverterParameters)\r\n                    : null", span="1304-1307", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_670 [label="property.ItemReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._itemReferenceLoopHandling : null", span="1308-1308", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_671 [label="property.ItemTypeNameHandling = (propertyAttribute != null) ? propertyAttribute._itemTypeNameHandling : null", span="1309-1309", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_677 [label="memberSerialization == MemberSerialization.Fields", span="1318-1318", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_624 [label="dataContractAttribute != null && memberInfo != null", span="1215-1215", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_623 [label="DataMemberAttribute dataMemberAttribute", span="1214-1214", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_625 [label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo)memberInfo)", span="1216-1216", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_626 [label="dataMemberAttribute = null", span="1218-1218", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_632 [label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="1228-1228", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_633 [label="mappedName = dataMemberAttribute.Name", span="1229-1229", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_643 [label="dataMemberAttribute != null", span="1246-1246", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_630 [label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="1225-1225", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_631 [label="mappedName = propertyAttribute.PropertyName", span="1226-1226", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_638 [label="propertyAttribute != null", span="1238-1238", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_629 [label="string mappedName", span="1224-1224", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_648 [label="requiredAttribute != null", span="1254-1254", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_637 [label="bool hasMemberAttribute = false", span="1237-1237", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_675 [label=hasMemberAttribute, span="1316-1316", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_642 [label="hasMemberAttribute = true", span="1243-1243", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_647 [label="hasMemberAttribute = true", span="1251-1251", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_650 [label="hasMemberAttribute = true", span="1257-1257", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_654 [label="bool hasIgnoreDataMemberAttribute = false", span="1273-1273", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_661 [label="defaultValueAttribute != null", span="1294-1294", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_672 [label="allowNonPublicAccess = false", span="1311-1311", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_673 [label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1313-1313", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_674 [label="allowNonPublicAccess = true", span="1314-1314", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_676 [label="allowNonPublicAccess = true", span="1317-1317", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_678 [label="allowNonPublicAccess = true", span="1319-1319", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_679 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1207-1207", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="LinqToJsonTest.cs"];
m0_583 [label="property.PropertyName = state.NameTable.Add(property.PropertyName)", span="1137-1137", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_597 [label="valueProvider = new DynamicValueProvider(member)", span="1160-1160", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_587 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1118-1118", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_598 [label="valueProvider = new ReflectionValueProvider(member)", span="1162-1162", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_586 [label="return orderedProperties;", span="1145-1145", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_584 [label="properties.AddProperty(property)", span="1140-1140", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_589 [label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="72-72", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", file="LinqToJsonTest.cs"];
m0_594 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1153-1153", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_596 [label=DynamicCodeGeneration, span="1159-1159", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_595 [label="IValueProvider valueProvider", span="1156-1156", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_585 [label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1144-1144", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="LinqToJsonTest.cs"];
m0_599 [label="return valueProvider;", span="1169-1169", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m0_295 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="592-592", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m0_107 [label="Assert.AreEqual(4, a.Count)", span="210-210", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m0_0 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="61-61", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="LinqToJsonTest.cs"];
m0_1 [label="_resolverType = resolverType", span="63-63", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", color=green, community=0, file="LinqToJsonTest.cs"];
m0_2 [label="_contractType = contractType", span="64-64", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", color=green, community=0, file="LinqToJsonTest.cs"];
m0_3 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="61-61", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", color=green, community=0, file="LinqToJsonTest.cs"];
m0_703 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="LinqToJsonTest.cs"];
m0_429 [label="return false;", span="835-835", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="LinqToJsonTest.cs"];
m0_215 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="LinqToJsonTest.cs"];
m0_702 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="LinqToJsonTest.cs"];
m0_269 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="LinqToJsonTest.cs"];
m0_715 [label="out Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="LinqToJsonTest.cs"];
m0_716 [label="Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="LinqToJsonTest.cs"];
m0_717 [label="ref Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="LinqToJsonTest.cs"];
m0_718 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span="", file="LinqToJsonTest.cs"];
m0_719 [label=getExtensionDataDictionary, span="", file="LinqToJsonTest.cs"];
m0_720 [label=setExtensionDataDictionary, span="", file="LinqToJsonTest.cs"];
m0_721 [label="System.Reflection.MemberInfo", span="", file="LinqToJsonTest.cs"];
m0_722 [label=createExtensionDataDictionary, span="", file="LinqToJsonTest.cs"];
m0_723 [label=isJTokenValueType, span="", file="LinqToJsonTest.cs"];
m0_724 [label=setExtensionDataDictionaryValue, span="", file="LinqToJsonTest.cs"];
m0_725 [label=createEnumerableWrapper, span="", file="LinqToJsonTest.cs"];
m0_726 [label="out Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>", span="", file="LinqToJsonTest.cs"];
m0_727 [label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>", span="", file="LinqToJsonTest.cs"];
m0_728 [label=shouldSerializeCall, span="", file="LinqToJsonTest.cs"];
m0_729 [label=specifiedPropertyGet, span="", file="LinqToJsonTest.cs"];
m2_9 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="XmlNodeConverter.cs"];
m2_10 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="XmlNodeConverter.cs"];
m2_0 [label="Entry Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", span="99-99", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_1 [label="JsonContainerAttribute jsonContainerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(underlyingType)", span="102-102", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_2 [label="jsonContainerAttribute != null", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_3 [label="jsonContainerAttribute.ItemConverterType != null", span="106-106", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_4 [label="ItemConverter = JsonTypeReflector.CreateJsonConverterInstance(jsonContainerAttribute.ItemConverterType, \r\n                                                                                  jsonContainerAttribute.ItemConverterParameters)", span="107-108", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_5 [label="ItemIsReference = jsonContainerAttribute._itemIsReference", span="110-110", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_6 [label="ItemReferenceLoopHandling = jsonContainerAttribute._itemReferenceLoopHandling", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_7 [label="ItemTypeNameHandling = jsonContainerAttribute._itemTypeNameHandling", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_8 [label="Exit Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", span="99-99", cluster="Newtonsoft.Json.Serialization.JsonContainerContract.JsonContainerContract(System.Type)", file="XmlNodeConverter.cs"];
m2_11 [label="Newtonsoft.Json.Serialization.JsonContainerContract", span="", file="XmlNodeConverter.cs"];
m3_99 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="XmlNodeConverterTest.cs"];
m3_416 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1152-1152", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_417 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1154-1168", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_418 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1170-1170", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_421 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1189-1189", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_419 [label="string xml = IndentXml(newDoc.InnerXml)", span="1172-1172", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_420 [label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1174-1186", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_423 [label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented)", span="1206-1206", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_422 [label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1191-1203", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_424 [label="Console.WriteLine(newJson)", span="1207-1207", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_425 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1152-1152", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="XmlNodeConverterTest.cs"];
m3_732 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2634-2634", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs"];
m3_733 [label="var json = ''{\''%name\'':\''value\''}''", span="2636-2636", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs"];
m3_734 [label="XmlDocument node = JsonConvert.DeserializeXmlNode(json)", span="2638-2638", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs"];
m3_737 [label="Assert.AreEqual(json, json2)", span="2644-2644", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs"];
m3_735 [label="Assert.AreEqual(''<_x0025_name>value</_x0025_name>'', node.OuterXml)", span="2640-2640", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs"];
m3_736 [label="string json2 = JsonConvert.SerializeXmlNode(node)", span="2642-2642", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs"];
m3_738 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2634-2634", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="XmlNodeConverterTest.cs"];
m3_644 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="XmlNodeConverterTest.cs"];
m3_317 [label="Entry Unk.GetIndentedInnerXml", span="", cluster="Unk.GetIndentedInnerXml", file="XmlNodeConverterTest.cs"];
m3_643 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="2016-2016", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_646 [label="Newtonsoft.Json.JsonSerializerSettings settings = new Newtonsoft.Json.JsonSerializerSettings()", span="2018-2018", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_649 [label="Newtonsoft.Json.JsonTextReader reader = new Newtonsoft.Json.JsonTextReader(new System.IO.StreamReader(json))", span="2021-2021", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_653 [label="XmlWriter writer = XmlWriter.Create(xml)", span="2028-2028", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_647 [label="settings.Converters.Add(new Newtonsoft.Json.Converters.XmlNodeConverter())", span="2019-2019", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_648 [label="Newtonsoft.Json.JsonSerializer serializer = Newtonsoft.Json.JsonSerializer.Create(settings)", span="2020-2020", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_650 [label="XmlDocument doc = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="2023-2023", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_651 [label="reader.Read() && reader.TokenType != JsonToken.Comment", span="2024-2024", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_654 [label="doc.Save(writer)", span="2030-2030", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_652 [label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="2026-2026", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_655 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="2016-2016", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_290 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="XmlNodeConverterTest.cs"];
m3_52 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", span="138-138", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs"];
m3_53 [label="JObject json = new JObject()", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_54 [label="json[''Prop1''] = (string)null", span="141-141", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_55 [label="json[''Prop2''] = new MyModel().MyProperty", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_59 [label="XDocument d = json.ToObject<XDocument>(jsonSerializer)", span="147-147", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_56 [label="var xmlNodeConverter = new XmlNodeConverter { DeserializeRootElementName = ''object'' }", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_57 [label="var jsonSerializerSettings = new JsonSerializerSettings { Converters = new JsonConverter[] { xmlNodeConverter } }", span="145-145", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_58 [label="var jsonSerializer = JsonSerializer.CreateDefault(jsonSerializerSettings)", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_60 [label="StringAssert.Equals(@''<object>\r\n  <Prop1 />\r\n  <Prop2 />\r\n</object>'', d.ToString())", span="149-152", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs", color=green, community=0];
m3_61 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", span="138-138", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ConvertNullString()", file="XmlNodeConverterTest.cs"];
m3_47 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs"];
m3_146 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="XmlNodeConverterTest.cs"];
m3_78 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="XmlNodeConverterTest.cs"];
m3_415 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1125-1125", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_573 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="XmlNodeConverterTest.cs"];
m3_101 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_102 [label="string xml = @''<payload>\r\n    <Country>6</Country>\r\n    <FinancialTransactionApprovalRequestUID>79</FinancialTransactionApprovalRequestUID>\r\n    <TransactionStatus>Approved</TransactionStatus>\r\n    <StatusChangeComment></StatusChangeComment>\r\n    <RequestedBy>Someone</RequestedBy>\r\n</payload>''", span="231-237", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_103 [label="var xmlDocument = new XmlDocument()", span="239-239", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_104 [label="xmlDocument.LoadXml(xml)", span="241-241", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_105 [label="var result = xmlDocument.FirstChild.ChildNodes.Cast<XmlNode>().ToArray()", span="243-243", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_106 [label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="245-245", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_107 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Country'''': ''''6''''\r\n  },\r\n  {\r\n    ''''FinancialTransactionApprovalRequestUID'''': ''''79''''\r\n  },\r\n  {\r\n    ''''TransactionStatus'''': ''''Approved''''\r\n  },\r\n  {\r\n    ''''StatusChangeComment'''': ''''''''\r\n  },\r\n  {\r\n    ''''RequestedBy'''': ''''Someone''''\r\n  }\r\n]'', json)", span="247-263", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_108 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="XmlNodeConverterTest.cs"];
m3_575 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1827-1827", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_576 [label="TestComplexArrayClass o = new TestComplexArrayClass\r\n            {\r\n                Name = ''Hi'',\r\n                Products = new List<Product>\r\n                {\r\n                    new Product { Name = ''First'' }\r\n                }\r\n            }", span="1829-1836", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_577 [label="string output = JsonConvert.SerializeObject(o, new IsoDateTimeConverter())", span="1838-1838", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_578 [label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''test'', true)", span="1840-1840", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_579 [label="StringAssert.AreEqual(@''<test>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>'', IndentXml(xmlProduct.InnerXml))", span="1842-1850", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_580 [label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented, true)", span="1852-1852", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_581 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Hi'''',\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output2)", span="1854-1864", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_582 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1827-1827", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_583 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", span="1820-1820", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", file="XmlNodeConverterTest.cs"];
m3_512 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", span="1574-1574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_513 [label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1576-1584", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_514 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1586-1586", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_519 [label="StringAssert.AreEqual(json, newJson)", span="1602-1602", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_515 [label="string xml = GetIndentedInnerXml(node)", span="1587-1587", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_517 [label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1598-1598", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_516 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1589-1596", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_518 [label="Console.WriteLine(newJson)", span="1600-1600", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_520 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", span="1574-1574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="XmlNodeConverterTest.cs"];
m3_100 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="XmlNodeConverterTest.cs"];
m3_630 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs"];
m3_147 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="XmlNodeConverterTest.cs"];
m3_66 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="2055-2055", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverterTest.cs"];
m3_88 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="XmlNodeConverterTest.cs"];
m3_184 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="XmlNodeConverterTest.cs"];
m3_645 [label="Entry System.Text.Encoding.GetString(byte[])", span="0-0", cluster="System.Text.Encoding.GetString(byte[])", file="XmlNodeConverterTest.cs"];
m3_472 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="400-400", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="XmlNodeConverterTest.cs"];
m3_200 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="458-458", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_201 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n    <abbr class=''''dtstart'''' title=''''2005-10-05''''>October 5</abbr>\r\n    <abbr class=''''dtend'''' title=''''2005-10-08''''>7</abbr>\r\n    <span class=''''location''''>Argent Hotel, San Francisco, CA</span>\r\n  </a>\r\n</span>''", span="460-469", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_202 [label="XmlDocument doc = new XmlDocument()", span="470-470", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_203 [label="doc.LoadXml(xml)", span="471-471", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_204 [label="string jsonText = SerializeXmlNode(doc)", span="473-473", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_205 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''span'''': [\r\n        {\r\n          ''''@class'''': ''''summary'''',\r\n          ''''#text'''': ''''Web 2.0 Conference'''',\r\n          ''''#cdata-section'''': ''''my escaped text''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''location'''',\r\n          ''''#text'''': ''''Argent Hotel, San Francisco, CA''''\r\n        }\r\n      ],\r\n      ''''abbr'''': [\r\n        {\r\n          ''''@class'''': ''''dtstart'''',\r\n          ''''@title'''': ''''2005-10-05'''',\r\n          ''''#text'''': ''''October 5''''\r\n        },\r\n        {\r\n          ''''@class'''': ''''dtend'''',\r\n          ''''@title'''': ''''2005-10-08'''',\r\n          ''''#text'''': ''''7''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="474-510", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_206 [label="StringAssert.AreEqual(expected, jsonText)", span="512-512", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_207 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", span="458-458", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentSerializeIndented()", file="XmlNodeConverterTest.cs"];
m3_571 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="XmlNodeConverterTest.cs"];
m3_659 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2037-2037", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_660 [label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2039-2070", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_661 [label="string json = JsonConvert.SerializeXNode(XDocument.Parse(xaml), Formatting.Indented)", span="2072-2072", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_662 [label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="2074-2229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_663 [label="StringAssert.AreEqual(expectedJson, json)", span="2231-2231", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_664 [label="XNode node = JsonConvert.DeserializeXNode(json)", span="2233-2233", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_665 [label="string xaml2 = node.ToString()", span="2235-2235", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_666 [label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2237-2268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_667 [label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2270-2270", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_668 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2037-2037", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_633 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="2004-2004", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m3_634 [label="MemoryStream ms = new MemoryStream(System.Text.Encoding.UTF8.GetBytes(@''{root:{''''@booleanType'''':true}}''))", span="2006-2006", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m3_635 [label="MemoryStream xml = new MemoryStream()", span="2007-2007", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m3_636 [label="JsonBodyToSoapXml(ms, xml)", span="2009-2009", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m3_637 [label="string xmlString = System.Text.Encoding.UTF8.GetString(xml.ToArray())", span="2011-2011", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m3_638 [label="Assert.AreEqual(@''﻿<?xml version=''''1.0'''' encoding=''''utf-8''''?><root booleanType=''''true'''' />'', xmlString)", span="2013-2013", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m3_639 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="2004-2004", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs"];
m3_191 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1036-1036", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m3_175 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="404-404", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_176 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'/>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="406-410", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_177 [label="var xml = XElement.Parse(xmlString)", span="412-412", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_178 [label="var json1 = JsonConvert.SerializeXNode(xml)", span="414-414", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_180 [label="var equals = XElement.DeepEquals(xmlBack, xml)", span="417-417", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_179 [label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="415-415", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_181 [label="Assert.IsTrue(equals)", span="418-418", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_182 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="404-404", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="XmlNodeConverterTest.cs"];
m3_709 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2582-2582", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_710 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2584-2588", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_711 [label="var xml = XElement.Parse(xmlString)", span="2590-2590", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_712 [label="var json1 = JsonConvert.SerializeXNode(xml)", span="2592-2592", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_714 [label="var equals = XElement.DeepEquals(xmlBack, xml)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_713 [label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="2593-2593", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_715 [label="Assert.IsTrue(equals)", span="2596-2596", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_716 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2582-2582", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_247 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute", file="XmlNodeConverterTest.cs"];
m3_87 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="XmlNodeConverterTest.cs"];
m3_90 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_91 [label="string xml = @''<result xp_0:end=''''2014-08-15 13:12:11.9184'''' xp_0:start=''''2014-08-15 13:11:49.3140'''' xp_0:time_diff=''''22604.3836'''' xmlns:xp_0=''''Test1'''' p2:end=''''2014-08-15 13:13:49.5522'''' p2:start=''''2014-08-15 13:13:49.0268'''' p2:time_diff=''''525.4646'''' xmlns:p2=''''Test2'''' />''", span="203-203", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_92 [label="XmlDocument d = new XmlDocument()", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_93 [label="d.LoadXml(xml)", span="206-206", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_97 [label="StringAssert.AreEqual(xml, doc.OuterXml)", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_94 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_95 [label="StringAssert.AreEqual(@''{\r\n  ''''result'''': {\r\n    ''''@xp_0:end'''': ''''2014-08-15 13:12:11.9184'''',\r\n    ''''@xp_0:start'''': ''''2014-08-15 13:11:49.3140'''',\r\n    ''''@xp_0:time_diff'''': ''''22604.3836'''',\r\n    ''''@xmlns:xp_0'''': ''''Test1'''',\r\n    ''''@p2:end'''': ''''2014-08-15 13:13:49.5522'''',\r\n    ''''@p2:start'''': ''''2014-08-15 13:13:49.0268'''',\r\n    ''''@p2:time_diff'''': ''''525.4646'''',\r\n    ''''@xmlns:p2'''': ''''Test2''''\r\n  }\r\n}'', json)", span="210-221", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_96 [label="XmlDocument doc = JsonConvert.DeserializeObject<XmlDocument>(json)", span="223-223", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_98 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_452 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1312-1312", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_453 [label="string xml = @''<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! -->\r\n</span>''", span="1314-1316", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_454 [label="XmlDocument doc = new XmlDocument()", span="1317-1317", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_455 [label="doc.LoadXml(xml)", span="1318-1318", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_456 [label="string jsonText = SerializeXmlNode(doc)", span="1320-1320", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_457 [label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/''''/* Hi */,\r\n      ''''span'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="1322-1331", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_458 [label="StringAssert.AreEqual(expected, jsonText)", span="1333-1333", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_459 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1335-1335", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_460 [label="Assert.AreEqual(@''<span class=''''vevent''''><a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! --></span>'', newDoc.InnerXml)", span="1336-1336", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_461 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1312-1312", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs"];
m3_293 [label="Entry Unk.Save", span="", cluster="Unk.Save", file="XmlNodeConverterTest.cs"];
m3_328 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverterTest.cs"];
m3_327 [label="Entry Unk.WriteTo", span="", cluster="Unk.WriteTo", file="XmlNodeConverterTest.cs"];
m3_248 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode", file="XmlNodeConverterTest.cs"];
m3_604 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1920-1920", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_605 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n<A>\r\n<B name=''''sample'''' json:Array=''''true''''/>\r\n<C></C>\r\n<C></C>\r\n</A>\r\n</root>''", span="1922-1929", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_606 [label="XmlDocument d = new XmlDocument()", span="1931-1931", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_607 [label="d.LoadXml(xml)", span="1932-1932", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_608 [label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1934-1934", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_609 [label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''root'''': {\r\n    ''''A'''': {\r\n      ''''B'''': [\r\n        {\r\n          ''''@name'''': ''''sample''''\r\n        }\r\n      ],\r\n      ''''C'''': [\r\n        '''''''',\r\n        ''''''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="1936-1954", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_610 [label="XmlDocument d2 = JsonConvert.DeserializeXmlNode(json)", span="1956-1956", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_611 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-8''''?>\r\n<root>\r\n  <A>\r\n    <B name=''''sample'''' />\r\n    <C></C>\r\n    <C></C>\r\n  </A>\r\n</root>'', ToStringWithDeclaration(d2, true))", span="1958-1965", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_612 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1920-1920", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="XmlNodeConverterTest.cs"];
m3_632 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverterTest.cs"];
m3_752 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", span="2674-2674", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_753 [label="var original = XElement.Parse(''<MyElement xmlns=\''http://example.com\'' />'')", span="2676-2676", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_754 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2677-2677", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_755 [label="var json = JsonConvert.SerializeObject(original)", span="2679-2679", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_756 [label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2680-2680", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_757 [label="var deserialized = JsonConvert.DeserializeObject<XElement>(json)", span="2682-2682", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_758 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2683-2683", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_759 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", span="2674-2674", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_65 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="564-564", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs"];
m3_183 [label="Entry Unk.DeepEquals", span="", cluster="Unk.DeepEquals", file="XmlNodeConverterTest.cs"];
m3_250 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="595-595", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs"];
m3_251 [label="XmlNode node = DeserializeXmlNode(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'')", span="597-605", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs"];
m3_252 [label="Assert.AreEqual(@''<xs_x0021_:Choice_x0021_ msdata:IsDataSet_x0021_='''''''' xmlns:xs_x0021_=''''http://www.w3.org/2001/XMLSchema'''' xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''><?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?><![CDATA[<Kiwi>true</Kiwi>]]></xs_x0021_:Choice_x0021_>'', node.InnerXml)", span="607-607", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs"];
m3_253 [label="string json = SerializeXmlNode(node)", span="609-609", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs"];
m3_254 [label="StringAssert.AreEqual(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', json)", span="611-619", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs"];
m3_255 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="595-595", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="XmlNodeConverterTest.cs"];
m3_64 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="XmlNodeConverterTest.cs"];
m3_62 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="XmlNodeConverterTest.cs"];
m3_544 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", span="1678-1678", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_545 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': null\r\n}''", span="1680-1683", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_546 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1685-1685", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_550 [label="StringAssert.AreEqual(json, newJson)", span="1695-1695", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_547 [label="string xml = GetIndentedInnerXml(node)", span="1686-1686", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_549 [label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1693-1693", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_548 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json'''' />\r\n</root>'', xml)", span="1688-1691", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_551 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", span="1678-1678", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="XmlNodeConverterTest.cs"];
m3_174 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="XmlNodeConverterTest.cs"];
m3_157 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1114-1114", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="XmlNodeConverterTest.cs"];
m3_358 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="998-998", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m3_359 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}''); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'Prop2', line 1, position 15.'')", span="1000-1002", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m3_360 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="998-998", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs"];
m3_242 [label="Entry Unk.Element", span="", cluster="Unk.Element", file="XmlNodeConverterTest.cs"];
m3_594 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="XmlNodeConverterTest.cs"];
m3_337 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="934-934", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_338 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url />\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="936-946", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_339 [label="XmlDocument doc = new XmlDocument()", span="948-948", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_340 [label="doc.LoadXml(xml)", span="949-949", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_341 [label="string jsonText = SerializeXmlNode(doc)", span="951-951", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_344 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="976-976", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_342 [label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': null\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="953-972", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_343 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="974-974", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_345 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="934-934", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs"];
m3_283 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="746-746", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs"];
m3_284 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", span="746-746", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Utf8StringWriter.Utf8StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs"];
m3_130 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", span="303-303", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", file="XmlNodeConverterTest.cs"];
m3_22 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1090-1090", cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs"];
m3_110 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="XmlNodeConverterTest.cs"];
m3_501 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverterTest.cs"];
m3_24 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="93-93", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m3_25 [label="return DeserializeXmlNode(json, null);", span="95-95", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m3_26 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="93-93", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs"];
m3_265 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="639-639", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_266 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8''''?><!DOCTYPE STOCKQUOTE PUBLIC ''''-//W3C//DTD StockQuote 1.5//EN'''' ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''><STOCKQUOTE ROWCOUNT=''''2''''><RESULT><ROW><ASK>0</ASK><BID>0</BID><CHANGE>-16.310</CHANGE><COMPANYNAME>Dow Jones</COMPANYNAME><DATETIME>2014-04-17 15:50:37</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>16460.490</HIGH><LASTDATETIME>2014-04-17 15:50:37</LASTDATETIME><LASTPRICE>16408.540</LASTPRICE><LOW>16368.140</LOW><OPEN>16424.140</OPEN><PCHANGE>-0.099</PCHANGE><PE>0</PE><PREVIOUSCLOSE>16424.850</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>DJII</TICKER><TRADES>0</TRADES><VOLUME>136188700</VOLUME><YEARHIGH>11309.000</YEARHIGH><YEARLOW>9302.280</YEARLOW><YIELD>0</YIELD></ROW><ROW><ASK>0</ASK><BID>0</BID><CHANGE>9.290</CHANGE><COMPANYNAME>NASDAQ</COMPANYNAME><DATETIME>2014-04-17 15:40:01</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>4110.460</HIGH><LASTDATETIME>2014-04-17 15:40:01</LASTDATETIME><LASTPRICE>4095.520</LASTPRICE><LOW>4064.700</LOW><OPEN>4080.300</OPEN><PCHANGE>0.227</PCHANGE><PE>0</PE><PREVIOUSCLOSE>4086.230</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>COMP</TICKER><TRADES>0</TRADES><VOLUME>1784210100</VOLUME><YEARHIGH>4371.710</YEARHIGH><YEARLOW>3154.960</YEARLOW><YIELD>0</YIELD></ROW></RESULT><STATUS>Couldn't find ticker: SPIC?</STATUS><STATUSCODE>2</STATUSCODE></STOCKQUOTE>''", span="641-641", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_267 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''!DOCTYPE'''': {\r\n    ''''@name'''': ''''STOCKQUOTE'''',\r\n    ''''@public'''': ''''-//W3C//DTD StockQuote 1.5//EN'''',\r\n    ''''@system'''': ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''\r\n  },\r\n  ''''STOCKQUOTE'''': {\r\n    ''''@ROWCOUNT'''': ''''2'''',\r\n    ''''RESULT'''': {\r\n      ''''ROW'''': [\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''-16.310'''',\r\n          ''''COMPANYNAME'''': ''''Dow Jones'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''16460.490'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''LASTPRICE'''': ''''16408.540'''',\r\n          ''''LOW'''': ''''16368.140'''',\r\n          ''''OPEN'''': ''''16424.140'''',\r\n          ''''PCHANGE'''': ''''-0.099'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''16424.850'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''DJII'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''136188700'''',\r\n          ''''YEARHIGH'''': ''''11309.000'''',\r\n          ''''YEARLOW'''': ''''9302.280'''',\r\n          ''''YIELD'''': ''''0''''\r\n        },\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''9.290'''',\r\n          ''''COMPANYNAME'''': ''''NASDAQ'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''4110.460'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''LASTPRICE'''': ''''4095.520'''',\r\n          ''''LOW'''': ''''4064.700'''',\r\n          ''''OPEN'''': ''''4080.300'''',\r\n          ''''PCHANGE'''': ''''0.227'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''4086.230'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''COMP'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''1784210100'''',\r\n          ''''YEARHIGH'''': ''''4371.710'''',\r\n          ''''YEARLOW'''': ''''3154.960'''',\r\n          ''''YIELD'''': ''''0''''\r\n        }\r\n      ]\r\n    },\r\n    ''''STATUS'''': ''''Couldn't find ticker: SPIC?'''',\r\n    ''''STATUSCODE'''': ''''2''''\r\n  }\r\n}''", span="643-712", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_270 [label="doc1.LoadXml(xml)", span="716-716", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_274 [label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc11))", span="724-724", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_275 [label="XDocument doc2 = XDocument.Parse(xml)", span="727-727", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_279 [label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc22))", span="735-735", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_268 [label="XmlDocument doc1 = new XmlDocument()", span="714-714", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_272 [label="StringAssert.AreEqual(expected, json1)", span="720-720", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_277 [label="StringAssert.AreEqual(expected, json2)", span="731-731", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_269 [label="doc1.XmlResolver = null", span="715-715", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_271 [label="string json1 = JsonConvert.SerializeXmlNode(doc1, Formatting.Indented)", span="718-718", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_273 [label="XmlDocument doc11 = JsonConvert.DeserializeXmlNode(json1)", span="722-722", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_276 [label="string json2 = JsonConvert.SerializeXNode(doc2, Formatting.Indented)", span="729-729", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_278 [label="XDocument doc22 = JsonConvert.DeserializeXNode(json2)", span="733-733", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_280 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="639-639", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs"];
m3_511 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="1024-1024", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="XmlNodeConverterTest.cs"];
m3_318 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="893-893", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_319 [label="XmlWriterSettings settings = new XmlWriterSettings()", span="895-895", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_323 [label="node.WriteTo(writer)", span="902-902", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_320 [label="settings.Indent = true", span="896-896", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_321 [label="StringWriter sw = new StringWriter()", span="898-898", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_322 [label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="900-900", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_324 [label="return sw.ToString();", span="905-905", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_325 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="893-893", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_16 [label="Entry XmlNodeReader.cstr", span="", cluster="XmlNodeReader.cstr", file="XmlNodeConverterTest.cs"];
m3_658 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverterTest.cs"];
m3_536 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_537 [label="string json = @''{\r\n  ''''$id'''': null\r\n}''", span="1660-1662", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_538 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1664-1664", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_539 [label="string xml = GetIndentedInnerXml(node)", span="1665-1665", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_541 [label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1670-1670", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_540 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id='''''''' />'', xml)", span="1667-1668", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_542 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''''''\r\n}'', newJson)", span="1672-1674", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_543 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="XmlNodeConverterTest.cs"];
m3_281 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="763-763", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_295 [label="StringBuilder builder = new StringBuilder()", span="765-765", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_296 [label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="766-766", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_297 [label="doc.Save(writer)", span="768-768", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_298 [label="return builder.ToString();", span="770-770", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_299 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="763-763", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_446 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m3_447 [label="XmlDocument doc = new XmlDocument()", span="1301-1301", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m3_448 [label="doc.LoadXml(@''<name>O''''Connor</name>'')", span="1303-1303", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m3_449 [label="string json = SerializeXmlNode(doc)", span="1305-1305", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m3_450 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''O\''''Connor''''\r\n}'', json)", span="1306-1308", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m3_451 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="XmlNodeConverterTest.cs"];
m3_642 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="XmlNodeConverterTest.cs"];
m3_559 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1786-1786", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_560 [label="Product product = new Product()", span="1788-1788", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_561 [label="product.Name = ''Apple''", span="1790-1790", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_562 [label="product.ExpiryDate = new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc)", span="1791-1791", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_563 [label="product.Price = 3.99M", span="1792-1792", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_564 [label="product.Sizes = new string[] { ''Small'' }", span="1793-1793", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_565 [label="string output = JsonConvert.SerializeObject(product, new IsoDateTimeConverter())", span="1795-1795", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_566 [label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''product'', true)", span="1797-1797", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_567 [label="StringAssert.AreEqual(@''<product>\r\n  <Name>Apple</Name>\r\n  <ExpiryDate>2008-12-28T00:00:00Z</ExpiryDate>\r\n  <Price>3.99</Price>\r\n  <Sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Small</Sizes>\r\n</product>'', IndentXml(xmlProduct.InnerXml))", span="1799-1804", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_568 [label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented)", span="1806-1806", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_569 [label="StringAssert.AreEqual(@''{\r\n  ''''product'''': {\r\n    ''''Name'''': ''''Apple'''',\r\n    ''''ExpiryDate'''': ''''2008-12-28T00:00:00Z'''',\r\n    ''''Price'''': ''''3.99'''',\r\n    ''''Sizes'''': [\r\n      ''''Small''''\r\n    ]\r\n  }\r\n}'', output2)", span="1808-1817", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_570 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1786-1786", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs"];
m3_48 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="978-978", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="XmlNodeConverterTest.cs"];
m3_746 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2662-2662", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs"];
m3_747 [label="string xmlString = @''<myemptynode />''", span="2664-2664", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs"];
m3_748 [label="var xml = XElement.Parse(xmlString)", span="2666-2666", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs"];
m3_749 [label="string json = JsonConvert.SerializeXNode(xml, Formatting.Indented, true)", span="2668-2668", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs"];
m3_750 [label="Assert.AreEqual(''null'', json)", span="2670-2670", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs"];
m3_751 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2662-2662", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="XmlNodeConverterTest.cs"];
m3_249 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="XmlNodeConverterTest.cs"];
m3_20 [label="Entry Unk.MoveToContent", span="", cluster="Unk.MoveToContent", file="XmlNodeConverterTest.cs"];
m3_329 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="909-909", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_330 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n	  			<name>Alan</name>\r\n		  		<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n			  	<name>Louis</name>\r\n				  <url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="911-921", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_331 [label="XmlDocument doc = new XmlDocument()", span="923-923", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_332 [label="doc.LoadXml(xml)", span="924-924", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_333 [label="string jsonText = SerializeXmlNode(doc)", span="926-926", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_335 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="930-930", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_334 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="928-928", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_336 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", span="909-909", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs"];
m3_373 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_374 [label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="1034-1040", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_375 [label="XmlDocument arrayDoc = new XmlDocument()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_376 [label="arrayDoc.LoadXml(arrayXml)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_377 [label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="1045-1045", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_378 [label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1046-1057", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_379 [label="StringAssert.AreEqual(expected, arrayJsonText)", span="1058-1058", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_380 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="1060-1067", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_381 [label="arrayDoc = new XmlDocument()", span="1069-1069", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_382 [label="arrayDoc.LoadXml(arrayXml)", span="1070-1070", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_383 [label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1072-1072", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_384 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1073-1085", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_385 [label="StringAssert.AreEqual(expected, arrayJsonText)", span="1086-1086", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_386 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="1088-1094", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_387 [label="arrayDoc = new XmlDocument()", span="1096-1096", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_388 [label="arrayDoc.LoadXml(arrayXml)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_389 [label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_390 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': ''''Admin1''''\r\n    }\r\n  }\r\n}''", span="1100-1109", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_391 [label="StringAssert.AreEqual(expected, arrayJsonText)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_392 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs"];
m3_45 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="XmlNodeConverterTest.cs"];
m3_428 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="1211-1211", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_429 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1213-1227", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_430 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'', true)", span="1229-1229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_432 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'', true)", span="1246-1246", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_435 [label="StringAssert.AreEqual(json, newJson)", span="1264-1264", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_431 [label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1231-1243", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_434 [label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented, true)", span="1263-1263", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_433 [label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1248-1260", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_436 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="1211-1211", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs"];
m3_132 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs"];
m3_552 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1699-1699", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m3_553 [label="string json = @''{\r\n  ''''8452309520V2'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Exp. Date 1''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Issue Date 1''''\r\n        }\r\n      }\r\n    },\r\n    ''''457463534534'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS0'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}{\r\n  ''''34534634535345'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_NUMBER_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''S'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''WALK_IN'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Walk in''''\r\n        },\r\n        ''''PERSONAL_MEETING'''': {\r\n          ''''VALUE'''': ''''PM1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Met Client in Person''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''PHOTO_ID'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_TYPE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        }\r\n      }\r\n    },\r\n    ''''45635624523'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1701-1778", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m3_554 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { DeserializeXmlNode(json); },\r\n                ''XmlNodeConverter cannot convert JSON with an empty property name to XML. Path '8452309520V2.', line 3, position 9.'')", span="1780-1782", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m3_555 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1699-1699", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="XmlNodeConverterTest.cs"];
m3_462 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1340-1340", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_463 [label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="1342-1352", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_464 [label="XmlDocument doc = new XmlDocument()", span="1354-1354", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_465 [label="doc.LoadXml(xml)", span="1355-1355", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_466 [label="string jsonText = SerializeXmlNode(doc)", span="1357-1357", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_470 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1405-1405", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_467 [label="jsonText = JObject.Parse(jsonText).ToString()", span="1380-1380", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_468 [label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="1382-1401", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_469 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1403-1403", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_471 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1340-1340", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs"];
m3_669 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_670 [label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2277-2308", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_671 [label="XmlDocument document = new XmlDocument()", span="2310-2310", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_672 [label="document.LoadXml(xaml)", span="2311-2311", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_673 [label="string json = JsonConvert.SerializeXmlNode(document, Formatting.Indented)", span="2313-2313", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_674 [label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="2315-2470", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_675 [label="StringAssert.AreEqual(expectedJson, json)", span="2472-2472", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_676 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json)", span="2474-2474", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_677 [label="StringWriter sw = new StringWriter()", span="2476-2476", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_679 [label="node.WriteTo(writer)", span="2482-2482", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_678 [label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings\r\n            {\r\n                Indent = true,\r\n                OmitXmlDeclaration = true\r\n            })", span="2477-2481", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_681 [label="string xaml2 = sw.ToString()", span="2485-2485", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_680 [label="writer.Flush()", span="2483-2483", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_682 [label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2487-2518", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_683 [label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2520-2520", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_684 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs"];
m3_474 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1409-1409", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m3_475 [label="string json = @''{\r\n        ''''?xml'''': {\r\n          ''''@version'''': ''''1.0'''',\r\n          ''''@standalone'''': ''''no''''\r\n        },\r\n        ''''root'''': {\r\n          ''''person'''': [\r\n            {\r\n              ''''@id'''': ''''1'''',\r\n              ''''name'''': ''''Alan'''',\r\n              ''''url'''': ''''http://www.google.com''''\r\n            },\r\n            {\r\n              ''''@id'''': ''''2'''',\r\n              ''''name'''': ''''Louis'''',\r\n              ''''url'''': ''''http://www.yahoo.com''''\r\n            }\r\n          ]\r\n        }\r\n      }''", span="1411-1430", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m3_476 [label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1432-1432", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m3_477 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><name>Alan</name><url>http://www.google.com</url></person><person id=''''2''''><name>Louis</name><url>http://www.yahoo.com</url></person></root>'', doc.InnerXml)", span="1445-1445", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m3_478 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1409-1409", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs"];
m3_438 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1141-1141", cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="XmlNodeConverterTest.cs"];
m3_708 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", span="2560-2560", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", file="XmlNodeConverterTest.cs"];
m3_67 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="XmlNodeConverterTest.cs"];
m3_79 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", span="173-173", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_80 [label="string xml = @''<result xp_0:end=''''2014-08-15 13:12:11.9184'''' xp_0:start=''''2014-08-15 13:11:49.3140'''' xp_0:time_diff=''''22604.3836'''' xmlns:xp_0=''''Test1'''' p2:end=''''2014-08-15 13:13:49.5522'''' p2:start=''''2014-08-15 13:13:49.0268'''' p2:time_diff=''''525.4646'''' xmlns:p2=''''Test2'''' />''", span="175-175", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_81 [label="XDocument d = XDocument.Parse(xml)", span="177-177", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_85 [label="StringAssert.AreEqual(xml, doc.ToString())", span="196-196", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_82 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="179-179", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_83 [label="StringAssert.AreEqual(@''{\r\n  ''''result'''': {\r\n    ''''@xp_0:end'''': ''''2014-08-15 13:12:11.9184'''',\r\n    ''''@xp_0:start'''': ''''2014-08-15 13:11:49.3140'''',\r\n    ''''@xp_0:time_diff'''': ''''22604.3836'''',\r\n    ''''@xmlns:xp_0'''': ''''Test1'''',\r\n    ''''@p2:end'''': ''''2014-08-15 13:13:49.5522'''',\r\n    ''''@p2:start'''': ''''2014-08-15 13:13:49.0268'''',\r\n    ''''@p2:time_diff'''': ''''525.4646'''',\r\n    ''''@xmlns:p2'''': ''''Test2''''\r\n  }\r\n}'', json)", span="181-192", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_84 [label="XDocument doc = JsonConvert.DeserializeObject<XDocument>(json)", span="194-194", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_86 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", span="173-173", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="XmlNodeConverterTest.cs"];
m3_133 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="338-338", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_134 [label="DateTimeOffset d = new DateTimeOffset(2012, 12, 12, 12, 44, 1, TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(34)))", span="340-340", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_135 [label="var x = new DateTimeOffsetContainer { Date = d }", span="341-341", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_136 [label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="343-343", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_142 [label="Assert.AreEqual(x.Date, x2.Date)", span="358-358", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_137 [label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="345-349", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_138 [label="var xml = doc1.ToString()", span="351-351", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_140 [label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="354-354", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_139 [label="Assert.AreEqual(''<Date>2012-12-12T12:44:01+12:34</Date>'', xml)", span="352-352", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_141 [label="DateTimeOffsetContainer x2 = JsonConvert.DeserializeObject<DateTimeOffsetContainer>(json2)", span="356-356", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_143 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", span="338-338", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs"];
m3_208 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="516-516", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_209 [label="XmlDocument doc = new XmlDocument()", span="518-518", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_210 [label="string jsonText", span="519-519", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_222 [label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="551-551", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_225 [label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="558-558", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_228 [label="XmlElement element = doc.CreateElement(''xs'', ''Choice'', ''http://www.w3.org/2001/XMLSchema'')", span="565-565", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_229 [label="element.SetAttributeNode(doc.CreateAttribute(''msdata'', ''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata''))", span="566-566", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_230 [label="XmlAttribute aa = doc.CreateAttribute(@''xmlns'', ''xs'', ''http://www.w3.org/2000/xmlns/'')", span="568-568", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_233 [label="aa = doc.CreateAttribute(@''xmlns'', ''msdata'', ''http://www.w3.org/2000/xmlns/'')", span="572-572", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_238 [label="doc.AppendChild(element)", span="579-579", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_211 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n	</xs:element>\r\n</xs:schema>''", span="521-528", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_212 [label="XmlDocument document = new XmlDocument()", span="530-530", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_213 [label="document.LoadXml(xml)", span="531-531", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_218 [label="XDocument d = XDocument.Parse(xml)", span="542-542", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_214 [label="XmlAttribute attribute = document.DocumentElement.ChildNodes[0].Attributes[''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata'']", span="534-534", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_215 [label="attribute.Value = ''true''", span="535-535", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_216 [label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="537-537", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_217 [label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="539-539", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_219 [label="XAttribute a = d.Root.Element(''{http://www.w3.org/2001/XMLSchema}element'').Attribute(''{urn:schemas-microsoft-com:xml-msdata}IsDataSet'')", span="543-543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_220 [label="jsonText = JsonConvert.SerializeXNode(a)", span="545-545", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_221 [label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="547-547", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_223 [label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="553-553", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_236 [label="element.AppendChild(instruction)", span="576-576", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_224 [label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="555-555", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_226 [label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="560-560", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_237 [label="element.AppendChild(cDataSection)", span="577-577", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_227 [label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="562-562", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_232 [label="element.SetAttributeNode(aa)", span="570-570", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_235 [label="element.SetAttributeNode(aa)", span="574-574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_239 [label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="581-581", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_231 [label="aa.Value = ''http://www.w3.org/2001/XMLSchema''", span="569-569", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_234 [label="aa.Value = ''urn:schemas-microsoft-com:xml-msdata''", span="573-573", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_240 [label="StringAssert.AreEqual(@''{\r\n  ''''xs:Choice'''': {\r\n    ''''@msdata:IsDataSet'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', jsonText)", span="583-591", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_241 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="516-516", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs"];
m3_15 [label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="1010-1010", cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs"];
m3_21 [label="Entry Unk.ReadFrom", span="", cluster="Unk.ReadFrom", file="XmlNodeConverterTest.cs"];
m3_109 [label="Entry Unk.>", span="", cluster="Unk.>", file="XmlNodeConverterTest.cs"];
m3_346 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="980-980", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_347 [label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''Boolean'''':true,''''@id'''':''''2'''',''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="982-982", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_348 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="984-984", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_349 [label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="986-986", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_350 [label="Assert.AreEqual(expected, newDoc.InnerXml)", span="988-988", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_351 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="980-980", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs"];
m3_400 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="1125-1125", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m3_401 [label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1127-1127", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m3_402 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'photos', line 1, position 26.'')", span="1129-1131", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m3_403 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="1125-1125", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs"];
m3_502 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs"];
m3_352 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="992-992", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m3_353 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]''); }, ''XmlNodeConverter can only convert JSON that begins with an object.'')", span="994-994", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m3_354 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="992-992", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs"];
m3_690 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2534-2534", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_691 [label="var xmlString = @''<root xmlns=''''http://www.example.com/ns''''>\r\n  <a/>\r\n  <bns:b xmlns:bns=''''http://www.example.com/ns''''/>\r\n  <c/>\r\n</root>''", span="2536-2540", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_692 [label="var xml = XElement.Parse(xmlString)", span="2543-2543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_696 [label="xml1.LoadXml(xmlString)", span="2551-2551", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_693 [label="var json1 = JsonConvert.SerializeObject(xml)", span="2545-2545", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_694 [label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json1)", span="2547-2547", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_695 [label="var xml1 = new XmlDocument()", span="2550-2550", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_697 [label="var json2 = JsonConvert.SerializeObject(xml1)", span="2553-2553", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_698 [label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json2)", span="2555-2555", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_699 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2534-2534", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs"];
m3_17 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="XmlNodeConverterTest.cs"];
m3_473 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverterTest.cs"];
m3_50 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1406-1406", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverterTest.cs"];
m3_49 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs"];
m3_631 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1875-1875", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="XmlNodeConverterTest.cs"];
m3_629 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="435-435", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="XmlNodeConverterTest.cs"];
m3_75 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", span="155-155", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", file="XmlNodeConverterTest.cs"];
m3_407 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1136-1136", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_408 [label="string json = @''{''''count'''': 773840,''''photos'''': 773840}''", span="1138-1138", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_409 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1140-1140", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_411 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1145-1145", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_410 [label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", span="1142-1142", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_412 [label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1147-1147", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_413 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1136-1136", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs"];
m3_118 [label="Entry Unk.Nodes", span="", cluster="Unk.Nodes", file="XmlNodeConverterTest.cs"];
m3_427 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="XmlNodeConverterTest.cs"];
m3_111 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs"];
m3_112 [label="string xml = @''<payload>\r\n    <Country>6</Country>\r\n    <FinancialTransactionApprovalRequestUID>79</FinancialTransactionApprovalRequestUID>\r\n    <TransactionStatus>Approved</TransactionStatus>\r\n    <StatusChangeComment></StatusChangeComment>\r\n    <RequestedBy>Someone</RequestedBy>\r\n</payload>''", span="270-276", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs"];
m3_113 [label="var xmlDocument = XDocument.Parse(xml)", span="278-278", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs"];
m3_114 [label="var result = xmlDocument.Root.Nodes().ToArray()", span="280-280", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs"];
m3_115 [label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs"];
m3_116 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Country'''': ''''6''''\r\n  },\r\n  {\r\n    ''''FinancialTransactionApprovalRequestUID'''': ''''79''''\r\n  },\r\n  {\r\n    ''''TransactionStatus'''': ''''Approved''''\r\n  },\r\n  {\r\n    ''''StatusChangeComment'''': ''''''''\r\n  },\r\n  {\r\n    ''''RequestedBy'''': ''''Someone''''\r\n  }\r\n]'', json)", span="284-300", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs"];
m3_117 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="XmlNodeConverterTest.cs"];
m3_291 [label="Entry XmlWriterSettings.cstr", span="", cluster="XmlWriterSettings.cstr", file="XmlNodeConverterTest.cs"];
m3_628 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverterTest.cs"];
m3_23 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="XmlNodeConverterTest.cs"];
m3_158 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="378-378", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_159 [label="XmlDocument doc = new XmlDocument()", span="380-380", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_160 [label="doc.LoadXml(''<root />'')", span="381-381", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_161 [label="string json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="383-383", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_162 [label="Assert.AreEqual(''null'', json)", span="384-384", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_163 [label="doc = new XmlDocument()", span="386-386", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_164 [label="doc.LoadXml(''<root></root>'')", span="387-387", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_165 [label="json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="389-389", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_166 [label="Assert.AreEqual(@'''''''''''', json)", span="390-390", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_167 [label="XDocument doc1 = XDocument.Parse(''<root />'')", span="392-392", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_168 [label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="394-394", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_169 [label="Assert.AreEqual(''null'', json)", span="395-395", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_170 [label="doc1 = XDocument.Parse(''<root></root>'')", span="397-397", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_171 [label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="399-399", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_172 [label="Assert.AreEqual(@'''''''''''', json)", span="400-400", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_173 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="378-378", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs"];
m3_68 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs"];
m3_69 [label="Foo foo = new Foo { Bar = null }", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs"];
m3_70 [label="string json = JsonConvert.SerializeObject(foo)", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs"];
m3_71 [label="Assert.AreEqual(@''{''''Bar'''':null}'', json)", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs"];
m3_72 [label="Foo foo2 = JsonConvert.DeserializeObject<Foo>(json)", span="167-167", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs"];
m3_73 [label="Assert.IsNull(foo2.Bar)", span="169-169", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs"];
m3_74 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="XmlNodeConverterTest.cs"];
m3_51 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="XmlNodeConverterTest.cs"];
m3_437 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1063-1063", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="XmlNodeConverterTest.cs"];
m3_18 [label="Entry XAttribute.cstr", span="", cluster="XAttribute.cstr", file="XmlNodeConverterTest.cs"];
m3_656 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="XmlNodeConverterTest.cs"];
m3_700 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2568-2568", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_701 [label="var xml = new NullableXml { Name = ''test'', notNull = XElement.Parse(''<root>test</root>'') }", span="2570-2570", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_702 [label="var json = JsonConvert.SerializeObject(xml)", span="2571-2571", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_704 [label="Assert.AreEqual(xml.Name, w2.Name)", span="2574-2574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_705 [label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2575-2575", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_706 [label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2576-2576", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_703 [label="var w2 = JsonConvert.DeserializeObject<NullableXml>(json)", span="2573-2573", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_707 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2568-2568", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs"];
m3_292 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="XmlNodeConverterTest.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="63-63", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_1 [label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="65-65", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_2 [label="XmlNodeReader reader = new XmlNodeReader(node)", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_4 [label="node is XmlDocument", span="70-70", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_6 [label="node is XmlAttribute", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_7 [label="XmlAttribute attribute = (XmlAttribute)node", span="76-76", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_12 [label="Assert.AreEqual(json, linqJson)", span="87-87", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_13 [label="return json;", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_3 [label="XObject xNode", span="69-69", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_5 [label="xNode = XDocument.Load(reader)", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_9 [label="reader.MoveToContent()", span="81-81", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_10 [label="xNode = XNode.ReadFrom(reader)", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_8 [label="xNode = new XAttribute(XName.Get(attribute.LocalName, attribute.NamespaceURI), attribute.Value)", span="77-77", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_11 [label="string linqJson = JsonConvert.SerializeXNode(xNode, Formatting.Indented)", span="85-85", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_14 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="63-63", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs"];
m3_426 [label="Entry Unk.IndentXml", span="", cluster="Unk.IndentXml", file="XmlNodeConverterTest.cs"];
m3_760 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", span="2687-2687", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_761 [label="var original = new XElement(''{http://example.com}MyElement'')", span="2689-2689", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_762 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2690-2690", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_763 [label="var json = JsonConvert.SerializeObject(original)", span="2692-2692", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_764 [label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2693-2693", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_765 [label="var deserialized = JsonConvert.DeserializeObject<XElement>(json)", span="2695-2695", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_766 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2696-2696", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_767 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", span="2687-2687", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_144 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlNodeConverterTest.cs"];
m3_414 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1047-1047", cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_89 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="XmlNodeConverterTest.cs"];
m3_556 [label="Entry lambda expression", span="1781-1781", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_198 [label="JsonConvert.DeserializeXmlNode(json)", span="453-453", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_197 [label="Entry lambda expression", span="453-453", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_199 [label="Exit lambda expression", span="453-453", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_355 [label="Entry lambda expression", span="994-994", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_356 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="994-994", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_357 [label="Exit lambda expression", span="994-994", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_361 [label="Entry lambda expression", span="1001-1001", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_362 [label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="1001-1001", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_363 [label="Exit lambda expression", span="1001-1001", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_398 [label="JsonConvert.DeserializeXmlNode(json)", span="1119-1119", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_397 [label="Entry lambda expression", span="1119-1119", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_399 [label="Exit lambda expression", span="1119-1119", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_405 [label="JsonConvert.DeserializeXNode(json)", span="1130-1130", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_404 [label="Entry lambda expression", span="1130-1130", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_406 [label="Exit lambda expression", span="1130-1130", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_534 [label="JsonConvert.DeserializeXmlNode(json, ''root'')", span="1653-1653", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_533 [label="Entry lambda expression", span="1653-1653", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_535 [label="Exit lambda expression", span="1653-1653", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_557 [label="DeserializeXmlNode(json)", span="1781-1781", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_558 [label="Exit lambda expression", span="1781-1781", cluster="lambda expression", file="XmlNodeConverterTest.cs"];
m3_620 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1990-1990", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_621 [label="var dict = new Dictionary<string, object> { { ''Int16'', (short)1 }, { ''Float'', 2f }, { ''Int32'', 3 } }", span="1992-1992", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_622 [label="var obj = JObject.FromObject(dict)", span="1993-1993", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_623 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings { Converters = { new XmlNodeConverter() { DeserializeRootElementName = ''root'' } } })", span="1994-1994", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_624 [label="var reader = obj.CreateReader()", span="1995-1995", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_625 [label="var value = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="1997-1997", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_626 [label="Assert.AreEqual(@''<root><Int16>1</Int16><Float>2</Float><Int32>3</Int32></root>'', value.InnerXml)", span="1999-1999", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_627 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1990-1990", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs"];
m3_685 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2524-2524", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m3_686 [label="string json = @''{''''item'''': {''''@action'''': ''''update'''', ''''@itemid'''': ''''1'''', ''''elements'''': [{''''@action'''': ''''none'''', ''''@id'''': ''''2''''},{''''@action'''': ''''none'''', ''''@id'''': ''''3''''}],''''@description'''': ''''temp''''}}''", span="2526-2526", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m3_687 [label="XmlDocument xmldoc = JsonConvert.DeserializeXmlNode(json)", span="2528-2528", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m3_688 [label="Assert.AreEqual(@''<item action=''''update'''' itemid=''''1'''' description=''''temp''''><elements action=''''none'''' id=''''2'''' /><elements action=''''none'''' id=''''3'''' /></item>'', xmldoc.InnerXml)", span="2530-2530", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m3_689 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2524-2524", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs"];
m3_785 [label="Entry XDocument.cstr", span="", cluster="XDocument.cstr", file="XmlNodeConverterTest.cs"];
m3_486 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1493-1493", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_487 [label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1495-1495", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_488 [label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1496-1496", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_489 [label="circularDictionary.Add(''self'', circularDictionary)", span="1497-1497", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_490 [label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1499-1500", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_491 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1502-1511", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_492 [label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1513-1513", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_493 [label="string xml = GetIndentedInnerXml(node)", span="1514-1514", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_496 [label="string xmlJson = SerializeXmlNode(node)", span="1525-1525", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_494 [label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1515-1521", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_495 [label="StringAssert.AreEqual(expected, xml)", span="1523-1523", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_497 [label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1526-1537", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_498 [label="StringAssert.AreEqual(expectedXmlJson, xmlJson)", span="1539-1539", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_499 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1493-1493", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs"];
m3_27 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_28 [label="JsonTextReader reader", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_29 [label="reader = new JsonTextReader(new StringReader(json))", span="102-102", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_32 [label="deserializeRootElementName != null", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_33 [label="converter.DeserializeRootElementName = deserializeRootElementName", span="107-107", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_36 [label="reader = new JsonTextReader(new StringReader(json))", span="115-115", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_30 [label="reader.Read()", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_34 [label="XmlNode node = (XmlNode)converter.ReadJson(reader, typeof(XmlDocument), null, new JsonSerializer())", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_31 [label="XmlNodeConverter converter = new XmlNodeConverter()", span="104-104", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_38 [label="XDocument d = (XDocument)converter.ReadJson(reader, typeof(XDocument), null, new JsonSerializer())", span="117-117", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_35 [label="string xmlText = node.OuterXml", span="113-113", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_43 [label="return node;", span="128-128", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_42 [label="Assert.AreEqual(xmlText, linqXmlText)", span="125-125", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_37 [label="reader.Read()", span="116-116", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_39 [label="string linqXmlText = d.ToString(SaveOptions.DisableFormatting)", span="119-119", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_40 [label="d.Declaration != null", span="120-120", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_41 [label="linqXmlText = d.Declaration + linqXmlText", span="122-122", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_44 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs"];
m3_246 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs"];
m3_500 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="XmlNodeConverterTest.cs"];
m3_595 [label="Entry Unk.WriteNode", span="", cluster="Unk.WriteNode", file="XmlNodeConverterTest.cs"];
m3_46 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="XmlNodeConverterTest.cs"];
m3_439 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1268-1268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_440 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1270-1285", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_441 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1287-1287", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_443 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1292-1292", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_442 [label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="1289-1289", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_444 [label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1294-1294", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_445 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1268-1268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs"];
m3_364 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1006-1006", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_365 [label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="1008-1008", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_366 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1010-1010", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_367 [label="string expected = @''<root><r><Date>34343</Date><Date>55</Date></r></root>''", span="1012-1012", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_368 [label="Assert.AreEqual(expected, newDoc.InnerXml)", span="1014-1014", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_369 [label="string json = SerializeXmlNode(newDoc)", span="1016-1016", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_370 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1017-1026", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_371 [label="StringAssert.AreEqual(expected, json)", span="1028-1028", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_372 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1006-1006", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs"];
m3_596 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="XmlNodeConverterTest.cs"];
m3_725 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", span="2620-2620", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs"];
m3_726 [label="var json = ''{\''DocumentId\'':13779965364495889899 }''", span="2622-2622", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs"];
m3_727 [label="XmlDocument node = JsonConvert.DeserializeXmlNode(json)", span="2624-2624", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs"];
m3_728 [label="Assert.AreEqual(''<DocumentId>13779965364495889899</DocumentId>'', node.OuterXml)", span="2626-2626", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs"];
m3_729 [label="string json2 = JsonConvert.SerializeXmlNode(node)", span="2628-2628", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs"];
m3_730 [label="Assert.AreEqual(@''{''''DocumentId'''':''''13779965364495889899''''}'', json2)", span="2630-2630", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs"];
m3_731 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", span="2620-2620", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="XmlNodeConverterTest.cs"];
m3_145 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="XmlNodeConverterTest.cs"];
m3_584 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverterTest.cs"];
m3_282 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="752-752", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_285 [label="StringBuilder builder = new StringBuilder()", span="754-754", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_286 [label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="755-755", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_287 [label="doc.Save(writer)", span="757-757", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_288 [label="return builder.ToString();", span="759-759", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_289 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="752-752", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs"];
m3_148 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", span="332-332", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", file="XmlNodeConverterTest.cs"];
m3_717 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2601-2601", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_718 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2603-2607", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_719 [label="XmlDocument xml = new XmlDocument()", span="2609-2609", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_720 [label="xml.LoadXml(xmlString)", span="2610-2610", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_721 [label="var json1 = JsonConvert.SerializeXmlNode(xml)", span="2612-2612", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_722 [label="var xmlBack = JsonConvert.DeserializeObject<XmlDocument>(json1)", span="2613-2613", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_723 [label="Assert.AreEqual(@''<root><b xmlns=''''http://www.example.com/ns''''>Asd</b><c>AAA</c><test>adad</test></root>'', xmlBack.OuterXml)", span="2615-2615", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_724 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2601-2601", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs"];
m3_657 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="XmlNodeConverterTest.cs"];
m3_326 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverterTest.cs"];
m3_768 [label="Entry XElement.cstr", span="", cluster="XElement.cstr", file="XmlNodeConverterTest.cs"];
m3_245 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection", file="XmlNodeConverterTest.cs"];
m3_243 [label="Entry Unk.Attribute", span="", cluster="Unk.Attribute", file="XmlNodeConverterTest.cs"];
m3_479 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1449-1449", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs"];
m3_480 [label="string json = @''{\r\n              ''''root!'''': {\r\n                ''''person!'''': [\r\n                  {\r\n                    ''''@id!'''': ''''1'''',\r\n                    ''''name!'''': ''''Alan'''',\r\n                    ''''url!'''': ''''http://www.google.com''''\r\n                  },\r\n                  {\r\n                    ''''@id!'''': ''''2'''',\r\n                    ''''name!'''': ''''Louis'''',\r\n                    ''''url!'''': ''''http://www.yahoo.com''''\r\n                  }\r\n                ]\r\n              }\r\n            }''", span="1451-1466", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs"];
m3_481 [label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1468-1468", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs"];
m3_482 [label="Assert.AreEqual(@''<root_x0021_><person_x0021_ id_x0021_=''''1''''><name_x0021_>Alan</name_x0021_><url_x0021_>http://www.google.com</url_x0021_></person_x0021_><person_x0021_ id_x0021_=''''2''''><name_x0021_>Louis</name_x0021_><url_x0021_>http://www.yahoo.com</url_x0021_></person_x0021_></root_x0021_>'', doc.InnerXml)", span="1470-1470", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs"];
m3_483 [label="string json2 = SerializeXmlNode(doc)", span="1472-1472", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs"];
m3_484 [label="StringAssert.AreEqual(@''{\r\n  ''''root!'''': {\r\n    ''''person!'''': [\r\n      {\r\n        ''''@id!'''': ''''1'''',\r\n        ''''name!'''': ''''Alan'''',\r\n        ''''url!'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id!'''': ''''2'''',\r\n        ''''name!'''': ''''Louis'''',\r\n        ''''url!'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json2)", span="1474-1489", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs"];
m3_485 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1449-1449", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="XmlNodeConverterTest.cs"];
m3_769 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2700-2700", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_770 [label="var original = XDocument.Parse(''<MyElement xmlns=\''http://example.com\'' />'')", span="2702-2702", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_771 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2703-2703", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_772 [label="var json = JsonConvert.SerializeObject(original)", span="2705-2705", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_773 [label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2706-2706", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_774 [label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2708-2708", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_775 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2709-2709", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_776 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2700-2700", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_256 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="623-623", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_257 [label="XmlDocument doc = new XmlDocument()", span="625-625", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_258 [label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="627-627", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_259 [label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="629-629", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_260 [label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="631-631", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_261 [label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="633-633", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_262 [label="Assert.AreEqual(expected, jsonText)", span="635-635", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_263 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="623-623", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs"];
m3_156 [label="Entry Unk.SerializeXNode", span="", cluster="Unk.SerializeXNode", file="XmlNodeConverterTest.cs"];
m3_244 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs"];
m3_529 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1646-1646", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs"];
m3_530 [label="string json = @''{\r\n  ''''$id'''': []\r\n}''", span="1648-1650", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs"];
m3_531 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json, ''root''); },\r\n                ''Unexpected JsonToken: StartArray. Path '$id', line 2, position 10.'')", span="1652-1654", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs"];
m3_532 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1646-1646", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="XmlNodeConverterTest.cs"];
m3_585 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1867-1867", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_586 [label="XmlReader reader = XmlReader.Create(new StringReader(xml))", span="1869-1869", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_587 [label="StringWriter sw = new StringWriter()", span="1871-1871", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_589 [label="reader.Read()", span="1874-1874", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_590 [label="writer.WriteNode(reader, false)", span="1876-1876", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_588 [label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true, OmitXmlDeclaration = true })", span="1872-1872", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_592 [label="return sw.ToString();", span="1881-1881", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_591 [label="writer.Flush()", span="1879-1879", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_593 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1867-1867", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs"];
m3_19 [label="Entry Unk.Get", span="", cluster="Unk.Get", file="XmlNodeConverterTest.cs"];
m3_119 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="309-309", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_120 [label="decimal d = (decimal)Math.PI + 1000000000m", span="311-311", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_121 [label="var x = new DecimalContainer { Number = d }", span="312-312", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_122 [label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="314-314", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_128 [label="Assert.AreEqual(x.Number, x2.Number)", span="329-329", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_123 [label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="316-320", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_124 [label="var xml = doc1.ToString()", span="322-322", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_126 [label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="325-325", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_125 [label="Assert.AreEqual(''<Number>1000000003.14159265358979</Number>'', xml)", span="323-323", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_127 [label="DecimalContainer x2 = JsonConvert.DeserializeObject<DecimalContainer>(json2)", span="327-327", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_129 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="309-309", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs"];
m3_131 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs"];
m3_149 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="362-362", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m3_150 [label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="364-364", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m3_151 [label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="366-366", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m3_152 [label="Assert.AreEqual(@''{''''root'''':{''''p'''':{''''#text'''':[''''Text1'''','''' Text2''''],''''span'''':[''''Span1'''',''''Span2'''']}}}'', json)", span="368-368", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m3_153 [label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="370-370", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m3_154 [label="StringAssert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="372-374", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m3_155 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="362-362", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs"];
m3_613 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1969-1969", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m3_614 [label="string xml = @''<root>\r\n<Reports d1p1:Array=''''true'''' xmlns:d1p1=''''http://james.newtonking.com/projects/json'''' />\r\n</root>''", span="1971-1973", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m3_615 [label="XmlDocument d = new XmlDocument()", span="1975-1975", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m3_616 [label="d.LoadXml(xml)", span="1976-1976", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m3_617 [label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1978-1978", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m3_618 [label="StringAssert.AreEqual(@''{\r\n  ''''root'''': {\r\n    ''''Reports'''': [\r\n      {}\r\n    ]\r\n  }\r\n}'', json)", span="1980-1986", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m3_619 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1969-1969", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs"];
m3_76 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="XmlNodeConverterTest.cs"];
m3_63 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MyModel.MyModel()", span="132-132", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MyModel.MyModel()", file="XmlNodeConverterTest.cs"];
m3_264 [label="Entry Unk.CreateDocumentFragment", span="", cluster="Unk.CreateDocumentFragment", file="XmlNodeConverterTest.cs"];
m3_77 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="XmlNodeConverterTest.cs"];
m3_574 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="XmlNodeConverterTest.cs"];
m3_572 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs"];
m3_739 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", span="2648-2648", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs"];
m3_740 [label="string xmlString = @''<myemptynode />''", span="2650-2650", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs"];
m3_741 [label="XmlDocument xml = new XmlDocument()", span="2652-2652", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs"];
m3_742 [label="xml.LoadXml(xmlString)", span="2653-2653", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs"];
m3_743 [label="string json = JsonConvert.SerializeXmlNode(xml, Formatting.Indented, true)", span="2655-2655", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs"];
m3_744 [label="Assert.AreEqual(''null'', json)", span="2657-2657", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs"];
m3_745 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", span="2648-2648", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="XmlNodeConverterTest.cs"];
m3_185 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", span="422-422", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs"];
m3_186 [label="XmlDocument doc = JsonConvert.DeserializeXmlNode(''{ A: { '@xsi:nil': true } }'')", span="424-424", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs"];
m3_187 [label="Assert.AreEqual(@''<A nil=''''true'''' />'', doc.OuterXml)", span="426-426", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs"];
m3_189 [label="Assert.AreEqual(doc.OuterXml, xdoc.ToString())", span="430-430", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs"];
m3_188 [label="XDocument xdoc = JsonConvert.DeserializeXNode(''{ A: { '@xsi:nil': true } }'')", span="428-428", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs"];
m3_190 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", span="422-422", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="XmlNodeConverterTest.cs"];
m3_294 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="XmlNodeConverterTest.cs"];
m3_597 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1885-1885", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m3_598 [label="string xml = @''<test>\r\n  <Name>Hi</Name>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>''", span="1887-1896", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m3_599 [label="XmlDocument d = new XmlDocument()", span="1898-1898", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m3_600 [label="d.LoadXml(xml)", span="1899-1899", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m3_601 [label="string output = JsonConvert.SerializeXmlNode(d, Formatting.Indented, true)", span="1901-1901", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m3_602 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': [\r\n    ''''Hi'''',\r\n    ''''Hi''''\r\n  ],\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output)", span="1903-1916", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m3_603 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1885-1885", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs"];
m3_300 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="774-774", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_301 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="776-798", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_302 [label="XmlDocument doc = new XmlDocument()", span="800-800", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_303 [label="doc.LoadXml(xml)", span="801-801", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_304 [label="string jsonText = SerializeXmlNode(doc)", span="803-803", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_308 [label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="854-854", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_305 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="805-848", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_306 [label="StringAssert.AreEqual(expected, jsonText)", span="850-850", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_307 [label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="852-852", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_309 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="774-774", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs"];
m3_503 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1543-1543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_504 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1545-1554", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_505 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1556-1556", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_509 [label="StringAssert.AreEqual(json, newJson)", span="1570-1570", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_506 [label="string xml = GetIndentedInnerXml(node)", span="1557-1557", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_508 [label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1568-1568", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_507 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1559-1566", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_510 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1543-1543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="XmlNodeConverterTest.cs"];
m3_393 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1114-1114", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_394 [label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1116-1116", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_395 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'photos', line 1, position 26.'')", span="1118-1120", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_396 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1114-1114", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs"];
m3_192 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="435-435", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="XmlNodeConverterTest.cs"];
m3_193 [label="string json = @''{\r\n    ''''Id'''': 1,\r\n     ''''Email'''': ''''james@example.com'''',\r\n     ''''Active'''': true,\r\n     ''''CreatedDate'''': ''''2013-01-20T00:00:00Z'''',\r\n     ''''Roles'''': [\r\n       ''''User'''',\r\n       ''''Admin''''\r\n     ],\r\n    ''''Team'''': {\r\n        ''''Id'''': 2,\r\n        ''''Name'''': ''''Software Developers'''',\r\n        ''''Description'''': ''''Creators of fine software products and services.''''\r\n    }\r\n}''", span="437-451", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="XmlNodeConverterTest.cs"];
m3_194 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'Email', line 3, position 13.'')", span="452-454", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="XmlNodeConverterTest.cs"];
m3_195 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="435-435", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="XmlNodeConverterTest.cs"];
m3_521 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1606-1606", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_522 [label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ],\r\n  ''''$id'''': ''''1''''\r\n}''", span="1608-1617", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_523 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1619-1619", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_524 [label="string xml = GetIndentedInnerXml(node)", span="1620-1620", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_526 [label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1631-1631", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_525 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1622-1629", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_527 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}'', newJson)", span="1633-1642", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_528 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1606-1606", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="XmlNodeConverterTest.cs"];
m3_640 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverterTest.cs"];
m3_310 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="858-858", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_311 [label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      },\r\n      ''''@href'''': ''''http://www.web2con.com/''''\r\n    }\r\n  }\r\n}''", span="860-877", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_312 [label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(jsonText)", span="879-879", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_313 [label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="881-886", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_314 [label="string formattedXml = GetIndentedInnerXml(doc)", span="888-888", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_315 [label="StringAssert.AreEqual(expected, formattedXml)", span="890-890", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_316 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="858-858", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs"];
m3_777 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_778 [label="var original = new XDocument(new XElement(''{http://example.com}MyElement''))", span="2715-2715", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_779 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2716-2716", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_780 [label="var json = JsonConvert.SerializeObject(original)", span="2718-2718", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_781 [label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2719-2719", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_782 [label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2721-2721", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_783 [label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2722-2722", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_784 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="XmlNodeConverterTest.cs"];
m3_641 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs"];
m3_196 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="XmlNodeConverterTest.cs"];
m3_786 [label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span="", file="XmlNodeConverterTest.cs"];
m3_787 [label=json, span="", file="XmlNodeConverterTest.cs"];
m3_788 [label=json, span="", file="XmlNodeConverterTest.cs"];
m3_789 [label=json, span="", file="XmlNodeConverterTest.cs"];
m3_790 [label=json, span="", file="XmlNodeConverterTest.cs"];
m3_791 [label=json, span="", file="XmlNodeConverterTest.cs"];
n104 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n104 -> n100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
n0 -> n1  [key=0, style=solid];
n0 -> n11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n14  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n18  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n23  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n30  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n32  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n38  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n42  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n43  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n44  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n0 -> n60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n1 -> n2  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n21  [key=0, style=solid];
n11 -> n69  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n12 -> n70  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n66  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n72  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n73  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n30  [key=0, style=solid];
n21 -> n70  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n23 -> n74  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n25 -> n74  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n72  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n38  [key=0, style=solid];
n30 -> n70  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n32 -> n74  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n55  [key=0, style=solid];
n38 -> n70  [key=2, style=dotted];
n38 -> n47  [key=1, style=dashed, color=darkseagreen4, label=tempCollectionType];
n42 -> n43  [key=0, style=solid];
n42 -> n72  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n46  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n75  [key=2, style=dotted];
n44 -> n76  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n51  [key=0, style=solid];
n46 -> n78  [key=2, style=dotted];
n46 -> n79  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n65  [key=0, style=solid];
n60 -> n80  [key=2, style=dotted];
n60 -> n62  [key=1, style=dashed, color=darkseagreen4, label=immutableParameterizedCreator];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n11  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n66  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n67  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
n10 -> n57  [key=0, style=solid];
n10 -> n68  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n13 -> n71  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=0, style=solid];
n20 -> n57  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n71  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n67  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n67  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
n29 -> n57  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n71  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n67  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n67  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n72  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n37 -> n57  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n71  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
n47 -> n48  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=0, style=solid];
n40 -> n74  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n67  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n77  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n67  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n50 -> n57  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n54 -> n57  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n65 -> n0  [key=0, style=bold, color=blue];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n95  [key=3, color=darkorchid, style=bold, label="Parameter variable object i2"];
n81 -> n82  [key=0, style=solid];
n81 -> n90  [key=1, style=dashed, color=darkseagreen4, label=object];
n82 -> n83  [key=0, style=solid];
n82 -> n90  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n90 -> n94  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n67  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=0, style=solid];
n85 -> n73  [key=2, style=dotted];
n85 -> n79  [key=2, style=dotted];
n86 -> n88  [key=0, style=solid];
n86 -> n67  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n88 -> n92  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n93  [key=2, style=dotted];
n91 -> n81  [key=0, style=bold, color=blue];
n95 -> n96  [key=0, style=solid];
n95 -> n64  [key=3, color=darkorchid, style=bold, label="method methodReturn int Compare"];
n96 -> n97  [key=0, style=solid];
n96 -> n100  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n103  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n67  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n102  [key=2, style=dotted];
n101 -> n95  [key=0, style=bold, color=blue];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_564  [key=0, style=solid];
m0_550 -> m0_179  [key=2, style=dotted];
m0_550 -> m0_180  [key=2, style=dotted];
m0_550 -> m0_565  [key=2, style=dotted];
m0_553 -> m0_11  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_555  [key=0, style=solid];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_27  [key=2, style=dotted];
m0_552 -> m0_564  [key=0, style=solid];
m0_552 -> m0_179  [key=2, style=dotted];
m0_552 -> m0_180  [key=2, style=dotted];
m0_552 -> m0_565  [key=2, style=dotted];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_53  [key=2, style=dotted];
m0_551 -> m0_553  [key=0, style=solid];
m0_554 -> m0_550  [key=0, style=bold, color=blue];
m0_554 -> m0_564  [key=0, style=solid];
m0_554 -> m0_179  [key=2, style=dotted];
m0_554 -> m0_180  [key=2, style=dotted];
m0_554 -> m0_566  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_516 -> m0_520  [key=0, style=solid];
m0_516 -> m0_481  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_84  [key=2, style=dotted];
m0_55 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_55 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_55 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_55 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_55 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_55 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_55 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_55 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_284 -> m0_141  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_85 -> m0_11  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_87  [key=2, style=dotted];
m0_85 -> m0_82  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_81  [key=2, style=dotted];
m0_86 -> m0_83  [key=0, style=bold, color=blue];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_391  [key=2, style=dotted];
m0_47 -> m0_495  [key=0, style=solid];
m0_47 -> m0_496  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_497  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_500  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_502  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_504  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_506  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_508  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_510  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_514  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_516  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_519  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_47 -> m0_11  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_497  [key=0, style=solid];
m0_495 -> m0_521  [key=2, style=dotted];
m0_495 -> m0_11  [key=2, style=dotted];
m0_496 -> m0_520  [key=0, style=solid];
m0_496 -> m0_458  [key=2, style=dotted];
m0_496 -> m0_11  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_497 -> m0_498  [key=0, style=solid];
m0_497 -> m0_522  [key=2, style=dotted];
m0_497 -> m0_505  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_507  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_509  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_511  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_513  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_515  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_517  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_518  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_497 -> m0_492  [key=0, style=bold, color=blue];
m0_500 -> m0_520  [key=0, style=solid];
m0_500 -> m0_108  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_500  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_502 -> m0_520  [key=0, style=solid];
m0_502 -> m0_452  [key=2, style=dotted];
m0_502 -> m0_11  [key=2, style=dotted];
m0_502 -> m0_503  [key=0, style=solid];
m0_502 -> m0_250  [key=2, style=dotted];
m0_502 -> m0_281  [key=2, style=dotted];
m0_502 -> m0_82  [key=2, style=dotted];
m0_504 -> m0_520  [key=0, style=solid];
m0_504 -> m0_445  [key=2, style=dotted];
m0_504 -> m0_499  [key=0, style=bold, color=blue];
m0_506 -> m0_520  [key=0, style=solid];
m0_506 -> m0_464  [key=2, style=dotted];
m0_506 -> m0_510  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_506 -> m0_511  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_506 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_506 -> m0_513  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_506 -> m0_514  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_506 -> m0_507  [key=0, style=solid];
m0_506 -> m0_516  [key=2, style=dotted];
m0_508 -> m0_520  [key=0, style=solid];
m0_508 -> m0_445  [key=2, style=dotted];
m0_508 -> m0_35  [key=2, style=dotted];
m0_508 -> m0_509  [key=0, style=solid];
m0_508 -> m0_36  [key=2, style=dotted];
m0_510 -> m0_520  [key=0, style=solid];
m0_510 -> m0_452  [key=2, style=dotted];
m0_510 -> m0_11  [key=2, style=dotted];
m0_510 -> m0_511  [key=0, style=solid];
m0_512 -> m0_520  [key=0, style=solid];
m0_512 -> m0_489  [key=2, style=dotted];
m0_512 -> m0_11  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_514 -> m0_520  [key=0, style=solid];
m0_514 -> m0_470  [key=2, style=dotted];
m0_514 -> m0_11  [key=2, style=dotted];
m0_514 -> m0_515  [key=0, style=solid];
m0_519 -> m0_520  [key=0, style=solid];
m0_519 -> m0_108  [key=2, style=dotted];
m0_519 -> m0_521  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_519 -> m0_34  [key=2, style=dotted];
m0_519 -> m0_528  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_140  [key=2, style=dotted];
m0_498 -> m0_501  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m0_498 -> m0_503  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m0_505 -> m0_506  [key=0, style=solid];
m0_505 -> m0_507  [key=0, style=solid];
m0_505 -> m0_523  [key=2, style=dotted];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_509  [key=0, style=solid];
m0_507 -> m0_524  [key=2, style=dotted];
m0_507 -> m0_34  [key=2, style=dotted];
m0_509 -> m0_510  [key=0, style=solid];
m0_509 -> m0_511  [key=0, style=solid];
m0_509 -> m0_185  [key=2, style=dotted];
m0_509 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_509 -> m0_513  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_509 -> m0_514  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_509 -> m0_27  [key=2, style=dotted];
m0_511 -> m0_512  [key=0, style=solid];
m0_511 -> m0_513  [key=0, style=solid];
m0_511 -> m0_525  [key=2, style=dotted];
m0_511 -> m0_11  [key=2, style=dotted];
m0_513 -> m0_514  [key=0, style=solid];
m0_513 -> m0_515  [key=0, style=solid];
m0_513 -> m0_185  [key=2, style=dotted];
m0_513 -> m0_11  [key=2, style=dotted];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_517  [key=0, style=solid];
m0_515 -> m0_185  [key=2, style=dotted];
m0_515 -> m0_505  [key=0, style=bold, color=blue];
m0_517 -> m0_518  [key=0, style=solid];
m0_517 -> m0_519  [key=0, style=solid];
m0_517 -> m0_526  [key=2, style=dotted];
m0_518 -> m0_520  [key=0, style=solid];
m0_518 -> m0_458  [key=2, style=dotted];
m0_518 -> m0_19  [key=2, style=dotted];
m0_518 -> m0_522  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_518 -> m0_523  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_518 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_518 -> m0_525  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_518 -> m0_526  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_518 -> m0_519  [key=0, style=solid];
m0_518 -> m0_516  [key=2, style=dotted];
m0_518 -> m0_55  [key=2, style=dotted];
m0_518 -> m0_444  [key=2, style=dotted];
m0_518 -> m0_530  [key=2, style=dotted];
m0_518 -> m0_527  [key=1, style=dashed, color=darkseagreen4, label=c1];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_501  [key=0, style=solid];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_503  [key=0, style=solid];
m0_501 -> m0_67  [key=2, style=dotted];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_505  [key=0, style=solid];
m0_503 -> m0_11  [key=2, style=dotted];
m0_503 -> m0_250  [key=2, style=dotted];
m0_503 -> m0_281  [key=2, style=dotted];
m0_503 -> m0_379  [key=2, style=dotted];
m0_503 -> m0_392  [key=2, style=dotted];
m0_520 -> m0_47  [key=0, style=bold, color=blue];
m0_520 -> m0_35  [key=2, style=dotted];
m0_520 -> m0_521  [key=0, style=solid];
m0_520 -> m0_36  [key=2, style=dotted];
m0_323 -> m0_324  [key=0, style=solid];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_485  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_481 -> m0_486  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_488  [key=2, style=dotted];
m0_482 -> m0_484  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_482 -> m0_485  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_482 -> m0_486  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_482 -> m0_11  [key=2, style=dotted];
m0_482 -> m0_324  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_138  [key=2, style=dotted];
m0_485 -> m0_139  [key=2, style=dotted];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_137  [key=2, style=dotted];
m0_483 -> m0_472  [key=0, style=bold, color=blue];
m0_484 -> m0_485  [key=0, style=solid];
m0_486 -> m0_487  [key=0, style=solid];
m0_487 -> m0_481  [key=0, style=bold, color=blue];
m0_487 -> m0_488  [key=0, style=solid];
m0_224 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_224 -> m0_196  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_229  [key=2, style=dotted];
m0_224 -> m0_221  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_90  [key=2, style=dotted];
m0_160 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_63  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_85  [key=2, style=dotted];
m0_57 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m0_60 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_60 -> m0_63  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_59  [key=0, style=solid];
m0_60 -> m0_86  [key=2, style=dotted];
m0_61 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_61 -> m0_63  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_87  [key=2, style=dotted];
m0_58 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_58 -> m0_63  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_81  [key=2, style=dotted];
m0_58 -> m0_82  [key=2, style=dotted];
m0_58 -> m0_83  [key=2, style=dotted];
m0_58 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_58 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=defaultMembers];
m0_59 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_63  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_71  [key=0, style=solid];
m0_59 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_59 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_62 -> m0_57  [key=0, style=bold, color=blue];
m0_62 -> m0_59  [key=0, style=solid];
m0_62 -> m0_88  [key=2, style=dotted];
m0_416 -> m0_417  [key=0, style=solid];
m0_416 -> m0_424  [key=2, style=dotted];
m0_416 -> m0_88  [key=2, style=dotted];
m0_417 -> m0_324  [key=2, style=dotted];
m0_417 -> m0_196  [key=2, style=dotted];
m0_417 -> m0_229  [key=2, style=dotted];
m0_417 -> m0_322  [key=2, style=dotted];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_427  [key=2, style=dotted];
m0_417 -> m0_428  [key=2, style=dotted];
m0_417 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_417 -> m0_394  [key=0, style=solid];
m0_425 -> m0_36  [key=2, style=dotted];
m0_425 -> m0_426  [key=0, style=solid];
m0_425 -> m0_427  [key=0, style=solid];
m0_425 -> m0_106  [key=2, style=dotted];
m0_425 -> m0_107  [key=2, style=dotted];
m0_423 -> m0_433  [key=2, style=dotted];
m0_423 -> m0_424  [key=0, style=solid];
m0_418 -> m0_230  [key=2, style=dotted];
m0_418 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m0_418 -> m0_419  [key=0, style=solid];
m0_418 -> m0_380  [key=0, style=bold, color=blue];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_434  [key=2, style=dotted];
m0_421 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_432  [key=2, style=dotted];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_547  [key=0, style=solid];
m0_422 -> m0_549  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_550  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_551  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m0_422 -> m0_552  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_553  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_554  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_555  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_556  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_557  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_422 -> m0_558  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m0_422 -> m0_559  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_560  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m0_422 -> m0_561  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_422 -> m0_562  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_429  [key=2, style=dotted];
m0_419 -> m0_430  [key=2, style=dotted];
m0_419 -> m0_431  [key=0, style=solid];
m0_420 -> m0_424  [key=1, style=dashed, color=darkseagreen4, label=sw];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_431  [key=2, style=dotted];
m0_420 -> m0_425  [key=0, style=solid];
m0_420 -> m0_427  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_426 -> m0_416  [key=0, style=bold, color=blue];
m0_426 -> m0_430  [key=0, style=solid];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_306  [key=0, style=solid];
m0_298 -> m0_300  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m0_298 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m0_298 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m0_303 -> m0_11  [key=2, style=dotted];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_297  [key=2, style=dotted];
m0_303 -> m0_35  [key=2, style=dotted];
m0_303 -> m0_311  [key=2, style=dotted];
m0_303 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_11  [key=2, style=dotted];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_297  [key=2, style=dotted];
m0_304 -> m0_313  [key=2, style=dotted];
m0_304 -> m0_298  [key=0, style=solid];
m0_305 -> m0_11  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_297  [key=2, style=dotted];
m0_305 -> m0_35  [key=2, style=dotted];
m0_305 -> m0_298  [key=0, style=solid];
m0_305 -> m0_312  [key=2, style=dotted];
m0_306 -> m0_11  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_297  [key=2, style=dotted];
m0_306 -> m0_35  [key=2, style=dotted];
m0_310 -> m0_11  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_250  [key=2, style=dotted];
m0_310 -> m0_251  [key=2, style=dotted];
m0_310 -> m0_35  [key=2, style=dotted];
m0_311 -> m0_11  [key=2, style=dotted];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_250  [key=2, style=dotted];
m0_311 -> m0_251  [key=2, style=dotted];
m0_311 -> m0_35  [key=2, style=dotted];
m0_311 -> m0_313  [key=0, style=solid];
m0_311 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
m0_311 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
m0_311 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
m0_311 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_311 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_300 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_300 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_300 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_300 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_53  [key=2, style=dotted];
m0_300 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_35  [key=2, style=dotted];
m0_302 -> m0_297  [key=2, style=dotted];
m0_302 -> m0_36  [key=2, style=dotted];
m0_302 -> m0_298  [key=0, style=solid];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_142  [key=0, style=bold, color=blue];
m0_308 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_308 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_67  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_35  [key=2, style=dotted];
m0_309 -> m0_36  [key=2, style=dotted];
m0_301 -> m0_35  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_297  [key=2, style=dotted];
m0_301 -> m0_36  [key=2, style=dotted];
m0_301 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_299  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_299 -> m0_310  [key=2, style=dotted];
m0_299 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
m0_299 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
m0_312 -> m0_298  [key=0, style=bold, color=blue];
m0_178 -> m0_171  [key=0, style=bold, color=blue];
m0_572 -> m0_573  [key=0, style=solid];
m0_572 -> m0_581  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_8  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_18  [key=2, style=dotted, color=green];
m0_13 -> m0_19  [key=2, style=dotted, color=green];
m0_13 -> m0_15  [key=1, style=dashed, color=green, label=token1];
m0_13 -> m0_16  [key=1, style=dashed, color=green, label=token1];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_14 -> m0_242  [key=2, style=dotted, color=green];
m0_14 -> m0_16  [key=1, style=dashed, color=green, label=token2];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_9  [key=2, style=dotted, color=green];
m0_15 -> m0_10  [key=2, style=dotted, color=green];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_11  [key=2, style=dotted, color=green];
m0_17 -> m0_12  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_186 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_186 -> m0_181  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m0_186 -> m0_182  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m0_186 -> m0_162  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m0_186 -> m0_184  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m0_186 -> m0_214  [key=2, style=dotted];
m0_186 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=extensionDataAttribute];
m0_186 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label=extensionDataAttribute];
m0_190 -> m0_11  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_192 -> m0_11  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> n71  [key=2, style=dotted];
m0_192 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_192 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_192 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_192 -> m0_192  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_195  [key=2, style=dotted];
m0_189 -> m0_196  [key=2, style=dotted];
m0_189 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_189 -> m0_182  [key=2, style=dotted];
m0_189 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_189 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_188 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_188 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_194  [key=2, style=dotted];
m0_188 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_188 -> m0_213  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_179  [key=2, style=dotted];
m0_191 -> m0_183  [key=2, style=dotted];
m0_191 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=dictionaryType];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_187  [key=3, color=darkorchid, style=bold, label="Local variable int v1"];
m0_187 -> m0_189  [key=0, style=solid];
m0_193 -> m0_186  [key=0, style=bold, color=blue];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> n71  [key=2, style=dotted];
m0_193 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_193 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_193 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_522 -> m0_11  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_523 -> m0_11  [key=2, style=dotted];
m0_523 -> m0_524  [key=0, style=solid];
m0_524 -> m0_11  [key=2, style=dotted];
m0_524 -> m0_525  [key=0, style=solid];
m0_525 -> m0_11  [key=2, style=dotted];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_537  [key=0, style=solid];
m0_525 -> m0_541  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_526 -> m0_11  [key=2, style=dotted];
m0_526 -> m0_527  [key=0, style=solid];
m0_526 -> m0_531  [key=0, style=solid];
m0_526 -> m0_532  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_521 -> m0_522  [key=0, style=solid];
m0_521 -> m0_523  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_521 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_521 -> m0_525  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_521 -> m0_526  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_521 -> m0_27  [key=2, style=dotted];
m0_521 -> m0_527  [key=0, style=solid];
m0_527 -> m0_528  [key=0, style=solid];
m0_527 -> m0_531  [key=2, style=dotted];
m0_527 -> m0_530  [key=2, style=dotted];
m0_528 -> m0_35  [key=2, style=dotted];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_36  [key=2, style=dotted];
m0_529 -> m0_517  [key=0, style=bold, color=blue];
m0_529 -> m0_521  [key=0, style=bold, color=blue];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>"];
m0_10 -> m0_12  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_80  [key=2, style=dotted];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
m0_53 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
m0_139 -> m0_11  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid, color=green];
m0_21 -> m0_22  [key=0, style=solid, color=green];
m0_21 -> m0_26  [key=2, style=dotted, color=green];
m0_21 -> m0_7  [key=2, style=dotted, color=green];
m0_21 -> m0_23  [key=1, style=dashed, color=green, label=anon];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_22 -> m0_11  [key=2, style=dotted, color=green];
m0_285 -> m0_286  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_27  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=0, style=solid];
m0_24 -> m0_11  [key=2, style=dotted];
m0_25 -> m0_27  [key=0, style=solid];
m0_25 -> m0_20  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_23  [key=0, style=bold, color=blue];
m0_360 -> m0_361  [key=0, style=solid];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_308  [key=2, style=dotted];
m0_296 -> m0_298  [key=1, style=dashed, color=darkseagreen4, label=constructorParameters];
m0_549 -> m0_550  [key=0, style=solid];
m0_549 -> m0_551  [key=0, style=solid];
m0_549 -> m0_349  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.List<Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post> posts"];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_235  [key=0, style=solid];
m0_237 -> m0_11  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_238 -> m0_11  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_239 -> m0_11  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_241 -> m0_11  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_250  [key=2, style=dotted];
m0_241 -> m0_82  [key=2, style=dotted];
m0_242 -> m0_11  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_250  [key=2, style=dotted];
m0_242 -> m0_251  [key=2, style=dotted];
m0_243 -> m0_11  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_250  [key=2, style=dotted];
m0_243 -> m0_251  [key=2, style=dotted];
m0_245 -> m0_11  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_246 -> m0_11  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_237  [key=2, style=dotted];
m0_246 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_236 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_236 -> m0_248  [key=2, style=dotted];
m0_236 -> m0_249  [key=2, style=dotted];
m0_236 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_236 -> m0_226  [key=0, style=bold, color=blue];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_240 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label=parameterValues];
m0_244 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_244 -> m0_248  [key=2, style=dotted];
m0_244 -> m0_252  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_235 -> m0_53  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_234  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_234 -> m0_242  [key=2, style=dotted];
m0_234 -> m0_243  [key=2, style=dotted];
m0_247 -> m0_233  [key=0, style=bold, color=blue];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_249  [key=0, style=solid];
m0_89 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=tokens1];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_81  [key=2, style=dotted];
m0_142 -> m0_296  [key=0, style=solid];
m0_142 -> m0_297  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ConstructorInfo"];
m0_142 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m0_142 -> m0_11  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_309  [key=2, style=dotted];
m0_297 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
m0_297 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
m0_143 -> m0_290  [key=0, style=solid];
m0_143 -> m0_11  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_285  [key=2, style=dotted];
m0_290 -> m0_295  [key=2, style=dotted];
m0_290 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label=constructors];
m0_290 -> m0_35  [key=2, style=dotted];
m0_290 -> m0_36  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_293  [key=0, style=solid];
m0_291 -> m0_297  [key=2, style=dotted];
m0_292 -> m0_294  [key=0, style=solid];
m0_292 -> m0_11  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_35  [key=2, style=dotted];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_297  [key=2, style=dotted];
m0_294 -> m0_143  [key=0, style=bold, color=blue];
m0_294 -> m0_35  [key=2, style=dotted];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_36  [key=2, style=dotted];
m0_603 -> m0_604  [key=0, style=solid];
m0_603 -> m0_335  [key=2, style=dotted];
m0_603 -> m0_605  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_606  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_609  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_611  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_612  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_613  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_614  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_615  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_616  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_603 -> m0_617  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_348  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_16  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_11  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_533  [key=0, style=solid];
m0_531 -> m0_185  [key=2, style=dotted];
m0_531 -> m0_535  [key=2, style=dotted];
m0_531 -> m0_536  [key=2, style=dotted];
m0_532 -> m0_534  [key=0, style=solid];
m0_532 -> m0_185  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_533  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_534 -> m0_526  [key=0, style=bold, color=blue];
m0_534 -> m0_535  [key=0, style=solid];
m0_534 -> m0_53  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_177  [key=0, style=solid];
m0_169 -> m0_11  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_182  [key=2, style=dotted];
m0_169 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_167 -> m0_26  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_169  [key=0, style=solid];
m0_167 -> m0_178  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_177  [key=0, style=solid];
m0_168 -> m0_179  [key=2, style=dotted];
m0_168 -> m0_180  [key=2, style=dotted];
m0_168 -> m0_181  [key=2, style=dotted];
m0_170 -> m0_166  [key=0, style=bold, color=blue];
m0_170 -> m0_171  [key=0, style=solid];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_362 -> m0_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_362 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_362 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_362 -> m0_376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_362 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_326  [key=2, style=dotted];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_380  [key=2, style=dotted];
m0_368 -> m0_370  [key=1, style=dashed, color=darkseagreen4, label=onSerializing];
m0_368 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label=onSerialized];
m0_368 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label=onSerialized];
m0_368 -> m0_373  [key=1, style=dashed, color=darkseagreen4, label=onDeserializing];
m0_368 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label=onDeserializing];
m0_368 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label=onDeserialized];
m0_368 -> m0_376  [key=1, style=dashed, color=darkseagreen4, label=onDeserialized];
m0_368 -> m0_377  [key=1, style=dashed, color=darkseagreen4, label=onError];
m0_368 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label=onError];
m0_368 -> m0_11  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_139  [key=2, style=dotted];
m0_370 -> m0_11  [key=2, style=dotted];
m0_370 -> m0_378  [key=2, style=dotted];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_139  [key=2, style=dotted];
m0_372 -> m0_11  [key=2, style=dotted];
m0_372 -> m0_378  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_139  [key=2, style=dotted];
m0_374 -> m0_11  [key=2, style=dotted];
m0_374 -> m0_378  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_139  [key=2, style=dotted];
m0_376 -> m0_362  [key=0, style=bold, color=blue];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_139  [key=2, style=dotted];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label=rss];
m0_364 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label=rss];
m0_364 -> m0_195  [key=2, style=dotted];
m0_364 -> m0_196  [key=2, style=dotted];
m0_364 -> m0_229  [key=2, style=dotted];
m0_364 -> m0_364  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_364 -> m0_377  [key=2, style=dotted];
m0_364 -> m0_219  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_35  [key=2, style=dotted];
m0_365 -> m0_36  [key=2, style=dotted];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label=postTitles];
m0_366 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_366 -> m0_296  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_11  [key=2, style=dotted];
m0_367 -> m0_378  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_371  [key=0, style=solid];
m0_369 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label=categories];
m0_369 -> m0_373  [key=1, style=dashed, color=darkseagreen4, label=categories];
m0_369 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label=categories];
m0_369 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label=categories];
m0_369 -> m0_82  [key=2, style=dotted];
m0_369 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_369 -> m0_282  [key=2, style=dotted];
m0_369 -> m0_379  [key=2, style=dotted];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_373  [key=0, style=solid];
m0_371 -> m0_11  [key=2, style=dotted];
m0_371 -> m0_378  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_375  [key=0, style=solid];
m0_373 -> m0_11  [key=2, style=dotted];
m0_373 -> m0_378  [key=2, style=dotted];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_377  [key=0, style=solid];
m0_375 -> m0_11  [key=2, style=dotted];
m0_375 -> m0_378  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_379  [key=0, style=solid];
m0_379 -> m0_362  [key=0, style=bold, color=blue];
m0_260 -> m0_258  [key=0, style=bold, color=blue];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_159  [key=2, style=dotted];
m0_155 -> m0_139  [key=2, style=dotted];
m0_158 -> m0_162  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_153  [key=0, style=bold, color=blue];
m0_159 -> m0_162  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_157 -> m0_112  [key=2, style=dotted];
m0_157 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m0_157 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m0_156 -> m0_111  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_160  [key=2, style=dotted];
m0_156 -> m0_139  [key=2, style=dotted];
m0_161 -> m0_155  [key=0, style=bold, color=blue];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_161 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_161 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_161 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_161 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_0  [key=2, style=dotted];
m0_33 -> m0_45  [key=2, style=dotted];
m0_33 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_33 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m0_140 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m0_140 -> m0_138  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m0_620 -> m0_692  [key=0, style=solid];
m0_620 -> m0_694  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_620 -> m0_698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_620 -> m0_699  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_620 -> m0_700  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_692 -> m0_693  [key=0, style=solid];
m0_692 -> m0_702  [key=2, style=dotted];
m0_692 -> m0_695  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_692 -> m0_697  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_692 -> m0_699  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_692 -> m0_700  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_694 -> m0_695  [key=0, style=solid];
m0_694 -> m0_703  [key=2, style=dotted];
m0_694 -> m0_697  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_694 -> m0_699  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_694 -> m0_700  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_698 -> m0_699  [key=0, style=solid];
m0_698 -> m0_705  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_699 -> m0_700  [key=0, style=solid];
m0_699 -> m0_701  [key=0, style=solid];
m0_699 -> m0_218  [key=2, style=dotted];
m0_700 -> m0_701  [key=0, style=solid];
m0_700 -> m0_219  [key=2, style=dotted];
m0_693 -> m0_694  [key=0, style=solid];
m0_693 -> m0_695  [key=0, style=solid];
m0_695 -> m0_696  [key=0, style=solid];
m0_695 -> m0_697  [key=0, style=solid];
m0_695 -> m0_182  [key=2, style=dotted];
m0_697 -> m0_698  [key=0, style=solid];
m0_697 -> m0_217  [key=2, style=dotted];
m0_697 -> m0_705  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m0_696 -> m0_701  [key=0, style=solid];
m0_701 -> m0_620  [key=0, style=bold, color=blue];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_335  [key=2, style=dotted];
m0_313 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_327  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_313 -> m0_333  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_314 -> m0_315  [key=0, style=solid];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_336  [key=2, style=dotted];
m0_315 -> m0_229  [key=2, style=dotted];
m0_315 -> m0_196  [key=2, style=dotted];
m0_315 -> m0_322  [key=2, style=dotted];
m0_315 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_315 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_337  [key=2, style=dotted];
m0_317 -> m0_35  [key=2, style=dotted];
m0_317 -> m0_36  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_333  [key=0, style=solid];
m0_320 -> m0_35  [key=2, style=dotted];
m0_320 -> m0_36  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_314  [key=0, style=bold, color=blue];
m0_322 -> m0_323  [key=0, style=solid];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_326  [key=0, style=solid];
m0_325 -> m0_326  [key=0, style=solid];
m0_326 -> m0_327  [key=0, style=solid];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_261  [key=2, style=dotted];
m0_327 -> m0_329  [key=2, style=dotted];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_326  [key=0, style=bold, color=blue];
m0_330 -> m0_331  [key=0, style=solid];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_329  [key=2, style=dotted];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_332 -> m0_34  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_323  [key=2, style=dotted];
m0_318 -> m0_324  [key=2, style=dotted];
m0_318 -> m0_325  [key=2, style=dotted];
m0_318 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_11  [key=2, style=dotted];
m0_319 -> m0_82  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_11  [key=2, style=dotted];
m0_316 -> m0_248  [key=2, style=dotted];
m0_316 -> m0_82  [key=2, style=dotted];
m0_334 -> m0_311  [key=0, style=bold, color=blue];
m0_334 -> m0_35  [key=2, style=dotted];
m0_334 -> m0_335  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=0, style=solid];
m0_67 -> m0_89  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_231  [key=0, style=solid];
m0_434 -> m0_419  [key=0, style=bold, color=blue];
m0_137 -> m0_345  [key=0, style=solid];
m0_137 -> m0_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_112  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_140  [key=2, style=dotted];
m0_345 -> m0_347  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m0_345 -> m0_337  [key=0, style=bold, color=blue];
m0_347 -> m0_351  [key=0, style=solid];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_85  [key=2, style=dotted];
m0_350 -> m0_351  [key=0, style=solid];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_338  [key=2, style=dotted];
m0_351 -> m0_349  [key=0, style=bold, color=blue];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_358  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_356  [key=0, style=solid];
m0_353 -> m0_359  [key=2, style=dotted];
m0_353 -> m0_360  [key=2, style=dotted];
m0_353 -> m0_221  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_342  [key=2, style=dotted];
m0_354 -> m0_352  [key=0, style=bold, color=blue];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_360  [key=2, style=dotted];
m0_355 -> m0_361  [key=2, style=dotted];
m0_356 -> m0_357  [key=0, style=solid];
m0_356 -> m0_362  [key=2, style=dotted];
m0_356 -> m0_358  [key=2, style=dotted];
m0_356 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_348  [key=0, style=solid];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_351  [key=0, style=solid];
m0_357 -> m0_137  [key=0, style=bold, color=blue];
m0_357 -> m0_355  [key=0, style=bold, color=blue];
m0_256 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_260  [key=2, style=dotted];
m0_256 -> m0_249  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_567  [key=0, style=solid];
m0_180 -> m0_568  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_180 -> m0_569  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_181 -> m0_186  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_186  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_186  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_184 -> m0_186  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_185 -> m0_180  [key=0, style=bold, color=blue];
m0_152 -> m0_11  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_40 -> m0_35  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_36  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_34  [key=2, style=dotted];
m0_39 -> m0_48  [key=2, style=dotted];
m0_39 -> m0_49  [key=2, style=dotted];
m0_39 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=updatedCache];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_42  [key=2, style=dotted];
m0_41 -> m0_37  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_131  [key=0, style=solid];
m0_128 -> m0_11  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_131  [key=0, style=solid];
m0_130 -> m0_11  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_134  [key=2, style=dotted];
m0_130 -> m0_142  [key=2, style=dotted];
m0_130 -> m0_139  [key=2, style=dotted];
m0_131 -> m0_11  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_144  [key=2, style=dotted];
m0_131 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=extensionDataMember];
m0_132 -> m0_11  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_134  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_113  [key=2, style=dotted];
m0_127 -> m0_114  [key=2, style=dotted];
m0_127 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m0_127 -> m0_143  [key=2, style=dotted];
m0_127 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m0_129 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m0_129 -> m0_127  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_112  [key=2, style=dotted];
m0_126 -> m0_131  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_111  [key=2, style=dotted];
m0_125 -> m0_131  [key=0, style=solid];
m0_133 -> m0_124  [key=0, style=bold, color=blue];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_145  [key=2, style=dotted];
m0_282 -> m0_284  [key=0, style=solid];
m0_282 -> m0_286  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_241  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_717  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_359 -> m0_360  [key=0, style=solid];
m0_335 -> m0_36  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_540 -> m0_541  [key=0, style=solid];
m0_540 -> m0_544  [key=0, style=solid];
m0_542 -> m0_547  [key=1, style=dashed, color=darkseagreen4, label=users];
m0_542 -> m0_543  [key=0, style=solid];
m0_542 -> m0_471  [key=2, style=dotted];
m0_542 -> m0_546  [key=1, style=dashed, color=darkseagreen4, label=users];
m0_542 -> m0_544  [key=0, style=solid];
m0_541 -> m0_542  [key=0, style=solid];
m0_541 -> m0_546  [key=1, style=dashed, color=darkseagreen4, label=name];
m0_541 -> m0_219  [key=2, style=dotted];
m0_541 -> m0_543  [key=1, style=dashed, color=darkseagreen4, label=name];
m0_541 -> m0_523  [key=2, style=dotted];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_396  [key=2, style=dotted];
m0_543 -> m0_545  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_544 -> m0_540  [key=0, style=bold, color=blue];
m0_544 -> m0_525  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_11  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_136  [key=2, style=dotted];
m0_109 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_109 -> m0_11  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_137  [key=2, style=dotted];
m0_110 -> m0_103  [key=0, style=bold, color=blue];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_80  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_138  [key=2, style=dotted];
m0_114 -> m0_139  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_140  [key=2, style=dotted];
m0_115 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_112  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_131  [key=0, style=solid];
m0_118 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_118 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_118 -> m0_123  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_141  [key=2, style=dotted];
m0_119 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
m0_119 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
m0_119 -> m0_11  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_11  [key=2, style=dotted];
m0_122 -> m0_131  [key=0, style=solid];
m0_122 -> m0_142  [key=2, style=dotted];
m0_122 -> m0_139  [key=2, style=dotted];
m0_122 -> m0_115  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_126  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_118  [key=0, style=solid];
m0_116 -> m0_111  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=0, style=solid];
m0_120 -> m0_11  [key=2, style=dotted];
m0_135 -> m0_108  [key=0, style=bold, color=blue];
m0_135 -> m0_136  [key=0, style=solid];
m0_88 -> m0_89  [key=0, style=solid];
m0_91 -> m0_10  [key=2, style=dotted];
m0_91 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=tokens1];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_96  [key=2, style=dotted];
m0_94 -> m0_10  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_97  [key=2, style=dotted];
m0_94 -> m0_92  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_81  [key=2, style=dotted];
m0_92 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=o1];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_81  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_81  [key=2, style=dotted];
m0_93 -> m0_95  [key=2, style=dotted];
m0_95 -> m0_88  [key=0, style=bold, color=blue];
m0_600 -> m0_594  [key=0, style=bold, color=blue];
m0_80 -> m0_77  [key=0, style=bold, color=blue];
m0_535 -> m0_11  [key=2, style=dotted];
m0_535 -> m0_536  [key=0, style=solid];
m0_469 -> m0_11  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_82  [key=2, style=dotted];
m0_216 -> m0_35  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_464 -> m0_465  [key=0, style=solid];
m0_464 -> m0_391  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_465 -> m0_469  [key=2, style=dotted];
m0_465 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_465 -> m0_11  [key=2, style=dotted];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_137  [key=2, style=dotted];
m0_466 -> m0_11  [key=2, style=dotted];
m0_466 -> m0_282  [key=2, style=dotted];
m0_466 -> m0_82  [key=2, style=dotted];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_469  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_467 -> m0_261  [key=2, style=dotted];
m0_467 -> m0_458  [key=2, style=dotted];
m0_468 -> m0_464  [key=0, style=bold, color=blue];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_391  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_81  [key=2, style=dotted];
m0_54 -> m0_82  [key=2, style=dotted];
m0_54 -> m0_83  [key=2, style=dotted];
m0_54 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_54 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m0_54 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_459  [key=0, style=bold, color=blue];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_479  [key=2, style=dotted];
m0_471 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_471 -> m0_476  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_471 -> m0_477  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_137  [key=2, style=dotted];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_480  [key=2, style=dotted];
m0_473 -> m0_475  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_473 -> m0_473  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JObject o"];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_485  [key=2, style=dotted];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_480  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_477 -> m0_229  [key=2, style=dotted];
m0_477 -> m0_196  [key=2, style=dotted];
m0_477 -> m0_324  [key=2, style=dotted];
m0_477 -> m0_322  [key=2, style=dotted];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_477  [key=0, style=solid];
m0_474 -> m0_473  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken> enumerable"];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_225  [key=2, style=dotted];
m0_475 -> m0_484  [key=2, style=dotted];
m0_478 -> m0_470  [key=0, style=bold, color=blue];
m0_478 -> m0_480  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m0_478 -> m0_479  [key=0, style=solid];
m0_478 -> m0_484  [key=2, style=dotted];
m0_478 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_53  [key=2, style=dotted];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_281  [key=0, style=solid];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_256  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_257  [key=2, style=dotted];
m0_254 -> m0_726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_254 -> m0_254  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_255 -> m0_252  [key=0, style=bold, color=blue];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_67  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_50 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_50 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_50 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_50 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_50 -> m0_55  [key=2, style=dotted];
m0_50 -> m0_56  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_11  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_78  [key=0, style=solid];
m0_72 -> m0_91  [key=2, style=dotted];
m0_72 -> m0_53  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_43  [key=0, style=bold, color=blue];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_74  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_59  [key=0, style=solid];
m0_69 -> m0_90  [key=2, style=dotted];
m0_69 -> m0_67  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_78  [key=0, style=solid];
m0_74 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_64 -> m0_59  [key=0, style=solid];
m0_64 -> m0_88  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_66 -> m0_59  [key=0, style=solid];
m0_66 -> m0_88  [key=2, style=dotted];
m0_66 -> m0_64  [key=0, style=bold, color=blue];
m0_68 -> m0_59  [key=0, style=solid];
m0_68 -> m0_88  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_70 -> m0_59  [key=0, style=solid];
m0_70 -> m0_88  [key=2, style=dotted];
m0_70 -> m0_68  [key=0, style=bold, color=blue];
m0_73 -> m0_78  [key=0, style=solid];
m0_73 -> m0_82  [key=2, style=dotted];
m0_73 -> m0_83  [key=2, style=dotted];
m0_73 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_73 -> m0_71  [key=0, style=bold, color=blue];
m0_77 -> m0_74  [key=0, style=solid];
m0_77 -> m0_88  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_81  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=0, style=solid];
m0_63 -> m0_89  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=0, style=solid];
m0_65 -> m0_89  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_53  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_74  [key=0, style=bold, color=blue];
m0_79 -> m0_50  [key=0, style=bold, color=blue];
m0_79 -> m0_11  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_82  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=0, style=solid];
m0_102 -> m0_106  [key=2, style=dotted];
m0_102 -> m0_107  [key=2, style=dotted];
m0_494 -> m0_495  [key=0, style=solid];
m0_494 -> m0_496  [key=1, style=dashed, color=darkseagreen4, label=list1];
m0_494 -> m0_498  [key=2, style=dotted];
m0_494 -> m0_379  [key=2, style=dotted];
m0_494 -> m0_249  [key=2, style=dotted];
m0_144 -> m0_146  [key=0, style=solid];
m0_144 -> m0_135  [key=0, style=bold, color=blue];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_150  [key=2, style=dotted];
m0_146 -> m0_151  [key=2, style=dotted];
m0_146 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_146 -> m0_146  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_146 -> m0_111  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_152  [key=2, style=dotted];
m0_147 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_147 -> m0_112  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_148  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_148 -> m0_123  [key=2, style=dotted];
m0_148 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=v];
m0_149 -> m0_144  [key=0, style=bold, color=blue];
m0_149 -> m0_11  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_265  [key=2, style=dotted];
m0_263 -> m0_263  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_264 -> m0_262  [key=0, style=bold, color=blue];
m0_264 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_53  [key=2, style=dotted];
m0_264 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_264 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_392 -> m0_393  [key=0, style=solid];
m0_392 -> m0_419  [key=2, style=dotted];
m0_392 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label=skipSerializing];
m0_278 -> m0_284  [key=0, style=solid];
m0_278 -> m0_179  [key=2, style=dotted];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_549  [key=2, style=dotted];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_23  [key=2, style=dotted];
m0_581 -> m0_583  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_28 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=0, style=solid];
m0_29 -> m0_33  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_47  [key=2, style=dotted];
m0_36 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_36 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_30 -> m0_43  [key=0, style=solid];
m0_30 -> m0_44  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_34  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_23  [key=2, style=dotted];
m0_31 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_31 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_31 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_36  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_28  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_42  [key=0, style=solid];
m0_35 -> m0_46  [key=2, style=dotted];
m0_43 -> m0_28  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=resultUrls];
m0_270 -> m0_282  [key=2, style=dotted];
m0_270 -> m0_283  [key=2, style=dotted];
m0_270 -> m0_249  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_261  [key=2, style=dotted];
m0_272 -> m0_270  [key=0, style=bold, color=blue];
m0_272 -> m0_11  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_198  [key=0, style=solid];
m0_196 -> m0_215  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_106 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_106 -> m0_113  [key=2, style=dotted];
m0_106 -> m0_114  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_451  [key=2, style=dotted];
m0_446 -> m0_448  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_446 -> m0_449  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_447 -> m0_448  [key=0, style=solid];
m0_447 -> m0_137  [key=2, style=dotted];
m0_447 -> m0_326  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_448 -> m0_452  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_448 -> m0_453  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_448 -> m0_448  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_448 -> m0_34  [key=2, style=dotted];
m0_448 -> m0_450  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_448 -> m0_451  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_35  [key=2, style=dotted];
m0_449 -> m0_36  [key=2, style=dotted];
m0_450 -> m0_445  [key=0, style=bold, color=blue];
m0_450 -> m0_451  [key=0, style=solid];
m0_450 -> m0_391  [key=2, style=dotted];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_84  [key=2, style=dotted];
m0_435 -> m0_438  [key=1, style=dashed, color=darkseagreen4, label=ret];
m0_435 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=ret];
m0_435 -> m0_441  [key=1, style=dashed, color=darkseagreen4, label=ret];
m0_441 -> m0_11  [key=2, style=dotted];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_282  [key=2, style=dotted];
m0_441 -> m0_82  [key=2, style=dotted];
m0_440 -> m0_441  [key=0, style=solid];
m0_440 -> m0_433  [key=2, style=dotted];
m0_440 -> m0_444  [key=2, style=dotted];
m0_439 -> m0_441  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m0_439 -> m0_440  [key=0, style=solid];
m0_439 -> m0_445  [key=2, style=dotted];
m0_439 -> m0_437  [key=0, style=solid];
m0_439 -> m0_443  [key=2, style=dotted];
m0_439 -> m0_439  [key=1, style=dashed, color=darkseagreen4, label=current];
m0_436 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m0_436 -> m0_324  [key=2, style=dotted];
m0_436 -> m0_444  [key=2, style=dotted];
m0_436 -> m0_261  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_436 -> m0_443  [key=2, style=dotted];
m0_436 -> m0_427  [key=2, style=dotted];
m0_436 -> m0_438  [key=1, style=dashed, color=darkseagreen4, label=current];
m0_436 -> m0_439  [key=1, style=dashed, color=darkseagreen4, label=current];
m0_437 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_230  [key=2, style=dotted];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_88  [key=2, style=dotted];
m0_442 -> m0_435  [key=0, style=bold, color=blue];
m0_442 -> m0_150  [key=0, style=bold, color=blue];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_433  [key=0, style=solid];
m0_432 -> m0_434  [key=0, style=solid];
m0_433 -> m0_434  [key=0, style=solid];
m0_489 -> m0_490  [key=0, style=solid];
m0_489 -> m0_277  [key=2, style=dotted];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_494  [key=2, style=dotted];
m0_490 -> m0_492  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_490 -> m0_11  [key=2, style=dotted];
m0_490 -> m0_82  [key=2, style=dotted];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_137  [key=2, style=dotted];
m0_491 -> m0_487  [key=0, style=bold, color=blue];
m0_492 -> m0_493  [key=0, style=solid];
m0_493 -> m0_489  [key=0, style=bold, color=blue];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_67  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_186  [key=0, style=solid];
m0_145 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_145 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_145 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_145 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_145 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_145 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m0_145 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m0_151 -> m0_11  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_134  [key=2, style=dotted];
m0_153 -> m0_11  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_153 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m0_150 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m0_150 -> m0_148  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m0_150 -> m0_435  [key=0, style=solid];
m0_150 -> m0_436  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_154 -> m0_145  [key=0, style=bold, color=blue];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_84  [key=2, style=dotted];
m0_154 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=m];
m0_154 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=m];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_621  [key=0, style=solid];
m0_337 -> m0_622  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_337 -> m0_627  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_337 -> m0_628  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_337 -> m0_634  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_337 -> m0_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_649  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_652  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_337 -> m0_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_337 -> m0_655  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_337 -> m0_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_660  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_337 -> m0_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_663  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_664  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_665  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_666  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_669  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_337 -> m0_677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_343 -> m0_11  [key=2, style=dotted];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_220  [key=2, style=dotted];
m0_344 -> m0_11  [key=2, style=dotted];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_342  [key=0, style=bold, color=blue];
m0_340 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=since2012];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_347  [key=2, style=dotted];
m0_340 -> m0_252  [key=2, style=dotted];
m0_340 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_340 -> m0_338  [key=0, style=bold, color=blue];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_348  [key=2, style=dotted];
m0_341 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label=linqToJson];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_347  [key=2, style=dotted];
m0_341 -> m0_252  [key=2, style=dotted];
m0_341 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_338 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label=posts];
m0_338 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label=posts];
m0_338 -> m0_67  [key=2, style=dotted];
m0_338 -> m0_339  [key=0, style=solid];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label=serializerBasics];
m0_339 -> m0_346  [key=2, style=dotted];
m0_339 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_339 -> m0_341  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_11  [key=2, style=dotted];
m0_266 -> m0_277  [key=2, style=dotted];
m0_266 -> m0_82  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_269  [key=2, style=dotted];
m0_267 -> m0_11  [key=2, style=dotted];
m0_267 -> m0_87  [key=2, style=dotted];
m0_267 -> m0_278  [key=2, style=dotted];
m0_267 -> m0_82  [key=2, style=dotted];
m0_268 -> m0_266  [key=0, style=bold, color=blue];
m0_268 -> m0_11  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_87  [key=2, style=dotted];
m0_268 -> m0_279  [key=2, style=dotted];
m0_268 -> m0_82  [key=2, style=dotted];
m0_588 -> m0_603  [key=0, style=solid];
m0_588 -> m0_604  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_605  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_606  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_609  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_588 -> m0_611  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_612  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_615  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_616  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_588 -> m0_597  [key=0, style=solid];
m0_588 -> m0_589  [key=0, style=solid];
m0_604 -> m0_605  [key=0, style=solid];
m0_604 -> m0_182  [key=2, style=dotted];
m0_605 -> m0_606  [key=0, style=solid];
m0_606 -> m0_607  [key=0, style=solid];
m0_606 -> m0_594  [key=2, style=dotted];
m0_606 -> m0_604  [key=0, style=bold, color=blue];
m0_607 -> m0_608  [key=0, style=solid];
m0_607 -> m0_336  [key=2, style=dotted];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_337  [key=2, style=dotted];
m0_609 -> m0_611  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_609 -> m0_612  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_609 -> m0_616  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_609 -> m0_607  [key=0, style=bold, color=blue];
m0_610 -> m0_611  [key=0, style=solid];
m0_610 -> m0_613  [key=0, style=solid];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_178  [key=2, style=dotted];
m0_611 -> m0_35  [key=2, style=dotted];
m0_612 -> m0_615  [key=0, style=solid];
m0_612 -> m0_218  [key=2, style=dotted];
m0_612 -> m0_610  [key=0, style=bold, color=blue];
m0_615 -> m0_616  [key=0, style=solid];
m0_615 -> m0_619  [key=2, style=dotted];
m0_615 -> m0_546  [key=1, style=dashed, color=darkseagreen4, label=name];
m0_616 -> m0_617  [key=0, style=solid];
m0_616 -> m0_620  [key=2, style=dotted];
m0_616 -> m0_547  [key=1, style=dashed, color=darkseagreen4, label=users];
m0_616 -> m0_546  [key=1, style=dashed, color=darkseagreen4, label=users];
m0_613 -> m0_614  [key=0, style=solid];
m0_613 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m0_614 -> m0_615  [key=0, style=solid];
m0_614 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m0_614 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m0_614 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m0_614 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m0_614 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m0_614 -> m0_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m0_614 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m0_617 -> m0_618  [key=0, style=solid];
m0_617 -> m0_560  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_608 -> m0_609  [key=0, style=solid];
m0_618 -> m0_588  [key=0, style=bold, color=blue];
m0_618 -> m0_611  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_222  [key=2, style=dotted];
m0_283 -> m0_284  [key=0, style=solid];
m0_408 -> m0_409  [key=0, style=solid];
m0_408 -> m0_423  [key=2, style=dotted];
m0_408 -> m0_88  [key=2, style=dotted];
m0_409 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_396  [key=2, style=dotted];
m0_410 -> m0_408  [key=0, style=bold, color=blue];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_414  [key=0, style=solid];
m0_410 -> m0_422  [key=2, style=dotted];
m0_410 -> m0_410  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_230  [key=2, style=dotted];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_34  [key=2, style=dotted];
m0_217 -> m0_210  [key=0, style=bold, color=blue];
m0_258 -> m0_11  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_261  [key=2, style=dotted];
m0_259 -> m0_253  [key=0, style=bold, color=blue];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_261  [key=2, style=dotted];
m0_458 -> m0_459  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_221  [key=2, style=dotted];
m0_545 -> m0_546  [key=0, style=solid];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_185  [key=2, style=dotted];
m0_194 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=isJTokenValueType];
m0_194 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=isJTokenValueType];
m0_141 -> m0_11  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_134  [key=2, style=dotted];
m0_141 -> m0_276  [key=0, style=solid];
m0_141 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_141 -> m0_282  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_113  [key=2, style=dotted];
m0_138 -> m0_114  [key=2, style=dotted];
m0_138 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_138 -> m0_574  [key=0, style=solid];
m0_138 -> m0_577  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_138 -> m0_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_111  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_222  [key=2, style=dotted];
m0_203 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
m0_206 -> m0_11  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_223  [key=2, style=dotted];
m0_206 -> m0_224  [key=2, style=dotted];
m0_208 -> m0_11  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_208 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label=extensionDataGetter];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_216  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_225  [key=2, style=dotted];
m0_207 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=createEnumerableWrapper];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label=j];
m0_204 -> m0_67  [key=2, style=dotted];
m0_204 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_204 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_204 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_204 -> m0_234  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_204 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_204 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label=extensionDataSetter];
m0_209 -> m0_203  [key=0, style=bold, color=blue];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_211  [key=0, style=solid];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_567 -> m0_568  [key=0, style=solid];
m0_567 -> m0_569  [key=0, style=solid];
m0_567 -> m0_571  [key=2, style=dotted];
m0_567 -> m0_572  [key=2, style=dotted];
m0_567 -> m0_261  [key=2, style=dotted];
m0_568 -> m0_570  [key=0, style=solid];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_581  [key=2, style=dotted];
m0_569 -> m0_570  [key=0, style=solid];
m0_569 -> m0_573  [key=2, style=dotted];
m0_569 -> m0_581  [key=2, style=dotted];
m0_570 -> m0_180  [key=0, style=bold, color=blue];
m0_570 -> m0_571  [key=0, style=solid];
m0_570 -> m0_581  [key=2, style=dotted];
m0_480 -> m0_11  [key=2, style=dotted];
m0_480 -> m0_481  [key=0, style=solid];
m0_538 -> m0_11  [key=2, style=dotted];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_541  [key=0, style=solid];
m0_538 -> m0_45  [key=2, style=dotted];
m0_536 -> m0_537  [key=0, style=solid];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_67  [key=2, style=dotted];
m0_537 -> m0_545  [key=2, style=dotted];
m0_537 -> m0_539  [key=1, style=dashed, color=darkseagreen4, label=converter];
m0_539 -> m0_532  [key=0, style=bold, color=blue];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_541  [key=0, style=solid];
m0_539 -> m0_546  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_415 -> m0_84  [key=2, style=dotted];
m0_415 -> m0_415  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_415 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_361 -> m0_359  [key=0, style=bold, color=blue];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_217  [key=2, style=dotted];
m0_199 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_199 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_199 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_199 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_199 -> m0_201  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_218  [key=2, style=dotted];
m0_200 -> m0_219  [key=2, style=dotted];
m0_200 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_200 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_200 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_200 -> m0_35  [key=2, style=dotted];
m0_200 -> m0_199  [key=0, style=solid];
m0_200 -> m0_36  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_219  [key=2, style=dotted];
m0_212 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_213  [key=0, style=solid];
m0_211 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label=array];
m0_211 -> m0_218  [key=2, style=dotted];
m0_211 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label=array];
m0_211 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=array];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=createdType];
m0_198 -> m0_195  [key=2, style=dotted];
m0_198 -> m0_196  [key=2, style=dotted];
m0_198 -> m0_202  [key=2, style=dotted];
m0_197 -> m0_199  [key=0, style=solid];
m0_197 -> m0_216  [key=2, style=dotted];
m0_197 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=createdType];
m0_197 -> m0_198  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_220  [key=2, style=dotted];
m0_201 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m0_201 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m0_201 -> m0_197  [key=0, style=bold, color=blue];
m0_213 -> m0_145  [key=0, style=bold, color=blue];
m0_213 -> m0_221  [key=2, style=dotted];
m0_213 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=date];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_220  [key=2, style=dotted];
m0_248 -> m0_250  [key=0, style=solid];
m0_619 -> m0_683  [key=0, style=solid];
m0_683 -> m0_684  [key=0, style=solid];
m0_683 -> m0_221  [key=2, style=dotted];
m0_683 -> m0_686  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeMethod];
m0_684 -> m0_685  [key=0, style=solid];
m0_684 -> m0_686  [key=0, style=solid];
m0_686 -> m0_687  [key=0, style=solid];
m0_686 -> m0_222  [key=2, style=dotted];
m0_686 -> m0_690  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m0_685 -> m0_688  [key=0, style=solid];
m0_687 -> m0_688  [key=0, style=solid];
m0_687 -> m0_690  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_688 -> m0_619  [key=0, style=bold, color=blue];
m0_380 -> m0_381  [key=0, style=solid];
m0_380 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_381 -> m0_382  [key=0, style=solid];
m0_381 -> m0_399  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_381 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_381 -> m0_381  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_418  [key=0, style=solid];
m0_386 -> m0_150  [key=2, style=dotted];
m0_386 -> m0_392  [key=1, style=dashed, color=darkseagreen4, label=baseType];
m0_386 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label=baseType];
m0_386 -> m0_394  [key=1, style=dashed, color=darkseagreen4, label=baseType];
m0_386 -> m0_11  [key=2, style=dotted];
m0_386 -> m0_282  [key=2, style=dotted];
m0_386 -> m0_82  [key=2, style=dotted];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_403  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_382 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_382 -> m0_384  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_382 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_382 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_382 -> m0_388  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_382 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_382 -> m0_53  [key=2, style=dotted];
m0_382 -> m0_385  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_84  [key=2, style=dotted];
m0_399 -> m0_399  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_399 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_399 -> m0_11  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_407  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_383 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_383 -> m0_11  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_84  [key=2, style=dotted];
m0_403 -> m0_403  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_403 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_403 -> m0_401  [key=0, style=bold, color=blue];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_384 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_384 -> m0_11  [key=2, style=dotted];
m0_384 -> m0_296  [key=2, style=dotted];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_84  [key=2, style=dotted];
m0_407 -> m0_407  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_407 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_407 -> m0_404  [key=0, style=bold, color=blue];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_415  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_385 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_385 -> m0_391  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_84  [key=2, style=dotted];
m0_411 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_411 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerializing];
m0_387 -> m0_11  [key=2, style=dotted];
m0_387 -> m0_282  [key=2, style=dotted];
m0_387 -> m0_82  [key=2, style=dotted];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_420  [key=2, style=dotted];
m0_393 -> m0_410  [key=1, style=dashed, color=darkseagreen4, label=skipDeserialized];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_386  [key=0, style=solid];
m0_394 -> m0_421  [key=2, style=dotted];
m0_394 -> m0_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_394 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_400  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_404  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_408  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_410  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_412  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_414  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_416  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_394 -> m0_396  [key=2, style=dotted];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerialized];
m0_388 -> m0_11  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_402  [key=0, style=solid];
m0_398 -> m0_422  [key=2, style=dotted];
m0_398 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_398 -> m0_26  [key=2, style=dotted];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserializing];
m0_389 -> m0_11  [key=2, style=dotted];
m0_389 -> m0_282  [key=2, style=dotted];
m0_389 -> m0_283  [key=2, style=dotted];
m0_389 -> m0_392  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_406  [key=0, style=solid];
m0_402 -> m0_422  [key=2, style=dotted];
m0_402 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_402 -> m0_404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_402 -> m0_396  [key=2, style=dotted];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_410  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserialized];
m0_390 -> m0_380  [key=0, style=bold, color=blue];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_410  [key=0, style=solid];
m0_406 -> m0_422  [key=2, style=dotted];
m0_406 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_406 -> m0_11  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_414  [key=1, style=dashed, color=darkseagreen4, label=currentOnError];
m0_414 -> m0_415  [key=0, style=solid];
m0_414 -> m0_394  [key=0, style=solid];
m0_414 -> m0_422  [key=2, style=dotted];
m0_414 -> m0_414  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_414 -> m0_411  [key=0, style=bold, color=blue];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_394  [key=0, style=solid];
m0_395 -> m0_393  [key=0, style=bold, color=blue];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_308  [key=2, style=dotted];
m0_397 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_397 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_397 -> m0_410  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_397 -> m0_414  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_400 -> m0_401  [key=0, style=solid];
m0_400 -> m0_423  [key=2, style=dotted];
m0_400 -> m0_88  [key=2, style=dotted];
m0_400 -> m0_397  [key=0, style=bold, color=blue];
m0_401 -> m0_402  [key=0, style=solid];
m0_404 -> m0_405  [key=0, style=solid];
m0_404 -> m0_423  [key=2, style=dotted];
m0_404 -> m0_88  [key=2, style=dotted];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_218  [key=2, style=dotted];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_423  [key=2, style=dotted];
m0_412 -> m0_88  [key=2, style=dotted];
m0_412 -> m0_415  [key=2, style=dotted];
m0_413 -> m0_414  [key=0, style=solid];
m0_413 -> m0_11  [key=2, style=dotted];
m0_459 -> m0_460  [key=0, style=solid];
m0_459 -> m0_463  [key=2, style=dotted];
m0_459 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_461 -> m0_465  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_461 -> m0_466  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_461 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label=p];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_471  [key=2, style=dotted];
m0_461 -> m0_34  [key=2, style=dotted];
m0_461 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_461 -> m0_464  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_462 -> m0_35  [key=2, style=dotted];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_36  [key=2, style=dotted];
m0_462 -> m0_458  [key=0, style=bold, color=blue];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_326  [key=2, style=dotted];
m0_460 -> m0_137  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_391  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_95  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=resultObjects];
m0_265 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label=resultObjects];
m0_265 -> m0_276  [key=2, style=dotted];
m0_265 -> m0_249  [key=2, style=dotted];
m0_428 -> m0_430  [key=0, style=solid];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_564  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m0_566 -> m0_261  [key=2, style=dotted];
m0_566 -> m0_567  [key=0, style=solid];
m0_566 -> m0_568  [key=1, style=dashed, color=darkseagreen4, label=list1];
m0_566 -> m0_574  [key=1, style=dashed, color=darkseagreen4, label=list1];
m0_566 -> m0_575  [key=1, style=dashed, color=darkseagreen4, label=list1];
m0_566 -> m0_576  [key=1, style=dashed, color=darkseagreen4, label=list1];
m0_576 -> m0_261  [key=2, style=dotted];
m0_576 -> m0_577  [key=0, style=solid];
m0_576 -> m0_582  [key=2, style=dotted];
m0_576 -> m0_587  [key=0, style=solid];
m0_576 -> m0_238  [key=2, style=dotted];
m0_579 -> m0_36  [key=2, style=dotted];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_588  [key=2, style=dotted];
m0_579 -> m0_583  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_579 -> m0_584  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_563 -> m0_471  [key=2, style=dotted];
m0_563 -> m0_564  [key=0, style=solid];
m0_563 -> m0_568  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_563 -> m0_569  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_563 -> m0_570  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_563 -> m0_571  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_563 -> m0_572  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_563 -> m0_573  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_563 -> m0_575  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_563 -> m0_578  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m0_564 -> m0_471  [key=2, style=dotted];
m0_564 -> m0_565  [key=0, style=solid];
m0_564 -> m0_571  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m0_564 -> m0_422  [key=0, style=bold, color=blue];
m0_565 -> m0_471  [key=2, style=dotted];
m0_565 -> m0_566  [key=0, style=solid];
m0_565 -> m0_572  [key=1, style=dashed, color=darkseagreen4, label=dic3];
m0_565 -> m0_577  [key=1, style=dashed, color=darkseagreen4, label=dic3];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_582  [key=2, style=dotted];
m0_574 -> m0_50  [key=2, style=dotted];
m0_574 -> m0_578  [key=1, style=dashed, color=darkseagreen4, label=members];
m0_575 -> m0_576  [key=0, style=solid];
m0_575 -> m0_582  [key=2, style=dotted];
m0_575 -> m0_577  [key=0, style=solid];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_581  [key=2, style=dotted];
m0_577 -> m0_309  [key=2, style=dotted];
m0_577 -> m0_584  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_577 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_578 -> m0_583  [key=2, style=dotted];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_585  [key=0, style=solid];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_581  [key=2, style=dotted];
m0_573 -> m0_574  [key=0, style=solid];
m0_573 -> m0_581  [key=2, style=dotted];
m0_580 -> m0_562  [key=0, style=bold, color=blue];
m0_580 -> m0_581  [key=0, style=solid];
m0_580 -> m0_578  [key=0, style=solid];
m0_712 -> m0_713  [key=0, style=solid];
m0_713 -> m0_714  [key=0, style=solid];
m0_713 -> m0_681  [key=2, style=dotted];
m0_714 -> m0_712  [key=0, style=bold, color=blue];
m0_230 -> m0_236  [key=0, style=solid];
m0_230 -> m0_238  [key=2, style=dotted];
m0_230 -> m0_239  [key=2, style=dotted];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_284  [key=2, style=dotted];
m0_273 -> m0_249  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_11  [key=2, style=dotted];
m0_275 -> m0_273  [key=0, style=bold, color=blue];
m0_275 -> m0_262  [key=0, style=bold, color=blue];
m0_452 -> m0_11  [key=2, style=dotted];
m0_452 -> m0_453  [key=0, style=solid];
m0_453 -> m0_11  [key=2, style=dotted];
m0_453 -> m0_454  [key=0, style=solid];
m0_453 -> m0_282  [key=2, style=dotted];
m0_453 -> m0_82  [key=2, style=dotted];
m0_453 -> m0_457  [key=2, style=dotted];
m0_453 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_456 -> m0_11  [key=2, style=dotted];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_82  [key=2, style=dotted];
m0_456 -> m0_452  [key=0, style=bold, color=blue];
m0_454 -> m0_456  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_454 -> m0_455  [key=0, style=solid];
m0_454 -> m0_261  [key=2, style=dotted];
m0_454 -> m0_458  [key=2, style=dotted];
m0_454 -> m0_137  [key=2, style=dotted];
m0_455 -> m0_456  [key=0, style=solid];
m0_455 -> m0_391  [key=2, style=dotted];
m0_457 -> m0_446  [key=0, style=bold, color=blue];
m0_582 -> m0_583  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_81  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m0_100 -> m0_11  [key=2, style=dotted];
m0_100 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_104  [key=0, style=solid];
m0_101 -> m0_98  [key=0, style=bold, color=blue];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_111  [key=2, style=dotted];
m0_103 -> m0_105  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_105 -> m0_99  [key=0, style=bold, color=blue];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_112  [key=2, style=dotted];
m0_430 -> m0_420  [key=0, style=bold, color=blue];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_285  [key=2, style=dotted];
m0_276 -> m0_82  [key=2, style=dotted];
m0_276 -> m0_83  [key=2, style=dotted];
m0_276 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_276 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m0_276 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_283  [key=0, style=solid];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_279  [key=0, style=solid];
m0_280 -> m0_284  [key=0, style=solid];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_49 -> m0_27  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_45 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_45 -> m0_27  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_54  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_53  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_555 -> m0_557  [key=0, style=solid];
m0_556 -> m0_560  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_556 -> m0_53  [key=2, style=dotted];
m0_556 -> m0_557  [key=0, style=solid];
m0_556 -> m0_564  [key=0, style=solid];
m0_556 -> m0_179  [key=2, style=dotted];
m0_556 -> m0_180  [key=2, style=dotted];
m0_556 -> m0_181  [key=2, style=dotted];
m0_557 -> m0_559  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_63  [key=2, style=dotted];
m0_557 -> m0_560  [key=0, style=solid];
m0_558 -> m0_555  [key=0, style=bold, color=blue];
m0_558 -> m0_559  [key=0, style=solid];
m0_558 -> m0_562  [key=0, style=solid];
m0_336 -> m0_330  [key=0, style=bold, color=blue];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_286  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_176  [key=0, style=solid];
m0_171 -> m0_183  [key=2, style=dotted];
m0_171 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=dictionaryType];
m0_175 -> m0_11  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_177  [key=0, style=solid];
m0_177 -> m0_11  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_161  [key=0, style=bold, color=blue];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=v1];
m0_174 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label=v1];
m0_174 -> m0_185  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_179  [key=2, style=dotted];
m0_176 -> m0_180  [key=2, style=dotted];
m0_176 -> m0_181  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_173 -> m0_53  [key=2, style=dotted];
m0_173 -> n71  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_172  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_172 -> n71  [key=2, style=dotted];
m0_172 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_681 -> m0_707  [key=0, style=solid];
m0_707 -> m0_708  [key=0, style=solid];
m0_708 -> m0_681  [key=0, style=bold, color=blue];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_429  [key=0, style=solid];
m0_709 -> m0_710  [key=0, style=solid];
m0_710 -> m0_711  [key=0, style=solid];
m0_710 -> m0_681  [key=2, style=dotted];
m0_711 -> m0_709  [key=0, style=bold, color=blue];
m0_590 -> m0_252  [key=2, style=dotted];
m0_590 -> m0_284  [key=2, style=dotted];
m0_590 -> m0_347  [key=2, style=dotted];
m0_590 -> m0_591  [key=0, style=solid];
m0_590 -> m0_602  [key=2, style=dotted];
m0_590 -> m0_604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_590 -> m0_593  [key=1, style=dashed, color=darkseagreen4, label=ids];
m0_98 -> m0_96  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [key=0, style=solid];
m0_165 -> m0_86  [key=2, style=dotted];
m0_165 -> m0_163  [key=0, style=bold, color=blue];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_165  [key=0, style=solid];
m0_164 -> m0_177  [key=0, style=solid];
m0_164 -> m0_123  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_237  [key=2, style=dotted];
m0_227 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m0_227 -> m0_11  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_240  [key=2, style=dotted];
m0_231 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_251  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_226 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_226 -> m0_234  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_226 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_226 -> m0_231  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_233  [key=0, style=solid];
m0_228 -> m0_223  [key=0, style=bold, color=blue];
m0_250 -> m0_245  [key=0, style=bold, color=blue];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_287 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_287 -> m0_53  [key=2, style=dotted];
m0_287 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_86  [key=2, style=dotted];
m0_288 -> m0_35  [key=2, style=dotted];
m0_288 -> m0_36  [key=2, style=dotted];
m0_289 -> m0_287  [key=0, style=bold, color=blue];
m0_289 -> m0_296  [key=2, style=dotted];
m0_289 -> m0_290  [key=0, style=solid];
m0_591 -> m0_592  [key=0, style=solid];
m0_591 -> m0_597  [key=0, style=solid];
m0_592 -> m0_593  [key=0, style=solid];
m0_592 -> m0_252  [key=2, style=dotted];
m0_592 -> m0_284  [key=2, style=dotted];
m0_592 -> m0_347  [key=2, style=dotted];
m0_592 -> m0_602  [key=2, style=dotted];
m0_592 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_592 -> m0_594  [key=1, style=dashed, color=darkseagreen4, label=refs];
m0_593 -> m0_591  [key=0, style=bold, color=blue];
m0_593 -> m0_597  [key=0, style=solid];
m0_593 -> m0_611  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m0_593 -> m0_594  [key=0, style=solid];
m0_593 -> m0_596  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m0_690 -> m0_691  [key=0, style=solid];
m0_690 -> m0_244  [key=2, style=dotted];
m0_689 -> m0_690  [key=0, style=solid];
m0_691 -> m0_689  [key=0, style=bold, color=blue];
m0_705 -> m0_706  [key=0, style=solid];
m0_705 -> m0_237  [key=2, style=dotted];
m0_704 -> m0_705  [key=0, style=solid];
m0_706 -> m0_704  [key=0, style=bold, color=blue];
m0_547 -> m0_11  [key=2, style=dotted];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_549  [key=0, style=solid];
m0_547 -> m0_86  [key=2, style=dotted];
m0_548 -> m0_545  [key=0, style=bold, color=blue];
m0_548 -> m0_564  [key=0, style=solid];
m0_560 -> m0_27  [key=2, style=dotted];
m0_560 -> m0_561  [key=0, style=solid];
m0_560 -> m0_562  [key=0, style=solid];
m0_559 -> m0_560  [key=0, style=solid];
m0_559 -> m0_564  [key=0, style=solid];
m0_559 -> m0_179  [key=2, style=dotted];
m0_559 -> m0_180  [key=2, style=dotted];
m0_559 -> m0_565  [key=2, style=dotted];
m0_561 -> m0_559  [key=0, style=bold, color=blue];
m0_561 -> m0_564  [key=0, style=solid];
m0_561 -> m0_179  [key=2, style=dotted];
m0_561 -> m0_180  [key=2, style=dotted];
m0_561 -> m0_566  [key=2, style=dotted];
m0_621 -> m0_622  [key=0, style=solid];
m0_621 -> m0_85  [key=2, style=dotted];
m0_621 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m0_622 -> m0_623  [key=0, style=solid];
m0_622 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m0_622 -> m0_625  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m0_627 -> m0_628  [key=0, style=solid];
m0_627 -> m0_89  [key=2, style=dotted];
m0_627 -> m0_630  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_631  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_638  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_639  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_640  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_641  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_663  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_664  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_665  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_666  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_667  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_668  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_669  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_670  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_627 -> m0_671  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_628 -> m0_629  [key=0, style=solid];
m0_628 -> m0_89  [key=2, style=dotted];
m0_628 -> m0_648  [key=1, style=dashed, color=darkseagreen4, label=requiredAttribute];
m0_634 -> m0_635  [key=0, style=solid];
m0_635 -> m0_636  [key=0, style=solid];
m0_635 -> m0_681  [key=2, style=dotted];
m0_636 -> m0_637  [key=0, style=solid];
m0_639 -> m0_640  [key=0, style=solid];
m0_640 -> m0_641  [key=0, style=solid];
m0_641 -> m0_642  [key=0, style=solid];
m0_644 -> m0_645  [key=0, style=solid];
m0_645 -> m0_646  [key=0, style=solid];
m0_646 -> m0_647  [key=0, style=solid];
m0_649 -> m0_650  [key=0, style=solid];
m0_651 -> m0_652  [key=0, style=solid];
m0_652 -> m0_653  [key=0, style=solid];
m0_652 -> m0_89  [key=2, style=dotted];
m0_652 -> m0_656  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
m0_652 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
m0_653 -> m0_654  [key=0, style=solid];
m0_653 -> m0_657  [key=0, style=solid];
m0_655 -> m0_656  [key=0, style=solid];
m0_655 -> m0_89  [key=2, style=dotted];
m0_656 -> m0_658  [key=0, style=solid];
m0_657 -> m0_658  [key=0, style=solid];
m0_658 -> m0_659  [key=0, style=solid];
m0_658 -> m0_341  [key=2, style=dotted];
m0_659 -> m0_660  [key=0, style=solid];
m0_659 -> m0_341  [key=2, style=dotted];
m0_660 -> m0_661  [key=0, style=solid];
m0_660 -> m0_89  [key=2, style=dotted];
m0_660 -> m0_662  [key=1, style=dashed, color=darkseagreen4, label=defaultValueAttribute];
m0_662 -> m0_663  [key=0, style=solid];
m0_663 -> m0_664  [key=0, style=solid];
m0_664 -> m0_665  [key=0, style=solid];
m0_665 -> m0_666  [key=0, style=solid];
m0_666 -> m0_667  [key=0, style=solid];
m0_667 -> m0_668  [key=0, style=solid];
m0_668 -> m0_669  [key=0, style=solid];
m0_669 -> m0_670  [key=0, style=solid];
m0_669 -> m0_682  [key=2, style=dotted];
m0_670 -> m0_671  [key=0, style=solid];
m0_671 -> m0_672  [key=0, style=solid];
m0_677 -> m0_678  [key=0, style=solid];
m0_677 -> m0_679  [key=0, style=solid];
m0_677 -> m0_677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_624 -> m0_625  [key=0, style=solid];
m0_624 -> m0_626  [key=0, style=solid];
m0_623 -> m0_624  [key=0, style=solid];
m0_625 -> m0_627  [key=0, style=solid];
m0_625 -> m0_680  [key=2, style=dotted];
m0_625 -> m0_632  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_625 -> m0_633  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_625 -> m0_643  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_625 -> m0_644  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_625 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_625 -> m0_646  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_626 -> m0_627  [key=0, style=solid];
m0_626 -> m0_632  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_626 -> m0_633  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_626 -> m0_643  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_626 -> m0_644  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_626 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_626 -> m0_646  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_632 -> m0_633  [key=0, style=solid];
m0_632 -> m0_634  [key=0, style=solid];
m0_633 -> m0_635  [key=0, style=solid];
m0_643 -> m0_644  [key=0, style=solid];
m0_643 -> m0_648  [key=0, style=solid];
m0_630 -> m0_631  [key=0, style=solid];
m0_630 -> m0_632  [key=0, style=solid];
m0_631 -> m0_635  [key=0, style=solid];
m0_638 -> m0_639  [key=0, style=solid];
m0_638 -> m0_643  [key=0, style=solid];
m0_629 -> m0_630  [key=0, style=solid];
m0_648 -> m0_649  [key=0, style=solid];
m0_648 -> m0_651  [key=0, style=solid];
m0_637 -> m0_638  [key=0, style=solid];
m0_637 -> m0_651  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_637 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_637 -> m0_675  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_675 -> m0_676  [key=0, style=solid];
m0_675 -> m0_677  [key=0, style=solid];
m0_642 -> m0_648  [key=0, style=solid];
m0_642 -> m0_651  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_642 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_642 -> m0_675  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_647 -> m0_648  [key=0, style=solid];
m0_647 -> m0_651  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_647 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_647 -> m0_675  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_650 -> m0_651  [key=0, style=solid];
m0_650 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_650 -> m0_675  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_654 -> m0_655  [key=0, style=solid];
m0_661 -> m0_662  [key=0, style=solid];
m0_661 -> m0_663  [key=0, style=solid];
m0_672 -> m0_673  [key=0, style=solid];
m0_672 -> m0_679  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_673 -> m0_674  [key=0, style=solid];
m0_673 -> m0_675  [key=0, style=solid];
m0_674 -> m0_675  [key=0, style=solid];
m0_674 -> m0_679  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_676 -> m0_677  [key=0, style=solid];
m0_676 -> m0_679  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_678 -> m0_679  [key=0, style=solid];
m0_679 -> m0_337  [key=0, style=bold, color=blue];
m0_583 -> m0_597  [key=3, color=darkorchid, style=bold, label="method methodReturn string SerializeWithNoRedundentIdProperties"];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_583 -> m0_563  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m0_583 -> m0_589  [key=2, style=dotted];
m0_597 -> m0_35  [key=2, style=dotted];
m0_597 -> m0_598  [key=0, style=solid];
m0_597 -> m0_599  [key=0, style=solid];
m0_597 -> m0_601  [key=2, style=dotted];
m0_587 -> m0_597  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_587 -> m0_588  [key=0, style=solid];
m0_587 -> m0_589  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_587 -> m0_138  [key=0, style=bold, color=blue];
m0_598 -> m0_599  [key=0, style=solid];
m0_598 -> m0_602  [key=2, style=dotted];
m0_586 -> m0_433  [key=2, style=dotted];
m0_586 -> m0_587  [key=0, style=solid];
m0_584 -> m0_445  [key=2, style=dotted];
m0_584 -> m0_587  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_584 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_584 -> m0_585  [key=0, style=solid];
m0_584 -> m0_578  [key=0, style=solid];
m0_584 -> m0_312  [key=2, style=dotted];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_592  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_594 -> m0_610  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_594 -> m0_595  [key=0, style=solid];
m0_594 -> m0_358  [key=2, style=dotted];
m0_594 -> m0_597  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_594 -> m0_598  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_596 -> m0_593  [key=0, style=solid];
m0_596 -> m0_603  [key=2, style=dotted];
m0_596 -> m0_597  [key=0, style=solid];
m0_596 -> m0_598  [key=0, style=solid];
m0_595 -> m0_593  [key=0, style=solid];
m0_595 -> m0_596  [key=0, style=solid];
m0_585 -> m0_586  [key=0, style=solid];
m0_585 -> m0_600  [key=2, style=dotted];
m0_585 -> m0_601  [key=2, style=dotted];
m0_585 -> m0_590  [key=2, style=dotted];
m0_585 -> m0_295  [key=2, style=dotted];
m0_585 -> m0_591  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_599 -> m0_583  [key=0, style=bold, color=blue];
m0_599 -> m0_600  [key=0, style=solid];
m0_295 -> m0_285  [key=0, style=bold, color=blue];
m0_107 -> m0_11  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_6  [key=2, style=dotted, color=green];
m0_1 -> m0_7  [key=2, style=dotted, color=green];
m0_1 -> m0_3  [key=1, style=dashed, color=green, label=token1];
m0_1 -> m0_4  [key=1, style=dashed, color=green, label=token1];
m0_1 -> m0_715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_242  [key=2, style=dotted, color=green];
m0_2 -> m0_4  [key=1, style=dashed, color=green, label=token2];
m0_2 -> m0_715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_9  [key=2, style=dotted, color=green];
m0_3 -> m0_10  [key=2, style=dotted, color=green];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_429 -> m0_430  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_222  [key=2, style=dotted];
m0_269 -> m0_11  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_280  [key=2, style=dotted];
m0_269 -> m0_87  [key=2, style=dotted];
m0_269 -> m0_281  [key=2, style=dotted];
m0_269 -> m0_82  [key=2, style=dotted];
m0_716 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_716 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_716 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_717 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_718 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_484  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_518  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_581  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_710  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_718 -> m0_713  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_719 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_719 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_720 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_720 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_721 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_722 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m0_723 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=isJTokenValueType];
m0_724 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
m0_725 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=createEnumerableWrapper];
m0_727 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_727 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_727 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_727 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_727 -> m0_274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_728 -> m0_690  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m0_729 -> m0_705  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_9  [key=2, style=dotted];
m2_1 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=jsonContainerAttribute];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=jsonContainerAttribute];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=jsonContainerAttribute];
m2_1 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=jsonContainerAttribute];
m2_1 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=jsonContainerAttribute];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_0  [key=0, style=bold, color=blue];
m2_11 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_11 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_11 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_11 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m3_416 -> m3_417  [key=0, style=solid];
m3_417 -> m3_418  [key=0, style=solid];
m3_417 -> m3_421  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_417 -> m3_417  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_418 -> m3_419  [key=0, style=solid];
m3_418 -> m3_414  [key=2, style=dotted];
m3_418 -> m3_420  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_418 -> m3_423  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_421 -> m3_422  [key=0, style=solid];
m3_421 -> m3_415  [key=2, style=dotted];
m3_419 -> m3_420  [key=0, style=solid];
m3_419 -> m3_426  [key=2, style=dotted];
m3_420 -> m3_421  [key=0, style=solid];
m3_420 -> m3_426  [key=2, style=dotted];
m3_420 -> m3_89  [key=2, style=dotted];
m3_420 -> m3_395  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m3_420 -> m3_420  [key=3, color=green, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonProperty CreateProperty"];
m3_423 -> m3_424  [key=0, style=solid];
m3_423 -> m3_174  [key=2, style=dotted];
m3_422 -> m3_423  [key=0, style=solid];
m3_422 -> m3_51  [key=2, style=dotted];
m3_422 -> m3_426  [key=2, style=dotted];
m3_422 -> m3_89  [key=2, style=dotted];
m3_424 -> m3_425  [key=0, style=solid];
m3_424 -> m3_427  [key=2, style=dotted];
m3_424 -> m3_267  [key=3, color=green, style=bold, label="Parameter variable bool allowNonPublicAccess"];
m3_424 -> m3_342  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m3_424 -> m3_420  [key=3, color=green, style=bold, label="Parameter variable bool allowNonPublicAccess"];
m3_425 -> m3_416  [key=0, style=bold, color=blue];
m3_732 -> m3_733  [key=0, style=solid];
m3_733 -> m3_734  [key=0, style=solid];
m3_733 -> m3_737  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_733 -> m3_733  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_734 -> m3_735  [key=0, style=solid];
m3_734 -> m3_191  [key=2, style=dotted];
m3_734 -> m3_736  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_737 -> m3_738  [key=0, style=solid];
m3_737 -> m3_23  [key=2, style=dotted];
m3_735 -> m3_736  [key=0, style=solid];
m3_735 -> m3_23  [key=2, style=dotted];
m3_736 -> m3_737  [key=0, style=solid];
m3_736 -> m3_174  [key=2, style=dotted];
m3_738 -> m3_732  [key=0, style=bold, color=blue];
m3_643 -> m3_646  [key=0, style=solid];
m3_643 -> m3_649  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m3_643 -> m3_653  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m3_643 -> m3_634  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream json"];
m3_643 -> m3_635  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream xml"];
m3_646 -> m3_647  [key=0, style=solid];
m3_646 -> m3_64  [key=2, style=dotted];
m3_646 -> m3_648  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_649 -> m3_650  [key=0, style=solid];
m3_649 -> m3_45  [key=2, style=dotted];
m3_649 -> m3_657  [key=2, style=dotted];
m3_649 -> m3_651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_653 -> m3_654  [key=0, style=solid];
m3_653 -> m3_292  [key=2, style=dotted];
m3_647 -> m3_648  [key=0, style=solid];
m3_647 -> m3_48  [key=2, style=dotted];
m3_647 -> m3_656  [key=2, style=dotted];
m3_648 -> m3_649  [key=0, style=solid];
m3_648 -> m3_630  [key=2, style=dotted];
m3_648 -> m3_650  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_650 -> m3_651  [key=0, style=solid];
m3_650 -> m3_632  [key=2, style=dotted];
m3_650 -> m3_654  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_651 -> m3_652  [key=0, style=solid];
m3_651 -> m3_653  [key=0, style=solid];
m3_651 -> m3_47  [key=2, style=dotted];
m3_654 -> m3_655  [key=0, style=solid];
m3_654 -> m3_293  [key=2, style=dotted];
m3_652 -> m3_655  [key=0, style=solid];
m3_652 -> m3_658  [key=2, style=dotted];
m3_655 -> m3_643  [key=0, style=bold, color=blue];
m3_52 -> m3_53  [key=0, style=solid, color=green];
m3_53 -> m3_54  [key=0, style=solid, color=green];
m3_53 -> m3_62  [key=2, style=dotted, color=green];
m3_53 -> m3_55  [key=1, style=dashed, color=green, label=json];
m3_53 -> m3_59  [key=1, style=dashed, color=green, label=json];
m3_54 -> m3_55  [key=0, style=solid, color=green];
m3_55 -> m3_56  [key=0, style=solid, color=green];
m3_55 -> m3_63  [key=2, style=dotted, color=green];
m3_59 -> m3_60  [key=0, style=solid, color=green];
m3_59 -> m3_66  [key=2, style=dotted, color=green];
m3_56 -> m3_57  [key=0, style=solid, color=green];
m3_56 -> m3_48  [key=2, style=dotted, color=green];
m3_57 -> m3_58  [key=0, style=solid, color=green];
m3_57 -> m3_64  [key=2, style=dotted, color=green];
m3_58 -> m3_59  [key=0, style=solid, color=green];
m3_58 -> m3_65  [key=2, style=dotted, color=green];
m3_60 -> m3_61  [key=0, style=solid, color=green];
m3_60 -> m3_51  [key=2, style=dotted, color=green];
m3_60 -> m3_67  [key=2, style=dotted, color=green];
m3_60 -> m3_60  [key=3, color=green, style=bold, label="Local variable string json1"];
m3_61 -> m3_52  [key=0, style=bold, color=blue];
m3_101 -> m3_102  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_102 -> m3_102  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_102 -> m3_62  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract> cache"];
m3_102 -> m3_95  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.DefaultContractResolverState state"];
m3_102 -> m3_92  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_99  [key=2, style=dotted];
m3_103 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label=xmlDocument];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_100  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_109  [key=2, style=dotted];
m3_105 -> m3_110  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_88  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_89  [key=2, style=dotted];
m3_107 -> m3_107  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_107 -> m3_395  [key=3, color=green, style=bold, label="Parameter variable System.Type objectType"];
m3_108 -> m3_101  [key=0, style=bold, color=blue];
m3_575 -> m3_576  [key=0, style=solid];
m3_576 -> m3_577  [key=0, style=solid];
m3_576 -> m3_583  [key=2, style=dotted];
m3_576 -> m3_584  [key=2, style=dotted];
m3_576 -> m3_571  [key=2, style=dotted];
m3_577 -> m3_578  [key=0, style=solid];
m3_577 -> m3_573  [key=2, style=dotted];
m3_577 -> m3_574  [key=2, style=dotted];
m3_578 -> m3_579  [key=0, style=solid];
m3_578 -> m3_437  [key=2, style=dotted];
m3_578 -> m3_580  [key=1, style=dashed, color=darkseagreen4, label=xmlProduct];
m3_579 -> m3_580  [key=0, style=solid];
m3_579 -> m3_426  [key=2, style=dotted];
m3_579 -> m3_89  [key=2, style=dotted];
m3_580 -> m3_581  [key=0, style=solid];
m3_580 -> m3_174  [key=2, style=dotted];
m3_581 -> m3_582  [key=0, style=solid];
m3_581 -> m3_89  [key=2, style=dotted];
m3_582 -> m3_575  [key=0, style=bold, color=blue];
m3_512 -> m3_513  [key=0, style=solid];
m3_513 -> m3_514  [key=0, style=solid];
m3_513 -> m3_519  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_513 -> m3_513  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_514 -> m3_515  [key=0, style=solid];
m3_514 -> m3_414  [key=2, style=dotted];
m3_514 -> m3_517  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_519 -> m3_520  [key=0, style=solid];
m3_519 -> m3_89  [key=2, style=dotted];
m3_515 -> m3_516  [key=0, style=solid];
m3_515 -> m3_318  [key=2, style=dotted];
m3_515 -> m3_331  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_517 -> m3_518  [key=0, style=solid];
m3_517 -> m3_511  [key=2, style=dotted];
m3_517 -> m3_519  [key=1, style=dashed, color=darkseagreen4, label=newJson];
m3_516 -> m3_517  [key=0, style=solid];
m3_516 -> m3_89  [key=2, style=dotted];
m3_518 -> m3_519  [key=0, style=solid];
m3_518 -> m3_427  [key=2, style=dotted];
m3_520 -> m3_512  [key=0, style=bold, color=blue];
m3_200 -> m3_201  [key=0, style=solid];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_201 -> m3_201  [key=3, color=green, style=bold, label="Local variable string json"];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_99  [key=2, style=dotted];
m3_202 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_100  [key=2, style=dotted];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_174  [key=2, style=dotted];
m3_204 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_205 -> m3_206  [key=0, style=solid];
m3_205 -> m3_205  [key=3, color=green, style=bold, label="Local variable Newtonsoft.Json.Serialization.ExtensionDataSetter extensionDataSetter"];
m3_205 -> m3_201  [key=3, color=green, style=bold, label="Local variable System.Type createdType"];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_89  [key=2, style=dotted];
m3_207 -> m3_200  [key=0, style=bold, color=blue];
m3_659 -> m3_660  [key=0, style=solid];
m3_660 -> m3_661  [key=0, style=solid];
m3_660 -> m3_660  [key=3, color=darkorchid, style=bold, label="Local variable string xaml"];
m3_660 -> m3_659  [key=3, color=green, style=bold, label="Parameter variable System.IO.Stream xml"];
m3_661 -> m3_662  [key=0, style=solid];
m3_661 -> m3_87  [key=2, style=dotted];
m3_661 -> m3_156  [key=2, style=dotted];
m3_661 -> m3_663  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_661 -> m3_664  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_662 -> m3_663  [key=0, style=solid];
m3_662 -> m3_662  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m3_663 -> m3_664  [key=0, style=solid];
m3_663 -> m3_89  [key=2, style=dotted];
m3_664 -> m3_665  [key=0, style=solid];
m3_664 -> m3_157  [key=2, style=dotted];
m3_665 -> m3_666  [key=0, style=solid];
m3_665 -> m3_51  [key=2, style=dotted];
m3_665 -> m3_667  [key=1, style=dashed, color=darkseagreen4, label=xaml2];
m3_666 -> m3_667  [key=0, style=solid];
m3_666 -> m3_666  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXaml"];
m3_667 -> m3_668  [key=0, style=solid];
m3_667 -> m3_89  [key=2, style=dotted];
m3_668 -> m3_659  [key=0, style=bold, color=blue];
m3_633 -> m3_634  [key=0, style=solid];
m3_634 -> m3_635  [key=0, style=solid];
m3_634 -> m3_640  [key=2, style=dotted];
m3_634 -> m3_641  [key=2, style=dotted];
m3_634 -> m3_636  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_635 -> m3_636  [key=0, style=solid];
m3_635 -> m3_642  [key=2, style=dotted];
m3_635 -> m3_637  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_636 -> m3_637  [key=0, style=solid];
m3_636 -> m3_643  [key=2, style=dotted];
m3_637 -> m3_638  [key=0, style=solid];
m3_637 -> m3_644  [key=2, style=dotted];
m3_637 -> m3_645  [key=2, style=dotted];
m3_638 -> m3_639  [key=0, style=solid];
m3_638 -> m3_23  [key=2, style=dotted];
m3_639 -> m3_633  [key=0, style=bold, color=blue];
m3_175 -> m3_176  [key=0, style=solid];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_176  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_87  [key=2, style=dotted];
m3_177 -> m3_180  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_156  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_183  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_77  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_184  [key=2, style=dotted];
m3_182 -> m3_175  [key=0, style=bold, color=blue];
m3_709 -> m3_710  [key=0, style=solid];
m3_710 -> m3_711  [key=0, style=solid];
m3_710 -> m3_710  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m3_711 -> m3_712  [key=0, style=solid];
m3_711 -> m3_87  [key=2, style=dotted];
m3_711 -> m3_714  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_712 -> m3_713  [key=0, style=solid];
m3_712 -> m3_156  [key=2, style=dotted];
m3_714 -> m3_715  [key=0, style=solid];
m3_714 -> m3_183  [key=2, style=dotted];
m3_713 -> m3_714  [key=0, style=solid];
m3_713 -> m3_77  [key=2, style=dotted];
m3_715 -> m3_716  [key=0, style=solid];
m3_715 -> m3_184  [key=2, style=dotted];
m3_716 -> m3_709  [key=0, style=bold, color=blue];
m3_90 -> m3_91  [key=0, style=solid];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_91 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_91 -> m3_80  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_99  [key=2, style=dotted];
m3_92 -> m3_94  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_92 -> m3_92  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_100  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_23  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_88  [key=2, style=dotted];
m3_94 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_89  [key=2, style=dotted];
m3_95 -> m3_63  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.DefaultContractResolverState GetState"];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_77  [key=2, style=dotted];
m3_98 -> m3_90  [key=0, style=bold, color=blue];
m3_452 -> m3_453  [key=0, style=solid];
m3_453 -> m3_454  [key=0, style=solid];
m3_453 -> m3_455  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_453 -> m3_453  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_454 -> m3_455  [key=0, style=solid];
m3_454 -> m3_99  [key=2, style=dotted];
m3_454 -> m3_456  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_455 -> m3_456  [key=0, style=solid];
m3_455 -> m3_100  [key=2, style=dotted];
m3_456 -> m3_457  [key=0, style=solid];
m3_456 -> m3_174  [key=2, style=dotted];
m3_456 -> m3_458  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_456 -> m3_459  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_457 -> m3_458  [key=0, style=solid];
m3_457 -> m3_457  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_458 -> m3_459  [key=0, style=solid];
m3_458 -> m3_89  [key=2, style=dotted];
m3_459 -> m3_460  [key=0, style=solid];
m3_459 -> m3_24  [key=2, style=dotted];
m3_459 -> m3_420  [key=3, color=green, style=bold, label="Parameter variable bool allowNonPublicAccess"];
m3_460 -> m3_461  [key=0, style=solid];
m3_460 -> m3_23  [key=2, style=dotted];
m3_461 -> m3_452  [key=0, style=bold, color=blue];
m3_604 -> m3_605  [key=0, style=solid];
m3_605 -> m3_606  [key=0, style=solid];
m3_605 -> m3_607  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_605 -> m3_605  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_606 -> m3_607  [key=0, style=solid];
m3_606 -> m3_99  [key=2, style=dotted];
m3_606 -> m3_608  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_607 -> m3_608  [key=0, style=solid];
m3_607 -> m3_100  [key=2, style=dotted];
m3_608 -> m3_609  [key=0, style=solid];
m3_608 -> m3_174  [key=2, style=dotted];
m3_608 -> m3_610  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_609 -> m3_610  [key=0, style=solid];
m3_609 -> m3_89  [key=2, style=dotted];
m3_609 -> m3_609  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_610 -> m3_611  [key=0, style=solid];
m3_610 -> m3_191  [key=2, style=dotted];
m3_611 -> m3_612  [key=0, style=solid];
m3_611 -> m3_281  [key=2, style=dotted];
m3_611 -> m3_89  [key=2, style=dotted];
m3_612 -> m3_604  [key=0, style=bold, color=blue];
m3_752 -> m3_753  [key=0, style=solid];
m3_753 -> m3_754  [key=0, style=solid];
m3_753 -> m3_87  [key=2, style=dotted];
m3_753 -> m3_755  [key=1, style=dashed, color=darkseagreen4, label=original];
m3_754 -> m3_755  [key=0, style=solid];
m3_754 -> m3_51  [key=2, style=dotted];
m3_754 -> m3_23  [key=2, style=dotted];
m3_755 -> m3_756  [key=0, style=solid];
m3_755 -> m3_88  [key=2, style=dotted];
m3_755 -> m3_757  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_756 -> m3_757  [key=0, style=solid];
m3_756 -> m3_23  [key=2, style=dotted];
m3_756 -> m3_756  [key=3, color=green, style=bold, label="Local variable string xmlString"];
m3_757 -> m3_758  [key=0, style=solid];
m3_757 -> m3_77  [key=2, style=dotted];
m3_758 -> m3_759  [key=0, style=solid];
m3_758 -> m3_51  [key=2, style=dotted];
m3_758 -> m3_23  [key=2, style=dotted];
m3_759 -> m3_752  [key=0, style=bold, color=blue];
m3_250 -> m3_251  [key=0, style=solid];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_24  [key=2, style=dotted];
m3_251 -> m3_253  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_23  [key=2, style=dotted];
m3_253 -> m3_254  [key=0, style=solid];
m3_253 -> m3_0  [key=2, style=dotted];
m3_253 -> m3_172  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.ConstructorInfo constructor"];
m3_254 -> m3_255  [key=0, style=solid];
m3_254 -> m3_89  [key=2, style=dotted];
m3_255 -> m3_250  [key=0, style=bold, color=blue];
m3_544 -> m3_545  [key=0, style=solid];
m3_544 -> m3_544  [key=3, color=green, style=bold, label="Local variable string json"];
m3_545 -> m3_546  [key=0, style=solid];
m3_545 -> m3_550  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_545 -> m3_545  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_546 -> m3_547  [key=0, style=solid];
m3_546 -> m3_414  [key=2, style=dotted];
m3_546 -> m3_549  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_550 -> m3_551  [key=0, style=solid];
m3_550 -> m3_89  [key=2, style=dotted];
m3_550 -> m3_331  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_547 -> m3_548  [key=0, style=solid];
m3_547 -> m3_318  [key=2, style=dotted];
m3_549 -> m3_550  [key=0, style=solid];
m3_549 -> m3_511  [key=2, style=dotted];
m3_548 -> m3_549  [key=0, style=solid];
m3_548 -> m3_89  [key=2, style=dotted];
m3_548 -> m3_548  [key=3, color=green, style=bold, label="Local variable string json"];
m3_551 -> m3_544  [key=0, style=bold, color=blue];
m3_358 -> m3_359  [key=0, style=solid];
m3_359 -> m3_360  [key=0, style=solid];
m3_359 -> m3_109  [key=2, style=dotted];
m3_359 -> m3_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_360 -> m3_358  [key=0, style=bold, color=blue];
m3_337 -> m3_338  [key=0, style=solid];
m3_338 -> m3_339  [key=0, style=solid];
m3_338 -> m3_340  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_338 -> m3_338  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_99  [key=2, style=dotted];
m3_339 -> m3_341  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_339 -> m3_344  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_340 -> m3_341  [key=0, style=solid];
m3_340 -> m3_100  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_174  [key=2, style=dotted];
m3_341 -> m3_343  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_344 -> m3_345  [key=0, style=solid];
m3_344 -> m3_23  [key=2, style=dotted];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_89  [key=2, style=dotted];
m3_342 -> m3_342  [key=3, color=green, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonStringContract CreateStringContract"];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_24  [key=2, style=dotted];
m3_345 -> m3_337  [key=0, style=bold, color=blue];
m3_283 -> m3_284  [key=0, style=solid];
m3_284 -> m3_283  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_27  [key=3, color=darkorchid, style=bold, label="method methodReturn XmlNode DeserializeXmlNode"];
m3_24 -> m3_254  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_304  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_311  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_333  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_341  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_347  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_365  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_456  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_466  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_475  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_480  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_24 -> m3_553  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_265 -> m3_266  [key=0, style=solid];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_270  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_266 -> m3_274  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_266 -> m3_275  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_266 -> m3_279  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_266 -> m3_266  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_267 -> m3_277  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_267 -> m3_267  [key=3, color=green, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonProperty CreatePropertyFromConstructorParameter"];
m3_267 -> m3_315  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m3_267 -> m3_330  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m3_267 -> m3_335  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m3_267 -> m3_342  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_100  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_281  [key=2, style=dotted];
m3_274 -> m3_89  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_275 -> m3_87  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_282  [key=2, style=dotted];
m3_279 -> m3_89  [key=2, style=dotted];
m3_268 -> m3_269  [key=0, style=solid];
m3_268 -> m3_99  [key=2, style=dotted];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_89  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_89  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_269  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m3_269 -> m3_271  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_174  [key=2, style=dotted];
m3_271 -> m3_273  [key=1, style=dashed, color=darkseagreen4, label=json1];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_191  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_156  [key=2, style=dotted];
m3_276 -> m3_278  [key=1, style=dashed, color=darkseagreen4, label=json2];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_157  [key=2, style=dotted];
m3_280 -> m3_265  [key=0, style=bold, color=blue];
m3_318 -> m3_319  [key=0, style=solid];
m3_318 -> m3_323  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_318 -> m3_492  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_318 -> m3_505  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_318 -> m3_514  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_318 -> m3_523  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_318 -> m3_538  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_318 -> m3_546  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_319 -> m3_320  [key=0, style=solid];
m3_319 -> m3_291  [key=2, style=dotted];
m3_323 -> m3_324  [key=0, style=solid];
m3_323 -> m3_327  [key=2, style=dotted];
m3_320 -> m3_321  [key=0, style=solid];
m3_320 -> m3_320  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_320 -> m3_322  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_321 -> m3_322  [key=0, style=solid];
m3_321 -> m3_326  [key=2, style=dotted];
m3_321 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_292  [key=2, style=dotted];
m3_324 -> m3_325  [key=0, style=solid];
m3_324 -> m3_328  [key=2, style=dotted];
m3_325 -> m3_318  [key=0, style=bold, color=blue];
m3_536 -> m3_537  [key=0, style=solid];
m3_537 -> m3_538  [key=0, style=solid];
m3_537 -> m3_537  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_538 -> m3_539  [key=0, style=solid];
m3_538 -> m3_414  [key=2, style=dotted];
m3_538 -> m3_541  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_539 -> m3_540  [key=0, style=solid];
m3_539 -> m3_318  [key=2, style=dotted];
m3_541 -> m3_542  [key=0, style=solid];
m3_541 -> m3_511  [key=2, style=dotted];
m3_540 -> m3_541  [key=0, style=solid];
m3_540 -> m3_89  [key=2, style=dotted];
m3_542 -> m3_543  [key=0, style=solid];
m3_542 -> m3_89  [key=2, style=dotted];
m3_543 -> m3_536  [key=0, style=bold, color=blue];
m3_281 -> m3_295  [key=0, style=solid];
m3_281 -> m3_296  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_281 -> m3_297  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m3_281 -> m3_273  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlDocument doc"];
m3_281 -> m3_610  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlDocument doc"];
m3_281 -> m3_430  [key=3, color=darkorchid, style=bold, label="Parameter variable bool indent"];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_290  [key=2, style=dotted];
m3_295 -> m3_298  [key=1, style=dashed, color=darkseagreen4, label=builder];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_283  [key=2, style=dotted];
m3_296 -> m3_291  [key=2, style=dotted];
m3_296 -> m3_292  [key=2, style=dotted];
m3_297 -> m3_298  [key=0, style=solid];
m3_297 -> m3_293  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_294  [key=2, style=dotted];
m3_298 -> m3_210  [key=3, color=green, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerializing"];
m3_299 -> m3_281  [key=0, style=bold, color=blue];
m3_446 -> m3_447  [key=0, style=solid];
m3_447 -> m3_448  [key=0, style=solid];
m3_447 -> m3_99  [key=2, style=dotted];
m3_447 -> m3_449  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_448 -> m3_449  [key=0, style=solid];
m3_448 -> m3_100  [key=2, style=dotted];
m3_449 -> m3_450  [key=0, style=solid];
m3_449 -> m3_174  [key=2, style=dotted];
m3_450 -> m3_451  [key=0, style=solid];
m3_450 -> m3_89  [key=2, style=dotted];
m3_451 -> m3_446  [key=0, style=bold, color=blue];
m3_559 -> m3_560  [key=0, style=solid];
m3_560 -> m3_561  [key=0, style=solid];
m3_560 -> m3_571  [key=2, style=dotted];
m3_560 -> m3_562  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_560 -> m3_563  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_560 -> m3_564  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_560 -> m3_565  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_561 -> m3_562  [key=0, style=solid];
m3_562 -> m3_563  [key=0, style=solid];
m3_562 -> m3_572  [key=2, style=dotted];
m3_563 -> m3_564  [key=0, style=solid];
m3_564 -> m3_565  [key=0, style=solid];
m3_565 -> m3_566  [key=0, style=solid];
m3_565 -> m3_573  [key=2, style=dotted];
m3_565 -> m3_574  [key=2, style=dotted];
m3_566 -> m3_567  [key=0, style=solid];
m3_566 -> m3_437  [key=2, style=dotted];
m3_566 -> m3_568  [key=1, style=dashed, color=darkseagreen4, label=xmlProduct];
m3_567 -> m3_568  [key=0, style=solid];
m3_567 -> m3_426  [key=2, style=dotted];
m3_567 -> m3_89  [key=2, style=dotted];
m3_568 -> m3_569  [key=0, style=solid];
m3_568 -> m3_174  [key=2, style=dotted];
m3_569 -> m3_570  [key=0, style=solid];
m3_569 -> m3_89  [key=2, style=dotted];
m3_570 -> m3_559  [key=0, style=bold, color=blue];
m3_746 -> m3_747  [key=0, style=solid];
m3_747 -> m3_748  [key=0, style=solid];
m3_747 -> m3_740  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m3_748 -> m3_749  [key=0, style=solid];
m3_748 -> m3_87  [key=2, style=dotted];
m3_748 -> m3_748  [key=3, color=green, style=bold, label="Local variable string json"];
m3_749 -> m3_750  [key=0, style=solid];
m3_749 -> m3_156  [key=2, style=dotted];
m3_750 -> m3_751  [key=0, style=solid];
m3_750 -> m3_23  [key=2, style=dotted];
m3_751 -> m3_746  [key=0, style=bold, color=blue];
m3_329 -> m3_330  [key=0, style=solid];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_330 -> m3_330  [key=3, color=green, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonLinqContract CreateLinqContract"];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_99  [key=2, style=dotted];
m3_331 -> m3_333  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_331 -> m3_335  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_331 -> m3_503  [key=3, color=green, style=bold, label="Parameter variable XmlNode node"];
m3_331 -> m3_553  [key=3, color=green, style=bold, label="Parameter variable XmlNode node"];
m3_332 -> m3_333  [key=0, style=solid];
m3_332 -> m3_100  [key=2, style=dotted];
m3_333 -> m3_334  [key=0, style=solid];
m3_333 -> m3_174  [key=2, style=dotted];
m3_335 -> m3_336  [key=0, style=solid];
m3_335 -> m3_23  [key=2, style=dotted];
m3_334 -> m3_335  [key=0, style=solid];
m3_334 -> m3_24  [key=2, style=dotted];
m3_336 -> m3_329  [key=0, style=bold, color=blue];
m3_373 -> m3_374  [key=0, style=solid];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_376  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m3_374 -> m3_374  [key=3, color=green, style=bold, label="Local variable string jsonText"];
m3_375 -> m3_376  [key=0, style=solid];
m3_375 -> m3_99  [key=2, style=dotted];
m3_375 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m3_375 -> m3_375  [key=3, color=green, style=bold, label="Local variable string expected"];
m3_376 -> m3_377  [key=0, style=solid];
m3_376 -> m3_100  [key=2, style=dotted];
m3_377 -> m3_378  [key=0, style=solid];
m3_377 -> m3_174  [key=2, style=dotted];
m3_377 -> m3_379  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m3_378 -> m3_379  [key=0, style=solid];
m3_378 -> m3_378  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_379 -> m3_380  [key=0, style=solid];
m3_379 -> m3_89  [key=2, style=dotted];
m3_380 -> m3_381  [key=0, style=solid];
m3_380 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m3_380 -> m3_380  [key=3, color=green, style=bold, label="Local variable string arrayXml"];
m3_381 -> m3_382  [key=0, style=solid];
m3_381 -> m3_99  [key=2, style=dotted];
m3_381 -> m3_383  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m3_382 -> m3_383  [key=0, style=solid];
m3_382 -> m3_100  [key=2, style=dotted];
m3_383 -> m3_384  [key=0, style=solid];
m3_383 -> m3_174  [key=2, style=dotted];
m3_383 -> m3_385  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m3_384 -> m3_385  [key=0, style=solid];
m3_384 -> m3_384  [key=3, color=green, style=bold, label="Local variable string expected"];
m3_385 -> m3_386  [key=0, style=solid];
m3_385 -> m3_89  [key=2, style=dotted];
m3_386 -> m3_387  [key=0, style=solid];
m3_386 -> m3_388  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m3_387 -> m3_388  [key=0, style=solid];
m3_387 -> m3_99  [key=2, style=dotted];
m3_387 -> m3_389  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m3_388 -> m3_389  [key=0, style=solid];
m3_388 -> m3_100  [key=2, style=dotted];
m3_389 -> m3_390  [key=0, style=solid];
m3_389 -> m3_174  [key=2, style=dotted];
m3_389 -> m3_391  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m3_390 -> m3_391  [key=0, style=solid];
m3_391 -> m3_392  [key=0, style=solid];
m3_391 -> m3_89  [key=2, style=dotted];
m3_392 -> m3_373  [key=0, style=bold, color=blue];
m3_428 -> m3_429  [key=0, style=solid];
m3_429 -> m3_430  [key=0, style=solid];
m3_429 -> m3_432  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_429 -> m3_435  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_429 -> m3_417  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_430 -> m3_431  [key=0, style=solid];
m3_430 -> m3_437  [key=2, style=dotted];
m3_430 -> m3_434  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_432 -> m3_433  [key=0, style=solid];
m3_432 -> m3_438  [key=2, style=dotted];
m3_435 -> m3_436  [key=0, style=solid];
m3_435 -> m3_89  [key=2, style=dotted];
m3_431 -> m3_432  [key=0, style=solid];
m3_431 -> m3_426  [key=2, style=dotted];
m3_431 -> m3_89  [key=2, style=dotted];
m3_431 -> m3_420  [key=3, color=green, style=bold, label="Local variable string json"];
m3_434 -> m3_435  [key=0, style=solid];
m3_434 -> m3_174  [key=2, style=dotted];
m3_433 -> m3_434  [key=0, style=solid];
m3_433 -> m3_51  [key=2, style=dotted];
m3_433 -> m3_426  [key=2, style=dotted];
m3_433 -> m3_89  [key=2, style=dotted];
m3_436 -> m3_428  [key=0, style=bold, color=blue];
m3_552 -> m3_553  [key=0, style=solid];
m3_553 -> m3_554  [key=0, style=solid];
m3_553 -> m3_557  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_553 -> m3_553  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_553 -> m3_331  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_554 -> m3_555  [key=0, style=solid];
m3_554 -> m3_196  [key=2, style=dotted];
m3_554 -> m3_556  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_555 -> m3_552  [key=0, style=bold, color=blue];
m3_462 -> m3_463  [key=0, style=solid];
m3_463 -> m3_464  [key=0, style=solid];
m3_463 -> m3_465  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_463 -> m3_463  [key=3, color=green, style=bold, label="Local variable string expected"];
m3_464 -> m3_465  [key=0, style=solid];
m3_464 -> m3_99  [key=2, style=dotted];
m3_464 -> m3_466  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_464 -> m3_470  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_465 -> m3_466  [key=0, style=solid];
m3_465 -> m3_100  [key=2, style=dotted];
m3_466 -> m3_467  [key=0, style=solid];
m3_466 -> m3_174  [key=2, style=dotted];
m3_470 -> m3_471  [key=0, style=solid];
m3_470 -> m3_23  [key=2, style=dotted];
m3_467 -> m3_468  [key=0, style=solid];
m3_467 -> m3_472  [key=2, style=dotted];
m3_467 -> m3_473  [key=2, style=dotted];
m3_467 -> m3_467  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_467 -> m3_469  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_468 -> m3_469  [key=0, style=solid];
m3_468 -> m3_89  [key=2, style=dotted];
m3_469 -> m3_470  [key=0, style=solid];
m3_469 -> m3_24  [key=2, style=dotted];
m3_471 -> m3_462  [key=0, style=bold, color=blue];
m3_669 -> m3_670  [key=0, style=solid];
m3_670 -> m3_671  [key=0, style=solid];
m3_670 -> m3_672  [key=1, style=dashed, color=darkseagreen4, label=xaml];
m3_670 -> m3_660  [key=3, color=darkorchid, style=bold, label="Local variable string xaml"];
m3_671 -> m3_672  [key=0, style=solid];
m3_671 -> m3_99  [key=2, style=dotted];
m3_671 -> m3_673  [key=1, style=dashed, color=darkseagreen4, label=document];
m3_672 -> m3_673  [key=0, style=solid];
m3_672 -> m3_100  [key=2, style=dotted];
m3_673 -> m3_674  [key=0, style=solid];
m3_673 -> m3_174  [key=2, style=dotted];
m3_673 -> m3_675  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_673 -> m3_676  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_674 -> m3_675  [key=0, style=solid];
m3_674 -> m3_662  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m3_675 -> m3_676  [key=0, style=solid];
m3_675 -> m3_89  [key=2, style=dotted];
m3_676 -> m3_677  [key=0, style=solid];
m3_676 -> m3_191  [key=2, style=dotted];
m3_676 -> m3_679  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_677 -> m3_678  [key=0, style=solid];
m3_677 -> m3_326  [key=2, style=dotted];
m3_677 -> m3_681  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_679 -> m3_680  [key=0, style=solid];
m3_679 -> m3_327  [key=2, style=dotted];
m3_678 -> m3_679  [key=0, style=solid];
m3_678 -> m3_291  [key=2, style=dotted];
m3_678 -> m3_292  [key=2, style=dotted];
m3_678 -> m3_680  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_681 -> m3_682  [key=0, style=solid];
m3_681 -> m3_328  [key=2, style=dotted];
m3_681 -> m3_683  [key=1, style=dashed, color=darkseagreen4, label=xaml2];
m3_680 -> m3_681  [key=0, style=solid];
m3_680 -> m3_596  [key=2, style=dotted];
m3_682 -> m3_683  [key=0, style=solid];
m3_682 -> m3_666  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXaml"];
m3_683 -> m3_684  [key=0, style=solid];
m3_683 -> m3_89  [key=2, style=dotted];
m3_684 -> m3_669  [key=0, style=bold, color=blue];
m3_474 -> m3_475  [key=0, style=solid];
m3_475 -> m3_476  [key=0, style=solid];
m3_475 -> m3_475  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_476 -> m3_477  [key=0, style=solid];
m3_476 -> m3_24  [key=2, style=dotted];
m3_477 -> m3_478  [key=0, style=solid];
m3_477 -> m3_23  [key=2, style=dotted];
m3_478 -> m3_474  [key=0, style=bold, color=blue];
m3_79 -> m3_80  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_80 -> m3_80  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_87  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_51  [key=2, style=dotted];
m3_85 -> m3_23  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_88  [key=2, style=dotted];
m3_82 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_89  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_77  [key=2, style=dotted];
m3_86 -> m3_79  [key=0, style=bold, color=blue];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_144  [key=2, style=dotted];
m3_134 -> m3_145  [key=2, style=dotted];
m3_134 -> m3_146  [key=2, style=dotted];
m3_134 -> m3_147  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_148  [key=2, style=dotted];
m3_135 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=x];
m3_135 -> m3_135  [key=3, color=green, style=bold, label="Local variable decimal d"];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_131  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_23  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_64  [key=2, style=dotted];
m3_137 -> m3_48  [key=2, style=dotted];
m3_137 -> m3_132  [key=2, style=dotted];
m3_137 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_51  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_88  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_23  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_77  [key=2, style=dotted];
m3_143 -> m3_133  [key=0, style=bold, color=blue];
m3_208 -> m3_209  [key=0, style=solid];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_99  [key=2, style=dotted];
m3_209 -> m3_222  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_209 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_209 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_209 -> m3_229  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_209 -> m3_230  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_209 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_209 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_210 -> m3_211  [key=0, style=solid];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_244  [key=2, style=dotted];
m3_222 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=instruction];
m3_222 -> m3_222  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_225 -> m3_226  [key=0, style=solid];
m3_225 -> m3_245  [key=2, style=dotted];
m3_225 -> m3_237  [key=1, style=dashed, color=darkseagreen4, label=cDataSection];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_246  [key=2, style=dotted];
m3_228 -> m3_232  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_228 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_228 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_228 -> m3_237  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_228 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_228 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=element];
m3_229 -> m3_230  [key=0, style=solid];
m3_229 -> m3_247  [key=2, style=dotted];
m3_229 -> m3_248  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_247  [key=2, style=dotted];
m3_230 -> m3_232  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_247  [key=2, style=dotted];
m3_233 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_249  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_211 -> m3_218  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_211 -> m3_211  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_99  [key=2, style=dotted];
m3_212 -> m3_214  [key=1, style=dashed, color=darkseagreen4, label=document];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_100  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_87  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m3_215 -> m3_216  [key=0, style=solid];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_174  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_23  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_219 -> m3_242  [key=2, style=dotted];
m3_219 -> m3_243  [key=2, style=dotted];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_156  [key=2, style=dotted];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_23  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_174  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_249  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_23  [key=2, style=dotted];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_174  [key=2, style=dotted];
m3_237 -> m3_238  [key=0, style=solid];
m3_237 -> m3_249  [key=2, style=dotted];
m3_237 -> m3_210  [key=3, color=green, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetAttributeConstructor"];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_23  [key=2, style=dotted];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_248  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_248  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_174  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_234 -> m3_235  [key=0, style=solid];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_89  [key=2, style=dotted];
m3_241 -> m3_208  [key=0, style=bold, color=blue];
m3_346 -> m3_347  [key=0, style=solid];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_347  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m3_348 -> m3_349  [key=0, style=solid];
m3_348 -> m3_24  [key=2, style=dotted];
m3_348 -> m3_350  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_349 -> m3_350  [key=0, style=solid];
m3_349 -> m3_349  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_350 -> m3_351  [key=0, style=solid];
m3_350 -> m3_23  [key=2, style=dotted];
m3_351 -> m3_346  [key=0, style=bold, color=blue];
m3_400 -> m3_401  [key=0, style=solid];
m3_401 -> m3_402  [key=0, style=solid];
m3_401 -> m3_405  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_401 -> m3_394  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_402 -> m3_403  [key=0, style=solid];
m3_402 -> m3_196  [key=2, style=dotted];
m3_402 -> m3_404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_403 -> m3_400  [key=0, style=bold, color=blue];
m3_352 -> m3_353  [key=0, style=solid];
m3_353 -> m3_354  [key=0, style=solid];
m3_353 -> m3_109  [key=2, style=dotted];
m3_353 -> m3_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_354 -> m3_352  [key=0, style=bold, color=blue];
m3_690 -> m3_691  [key=0, style=solid];
m3_691 -> m3_692  [key=0, style=solid];
m3_691 -> m3_696  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m3_691 -> m3_691  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m3_692 -> m3_693  [key=0, style=solid];
m3_692 -> m3_87  [key=2, style=dotted];
m3_696 -> m3_697  [key=0, style=solid];
m3_696 -> m3_100  [key=2, style=dotted];
m3_693 -> m3_694  [key=0, style=solid];
m3_693 -> m3_88  [key=2, style=dotted];
m3_694 -> m3_695  [key=0, style=solid];
m3_694 -> m3_23  [key=2, style=dotted];
m3_695 -> m3_696  [key=0, style=solid];
m3_695 -> m3_99  [key=2, style=dotted];
m3_695 -> m3_697  [key=1, style=dashed, color=darkseagreen4, label=xml1];
m3_697 -> m3_698  [key=0, style=solid];
m3_697 -> m3_88  [key=2, style=dotted];
m3_698 -> m3_699  [key=0, style=solid];
m3_698 -> m3_23  [key=2, style=dotted];
m3_699 -> m3_690  [key=0, style=bold, color=blue];
m3_407 -> m3_408  [key=0, style=solid];
m3_408 -> m3_409  [key=0, style=solid];
m3_408 -> m3_411  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_408 -> m3_408  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_409 -> m3_410  [key=0, style=solid];
m3_409 -> m3_414  [key=2, style=dotted];
m3_411 -> m3_412  [key=0, style=solid];
m3_411 -> m3_415  [key=2, style=dotted];
m3_410 -> m3_411  [key=0, style=solid];
m3_410 -> m3_23  [key=2, style=dotted];
m3_412 -> m3_413  [key=0, style=solid];
m3_412 -> m3_51  [key=2, style=dotted];
m3_412 -> m3_23  [key=2, style=dotted];
m3_413 -> m3_407  [key=0, style=bold, color=blue];
m3_111 -> m3_112  [key=0, style=solid];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_102  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_87  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_118  [key=2, style=dotted];
m3_114 -> m3_110  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_88  [key=2, style=dotted];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_89  [key=2, style=dotted];
m3_116 -> m3_107  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_117 -> m3_111  [key=0, style=bold, color=blue];
m3_158 -> m3_159  [key=0, style=solid];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_99  [key=2, style=dotted];
m3_159 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_100  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_174  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_23  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_99  [key=2, style=dotted];
m3_163 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_100  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_174  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_23  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_87  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_156  [key=2, style=dotted];
m3_168 -> m3_168  [key=3, color=green, style=bold, label="Local variable string xml"];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_23  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_87  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_156  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_23  [key=2, style=dotted];
m3_173 -> m3_158  [key=0, style=bold, color=blue];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_75  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_76  [key=2, style=dotted];
m3_70 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_23  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_77  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_78  [key=2, style=dotted];
m3_74 -> m3_68  [key=0, style=bold, color=blue];
m3_700 -> m3_701  [key=0, style=solid];
m3_701 -> m3_702  [key=0, style=solid];
m3_701 -> m3_708  [key=2, style=dotted];
m3_701 -> m3_87  [key=2, style=dotted];
m3_701 -> m3_704  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_701 -> m3_705  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_701 -> m3_706  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_702 -> m3_703  [key=0, style=solid];
m3_702 -> m3_76  [key=2, style=dotted];
m3_704 -> m3_705  [key=0, style=solid];
m3_704 -> m3_23  [key=2, style=dotted];
m3_705 -> m3_706  [key=0, style=solid];
m3_705 -> m3_23  [key=2, style=dotted];
m3_706 -> m3_707  [key=0, style=solid];
m3_706 -> m3_51  [key=2, style=dotted];
m3_706 -> m3_23  [key=2, style=dotted];
m3_703 -> m3_704  [key=0, style=solid];
m3_703 -> m3_77  [key=2, style=dotted];
m3_703 -> m3_705  [key=1, style=dashed, color=darkseagreen4, label=w2];
m3_703 -> m3_706  [key=1, style=dashed, color=darkseagreen4, label=w2];
m3_707 -> m3_700  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_0 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_0 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m3_0 -> m3_251  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_0 -> m3_492  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_15  [key=2, style=dotted];
m3_1 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_16  [key=2, style=dotted];
m3_2 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_9  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_23  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_5 -> m3_11  [key=0, style=solid];
m3_5 -> m3_17  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_20  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_21  [key=2, style=dotted];
m3_8 -> m3_11  [key=0, style=solid];
m3_8 -> m3_18  [key=2, style=dotted];
m3_8 -> m3_19  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_22  [key=2, style=dotted];
m3_14 -> m3_0  [key=0, style=bold, color=blue];
m3_760 -> m3_761  [key=0, style=solid];
m3_761 -> m3_762  [key=0, style=solid];
m3_761 -> m3_768  [key=2, style=dotted];
m3_761 -> m3_763  [key=1, style=dashed, color=darkseagreen4, label=original];
m3_762 -> m3_763  [key=0, style=solid];
m3_762 -> m3_51  [key=2, style=dotted];
m3_762 -> m3_23  [key=2, style=dotted];
m3_763 -> m3_764  [key=0, style=solid];
m3_763 -> m3_88  [key=2, style=dotted];
m3_763 -> m3_765  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_764 -> m3_765  [key=0, style=solid];
m3_764 -> m3_23  [key=2, style=dotted];
m3_765 -> m3_766  [key=0, style=solid];
m3_765 -> m3_77  [key=2, style=dotted];
m3_766 -> m3_767  [key=0, style=solid];
m3_766 -> m3_51  [key=2, style=dotted];
m3_766 -> m3_23  [key=2, style=dotted];
m3_767 -> m3_760  [key=0, style=bold, color=blue];
m3_89 -> m3_137  [key=3, color=green, style=bold, label="method methodReturn bool ShouldSerializeEntityMember"];
m3_556 -> m3_557  [key=0, style=solid];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_191  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_199 -> m3_197  [key=0, style=bold, color=blue];
m3_355 -> m3_356  [key=0, style=solid];
m3_356 -> m3_357  [key=0, style=solid];
m3_356 -> m3_191  [key=2, style=dotted];
m3_357 -> m3_355  [key=0, style=bold, color=blue];
m3_361 -> m3_362  [key=0, style=solid];
m3_362 -> m3_363  [key=0, style=solid];
m3_362 -> m3_191  [key=2, style=dotted];
m3_363 -> m3_361  [key=0, style=bold, color=blue];
m3_398 -> m3_399  [key=0, style=solid];
m3_398 -> m3_191  [key=2, style=dotted];
m3_397 -> m3_398  [key=0, style=solid];
m3_399 -> m3_397  [key=0, style=bold, color=blue];
m3_405 -> m3_406  [key=0, style=solid];
m3_405 -> m3_157  [key=2, style=dotted];
m3_404 -> m3_405  [key=0, style=solid];
m3_406 -> m3_404  [key=0, style=bold, color=blue];
m3_534 -> m3_535  [key=0, style=solid];
m3_534 -> m3_414  [key=2, style=dotted];
m3_533 -> m3_534  [key=0, style=solid];
m3_535 -> m3_533  [key=0, style=bold, color=blue];
m3_557 -> m3_558  [key=0, style=solid];
m3_557 -> m3_24  [key=2, style=dotted];
m3_558 -> m3_556  [key=0, style=bold, color=blue];
m3_620 -> m3_621  [key=0, style=solid];
m3_621 -> m3_622  [key=0, style=solid];
m3_621 -> m3_628  [key=2, style=dotted];
m3_622 -> m3_623  [key=0, style=solid];
m3_622 -> m3_629  [key=2, style=dotted];
m3_622 -> m3_624  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_623 -> m3_624  [key=0, style=solid];
m3_623 -> m3_64  [key=2, style=dotted];
m3_623 -> m3_48  [key=2, style=dotted];
m3_623 -> m3_630  [key=2, style=dotted];
m3_623 -> m3_625  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_624 -> m3_625  [key=0, style=solid];
m3_624 -> m3_631  [key=2, style=dotted];
m3_625 -> m3_626  [key=0, style=solid];
m3_625 -> m3_632  [key=2, style=dotted];
m3_626 -> m3_627  [key=0, style=solid];
m3_626 -> m3_23  [key=2, style=dotted];
m3_627 -> m3_620  [key=0, style=bold, color=blue];
m3_685 -> m3_686  [key=0, style=solid];
m3_686 -> m3_687  [key=0, style=solid];
m3_686 -> m3_686  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_687 -> m3_688  [key=0, style=solid];
m3_687 -> m3_191  [key=2, style=dotted];
m3_688 -> m3_689  [key=0, style=solid];
m3_688 -> m3_23  [key=2, style=dotted];
m3_689 -> m3_685  [key=0, style=bold, color=blue];
m3_486 -> m3_487  [key=0, style=solid];
m3_487 -> m3_488  [key=0, style=solid];
m3_487 -> m3_500  [key=2, style=dotted];
m3_487 -> m3_489  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m3_487 -> m3_490  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m3_488 -> m3_489  [key=0, style=solid];
m3_488 -> m3_500  [key=2, style=dotted];
m3_488 -> m3_501  [key=2, style=dotted];
m3_489 -> m3_490  [key=0, style=solid];
m3_489 -> m3_501  [key=2, style=dotted];
m3_490 -> m3_491  [key=0, style=solid];
m3_490 -> m3_64  [key=2, style=dotted];
m3_490 -> m3_502  [key=2, style=dotted];
m3_490 -> m3_492  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_491 -> m3_492  [key=0, style=solid];
m3_491 -> m3_89  [key=2, style=dotted];
m3_492 -> m3_493  [key=0, style=solid];
m3_492 -> m3_27  [key=2, style=dotted];
m3_492 -> m3_496  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_493 -> m3_494  [key=0, style=solid];
m3_493 -> m3_318  [key=2, style=dotted];
m3_493 -> m3_495  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_496 -> m3_497  [key=0, style=solid];
m3_496 -> m3_0  [key=2, style=dotted];
m3_496 -> m3_498  [key=1, style=dashed, color=darkseagreen4, label=xmlJson];
m3_494 -> m3_495  [key=0, style=solid];
m3_494 -> m3_494  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_495 -> m3_496  [key=0, style=solid];
m3_495 -> m3_89  [key=2, style=dotted];
m3_497 -> m3_498  [key=0, style=solid];
m3_497 -> m3_497  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXmlJson"];
m3_498 -> m3_499  [key=0, style=solid];
m3_498 -> m3_89  [key=2, style=dotted];
m3_499 -> m3_486  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_27 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_27 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_27 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_27 -> m3_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_27 -> m3_490  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m3_27 -> m3_25  [key=3, color=darkorchid, style=bold, label="Parameter variable string deserializeRootElementName"];
m3_27 -> m3_492  [key=3, color=darkorchid, style=bold, label="Parameter variable string deserializeRootElementName"];
m3_27 -> m3_34  [key=3, color=darkorchid, style=bold, label="method methodReturn XmlNode DeserializeXmlNode"];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_45  [key=2, style=dotted];
m3_29 -> m3_46  [key=2, style=dotted];
m3_29 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_45  [key=2, style=dotted];
m3_36 -> m3_46  [key=2, style=dotted];
m3_36 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_47  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_49  [key=2, style=dotted];
m3_34 -> m3_50  [key=2, style=dotted];
m3_34 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_48  [key=2, style=dotted];
m3_31 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_31 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_31 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_49  [key=2, style=dotted];
m3_38 -> m3_50  [key=2, style=dotted];
m3_38 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_38 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=xmlText];
m3_43 -> m3_44  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_23  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_47  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_51  [key=2, style=dotted];
m3_39 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m3_39 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m3_44 -> m3_27  [key=0, style=bold, color=blue];
m3_439 -> m3_440  [key=0, style=solid];
m3_440 -> m3_441  [key=0, style=solid];
m3_440 -> m3_443  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_440 -> m3_440  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_441 -> m3_442  [key=0, style=solid];
m3_441 -> m3_414  [key=2, style=dotted];
m3_443 -> m3_444  [key=0, style=solid];
m3_443 -> m3_415  [key=2, style=dotted];
m3_442 -> m3_443  [key=0, style=solid];
m3_442 -> m3_23  [key=2, style=dotted];
m3_444 -> m3_445  [key=0, style=solid];
m3_444 -> m3_51  [key=2, style=dotted];
m3_444 -> m3_23  [key=2, style=dotted];
m3_445 -> m3_439  [key=0, style=bold, color=blue];
m3_364 -> m3_365  [key=0, style=solid];
m3_365 -> m3_366  [key=0, style=solid];
m3_365 -> m3_365  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m3_366 -> m3_367  [key=0, style=solid];
m3_366 -> m3_24  [key=2, style=dotted];
m3_366 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_366 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m3_367 -> m3_368  [key=0, style=solid];
m3_367 -> m3_367  [key=3, color=green, style=bold, label="Local variable string jsonText"];
m3_368 -> m3_369  [key=0, style=solid];
m3_368 -> m3_23  [key=2, style=dotted];
m3_369 -> m3_370  [key=0, style=solid];
m3_369 -> m3_174  [key=2, style=dotted];
m3_369 -> m3_371  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_369 -> m3_369  [key=3, color=green, style=bold, label="Local variable string expected"];
m3_370 -> m3_371  [key=0, style=solid];
m3_371 -> m3_372  [key=0, style=solid];
m3_371 -> m3_89  [key=2, style=dotted];
m3_372 -> m3_364  [key=0, style=bold, color=blue];
m3_725 -> m3_726  [key=0, style=solid];
m3_726 -> m3_727  [key=0, style=solid];
m3_726 -> m3_726  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_727 -> m3_728  [key=0, style=solid];
m3_727 -> m3_191  [key=2, style=dotted];
m3_727 -> m3_729  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_728 -> m3_729  [key=0, style=solid];
m3_728 -> m3_23  [key=2, style=dotted];
m3_729 -> m3_730  [key=0, style=solid];
m3_729 -> m3_174  [key=2, style=dotted];
m3_730 -> m3_731  [key=0, style=solid];
m3_730 -> m3_23  [key=2, style=dotted];
m3_731 -> m3_725  [key=0, style=bold, color=blue];
m3_282 -> m3_285  [key=0, style=solid];
m3_282 -> m3_286  [key=1, style=dashed, color=darkseagreen4, label=bool];
m3_282 -> m3_287  [key=1, style=dashed, color=darkseagreen4, label=XDocument];
m3_282 -> m3_278  [key=3, color=darkorchid, style=bold, label="Parameter variable XDocument doc"];
m3_285 -> m3_286  [key=0, style=solid];
m3_285 -> m3_290  [key=2, style=dotted];
m3_285 -> m3_288  [key=1, style=dashed, color=darkseagreen4, label=builder];
m3_286 -> m3_287  [key=0, style=solid];
m3_286 -> m3_283  [key=2, style=dotted];
m3_286 -> m3_291  [key=2, style=dotted];
m3_286 -> m3_292  [key=2, style=dotted];
m3_287 -> m3_288  [key=0, style=solid];
m3_287 -> m3_293  [key=2, style=dotted];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_294  [key=2, style=dotted];
m3_288 -> m3_279  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onSerializing"];
m3_289 -> m3_282  [key=0, style=bold, color=blue];
m3_717 -> m3_718  [key=0, style=solid];
m3_718 -> m3_719  [key=0, style=solid];
m3_718 -> m3_720  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m3_718 -> m3_710  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m3_719 -> m3_720  [key=0, style=solid];
m3_719 -> m3_99  [key=2, style=dotted];
m3_719 -> m3_721  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_720 -> m3_721  [key=0, style=solid];
m3_720 -> m3_100  [key=2, style=dotted];
m3_721 -> m3_722  [key=0, style=solid];
m3_721 -> m3_174  [key=2, style=dotted];
m3_722 -> m3_723  [key=0, style=solid];
m3_722 -> m3_77  [key=2, style=dotted];
m3_723 -> m3_724  [key=0, style=solid];
m3_723 -> m3_23  [key=2, style=dotted];
m3_724 -> m3_717  [key=0, style=bold, color=blue];
m3_479 -> m3_480  [key=0, style=solid];
m3_480 -> m3_481  [key=0, style=solid];
m3_480 -> m3_480  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_481 -> m3_482  [key=0, style=solid];
m3_481 -> m3_24  [key=2, style=dotted];
m3_481 -> m3_483  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_482 -> m3_483  [key=0, style=solid];
m3_482 -> m3_23  [key=2, style=dotted];
m3_483 -> m3_484  [key=0, style=solid];
m3_483 -> m3_174  [key=2, style=dotted];
m3_484 -> m3_485  [key=0, style=solid];
m3_484 -> m3_89  [key=2, style=dotted];
m3_484 -> m3_484  [key=3, color=green, style=bold, label="Local variable string json"];
m3_485 -> m3_479  [key=0, style=bold, color=blue];
m3_769 -> m3_770  [key=0, style=solid];
m3_770 -> m3_771  [key=0, style=solid];
m3_770 -> m3_87  [key=2, style=dotted];
m3_770 -> m3_772  [key=1, style=dashed, color=darkseagreen4, label=original];
m3_771 -> m3_772  [key=0, style=solid];
m3_771 -> m3_51  [key=2, style=dotted];
m3_771 -> m3_23  [key=2, style=dotted];
m3_772 -> m3_773  [key=0, style=solid];
m3_772 -> m3_88  [key=2, style=dotted];
m3_772 -> m3_774  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_773 -> m3_774  [key=0, style=solid];
m3_773 -> m3_23  [key=2, style=dotted];
m3_774 -> m3_775  [key=0, style=solid];
m3_774 -> m3_77  [key=2, style=dotted];
m3_775 -> m3_776  [key=0, style=solid];
m3_775 -> m3_51  [key=2, style=dotted];
m3_775 -> m3_23  [key=2, style=dotted];
m3_776 -> m3_769  [key=0, style=bold, color=blue];
m3_256 -> m3_257  [key=0, style=solid];
m3_257 -> m3_258  [key=0, style=solid];
m3_257 -> m3_99  [key=2, style=dotted];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_264  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label=fragement];
m3_259 -> m3_267  [key=3, color=green, style=bold, label="Local variable Newtonsoft.Json.Serialization.JsonProperty property"];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_174  [key=2, style=dotted];
m3_260 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_261  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_23  [key=2, style=dotted];
m3_263 -> m3_256  [key=0, style=bold, color=blue];
m3_529 -> m3_530  [key=0, style=solid];
m3_530 -> m3_531  [key=0, style=solid];
m3_530 -> m3_534  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_530 -> m3_530  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_531 -> m3_532  [key=0, style=solid];
m3_531 -> m3_196  [key=2, style=dotted];
m3_531 -> m3_533  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_532 -> m3_529  [key=0, style=bold, color=blue];
m3_585 -> m3_586  [key=0, style=solid];
m3_586 -> m3_587  [key=0, style=solid];
m3_586 -> m3_46  [key=2, style=dotted];
m3_586 -> m3_292  [key=2, style=dotted];
m3_586 -> m3_589  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_586 -> m3_590  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_587 -> m3_588  [key=0, style=solid];
m3_587 -> m3_326  [key=2, style=dotted];
m3_587 -> m3_592  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_589 -> m3_590  [key=0, style=solid];
m3_589 -> m3_591  [key=0, style=solid];
m3_589 -> m3_594  [key=2, style=dotted];
m3_590 -> m3_589  [key=0, style=solid];
m3_590 -> m3_595  [key=2, style=dotted];
m3_588 -> m3_589  [key=0, style=solid];
m3_588 -> m3_291  [key=2, style=dotted];
m3_588 -> m3_292  [key=2, style=dotted];
m3_588 -> m3_590  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_588 -> m3_591  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_592 -> m3_593  [key=0, style=solid];
m3_592 -> m3_328  [key=2, style=dotted];
m3_591 -> m3_592  [key=0, style=solid];
m3_591 -> m3_596  [key=2, style=dotted];
m3_593 -> m3_585  [key=0, style=bold, color=blue];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_120  [key=3, color=darkorchid, style=bold, label="Local variable decimal d"];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_130  [key=2, style=dotted];
m3_121 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label=x];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_131  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_23  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_64  [key=2, style=dotted];
m3_123 -> m3_48  [key=2, style=dotted];
m3_123 -> m3_132  [key=2, style=dotted];
m3_123 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_51  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_88  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_23  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_77  [key=2, style=dotted];
m3_129 -> m3_119  [key=0, style=bold, color=blue];
m3_149 -> m3_150  [key=0, style=solid];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_150  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_87  [key=2, style=dotted];
m3_151 -> m3_156  [key=2, style=dotted];
m3_151 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_23  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_157  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_51  [key=2, style=dotted];
m3_154 -> m3_23  [key=2, style=dotted];
m3_155 -> m3_149  [key=0, style=bold, color=blue];
m3_613 -> m3_614  [key=0, style=solid];
m3_614 -> m3_615  [key=0, style=solid];
m3_614 -> m3_616  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_614 -> m3_614  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_615 -> m3_616  [key=0, style=solid];
m3_615 -> m3_99  [key=2, style=dotted];
m3_615 -> m3_617  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_616 -> m3_617  [key=0, style=solid];
m3_616 -> m3_100  [key=2, style=dotted];
m3_617 -> m3_618  [key=0, style=solid];
m3_617 -> m3_174  [key=2, style=dotted];
m3_618 -> m3_619  [key=0, style=solid];
m3_618 -> m3_89  [key=2, style=dotted];
m3_619 -> m3_613  [key=0, style=bold, color=blue];
m3_739 -> m3_740  [key=0, style=solid];
m3_740 -> m3_741  [key=0, style=solid];
m3_740 -> m3_742  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m3_740 -> m3_740  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m3_741 -> m3_742  [key=0, style=solid];
m3_741 -> m3_99  [key=2, style=dotted];
m3_741 -> m3_743  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_741 -> m3_741  [key=3, color=green, style=bold, label="Local variable string json"];
m3_742 -> m3_743  [key=0, style=solid];
m3_742 -> m3_100  [key=2, style=dotted];
m3_743 -> m3_744  [key=0, style=solid];
m3_743 -> m3_174  [key=2, style=dotted];
m3_744 -> m3_745  [key=0, style=solid];
m3_744 -> m3_23  [key=2, style=dotted];
m3_745 -> m3_739  [key=0, style=bold, color=blue];
m3_185 -> m3_186  [key=0, style=solid];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_191  [key=2, style=dotted];
m3_186 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_23  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_51  [key=2, style=dotted];
m3_189 -> m3_23  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_157  [key=2, style=dotted];
m3_190 -> m3_185  [key=0, style=bold, color=blue];
m3_597 -> m3_598  [key=0, style=solid];
m3_598 -> m3_599  [key=0, style=solid];
m3_598 -> m3_600  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_598 -> m3_598  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_599 -> m3_600  [key=0, style=solid];
m3_599 -> m3_99  [key=2, style=dotted];
m3_599 -> m3_601  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_600 -> m3_601  [key=0, style=solid];
m3_600 -> m3_100  [key=2, style=dotted];
m3_601 -> m3_602  [key=0, style=solid];
m3_601 -> m3_174  [key=2, style=dotted];
m3_602 -> m3_603  [key=0, style=solid];
m3_602 -> m3_89  [key=2, style=dotted];
m3_603 -> m3_597  [key=0, style=bold, color=blue];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_210  [key=3, color=green, style=bold, label="Local variable System.Reflection.MethodInfo currentOnError"];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label=xml];
m3_301 -> m3_301  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_99  [key=2, style=dotted];
m3_302 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_302 -> m3_308  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_100  [key=2, style=dotted];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_174  [key=2, style=dotted];
m3_304 -> m3_306  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_304 -> m3_307  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_308 -> m3_309  [key=0, style=solid];
m3_308 -> m3_23  [key=2, style=dotted];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_305  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_305 -> m3_137  [key=3, color=green, style=bold, label="method methodReturn bool ShouldSkipSerializing"];
m3_306 -> m3_307  [key=0, style=solid];
m3_306 -> m3_89  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_24  [key=2, style=dotted];
m3_307 -> m3_181  [key=3, color=green, style=bold, label="Parameter variable System.Type type"];
m3_307 -> m3_288  [key=3, color=green, style=bold, label="Parameter variable System.Type type"];
m3_309 -> m3_300  [key=0, style=bold, color=blue];
m3_503 -> m3_504  [key=0, style=solid];
m3_504 -> m3_505  [key=0, style=solid];
m3_504 -> m3_509  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_504 -> m3_527  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_505 -> m3_506  [key=0, style=solid];
m3_505 -> m3_414  [key=2, style=dotted];
m3_505 -> m3_508  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_509 -> m3_510  [key=0, style=solid];
m3_509 -> m3_89  [key=2, style=dotted];
m3_506 -> m3_507  [key=0, style=solid];
m3_506 -> m3_318  [key=2, style=dotted];
m3_508 -> m3_509  [key=0, style=solid];
m3_508 -> m3_511  [key=2, style=dotted];
m3_507 -> m3_508  [key=0, style=solid];
m3_507 -> m3_89  [key=2, style=dotted];
m3_510 -> m3_503  [key=0, style=bold, color=blue];
m3_393 -> m3_394  [key=0, style=solid];
m3_394 -> m3_395  [key=0, style=solid];
m3_394 -> m3_398  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_394 -> m3_394  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_395 -> m3_396  [key=0, style=solid];
m3_395 -> m3_196  [key=2, style=dotted];
m3_395 -> m3_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_395 -> m3_107  [key=3, color=green, style=bold, label="Local variable System.Collections.Generic.List<System.Reflection.MemberInfo> members"];
m3_395 -> m3_342  [key=3, color=green, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m3_396 -> m3_393  [key=0, style=bold, color=blue];
m3_192 -> m3_193  [key=0, style=solid];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_198  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_193 -> m3_193  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_196  [key=2, style=dotted];
m3_194 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_195 -> m3_192  [key=0, style=bold, color=blue];
m3_521 -> m3_522  [key=0, style=solid];
m3_521 -> m3_521  [key=3, color=green, style=bold, label="Local variable string json"];
m3_522 -> m3_523  [key=0, style=solid];
m3_522 -> m3_522  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_523 -> m3_524  [key=0, style=solid];
m3_523 -> m3_414  [key=2, style=dotted];
m3_523 -> m3_526  [key=1, style=dashed, color=darkseagreen4, label=node];
m3_524 -> m3_525  [key=0, style=solid];
m3_524 -> m3_318  [key=2, style=dotted];
m3_526 -> m3_527  [key=0, style=solid];
m3_526 -> m3_511  [key=2, style=dotted];
m3_525 -> m3_526  [key=0, style=solid];
m3_525 -> m3_89  [key=2, style=dotted];
m3_527 -> m3_528  [key=0, style=solid];
m3_527 -> m3_89  [key=2, style=dotted];
m3_528 -> m3_521  [key=0, style=bold, color=blue];
m3_310 -> m3_311  [key=0, style=solid];
m3_311 -> m3_312  [key=0, style=solid];
m3_311 -> m3_311  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m3_312 -> m3_313  [key=0, style=solid];
m3_312 -> m3_24  [key=2, style=dotted];
m3_312 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label=doc];
m3_313 -> m3_314  [key=0, style=solid];
m3_313 -> m3_315  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_313 -> m3_313  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_314 -> m3_315  [key=0, style=solid];
m3_314 -> m3_317  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_315 -> m3_89  [key=2, style=dotted];
m3_315 -> m3_315  [key=3, color=green, style=bold, label="Local variable string jsonText"];
m3_316 -> m3_310  [key=0, style=bold, color=blue];
m3_777 -> m3_778  [key=0, style=solid];
m3_778 -> m3_779  [key=0, style=solid];
m3_778 -> m3_785  [key=2, style=dotted];
m3_778 -> m3_768  [key=2, style=dotted];
m3_778 -> m3_780  [key=1, style=dashed, color=darkseagreen4, label=original];
m3_779 -> m3_780  [key=0, style=solid];
m3_779 -> m3_51  [key=2, style=dotted];
m3_779 -> m3_23  [key=2, style=dotted];
m3_780 -> m3_781  [key=0, style=solid];
m3_780 -> m3_88  [key=2, style=dotted];
m3_780 -> m3_782  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_781 -> m3_782  [key=0, style=solid];
m3_781 -> m3_23  [key=2, style=dotted];
m3_782 -> m3_783  [key=0, style=solid];
m3_782 -> m3_77  [key=2, style=dotted];
m3_783 -> m3_784  [key=0, style=solid];
m3_783 -> m3_51  [key=2, style=dotted];
m3_783 -> m3_23  [key=2, style=dotted];
m3_784 -> m3_777  [key=0, style=bold, color=blue];
m3_786 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_554  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_786 -> m3_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m3_787 -> m3_198  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_788 -> m3_398  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_789 -> m3_405  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_790 -> m3_534  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_791 -> m3_557  [key=1, style=dashed, color=darkseagreen4, label=json];
}
