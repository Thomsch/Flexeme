digraph  {
m0_94 [cluster="System.Reflection.Emit.TypeBuilder.SetParent(System.Type)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.SetParent(System.Type)", span="0-0"];
m0_120 [cluster="System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type)", span="0-0"];
m0_72 [cluster="System.Reflection.Emit.ConstructorBuilder.GetILGenerator()", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.ConstructorBuilder.GetILGenerator()", span="0-0"];
m0_42 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor(System.Type)", file="CollectionWrapper.cs", label=DynamicAssembly, span="147-147"];
m0_43 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor(System.Type)", file="CollectionWrapper.cs", label="var constructedType = DynamicAssembly.GetType(ProxyName(targetType)) ?? GetConstructedType(targetType)", span="149-149"];
m0_44 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor(System.Type)", file="CollectionWrapper.cs", label="var instance = Activator.CreateInstance(constructedType)", span="150-150"];
m0_16 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.PersonConverter.PersonConverter()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.PersonConverter.PersonConverter()", span="62-62"];
m0_45 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor(System.Type)", file="CollectionWrapper.cs", label="return instance;", span="151-151"];
m0_17 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver.DynamicConcreteContractResolver()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver.DynamicConcreteContractResolver()", span="53-53"];
m0_93 [cluster="System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)", span="0-0"];
m0_49 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", span="218-218"];
m0_65 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327"];
m0_67 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DecimalRangeConverter.DecimalRangeConverter()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DecimalRangeConverter.DecimalRangeConverter()", span="201-201"];
m0_61 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Assert.AreEqual(2010, deserialized.Year)", span="257-257"];
m0_64 [cluster="System.Guid.Guid(int, short, short, byte, byte, byte, byte, byte, byte, byte, byte)", file="CollectionWrapper.cs", label="Entry System.Guid.Guid(int, short, short, byte, byte, byte, byte, byte, byte, byte, byte)", span="0-0"];
m0_66 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.IntRangeConverter.IntRangeConverter()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.IntRangeConverter.IntRangeConverter()", span="209-209"];
m0_62 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", span="218-218"];
m0_68 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetConstructedType(System.Type)", file="CollectionWrapper.cs", label="return typeBuilder.CreateType();", span="183-183"];
m0_63 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.NullInterfaceTestClass.NullInterfaceTestClass()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.NullInterfaceTestClass.NullInterfaceTestClass()", span="191-191"];
m0_69 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetConstructedType(System.Type)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetConstructedType(System.Type)", span="167-167"];
m0_115 [cluster="Unk.Select", file="CollectionWrapper.cs", label="Entry Unk.Select", span=""];
m0_117 [cluster="Unk.DefineMethod", file="CollectionWrapper.cs", label="Entry Unk.DefineMethod", span=""];
m0_34 [cluster="Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_1()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_1()", span="120-120"];
m0_35 [cluster="Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_2()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_2()", span="121-121"];
m0_36 [cluster="Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithRefType(int, object)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithRefType(int, object)", span="119-119"];
m0_37 [cluster="Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_1()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_1()", span="120-120"];
m0_38 [cluster="Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_2()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithValType_2()", span="121-121"];
m0_39 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor<T>()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor<T>()", span="133-133"];
m0_118 [cluster="System.Reflection.Emit.MethodBuilder.GetILGenerator()", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.MethodBuilder.GetILGenerator()", span="0-0"];
m0_148 [cluster="System.Reflection.Emit.TypeBuilder.DefineMethod(string, System.Reflection.MethodAttributes, System.Type, System.Type[])", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.DefineMethod(string, System.Reflection.MethodAttributes, System.Type, System.Type[])", span="0-0"];
m0_6 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="List<IPerson> people = JsonConvert.DeserializeObject<List<IPerson>>(json, new PersonConverter())", span="109-109"];
m0_53 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="NullInterfaceTestClass deserialized = JsonConvert.DeserializeObject<NullInterfaceTestClass>(\r\n                json, new IntRangeConverter(), new DecimalRangeConverter())", span="247-248"];
m0_55 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Assert.AreEqual(new Guid(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), deserialized.Id)", span="251-251"];
m0_54 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Assert.AreEqual(''Company!'', deserialized.Company)", span="250-250"];
m0_56 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Assert.AreEqual(0, deserialized.DecimalRange.First)", span="252-252"];
m0_57 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Assert.AreEqual(1, deserialized.DecimalRange.Last)", span="253-253"];
m0_13 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnInterfaceWithNoBackingClass()", file="CollectionWrapper.cs", label="var c = JsonConvert.DeserializeObject<IInterfaceWithNoConcrete>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DynamicConcreteContractResolver()\r\n            })", span="72-75"];
m0_121 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Type)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Type)", span="0-0"];
m0_73 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)", span="0-0"];
m0_71 [cluster="System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[])", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type[])", span="0-0"];
m0_40 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor<T>()", file="CollectionWrapper.cs", label="return (T)GetInstanceFor(typeof(T));", span="135-135"];
m0_20 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnAbstractClassWithNoConcrete()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnAbstractClassWithNoConcrete()", span="81-81"];
m0_21 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnAbstractClassWithNoConcrete()", file="CollectionWrapper.cs", label="string json = @''{Name:''''Name!'''', Game:''''Same''''}''", span="83-83"];
m0_22 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnAbstractClassWithNoConcrete()", file="CollectionWrapper.cs", label="var c = JsonConvert.DeserializeObject<AbstractWithNoConcrete>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DynamicConcreteContractResolver()\r\n            })", span="85-88"];
m0_119 [cluster="System.Type.GetMethod(string, System.Type[])", file="CollectionWrapper.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m0_41 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m0_74 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", span="186-186"];
m0_83 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", color=green, community=0, file="CollectionWrapper.cs", label="0: BindMethod(typeBuilder, methodInfo)", span="199-199"];
m0_78 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label=methodInfos, span="189-189"];
m0_82 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", color=green, community=0, file="CollectionWrapper.cs", label="0: methodInfo.IsAbstract", span="199-199"];
m0_84 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", color=green, community=0, file="CollectionWrapper.cs", label="0: typeOfT.IsInterface", span="203-203"];
m0_85 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", color=green, community=0, file="CollectionWrapper.cs", label="0: typeBuilder.AddInterfaceImplementation(typeOfT)", span="203-203"];
m0_86 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="typeOfT.IsAbstract", span="204-204"];
m0_80 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="methodInfo.Name.StartsWith(''get_'')", span="193-193"];
m0_77 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="var methodInfos = typeOfT.GetMethods()", span="188-188"];
m0_81 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="BindProperty(typeBuilder, methodInfo)", span="195-195"];
m0_87 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="typeBuilder.SetParent(typeOfT)", span="204-204"];
m0_79 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="methodInfo.Name.StartsWith(''set_'')", span="191-191"];
m0_88 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicConcrete.IncludeType(System.Type, System.Reflection.Emit.TypeBuilder)", span="186-186"];
m0_89 [cluster="System.Type.GetMethods()", file="CollectionWrapper.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m0_152 [cluster="System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)", span="0-0"];
m0_116 [cluster="Unk.ToArray", file="CollectionWrapper.cs", label="Entry Unk.ToArray", span=""];
m0_91 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", span="254-254"];
m0_128 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var propertyName = methodInfo.Name.Replace(''get_'', '''')", span="257-257"];
m0_129 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var propertyType = methodInfo.ReturnType", span="258-258"];
m0_130 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var backingField = typeBuilder.DefineField(''_'' + propertyName, propertyType, FieldAttributes.Private)", span="259-259"];
m0_131 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var backingGet = typeBuilder.DefineMethod(''get_'' + propertyName, MethodAttributes.Public |\r\n                MethodAttributes.SpecialName | MethodAttributes.Virtual |\r\n                MethodAttributes.HideBySig, propertyType, Type.EmptyTypes)", span="262-264"];
m0_136 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var backingSet = typeBuilder.DefineMethod(''set_'' + propertyName, MethodAttributes.Public |\r\n                MethodAttributes.SpecialName | MethodAttributes.Virtual |\r\n                MethodAttributes.HideBySig, null, new[] { propertyType })", span="273-275"];
m0_142 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var propertyBuilder = typeBuilder.DefineProperty(propertyName, PropertyAttributes.None, propertyType, null)", span="285-285"];
m0_133 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="getIl.Emit(OpCodes.Ldarg_0)", span="267-267"];
m0_135 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="getIl.Emit(OpCodes.Ret)", span="269-269"];
m0_138 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="setIl.Emit(OpCodes.Ldarg_0)", span="279-279"];
m0_139 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="setIl.Emit(OpCodes.Ldarg_1)", span="280-280"];
m0_141 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="setIl.Emit(OpCodes.Ret)", span="282-282"];
m0_144 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="propertyBuilder.SetSetMethod(backingSet)", span="287-287"];
m0_134 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="getIl.Emit(OpCodes.Ldfld, backingField)", span="268-268"];
m0_140 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="setIl.Emit(OpCodes.Stfld, backingField)", span="281-281"];
m0_132 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var getIl = backingGet.GetILGenerator()", span="265-265"];
m0_143 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="propertyBuilder.SetGetMethod(backingGet)", span="286-286"];
m0_137 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var setIl = backingSet.GetILGenerator()", span="277-277"];
m0_145 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindProperty(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", span="254-254"];
m0_23 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.MyThing.MyThing()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.MyThing.MyThing()", span="135-135"];
m0_24 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", span="149-149"];
m0_25 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="string json = @''{\r\n''''Value'''': ''''A value'''',\r\n''''Thing'''': {\r\n''''Number'''': 123\r\n}\r\n}\r\n''", span="151-157"];
m0_122 [cluster="System.Type.GetMethod(string)", file="CollectionWrapper.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m0_114 [cluster="System.Reflection.MethodBase.GetParameters()", file="CollectionWrapper.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m0_3 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver.CreateContract(System.Type)", file="CollectionWrapper.cs", label="contract.DefaultCreator = () => DynamicConcrete.GetInstanceFor(contract.CreatedType)", span="61-61"];
m0_76 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m0_48 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.IntRangeConverter.Create(System.Type)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.IntRangeConverter.Create(System.Type)", span="211-211"];
m0_151 [cluster="System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)", span="0-0"];
m0_59 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Assert.AreEqual(int.MaxValue, deserialized.IntRange.Last)", span="255-255"];
m0_149 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.FieldInfo)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.FieldInfo)", span="0-0"];
m0_47 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.IntRangeConverter.Create(System.Type)", file="CollectionWrapper.cs", label="return new Range<int>();", span="213-213"];
m0_51 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="string json = JsonConvert.SerializeObject(initial, Formatting.Indented)", span="230-230"];
m0_52 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''00000001-0002-0003-0405-060708090a0b'''',\r\n  ''''Year'''': 2010,\r\n  ''''Company'''': ''''Company!'''',\r\n  ''''DecimalRange'''': {\r\n    ''''First'''': 0.0,\r\n    ''''Last'''': 1.0\r\n  },\r\n  ''''IntRange'''': {\r\n    ''''First'''': -2147483648,\r\n    ''''Last'''': 2147483647\r\n  },\r\n  ''''NullDecimalRange'''': null\r\n}'', json)", span="232-245"];
m0_60 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeAndConvertNullValue()", file="CollectionWrapper.cs", label="Assert.AreEqual(null, deserialized.NullDecimalRange)", span="256-256"];
m0_0 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver.CreateContract(System.Type)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver.CreateContract(System.Type)", span="55-55"];
m0_1 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver.CreateContract(System.Type)", file="CollectionWrapper.cs", label="JsonContract contract = base.CreateContract(objectType)", span="57-57"];
m0_2 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver.CreateContract(System.Type)", file="CollectionWrapper.cs", label="contract.CreatedType.IsInterface || contract.CreatedType.IsAbstract", span="60-60"];
m0_19 [cluster="Unk.AreEqual", file="CollectionWrapper.cs", label="Entry Unk.AreEqual", span=""];
m0_50 [cluster="System.Activator.CreateInstance(System.Type)", file="CollectionWrapper.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m0_58 [cluster="System.Reflection.AssemblyName.AssemblyName(string)", file="CollectionWrapper.cs", label="Entry System.Reflection.AssemblyName.AssemblyName(string)", span="0-0"];
m0_75 [cluster="System.Type.GetInterfaces()", file="CollectionWrapper.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m0_124 [cluster="System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo, System.Reflection.MethodInfo)", span="0-0"];
m0_123 [cluster="System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode, System.Reflection.MethodInfo)", span="0-0"];
m0_15 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnInterfaceWithNoBackingClass()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnInterfaceWithNoBackingClass()", span="68-68"];
m0_32 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.AnyMethodsExposedByDynamicConcreteAreHarmless()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.AnyMethodsExposedByDynamicConcreteAreHarmless()", span="95-95"];
m0_33 [cluster="Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithRefType(int, object)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.IInterfaceWithNoConcrete.FuncWithRefType(int, object)", span="119-119"];
m0_4 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", span="70-70"];
m0_5 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="string json = JsonConvert.SerializeObject(new List<Employee>\r\n            {\r\n                new Employee\r\n                {\r\n                    BirthDate = new DateTime(1977, 12, 30, 1, 1, 1, DateTimeKind.Utc),\r\n                    FirstName = ''Maurice'',\r\n                    LastName = ''Moss'',\r\n                    Department = ''IT'',\r\n                    JobTitle = ''Support''\r\n                },\r\n                new Employee\r\n                {\r\n                    BirthDate = new DateTime(1978, 3, 15, 1, 1, 1, DateTimeKind.Utc),\r\n                    FirstName = ''Jen'',\r\n                    LastName = ''Barber'',\r\n                    Department = ''IT'',\r\n                    JobTitle = ''Manager''\r\n                }\r\n            }, Formatting.Indented)", span="72-90"];
m0_92 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", span="207-207"];
m0_95 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var args = methodInfo.GetParameters().Select(p => p.ParameterType).ToArray()", span="209-209"];
m0_96 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var methodBuilder = typeBuilder.DefineMethod(\r\n                methodInfo.Name,\r\n                MethodAttributes.Public | MethodAttributes.Virtual,\r\n                CallingConventions.HasThis,\r\n                methodInfo.ReturnType,\r\n                args\r\n                )", span="210-216"];
m0_98 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodInfo.ReturnType == typeof(void)", span="219-219"];
m0_100 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodInfo.ReturnType.IsPrimitive", span="225-225"];
m0_102 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodInfo.ReturnType.IsValueType || methodInfo.ReturnType.IsEnum", span="229-229"];
m0_104 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var lb = methodILGen.DeclareLocal(methodInfo.ReturnType)", span="233-233"];
m0_112 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="typeBuilder.DefineMethodOverride(methodBuilder, methodInfo)", span="248-248"];
m0_97 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var methodILGen = methodBuilder.GetILGenerator()", span="218-218"];
m0_99 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Ret)", span="221-221"];
m0_101 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Ldc_I4_0)", span="227-227"];
m0_103 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="var getMethod = typeof(Activator).GetMethod(''CreateInstance'',\r\n                                                                       new[] { typeof(Type) })", span="231-232"];
m0_110 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Ldnull)", span="244-244"];
m0_105 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="lb.LocalType != null", span="234-234"];
m0_106 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Ldtoken, lb.LocalType)", span="236-236"];
m0_109 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Unbox_Any, lb.LocalType)", span="239-239"];
m0_111 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Ret)", span="246-246"];
m0_107 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Call, typeof(Type).GetMethod(''GetTypeFromHandle''))", span="237-237"];
m0_108 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="methodILGen.Emit(OpCodes.Callvirt, getMethod)", span="238-238"];
m0_113 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicConcrete.BindMethod(System.Reflection.Emit.TypeBuilder, System.Reflection.MethodInfo)", span="207-207"];
m0_26 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="MyClass myClass = JsonConvert.DeserializeObject<MyClass>(json)", span="158-158"];
m0_28 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="Assert.AreEqual(''A value'', myClass.Value)", span="160-160"];
m0_27 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="Assert.IsNotNull(myClass)", span="159-159"];
m0_29 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="Assert.IsNotNull(myClass.Thing)", span="161-161"];
m0_30 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="Assert.AreEqual(123, myClass.Thing.Number)", span="162-162"];
m0_31 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.AssertDoesDeserialize()", span="149-149"];
m0_146 [cluster="string.Replace(string, string)", file="CollectionWrapper.cs", label="Entry string.Replace(string, string)", span="0-0"];
m0_14 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.UseDynamicConcreteIfTargetObjectTypeIsAnInterfaceWithNoBackingClass()", file="CollectionWrapper.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="77-77"];
m0_70 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes)", span="0-0"];
m0_147 [cluster="System.Reflection.Emit.TypeBuilder.DefineField(string, System.Type, System.Reflection.FieldAttributes)", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.DefineField(string, System.Type, System.Reflection.FieldAttributes)", span="0-0"];
m0_90 [cluster="string.StartsWith(string)", file="CollectionWrapper.cs", label="Entry string.StartsWith(string)", span="0-0"];
m0_7 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="IPerson person = people[0]", span="111-111"];
m0_125 [cluster="lambda expression", file="CollectionWrapper.cs", label="Entry lambda expression", span="209-209"];
m0_127 [cluster="lambda expression", file="CollectionWrapper.cs", label="Exit lambda expression", span="209-209"];
m0_126 [cluster="lambda expression", file="CollectionWrapper.cs", label="p.ParameterType", span="209-209"];
m0_8 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="Assert.AreEqual(''Newtonsoft.Json.Tests.Employee'', person.GetType().Name)", span="113-113"];
m0_9 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="Assert.AreEqual(''Maurice'', person.FirstName)", span="115-115"];
m0_18 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="CollectionWrapper.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m0_150 [cluster="System.Reflection.Emit.TypeBuilder.DefineProperty(string, System.Reflection.PropertyAttributes, System.Type, System.Type[])", file="CollectionWrapper.cs", label="Entry System.Reflection.Emit.TypeBuilder.DefineProperty(string, System.Reflection.PropertyAttributes, System.Type, System.Type[])", span="0-0"];
m0_11 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="Assert.AreEqual(''Support'', employee.JobTitle)", span="119-119"];
m0_12 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", span="70-70"];
m0_46 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor(System.Type)", file="CollectionWrapper.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicConcrete.GetInstanceFor(System.Type)", span="145-145"];
m0_10 [cluster="Newtonsoft.Json.Tests.Converters.CustomCreationConverterTests.DeserializeObject()", file="CollectionWrapper.cs", label="Employee employee = (Employee)person", span="117-117"];
m0_154 [file="CollectionWrapper.cs", label=contract, span=""];
m0_153 [file="CollectionWrapper.cs", label="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver", span=""];
m1_43 [cluster="Unk.Contains", file="DataTableConverter.cs", label="Entry Unk.Contains", span=""];
m1_44 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="116-116"];
m1_48 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label=tokenType, span="118-118"];
m1_49 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Integer", span="120-120"];
m1_51 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Float", span="122-122"];
m1_53 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.String", span="124-124"];
m1_57 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Boolean", span="128-128"];
m1_59 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Date", span="130-130"];
m1_61 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="throw new ArgumentOutOfRangeException();", span="133-133"];
m1_50 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (long);", span="121-121"];
m1_52 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (double);", span="123-123"];
m1_54 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Null", span="125-125"];
m1_55 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Undefined", span="126-126"];
m1_56 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (string);", span="127-127"];
m1_58 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (bool);", span="129-129"];
m1_60 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (DateTime);", span="131-131"];
m1_62 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="116-116"];
m1_15 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m1_42 [cluster="Unk.NewRow", file="DataTableConverter.cs", label="Entry Unk.NewRow", span=""];
m1_45 [cluster="DataColumn.cstr", file="DataTableConverter.cs", label="Entry DataColumn.cstr", span=""];
m1_47 [cluster="Unk.EndEdit", file="DataTableConverter.cs", label="Entry Unk.EndEdit", span=""];
m1_17 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70"];
m1_18 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="DataTable dt", span="72-72"];
m1_19 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="74-74"];
m1_20 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt = new DataTable((string)reader.Value)", span="76-76"];
m1_21 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="77-77"];
m1_23 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="84-84"];
m1_24 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.TokenType == JsonToken.StartObject", span="86-86"];
m1_26 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="89-89"];
m1_27 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="91-91"];
m1_28 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="string columnName = (string) reader.Value", span="93-93"];
m1_29 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="95-95"];
m1_31 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Type columnType = GetColumnDataType(reader.TokenType)", span="99-99"];
m1_33 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DataTableConverter.cs", label="0: dr[columnName] = reader.Value ?? DBNull.Value", span="103-103"];
m1_34 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="104-104"];
m1_37 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="110-110"];
m1_22 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt = new DataTable()", span="81-81"];
m1_25 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="DataRow dr = dt.NewRow()", span="88-88"];
m1_30 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="!dt.Columns.Contains(columnName)", span="97-97"];
m1_32 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt.Columns.Add(new DataColumn(columnName, columnType))", span="100-100"];
m1_36 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt.Rows.Add(dr)", span="108-108"];
m1_38 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="return dt;", span="113-113"];
m1_35 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dr.EndEdit()", span="107-107"];
m1_39 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70"];
m1_64 [cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", span="144-144"];
m1_65 [cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs", label="return (valueType == typeof(DataTable));", span="146-146"];
m1_66 [cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", span="144-144"];
m1_0 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="42-42"];
m1_1 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="DataTable table = (DataTable)value", span="44-44"];
m1_2 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteStartArray()", span="46-46"];
m1_4 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteStartObject()", span="50-50"];
m1_6 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WritePropertyName(column.ColumnName)", span="53-53"];
m1_7 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="serializer.Serialize(writer, row[column])", span="54-54"];
m1_8 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteEndObject()", span="56-56"];
m1_9 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteEndArray()", span="59-59"];
m1_3 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="table.Rows", span="48-48"];
m1_5 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="row.Table.Columns", span="51-51"];
m1_10 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="42-42"];
m1_13 [cluster="Unk.WritePropertyName", file="DataTableConverter.cs", label="Entry Unk.WritePropertyName", span=""];
m1_14 [cluster="Unk.Serialize", file="DataTableConverter.cs", label="Entry Unk.Serialize", span=""];
m1_16 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m1_46 [cluster="Unk.Add", file="DataTableConverter.cs", label="Entry Unk.Add", span=""];
m1_63 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="DataTableConverter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m1_41 [cluster="Newtonsoft.Json.JsonReader.Read()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="217-217"];
m1_40 [cluster="DataTable.cstr", file="DataTableConverter.cs", label="Entry DataTable.cstr", span=""];
m1_12 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m1_11 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m2_385 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="DataTableConverterTests.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m2_204 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="418-418"];
m2_205 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(dictionaryType, nameof(dictionaryType))", span="420-420"];
m2_207 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="ImplementsGenericDefinition(dictionaryType, typeof(IDictionary<,>), out genericDictionaryType)", span="423-423"];
m2_209 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="427-427"];
m2_214 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="typeof(IDictionary).IsAssignableFrom(dictionaryType)", span="436-436"];
m2_218 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="443-443"];
m2_206 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Type genericDictionaryType", span="422-422"];
m2_208 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="genericDictionaryType.IsGenericTypeDefinition()", span="425-425"];
m2_210 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Type[] dictionaryGenericArguments = genericDictionaryType.GetGenericArguments()", span="430-430"];
m2_211 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="keyType = dictionaryGenericArguments[0]", span="432-432"];
m2_212 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="valueType = dictionaryGenericArguments[1]", span="433-433"];
m2_213 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return;", span="434-434"];
m2_215 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="keyType = null", span="438-438"];
m2_216 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="valueType = null", span="439-439"];
m2_217 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return;", span="440-440"];
m2_219 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="418-418"];
m2_86 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", color=green, community=0, file="DataTableConverterTests.cs", label="0: table.Rows.Add(''pants'', 54.99)", span="146-146"];
m2_342 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m2_202 [cluster="System.Type.GetGenericArguments()", file="DataTableConverterTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_476 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m2_551 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1085-1085"];
m2_552 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="!type.IsValueType()", span="1087-1087"];
m2_554 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="ConvertUtils.GetTypeCode(type)", span="1092-1092"];
m2_582 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="IsNullable(type)", span="1127-1127"];
m2_584 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return Activator.CreateInstance(type);", span="1133-1133"];
m2_553 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return null;", span="1089-1089"];
m2_555 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Boolean", span="1094-1094"];
m2_557 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Char", span="1096-1096"];
m2_565 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Int64", span="1104-1104"];
m2_568 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Single", span="1107-1107"];
m2_570 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Double", span="1109-1109"];
m2_572 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Decimal", span="1111-1111"];
m2_574 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.DateTime", span="1113-1113"];
m2_576 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.BigInteger", span="1116-1116"];
m2_578 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Guid", span="1119-1119"];
m2_580 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1122-1122"];
m2_556 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return false;", span="1095-1095"];
m2_558 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.SByte", span="1097-1097"];
m2_559 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Byte", span="1098-1098"];
m2_560 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Int16", span="1099-1099"];
m2_561 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.UInt16", span="1100-1100"];
m2_562 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.Int32", span="1101-1101"];
m2_563 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.UInt32", span="1102-1102"];
m2_564 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return 0;", span="1103-1103"];
m2_566 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="PrimitiveTypeCode.UInt64", span="1105-1105"];
m2_567 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return 0L;", span="1106-1106"];
m2_569 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return 0f;", span="1108-1108"];
m2_571 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return 0.0;", span="1110-1110"];
m2_573 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return 0m;", span="1112-1112"];
m2_575 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return new DateTime();", span="1114-1114"];
m2_577 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return new BigInteger();", span="1117-1117"];
m2_579 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return new Guid();", span="1120-1120"];
m2_581 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return new DateTimeOffset();", span="1123-1123"];
m2_583 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="return null;", span="1129-1129"];
m2_585 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1085-1085"];
m2_418 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool)", span="0-0"];
m2_275 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="568-568"];
m2_276 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="member.MemberType()", span="570-570"];
m2_278 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="573-573"];
m2_279 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label=nonPublic, span="575-575"];
m2_285 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="PropertyInfo propertyInfo = (PropertyInfo)member", span="585-585"];
m2_288 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label=nonPublic, span="591-591"];
m2_290 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="return (propertyInfo.GetGetMethod(nonPublic) != null);", span="595-595"];
m2_277 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="MemberTypes.Field", span="572-572"];
m2_284 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="MemberTypes.Property", span="584-584"];
m2_291 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="return false;", span="597-597"];
m2_281 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="fieldInfo.IsPublic", span="579-579"];
m2_280 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="return true;", span="577-577"];
m2_282 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="return true;", span="581-581"];
m2_283 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="return false;", span="583-583"];
m2_286 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="!propertyInfo.CanRead", span="587-587"];
m2_287 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="return false;", span="589-589"];
m2_289 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="return true;", span="593-593"];
m2_292 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="568-568"];
m2_56 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName(System.Type, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="binder.BindToName(t, out assemblyName, out typeName)", span="174-174"];
m2_59 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName(System.Type, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName(System.Type, Newtonsoft.Json.Serialization.ISerializationBinder)", span="168-168"];
m2_69 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="writingAssemblyName = false", span="201-201"];
m2_70 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", color=green, community=0, file="DataTableConverterTests.cs", label="0: skippingAssemblyDetails = false", span="202-202"];
m2_71 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="builder.Append(current)", span="203-203"];
m2_21 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return m.GetBaseDefinition();", span="122-122"];
m2_22 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="m = propertyInfo.GetSetMethod(true)", span="125-125"];
m2_25 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return null;", span="131-131"];
m2_28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134"];
m2_31 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="property.GetSetMethod() != null && property.GetSetMethod().IsPublic", span="140-140"];
m2_34 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", span="134-134"];
m2_38 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="DataTableConverterTests.cs", label="return (v != null) ? v.GetType() : null;", span="150-150"];
m2_41 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="153-153"];
m2_49 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="153-153"];
m2_50 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName(System.Type, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName(System.Type, Newtonsoft.Json.Serialization.ISerializationBinder)", span="168-168"];
m2_51 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="188-188"];
m2_23 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="m != null", span="126-126"];
m2_42 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="string fullyQualifiedTypeName = GetFullyQualifiedTypeName(t, binder)", span="155-155"];
m2_24 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return m.GetBaseDefinition();", span="128-128"];
m2_26 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", span="115-115"];
m2_27 [cluster="System.Reflection.MethodInfo.GetBaseDefinition()", file="DataTableConverterTests.cs", label="Entry System.Reflection.MethodInfo.GetBaseDefinition()", span="0-0"];
m2_29 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="property.GetGetMethod() != null && property.GetGetMethod().IsPublic", span="136-136"];
m2_30 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return true;", span="138-138"];
m2_32 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return true;", span="142-142"];
m2_33 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPublic(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return false;", span="145-145"];
m2_35 [cluster="System.Reflection.PropertyInfo.GetGetMethod()", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod()", span="0-0"];
m2_37 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148"];
m2_39 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148"];
m2_40 [cluster="object.GetType()", file="DataTableConverterTests.cs", label="Entry object.GetType()", span="0-0"];
m2_48 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="throw new ArgumentOutOfRangeException();", span="164-164"];
m2_43 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label=assemblyFormat, span="157-157"];
m2_44 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="TypeNameAssemblyFormatHandling.Simple", span="159-159"];
m2_45 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="return RemoveAssemblyDetails(fullyQualifiedTypeName);", span="160-160"];
m2_46 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="TypeNameAssemblyFormatHandling.Full", span="161-161"];
m2_47 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="return fullyQualifiedTypeName;", span="162-162"];
m2_36 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m2_52 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="DataTableConverterTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m2_487 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64"];
m2_105 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithExplicitNull()", color=green, community=0, file="DataTableConverterTests.cs", label="2: Assert.AreEqual(''shirt'', table.Rows[0][''item''])", span="180-180"];
m2_95 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", color=green, community=0, file="DataTableConverterTests.cs", label="2: Assert.AreEqual(''pants'', table.Rows[1][''item''])", span="165-165"];
m2_339 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m2_134 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="298-298"];
m2_135 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Type implementingType", span="300-300"];
m2_136 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="return ImplementsGenericDefinition(type, genericInterfaceDefinition, out implementingType);", span="301-301"];
m2_137 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="298-298"];
m2_410 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="DataTableConverterTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m2_384 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="761-761"];
m2_387 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(attributeProvider, nameof(attributeProvider))", span="763-763"];
m2_388 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="object provider = attributeProvider", span="765-765"];
m2_391 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="object[] a = (attributeType != null) ? t.GetCustomAttributes(attributeType, inherit) : t.GetCustomAttributes(inherit)", span="773-773"];
m2_396 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(a, attributeType) : Attribute.GetCustomAttributes(a);", span="790-790"];
m2_399 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="796-796"];
m2_402 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(m, attributeType, inherit) : Attribute.GetCustomAttributes(m, inherit);", span="803-803"];
m2_405 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="return (attributeType != null) ? Attribute.GetCustomAttributes(p, attributeType, inherit) : Attribute.GetCustomAttributes(p, inherit);", span="810-810"];
m2_406 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="ICustomAttributeProvider customAttributeProvider = (ICustomAttributeProvider)attributeProvider", span="814-814"];
m2_407 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="object[] result = (attributeType != null) ? customAttributeProvider.GetCustomAttributes(attributeType, inherit) : customAttributeProvider.GetCustomAttributes(inherit)", span="815-815"];
m2_389 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="provider is Type", span="770-770"];
m2_390 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="Type t = (Type)provider", span="772-772"];
m2_394 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="provider is Assembly", span="787-787"];
m2_395 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="Assembly a = (Assembly)provider", span="789-789"];
m2_397 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="provider is MemberInfo", span="793-793"];
m2_398 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="MemberInfo m = (MemberInfo)provider", span="795-795"];
m2_400 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="provider is Module", span="800-800"];
m2_401 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="Module m = (Module)provider", span="802-802"];
m2_403 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="provider is ParameterInfo", span="807-807"];
m2_404 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="ParameterInfo p = (ParameterInfo)provider", span="809-809"];
m2_392 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="Attribute[] attributes = a.Cast<Attribute>().ToArray()", span="774-774"];
m2_393 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="return attributes;", span="784-784"];
m2_408 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="return (Attribute[])result;", span="817-817"];
m2_409 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="761-761"];
m2_586 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m2_475 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_57 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName(System.Type, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="return typeName + (assemblyName == null ? '''' : '', '' + assemblyName);", span="182-182"];
m2_14 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="DataTableConverterTests.cs", label="DataRow dr2 = deserializedDataTable.Rows[1]", span="44-44"];
m2_604 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", span="1163-1163"];
m2_605 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", file="DataTableConverterTests.cs", label="return (AssemblyName == other.AssemblyName && TypeName == other.TypeName);", span="1165-1165"];
m2_606 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.Equals(Newtonsoft.Json.Utilities.TypeNameKey)", span="1163-1163"];
m2_485 [cluster="Unk.Where", file="DataTableConverterTests.cs", label="Entry Unk.Where", span=""];
m2_598 [cluster="string.GetHashCode()", file="DataTableConverterTests.cs", label="Entry string.GetHashCode()", span="0-0"];
m2_55 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFullyQualifiedTypeName(System.Type, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DataTableConverterTests.cs", label="string typeName", span="173-173"];
m2_507 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="1006-1006"];
m2_511 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="(targetType = targetType.BaseType()) != null", span="1013-1013"];
m2_512 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="targetType.GetProperties(bindingAttr)", span="1015-1015"];
m2_516 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name)", span="1025-1025"];
m2_518 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="initialProperties.Add(subTypeProperty)", span="1028-1028"];
m2_519 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="PropertyInfo childProperty = initialProperties[index]", span="1032-1032"];
m2_521 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="initialProperties[index] = subTypeProperty", span="1039-1039"];
m2_522 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType)", span="1045-1046"];
m2_524 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="initialProperties.Add(subTypeProperty)", span="1050-1050"];
m2_526 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="int index = initialProperties.IndexOf(p => p.Name == subTypeProperty.Name\r\n                                                                   && p.IsVirtual()\r\n                                                                   && (p.GetBaseDefinition()?.DeclaringType ?? p.DeclaringType).IsAssignableFrom(subTypePropertyDeclaringType))", span="1058-1060"];
m2_528 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="initialProperties.Add(subTypeProperty)", span="1065-1065"];
m2_513 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="PropertyInfo subTypeProperty = propertyInfo", span="1017-1017"];
m2_514 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="!subTypeProperty.IsVirtual()", span="1019-1019"];
m2_515 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="!IsPublic(subTypeProperty)", span="1021-1021"];
m2_525 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Type subTypePropertyDeclaringType = subTypeProperty.GetBaseDefinition()?.DeclaringType ?? subTypeProperty.DeclaringType", span="1056-1056"];
m2_517 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="index == -1", span="1026-1026"];
m2_520 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="!IsPublic(childProperty)", span="1034-1034"];
m2_523 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="index == -1", span="1048-1048"];
m2_527 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="index == -1", span="1063-1063"];
m2_529 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.PropertyInfo>, System.Type, System.Reflection.BindingFlags)", span="1006-1006"];
m2_262 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DataTableConverterTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m2_187 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="392-392"];
m2_188 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="394-394"];
m2_190 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="type.IsArray", span="397-397"];
m2_191 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="return type.GetElementType();", span="399-399"];
m2_192 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="ImplementsGenericDefinition(type, typeof(IEnumerable<>), out genericListType)", span="401-401"];
m2_194 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="405-405"];
m2_196 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="typeof(IEnumerable).IsAssignableFrom(type)", span="410-410"];
m2_198 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="415-415"];
m2_189 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="Type genericListType", span="395-395"];
m2_193 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="genericListType.IsGenericTypeDefinition()", span="403-403"];
m2_195 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="return genericListType.GetGenericArguments()[0];", span="408-408"];
m2_197 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="return null;", span="412-412"];
m2_199 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="392-392"];
m2_89 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", color=green, community=1, file="DataTableConverterTests.cs", label="2: Assert.AreEqual(@''[''\r\n      + @''{''''item'''':''''shirt'''',''''price'''':49.99},''\r\n      + @''{''''item'''':''''pants'''',''''price'''':54.99},''\r\n      + @''{''''item'''':''''shoes'''',''''price'''':null}]'', json)", span="150-153"];
m2_90 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.SerializeDataTableWithNull()", span="140-140"];
m2_91 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", span="157-157"];
m2_93 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", color=green, community=0, file="DataTableConverterTests.cs", label="2: var table = JsonConvert.DeserializeObject<DataTable>(json)", span="163-163"];
m2_92 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", color=green, community=1, file="DataTableConverterTests.cs", label="2: string json = @''[''\r\n      + @''{''''item'''':''''shirt'''',''''price'''':49.99},''\r\n      + @''{''''item'''':''''pants'''',''''price'''':54.99},''\r\n      + @''{''''item'''':''''shoes''''}]''", span="159-162"];
m2_94 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.DerializeDataTableWithImplicitNull()", color=green, community=0, file="DataTableConverterTests.cs", label="2: Assert.AreEqual(''shirt'', table.Rows[0][''item''])", span="164-164"];
m2_315 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="651-651"];
m2_316 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="List<MemberInfo> targetMembers = new List<MemberInfo>()", span="653-653"];
m2_317 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="targetMembers.AddRange(GetFields(type, bindingAttr))", span="655-655"];
m2_318 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="targetMembers.AddRange(GetProperties(type, bindingAttr))", span="656-656"];
m2_329 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="!IsOverridenGenericMember(memberInfo, bindingAttr) || memberInfo.Name == ''Item''", span="685-685"];
m2_319 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="List<MemberInfo> distinctMembers = new List<MemberInfo>(targetMembers.Count)", span="662-662"];
m2_320 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="targetMembers.GroupBy(m => m.Name)", span="664-664"];
m2_324 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="distinctMembers.Add(members.First())", span="671-671"];
m2_331 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="distinctMembers.AddRange(resolvedMembers)", span="691-691"];
m2_332 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return distinctMembers;", span="695-695"];
m2_321 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="int count = groupedMember.Count()", span="666-666"];
m2_322 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="IList<MemberInfo> members = groupedMember.ToList()", span="667-667"];
m2_323 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="count == 1", span="669-669"];
m2_326 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label=members, span="676-676"];
m2_325 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="IList<MemberInfo> resolvedMembers = new List<MemberInfo>()", span="675-675"];
m2_327 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="resolvedMembers.Count == 0", span="681-681"];
m2_328 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="resolvedMembers.Add(memberInfo)", span="683-683"];
m2_330 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="resolvedMembers.Add(memberInfo)", span="687-687"];
m2_333 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="651-651"];
m2_201 [cluster="System.Exception.Exception(string)", file="DataTableConverterTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_411 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="DataTableConverterTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m2_81 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="!skippingAssemblyDetails", span="222-222"];
m2_82 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", color=green, community=0, file="DataTableConverterTests.cs", label="0: builder.Append(current)", span="224-224"];
m2_83 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", color=green, community=0, file="DataTableConverterTests.cs", label="0: i++", span="195-195"];
m2_84 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", color=green, community=0, file="DataTableConverterTests.cs", label="0: return builder.ToString();", span="230-230"];
m2_85 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", color=green, community=0, file="DataTableConverterTests.cs", label="0: Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", span="188-188"];
m2_87 [cluster="System.Text.StringBuilder.Append(char)", color=green, community=0, file="DataTableConverterTests.cs", label="0: Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m2_88 [cluster="System.Text.StringBuilder.ToString()", color=green, community=0, file="DataTableConverterTests.cs", label="2: Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_118 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="273-273"];
m2_119 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="275-275"];
m2_120 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="DataTableConverterTests.cs", label="return (t.IsGenericType() && t.GetGenericTypeDefinition() == typeof(Nullable<>));", span="277-277"];
m2_121 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="273-273"];
m2_80 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="skippingAssemblyDetails = true", span="218-218"];
m2_340 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m2_53 [cluster="DataTable.cstr", file="DataTableConverterTests.cs", label="Entry DataTable.cstr", span=""];
m2_58 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DataTableConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m2_54 [cluster="DataColumn.cstr", file="DataTableConverterTests.cs", label="Entry DataColumn.cstr", span=""];
m2_508 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="999-999"];
m2_509 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return ((bindingAttr & flag) == flag)\r\n                ? bindingAttr ^ flag\r\n                : bindingAttr;", span="1001-1003"];
m2_510 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.RemoveFlag(System.Reflection.BindingFlags, System.Reflection.BindingFlags)", span="999-999"];
m2_338 [cluster="System.Collections.Generic.List<T>.List(int)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m2_160 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DataTableConverterTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_416 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool)", span="0-0"];
m2_599 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", span="1153-1153"];
m2_600 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="DataTableConverterTests.cs", label="!(obj is TypeNameKey)", span="1155-1155"];
m2_602 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="DataTableConverterTests.cs", label="return Equals((TypeNameKey)obj);", span="1160-1160"];
m2_601 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="DataTableConverterTests.cs", label="return false;", span="1157-1157"];
m2_603 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.Equals(object)", span="1153-1153"];
m2_261 [cluster="System.ArgumentException.ArgumentException(string, System.Exception)", file="DataTableConverterTests.cs", label="Entry System.ArgumentException.ArgumentException(string, System.Exception)", span="0-0"];
m2_420 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="DataTableConverterTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0"];
m2_386 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_102 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="DataTableConverterTests.cs", label="bindingFlags = bindingFlags | BindingFlags.NonPublic", span="255-255"];
m2_103 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", color=green, community=1, file="DataTableConverterTests.cs", label="2: return t.GetConstructors(bindingFlags).SingleOrDefault(c => !c.GetParameters().Any());", span="258-258"];
m2_104 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", color=green, community=0, file="DataTableConverterTests.cs", label="2: Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="250-250"];
m2_106 [cluster="Unk.SingleOrDefault", color=green, community=0, file="DataTableConverterTests.cs", label="2: Entry Unk.SingleOrDefault", span=""];
m2_107 [cluster="lambda expression", color=green, community=0, file="DataTableConverterTests.cs", label="2: Entry lambda expression", span="258-258"];
m2_108 [cluster="lambda expression", color=green, community=0, file="DataTableConverterTests.cs", label="2: !c.GetParameters().Any()", span="258-258"];
m2_109 [cluster="lambda expression", color=green, community=0, file="DataTableConverterTests.cs", label="2: Exit lambda expression", span="258-258"];
m2_110 [cluster="System.Reflection.MethodBase.GetParameters()", color=green, community=0, file="DataTableConverterTests.cs", label="2: Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m2_111 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_345 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="698-698"];
m2_349 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="memberInfo.MemberType() != MemberTypes.Property", span="700-700"];
m2_351 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="705-705"];
m2_360 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="MemberInfo[] members = genericTypeDefinition.GetMember(propertyInfo.Name, bindingAttr)", span="721-721"];
m2_350 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return false;", span="702-702"];
m2_352 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="!IsVirtual(propertyInfo)", span="706-706"];
m2_354 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Type declaringType = propertyInfo.DeclaringType", span="711-711"];
m2_353 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return false;", span="708-708"];
m2_355 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="!declaringType.IsGenericType()", span="712-712"];
m2_357 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Type genericTypeDefinition = declaringType.GetGenericTypeDefinition()", span="716-716"];
m2_356 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return false;", span="714-714"];
m2_358 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="genericTypeDefinition == null", span="717-717"];
m2_359 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return false;", span="719-719"];
m2_361 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="members.Length == 0", span="722-722"];
m2_363 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Type memberUnderlyingType = GetMemberUnderlyingType(members[0])", span="726-726"];
m2_362 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return false;", span="724-724"];
m2_364 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="!memberUnderlyingType.IsGenericParameter", span="727-727"];
m2_365 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return false;", span="729-729"];
m2_366 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return true;", span="732-732"];
m2_367 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="698-698"];
m2_463 [cluster="Unk.ToArray", file="DataTableConverterTests.cs", label="Entry Unk.ToArray", span=""];
m2_124 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="280-280"];
m2_125 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DataTableConverterTests.cs", label="return (IsNullableType(t))\r\n                ? Nullable.GetUnderlyingType(t)\r\n                : t;", span="282-284"];
m2_126 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="280-280"];
m2_436 [cluster="string.Trim()", file="DataTableConverterTests.cs", label="Entry string.Trim()", span="0-0"];
m2_417 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Module, bool)", span="0-0"];
m2_13 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="DataTableConverterTests.cs", label="Assert.AreEqual(''item 0'', dr1[''item''])", span="42-42"];
m2_435 [cluster="string.Substring(int, int)", file="DataTableConverterTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_466 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m2_96 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", color=green, community=0, file="DataTableConverterTests.cs", label="2: Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="250-250"];
m2_97 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", color=green, community=0, file="DataTableConverterTests.cs", label="2: Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="245-245"];
m2_98 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", color=green, community=0, file="DataTableConverterTests.cs", label="2: return GetDefaultConstructor(t, false);", span="247-247"];
m2_99 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", color=green, community=0, file="DataTableConverterTests.cs", label="2: Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="245-245"];
m2_100 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="DataTableConverterTests.cs", label="BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public", span="252-252"];
m2_122 [cluster="System.Type.IsGenericType()", file="DataTableConverterTests.cs", label="Entry System.Type.IsGenericType()", span="153-153"];
m2_60 [cluster="Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type, out string, out string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type, out string, out string)", span="50-50"];
m2_61 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", color=green, community=0, file="DataTableConverterTests.cs", label="2: StringBuilder builder = new StringBuilder()", span="190-190"];
m2_62 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="bool writingAssemblyName = false", span="193-193"];
m2_63 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="bool skippingAssemblyDetails = false", span="194-194"];
m2_273 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="DataTableConverterTests.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m2_437 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", span="1142-1142"];
m2_592 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="DataTableConverterTests.cs", label="AssemblyName = assemblyName", span="1144-1144"];
m2_593 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="DataTableConverterTests.cs", label="TypeName = typeName", span="1145-1145"];
m2_594 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.TypeNameKey(string, string)", span="1142-1142"];
m2_242 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="500-500"];
m2_243 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(property, nameof(property))", span="502-502"];
m2_244 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return (property.GetIndexParameters().Length > 0);", span="504-504"];
m2_245 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="500-500"];
m2_421 [cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", file="DataTableConverterTests.cs", label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool)", span="0-0"];
m2_547 [cluster="Unk.Any", file="DataTableConverterTests.cs", label="Entry Unk.Any", span=""];
m2_433 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="887-887"];
m2_438 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="int scope = 0", span="891-891"];
m2_440 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="i < fullyQualifiedTypeName.Length", span="892-892"];
m2_441 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="char current = fullyQualifiedTypeName[i]", span="894-894"];
m2_439 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="int i = 0", span="892-892"];
m2_444 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="scope++", span="898-898"];
m2_449 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="return i;", span="906-906"];
m2_450 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="i++", span="892-892"];
m2_451 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="return null;", span="912-912"];
m2_442 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label=current, span="895-895"];
m2_443 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="'['", span="897-897"];
m2_445 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="']'", span="900-900"];
m2_447 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="','", span="903-903"];
m2_446 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="scope--", span="901-901"];
m2_448 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="scope == 0", span="904-904"];
m2_452 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="887-887"];
m2_530 [cluster="System.Reflection.PropertyInfo.IsVirtual()", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.IsVirtual()", span="96-96"];
m2_369 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="735-735"];
m2_370 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="DataTableConverterTests.cs", label="return GetAttribute<T>(attributeProvider, true);", span="737-737"];
m2_371 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="735-735"];
m2_234 [cluster="System.ArgumentException.ArgumentException(string, string)", file="DataTableConverterTests.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_377 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m2_64 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="int i = 0", span="195-195"];
m2_101 [cluster="Unk.IsInstanceOfType", file="DataTableConverterTests.cs", label="Entry Unk.IsInstanceOfType", span=""];
m2_235 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="477-477"];
m2_236 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="479-479"];
m2_237 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="PropertyInfo propertyInfo = member as PropertyInfo", span="481-481"];
m2_238 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="propertyInfo != null", span="483-483"];
m2_239 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return IsIndexedProperty(propertyInfo);", span="485-485"];
m2_240 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return false;", span="489-489"];
m2_241 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="477-477"];
m2_200 [cluster="System.Type.GetElementType()", file="DataTableConverterTests.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m2_16 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="DataTableConverterTests.cs", label="Assert.AreEqual(''item 1'', dr2[''item''])", span="46-46"];
m2_161 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DataTableConverterTests.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m2_531 [cluster="System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", span="209-209"];
m2_486 [cluster="Unk.>", file="DataTableConverterTests.cs", label="Entry Unk.>", span=""];
m2_453 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="915-915"];
m2_454 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="BindingFlags bindingAttr = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic", span="917-917"];
m2_455 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="memberInfo.MemberType()", span="919-919"];
m2_457 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="PropertyInfo propertyInfo = (PropertyInfo)memberInfo", span="922-922"];
m2_459 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return targetType.GetProperty(propertyInfo.Name, bindingAttr, null, propertyInfo.PropertyType, types, null);", span="926-926"];
m2_460 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return targetType.GetMember(memberInfo.Name, memberInfo.MemberType(), bindingAttr).SingleOrDefault();", span="928-928"];
m2_456 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="MemberTypes.Property", span="921-921"];
m2_458 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="Type[] types = propertyInfo.GetIndexParameters().Select(p => p.ParameterType).ToArray()", span="924-924"];
m2_461 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="915-915"];
m2_335 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="932-932"];
m2_470 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="934-934"];
m2_471 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="List<MemberInfo> fieldInfos = new List<MemberInfo>(targetType.GetFields(bindingAttr))", span="936-936"];
m2_472 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="GetChildPrivateFields(fieldInfos, targetType, bindingAttr)", span="940-940"];
m2_473 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return fieldInfos.Cast<FieldInfo>();", span="943-943"];
m2_474 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="932-932"];
m2_462 [cluster="Unk.Select", file="DataTableConverterTests.cs", label="Entry Unk.Select", span=""];
m2_587 [cluster="System.DateTime.DateTime()", file="DataTableConverterTests.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m2_72 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="']'", span="205-205"];
m2_73 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="writingAssemblyName = false", span="206-206"];
m2_74 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="skippingAssemblyDetails = false", span="207-207"];
m2_77 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="!writingAssemblyName", span="211-211"];
m2_75 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="builder.Append(current)", span="208-208"];
m2_76 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="','", span="210-210"];
m2_78 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="writingAssemblyName = true", span="213-213"];
m2_293 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="610-610"];
m2_294 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="member.MemberType()", span="612-612"];
m2_296 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="FieldInfo fieldInfo = (FieldInfo)member", span="615-615"];
m2_299 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="fieldInfo.IsInitOnly && !canSetReadOnly", span="621-621"];
m2_301 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label=nonPublic, span="625-625"];
m2_307 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="PropertyInfo propertyInfo = (PropertyInfo)member", span="635-635"];
m2_310 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label=nonPublic, span="641-641"];
m2_312 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return (propertyInfo.GetSetMethod(nonPublic) != null);", span="645-645"];
m2_295 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="MemberTypes.Field", span="614-614"];
m2_306 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="MemberTypes.Property", span="634-634"];
m2_313 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return false;", span="647-647"];
m2_297 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="fieldInfo.IsLiteral", span="617-617"];
m2_303 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="fieldInfo.IsPublic", span="629-629"];
m2_298 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return false;", span="619-619"];
m2_300 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return false;", span="623-623"];
m2_302 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return true;", span="627-627"];
m2_304 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return true;", span="631-631"];
m2_305 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return false;", span="633-633"];
m2_308 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="!propertyInfo.CanWrite", span="637-637"];
m2_309 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return false;", span="639-639"];
m2_311 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="return true;", span="643-643"];
m2_314 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="610-610"];
m2_127 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="DataTableConverterTests.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m2_484 [cluster="System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", span="999-999"];
m2_595 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", span="1148-1148"];
m2_596 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", file="DataTableConverterTests.cs", label="return (AssemblyName?.GetHashCode() ?? 0) ^ (TypeName?.GetHashCode() ?? 0);", span="1150-1150"];
m2_597 [cluster="Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.TypeNameKey.GetHashCode()", span="1148-1148"];
m2_413 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly)", span="0-0"];
m2_158 [cluster="System.Type.IsInterface()", file="DataTableConverterTests.cs", label="Entry System.Type.IsInterface()", span="144-144"];
m2_343 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_159 [cluster="System.Type.IsGenericTypeDefinition()", file="DataTableConverterTests.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
m2_532 [cluster="System.Reflection.PropertyInfo.GetBaseDefinition()", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.GetBaseDefinition()", span="115-115"];
m2_20 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="m != null", span="120-120"];
m2_175 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="365-365"];
m2_176 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="currentType.IsGenericType()", span="367-367"];
m2_177 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Type currentGenericClassDefinition = currentType.GetGenericTypeDefinition()", span="369-369"];
m2_178 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="genericClassDefinition == currentGenericClassDefinition", span="371-371"];
m2_179 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="implementingType = currentType", span="373-373"];
m2_181 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="currentType.BaseType() == null", span="378-378"];
m2_184 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return InheritsGenericDefinitionInternal(currentType.BaseType(), genericClassDefinition, out implementingType);", span="384-384"];
m2_180 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return true;", span="374-374"];
m2_182 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="implementingType = null", span="380-380"];
m2_183 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return false;", span="381-381"];
m2_185 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="365-365"];
m2_167 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="352-352"];
m2_168 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="354-354"];
m2_169 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(genericClassDefinition, nameof(genericClassDefinition))", span="355-355"];
m2_170 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="!genericClassDefinition.IsClass() || !genericClassDefinition.IsGenericTypeDefinition()", span="357-357"];
m2_171 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="throw new ArgumentNullException('''{0}' is not a generic class definition.''.FormatWith(CultureInfo.InvariantCulture, genericClassDefinition));", span="359-359"];
m2_172 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return InheritsGenericDefinitionInternal(type, genericClassDefinition, out implementingType);", span="362-362"];
m2_173 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="352-352"];
m2_246 [cluster="System.Reflection.PropertyInfo.GetIndexParameters()", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0"];
m2_19 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetBaseDefinition(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="MethodInfo m = propertyInfo.GetGetMethod(true)", span="119-119"];
m2_376 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="748-748"];
m2_378 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="DataTableConverterTests.cs", label="Attribute[] a = GetAttributes(attributeProvider, typeof(T), inherit)", span="750-750"];
m2_379 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="DataTableConverterTests.cs", label="T[] attributes = a as T[]", span="752-752"];
m2_382 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="DataTableConverterTests.cs", label="return a.Cast<T>().ToArray();", span="758-758"];
m2_380 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="DataTableConverterTests.cs", label="attributes != null", span="753-753"];
m2_381 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="DataTableConverterTests.cs", label="return attributes;", span="755-755"];
m2_383 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(object, bool)", span="748-748"];
m2_112 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="261-261"];
m2_113 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(t, nameof(t))", span="263-263"];
m2_114 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="DataTableConverterTests.cs", label="t.IsValueType()", span="265-265"];
m2_115 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="DataTableConverterTests.cs", label="return IsNullableType(t);", span="267-267"];
m2_116 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="DataTableConverterTests.cs", label="return true;", span="270-270"];
m2_117 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="261-261"];
m2_17 [cluster="Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataTableConverterTests.Deserialize()", span="15-15"];
m2_18 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="637-637"];
m2_344 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87"];
m2_4 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="98-98"];
m2_5 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="MethodInfo m = propertyInfo.GetGetMethod(true)", span="100-100"];
m2_6 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="m != null && m.IsVirtual", span="101-101"];
m2_7 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return true;", span="103-103"];
m2_8 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="m = propertyInfo.GetSetMethod(true)", span="106-106"];
m2_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="m != null && m.IsVirtual", span="107-107"];
m2_10 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", color=red, community=0, file="DataTableConverterTests.cs", label="2: return true;", span="109-109"];
m2_12 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96"];
m2_15 [cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0"];
m2_2 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", span="87-87"];
m2_3 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", span="96-96"];
m2_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsVirtual(System.Reflection.PropertyInfo)", file="DataTableConverterTests.cs", label="return false;", span="112-112"];
m2_1 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ReflectionUtils()", file="DataTableConverterTests.cs", label="EmptyTypes = Type.EmptyTypes", span="90-90"];
m2_419 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool)", span="0-0"];
m2_260 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_506 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m2_591 [cluster="System.Activator.CreateInstance(System.Type)", file="DataTableConverterTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m2_203 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DataTableConverterTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m2_138 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="304-304"];
m2_139 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="306-306"];
m2_140 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(genericInterfaceDefinition, nameof(genericInterfaceDefinition))", span="307-307"];
m2_141 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="!genericInterfaceDefinition.IsInterface() || !genericInterfaceDefinition.IsGenericTypeDefinition()", span="309-309"];
m2_142 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="throw new ArgumentNullException('''{0}' is not a generic interface definition.''.FormatWith(CultureInfo.InvariantCulture, genericInterfaceDefinition));", span="311-311"];
m2_143 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="type.IsInterface()", span="314-314"];
m2_144 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="type.IsGenericType()", span="316-316"];
m2_145 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Type interfaceDefinition = type.GetGenericTypeDefinition()", span="318-318"];
m2_146 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="genericInterfaceDefinition == interfaceDefinition", span="320-320"];
m2_147 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="implementingType = type", span="322-322"];
m2_149 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="type.GetInterfaces()", span="328-328"];
m2_152 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="genericInterfaceDefinition == interfaceDefinition", span="334-334"];
m2_148 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return true;", span="323-323"];
m2_150 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="i.IsGenericType()", span="330-330"];
m2_155 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="implementingType = null", span="342-342"];
m2_151 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Type interfaceDefinition = i.GetGenericTypeDefinition()", span="332-332"];
m2_153 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="implementingType = i", span="336-336"];
m2_154 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return true;", span="337-337"];
m2_156 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="return false;", span="343-343"];
m2_157 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="304-304"];
m2_163 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="346-346"];
m2_164 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Type implementingType", span="348-348"];
m2_165 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="return InheritsGenericDefinition(type, genericClassDefinition, out implementingType);", span="349-349"];
m2_166 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="346-346"];
m2_548 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="1075-1079"];
m2_346 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="664-664"];
m2_347 [cluster="lambda expression", file="DataTableConverterTests.cs", label="m.Name", span="664-664"];
m2_348 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="664-664"];
m2_467 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="924-924"];
m2_468 [cluster="lambda expression", file="DataTableConverterTests.cs", label="p.ParameterType", span="924-924"];
m2_469 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="924-924"];
m2_488 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="960-960"];
m2_489 [cluster="lambda expression", file="DataTableConverterTests.cs", label="f.IsPrivate", span="960-960"];
m2_490 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="960-960"];
m2_534 [cluster="lambda expression", file="DataTableConverterTests.cs", label="p.Name == subTypeProperty.Name", span="1025-1025"];
m2_537 [cluster="lambda expression", file="DataTableConverterTests.cs", label="p.Name == subTypeProperty.Name\r\n                                                                       && p.DeclaringType == subTypeProperty.DeclaringType", span="1045-1046"];
m2_540 [cluster="lambda expression", file="DataTableConverterTests.cs", label="p.Name == subTypeProperty.Name\r\n                                                                   && p.IsVirtual()\r\n                                                                   && (p.GetBaseDefinition()?.DeclaringType ?? p.DeclaringType).IsAssignableFrom(subTypePropertyDeclaringType)", span="1058-1060"];
m2_533 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="1025-1025"];
m2_536 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="1045-1046"];
m2_539 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Entry lambda expression", span="1058-1060"];
m2_535 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="1025-1025"];
m2_538 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="1045-1046"];
m2_541 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="1058-1060"];
m2_549 [cluster="lambda expression", file="DataTableConverterTests.cs", label="info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType", span="1076-1079"];
m2_550 [cluster="lambda expression", file="DataTableConverterTests.cs", label="Exit lambda expression", span="1075-1079"];
m2_186 [cluster="System.Type.BaseType()", file="DataTableConverterTests.cs", label="Entry System.Type.BaseType()", span="171-171"];
m2_247 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="513-513"];
m2_248 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="515-515"];
m2_249 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="516-516"];
m2_250 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="member.MemberType()", span="518-518"];
m2_252 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="return ((FieldInfo)member).GetValue(target);", span="521-521"];
m2_254 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="return ((PropertyInfo)member).GetValue(target, null);", span="525-525"];
m2_256 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="throw new ArgumentException(''MemberInfo '{0}' has index parameters''.FormatWith(CultureInfo.InvariantCulture, member.Name), e);", span="529-529"];
m2_257 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="throw new ArgumentException(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, CultureInfo.InvariantCulture, member.Name), nameof(member));", span="532-532"];
m2_251 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="MemberTypes.Field", span="520-520"];
m2_253 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="MemberTypes.Property", span="522-522"];
m2_255 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label=TargetParameterCountException, span="527-527"];
m2_258 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="513-513"];
m2_542 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1072-1072"];
m2_543 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="DataTableConverterTests.cs", label="bool isMethodOverriden = currentType.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance)\r\n                .Any(info =>\r\n                    info.Name == method &&\r\n                    // check that the method overrides the original on DynamicObjectProxy\r\n                    info.DeclaringType != methodDeclaringType\r\n                    && info.GetBaseDefinition().DeclaringType == methodDeclaringType\r\n                )", span="1074-1080"];
m2_544 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="DataTableConverterTests.cs", label="return isMethodOverriden;", span="1082-1082"];
m2_545 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsMethodOverridden(System.Type, System.Type, string)", span="1072-1072"];
m2_79 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="builder.Append(current)", span="214-214"];
m2_274 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="DataTableConverterTests.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m2_477 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="947-947"];
m2_478 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="(bindingAttr & BindingFlags.NonPublic) != 0", span="951-951"];
m2_479 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="954-954"];
m2_480 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="(targetType = targetType.BaseType()) != null", span="956-956"];
m2_482 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="initialFields.AddRange(childPrivateFields)", span="962-962"];
m2_481 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="IEnumerable<MemberInfo> childPrivateFields =\r\n                        targetType.GetFields(nonPublicBindingAttr).Where(f => f.IsPrivate).Cast<MemberInfo>()", span="959-960"];
m2_483 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="947-947"];
m2_341 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_123 [cluster="System.Type.GetGenericTypeDefinition()", file="DataTableConverterTests.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m2_65 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="i < fullyQualifiedTypeName.Length", span="195-195"];
m2_66 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="char current = fullyQualifiedTypeName[i]", span="197-197"];
m2_67 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label=current, span="198-198"];
m2_68 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.RemoveAssemblyDetails(string)", file="DataTableConverterTests.cs", label="'['", span="200-200"];
m2_174 [cluster="System.Type.IsClass()", file="DataTableConverterTests.cs", label="Entry System.Type.IsClass()", span="198-198"];
m2_336 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_233 [cluster="System.Reflection.MemberInfo.MemberType()", file="DataTableConverterTests.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m2_589 [cluster="System.Guid.Guid()", file="DataTableConverterTests.cs", label="Entry System.Guid.Guid()", span="0-0"];
m2_263 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="542-542"];
m2_264 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="544-544"];
m2_265 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(target, nameof(target))", span="545-545"];
m2_266 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="member.MemberType()", span="547-547"];
m2_268 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="((FieldInfo)member).SetValue(target, value)", span="550-550"];
m2_270 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="((PropertyInfo)member).SetValue(target, value, null)", span="553-553"];
m2_271 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="throw new ArgumentException(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, member.Name), nameof(member));", span="556-556"];
m2_267 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="MemberTypes.Field", span="549-549"];
m2_269 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="MemberTypes.Property", span="552-552"];
m2_272 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="542-542"];
m2_334 [cluster="System.Collections.Generic.List<T>.List()", file="DataTableConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_434 [cluster="System.Nullable<T>.GetValueOrDefault()", file="DataTableConverterTests.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m2_422 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", span="866-866"];
m2_423 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="int? assemblyDelimiterIndex = GetAssemblyDelimiterIndex(fullyQualifiedTypeName)", span="868-868"];
m2_427 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="typeName = fullyQualifiedTypeName.Substring(0, assemblyDelimiterIndex.GetValueOrDefault()).Trim()", span="875-875"];
m2_428 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="assemblyName = fullyQualifiedTypeName.Substring(assemblyDelimiterIndex.GetValueOrDefault() + 1, fullyQualifiedTypeName.Length - assemblyDelimiterIndex.GetValueOrDefault() - 1).Trim()", span="876-876"];
m2_429 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="typeName = fullyQualifiedTypeName", span="880-880"];
m2_424 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="string typeName", span="870-870"];
m2_426 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="assemblyDelimiterIndex != null", span="873-873"];
m2_425 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="string assemblyName", span="871-871"];
m2_431 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="return new TypeNameKey(assemblyName, typeName);", span="884-884"];
m2_430 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="assemblyName = null", span="881-881"];
m2_432 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string)", span="866-866"];
m2_588 [cluster="BigInteger.cstr", file="DataTableConverterTests.cs", label="Entry BigInteger.cstr", span=""];
m2_414 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m2_368 [cluster="System.Type.GetMember(string, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry System.Type.GetMember(string, System.Reflection.BindingFlags)", span="0-0"];
m2_546 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m2_259 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="DataTableConverterTests.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m2_162 [cluster="System.Type.GetInterfaces()", file="DataTableConverterTests.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m2_415 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool)", span="0-0"];
m2_337 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="968-968"];
m2_491 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(targetType, nameof(targetType))", span="970-970"];
m2_492 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="List<PropertyInfo> propertyInfos = new List<PropertyInfo>(targetType.GetProperties(bindingAttr))", span="972-972"];
m2_493 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="targetType.IsInterface()", span="975-975"];
m2_494 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="targetType.GetInterfaces()", span="977-977"];
m2_495 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="propertyInfos.AddRange(i.GetProperties(bindingAttr))", span="979-979"];
m2_496 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="GetChildPrivateProperties(propertyInfos, targetType, bindingAttr)", span="983-983"];
m2_500 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="member.DeclaringType != targetType", span="989-989"];
m2_498 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="i < propertyInfos.Count", span="986-986"];
m2_499 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="PropertyInfo member = propertyInfos[i]", span="988-988"];
m2_502 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="propertyInfos[i] = declaredMember", span="992-992"];
m2_504 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="return propertyInfos;", span="996-996"];
m2_497 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="int i = 0", span="986-986"];
m2_503 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="i++", span="986-986"];
m2_501 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="PropertyInfo declaredMember = (PropertyInfo)GetMemberInfoFromType(member.DeclaringType, member)", span="991-991"];
m2_505 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="968-968"];
m2_465 [cluster="System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="DataTableConverterTests.cs", label="Entry System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="0-0"];
m2_412 [cluster="System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", file="DataTableConverterTests.cs", label="Entry System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)", span="0-0"];
m2_220 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="451-451"];
m2_221 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="ValidationUtils.ArgumentNotNull(member, nameof(member))", span="453-453"];
m2_222 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="member.MemberType()", span="455-455"];
m2_224 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return ((FieldInfo)member).FieldType;", span="458-458"];
m2_226 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return ((PropertyInfo)member).PropertyType;", span="460-460"];
m2_228 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return ((EventInfo)member).EventHandlerType;", span="462-462"];
m2_230 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="return ((MethodInfo)member).ReturnType;", span="464-464"];
m2_231 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="throw new ArgumentException(''MemberInfo must be of type FieldInfo, PropertyInfo, EventInfo or MethodInfo'', nameof(member));", span="466-466"];
m2_223 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="MemberTypes.Field", span="457-457"];
m2_225 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="MemberTypes.Property", span="459-459"];
m2_227 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="MemberTypes.Event", span="461-461"];
m2_229 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="MemberTypes.Method", span="463-463"];
m2_232 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="451-451"];
m2_464 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", file="DataTableConverterTests.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags, System.Reflection.Binder, System.Type, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m2_128 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="287-287"];
m2_129 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="!type.IsGenericType()", span="289-289"];
m2_131 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Type t = type.GetGenericTypeDefinition()", span="294-294"];
m2_132 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="return (t == genericInterfaceDefinition);", span="295-295"];
m2_130 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="return false;", span="291-291"];
m2_133 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="287-287"];
m2_590 [cluster="System.DateTimeOffset.DateTimeOffset()", file="DataTableConverterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset()", span="0-0"];
m2_372 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="DataTableConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="740-740"];
m2_373 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="DataTableConverterTests.cs", label="T[] attributes = GetAttributes<T>(attributeProvider, inherit)", span="742-742"];
m2_374 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="DataTableConverterTests.cs", label="return (attributes != null) ? attributes.FirstOrDefault() : null;", span="744-744"];
m2_375 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="DataTableConverterTests.cs", label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="740-740"];
m2_607 [file="DataTableConverterTests.cs", label=subTypeProperty, span=""];
m2_608 [file="DataTableConverterTests.cs", label=subTypePropertyDeclaringType, span=""];
m2_609 [file="DataTableConverterTests.cs", label="System.Type", span=""];
m2_610 [file="DataTableConverterTests.cs", label=string, span=""];
m2_611 [file="DataTableConverterTests.cs", label="out Newtonsoft.Json.Utilities.TypeNameKey", span=""];
m2_612 [file="DataTableConverterTests.cs", label="Newtonsoft.Json.Utilities.TypeNameKey", span=""];
m2_613 [file="DataTableConverterTests.cs", label="ref Newtonsoft.Json.Utilities.TypeNameKey", span=""];
m3_6 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", span="75-75"];
m3_7 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", file="JsonReaderException.cs", label="LineNumber = lineNumber", span="78-78"];
m3_8 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", file="JsonReaderException.cs", label="LinePosition = linePosition", span="79-79"];
m3_9 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", span="75-75"];
m3_0 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException()", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException()", span="50-50"];
m3_1 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException()", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException()", span="50-50"];
m3_4 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="70-70"];
m3_5 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="70-70"];
m3_2 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonReaderException.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="59-59"];
m3_3 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonReaderException.cs", label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="59-59"];
m3_10 [file="JsonReaderException.cs", label="Newtonsoft.Json.JsonReaderException", span=""];
m4_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="59-59"];
m4_3 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="59-59"];
m4_6 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", span="75-75"];
m4_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", file="JsonSchemaException.cs", label="LineNumber = lineNumber", span="78-78"];
m4_8 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", file="JsonSchemaException.cs", label="LinePosition = linePosition", span="79-79"];
m4_9 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, int, int)", span="75-75"];
m4_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="50-50"];
m4_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="50-50"];
m4_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonSchemaException.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="70-70"];
m4_5 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonSchemaException.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="70-70"];
m4_10 [file="JsonSchemaException.cs", label="Newtonsoft.Json.Schema.JsonSchemaException", span=""];
m5_4 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="59-59"];
m5_5 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="59-59"];
m5_0 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="39-39"];
m5_1 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="39-39"];
m5_2 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializationException.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m5_3 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializationException.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m6_835 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddBeforeSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(6, a.Count())", span="1082-1082"];
m6_670 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717"];
m6_54 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="131-131"];
m6_263 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="373-373"];
m6_1027 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", span="1700-1700"];
m6_1028 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1702-1702"];
m6_1029 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", span="1700-1700"];
m6_841 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="writer.Write(delimiter)", span="1332-1332"];
m6_842 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="s != null", span="1335-1335"];
m6_843 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="char[] chars = null", span="1337-1337"];
m6_845 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="int lastWritePosition = 0", span="1339-1339"];
m6_844 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="char[] unicodeBuffer = null", span="1338-1338"];
m6_846 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="int i = 0", span="1341-1341"];
m6_67 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(false, JToken.DeepEquals(o1, o2))", span="154-154"];
m6_1018 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", span="1685-1685"];
m6_1019 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1687-1687"];
m6_1020 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", span="1685-1685"];
m6_347 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393"];
m6_70 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerInternalReader.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_44 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(true)", span="117-117"];
m6_30 [cluster="Unk.AreEqual", file="JsonSerializerInternalReader.cs", label="Entry Unk.AreEqual", span=""];
m6_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonSerializerInternalReader.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', v),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="123-129"];
m6_181 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool)(new JValue(''true'')))", span="309-309"];
m6_189 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(''1'')))", span="317-317"];
m6_190 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(true)))", span="318-318"];
m6_191 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(TimeSpan.FromMinutes(1))))", span="319-319"];
m6_196 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'')))", span="324-324"];
m6_192 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''00:01:00'', (string)(new JValue(TimeSpan.FromMinutes(1))))", span="320-320"];
m6_193 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(TimeSpan.FromMinutes(1), (TimeSpan)(new JValue(''00:01:00'')))", span="321-321"];
m6_194 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''46efe013-b56a-4e83-99e4-4dce7678a5bc'', (string)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="322-322"];
m6_195 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''http://www.google.com/'', (string)(new JValue(new Uri(''http://www.google.com''))))", span="323-323"];
m6_197 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''))))", span="325-325"];
m6_198 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(''http://www.google.com'')))", span="326-326"];
m6_199 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new Uri(''http://www.google.com''), (Uri)(new JValue(new Uri(''http://www.google.com''))))", span="327-327"];
m6_472 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, (new JValue(1).ToObject(typeof(int))))", span="477-477"];
m6_901 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m6_800 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648"];
m6_260 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="370-370"];
m6_93 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m6_267 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="377-377"];
m6_273 [cluster="BigInteger.cstr", file="JsonSerializerInternalReader.cs", label="Entry BigInteger.cstr", span=""];
m6_730 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.Bytes", span="1135-1135"];
m6_761 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(unicode, reader.ReadAsString())", span="1198-1198"];
m6_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="243-243"];
m6_52 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, v.Parent)", span="121-121"];
m6_488 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToObject()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(DateTime.MaxValue, (new JValue(DateTime.MaxValue).ToObject(typeof(DateTime))))", span="493-493"];
m6_820 [cluster="Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddAfterSelf(object)", span="228-228"];
m6_936 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522"];
m6_36 [cluster="System.Console.WriteLine(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_84 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="JToken next = a[0].Next", span="169-169"];
m6_867 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\u2028''", span="1377-1377"];
m6_868 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="'\u2029'", span="1379-1379"];
m6_869 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\u2029''", span="1380-1380"];
m6_187 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(1)))", span="315-315"];
m6_126 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool)new JValue(true))", span="250-250"];
m6_274 [cluster="Unk.ToByteArray", file="JsonSerializerInternalReader.cs", label="Entry Unk.ToByteArray", span=""];
m6_275 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", span="392-392"];
m6_276 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(true); }, ''Can not convert Boolean to DateTime.'')", span="394-394"];
m6_294 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1); }, ''Can not convert Float to TimeSpan.'')", span="416-416"];
m6_277 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1); }, ''Can not convert Integer to DateTime.'')", span="395-395"];
m6_278 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1); }, ''Can not convert Float to DateTime.'')", span="396-396"];
m6_279 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1m); }, ''Can not convert Float to DateTime.'')", span="397-397"];
m6_280 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to DateTime.'')", span="398-398"];
m6_281 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(new Uri(''http://www.google.com'')); }, ''Can not convert Uri to DateTime.'')", span="399-399"];
m6_282 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)JValue.CreateNull(); }, ''Can not convert Null to DateTime.'')", span="400-400"];
m6_283 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to DateTime.'')", span="401-401"];
m6_284 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="2: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(true); }, ''Can not convert Boolean to Uri.'')", span="403-403"];
m6_285 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1); }, ''Can not convert Integer to Uri.'')", span="404-404"];
m6_286 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1); }, ''Can not convert Float to Uri.'')", span="405-405"];
m6_287 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1m); }, ''Can not convert Float to Uri.'')", span="406-406"];
m6_288 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(TimeSpan.Zero); }, ''Can not convert TimeSpan to Uri.'')", span="407-407"];
m6_289 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(Guid.NewGuid()); }, ''Can not convert Guid to Uri.'')", span="408-408"];
m6_290 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTime.Now); }, ''Can not convert Date to Uri.'')", span="409-409"];
m6_291 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTimeOffset.Now); }, ''Can not convert Date to Uri.'')", span="411-411"];
m6_292 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="2: ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(true); }, ''Can not convert Boolean to TimeSpan.'')", span="414-414"];
m6_293 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1); }, ''Can not convert Integer to TimeSpan.'')", span="415-415"];
m6_295 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1m); }, ''Can not convert Float to TimeSpan.'')", span="417-417"];
m6_296 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.FailedCasting()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)JValue.CreateNull(); }, ''Can not convert Null to TimeSpan.'')", span="418-418"];
m6_741 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a, a[0].Parent)", span="921-921"];
m6_742 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="922-922"];
m6_743 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5, a.Count())", span="923-923"];
m6_746 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a, a[0].Parent)", span="927-927"];
m6_744 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="a.AddFirst(''NewFirst'')", span="925-925"];
m6_745 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="926-926"];
m6_749 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="931-931"];
m6_747 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="928-928"];
m6_748 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(6, a.Count())", span="929-929"];
m6_750 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="908-908"];
m6_686 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(1)", span="1065-1065"];
m6_687 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0].Property1[0]'', writer.Path)", span="1066-1066"];
m6_692 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartArray()", span="1071-1071"];
m6_690 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartArray()", span="1069-1069"];
m6_689 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0].Property1[1]'', writer.Path)", span="1068-1068"];
m6_691 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0].Property1[1][0]'', writer.Path)", span="1070-1070"];
m6_693 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0].Property1[1][0][0]'', writer.Path)", span="1072-1072"];
m6_694 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="1073-1073"];
m6_695 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1074-1074"];
m6_688 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartArray()", span="1067-1067"];
m6_696 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="1075-1075"];
m6_714 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'', sb.ToString())", span="1095-1114"];
m6_821 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1300-1300"];
m6_822 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="char c = (char)0", span="1302-1302"];
m6_832 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="c++", span="1321-1321"];
m6_824 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="char[] buffer = null", span="1307-1307"];
m6_825 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(swNew, c.ToString(), '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer)", span="1308-1308"];
m6_826 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="StringWriter swOld = new StringWriter()", span="1310-1310"];
m6_827 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="WriteEscapedJavaScriptStringOld(swOld, c.ToString(), '''', true)", span="1311-1311"];
m6_828 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="string newText = swNew.ToString()", span="1313-1313"];
m6_830 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="newText != oldText", span="1316-1316"];
m6_831 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="throw new Exception(''Difference for char '{0}' (value {1}). Old text: {2}, New text: {3}''.FormatWith(CultureInfo.InvariantCulture, c, (int)c, oldText, newText));", span="1318-1318"];
m6_833 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="c != char.MaxValue", span="1322-1322"];
m6_834 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1300-1300"];
m6_837 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1327-1327"];
m6_838 [cluster="System.Exception.Exception(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_823 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="StringWriter swNew = new StringWriter()", span="1306-1306"];
m6_829 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonSerializerInternalReader.cs", label="string oldText = swOld.ToString()", span="1314-1314"];
m6_836 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148"];
m6_839 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
m6_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="183-183"];
m6_988 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerInternalReader.cs", label="_value = value", span="1637-1637"];
m6_989 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1635-1635"];
m6_55 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonSerializerInternalReader.cs", label="JProperty p = new JProperty(''NewProperty'', v)", span="133-133"];
m6_346 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="401-401"];
m6_733 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m6_874 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="c <= '\u001f'", span="1391-1391"];
m6_875 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="unicodeBuffer == null", span="1393-1393"];
m6_890 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="lastWritePosition == 0", span="1437-1437"];
m6_877 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="StringUtils.ToCharAsUnicode(c, unicodeBuffer)", span="1398-1398"];
m6_879 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = null", span="1405-1405"];
m6_881 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="i > lastWritePosition", span="1415-1415"];
m6_883 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="chars = s.ToCharArray()", span="1419-1419"];
m6_885 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="lastWritePosition = i + 1", span="1426-1426"];
m6_887 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="writer.Write(escapedValue)", span="1429-1429"];
m6_889 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="i++", span="1341-1341"];
m6_891 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="writer.Write(s)", span="1440-1440"];
m6_892 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="chars == null", span="1444-1444"];
m6_876 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="unicodeBuffer = new char[6]", span="1395-1395"];
m6_878 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = EscapedUnicodeText", span="1401-1401"];
m6_880 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue == null", span="1410-1410"];
m6_882 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="chars == null", span="1417-1417"];
m6_884 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="writer.Write(chars, lastWritePosition, i - lastWritePosition)", span="1423-1423"];
m6_888 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="writer.Write(unicodeBuffer)", span="1433-1433"];
m6_886 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="!string.Equals(escapedValue, EscapedUnicodeText)", span="1427-1427"];
m6_893 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="chars = s.ToCharArray()", span="1446-1446"];
m6_530 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MinValue), (JValue)float.MinValue))", span="544-544"];
m6_531 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MinValue), (JValue)double.MinValue))", span="545-545"];
m6_532 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(uint.MaxValue), (JValue)uint.MaxValue))", span="546-546"];
m6_546 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(emptyData), (JValue)emptyData))", span="562-562"];
m6_547 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(emptyData), (JValue)new byte[1]))", span="563-563"];
m6_533 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MaxValue), (JValue)ulong.MaxValue))", span="547-547"];
m6_534 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(ulong.MinValue), (JValue)ulong.MinValue))", span="548-548"];
m6_535 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((string)null), (JValue)(string)null))", span="549-549"];
m6_536 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue((DateTime?)null), (JValue)(DateTime?)null))", span="550-550"];
m6_537 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)decimal.MaxValue))", span="551-551"];
m6_538 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MaxValue), (JValue)(decimal?)decimal.MaxValue))", span="552-552"];
m6_539 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(decimal.MinValue), (JValue)decimal.MinValue))", span="553-553"];
m6_540 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(float.MaxValue), (JValue)(float?)float.MaxValue))", span="554-554"];
m6_541 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(double.MaxValue), (JValue)(double?)double.MaxValue))", span="555-555"];
m6_542 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(double?)null))", span="556-556"];
m6_543 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsFalse(JToken.DeepEquals(new JValue(true), (JValue)(bool?)null))", span="558-558"];
m6_544 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsFalse(JToken.DeepEquals(JValue.CreateNull(), (JValue)(object)null))", span="559-559"];
m6_545 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="byte[] emptyData = new byte[0]", span="561-561"];
m6_548 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(Encoding.UTF8.GetBytes(''Hi'')), (JValue)Encoding.UTF8.GetBytes(''Hi'')))", span="564-564"];
m6_771 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1218-1218"];
m6_850 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="string escapedValue", span="1351-1351"];
m6_851 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label=c, span="1353-1353"];
m6_852 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="'\t'", span="1355-1355"];
m6_854 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="'\n'", span="1358-1358"];
m6_853 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\t''", span="1356-1356"];
m6_855 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\n''", span="1359-1359"];
m6_176 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (string)(JValue)null)", span="302-302"];
m6_923 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1612-1612"];
m6_980 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs", label="SetWriteState(JsonToken.EndObject, null)", span="1614-1614"];
m6_981 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1612-1612"];
m6_752 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1179-1179"];
m6_753 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="1181-1181"];
m6_755 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="string unicode = ''\u5f20''", span="1187-1187"];
m6_757 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="string json = sw.ToString()", span="1191-1191"];
m6_754 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeNonAscii\r\n            }", span="1182-1185"];
m6_756 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(unicode)", span="1189-1189"];
m6_758 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(8, json.Length)", span="1193-1193"];
m6_759 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''''''\u5f20'''''', json)", span="1194-1194"];
m6_760 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1196-1196"];
m6_586 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="907-907"];
m6_38 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonSerializerInternalReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m6_39 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JsonSerializerInternalReader.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m6_40 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="103-103"];
m6_46 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonSerializerInternalReader.cs", label="JObject o = (JObject)JToken.Parse(''{'pie':true}'')", span="112-112"];
m6_41 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonSerializerInternalReader.cs", label="JObject o = (JObject)JToken.Load(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="105-105"];
m6_42 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="106-106"];
m6_43 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Load()", span="103-103"];
m6_45 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="110-110"];
m6_47 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="113-113"];
m6_48 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parse()", span="110-110"];
m6_49 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="1902-1902"];
m6_87 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="173-173"];
m6_88 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="next = next.Next", span="175-175"];
m6_89 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="176-176"];
m6_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="Assert.IsNull(next)", span="179-179"];
m6_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="next = next.Next", span="178-178"];
m6_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="159-159"];
m6_920 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1605-1605"];
m6_977 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="SetWriteState(JsonToken.StartObject, null)", span="1607-1607"];
m6_978 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="_writer.Write(''{{{'')", span="1609-1609"];
m6_979 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1605-1605"];
m6_183 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, (int)(new JValue(1)))", span="311-311"];
m6_432 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="444-444"];
m6_751 [cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="583-583"];
m6_804 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1020-1020"];
m6_805 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    new JValue(new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc))\r\n                    )", span="1022-1025"];
m6_806 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonSerializerInternalReader.cs", label="string json = a.ToString(Formatting.None, new IsoDateTimeConverter())", span="1027-1027"];
m6_807 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''[''''2009-02-15T00:00:00Z'''']'', json)", span="1029-1029"];
m6_812 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5, (int)a[0])", span="1045-1045"];
m6_808 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ToStringWithNoIndenting()", span="1020-1020"];
m6_809 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1033-1033"];
m6_818 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''lastpie'', (string)a.Last)", span="1053-1053"];
m6_810 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="1035-1041"];
m6_811 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="a[1].AddAfterSelf(''pie'')", span="1043-1043"];
m6_813 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, a[1].Count())", span="1046-1046"];
m6_814 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''pie'', (string)a[2])", span="1047-1047"];
m6_815 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5, a.Count())", span="1048-1048"];
m6_816 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="a[4].AddAfterSelf(''lastpie'')", span="1050-1050"];
m6_817 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''lastpie'', (string)a[5])", span="1052-1052"];
m6_819 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddAfterSelf()", span="1033-1033"];
m6_1058 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Flush()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Flush()", span="1757-1757"];
m6_1059 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Flush()", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1759-1759"];
m6_1060 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Flush()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Flush()", span="1757-1757"];
m6_762 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="sw = new StringWriter()", span="1200-1200"];
m6_763 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.Default\r\n            }", span="1201-1204"];
m6_764 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(unicode)", span="1206-1206"];
m6_112 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="195-195"];
m6_113 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteNull()", span="196-196"];
m6_114 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteUndefined()", span="197-197"];
m6_115 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndArray()", span="198-198"];
m6_116 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="string expected = @''[''''@'''',''''\r\n\t\f\b?{\\r\\n\''''''''',true,10,10.99,0.99,1E-18,0.000000000000000001,null,null,''''This is a string.'''',null,undefined]''", span="201-201"];
m6_186 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, (int)(new JValue(true)))", span="314-314"];
m6_847 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="i < s.Length", span="1341-1341"];
m6_271 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(expected, result)", span="393-393"];
m6_270 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="string result = sb.ToString()", span="391-391"];
m6_1038 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", span="1720-1720"];
m6_1039 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1722-1722"];
m6_1040 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", span="1720-1720"];
m6_72 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="MemoryStream ms = new MemoryStream()", span="149-149"];
m6_375 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="415-415"];
m6_376 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)new JValue(1)", span="415-415"];
m6_377 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="415-415"];
m6_391 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)new JValue(DateTime.Now)", span="420-420"];
m6_378 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="416-416"];
m6_379 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)new JValue(1.1)", span="416-416"];
m6_380 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="416-416"];
m6_381 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="417-417"];
m6_382 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)new JValue(1.1m)", span="417-417"];
m6_383 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="417-417"];
m6_384 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="418-418"];
m6_385 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)JValue.CreateNull()", span="418-418"];
m6_386 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="418-418"];
m6_387 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="419-419"];
m6_388 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)new JValue(Guid.NewGuid())", span="419-419"];
m6_389 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="419-419"];
m6_390 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="420-420"];
m6_392 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="420-420"];
m6_393 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="422-422"];
m6_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonSerializerInternalReader.cs", label="JToken previous = a[3].Previous", span="193-193"];
m6_262 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="372-372"];
m6_31 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m6_1024 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", span="1695-1695"];
m6_1025 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1697-1697"];
m6_1026 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", span="1695-1695"];
m6_261 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''500W'')", span="371-371"];
m6_1021 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", span="1690-1690"];
m6_1022 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1692-1692"];
m6_1023 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", span="1690-1690"];
m6_456 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEnd()", span="714-714"];
m6_475 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="740-740"];
m6_466 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="731-731"];
m6_493 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartObject()", span="772-772"];
m6_494 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''con'')", span="773-773"];
m6_482 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''d'' + i)", span="752-752"];
m6_483 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteRawValue(rawJson)", span="753-753"];
m6_457 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerInternalReader.cs", label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="717-717"];
m6_458 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerInternalReader.cs", label="string result = sb.ToString()", span="718-718"];
m6_460 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="703-703"];
m6_461 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="724-724"];
m6_462 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="726-726"];
m6_463 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="727-727"];
m6_464 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="728-728"];
m6_465 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="730-730"];
m6_467 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader)", span="732-732"];
m6_468 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''1'', sw.ToString())", span="734-734"];
m6_469 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="724-724"];
m6_470 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m6_471 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m6_473 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483"];
m6_474 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="738-738"];
m6_480 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartObject()", span="748-748"];
m6_481 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="i < 3", span="750-750"];
m6_476 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="741-741"];
m6_477 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="743-743"];
m6_478 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="int i = 0", span="745-745"];
m6_479 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="string rawJson = ''[1,2]''", span="746-746"];
m6_486 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="761-761"];
m6_487 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="738-738"];
m6_489 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="765-765"];
m6_490 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="767-767"];
m6_491 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="768-768"];
m6_497 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''aa'')", span="777-777"];
m6_459 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(expected, result)", span="720-720"];
m6_484 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="i++", span="755-755"];
m6_485 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndObject()", span="758-758"];
m6_492 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="770-770"];
m6_495 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="775-775"];
m6_496 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartObject()", span="776-776"];
m6_498 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''aa'')", span="778-778"];
m6_499 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndObject()", span="779-779"];
m6_558 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.PropertyName, ''string'')", span="873-873"];
m6_559 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.Integer, int.MaxValue)", span="874-874"];
m6_560 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.EndObject)", span="875-875"];
m6_561 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.EndArray)", span="876-876"];
m6_562 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''[1,{''''string'''':2147483647}]'', sb.ToString())", span="879-879"];
m6_563 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="863-863"];
m6_74 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(ms.CanRead)", span="152-152"];
m6_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m6_645 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="1006-1006"];
m6_265 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteComment(''(broken)'')", span="375-375"];
m6_802 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327"];
m6_736 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="1145-1145"];
m6_1006 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", span="1665-1665"];
m6_1007 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1667-1667"];
m6_1008 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", span="1665-1665"];
m6_212 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (bool?)(JValue)null)", span="341-341"];
m6_213 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (char?)(JValue)null)", span="342-342"];
m6_214 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="343-343"];
m6_223 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="354-354"];
m6_215 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="345-345"];
m6_216 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="347-347"];
m6_217 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (ushort?)(JValue)null)", span="348-348"];
m6_218 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="349-349"];
m6_219 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="350-350"];
m6_220 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="351-351"];
m6_221 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="352-352"];
m6_222 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (long?)(JValue)null)", span="353-353"];
m6_224 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="355-355"];
m6_225 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="356-356"];
m6_80 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="writer.Close()", span="160-160"];
m6_659 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="1023-1023"];
m6_449 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="451-451"];
m6_450 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="453-453"];
m6_451 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison>()", span="453-453"];
m6_452 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="453-453"];
m6_453 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="454-454"];
m6_454 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (new JValue(''Ordinal1'')).ToObject<StringComparison?>()", span="454-454"];
m6_455 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="454-454"];
m6_565 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="JToken t", span="594-594"];
m6_251 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340"];
m6_549 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(TimeSpan.FromMinutes(1)), (JValue)TimeSpan.FromMinutes(1)))", span="566-566"];
m6_550 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ImplicitCastingTo()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(JValue.CreateNull(), (JValue)(TimeSpan?)null))", span="567-567"];
m6_1046 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", span="1741-1741"];
m6_1048 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", file="JsonSerializerInternalReader.cs", label="DisposalCalls = 0", span="1743-1743"];
m6_1049 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", span="1741-1741"];
m6_685 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1064-1064"];
m6_617 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartObject()", span="957-957"];
m6_904 [cluster="System.IO.TextWriter.Write(char[])", file="JsonSerializerInternalReader.cs", label="Entry System.IO.TextWriter.Write(char[])", span="0-0"];
m6_605 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="941-941"];
m6_606 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Formatting = Formatting.Indented", span="943-943"];
m6_607 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="944-944"];
m6_608 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="946-946"];
m6_935 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397"];
m6_972 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m6_643 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(expected, result)", span="1002-1002"];
m6_33 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="123-123"];
m6_81 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(ms.CanRead)", span="161-161"];
m6_28 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m6_79 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(ms.CanRead)", span="159-159"];
m6_650 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="JToken t2 = o[''prop1'']", span="766-766"];
m6_68 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, JToken.DeepEquals(o1.Value, o2.Value))", span="155-155"];
m6_649 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="JToken t1 = a[1][0]", span="765-765"];
m6_257 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartObject()", span="367-367"];
m6_174 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''True'', (string)(new JValue(true)))", span="300-300"];
m6_184 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, (int)(new JValue(1.0)))", span="312-312"];
m6_973 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m6_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool)(new JValue(true)))", span="310-310"];
m6_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="255-255"];
m6_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (long?)(JValue)null)", span="256-256"];
m6_133 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="257-257"];
m6_166 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5f, (float?)(new JValue(5m)))", span="290-290"];
m6_134 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="258-258"];
m6_135 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="259-259"];
m6_136 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="260-260"];
m6_137 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="261-261"];
m6_138 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="262-262"];
m6_139 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="263-263"];
m6_140 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="264-264"];
m6_141 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="265-265"];
m6_142 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="266-266"];
m6_143 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="267-267"];
m6_144 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="268-268"];
m6_145 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="269-269"];
m6_146 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="270-270"];
m6_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="271-271"];
m6_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="272-272"];
m6_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (byte?)new JValue((byte?)null))", span="273-273"];
m6_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (byte?)(JValue)null)", span="274-274"];
m6_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="275-275"];
m6_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="276-276"];
m6_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="277-277"];
m6_154 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="278-278"];
m6_155 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="279-279"];
m6_156 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", span="280-280"];
m6_157 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="281-281"];
m6_158 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="282-282"];
m6_159 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="283-283"];
m6_160 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="284-284"];
m6_161 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (string)new JValue((string)null))", span="285-285"];
m6_162 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5m, (decimal)(new JValue(5L)))", span="286-286"];
m6_163 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5m, (decimal?)(new JValue(5L)))", span="287-287"];
m6_164 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5f, (float)(new JValue(5L)))", span="288-288"];
m6_165 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5f, (float)(new JValue(5m)))", span="289-289"];
m6_167 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5, (byte)(new JValue(5)))", span="291-291"];
m6_169 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(SByte.MinValue, (sbyte)(new JValue(SByte.MinValue)))", span="293-293"];
m6_168 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(SByte.MinValue, (sbyte?)(new JValue(SByte.MinValue)))", span="292-292"];
m6_170 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (sbyte?)JValue.CreateNull())", span="295-295"];
m6_414 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="431-431"];
m6_557 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.StartObject)", span="872-872"];
m6_86 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="next = next.Next", span="172-172"];
m6_0 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", span="59-59"];
m6_6 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="i < 1000", span="67-67"];
m6_23 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="98-98"];
m6_15 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''Prop3'')", span="83-83"];
m6_3 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="string longEscapedString = ''Hello!'' + new string('!', 50) + new string('\n', 1000) + ''Good bye!''", span="64-64"];
m6_5 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="int i = 0", span="67-67"];
m6_12 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))", span="78-78"];
m6_7 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="69-69"];
m6_2 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="string longString = new string('A', 2000)", span="63-63"];
m6_4 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="string longerEscapedString = ''Hello!'' + new string('!', 2000) + new string('\n', 1000) + ''Good bye!''", span="65-65"];
m6_11 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''Prop1'')", span="77-77"];
m6_14 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(longString)", span="81-81"];
m6_18 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(longerEscapedString)", span="87-87"];
m6_20 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="(i + 1) % 100 == 0", span="92-92"];
m6_22 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="i++", span="67-67"];
m6_24 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, arrayPool.FreeArrays.Count)", span="99-99"];
m6_25 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", span="59-59"];
m6_8 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="71-71"];
m6_9 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.ArrayPool = arrayPool", span="73-73"];
m6_13 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''Prop2'')", span="80-80"];
m6_16 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(longEscapedString)", span="84-84"];
m6_1 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="JsonTextReaderTest.FakeArrayPool arrayPool = new JsonTextReaderTest.FakeArrayPool()", span="61-61"];
m6_10 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="75-75"];
m6_17 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''Prop4'')", span="86-86"];
m6_19 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="89-89"];
m6_21 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonSerializerInternalReader.cs", label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="94-94"];
m6_26 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FakeArrayPool.FakeArrayPool()", span="1181-1181"];
m6_849 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="c >= ' ' && c < 128 && c != '\\' && c != delimiter", span="1346-1346"];
m6_737 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="1146-1149"];
m6_738 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="1151-1151"];
m6_740 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1143-1143"];
m6_739 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', sw.ToString())", span="1153-1153"];
m6_75 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="writer.Close()", span="153-153"];
m6_415 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (Guid)new JValue(DateTime.Now)", span="431-431"];
m6_651 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="List<JToken> source = new List<JToken> { t1, t2 }", span="768-768"];
m6_652 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="List<JToken> ancestors = source.Ancestors().ToList()", span="770-770"];
m6_653 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(4, ancestors.Count())", span="771-771"];
m6_667 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="794-794"];
m6_654 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="772-772"];
m6_656 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(o.Property(''prop1''), ancestors[2])", span="774-774"];
m6_655 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a, ancestors[1])", span="773-773"];
m6_660 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="779-779"];
m6_661 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="781-787"];
m6_662 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="List<JToken> descendants = a.Descendants().ToList()", span="789-789"];
m6_657 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(o, ancestors[3])", span="775-775"];
m6_658 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors_Many()", span="750-750"];
m6_663 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(10, descendants.Count())", span="790-790"];
m6_664 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(5, (int)descendants[0])", span="791-791"];
m6_665 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="792-792"];
m6_666 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="793-793"];
m6_668 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="795-795"];
m6_669 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="779-779"];
m6_770 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="1217-1217"];
m6_50 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerInternalReader.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m6_58 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="132-132"];
m6_51 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", span="0-0"];
m6_57 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="131-131"];
m6_59 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw) { QuoteName = false }", span="133-133"];
m6_56 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="129-129"];
m6_60 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="135-135"];
m6_62 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(''value'')", span="138-138"];
m6_66 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="129-129"];
m6_61 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''name'')", span="137-137"];
m6_63 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="140-140"];
m6_64 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="writer.Flush()", span="141-141"];
m6_65 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{name:''''value''''}'', sb.ToString())", span="143-143"];
m6_69 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167"];
m6_256 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Formatting = Formatting.Indented", span="365-365"];
m6_801 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697"];
m6_618 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''propertyName'')", span="959-959"];
m6_619 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: jsonWriter.WriteValue(double.NaN)", span="960-960"];
m6_620 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: jsonWriter.IndentChar = '?'", span="962-962"];
m6_624 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''prop2'')", span="967-967"];
m6_625 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(123)", span="968-968"];
m6_621 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual('?', jsonWriter.IndentChar)", span="963-963"];
m6_623 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(6, jsonWriter.Indentation)", span="965-965"];
m6_622 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Indentation = 6", span="964-964"];
m6_626 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndObject()", span="970-970"];
m6_1050 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Dispose(bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Dispose(bool)", span="1746-1746"];
m6_1051 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Dispose(bool)", file="JsonSerializerInternalReader.cs", label="base.Dispose(disposing)", span="1748-1748"];
m6_1052 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Dispose(bool)", file="JsonSerializerInternalReader.cs", label="++DisposalCalls", span="1749-1749"];
m6_1053 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Dispose(bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.Dispose(bool)", span="1746-1746"];
m6_646 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="983-983"];
m6_647 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_648 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627"];
m6_987 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232"];
m6_715 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1045-1045"];
m6_716 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219"];
m6_719 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonWriter.State[][] stateArray = JsonWriter.BuildStateArray()", span="1120-1120"];
m6_721 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="EnumUtils.GetValues(typeof(JsonToken))", span="1124-1124"];
m6_722 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label=valueToken, span="1126-1126"];
m6_727 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.Null", span="1132-1132"];
m6_717 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377"];
m6_728 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.Undefined", span="1133-1133"];
m6_718 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1118-1118"];
m6_720 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="var valueStates = JsonWriter.StateArrayTempate[7]", span="1122-1122"];
m6_723 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.Integer", span="1128-1128"];
m6_726 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.Boolean", span="1131-1131"];
m6_724 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.Float", span="1129-1129"];
m6_725 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.String", span="1130-1130"];
m6_729 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="JsonToken.Date", span="1134-1134"];
m6_564 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="592-592"];
m6_857 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\r''", span="1362-1362"];
m6_862 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="'\\'", span="1370-1370"];
m6_863 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\\''", span="1371-1371"];
m6_858 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="'\f'", span="1364-1364"];
m6_861 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\b''", span="1368-1368"];
m6_864 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="'\u0085'", span="1373-1373"];
m6_859 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\f''", span="1365-1365"];
m6_860 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="'\b'", span="1367-1367"];
m6_865 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="escapedValue = @''\u0085''", span="1374-1374"];
m6_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (bool?)((JValue)null))", span="252-252"];
m6_173 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''1.0'', (string)(new JValue(1.0m)))", span="299-299"];
m6_602 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="663-663"];
m6_603 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="664-664"];
m6_604 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="649-649"];
m6_628 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", span="719-719"];
m6_609 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="682-682"];
m6_610 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="684-690"];
m6_611 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="JToken t = a[1][0]", span="692-692"];
m6_612 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="List<JToken> ancestors = t.Ancestors().ToList()", span="693-693"];
m6_613 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, ancestors.Count())", span="694-694"];
m6_614 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="695-695"];
m6_615 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(a, ancestors[1])", span="696-696"];
m6_616 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="682-682"];
m6_627 [cluster="Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.AncestorsAndSelf()", span="263-263"];
m6_629 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="721-727"];
m6_630 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JsonSerializerInternalReader.cs", label="JObject o = new JObject\r\n            {\r\n                {''prop1'', ''value1''}\r\n            }", span="729-732"];
m6_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool)(new JValue(1.0)))", span="308-308"];
m6_394 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)new JValue(DateTimeOffset.Now)", span="422-422"];
m6_395 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="422-422"];
m6_396 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="424-424"];
m6_411 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="430-430"];
m6_397 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (TimeSpan)new JValue(new Uri(''http://www.google.com''))", span="424-424"];
m6_398 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="424-424"];
m6_399 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="426-426"];
m6_400 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (Guid)new JValue(true)", span="426-426"];
m6_401 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="426-426"];
m6_402 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="427-427"];
m6_403 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (Guid)new JValue(1)", span="427-427"];
m6_404 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="427-427"];
m6_405 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="428-428"];
m6_406 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (Guid)new JValue(1.1)", span="428-428"];
m6_407 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="428-428"];
m6_408 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="429-429"];
m6_409 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (Guid)new JValue(1.1m)", span="429-429"];
m6_410 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="429-429"];
m6_412 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (Guid)JValue.CreateNull()", span="430-430"];
m6_413 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="430-430"];
m6_27 [cluster="string.String(char, int)", file="JsonSerializerInternalReader.cs", label="Entry string.String(char, int)", span="0-0"];
m6_948 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", span="1556-1556"];
m6_949 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonSerializerInternalReader.cs", label="UnmanagedResourceFakingJsonWriter.CreateAndDispose()", span="1558-1558"];
m6_950 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonSerializerInternalReader.cs", label="GC.Collect()", span="1559-1559"];
m6_951 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonSerializerInternalReader.cs", label="GC.WaitForPendingFinalizers()", span="1560-1560"];
m6_952 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, UnmanagedResourceFakingJsonWriter.DisposalCalls)", span="1561-1561"];
m6_953 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", span="1556-1556"];
m6_502 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="785-785"];
m6_552 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="865-865"];
m6_508 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="792-792"];
m6_509 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="794-794"];
m6_510 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="796-796"];
m6_512 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(0.0)", span="800-800"];
m6_515 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(1.0)", span="803-803"];
m6_523 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.MinValue)", span="811-811"];
m6_525 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="813-813"];
m6_527 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndArray()", span="816-816"];
m6_528 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="819-819"];
m6_551 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="863-863"];
m6_503 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="765-765"];
m6_504 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="439-439"];
m6_511 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="798-798"];
m6_553 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="866-866"];
m6_507 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="791-791"];
m6_513 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(0f)", span="801-801"];
m6_514 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(0.1)", span="802-802"];
m6_516 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(1.000001)", span="804-804"];
m6_522 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.MaxValue)", span="810-810"];
m6_524 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="812-812"];
m6_526 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(float.NaN)", span="814-814"];
m6_529 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="789-789"];
m6_505 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="447-447"];
m6_506 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="789-789"];
m6_517 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(0.000001)", span="805-805"];
m6_518 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.Epsilon)", span="806-806"];
m6_519 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="807-807"];
m6_520 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="808-808"];
m6_521 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.NaN)", span="809-809"];
m6_554 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="868-868"];
m6_555 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="870-870"];
m6_556 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.Integer, 1)", span="871-871"];
m6_971 [cluster="string.String(char[])", file="JsonSerializerInternalReader.cs", label="Entry string.String(char[])", span="0-0"];
m6_1054 [cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.Dispose(bool)", span="1446-1446"];
m6_947 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="493-493"];
m6_840 [cluster="Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.AddBeforeSelf(object)", span="241-241"];
m6_848 [cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2082-2082"];
m6_894 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1990-1990"];
m6_895 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label=appendDelimiters, span="1455-1455"];
m6_896 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="writer.Write(delimiter)", span="1457-1457"];
m6_856 [cluster="System.ICloneable.Clone()", file="JsonSerializerInternalReader.cs", label="Entry System.ICloneable.Clone()", span="0-0"];
m6_866 [cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="195-195"];
m6_870 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1193-1202"];
m6_872 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JToken.Parse(json)", span="1201-1201"];
m6_871 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="1195-1199"];
m6_873 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1193-1202"];
m6_897 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1327-1327"];
m6_110 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue((string)null)", span="193-193"];
m6_780 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1233-1233"];
m6_782 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.QuoteChar = '\''", span="1235-1235"];
m6_787 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1243-1243"];
m6_781 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.Formatting = Formatting.Indented", span="1234-1234"];
m6_790 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1247-1247"];
m6_783 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartArray()", span="1237-1237"];
m6_784 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1239-1239"];
m6_786 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1242-1242"];
m6_788 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1244-1244"];
m6_789 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.DateFormatString = ''yyyy gg''", span="1246-1246"];
m6_785 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1240-1240"];
m6_791 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1248-1248"];
m6_898 [cluster="System.IO.TextWriter.Write(char)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m6_327 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (DateTime)new JValue(1)", span="395-395"];
m6_328 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="395-395"];
m6_329 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="396-396"];
m6_343 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="400-400"];
m6_330 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (DateTime)new JValue(1.1)", span="396-396"];
m6_331 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="396-396"];
m6_332 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="397-397"];
m6_333 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (DateTime)new JValue(1.1m)", span="397-397"];
m6_334 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="397-397"];
m6_335 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="398-398"];
m6_336 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (DateTime)new JValue(TimeSpan.Zero)", span="398-398"];
m6_337 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="398-398"];
m6_338 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="399-399"];
m6_339 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (DateTime)new JValue(new Uri(''http://www.google.com''))", span="399-399"];
m6_340 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="399-399"];
m6_341 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="400-400"];
m6_342 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="var i = (DateTime)JValue.CreateNull()", span="400-400"];
m6_344 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="401-401"];
m6_345 [cluster="lambda expression", color=green, community=0, file="JsonSerializerInternalReader.cs", label="2: var i = (DateTime)new JValue(Guid.NewGuid())", span="401-401"];
m6_374 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="414-414"];
m6_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    6,\r\n                    new JArray(7, 8),\r\n                    new JArray(9, 10)\r\n                    )", span="185-191"];
m6_123 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="246-246"];
m6_78 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="157-157"];
m6_32 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerInternalReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_900 [cluster="string.ToCharArray()", file="JsonSerializerInternalReader.cs", label="Entry string.ToCharArray()", span="0-0"];
m6_172 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''1'', (string)(new JValue(1.0)))", span="298-298"];
m6_322 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="483-483"];
m6_71 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="147-147"];
m6_297 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474"];
m6_298 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="449-449"];
m6_299 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="451-451"];
m6_300 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="452-452"];
m6_301 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="454-454"];
m6_302 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="456-456"];
m6_303 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartObject()", span="458-458"];
m6_304 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="459-459"];
m6_305 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="460-460"];
m6_306 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="462-462"];
m6_307 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="463-463"];
m6_308 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="464-464"];
m6_309 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''Intel'')", span="466-466"];
m6_310 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="467-467"];
m6_311 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="468-468"];
m6_316 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="475-475"];
m6_317 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="477-477"];
m6_318 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="478-478"];
m6_319 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Drives[0]'', jsonWriter.Path)", span="479-479"];
m6_314 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="472-472"];
m6_312 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="470-470"];
m6_315 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="474-474"];
m6_313 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="471-471"];
m6_320 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEnd()", span="481-481"];
m6_272 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="358-358"];
m6_76 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="Assert.IsFalse(ms.CanRead)", span="154-154"];
m6_252 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="358-358"];
m6_735 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1143-1143"];
m6_1012 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", span="1675-1675"];
m6_1013 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1677-1677"];
m6_1014 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", span="1675-1675"];
m6_85 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(6, (int)next)", span="170-170"];
m6_970 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1623-1623"];
m6_803 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536"];
m6_631 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AncestorsAndSelf_Many()", file="JsonSerializerInternalReader.cs", label="JToken t1 = a[1][0]", span="734-734"];
m6_769 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m6_776 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="JObject o = new JObject()", span="970-970"];
m6_772 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="966-966"];
m6_773 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                o.Add(5);\r\n            }, ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'')", span="968-972"];
m6_774 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddValueToObject()", span="966-966"];
m6_775 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="968-972"];
m6_777 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="o.Add(5)", span="971-971"];
m6_82 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="147-147"];
m6_83 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m6_937 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991"];
m6_500 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndConstructor()", span="780-780"];
m6_97 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="177-177"];
m6_99 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="180-180"];
m6_101 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="184-184"];
m6_98 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="179-179"];
m6_103 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="186-186"];
m6_100 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="182-182"];
m6_102 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue('@')", span="185-185"];
m6_104 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(true)", span="187-187"];
m6_178 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''12/12/2000 12:12:12 +00:00'', (string)(new JValue(new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero))))", span="305-305"];
m6_177 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''12/12/2000 12:12:12'', (string)(new JValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))))", span="303-303"];
m6_258 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="368-368"];
m6_990 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", span="1640-1640"];
m6_991 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonSerializerInternalReader.cs", label="return TypeCode.Int32;", span="1642-1642"];
m6_992 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", span="1640-1640"];
m6_1009 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", span="1670-1670"];
m6_1010 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1672-1672"];
m6_1011 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", span="1670-1670"];
m6_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (bool?)JValue.CreateNull())", span="253-253"];
m6_250 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerInternalReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_732 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1118-1118"];
m6_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 0, 0, 0, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTime(2000, 12, 20, 0, 0, 0, DateTimeKind.Utc)))", span="245-245"];
m6_961 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1579-1579"];
m6_962 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label="SetWriteState(JsonToken.PropertyName, name)", span="1581-1581"];
m6_965 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label="_writer.Write(new string(name.ToCharArray().Reverse().ToArray()))", span="1588-1588"];
m6_963 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label=QuoteName, span="1583-1583"];
m6_964 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label="_writer.Write(QuoteChar)", span="1585-1585"];
m6_966 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label=QuoteName, span="1590-1590"];
m6_967 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label="_writer.Write(QuoteChar)", span="1592-1592"];
m6_968 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label="_writer.Write(':')", span="1595-1595"];
m6_969 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1579-1579"];
m6_934 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_919 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1569-1569"];
m6_957 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerInternalReader.cs", label="_writer = textWriter", span="1571-1571"];
m6_958 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1569-1569"];
m6_1003 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", span="1660-1660"];
m6_1004 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1662-1662"];
m6_1005 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", span="1660-1660"];
m6_793 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(TimeSpan.Zero)", span="1251-1251"];
m6_795 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(Guid.Empty)", span="1253-1253"];
m6_794 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(new Uri(''http://www.google.com/''))", span="1252-1252"];
m6_796 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="writer.WriteEnd()", span="1255-1255"];
m6_798 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1230-1230"];
m6_797 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''[\r\n  '2000-01-01T01:01:01Z',\r\n  '2000-01-01T01:01:01+00:00',\r\n  '\/Date(946688461000)\/',\r\n  '\/Date(946688461000+0000)\/',\r\n  '2000 A.D.',\r\n  '2000 A.D.',\r\n  'AQID',\r\n  '00:00:00',\r\n  'http://www.google.com/',\r\n  '00000000-0000-0000-0000-000000000000'\r\n]'', sw.ToString())", span="1257-1268"];
m6_799 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerInternalReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_697 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1076-1076"];
m6_37 [cluster="object.GetType()", file="JsonSerializerInternalReader.cs", label="Entry object.GetType()", span="0-0"];
m6_264 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="374-374"];
m6_734 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="150-150"];
m6_249 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerInternalReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_105 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(10)", span="188-188"];
m6_106 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(10.99)", span="189-189"];
m6_107 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(0.99)", span="190-190"];
m6_108 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(0.000000000000000001d)", span="191-191"];
m6_109 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(0.000000000000000001m)", span="192-192"];
m6_268 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Close()", span="378-378"];
m6_637 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="991-991"];
m6_638 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Formatting = Formatting.Indented", span="993-993"];
m6_640 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(data)", span="996-996"];
m6_641 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="999-999"];
m6_636 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="989-989"];
m6_639 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="994-994"];
m6_635 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="string text = ''Hello world.''", span="988-988"];
m6_634 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="986-986"];
m6_632 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="983-983"];
m6_633 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="985-985"];
m6_642 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="string result = sb.ToString()", span="1000-1000"];
m6_73 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", span="150-150"];
m6_117 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonSerializerInternalReader.cs", label="string result = sb.ToString()", span="202-202"];
m6_731 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(valueStates, stateArray[(int)valueToken], ''Error for '' + valueToken + '' states.'')", span="1136-1136"];
m6_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(10, (long)new JValue(10))", span="254-254"];
m6_982 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1617-1617"];
m6_983 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="token == JsonToken.EndObject", span="1619-1619"];
m6_985 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="base.WriteEnd(token)", span="1625-1625"];
m6_984 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="_writer.Write(''}}}'')", span="1621-1621"];
m6_986 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1617-1617"];
m6_996 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerInternalReader.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m6_924 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1482-1482"];
m6_925 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="var d = new Dictionary<string, int>\r\n            {\r\n                { ''a'', 1 },\r\n            }", span="1484-1487"];
m6_926 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="var jsonSerializerSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n            }", span="1488-1491"];
m6_930 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="serializer.Serialize(writer, d)", span="1497-1497"];
m6_927 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="var serializer = JsonSerializer.Create(jsonSerializerSettings)", span="1492-1492"];
m6_928 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="var stringWriter = new StringWriter()", span="1493-1493"];
m6_929 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="var writer = new JsonTextWriter(stringWriter) { QuoteName = false }", span="1495-1495"];
m6_932 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{\r\n  a: 1\r\n}'', stringWriter.ToString())", span="1501-1503"];
m6_931 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="writer.Close()", span="1498-1498"];
m6_933 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1482-1482"];
m6_253 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="360-360"];
m6_592 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="644-644"];
m6_593 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="645-645"];
m6_594 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="630-630"];
m6_1055 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.~UnmanagedResourceFakingJsonWriter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.~UnmanagedResourceFakingJsonWriter()", span="1752-1752"];
m6_1056 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.~UnmanagedResourceFakingJsonWriter()", file="JsonSerializerInternalReader.cs", label="Dispose(false)", span="1754-1754"];
m6_1057 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.~UnmanagedResourceFakingJsonWriter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.~UnmanagedResourceFakingJsonWriter()", span="1752-1752"];
m6_922 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1598-1598"];
m6_974 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerInternalReader.cs", label="SetWriteState(JsonToken.Null, null)", span="1600-1600"];
m6_975 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerInternalReader.cs", label="_writer.Write(''NULL!!!'')", span="1602-1602"];
m6_976 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1598-1598"];
m6_185 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1, (int)(new JValue(''1'')))", span="313-313"];
m6_29 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849"];
m6_431 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="441-441"];
m6_1041 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", span="1725-1725"];
m6_1042 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1727-1727"];
m6_1043 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", span="1725-1725"];
m6_188 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1m, (decimal)(new JValue(1.0)))", span="316-316"];
m6_435 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="678-678"];
m6_204 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC''), (Guid?)(new JValue(new Guid(''46EFE013-B56A-4E83-99E4-4DCE7678A5BC'').ToByteArray())))", span="332-332"];
m6_205 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual((sbyte?)1, (sbyte?)(new JValue((short?)1)))", span="333-333"];
m6_206 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (Uri)(JValue)null)", span="335-335"];
m6_207 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="336-336"];
m6_208 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="337-337"];
m6_209 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (Guid?)(JValue)null)", span="338-338"];
m6_210 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (TimeSpan?)(JValue)null)", span="339-339"];
m6_575 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(6, (int)a[0])", span="615-615"];
m6_578 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Assert.IsNull(t.Parent)", span="618-618"];
m6_574 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="t.Remove()", span="614-614"];
m6_577 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Assert.IsNull(t.Previous)", span="617-617"];
m6_576 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Assert.IsNull(t.Next)", span="616-616"];
m6_579 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="t = a[0]", span="620-620"];
m6_583 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Assert.IsNull(t.Previous)", span="625-625"];
m6_584 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Assert.IsNull(t.Parent)", span="626-626"];
m6_585 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="592-592"];
m6_587 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="630-630"];
m6_588 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="632-638"];
m6_589 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="JToken t = a[1]", span="640-640"];
m6_590 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="641-641"];
m6_591 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, afterTokens.Count)", span="643-643"];
m6_595 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="280-280"];
m6_596 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_597 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="649-649"];
m6_598 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="JArray a =\r\n                new JArray(\r\n                    5,\r\n                    new JArray(1),\r\n                    new JArray(1, 2),\r\n                    new JArray(1, 2, 3)\r\n                    )", span="651-657"];
m6_599 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="JToken t = a[2]", span="659-659"];
m6_600 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="660-660"];
m6_601 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2, beforeTokens.Count)", span="662-662"];
m6_348 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="528-528"];
m6_351 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="533-533"];
m6_354 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="538-538"];
m6_357 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="541-541"];
m6_360 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="544-544"];
m6_363 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue((double?)double.NegativeInfinity)", span="547-547"];
m6_366 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue((float?)float.NegativeInfinity)", span="550-550"];
m6_369 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="string expected = @''[\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]''", span="556-569"];
m6_372 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="528-528"];
m6_349 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="2: StringBuilder sb = new StringBuilder()", span="530-530"];
m6_350 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="531-531"];
m6_352 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="2: jsonWriter.Formatting = Formatting.Indented", span="535-535"];
m6_353 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.DefaultValue", span="536-536"];
m6_355 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: jsonWriter.WriteValue(double.NaN)", span="539-539"];
m6_356 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="540-540"];
m6_358 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: jsonWriter.WriteValue(float.NaN)", span="542-542"];
m6_359 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="543-543"];
m6_361 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: jsonWriter.WriteValue((double?)double.NaN)", span="545-545"];
m6_362 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue((double?)double.PositiveInfinity)", span="546-546"];
m6_364 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: jsonWriter.WriteValue((float?)float.NaN)", span="548-548"];
m6_365 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue((float?)float.PositiveInfinity)", span="549-549"];
m6_367 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: jsonWriter.WriteEndArray()", span="551-551"];
m6_368 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Flush()", span="553-553"];
m6_370 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: string result = sb.ToString()", span="570-570"];
m6_371 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(expected, result)", span="572-572"];
m6_373 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1167-1167"];
m6_765 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="json = sw.ToString()", span="1208-1208"];
m6_767 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", color=green, community=0, file="JsonSerializerInternalReader.cs", label="2: Assert.AreEqual(''\''\u5f20\'''', json)", span="1211-1211"];
m6_766 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(3, json.Length)", span="1210-1210"];
m6_768 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1179-1179"];
m6_439 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="685-685"];
m6_442 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="688-688"];
m6_324 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="486-486"];
m6_427 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="666-668"];
m6_430 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="649-649"];
m6_421 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="657-657"];
m6_445 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="693-696"];
m6_448 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="675-675"];
m6_418 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="652-652"];
m6_323 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndObject()", span="485-485"];
m6_326 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="449-449"];
m6_417 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="651-651"];
m6_420 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Formatting = Formatting.Indented", span="656-656"];
m6_423 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteWhitespace(''  '')", span="660-660"];
m6_426 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndArray()", span="663-663"];
m6_429 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(expected, result)", span="671-671"];
m6_444 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndArray()", span="690-690"];
m6_447 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(expected, result)", span="699-699"];
m6_438 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="683-683"];
m6_440 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.NaN)", span="686-686"];
m6_441 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="687-687"];
m6_443 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(float.NaN)", span="689-689"];
m6_325 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="487-487"];
m6_428 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="string result = sb.ToString()", span="669-669"];
m6_422 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="659-659"];
m6_416 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="649-649"];
m6_446 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="string result = sb.ToString()", span="697-697"];
m6_419 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="654-654"];
m6_425 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(double.NaN)", span="662-662"];
m6_424 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="661-661"];
m6_778 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1230-1230"];
m6_433 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="675-675"];
m6_436 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="680-680"];
m6_434 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="677-677"];
m6_437 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Formatting = Formatting.Indented", span="682-682"];
m6_921 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1574-1574"];
m6_959 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonSerializerInternalReader.cs", label="WritePropertyName(name, true)", span="1576-1576"];
m6_960 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1574-1574"];
m6_1000 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", span="1655-1655"];
m6_1001 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1657-1657"];
m6_1002 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", span="1655-1655"];
m6_671 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1045-1045"];
m6_672 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="1047-1047"];
m6_678 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartArray()", span="1057-1057"];
m6_682 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''Property1'')", span="1061-1061"];
m6_683 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1062-1062"];
m6_676 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1053-1053"];
m6_677 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.Formatting = Formatting.Indented", span="1055-1055"];
m6_679 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual('''', writer.Path)", span="1058-1058"];
m6_680 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="1059-1059"];
m6_681 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1060-1060"];
m6_673 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="1048-1048"];
m6_674 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="string text = ''Hello world.''", span="1050-1050"];
m6_675 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1051-1051"];
m6_684 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartArray()", span="1063-1063"];
m6_254 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="547-547"];
m6_255 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m6_259 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m6_266 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_269 [cluster="System.Guid.ToByteArray()", file="JsonSerializerInternalReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m6_248 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="238-238"];
m6_954 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", span="1736-1736"];
m6_1044 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", file="JsonSerializerInternalReader.cs", label="((IDisposable)new UnmanagedResourceFakingJsonWriter()).Dispose()", span="1738-1738"];
m6_1045 [cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", span="1736-1736"];
m6_566 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="883-883"];
m6_571 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<FormatException>(() => { jsonWriter.WriteToken(JsonToken.Integer, ''three''); }, ''Input string was not in a correct format.'')", span="892-892"];
m6_567 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="885-885"];
m6_568 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="886-886"];
m6_569 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="888-888"];
m6_570 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="890-890"];
m6_572 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<ArgumentNullException>(() => { jsonWriter.WriteToken(JsonToken.Integer); }, @''Value cannot be null.\r\nParameter name: value'')", span="894-895"];
m6_573 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="883-883"];
m6_581 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonSerializerInternalReader.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n\r\n                    jsonWriter.WriteValue(0.0);\r\n\r\n                    jsonWriter.WriteEndArray();\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, ''No token to close. Path ''.'')", span="902-916"];
m6_580 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="900-900"];
m6_582 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="900-900"];
m6_501 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndObject()", span="782-782"];
m6_779 [cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="569-569"];
m6_792 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="389-389"];
m6_211 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (byte[])(JValue)null)", span="340-340"];
m6_111 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="359-359"];
m6_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="238-238"];
m6_119 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(1L, (long)(new JValue(1)))", span="240-240"];
m6_321 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
m6_698 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''Property2'')", span="1077-1077"];
m6_699 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1078-1078"];
m6_706 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteValue(1)", span="1085-1085"];
m6_700 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartConstructor(''Constructor1'')", span="1079-1079"];
m6_701 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1080-1080"];
m6_704 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartArray()", span="1083-1083"];
m6_710 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="1089-1089"];
m6_711 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1090-1090"];
m6_712 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteEndArray()", span="1091-1091"];
m6_703 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1].Property2[0]'', writer.Path)", span="1082-1082"];
m6_705 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1084-1084"];
m6_707 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1].Property2[1][0]'', writer.Path)", span="1086-1086"];
m6_708 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteEnd()", span="1087-1087"];
m6_709 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1088-1088"];
m6_702 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="writer.WriteNull()", span="1081-1081"];
m6_713 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual('''', writer.Path)", span="1092-1092"];
m6_644 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonSerializerInternalReader.cs", label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="1004-1004"];
m6_993 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", span="1645-1645"];
m6_994 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1647-1647"];
m6_995 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", span="1645-1645"];
m6_77 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonSerializerInternalReader.cs", label="ms = new MemoryStream()", span="156-156"];
m6_120 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(2L, (long)new JArray(1, 2, 3)[1])", span="241-241"];
m6_956 [cluster="System.GC.WaitForPendingFinalizers()", file="JsonSerializerInternalReader.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m6_905 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1462-1462"];
m6_906 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="1464-1464"];
m6_907 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="CustomJsonTextWriter writer = new CustomJsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1465-1465"];
m6_917 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''{{{\r\n  ''''1ytreporP'''': NULL!!!\r\n}}}'', sw.ToString())", span="1476-1478"];
m6_908 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="1466-1466"];
m6_909 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1467-1467"];
m6_910 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(''Property1'')", span="1468-1468"];
m6_911 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Property, writer.WriteState)", span="1469-1469"];
m6_912 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''Property1'', writer.Path)", span="1470-1470"];
m6_913 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="writer.WriteNull()", span="1471-1471"];
m6_914 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1472-1472"];
m6_915 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="1473-1473"];
m6_916 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Start, writer.WriteState)", span="1474-1474"];
m6_918 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1462-1462"];
m6_938 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1508-1508"];
m6_939 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment'' + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Constructor\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="1510-1529"];
m6_940 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json))", span="1531-1531"];
m6_941 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter()", span="1533-1533"];
m6_944 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="w.WriteToken(r, true)", span="1537-1537"];
m6_942 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="JsonTextWriter w = new JsonTextWriter(sw)", span="1534-1534"];
m6_945 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(@''/*comment*//*hi*/*/{/*comment*/\r\n  ''''Name'''': /*comment*/ true/*comment after true*//*comment after comma*/,\r\n  ''''ExpiryDate'''': /*comment*/ new Constructor(\r\n    /*comment*/,\r\n    null\r\n    /*comment*/\r\n  ),\r\n  ''''Price'''': 3.99,\r\n  ''''Sizes'''': /*comment*/ [\r\n    /*comment*/\r\n    ''''Small''''\r\n    /*comment*/\r\n  ]/*comment*/\r\n}/*comment *//*comment 1 */'', sw.ToString())", span="1539-1552"];
m6_943 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="w.Formatting = Formatting.Indented", span="1535-1535"];
m6_946 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1508-1508"];
m6_35 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151"];
m6_179 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool)(new JValue(1)))", span="307-307"];
m6_1035 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", span="1715-1715"];
m6_1036 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1717-1717"];
m6_1037 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", span="1715-1715"];
m6_1030 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1705-1705"];
m6_1031 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="conversionType == typeof(int)", span="1707-1707"];
m6_1033 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new Exception(''Type not supported: '' + conversionType.FullName);", span="1712-1712"];
m6_1032 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="return _value;", span="1709-1709"];
m6_1034 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1705-1705"];
m6_902 [cluster="string.Equals(string, string)", file="JsonSerializerInternalReader.cs", label="Entry string.Equals(string, string)", span="0-0"];
m6_1015 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", span="1680-1680"];
m6_1016 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1682-1682"];
m6_1017 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", span="1680-1680"];
m6_955 [cluster="System.GC.Collect()", file="JsonSerializerInternalReader.cs", label="Entry System.GC.Collect()", span="0-0"];
m6_125 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="248-248"];
m6_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(true, (bool?)new JValue(true))", span="251-251"];
m6_200 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (Uri)(JValue.CreateNull()))", span="328-328"];
m6_201 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')), (string)(new JValue(Encoding.UTF8.GetBytes(''hi''))))", span="329-329"];
m6_202 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="CollectionAssert.AreEquivalent((byte[])Encoding.UTF8.GetBytes(''hi''), (byte[])(new JValue(Convert.ToBase64String(Encoding.UTF8.GetBytes(''hi'')))))", span="330-330"];
m6_175 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(null, (string)(JValue.CreateNull()))", span="301-301"];
m6_171 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(''1'', (string)(new JValue(1)))", span="297-297"];
m6_997 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", span="1650-1650"];
m6_998 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="throw new NotImplementedException();", span="1652-1652"];
m6_999 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", span="1650-1650"];
m6_232 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="328-328"];
m6_235 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''500W'')", span="331-331"];
m6_236 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="332-332"];
m6_237 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartArray()", span="333-333"];
m6_233 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''Intel'')", span="329-329"];
m6_124 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="926-926"];
m6_244 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="342-351"];
m6_203 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369"];
m6_227 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="StringBuilder sb = new StringBuilder()", span="320-320"];
m6_228 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="StringWriter sw = new StringWriter(sb)", span="321-321"];
m6_230 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.Formatting = Formatting.Indented", span="325-325"];
m6_231 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteStartObject()", span="327-327"];
m6_240 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="336-336"];
m6_234 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="330-330"];
m6_238 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="334-334"];
m6_241 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="337-337"];
m6_242 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteEndObject()", span="338-338"];
m6_243 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="339-339"];
m6_245 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="string result = sb.ToString()", span="352-352"];
m6_247 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="318-318"];
m6_226 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="318-318"];
m6_229 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="323-323"];
m6_239 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="jsonWriter.WriteComment(''(broken)'')", span="335-335"];
m6_246 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonSerializerInternalReader.cs", label="StringAssert.AreEqual(expected, result)", span="354-354"];
m6_899 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136"];
m6_903 [cluster="System.IO.TextWriter.Write(string)", file="JsonSerializerInternalReader.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m6_1047 [cluster="System.IDisposable.Dispose()", file="JsonSerializerInternalReader.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m6_1061 [file="JsonSerializerInternalReader.cs", label=jsonWriter, span=""];
m6_1062 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.CustomJsonTextWriter", span=""];
m6_1063 [file="JsonSerializerInternalReader.cs", label="out Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m6_1064 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m6_1065 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter", span=""];
m7_121 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonSerializerInternalWriter.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m7_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", span="225-225"];
m7_124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.IndexOf(value) != -1", span="230-230"];
m7_125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="referenceLoopHandling.GetValueOrDefault(Serializer.ReferenceLoopHandling)", span="232-232"];
m7_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="throw new InvalidOperationException(''Unexpected ReferenceLoopHandling value: '{0}'''.FormatWith(CultureInfo.InvariantCulture, Serializer.ReferenceLoopHandling));", span="241-241"];
m7_123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return true;", span="228-228"];
m7_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="value == null || contract is JsonPrimitiveContract", span="227-227"];
m7_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return true;", span="245-245"];
m7_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ReferenceLoopHandling.Error", span="234-234"];
m7_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ReferenceLoopHandling.Ignore", span="236-236"];
m7_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ReferenceLoopHandling.Serialize", span="238-238"];
m7_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="throw new JsonSerializationException(''Self referencing loop detected for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="235-235"];
m7_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return false;", span="237-237"];
m7_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return true;", span="239-239"];
m7_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", span="225-225"];
m7_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", span="617-617"];
m7_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", span="617-617"];
m7_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="TryConvertToString(entry.Key, entry.Key.GetType(), out propertyName)", span="623-623"];
m7_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="string propertyName", span="619-619"];
m7_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="entry.Key is IConvertible", span="621-621"];
m7_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="return propertyName;", span="624-624"];
m7_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="return entry.Key.ToString();", span="626-626"];
m7_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="JsonSerializerInternalWriter.cs", label="return Convert.ToString(entry.Key, CultureInfo.InvariantCulture);", span="622-622"];
m7_70 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="79-79"];
m7_158 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="JsonSerializerInternalWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m7_10 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="return s.ToLower(CultureInfo.InvariantCulture).Trim(new[] { ':' });", span="48-48"];
m7_11 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="41-41"];
m7_12 [cluster="string.ToLower(System.Globalization.CultureInfo)", file="JsonSerializerInternalWriter.cs", label="Entry string.ToLower(System.Globalization.CultureInfo)", span="0-0"];
m7_13 [cluster="string.Trim(params char[])", file="JsonSerializerInternalWriter.cs", label="Entry string.Trim(params char[])", span="0-0"];
m7_14 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.CanConvert(System.Type)", span="54-54"];
m7_117 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="14-14"];
m7_72 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="71-71"];
m7_135 [cluster="System.Collections.Generic.List<T>.IndexOf(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.IndexOf(T)", span="0-0"];
m7_193 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m7_262 [cluster="System.Runtime.Serialization.FormatterConverter.FormatterConverter()", file="JsonSerializerInternalWriter.cs", label="Entry System.Runtime.Serialization.FormatterConverter.FormatterConverter()", span="0-0"];
m7_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="throw new ArgumentNullException(''jsonWriter'');", span="67-67"];
m7_279 [cluster="System.Func<T, TResult>.Invoke(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_66 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="453-453"];
m7_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="256-256"];
m7_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="262-266"];
m7_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="259-259"];
m7_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="s = converter.ConvertToInvariantString(value)", span="271-271"];
m7_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="value is Type", span="288-288"];
m7_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="s = ((Type)value).AssemblyQualifiedName", span="290-290"];
m7_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="converter.CanConvertTo(typeof(string))", span="268-268"];
m7_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return true;", span="275-275"];
m7_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="s = null", span="294-294"];
m7_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return true;", span="291-291"];
m7_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="return false;", span="295-295"];
m7_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="256-256"];
m7_7 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="string s = (string)reader.Value", span="43-43"];
m7_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="362-362"];
m7_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="364-364"];
m7_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="362-362"];
m7_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", span="472-472"];
m7_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="474-474"];
m7_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.Add(value)", span="475-475"];
m7_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="value.GetObjectData(serializationInfo, Serializer.Context)", span="480-480"];
m7_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, serializationEntry.Value, GetContractSafe(serializationEntry.Value), null, null)", span="485-485"];
m7_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.RemoveAt(SerializeStack.Count - 1)", span="490-490"];
m7_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="491-491"];
m7_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="477-477"];
m7_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(serializationEntry.Name)", span="484-484"];
m7_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="488-488"];
m7_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new FormatterConverter())", span="479-479"];
m7_254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label=serializationInfo, span="482-482"];
m7_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract)", span="472-472"];
m7_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", span="639-639"];
m7_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="property.ShouldSerialize == null", span="641-641"];
m7_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return property.ShouldSerialize(target);", span="644-644"];
m7_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="642-642"];
m7_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", span="639-639"];
m7_261 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonSerializerInternalWriter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m7_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", span="502-502"];
m7_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="504-504"];
m7_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.Add(value)", span="505-505"];
m7_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, memberValue, GetContractSafe(memberValue), null, null)", span="519-519"];
m7_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.RemoveAt(SerializeStack.Count - 1)", span="525-525"];
m7_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="526-526"];
m7_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="507-507"];
m7_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(resolvedPropertyName)", span="518-518"];
m7_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="523-523"];
m7_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="object memberValue", span="511-511"];
m7_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="DynamicUtils.TryGetMember(value, memberName, out memberValue)", span="512-512"];
m7_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="value.GetDynamicMemberNames()", span="509-509"];
m7_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n            ? contract.PropertyNameResolver(memberName)\r\n            : memberName", span="514-516"];
m7_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", span="502-502"];
m7_247 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m7_0 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="32-32"];
m7_1 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue('':::'' + value.ToString().ToUpper(CultureInfo.InvariantCulture) + '':::'')", span="35-35"];
m7_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", span="64-64"];
m7_15 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerInternalWriter.cs", label="return objectType == typeof(string);", span="56-56"];
m7_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m7_196 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m7_36 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="356-356"];
m7_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(ReflectionUtils.GetTypeName(type, Serializer.TypeNameAssemblyFormat))", span="359-359"];
m7_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName)", span="358-358"];
m7_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="356-356"];
m7_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="298-298"];
m7_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="300-300"];
m7_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="306-306"];
m7_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="string s", span="302-302"];
m7_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(s)", span="304-304"];
m7_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="TryConvertToString(value, contract.UnderlyingType, out s)", span="303-303"];
m7_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="298-298"];
m7_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="367-367"];
m7_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="return ((value & flag) == flag);", span="369-369"];
m7_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="367-367"];
m7_214 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m7_263 [cluster="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalWriter.cs", label="Entry System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="0-0"];
m7_9 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="return null;", span="45-45"];
m7_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, collectionValueContract)", span="127-127"];
m7_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonPrimitiveContract", span="125-125"];
m7_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="(converter != null\r\n          || ((converter = valueContract.Converter) != null)\r\n          || ((converter = Serializer.GetMatchingConverter(valueContract.UnderlyingType)) != null)\r\n          || ((converter = valueContract.InternalConverter) != null))\r\n        && converter.CanWrite", span="117-121"];
m7_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeConvertable(writer, converter, value, valueContract)", span="123-123"];
m7_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="131-131"];
m7_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeObject(writer, value, (JsonObjectContract)valueContract, member, collectionValueContract)", span="135-135"];
m7_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeDictionary(writer, dictionaryContract.CreateWrapper(value), dictionaryContract, member, collectionValueContract)", span="140-140"];
m7_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeList(writer, arrayContract.CreateWrapper(value), arrayContract, member, collectionValueContract)", span="145-145"];
m7_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="((JToken)value).WriteTo(writer, (Serializer.Converters != null) ? Serializer.Converters.ToArray() : null)", span="149-149"];
m7_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeISerializable(writer, (ISerializable)value, (JsonISerializableContract)valueContract)", span="154-154"];
m7_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeDynamic(writer, (IDynamicMetaObjectProvider)value, (JsonDynamicContract)valueContract)", span="160-160"];
m7_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonConverter converter = (member != null) ? member.Converter : null", span="109-109"];
m7_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="value == null", span="111-111"];
m7_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteNull()", span="113-113"];
m7_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonStringContract", span="129-129"];
m7_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonObjectContract", span="133-133"];
m7_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonDictionaryContract", span="137-137"];
m7_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)valueContract", span="139-139"];
m7_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonArrayContract", span="142-142"];
m7_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)valueContract", span="144-144"];
m7_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonLinqContract", span="147-147"];
m7_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonISerializableContract", span="152-152"];
m7_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="valueContract is JsonDynamicContract", span="158-158"];
m7_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return;", span="114-114"];
m7_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="107-107"];
m7_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="165-165"];
m7_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="184-184"];
m7_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference = HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Objects)", span="186-186"];
m7_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return Serializer.ReferenceResolver.IsReferenced(this, value);", span="192-192"];
m7_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return false;", span="168-168"];
m7_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="bool? isReference = null", span="172-172"];
m7_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract is JsonArrayContract", span="183-183"];
m7_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="!isReference.Value", span="189-189"];
m7_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="value == null", span="167-167"];
m7_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract is JsonPrimitiveContract", span="169-169"];
m7_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="property != null", span="175-175"];
m7_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference == null", span="178-178"];
m7_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference == null", span="181-181"];
m7_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference = property.IsReference", span="176-176"];
m7_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference = contract.IsReference", span="179-179"];
m7_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return false;", span="190-190"];
m7_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return false;", span="170-170"];
m7_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="165-165"];
m7_71 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="549-549"];
m7_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(values.UnderlyingDictionary, Serializer.Context)", span="551-551"];
m7_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.Add(values.UnderlyingDictionary)", span="553-553"];
m7_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="bool isReference = contract.IsReference ?? HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Objects)", span="556-556"];
m7_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, values.UnderlyingDictionary))", span="560-560"];
m7_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionValueContract)", span="562-562"];
m7_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, values.UnderlyingDictionary.GetType())", span="564-564"];
m7_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonContract childValuesContract = Serializer.ContractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="567-567"];
m7_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="string propertyName = GetPropertyName(entry)", span="576-576"];
m7_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = GetContractSafe(value)", span="585-585"];
m7_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, valueContract)", span="587-587"];
m7_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="590-590"];
m7_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(value, null, contract)", span="594-594"];
m7_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, value, valueContract, null, childValuesContract)", span="599-599"];
m7_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(values.UnderlyingDictionary, contract, propertyName, ex)", span="604-604"];
m7_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="605-605"];
m7_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.RemoveAt(SerializeStack.Count - 1)", span="612-612"];
m7_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(values.UnderlyingDictionary, Serializer.Context)", span="614-614"];
m7_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="554-554"];
m7_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName)", span="559-559"];
m7_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName)", span="589-589"];
m7_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName)", span="597-597"];
m7_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="611-611"];
m7_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="object value = entry.Value", span="584-584"];
m7_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=isReference, span="557-557"];
m7_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="569-569"];
m7_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=d, span="574-574"];
m7_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="propertyName = (contract.PropertyNameResolver != null)\r\n                         ? contract.PropertyNameResolver(propertyName)\r\n                         : propertyName", span="578-580"];
m7_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=Exception, span="602-602"];
m7_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="throw;", span="607-607"];
m7_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="IDictionary d = values", span="572-572"];
m7_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="549-549"];
m7_157 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m7_329 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonSerializerInternalWriter.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m7_165 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="106-106"];
m7_190 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_330 [cluster="object.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry object.ToString()", span="0-0"];
m7_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="jsonWriter == null", span="66-66"];
m7_116 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m7_136 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_143 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="670-670"];
m7_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(jsonWriter, value, GetContractSafe(value), null, null)", span="69-69"];
m7_277 [cluster="System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", file="JsonSerializerInternalWriter.cs", label="Entry System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", span="133-133"];
m7_39 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m7_142 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="45-45"];
m7_120 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="51-51"];
m7_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="391-391"];
m7_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(values.UnderlyingCollection, Serializer.Context)", span="393-393"];
m7_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.Add(values.UnderlyingCollection)", span="395-395"];
m7_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="bool isReference = contract.IsReference ?? HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="397-397"];
m7_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, collectionValueContract)", span="398-398"];
m7_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, values.UnderlyingCollection))", span="407-407"];
m7_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, values.UnderlyingCollection.GetType())", span="411-411"];
m7_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonContract childValuesContract = Serializer.ContractResolver.ResolveContract(contract.CollectionItemType ?? typeof(object))", span="416-416"];
m7_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonContract valueContract = GetContractSafe(value)", span="428-428"];
m7_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, valueContract)", span="430-430"];
m7_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="432-432"];
m7_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="CheckForCircularReference(value, null, contract)", span="436-436"];
m7_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, value, valueContract, null, childValuesContract)", span="438-438"];
m7_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(values.UnderlyingCollection, contract, index, ex)", span="444-444"];
m7_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="445-445"];
m7_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.RemoveAt(SerializeStack.Count - 1)", span="462-462"];
m7_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(values.UnderlyingCollection, Serializer.Context)", span="464-464"];
m7_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="402-402"];
m7_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName)", span="406-406"];
m7_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName)", span="413-413"];
m7_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="459-459"];
m7_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=values, span="424-424"];
m7_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference || includeTypeDetails", span="400-400"];
m7_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=isReference, span="404-404"];
m7_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="isReference || includeTypeDetails", span="457-457"];
m7_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=includeTypeDetails, span="409-409"];
m7_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartArray()", span="418-418"];
m7_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=Exception, span="442-442"];
m7_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="int index = 0", span="422-422"];
m7_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="throw;", span="447-447"];
m7_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="420-420"];
m7_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndArray()", span="455-455"];
m7_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="391-391"];
m7_336 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="300-300"];
m7_37 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292"];
m7_156 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="490-490"];
m7_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", span="647-647"];
m7_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="property.GetIsSpecified == null", span="649-649"];
m7_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return property.GetIsSpecified(target);", span="652-652"];
m7_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="return true;", span="650-650"];
m7_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", span="647-647"];
m7_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="92-92"];
m7_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, System.Exception)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, System.Exception)", span="100-100"];
m7_34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="530-530"];
m7_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="HasFlag(((member != null) ? member.TypeNameHandling : null) ?? Serializer.TypeNameHandling, typeNameHandlingFlag)", span="532-532"];
m7_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="(member.TypeNameHandling ?? Serializer.TypeNameHandling) == TypeNameHandling.Auto && contract.UnderlyingType != member.PropertyType", span="537-537"];
m7_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Serializer.TypeNameHandling == TypeNameHandling.Auto && contract.UnderlyingType != collectionValueContract.UnderlyingType", span="542-542"];
m7_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="member != null", span="535-535"];
m7_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="collectionValueContract != null", span="540-540"];
m7_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return true;", span="533-533"];
m7_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return true;", span="538-538"];
m7_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return false;", span="546-546"];
m7_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return true;", span="543-543"];
m7_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="530-530"];
m7_8 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalWriter.cs", label="s == null", span="44-44"];
m7_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return Serializer.ContractResolver.ResolveContract(value.GetType());", span="85-85"];
m7_16 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.CanConvert(System.Type)", span="54-54"];
m7_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="return null;", span="83-83"];
m7_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="80-80"];
m7_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", span="64-64"];
m7_248 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m7_341 [cluster="System.Predicate<T>.Invoke(T)", file="JsonSerializerInternalWriter.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m7_38 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1019-1019"];
m7_278 [cluster="Newtonsoft.Json.Utilities.DynamicUtils.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.DynamicUtils.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="98-98"];
m7_65 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="634-634"];
m7_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="309-309"];
m7_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="311-311"];
m7_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.Add(value)", span="313-313"];
m7_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="bool isReference = contract.IsReference ?? HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Objects)", span="316-316"];
m7_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, value))", span="320-320"];
m7_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionValueContract)", span="322-322"];
m7_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="324-324"];
m7_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="!property.Ignored && property.Readable && ShouldSerialize(property, value) && IsSpecified(property, value)", span="333-333"];
m7_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="JsonContract memberContract = GetContractSafe(memberValue)", span="336-336"];
m7_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteMemberInfoProperty(writer, memberValue, property, memberContract)", span="338-338"];
m7_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="IsErrorHandled(value, contract, property.PropertyName, ex)", span="343-343"];
m7_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="HandleError(writer, initialDepth)", span="344-344"];
m7_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.RemoveAt(SerializeStack.Count - 1)", span="351-351"];
m7_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="353-353"];
m7_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="314-314"];
m7_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName)", span="319-319"];
m7_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="350-350"];
m7_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=isReference, span="317-317"];
m7_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="int initialDepth = writer.Top", span="327-327"];
m7_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="contract.Properties", span="329-329"];
m7_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="object memberValue = property.ValueProvider.GetValue(value)", span="335-335"];
m7_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label=Exception, span="341-341"];
m7_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="throw;", span="346-346"];
m7_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="309-309"];
m7_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", span="372-372"];
m7_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(value, null, contract)", span="374-374"];
m7_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, value)", span="376-376"];
m7_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(value, null, contract)", span="380-380"];
m7_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.Add(value)", span="383-383"];
m7_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="385-385"];
m7_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeStack.RemoveAt(SerializeStack.Count - 1)", span="387-387"];
m7_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return;", span="381-381"];
m7_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", span="372-372"];
m7_75 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="337-337"];
m7_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="195-195"];
m7_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer.NullValueHandling) == NullValueHandling.Ignore &&\r\n          memberValue == null", span="200-201"];
m7_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="property.DefaultValueHandling.GetValueOrDefault(Serializer.DefaultValueHandling) ==\r\n          DefaultValueHandling.Ignore && MiscellaneousUtils.ValueEquals(memberValue, defaultValue)", span="204-205"];
m7_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="ShouldWriteReference(memberValue, property, contract)", span="208-208"];
m7_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="WriteReference(writer, memberValue)", span="211-211"];
m7_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="!CheckForCircularReference(memberValue, property.ReferenceLoopHandling, contract)", span="215-215"];
m7_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="SerializeValue(writer, memberValue, contract, property, null)", span="222-222"];
m7_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName)", span="210-210"];
m7_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(propertyName)", span="221-221"];
m7_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="object defaultValue = property.DefaultValue", span="198-198"];
m7_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return;", span="202-202"];
m7_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return;", span="206-206"];
m7_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return;", span="212-212"];
m7_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="return;", span="216-216"];
m7_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="memberValue == null && property.Required == Required.Always", span="218-218"];
m7_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="string propertyName = property.PropertyName", span="197-197"];
m7_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="throw new JsonSerializationException(''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="219-219"];
m7_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="195-195"];
m7_97 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="54-54"];
m7_20 [cluster="object.GetType()", file="JsonSerializerInternalWriter.cs", label="Entry object.GetType()", span="0-0"];
m7_21 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="42-42"];
m7_166 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="114-114"];
m7_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="629-629"];
m7_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="ClearErrorContext()", span="631-631"];
m7_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.Top > initialDepth", span="633-633"];
m7_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEnd()", span="635-635"];
m7_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="629-629"];
m7_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="88-88"];
m7_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: contract.UnderlyingType == typeof (byte[])", span="90-90"];
m7_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionValueContract)", span="92-92"];
m7_32 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: writer.WriteValue(value)", span="104-104"];
m7_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=1, file="JsonSerializerInternalWriter.cs", label="0: includeTypeDetails", span="93-93"];
m7_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: writer.WriteStartObject()", span="95-95"];
m7_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: WriteTypeProperty(writer, contract.CreatedType)", span="96-96"];
m7_28 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: writer.WritePropertyName(JsonTypeReflector.ValuePropertyName)", span="97-97"];
m7_29 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="0: writer.WriteValue(value)", span="98-98"];
m7_30 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="1: writer.WriteEndObject()", span="99-99"];
m7_31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="JsonSerializerInternalWriter.cs", label="1: return;", span="100-100"];
m7_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="88-88"];
m7_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="248-248"];
m7_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, value))", span="252-252"];
m7_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="250-250"];
m7_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName)", span="251-251"];
m7_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="253-253"];
m7_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="248-248"];
m7_200 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle)", span="44-44"];
m7_35 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m7_346 [file="JsonSerializerInternalWriter.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m8_1350 [cluster="XmlDocument.cstr", file="JsonSerializerTest.cs", label="Entry XmlDocument.cstr", span=""];
m8_565 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="7-7"];
m8_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2534-2534"];
m8_1123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="2536-2536"];
m8_1124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2534-2534"];
m8_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3357-3357"];
m8_1548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Employee joe = new Employee()", span="3359-3359"];
m8_1549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="joe.Name = ''Joe Employee''", span="3360-3360"];
m8_1552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="joe.Manager = mike", span="3364-3364"];
m8_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="3367-3367"];
m8_1550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Employee mike = new Employee()", span="3361-3361"];
m8_1551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="mike.Name = ''Mike Manager''", span="3362-3362"];
m8_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="mike.Manager = mike", span="3365-3365"];
m8_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="3380-3380"];
m8_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3357-3357"];
m8_1605 [cluster="System.Console.WriteLine(string, object)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m8_1080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="2369-2369"];
m8_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1421-1421"];
m8_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="_name = name", span="1423-1423"];
m8_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Age = age", span="1424-1424"];
m8_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Rank = rank", span="1425-1425"];
m8_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Title = title", span="1426-1426"];
m8_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1421-1421"];
m8_618 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="9-9"];
m8_1351 [cluster="Unk.LoadXml", file="JsonSerializerTest.cs", label="Entry Unk.LoadXml", span=""];
m8_300 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="386-386"];
m8_1214 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m8_1369 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="659-659"];
m8_410 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m8_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1650-1650"];
m8_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="1652-1652"];
m8_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="1654-1654"];
m8_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="1656-1656"];
m8_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="1657-1657"];
m8_793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="1658-1658"];
m8_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1650-1650"];
m8_756 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="278-278"];
m8_61 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m8_1443 [cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="7-7"];
m8_28 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m8_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2302-2302"];
m8_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label=initial, span="2304-2304"];
m8_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Add(pair.Key, pair.Value)", span="2306-2306"];
m8_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2302-2302"];
m8_1503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3259-3259"];
m8_1504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="3263-3263"];
m8_1505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', 1)", span="3264-3264"];
m8_1506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="3265-3265"];
m8_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="3270-3270"];
m8_1507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="3267-3267"];
m8_1508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="3268-3268"];
m8_1509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="3269-3269"];
m8_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child)", span="3272-3272"];
m8_1512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3273-3273"];
m8_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3259-3259"];
m8_1406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3072-3072"];
m8_1407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="GenericListTestClass c = new GenericListTestClass()", span="3074-3074"];
m8_1408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="c.GenericList.Add(''1'')", span="3075-3075"];
m8_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="c.GenericList.Add(''2'')", span="3076-3076"];
m8_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3078-3078"];
m8_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="3080-3080"];
m8_1412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newValue.GenericList.Count)", span="3081-3081"];
m8_1413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="3082-3082"];
m8_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3072-3072"];
m8_243 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="653-653"];
m8_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="1836-1836"];
m8_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="1838-1838"];
m8_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, l.Count)", span="1839-1839"];
m8_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.3m, l[0])", span="1841-1841"];
m8_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="1842-1842"];
m8_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, l[2])", span="1843-1843"];
m8_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="1836-1836"];
m8_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1582-1582"];
m8_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="1584-1587"];
m8_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="1589-1589"];
m8_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="1591-1591"];
m8_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1582-1582"];
m8_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1093-1093"];
m8_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1095-1095"];
m8_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1097-1097"];
m8_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="1108-1108"];
m8_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1099-1099"];
m8_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1100-1100"];
m8_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1101-1101"];
m8_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1102-1102"];
m8_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1103-1103"];
m8_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1104-1104"];
m8_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1106-1106"];
m8_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1093-1093"];
m8_851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="1808-1808"];
m8_852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="1810-1810"];
m8_853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Event e = JsonConvert.DeserializeObject<Event>(json)", span="1812-1812"];
m8_854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="1808-1808"];
m8_448 [cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m8_765 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m8_1215 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m8_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3225-3225"];
m8_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Movie p = new Movie()", span="3227-3227"];
m8_1487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="p.Name = ''Existing,''", span="3228-3228"];
m8_1488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n      {\r\n        Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n      })", span="3230-3233"];
m8_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(p.Name, ''Existing,Appended'')", span="3235-3235"];
m8_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3225-3225"];
m8_130 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="284-284"];
m8_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="3848-3848"];
m8_1871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="4193-4193"];
m8_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="4195-4200"];
m8_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="4202-4202"];
m8_1874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(40, p.Age)", span="4203-4203"];
m8_1875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(44.4, p.Height)", span="4204-4204"];
m8_1876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4d, p.Price)", span="4205-4205"];
m8_1877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="4193-4193"];
m8_268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="576-576"];
m8_269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="578-578"];
m8_270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="579-579"];
m8_271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="576-576"];
m8_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1080-1080"];
m8_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="1082-1082"];
m8_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="1083-1083"];
m8_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="1084-1084"];
m8_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1085-1085"];
m8_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1087-1087"];
m8_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1089-1089"];
m8_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1080-1080"];
m8_1613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="3564-3564"];
m8_1614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="3566-3566"];
m8_1615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="3568-3568"];
m8_1616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="3569-3569"];
m8_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3571-3571"];
m8_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="3573-3576"];
m8_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n        JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="3578-3579"];
m8_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="3581-3581"];
m8_1621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="3564-3564"];
m8_449 [cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m8_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2294-2294"];
m8_1043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = ''{key1:'value',key2:'value',key3:'value'}''", span="2296-2296"];
m8_1044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="2297-2297"];
m8_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2294-2294"];
m8_157 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m8_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2544-2544"];
m8_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="2546-2546"];
m8_1132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2544-2544"];
m8_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", span="3156-3156"];
m8_1218 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m8_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeName()", span="3313-3313"];
m8_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs", label="return _shouldSerializeName;", span="3315-3315"];
m8_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeName()", span="3313-3313"];
m8_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2204-2204"];
m8_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="this._dict1.Add(item.Key, item)", span="2206-2206"];
m8_1017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2204-2204"];
m8_1711 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m8_229 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_1824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4068-4068"];
m8_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="4070-4070"];
m8_1826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="4071-4071"];
m8_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="4068-4068"];
m8_1584 [cluster="Unk.IsFalse", file="JsonSerializerTest.cs", label="Entry Unk.IsFalse", span=""];
m8_773 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="215-215"];
m8_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", span="3503-3503"];
m8_1721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="3813-3813"];
m8_1722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="string json = ''{Amount:123456789876543.21}''", span="3815-3815"];
m8_1723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Invoice i = JsonConvert.DeserializeObject<Invoice>(json)", span="3816-3816"];
m8_1724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="3817-3817"];
m8_1725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="3813-3813"];
m8_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="3836-3836"];
m8_317 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m8_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="4224-4224"];
m8_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="4226-4226"];
m8_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="4228-4228"];
m8_1888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="4230-4230"];
m8_1889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="4224-4224"];
m8_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2427-2427"];
m8_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="2429-2429"];
m8_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="2434-2434"];
m8_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(''dictionary'');", span="2431-2431"];
m8_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="2436-2436"];
m8_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2427-2427"];
m8_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1022-1022"];
m8_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1024-1029"];
m8_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1031-1031"];
m8_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1033-1033"];
m8_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.MiddleName)", span="1034-1034"];
m8_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.LastName)", span="1035-1035"];
m8_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1022-1022"];
m8_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3034-3034"];
m8_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="3036-3036"];
m8_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3034-3034"];
m8_952 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m8_1403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3065-3065"];
m8_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs", label="GenericList = new List<string>()", span="3067-3067"];
m8_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3065-3065"];
m8_418 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m8_1099 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m8_1147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="2592-2592"];
m8_1148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="2594-2594"];
m8_1149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="2595-2595"];
m8_1150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="2596-2596"];
m8_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_personValue = personValue", span="2597-2597"];
m8_1152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="2598-2598"];
m8_1153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="2592-2592"];
m8_1090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2486-2486"];
m8_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="2488-2488"];
m8_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2486-2486"];
m8_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="3799-3799"];
m8_1714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="3801-3801"];
m8_1715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="3802-3802"];
m8_1716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="3799-3799"];
m8_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3320-3320"];
m8_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="3322-3322"];
m8_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="c.Name = ''James''", span="3323-3323"];
m8_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="c.Age = 27", span="3324-3324"];
m8_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3326-3326"];
m8_1536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="c._shouldSerializeName = true", span="3332-3332"];
m8_1537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3333-3333"];
m8_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="3328-3330"];
m8_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="3335-3338"];
m8_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="3340-3340"];
m8_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="3341-3341"];
m8_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(27, deserialized.Age)", span="3342-3342"];
m8_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3320-3320"];
m8_665 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="580-580"];
m8_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="2917-2917"];
m8_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="2919-2919"];
m8_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="2920-2920"];
m8_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="2921-2921"];
m8_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="2923-2923"];
m8_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="2939-2939"];
m8_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="2940-2940"];
m8_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="2924-2935"];
m8_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, json)", span="2936-2936"];
m8_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="2938-2938"];
m8_1332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="2942-2942"];
m8_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="2917-2917"];
m8_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="205-205"];
m8_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="207-207"];
m8_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="209-209"];
m8_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="211-211"];
m8_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="212-214"];
m8_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="205-205"];
m8_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2496-2496"];
m8_1097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="_innerDictionary.Clear()", span="2498-2498"];
m8_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2496-2496"];
m8_76 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m8_1890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="4233-4233"];
m8_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="864-864"];
m8_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="866-866"];
m8_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="867-867"];
m8_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="868-868"];
m8_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="870-870"];
m8_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="871-871"];
m8_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="873-873"];
m8_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="875-875"];
m8_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="876-876"];
m8_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="864-864"];
m8_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="1900-1900"];
m8_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'')", span="1902-1902"];
m8_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="1900-1900"];
m8_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="3889-3889"];
m8_1757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="3889-3889"];
m8_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="2884-2884"];
m8_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field1 = g", span="2887-2887"];
m8_1312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field2 = g", span="2888-2888"];
m8_1313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property1 = g", span="2889-2889"];
m8_1314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property2 = g", span="2890-2890"];
m8_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property3 = g", span="2891-2891"];
m8_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property4 = g", span="2892-2892"];
m8_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property5 = g", span="2893-2893"];
m8_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property6 = g", span="2894-2894"];
m8_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property7 = g", span="2895-2895"];
m8_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property8 = g", span="2896-2896"];
m8_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="2884-2884"];
m8_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="895-895"];
m8_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="897-897"];
m8_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="899-899"];
m8_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="900-900"];
m8_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="902-902"];
m8_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="903-903"];
m8_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="895-895"];
m8_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1595-1595"];
m8_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = new Content\r\n        {\r\n          Text = ''Blah, blah, blah'',\r\n          Children = new List<Content>\r\n            {\r\n              new Content { Text = ''First'' },\r\n              new Content { Text = ''Second'' }\r\n            }\r\n        }", span="1597-1605"];
m8_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="1607-1607"];
m8_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="1609-1621"];
m8_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1595-1595"];
m8_1640 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m8_1034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="2198-2198"];
m8_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="3513-3513"];
m8_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="FamilyDetails joe = new FamilyDetails()", span="3515-3515"];
m8_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="joe.Name = ''Joe Family Details''", span="3516-3516"];
m8_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="joe.NumberOfChildren = 4", span="3517-3517"];
m8_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="joe.NumberOfChildrenSpecified = true", span="3518-3518"];
m8_1595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="3525-3525"];
m8_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="FamilyDetails martha = new FamilyDetails()", span="3520-3520"];
m8_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="martha.Name = ''Martha Family Details''", span="3521-3521"];
m8_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="martha.NumberOfChildren = 3", span="3522-3522"];
m8_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="martha.NumberOfChildrenSpecified = false", span="3523-3523"];
m8_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="3535-3535"];
m8_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="3537-3537"];
m8_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="3538-3538"];
m8_1599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="3540-3540"];
m8_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="3542-3542"];
m8_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="3543-3543"];
m8_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="3545-3545"];
m8_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="3513-3513"];
m8_1739 [cluster="string.Format(string, object, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m8_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="4294-4294"];
m8_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="B = 2", span="4296-4296"];
m8_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="4294-4294"];
m8_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="739-739"];
m8_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="741-741"];
m8_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="743-743"];
m8_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p1)", span="746-746"];
m8_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p2)", span="747-747"];
m8_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="749-749"];
m8_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="744-744"];
m8_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="751-761"];
m8_386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="763-763"];
m8_387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="765-765"];
m8_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="768-768"];
m8_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="769-769"];
m8_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="770-770"];
m8_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="739-739"];
m8_1182 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m8_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="996-996"];
m8_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n      {\r\n        BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n        FirstName = ''Bob'',\r\n        LastName = ''Smith'',\r\n        MiddleName = ''Cosmo''\r\n      }", span="998-1004"];
m8_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1006-1006"];
m8_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'', json)", span="1008-1013"];
m8_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1015-1015"];
m8_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1017-1017"];
m8_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1018-1018"];
m8_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="996-996"];
m8_59 [cluster="Unk.WriteObject", file="JsonSerializerTest.cs", label="Entry Unk.WriteObject", span=""];
m8_470 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m8_1808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4030-4030"];
m8_1809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Value = val", span="4032-4032"];
m8_1810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="4030-4030"];
m8_1444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3158-3158"];
m8_1445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(value)", span="3160-3160"];
m8_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3158-3158"];
m8_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2336-2336"];
m8_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="B value = new B()", span="2338-2338"];
m8_1052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="2339-2339"];
m8_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="2341-2346"];
m8_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2336-2336"];
m8_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1328-1328"];
m8_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1330-1330"];
m8_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="1331-1331"];
m8_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1333-1333"];
m8_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1328-1328"];
m8_1870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", span="4167-4167"];
m8_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1040-1040"];
m8_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1042-1047"];
m8_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1049-1049"];
m8_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1040-1040"];
m8_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="2999-2999"];
m8_1385 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m8_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2491-2491"];
m8_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(key, value)", span="2493-2493"];
m8_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2491-2491"];
m8_62 [cluster="System.Console.WriteLine()", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m8_605 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m8_817 [cluster="Unk.IsInstanceOfType", file="JsonSerializerTest.cs", label="Entry Unk.IsInstanceOfType", span=""];
m8_1133 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m8_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2624-2624"];
m8_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="2626-2626"];
m8_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="2627-2627"];
m8_1192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="2628-2628"];
m8_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''personValue'', _personValue)", span="2629-2629"];
m8_1194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="2630-2630"];
m8_1195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullableInt'', null)", span="2631-2631"];
m8_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="2633-2633"];
m8_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''byteValue'', _byteValue)", span="2634-2634"];
m8_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''charValue'', _charValue)", span="2635-2635"];
m8_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="2636-2636"];
m8_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="2637-2637"];
m8_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''shortValue'', _shortValue)", span="2638-2638"];
m8_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''longValue'', _longValue)", span="2639-2639"];
m8_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="2640-2640"];
m8_1204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''floatValue'', _floatValue)", span="2641-2641"];
m8_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="2642-2642"];
m8_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''uintValue'', _uintValue)", span="2643-2643"];
m8_1207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="2644-2644"];
m8_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2624-2624"];
m8_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="1975-1975"];
m8_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo f = new Foo()", span="1977-1977"];
m8_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="1978-1978"];
m8_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="1979-1979"];
m8_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="1980-1980"];
m8_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="1982-1982"];
m8_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="1983-1989"];
m8_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="1991-1991"];
m8_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="1992-1992"];
m8_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="1993-1993"];
m8_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="1994-1994"];
m8_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="1995-1995"];
m8_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="1975-1975"];
m8_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="385-385"];
m8_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a1 = new Article(''a1'')", span="387-387"];
m8_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a2 = new Article(''a2'')", span="388-388"];
m8_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a1)", span="391-391"];
m8_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="390-390"];
m8_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a2)", span="392-392"];
m8_152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="394-394"];
m8_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="398-398"];
m8_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="399-399"];
m8_153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="396-396"];
m8_156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="385-385"];
m8_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="974-974"];
m8_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="976-976"];
m8_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="977-977"];
m8_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="980-980"];
m8_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="979-979"];
m8_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="982-982"];
m8_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="983-983"];
m8_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="985-985"];
m8_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="986-986"];
m8_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="989-989"];
m8_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="988-988"];
m8_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="991-991"];
m8_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="992-992"];
m8_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="974-974"];
m8_207 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_210 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m8_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", span="3345-3345"];
m8_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="2762-2762"];
m8_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n          @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="2764-2774"];
m8_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2776-2776"];
m8_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2777-2777"];
m8_1269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2778-2778"];
m8_1270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2779-2779"];
m8_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2780-2780"];
m8_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2781-2781"];
m8_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2782-2782"];
m8_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2783-2783"];
m8_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n          @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="2785-2805"];
m8_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2807-2807"];
m8_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2808-2808"];
m8_1278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2809-2809"];
m8_1279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2810-2810"];
m8_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2811-2811"];
m8_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2812-2812"];
m8_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2813-2813"];
m8_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2814-2814"];
m8_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="2816-2816"];
m8_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="2817-2817"];
m8_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="2818-2818"];
m8_1287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="2819-2819"];
m8_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2820-2820"];
m8_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2821-2821"];
m8_1290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="2822-2822"];
m8_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2823-2823"];
m8_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2824-2824"];
m8_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2825-2825"];
m8_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="2762-2762"];
m8_1751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="3874-3874"];
m8_1752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="3874-3874"];
m8_362 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="538-538"];
m8_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1268-1268"];
m8_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1270-1275"];
m8_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1277-1277"];
m8_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="1278-1278"];
m8_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="1280-1280"];
m8_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1281-1281"];
m8_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="1282-1282"];
m8_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="1283-1283"];
m8_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1268-1268"];
m8_441 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="9-9"];
m8_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="611-611"];
m8_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="613-613"];
m8_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="615-615"];
m8_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="618-618"];
m8_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="616-616"];
m8_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="620-620"];
m8_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="622-622"];
m8_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="611-611"];
m8_1217 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m8_1447 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1019-1019"];
m8_419 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="549-549"];
m8_208 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="518-518"];
m8_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n        new\r\n        {\r\n          StringValue = ''I am a string'',\r\n          IntValue = int.MaxValue,\r\n          NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n          NestedArray = new[] { 1, 2 },\r\n          Product = new Product() { Name = ''TestProduct'' }\r\n        }", span="520-528"];
m8_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="530-530"];
m8_234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="533-533"];
m8_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="531-531"];
m8_235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="534-534"];
m8_236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="535-535"];
m8_237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="536-536"];
m8_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="537-537"];
m8_239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="538-538"];
m8_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="539-539"];
m8_241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="540-540"];
m8_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="518-518"];
m8_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3291-3291"];
m8_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="3293-3293"];
m8_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="3295-3295"];
m8_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', cc.First)", span="3296-3296"];
m8_1522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, cc.Second)", span="3297-3297"];
m8_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, cc.Ignored)", span="3298-3298"];
m8_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3291-3291"];
m8_392 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m8_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="3022-3022"];
m8_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="3657-3657"];
m8_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="2948-2948"];
m8_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="2950-2950"];
m8_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlDocument document = new XmlDocument()", span="2951-2951"];
m8_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = document", span="2953-2953"];
m8_1343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="2955-2955"];
m8_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="2964-2964"];
m8_1341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="2952-2952"];
m8_1344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="2956-2960"];
m8_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, json)", span="2961-2961"];
m8_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="2963-2963"];
m8_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="2948-2948"];
m8_1112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2516-2516"];
m8_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _innerDictionary.GetEnumerator();", span="2518-2518"];
m8_1114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2516-2516"];
m8_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="3854-3854"];
m8_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="VectorParent obj = new VectorParent()", span="3856-3856"];
m8_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="3857-3857"];
m8_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="string str = JsonConvert.SerializeObject(obj)", span="3859-3859"];
m8_1744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="3861-3861"];
m8_1745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, obj.Position.X)", span="3863-3863"];
m8_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="3864-3864"];
m8_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="3865-3865"];
m8_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="3854-3854"];
m8_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1448-1448"];
m8_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1450-1450"];
m8_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="1451-1451"];
m8_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1452-1452"];
m8_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="1454-1459"];
m8_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1461-1461"];
m8_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1462-1462"];
m8_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1448-1448"];
m8_345 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m8_337 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m8_1864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", span="4130-4130"];
m8_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="788-788"];
m8_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="790-790"];
m8_405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="792-792"];
m8_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="793-793"];
m8_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="795-795"];
m8_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="797-797"];
m8_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="788-788"];
m8_8 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="46-46"];
m8_1585 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m8_1803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="3998-3998"];
m8_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="2730-2730"];
m8_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = new AA(2)", span="2732-2732"];
m8_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="2733-2733"];
m8_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="2734-2740"];
m8_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = new BB(3, 4)", span="2742-2742"];
m8_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="2743-2743"];
m8_1261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="2744-2758"];
m8_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="2730-2730"];
m8_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="3412-3412"];
m8_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="SpecifiedTestClass c = new SpecifiedTestClass()", span="3414-3414"];
m8_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.Name = ''James''", span="3415-3415"];
m8_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.Age = 27", span="3416-3416"];
m8_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.NameSpecified = false", span="3417-3417"];
m8_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3419-3419"];
m8_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.NameSpecified = true", span="3432-3432"];
m8_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.WeightSpecified = true", span="3433-3433"];
m8_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="c.HeightSpecified = true", span="3434-3434"];
m8_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3435-3435"];
m8_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="3421-3423"];
m8_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="3425-3425"];
m8_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(deserialized.Name)", span="3426-3426"];
m8_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(deserialized.NameSpecified)", span="3427-3427"];
m8_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(deserialized.WeightSpecified)", span="3428-3428"];
m8_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsFalse(deserialized.HeightSpecified)", span="3429-3429"];
m8_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(27, deserialized.Age)", span="3430-3430"];
m8_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0\r\n}'', json)", span="3437-3442"];
m8_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="3444-3444"];
m8_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James'', deserialized.Name)", span="3445-3445"];
m8_1578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserialized.NameSpecified)", span="3446-3446"];
m8_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserialized.WeightSpecified)", span="3447-3447"];
m8_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserialized.HeightSpecified)", span="3448-3448"];
m8_1581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(27, deserialized.Age)", span="3449-3449"];
m8_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="3412-3412"];
m8_84 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m8_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="3986-3986"];
m8_1794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n        serStr,\r\n        new JsonSerializerSettings\r\n        {\r\n          NullValueHandling = NullValueHandling.Ignore,\r\n          MissingMemberHandling = MissingMemberHandling.Ignore\r\n        });", span="3988-3994"];
m8_1795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="3986-3986"];
m8_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1112-1112"];
m8_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1114-1149"];
m8_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1151-1151"];
m8_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1112-1112"];
m8_1002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2168-2168"];
m8_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="2170-2170"];
m8_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d)", span="2172-2172"];
m8_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d.Dictionary)", span="2173-2173"];
m8_1006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="2174-2174"];
m8_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="2175-2175"];
m8_1008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="2176-2176"];
m8_1009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="2177-2177"];
m8_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="2178-2178"];
m8_1011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.List.Count)", span="2179-2179"];
m8_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="2180-2180"];
m8_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2168-2168"];
m8_604 [cluster="System.IO.File.Open(string, System.IO.FileMode)", file="JsonSerializerTest.cs", label="Entry System.IO.File.Open(string, System.IO.FileMode)", span="0-0"];
m8_1222 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m8_37 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m8_1804 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="86-86"];
m8_1458 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m8_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="84-84"];
m8_14 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="86-86"];
m8_15 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="88-88"];
m8_16 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="89-89"];
m8_17 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="90-90"];
m8_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="91-91"];
m8_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="93-93"];
m8_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="105-105"];
m8_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="107-107"];
m8_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="108-108"];
m8_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="109-109"];
m8_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="110-110"];
m8_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="111-111"];
m8_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="112-112"];
m8_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="84-84"];
m8_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="3760-3760"];
m8_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="dynamic expando = new ExpandoObject()", span="3762-3762"];
m8_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Int = 1", span="3763-3763"];
m8_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Decimal = 99.9d", span="3764-3764"];
m8_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex = new ExpandoObject()", span="3765-3765"];
m8_1695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.String = ''I am a string''", span="3766-3766"];
m8_1696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="3767-3767"];
m8_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="3769-3769"];
m8_1701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Int, newExpando[''Int''])", span="3782-3782"];
m8_1703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="3785-3785"];
m8_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="3791-3791"];
m8_1709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="3794-3794"];
m8_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''\/Date(977338500000)\/''''\r\n  }\r\n}'', json)", span="3770-3777"];
m8_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="3779-3779"];
m8_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="3781-3781"];
m8_1702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="3784-3784"];
m8_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="3787-3787"];
m8_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="3788-3788"];
m8_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(string), o[''String''])", span="3790-3790"];
m8_1708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="3793-3793"];
m8_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="3760-3760"];
m8_485 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="27-27"];
m8_1448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3163-3163"];
m8_1449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="List<string> existingStrings = (List<string>)existingValue", span="3165-3165"];
m8_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="reader.Read()", span="3168-3168"];
m8_1452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="reader.TokenType != JsonToken.EndArray", span="3170-3170"];
m8_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string s = (string)reader.Value", span="3172-3172"];
m8_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="reader.Read()", span="3175-3175"];
m8_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="3166-3166"];
m8_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="newStrings.Add(s)", span="3173-3173"];
m8_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return newStrings;", span="3178-3178"];
m8_1457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3163-3163"];
m8_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="1883-1883"];
m8_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''':''''''''}''", span="1885-1885"];
m8_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="1887-1887"];
m8_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', p.Name)", span="1888-1888"];
m8_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="1883-1883"];
m8_1077 [cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m8_926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="1948-1948"];
m8_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest structTest = new StructTest\r\n                                {\r\n                                  StringProperty = ''StringProperty!'',\r\n                                  StringField = ''StringField'',\r\n                                  IntProperty = 5,\r\n                                  IntField = 10\r\n                                }", span="1950-1956"];
m8_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="1958-1958"];
m8_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="1968-1968"];
m8_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="1959-1959"];
m8_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="1960-1965"];
m8_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="1967-1967"];
m8_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="1969-1969"];
m8_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="1970-1970"];
m8_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="1971-1971"];
m8_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="1948-1948"];
m8_420 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="665-665"];
m8_254 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m8_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="544-544"];
m8_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collection = new ProductCollection()\r\n      {\r\n        new Product() { Name = ''Test1'' },\r\n        new Product() { Name = ''Test2'' },\r\n        new Product() { Name = ''Test3'' }\r\n      }", span="546-551"];
m8_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="553-553"];
m8_249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(sw, collection)", span="558-558"];
m8_252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="565-565"];
m8_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="554-554"];
m8_251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="563-563"];
m8_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="556-556"];
m8_250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n        sw.GetStringBuilder().ToString())", span="560-561"];
m8_253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="544-544"];
m8_1174 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m8_1103 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m8_1186 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m8_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="3918-3918"];
m8_189 [cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m8_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="453-453"];
m8_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\jvvv'''']''", span="455-455"];
m8_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="457-457"];
m8_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="453-453"];
m8_1176 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m8_431 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m8_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1287-1287"];
m8_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="1289-1289"];
m8_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="1290-1290"];
m8_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="1292-1292"];
m8_648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1293-1293"];
m8_649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1295-1295"];
m8_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="1297-1297"];
m8_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1298-1298"];
m8_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1287-1287"];
m8_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTestClass.SpecifiedTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTestClass.SpecifiedTestClass()", span="3383-3383"];
m8_217 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m8_97 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m8_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="4079-4079"];
m8_1829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="4081-4081"];
m8_1830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="4079-4079"];
m8_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="1857-1857"];
m8_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="1859-1859"];
m8_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="1861-1861"];
m8_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="1857-1857"];
m8_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="3898-3898"];
m8_1762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var derived = new Derived(''meh'', ''woo'')", span="3900-3900"];
m8_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects,\r\n        ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n      }", span="3902-3906"];
m8_1764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="3908-3908"];
m8_1765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="3910-3910"];
m8_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="3912-3912"];
m8_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="3913-3913"];
m8_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="3898-3898"];
m8_1187 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m8_460 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m8_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="3842-3842"];
m8_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="3844-3844"];
m8_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="3842-3842"];
m8_1460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="3181-3181"];
m8_1461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return (objectType == typeof(List<string>));", span="3183-3183"];
m8_1462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="3181-3181"];
m8_57 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m8_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="3350-3350"];
m8_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs", label="return (Manager != this);", span="3352-3352"];
m8_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="3350-3350"];
m8_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="3829-3829"];
m8_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="string json = ''{'Value':123456789876543.21}''", span="3831-3831"];
m8_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="IDictionary<string, decimal> d = JsonConvert.DeserializeObject<IDictionary<string, decimal>>(json)", span="3832-3832"];
m8_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="3833-3833"];
m8_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="3829-3829"];
m8_209 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m8_1180 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m8_145 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m8_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="699-699"];
m8_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="701-701"];
m8_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="703-703"];
m8_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="709-709"];
m8_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="704-706"];
m8_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="708-708"];
m8_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="699-699"];
m8_1154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2601-2601"];
m8_1155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = info.GetString(''stringValue'')", span="2603-2603"];
m8_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = info.GetInt32(''intValue'')", span="2604-2604"];
m8_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="2605-2605"];
m8_1158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="2606-2606"];
m8_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="2607-2607"];
m8_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="2608-2608"];
m8_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="2610-2610"];
m8_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_byteValue = info.GetByte(''byteValue'')", span="2611-2611"];
m8_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_charValue = info.GetChar(''charValue'')", span="2612-2612"];
m8_1164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="2613-2613"];
m8_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="2614-2614"];
m8_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="2615-2615"];
m8_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_longValue = info.GetInt64(''longValue'')", span="2616-2616"];
m8_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="2617-2617"];
m8_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="2618-2618"];
m8_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="2619-2619"];
m8_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="2620-2620"];
m8_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="2621-2621"];
m8_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2601-2601"];
m8_212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", span="487-487"];
m8_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="489-494"];
m8_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="496-496"];
m8_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="497-497"];
m8_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", span="487-487"];
m8_336 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m8_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", span="3716-3716"];
m8_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n      {\r\n        Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n      })", span="3718-3721"];
m8_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="3723-3723"];
m8_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonSerializerTest.cs", label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="3724-3724"];
m8_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="3725-3725"];
m8_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="3726-3726"];
m8_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", span="3716-3716"];
m8_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2423-2423"];
m8_1082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2423-2423"];
m8_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="134-134"];
m8_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="136-136"];
m8_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="138-138"];
m8_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="140-140"];
m8_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="141-141"];
m8_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, p.Price)", span="142-142"];
m8_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="134-134"];
m8_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1164-1164"];
m8_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n                        {\r\n                          Name = ''Mike Manager'',\r\n                          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                          Department = ''IT'',\r\n                          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n                        }", span="1166-1172"];
m8_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="1173-1173"];
m8_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1164-1164"];
m8_757 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="345-345"];
m8_104 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m8_607 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="440-440"];
m8_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1070-1070"];
m8_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1072-1074"];
m8_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1076-1076"];
m8_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1070-1070"];
m8_1817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4055-4055"];
m8_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="4057-4057"];
m8_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="4055-4055"];
m8_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1054-1054"];
m8_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n        {\r\n          FirstName = null,\r\n          BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n          LastName = null,\r\n          MiddleName = null\r\n        }", span="1056-1062"];
m8_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="1064-1064"];
m8_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="1065-1065"];
m8_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1054-1054"];
m8_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3934-3934"];
m8_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''Name'', _name)", span="3936-3936"];
m8_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3934-3934"];
m8_159 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="2987-2987"];
m8_12 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m8_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3210-3210"];
m8_1478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string existingString = (string)existingValue", span="3212-3212"];
m8_1479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string newString = existingString + (string)reader.Value", span="3213-3213"];
m8_1480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return newString;", span="3215-3215"];
m8_1481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3210-3210"];
m8_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1521-1521"];
m8_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="1523-1532"];
m8_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="1534-1534"];
m8_740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1536-1536"];
m8_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="1537-1537"];
m8_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="1538-1538"];
m8_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1539-1539"];
m8_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1540-1540"];
m8_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1541-1541"];
m8_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1521-1521"];
m8_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="69-69"];
m8_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="71-71"];
m8_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="73-73"];
m8_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="77-77"];
m8_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="78-78"];
m8_3 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="75-75"];
m8_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="80-80"];
m8_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="69-69"];
m8_1336 [cluster="Unk.ToString", file="JsonSerializerTest.cs", label="Entry Unk.ToString", span=""];
m8_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="4122-4122"];
m8_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="4124-4124"];
m8_1851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="4125-4125"];
m8_1852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="4126-4126"];
m8_1853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Age)", span="4127-4127"];
m8_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="4122-4122"];
m8_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="626-626"];
m8_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="628-628"];
m8_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="629-629"];
m8_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="630-630"];
m8_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="631-631"];
m8_306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="632-632"];
m8_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="633-633"];
m8_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="635-635"];
m8_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="636-636"];
m8_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="638-638"];
m8_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="639-639"];
m8_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="640-640"];
m8_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="641-641"];
m8_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="642-642"];
m8_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="643-643"];
m8_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="626-626"];
m8_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="829-829"];
m8_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="831-831"];
m8_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="832-832"];
m8_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="839-839"];
m8_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="840-840"];
m8_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="834-834"];
m8_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="835-835"];
m8_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="837-837"];
m8_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="829-829"];
m8_653 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="30-30"];
m8_606 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="109-109"];
m8_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1625-1625"];
m8_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="1627-1639"];
m8_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="1641-1641"];
m8_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="1643-1643"];
m8_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, content.Children.Count)", span="1644-1644"];
m8_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="1645-1645"];
m8_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="1646-1646"];
m8_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1625-1625"];
m8_58 [cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m8_1018 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2217-2217"];
m8_1019 [cluster="lambda expression", file="JsonSerializerTest.cs", label="x.Id == id", span="2217-2217"];
m8_1020 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2217-2217"];
m8_1014 [cluster="object.GetType()", file="JsonSerializerTest.cs", label="Entry object.GetType()", span="0-0"];
m8_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3046-3046"];
m8_1393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="string s = @''host\user''", span="3048-3048"];
m8_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="string serialized = JsonConvert.SerializeObject(s)", span="3049-3049"];
m8_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="d1.Add(5, s)", span="3053-3053"];
m8_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="d2.Add(s, 5)", span="3057-3057"];
m8_1395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="3050-3050"];
m8_1396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="3052-3052"];
m8_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="3054-3054"];
m8_1399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="3056-3056"];
m8_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="3058-3058"];
m8_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3046-3046"];
m8_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="844-844"];
m8_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="846-846"];
m8_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="MemberConverterClass c = new MemberConverterClass\r\n        {\r\n          DefaultConverter = date,\r\n          MemberConverter = date\r\n        }", span="848-852"];
m8_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="854-854"];
m8_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="856-856"];
m8_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="844-844"];
m8_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="1907-1907"];
m8_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'')", span="1909-1909"];
m8_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="1907-1907"];
m8_983 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m8_1247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="2716-2716"];
m8_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="List<KVPair<string, string>> kvPairs =\r\n        JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n          ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="2718-2720"];
m8_1249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="2722-2722"];
m8_1250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="2723-2723"];
m8_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="2724-2724"];
m8_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="2725-2725"];
m8_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="2726-2726"];
m8_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="2716-2716"];
m8_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2041-2041"];
m8_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="2043-2093"];
m8_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="2095-2095"];
m8_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="2098-2098"];
m8_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="2101-2101"];
m8_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label=results, span="2102-2102"];
m8_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="searchResults.Add(searchResult)", span="2105-2105"];
m8_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, searchResults.Count)", span="2116-2116"];
m8_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="2117-2117"];
m8_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="2118-2118"];
m8_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="2104-2104"];
m8_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2041-2041"];
m8_1111 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m8_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1156-1156"];
m8_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="1158-1158"];
m8_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="1159-1159"];
m8_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1160-1160"];
m8_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="1161-1161"];
m8_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1156-1156"];
m8_951 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m8_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2013-2013"];
m8_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="2015-2015"];
m8_962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="2016-2016"];
m8_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="2017-2017"];
m8_964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2019-2019"];
m8_965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="2021-2024"];
m8_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2013-2013"];
m8_1221 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m8_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4040-4040"];
m8_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="var data = new DecimalTest(decimal.MinValue)", span="4042-4042"];
m8_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(data)", span="4043-4043"];
m8_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json)", span="4044-4044"];
m8_1815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="4046-4046"];
m8_1816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="4040-4040"];
m8_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="684-684"];
m8_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="686-686"];
m8_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="687-687"];
m8_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="689-689"];
m8_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="690-690"];
m8_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="684-684"];
m8_925 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m8_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", span="1177-1177"];
m8_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Person person = GetPerson()", span="1185-1185"];
m8_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="FileStream fs = System.IO.File.Open(@''c:\person.json'', FileMode.CreateNew)", span="1187-1187"];
m8_602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="serializer.Serialize(jw, person)", span="1194-1194"];
m8_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="StreamWriter sw = new StreamWriter(fs)", span="1188-1188"];
m8_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="JsonWriter jw = new JsonTextWriter(sw)", span="1189-1189"];
m8_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="jw.Formatting = Formatting.Indented", span="1191-1191"];
m8_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1193-1193"];
m8_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", span="1177-1177"];
m8_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="660-660"];
m8_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="662-662"];
m8_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="663-663"];
m8_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="664-664"];
m8_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="665-665"];
m8_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="667-667"];
m8_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="668-668"];
m8_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="660-660"];
m8_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="461-461"];
m8_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime> {\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n      }", span="463-470"];
m8_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result", span="471-471"];
m8_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="476-476"];
m8_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="result = JsonConvert.SerializeObject(testDates)", span="482-482"];
m8_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="474-474"];
m8_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="475-475"];
m8_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="477-477"];
m8_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="478-478"];
m8_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="480-480"];
m8_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="483-483"];
m8_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="461-461"];
m8_536 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="32-32"];
m8_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1441-1441"];
m8_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1443-1443"];
m8_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1441-1441"];
m8_177 [cluster="Unk.ReadObject", file="JsonSerializerTest.cs", label="Entry Unk.ReadObject", span=""];
m8_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="2901-2901"];
m8_589 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m8_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2501-2501"];
m8_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="2503-2503"];
m8_1102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2501-2501"];
m8_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="230-230"];
m8_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="232-232"];
m8_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="234-234"];
m8_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="236-236"];
m8_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="230-230"];
m8_98 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="637-637"];
m8_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="814-814"];
m8_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="816-816"];
m8_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="817-817"];
m8_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="824-824"];
m8_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="825-825"];
m8_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="819-819"];
m8_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="820-820"];
m8_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="822-822"];
m8_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="814-814"];
m8_1035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="2191-2191"];
m8_493 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="568-568"];
m8_617 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m8_1126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2539-2539"];
m8_1127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.Remove(key);", span="2541-2541"];
m8_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2539-2539"];
m8_1865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="4173-4173"];
m8_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="ComplexItem i = new ComplexItem()", span="4175-4175"];
m8_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="4177-4177"];
m8_1868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="4179-4181"];
m8_1869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="4173-4173"];
m8_837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="1764-1764"];
m8_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1766-1779"];
m8_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1781-1781"];
m8_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Console.WriteLine(products.Count)", span="1783-1783"];
m8_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Product p1 = products[0]", span="1786-1786"];
m8_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, products.Count)", span="1791-1791"];
m8_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Product 1'', products[0].Name)", span="1792-1792"];
m8_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Console.WriteLine(p1.Name)", span="1788-1788"];
m8_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="1764-1764"];
m8_112 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m8_1371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3011-3011"];
m8_1372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="3013-3013"];
m8_1373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3011-3011"];
m8_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="2380-2380"];
m8_1337 [cluster="Unk.IsNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNull", span=""];
m8_1104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2506-2506"];
m8_1105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.ContainsKey(key);", span="2508-2508"];
m8_1106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2506-2506"];
m8_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3001-3001"];
m8_1363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Pos p = (Pos)value", span="3003-3003"];
m8_1365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="3006-3006"];
m8_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="3008-3008"];
m8_1364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="3005-3005"];
m8_1367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3001-3001"];
m8_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="3301-3301"];
m8_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="1848-1848"];
m8_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="1850-1850"];
m8_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="1852-1852"];
m8_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="1848-1848"];
m8_1663 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m8_211 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m8_1210 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m8_863 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="34-34"];
m8_998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2154-2154"];
m8_999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Dictionary = new Dictionary<string, string>\r\n                       {\r\n                         {''existing'', ''yup''}\r\n                       }", span="2156-2159"];
m8_1000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="List = new List<string>\r\n                 {\r\n                   ''existing''\r\n                 }", span="2160-2163"];
m8_1001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2154-2154"];
m8_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="4136-4136"];
m8_1856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c = new EnumerableClass\r\n        {\r\n          Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n        }", span="4138-4141"];
m8_1857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4143-4143"];
m8_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="4145-4151"];
m8_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="4153-4153"];
m8_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="4155-4155"];
m8_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="4156-4156"];
m8_1862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="4157-4157"];
m8_1863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="4136-4136"];
m8_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="2708-2708"];
m8_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Key = k", span="2710-2710"];
m8_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Value = v", span="2711-2711"];
m8_1246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="2708-2708"];
m8_1612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="3548-3548"];
m8_772 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="95-95"];
m8_272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="583-583"];
m8_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="585-585"];
m8_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="586-586"];
m8_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="587-587"];
m8_276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="589-589"];
m8_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="590-590"];
m8_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="591-591"];
m8_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="592-592"];
m8_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="593-593"];
m8_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="583-583"];
m8_262 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="410-410"];
m8_465 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m8_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4060-4060"];
m8_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="4062-4062"];
m8_1822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized''", span="4063-4063"];
m8_1823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="4060-4060"];
m8_1219 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m8_664 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="121-121"];
m8_1179 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m8_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="502-502"];
m8_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="504-504"];
m8_222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="505-505"];
m8_223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="506-506"];
m8_224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="508-508"];
m8_227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="514-514"];
m8_225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="510-510"];
m8_226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="512-512"];
m8_228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="502-502"];
m8_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="3039-3039"];
m8_1390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType.IsAssignableFrom(typeof(PosDouble));", span="3041-3041"];
m8_1391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="3039-3039"];
m8_1641 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m8_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2122-2122"];
m8_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="2124-2124"];
m8_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="2125-2125"];
m8_992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="2133-2133"];
m8_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2127-2127"];
m8_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Department = ''McDees''", span="2128-2128"];
m8_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.HourlyWage = 12.50m", span="2129-2129"];
m8_990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2130-2130"];
m8_991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Name = ''Jim Bob''", span="2131-2131"];
m8_995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="2146-2146"];
m8_993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(\r\n        @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''\/Date(975542399000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(975542399000)\/''''\r\n  }\r\n}'',\r\n        json)", span="2134-2143"];
m8_994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="2145-2145"];
m8_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2122-2122"];
m8_632 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="7-7"];
m8_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="881-881"];
m8_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="883-883"];
m8_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="884-884"];
m8_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="881-881"];
m8_1473 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="749-749"];
m8_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="339-339"];
m8_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="341-350"];
m8_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="352-352"];
m8_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="353-353"];
m8_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="355-355"];
m8_125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="356-356"];
m8_126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="357-357"];
m8_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="339-339"];
m8_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1662-1662"];
m8_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1664-1664"];
m8_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1666-1666"];
m8_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1668-1668"];
m8_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1669-1669"];
m8_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, o.Data.Length)", span="1670-1670"];
m8_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1671-1671"];
m8_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.Data[1])", span="1672-1672"];
m8_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1662-1662"];
m8_1482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="3218-3218"];
m8_1483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return (objectType == typeof(string));", span="3220-3220"];
m8_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="3218-3218"];
m8_1129 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m8_1183 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m8_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="727-727"];
m8_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="729-729"];
m8_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="730-730"];
m8_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Count)", span="732-732"];
m8_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="733-733"];
m8_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="734-734"];
m8_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="727-727"];
m8_1209 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m8_1796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4005-4005"];
m8_1797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response response = new Response\r\n        {\r\n          Name = ''Success'',\r\n          Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n        }", span="4007-4011"];
m8_1798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="4013-4013"];
m8_1801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="4018-4018"];
m8_1799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="4015-4015"];
m8_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="4017-4017"];
m8_1802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="4005-4005"];
m8_1769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3922-3922"];
m8_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_name = info.GetString(''Name'')", span="3924-3924"];
m8_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3922-3922"];
m8_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2029-2029"];
m8_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json =\r\n        @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="2031-2035"];
m8_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="2037-2037"];
m8_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2029-2029"];
m8_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="4093-4093"];
m8_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="4095-4095"];
m8_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="4096-4096"];
m8_1838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="4097-4097"];
m8_1839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="4093-4093"];
m8_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="416-416"];
m8_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="418-418"];
m8_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="420-420"];
m8_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="421-421"];
m8_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="423-423"];
m8_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="426-426"];
m8_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="425-425"];
m8_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="416-416"];
m8_267 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m8_1185 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m8_1370 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="634-634"];
m8_260 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62"];
m8_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="146-146"];
m8_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="148-148"];
m8_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="149-149"];
m8_41 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="150-150"];
m8_50 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="166-166"];
m8_42 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="152-152"];
m8_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, testDictionary)", span="157-157"];
m8_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="155-155"];
m8_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="163-163"];
m8_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="169-169"];
m8_54 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="171-171"];
m8_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="156-156"];
m8_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="159-159"];
m8_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="160-160"];
m8_49 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="164-164"];
m8_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(''DeserializeJavaScriptDate'')", span="168-168"];
m8_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine()", span="170-170"];
m8_55 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="146-146"];
m8_1115 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m8_77 [cluster="Unk.AreNotSame", file="JsonSerializerTest.cs", label="Entry Unk.AreNotSame", span=""];
m8_1134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2549-2549"];
m8_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="2551-2551"];
m8_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2549-2549"];
m8_1175 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m8_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1484-1484"];
m8_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="1486-1503"];
m8_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="1505-1506"];
m8_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="1508-1508"];
m8_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="1509-1509"];
m8_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1510-1510"];
m8_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="1511-1511"];
m8_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="1512-1512"];
m8_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="1513-1513"];
m8_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="1514-1514"];
m8_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="1515-1515"];
m8_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="1516-1516"];
m8_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="1517-1517"];
m8_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1484-1484"];
m8_1211 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m8_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="907-907"];
m8_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n      {\r\n        FirstName = ''FirstNameValue'',\r\n        RawContent = new JRaw(''[1,2,3,4,5]''),\r\n        LastName = ''LastNameValue''\r\n      }", span="909-914"];
m8_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="916-916"];
m8_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="918-918"];
m8_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="919-919"];
m8_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="907-907"];
m8_190 [cluster="Unk.>", file="JsonSerializerTest.cs", label="Entry Unk.>", span=""];
m8_1379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3024-3024"];
m8_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="PosDouble p = (PosDouble)value", span="3026-3026"];
m8_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="3029-3029"];
m8_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="3031-3031"];
m8_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="3028-3028"];
m8_1384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3024-3024"];
m8_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2511-2511"];
m8_1109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="2513-2513"];
m8_1110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2511-2511"];
m8_663 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m8_1459 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="217-217"];
m8_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="3552-3552"];
m8_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="return Value;", span="3554-3554"];
m8_1608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="3552-3552"];
m8_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="4260-4260"];
m8_1892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="4262-4271"];
m8_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="4273-4273"];
m8_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="4275-4275"];
m8_1895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="4276-4276"];
m8_1896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="4277-4277"];
m8_1897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="4260-4260"];
m8_1298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="2844-2844"];
m8_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="2844-2844"];
m8_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="1797-1797"];
m8_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="1799-1799"];
m8_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="1801-1801"];
m8_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="1802-1802"];
m8_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="1797-1797"];
m8_1656 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m8_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_11 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m8_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4029-4029"];
m8_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="4029-4029"];
m8_1297 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m8_633 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m8_318 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m8_141 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m8_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="4210-4210"];
m8_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="4212-4212"];
m8_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="4210-4210"];
m8_1138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2556-2556"];
m8_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="2558-2558"];
m8_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="2559-2559"];
m8_1141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="2561-2561"];
m8_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="2563-2563"];
m8_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="2565-2565"];
m8_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="2566-2566"];
m8_1145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="2567-2567"];
m8_1146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2556-2556"];
m8_1378 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m8_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3105-3105"];
m8_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="3107-3107"];
m8_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="3109-3109"];
m8_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n                                                              {\r\n                                                                BirthDate = dateTime,\r\n                                                                Department = ''Department1'',\r\n                                                                LastModified = dateTime,\r\n                                                                HourlyWage = 1\r\n                                                              }))", span="3110-3116"];
m8_1433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n      {\r\n        BirthDate = dateTime,\r\n        Department = ''Department2'',\r\n        LastModified = dateTime,\r\n        HourlyWage = 2\r\n      }))", span="3117-3123"];
m8_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="3125-3125"];
m8_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''\/Date(975711661000)\/'''',\r\n      ''''LastModified'''': ''''\/Date(975711661000)\/''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''\/Date(975711661000)\/'''',\r\n      ''''LastModified'''': ''''\/Date(975711661000)\/''''\r\n    }\r\n  }\r\n]'', json)", span="3127-3146"];
m8_1436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="3148-3148"];
m8_1437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Count)", span="3149-3149"];
m8_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="3150-3150"];
m8_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="3151-3151"];
m8_1440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="3152-3152"];
m8_1441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="3153-3153"];
m8_1442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3105-3105"];
m8_1296 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="517-517"];
m8_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="693-693"];
m8_360 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m8_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="1920-1920"];
m8_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="List<String> strings = new List<String>()", span="1922-1922"];
m8_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_1'')", span="1924-1924"];
m8_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_2'')", span="1925-1925"];
m8_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_3'')", span="1926-1926"];
m8_914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(strings)", span="1928-1928"];
m8_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="1929-1929"];
m8_916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="1920-1920"];
m8_917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="1933-1933"];
m8_918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="1935-1935"];
m8_919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1936-1936"];
m8_920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="1937-1940"];
m8_921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="1942-1942"];
m8_922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', c2.A)", span="1943-1943"];
m8_923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="1944-1944"];
m8_924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="1933-1933"];
m8_261 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m8_1680 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m8_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="713-713"];
m8_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="715-715"];
m8_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="717-717"];
m8_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="719-719"];
m8_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="721-721"];
m8_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="722-722"];
m8_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="713-713"];
m8_393 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m8_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="4282-4282"];
m8_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="this.A = A", span="4284-4284"];
m8_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="B = 2", span="4285-4285"];
m8_1901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="4282-4282"];
m8_1831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="4085-4085"];
m8_1832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="4087-4087"];
m8_1833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized''", span="4088-4088"];
m8_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="4085-4085"];
m8_883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="1866-1866"];
m8_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="1868-1868"];
m8_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new Person())", span="1870-1870"];
m8_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="1866-1866"];
m8_1213 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m8_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1694-1694"];
m8_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="1696-1696"];
m8_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="1698-1698"];
m8_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Console.WriteLine(values.Count)", span="1700-1700"];
m8_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Console.WriteLine(values[''key1''])", span="1703-1703"];
m8_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="1706-1706"];
m8_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="1707-1707"];
m8_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="1708-1708"];
m8_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1694-1694"];
m8_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2229-2229"];
m8_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="2231-2231"];
m8_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2229-2229"];
m8_256 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m8_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="3821-3821"];
m8_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="string json = ''[123456789876543.21]''", span="3823-3823"];
m8_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="3824-3824"];
m8_1729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="3825-3825"];
m8_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="3821-3821"];
m8_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="1828-1828"];
m8_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="1830-1830"];
m8_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="1832-1832"];
m8_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="1828-1828"];
m8_997 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="11-11"];
m8_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="801-801"];
m8_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="803-803"];
m8_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="805-805"];
m8_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="806-806"];
m8_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="808-808"];
m8_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="810-810"];
m8_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="801-801"];
m8_1220 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m8_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="936-936"];
m8_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n                                    {\r\n                                      Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                                      FName = ''FirstValue'',\r\n                                      LName = ''LastValue'',\r\n                                      RoleId = 5,\r\n                                      NullableRoleId = 6,\r\n                                      NullRoleId = null,\r\n                                      Active = true\r\n                                    }", span="938-947"];
m8_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="949-949"];
m8_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="951-951"];
m8_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="953-953"];
m8_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="955-955"];
m8_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="956-956"];
m8_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="957-957"];
m8_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="958-958"];
m8_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="959-959"];
m8_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="960-960"];
m8_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="961-961"];
m8_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="936-936"];
m8_370 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m8_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="1914-1914"];
m8_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'')", span="1916-1916"];
m8_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="1914-1914"];
m8_1216 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m8_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="3743-3743"];
m8_937 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m8_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1388-1388"];
m8_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="1390-1390"];
m8_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="1391-1391"];
m8_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="1392-1392"];
m8_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="1393-1393"];
m8_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1395-1395"];
m8_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1397-1400"];
m8_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1402-1406"];
m8_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="1407-1407"];
m8_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1408-1408"];
m8_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1409-1409"];
m8_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1388-1388"];
m8_176 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m8_609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n                         {\r\n                           LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                           Details = ''Application started.''\r\n                         }", span="1201-1205"];
m8_608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1199-1199"];
m8_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1207-1207"];
m8_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1210-1210"];
m8_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1213-1213"];
m8_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(defaultJson)", span="1216-1216"];
m8_614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(isoJson)", span="1217-1217"];
m8_615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(javascriptJson)", span="1218-1218"];
m8_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1199-1199"];
m8_327 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m8_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="175-175"];
m8_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="177-177"];
m8_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="178-178"];
m8_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="179-179"];
m8_67 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="180-180"];
m8_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="182-182"];
m8_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="186-186"];
m8_69 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="184-184"];
m8_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="187-187"];
m8_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="188-188"];
m8_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.Contains(''101'', executorObject2.serverMethodParams)", span="189-189"];
m8_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="190-190"];
m8_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="175-175"];
m8_1181 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m8_78 [cluster="Unk.Contains", file="JsonSerializerTest.cs", label="Entry Unk.Contains", span=""];
m8_60 [cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m8_1188 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m8_1664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="3691-3691"];
m8_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n        {\r\n          MyInt = int.MaxValue\r\n        }", span="3693-3696"];
m8_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="3698-3698"];
m8_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="3700-3702"];
m8_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="3704-3704"];
m8_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="3706-3706"];
m8_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="3691-3691"];
m8_10 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="626-626"];
m8_594 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m8_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="2909-2909"];
m8_1805 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="107-107"];
m8_1881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="4216-4216"];
m8_1882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="4218-4218"];
m8_1883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(dateTime)", span="4220-4220"];
m8_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="4216-4216"];
m8_1184 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m8_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="923-923"];
m8_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="925-925"];
m8_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="927-927"];
m8_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="929-929"];
m8_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="930-930"];
m8_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="931-931"];
m8_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="923-923"];
m8_1107 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="2848-2848"];
m8_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field1 = f", span="2850-2850"];
m8_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field2 = f", span="2851-2851"];
m8_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property1 = f", span="2852-2852"];
m8_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property2 = f", span="2853-2853"];
m8_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property3 = f", span="2854-2854"];
m8_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property4 = f", span="2855-2855"];
m8_1306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property5 = f", span="2856-2856"];
m8_1307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property6 = f", span="2857-2857"];
m8_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="2848-2848"];
m8_1712 [cluster="Unk.SerializeObject", file="JsonSerializerTest.cs", label="Entry Unk.SerializeObject", span=""];
m8_1622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="3585-3585"];
m8_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="3587-3587"];
m8_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="3589-3593"];
m8_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(jsonText, typeof(double?[]))", span="3595-3595"];
m8_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Length)", span="3597-3597"];
m8_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.4, d[0])", span="3598-3598"];
m8_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4.3, d[1])", span="3599-3599"];
m8_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, d[2])", span="3600-3600"];
m8_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="3585-3585"];
m8_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="774-774"];
m8_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="776-776"];
m8_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="778-778"];
m8_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="780-780"];
m8_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="782-782"];
m8_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="783-783"];
m8_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="784-784"];
m8_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="774-774"];
m8_827 [cluster="System.Console.WriteLine(int)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(int)", span="0-0"];
m8_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="3664-3664"];
m8_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n        {\r\n          StringDictionaryProperty = new StringDictionary()\r\n            {\r\n              {''1'', ''One''},\r\n              {''2'', ''II''},\r\n              {''3'', ''3''}              \r\n            }\r\n        }", span="3666-3674"];
m8_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="3676-3676"];
m8_1660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="3678-3678"];
m8_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="3664-3664"];
m8_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="672-672"];
m8_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="674-674"];
m8_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="676-676"];
m8_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="680-680"];
m8_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="677-677"];
m8_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="679-679"];
m8_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="672-672"];
m8_1753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="3876-3876"];
m8_1754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="IDoWork = doWork", span="3879-3879"];
m8_1755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="3876-3876"];
m8_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="569-569"];
m8_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="571-571"];
m8_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="572-572"];
m8_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="569-569"];
m8_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="1370-1370"];
m8_1335 [cluster="Unk.Parse", file="JsonSerializerTest.cs", label="Entry Unk.Parse", span=""];
m8_430 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m8_1609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="3557-3557"];
m8_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="return new DictionaryKey() { Value = value };", span="3559-3559"];
m8_1611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="3557-3557"];
m8_1681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", span="3730-3730"];
m8_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="3732-3732"];
m8_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="3733-3733"];
m8_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", span="3730-3730"];
m8_1840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="4106-4106"];
m8_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="4108-4108"];
m8_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized 1''", span="4109-4109"];
m8_1843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="4106-4106"];
m8_779 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m8_1079 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m8_1295 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m8_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="647-647"];
m8_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers())", span="649-649"];
m8_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''String'''':''''string'''',''''Int32'''':2147483647,''''UInt32'''':4294967295,''''Byte'''':255,''''SByte'''':127,''''Short'''':32767,''''UShort'''':65535,''''Long'''':9223372036854775807,''''ULong'''':9223372036854775807,''''Double'''':1.7976931348623157E+308,''''Float'''':3.40282347E+38,''''DBNull'''':null,''''Bool'''':true,''''Char'''':''''\u0000''''}'', json)", span="651-651"];
m8_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="653-653"];
m8_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="654-654"];
m8_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="655-655"];
m8_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="656-656"];
m8_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="647-647"];
m8_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="3640-3640"];
m8_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="3642-3642"];
m8_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="3643-3643"];
m8_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="3644-3644"];
m8_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="3650-3650"];
m8_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="3646-3646"];
m8_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3648-3648"];
m8_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, z.Length)", span="3651-3651"];
m8_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="3652-3652"];
m8_1654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="3653-3653"];
m8_1655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="3640-3640"];
m8_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1545-1545"];
m8_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="1547-1557"];
m8_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="1559-1559"];
m8_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="1561-1561"];
m8_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(s)", span="1562-1562"];
m8_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="1564-1564"];
m8_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="1565-1565"];
m8_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="1566-1566"];
m8_755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1545-1545"];
m8_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1221-1221"];
m8_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1223-1223"];
m8_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n                                {\r\n                                  {''one'', 1},\r\n                                  {''two'', 2},\r\n                                  {''three'', 3}\r\n                                }", span="1224-1229"];
m8_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n                          {\r\n                            1, 2, 3\r\n                          }", span="1230-1233"];
m8_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n                                {\r\n                                  4, 5, 6\r\n                                }", span="1234-1237"];
m8_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1239-1239"];
m8_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1262-1262"];
m8_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1263-1263"];
m8_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1264-1264"];
m8_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1241-1257"];
m8_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1259-1259"];
m8_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="1260-1260"];
m8_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1221-1221"];
m8_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="2993-2993"];
m8_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1337-1337"];
m8_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="1339-1355"];
m8_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1357-1357"];
m8_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1360-1360"];
m8_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1358-1358"];
m8_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1361-1361"];
m8_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1362-1362"];
m8_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="1363-1363"];
m8_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1364-1364"];
m8_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1365-1365"];
m8_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1337-1337"];
m8_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="3203-3203"];
m8_1775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="3962-3962"];
m8_1776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="3964-3964"];
m8_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="3965-3965"];
m8_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="3966-3966"];
m8_1782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="3973-3973"];
m8_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="3968-3968"];
m8_1780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="3969-3969"];
m8_1781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo2 = null", span="3970-3970"];
m8_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="3979-3979"];
m8_1783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="3974-3974"];
m8_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="3975-3975"];
m8_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="3976-3976"];
m8_1787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="deserialized = deserialize(s)", span="3980-3980"];
m8_1788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="3981-3981"];
m8_1789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="3982-3982"];
m8_1790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="3962-3962"];
m8_527 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m8_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="965-965"];
m8_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="967-967"];
m8_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="969-969"];
m8_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="970-970"];
m8_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="965-965"];
m8_119 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="601-601"];
m8_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3086-3086"];
m8_1416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="3088-3088"];
m8_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="3089-3089"];
m8_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="3090-3090"];
m8_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(list)", span="3092-3092"];
m8_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="3094-3094"];
m8_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="3096-3096"];
m8_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Count)", span="3097-3097"];
m8_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="3098-3098"];
m8_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', result[0].Value)", span="3099-3099"];
m8_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="3100-3100"];
m8_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', result[1].Value)", span="3101-3101"];
m8_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3086-3086"];
m8_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m8_1352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="2969-2969"];
m8_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="ClientMap source = new ClientMap()\r\n      {\r\n        position = new Pos() { X = 100, Y = 200 },\r\n        center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n      }", span="2971-2975"];
m8_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="2977-2977"];
m8_1355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="2978-2978"];
m8_1356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="2969-2969"];
m8_1089 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3205-3205"];
m8_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(value)", span="3207-3207"];
m8_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="3205-3205"];
m8_1357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="2981-2981"];
m8_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="403-403"];
m8_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="405-405"];
m8_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="407-407"];
m8_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(r1, r2)", span="411-411"];
m8_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="409-409"];
m8_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="403-403"];
m8_634 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m8_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="3633-3633"];
m8_1643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Prop1 = new byte[0]", span="3635-3635"];
m8_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="3633-3633"];
m8_1844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="4113-4113"];
m8_1845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Value = value", span="4115-4115"];
m8_1846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Age = age", span="4116-4116"];
m8_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Constructor = ''Public Paramatized 2''", span="4117-4117"];
m8_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="4113-4113"];
m8_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1417-1417"];
m8_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1417-1417"];
m8_1177 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m8_1125 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m8_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2521-2521"];
m8_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="2523-2523"];
m8_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="2528-2528"];
m8_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="return;", span="2525-2525"];
m8_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="this[entry.Key] = entry.Value", span="2530-2530"];
m8_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2521-2521"];
m8_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="3749-3749"];
m8_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="3751-3751"];
m8_1687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="3753-3755"];
m8_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="3749-3749"];
m8_887 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="734-734"];
m8_282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="597-597"];
m8_283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="599-599"];
m8_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="600-600"];
m8_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="601-601"];
m8_286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="603-603"];
m8_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="604-604"];
m8_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="605-605"];
m8_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="606-606"];
m8_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="607-607"];
m8_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="597-597"];
m8_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="240-240"];
m8_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="242-242"];
m8_107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="244-244"];
m8_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="246-246"];
m8_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="248-248"];
m8_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="249-249"];
m8_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="240-240"];
m8_766 [cluster="System.Uri.ToString()", file="JsonSerializerTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m8_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="430-430"];
m8_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="432-432"];
m8_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="435-435"];
m8_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="436-436"];
m8_183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="440-440"];
m8_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="442-442"];
m8_182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="439-439"];
m8_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="447-447"];
m8_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="445-445"];
m8_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="444-444"];
m8_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="430-430"];
m8_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="3683-3683"];
m8_736 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m8_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="3941-3941"];
m8_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="379-379"];
m8_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="381-381"];
m8_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="379-379"];
m8_402 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m8_257 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="429-429"];
m8_346 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m8_721 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="680-680"];
m8_1471 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="7-7"];
m8_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="3891-3891"];
m8_1759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="IDontWork = dontWork", span="3893-3893"];
m8_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="3891-3891"];
m8_1309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="2880-2880"];
m8_1310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="2880-2880"];
m8_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="3283-3283"];
m8_1515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="First = first", span="3285-3285"];
m8_1516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Second = second", span="3286-3286"];
m8_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="3283-3283"];
m8_1178 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m8_258 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m8_255 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="286-286"];
m8_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1467-1467"];
m8_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="1469-1474"];
m8_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="1476-1477"];
m8_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="1478-1478"];
m8_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="1479-1479"];
m8_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1480-1480"];
m8_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1467-1467"];
m8_855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="1816-1816"];
m8_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="1818-1818"];
m8_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="1820-1820"];
m8_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="JArray a = (JArray)setOnly.GetValue()", span="1821-1821"];
m8_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, a.Count)", span="1822-1822"];
m8_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)a[0])", span="1823-1823"];
m8_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="1824-1824"];
m8_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="1816-1816"];
m8_1368 [cluster="string.Format(string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m8_1056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2356-2356"];
m8_1057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="2358-2358"];
m8_1058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="2359-2359"];
m8_1059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123, item.Value)", span="2361-2361"];
m8_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2356-2356"];
m8_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="1875-1875"];
m8_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="1877-1877"];
m8_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="1879-1879"];
m8_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="1875-1875"];
m8_1525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeAge()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeAge()", span="3308-3308"];
m8_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeAge()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeAge()", span="3308-3308"];
m8_158 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m8_1061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2389-2389"];
m8_1062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exception ex = new Exception(''Blah blah blah'')", span="2391-2391"];
m8_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="2393-2393"];
m8_1067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.ExceptionProperty = ex", span="2397-2397"];
m8_1064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="2394-2394"];
m8_1065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="2395-2395"];
m8_1066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="2396-2396"];
m8_1070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, c)", span="2403-2403"];
m8_1075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Console.WriteLine(JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n                                                                          {\r\n                                                                            //               TypeNameHandling = TypeNameHandling.Objects\r\n                                                                          }))", span="2411-2414"];
m8_1068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2399-2399"];
m8_1069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n        typeof(DataContractJsonSerializerTestClass),\r\n        new Type[] { typeof(Human) })", span="2400-2402"];
m8_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="byte[] jsonBytes = ms.ToArray()", span="2405-2405"];
m8_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="2406-2406"];
m8_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Console.WriteLine(JObject.Parse(json).ToString())", span="2408-2408"];
m8_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Console.WriteLine()", span="2409-2409"];
m8_1076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2389-2389"];
m8_29 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_79 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="195-195"];
m8_80 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="197-197"];
m8_81 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="199-199"];
m8_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="201-201"];
m8_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="195-195"];
m8_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="1999-1999"];
m8_954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="2001-2001"];
m8_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="2002-2002"];
m8_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="2003-2003"];
m8_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2005-2005"];
m8_958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="2006-2009"];
m8_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="1999-1999"];
m8_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", span="2649-2649"];
m8_1224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="2651-2651"];
m8_1225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="2652-2652"];
m8_1226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="2653-2653"];
m8_1227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="2654-2654"];
m8_1228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="2655-2655"];
m8_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="2665-2665"];
m8_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="2657-2657"];
m8_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="2658-2658"];
m8_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="2696-2696"];
m8_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="2660-2660"];
m8_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="2668-2691"];
m8_1233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2667-2667"];
m8_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="2693-2693"];
m8_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="2694-2694"];
m8_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="2695-2695"];
m8_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="2697-2697"];
m8_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="2698-2698"];
m8_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="2699-2699"];
m8_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", span="2649-2649"];
m8_1717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="3806-3806"];
m8_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="3808-3808"];
m8_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="3809-3809"];
m8_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="3806-3806"];
m8_1374 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m8_1212 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m8_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="3605-3605"];
m8_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n                                                      {\r\n                                                        ''One'',\r\n                                                        ''2'',\r\n                                                        ''III''\r\n                                                      }, Formatting.Indented)", span="3607-3612"];
m8_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="3614-3618"];
m8_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="3620-3620"];
m8_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Count)", span="3622-3622"];
m8_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''One''))", span="3623-3623"];
m8_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''2''))", span="3624-3624"];
m8_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''III''))", span="3625-3625"];
m8_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="3605-3605"];
m8_218 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m8_128 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="238-238"];
m8_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1570-1570"];
m8_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="1572-1572"];
m8_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="1573-1573"];
m8_761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="1575-1575"];
m8_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, newUri)", span="1578-1578"];
m8_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="1577-1577"];
m8_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1570-1570"];
m8_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3240-3240"];
m8_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="3244-3244"];
m8_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', ''Persons'')", span="3245-3245"];
m8_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="3246-3246"];
m8_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="3251-3251"];
m8_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="3248-3248"];
m8_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="3249-3249"];
m8_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="3250-3250"];
m8_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child)", span="3253-3253"];
m8_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3254-3254"];
m8_1502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3240-3240"];
m8_507 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m8_588 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m8_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="2323-2323"];
m8_219 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="253-253"];
m8_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="255-332"];
m8_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="333-333"];
m8_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="334-334"];
m8_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="335-335"];
m8_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="253-253"];
m8_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="3016-3016"];
m8_1376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType.IsAssignableFrom(typeof(Pos));", span="3018-3018"];
m8_1377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="3016-3016"];
m8_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1712-1712"];
m8_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="1714-1719"];
m8_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Product p2 = new Product\r\n      {\r\n        Name = ''Product 2'',\r\n        Price = 12.50m,\r\n        ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n      }", span="1720-1725"];
m8_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="products.Add(p1)", span="1728-1728"];
m8_831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="List<Product> products = new List<Product>()", span="1727-1727"];
m8_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="products.Add(p2)", span="1729-1729"];
m8_834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1731-1731"];
m8_835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1747-1760"];
m8_836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1712-1712"];
m8_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="3709-3709"];
m8_1036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2283-2283"];
m8_1037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="2285-2285"];
m8_1038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="2286-2286"];
m8_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="2288-2288"];
m8_1040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="2289-2289"];
m8_1041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2283-2283"];
m8_166 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m8_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="219-219"];
m8_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="221-221"];
m8_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="223-223"];
m8_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="225-225"];
m8_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="226-226"];
m8_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="219-219"];
m8_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="4304-4304"];
m8_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = @''{A:''''Test''''}''", span="4306-4306"];
m8_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="4308-4308"];
m8_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="4309-4309"];
m8_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="4310-4310"];
m8_1910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="4304-4304"];
m8_654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1302-1302"];
m8_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1304-1304"];
m8_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1305-1305"];
m8_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1306-1306"];
m8_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1308-1308"];
m8_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="1318-1318"];
m8_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1310-1316"];
m8_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="1320-1323"];
m8_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1302-1302"];
m8_1428 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m8_1463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3188-3188"];
m8_1464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Movie p = new Movie()", span="3190-3190"];
m8_1465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="3191-3191"];
m8_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n        })", span="3193-3196"];
m8_1467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="3198-3198"];
m8_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="3199-3199"];
m8_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="3200-3200"];
m8_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3188-3188"];
m8_484 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m8_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2246-2246"];
m8_1025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="2248-2248"];
m8_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="2250-2250"];
m8_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="2251-2251"];
m8_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.MyProperty = ''some value''", span="2253-2253"];
m8_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="string json = g.ToJson()", span="2255-2255"];
m8_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="2257-2271"];
m8_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="2273-2273"];
m8_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="2274-2274"];
m8_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2246-2246"];
m8_9 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="525-525"];
m8_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="888-888"];
m8_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="890-890"];
m8_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="891-891"];
m8_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="888-888"];
m8_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="1893-1893"];
m8_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new MemoryStream())", span="1895-1895"];
m8_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="1893-1893"];
m8_1137 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m8_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="361-361"];
m8_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="363-363"];
m8_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="364-364"];
m8_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="365-365"];
m8_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="367-367"];
m8_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="373-373"];
m8_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="374-374"];
m8_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="369-369"];
m8_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="371-371"];
m8_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="361-361"];
m8_259 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_175 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m8_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1676-1676"];
m8_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1678-1678"];
m8_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1680-1680"];
m8_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1682-1682"];
m8_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1683-1683"];
m8_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, o.Data.Length)", span="1684-1684"];
m8_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1685-1685"];
m8_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1686-1686"];
m8_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1687-1687"];
m8_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1688-1688"];
m8_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1689-1689"];
m8_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1690-1690"];
m8_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1676-1676"];
m8_1911 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m8_1912 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m8_1913 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m8_1914 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m8_1915 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m8_1916 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m8_1917 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span=""];
m8_1918 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span=""];
m8_1919 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m8_1920 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m8_1921 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", span=""];
m8_1922 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span=""];
m8_1923 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass", span=""];
m8_1924 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", span=""];
m8_1925 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span=""];
m8_1926 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span=""];
m8_1927 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span=""];
m8_1928 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m8_1929 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span=""];
m8_1930 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m8_1931 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m8_1932 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", span=""];
m8_1933 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", span=""];
m8_1934 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", span=""];
m8_1935 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", span=""];
m8_1936 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span=""];
m8_1937 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span=""];
m9_44 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonTypeReflector.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m9_84 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="219-219"];
m9_85 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(memberInfo.DeclaringType)", span="221-221"];
m9_87 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="MemberInfo metadataTypeMemberInfo = metadataType.GetMember(memberInfo.Name,\r\n          memberInfo.MemberType,\r\n          BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance).SingleOrDefault()", span="224-226"];
m9_92 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(memberInfo, true);", span="236-236"];
m9_86 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="metadataType != null", span="222-222"];
m9_88 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="metadataTypeMemberInfo != null", span="228-228"];
m9_89 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="T attribute = ReflectionUtils.GetAttribute<T>(metadataTypeMemberInfo, true)", span="230-230"];
m9_90 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="attribute != null", span="231-231"];
m9_91 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="return attribute;", span="232-232"];
m9_93 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="219-219"];
m9_49 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="167-167"];
m9_50 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="return AssociatedMetadataTypesCache.Get(type);", span="169-169"];
m9_51 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="167-167"];
m9_13 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", span="101-101"];
m9_14 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="JsonObjectAttribute objectAttribute = GetJsonObjectAttribute(objectType)", span="103-103"];
m9_16 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="DataContractAttribute dataContractAttribute = GetDataContractAttribute(objectType)", span="108-108"];
m9_15 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="objectAttribute == null", span="105-105"];
m9_20 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="return objectAttribute.MemberSerialization;", span="117-117"];
m9_17 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="dataContractAttribute != null", span="110-110"];
m9_18 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="return MemberSerialization.OptIn;", span="111-111"];
m9_19 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="return MemberSerialization.OptOut;", span="114-114"];
m9_21 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", span="101-101"];
m9_66 [cluster="Newtonsoft.Json.Serialization.LateBoundMetadataTypeAttribute.LateBoundMetadataTypeAttribute(object)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.LateBoundMetadataTypeAttribute.LateBoundMetadataTypeAttribute(object)", span="41-41"];
m9_26 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", span="125-125"];
m9_27 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="JsonConverterAttribute converterAttribute = GetAttribute<JsonConverterAttribute>(attributeProvider)", span="127-127"];
m9_28 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return (converterAttribute != null)\r\n        ? converterAttribute.ConverterType\r\n        : null;", span="128-130"];
m9_29 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterTypeFromAttribute(System.Reflection.ICustomAttributeProvider)", span="125-125"];
m9_41 [cluster="Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonConverter.CanConvert(System.Type)", span="63-63"];
m9_75 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="206-206"];
m9_76 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(type)", span="208-208"];
m9_81 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(type, true);", span="216-216"];
m9_77 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="metadataType != null", span="209-209"];
m9_78 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="T attribute = ReflectionUtils.GetAttribute<T>(metadataType, true)", span="211-211"];
m9_79 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="attribute != null", span="212-212"];
m9_80 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="return attribute;", span="213-213"];
m9_82 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="206-206"];
m9_40 [cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", span="38-38"];
m9_74 [cluster="System.Type.GetType(string)", file="JsonTypeReflector.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m9_45 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="151-151"];
m9_46 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="JsonTypeReflector.cs", label="return TypeDescriptor.GetConverter(type);", span="154-154"];
m9_47 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="151-151"];
m9_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="JsonTypeReflector.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m9_42 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m9_25 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="19-19"];
m9_10 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="95-95"];
m9_11 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="JsonTypeReflector.cs", label="return CachedAttributeGetter<DataContractAttribute>.GetAttribute(type);", span="97-97"];
m9_12 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="95-95"];
m9_7 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="89-89"];
m9_8 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="JsonTypeReflector.cs", label="return GetJsonContainerAttribute(type) as JsonArrayAttribute;", span="91-91"];
m9_9 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="89-89"];
m9_63 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="JsonTypeReflector.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m9_94 [cluster="System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", file="JsonTypeReflector.cs", label="Entry System.Type.GetMember(string, System.Reflection.MemberTypes, System.Reflection.BindingFlags)", span="0-0"];
m9_83 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="694-694"];
m9_31 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="133-133"];
m9_32 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="Type converterType = GetJsonConverterType(attributeProvider)", span="135-135"];
m9_35 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="!memberConverter.CanConvert(targetConvertedType)", span="141-141"];
m9_36 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="throw new JsonSerializationException(''JsonConverter {0} on {1} is not compatible with member type {2}.''.FormatWith(CultureInfo.InvariantCulture, memberConverter.GetType().Name, attributeProvider, targetConvertedType.Name));", span="142-142"];
m9_33 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="converterType != null", span="137-137"];
m9_34 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="JsonConverter memberConverter = JsonConverterAttribute.CreateJsonConverterInstance(converterType)", span="139-139"];
m9_38 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="return null;", span="147-147"];
m9_37 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="return memberConverter;", span="144-144"];
m9_39 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="133-133"];
m9_48 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JsonTypeReflector.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m9_0 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="79-79"];
m9_1 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="JsonTypeReflector.cs", label="return CachedAttributeGetter<JsonContainerAttribute>.GetAttribute(type);", span="81-81"];
m9_2 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="79-79"];
m9_30 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="239-239"];
m9_95 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Type type = attributeProvider as Type", span="241-241"];
m9_98 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="245-245"];
m9_101 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(attributeProvider, true);", span="249-249"];
m9_96 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="type != null", span="242-242"];
m9_97 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return GetAttribute<T>(type);", span="243-243"];
m9_99 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="memberInfo != null", span="246-246"];
m9_100 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return GetAttribute<T>(memberInfo);", span="247-247"];
m9_102 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="239-239"];
m9_65 [cluster="Newtonsoft.Json.Utilities.DynamicWrapper.CreateWrapper<T>(object)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.DynamicWrapper.CreateWrapper<T>(object)", span="123-123"];
m9_22 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterType(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterType(System.Reflection.ICustomAttributeProvider)", span="120-120"];
m9_23 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterType(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="return JsonConverterTypeCache.Get(attributeProvider);", span="122-122"];
m9_24 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterType(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverterType(System.Reflection.ICustomAttributeProvider)", span="120-120"];
m9_43 [cluster="object.GetType()", file="JsonTypeReflector.cs", label="Entry object.GetType()", span="0-0"];
m9_3 [cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", span="38-38"];
m9_4 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="84-84"];
m9_5 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="JsonTypeReflector.cs", label="return GetJsonContainerAttribute(type) as JsonObjectAttribute;", span="86-86"];
m9_6 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="84-84"];
m9_52 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="172-172"];
m9_53 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Type metadataTypeAttributeType = GetMetadataTypeAttributeType()", span="174-174"];
m9_56 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="object attribute = type.GetCustomAttributes(metadataTypeAttributeType, true).SingleOrDefault()", span="178-178"];
m9_54 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="metadataTypeAttributeType == null", span="175-175"];
m9_55 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="return null;", span="176-176"];
m9_57 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="attribute == null", span="179-179"];
m9_59 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="IMetadataTypeAttribute metadataTypeAttribute = (DynamicCodeGeneration)\r\n                                                       ? DynamicWrapper.CreateWrapper<IMetadataTypeAttribute>(attribute)\r\n                                                       : new LateBoundMetadataTypeAttribute(attribute)", span="182-184"];
m9_58 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="return null;", span="180-180"];
m9_60 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="return metadataTypeAttribute.MetadataClassType;", span="186-186"];
m9_61 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="172-172"];
m9_62 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", span="189-189"];
m9_67 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="_cachedMetadataTypeAttributeType == null", span="193-193"];
m9_68 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="Type metadataTypeAttributeType = Type.GetType(MetadataTypeAttributeTypeName)", span="195-195"];
m9_72 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="return _cachedMetadataTypeAttributeType;", span="203-203"];
m9_69 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="metadataTypeAttributeType != null", span="197-197"];
m9_70 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="_cachedMetadataTypeAttributeType = metadataTypeAttributeType", span="198-198"];
m9_71 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="return null;", span="200-200"];
m9_73 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetMetadataTypeAttributeType()", span="189-189"];
m10_4 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="59-59"];
m10_5 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="59-59"];
m10_2 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="48-48"];
m10_3 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="48-48"];
m10_0 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JsonWriterException.cs", label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="39-39"];
m10_1 [cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JsonWriterException.cs", label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="39-39"];
m11_65 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", span="141-141"];
m11_66 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="TypeNameHandlingTests.cs", label="string keyForItem = GetKeyForItem(Items[index])", span="143-143"];
m11_68 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="TypeNameHandlingTests.cs", label="base.RemoveItem(index)", span="145-145"];
m11_67 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="TypeNameHandlingTests.cs", label="RemoveKey(keyForItem)", span="144-144"];
m11_69 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveItem(int)", span="141-141"];
m11_45 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m11_28 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m11_20 [cluster="System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)", span="0-0"];
m11_64 [cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0"];
m11_19 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", span="115-115"];
m11_50 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="return ((JProperty)item).Name;", span="117-117"];
m11_51 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.GetKeyForItem(Newtonsoft.Json.Linq.JToken)", span="115-115"];
m11_36 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeNameHandlingTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m11_122 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133"];
m11_22 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", span="70-70"];
m11_23 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="TypeNameHandlingTests.cs", label="base.ClearItems()", span="72-72"];
m11_24 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="TypeNameHandlingTests.cs", label="_dictionary != null", span="74-74"];
m11_25 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="TypeNameHandlingTests.cs", label="_dictionary.Clear()", span="76-76"];
m11_26 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.ClearItems()", span="70-70"];
m11_57 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", span="126-126"];
m11_58 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="TypeNameHandlingTests.cs", label="key == null", span="128-128"];
m11_59 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="TypeNameHandlingTests.cs", label="throw new ArgumentNullException(nameof(key));", span="130-130"];
m11_61 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="TypeNameHandlingTests.cs", label="return _dictionary.ContainsKey(key) && Remove(_dictionary[key]);", span="135-135"];
m11_60 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="TypeNameHandlingTests.cs", label="_dictionary != null", span="133-133"];
m11_62 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="TypeNameHandlingTests.cs", label="return false;", span="138-138"];
m11_63 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.Remove(string)", span="126-126"];
m11_56 [cluster="System.Collections.ObjectModel.Collection<T>.InsertItem(int, T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.InsertItem(int, T)", span="0-0"];
m11_38 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m11_18 [cluster="System.ArgumentException.ArgumentException(string)", file="TypeNameHandlingTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m11_86 [cluster="System.Collections.ObjectModel.Collection<T>.SetItem(int, T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.SetItem(int, T)", span="0-0"];
m11_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m11_96 [cluster="System.Collections.Generic.List<T>.IndexOfReference<T>(T)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.List<T>.IndexOfReference<T>(T)", span="237-237"];
m11_70 [cluster="System.Collections.ObjectModel.Collection<T>.RemoveItem(int)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.RemoveItem(int)", span="0-0"];
m11_29 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", span="80-80"];
m11_30 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="TypeNameHandlingTests.cs", label="key == null", span="82-82"];
m11_31 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="TypeNameHandlingTests.cs", label="throw new ArgumentNullException(nameof(key));", span="84-84"];
m11_33 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="TypeNameHandlingTests.cs", label="return _dictionary.ContainsKey(key);", span="89-89"];
m11_32 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="TypeNameHandlingTests.cs", label="_dictionary != null", span="87-87"];
m11_34 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="TypeNameHandlingTests.cs", label="return false;", span="92-92"];
m11_35 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", span="80-80"];
m11_87 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="198-198"];
m11_88 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="_dictionary == null", span="200-200"];
m11_91 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="return _dictionary.TryGetValue(key, out value);", span="206-206"];
m11_89 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="value = null", span="202-202"];
m11_90 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="return false;", span="203-203"];
m11_92 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="198-198"];
m11_37 [cluster="Unk.nameof", file="TypeNameHandlingTests.cs", label="Entry Unk.nameof", span=""];
m11_52 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", span="120-120"];
m11_53 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="AddKey(GetKeyForItem(item), item)", span="122-122"];
m11_54 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="base.InsertItem(index, item)", span="123-123"];
m11_55 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.InsertItem(int, Newtonsoft.Json.Linq.JToken)", span="120-120"];
m11_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="TypeNameHandlingTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m11_7 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", span="48-48"];
m11_8 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="!ContainsItem(item)", span="50-50"];
m11_10 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="string keyForItem = GetKeyForItem(item)", span="55-55"];
m11_11 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="!Comparer.Equals(keyForItem, newKey)", span="56-56"];
m11_12 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="newKey != null", span="58-58"];
m11_13 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="AddKey(newKey, item)", span="60-60"];
m11_9 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="throw new ArgumentException(''The specified item does not exist in this KeyedCollection.'');", span="52-52"];
m11_14 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="keyForItem != null", span="63-63"];
m11_15 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="RemoveKey(keyForItem)", span="65-65"];
m11_16 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.ChangeItemKey(Newtonsoft.Json.Linq.JToken, string)", span="48-48"];
m11_2 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", span="42-42"];
m11_3 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="EnsureDictionary()", span="44-44"];
m11_4 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="_dictionary[key] = item", span="45-45"];
m11_5 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.AddKey(string, Newtonsoft.Json.Linq.JToken)", span="42-42"];
m11_75 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="156-156"];
m11_76 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="string keyForItem = GetKeyForItem(item)", span="158-158"];
m11_77 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="string keyAtIndex = GetKeyForItem(Items[index])", span="159-159"];
m11_80 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="_dictionary[keyForItem] = item", span="165-165"];
m11_81 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="AddKey(keyForItem, item)", span="170-170"];
m11_84 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="base.SetItem(index, item)", span="177-177"];
m11_78 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Comparer.Equals(keyAtIndex, keyForItem)", span="161-161"];
m11_82 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="keyAtIndex != null", span="172-172"];
m11_83 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="RemoveKey(keyAtIndex)", span="174-174"];
m11_79 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="_dictionary != null", span="163-163"];
m11_85 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="156-156"];
m11_0 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", span="38-38"];
m11_1 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.JPropertyKeyedCollection()", span="38-38"];
m11_21 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", span="148-148"];
m11_71 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", file="TypeNameHandlingTests.cs", label="_dictionary != null", span="150-150"];
m11_72 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", file="TypeNameHandlingTests.cs", label="_dictionary.Remove(key)", span="152-152"];
m11_73 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.RemoveKey(string)", span="148-148"];
m11_6 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", span="107-107"];
m11_46 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="TypeNameHandlingTests.cs", label="_dictionary == null", span="109-109"];
m11_47 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="TypeNameHandlingTests.cs", label="_dictionary = new Dictionary<string, JToken>(Comparer)", span="111-111"];
m11_48 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.EnsureDictionary()", span="107-107"];
m11_97 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", span="232-232"];
m11_98 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="this == other", span="234-234"];
m11_101 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="Dictionary<string, JToken> d2 = other._dictionary", span="242-242"];
m11_99 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return true;", span="236-236"];
m11_100 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="Dictionary<string, JToken> d1 = _dictionary", span="241-241"];
m11_102 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="d1 == null && d2 == null", span="244-244"];
m11_104 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="d1 == null", span="249-249"];
m11_107 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return (d1.Count == 0);", span="256-256"];
m11_108 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="d1.Count != d2.Count", span="259-259"];
m11_110 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label=d1, span="264-264"];
m11_105 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return (d2.Count == 0);", span="251-251"];
m11_106 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="d2 == null", span="254-254"];
m11_112 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="!d2.TryGetValue(keyAndProperty.Key, out secondValue)", span="267-267"];
m11_103 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return true;", span="246-246"];
m11_109 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return false;", span="261-261"];
m11_111 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="JToken secondValue", span="266-266"];
m11_120 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return true;", span="286-286"];
m11_113 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return false;", span="269-269"];
m11_114 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="JProperty p1 = (JProperty)keyAndProperty.Value", span="272-272"];
m11_115 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="JProperty p2 = (JProperty)secondValue", span="273-273"];
m11_116 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="p1.Value == null", span="275-275"];
m11_118 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="!p1.Value.DeepEquals(p2.Value)", span="280-280"];
m11_117 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return (p2.Value == null);", span="277-277"];
m11_119 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="return false;", span="282-282"];
m11_121 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", span="232-232"];
m11_93 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", span="227-227"];
m11_94 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="return ((List<JToken>)Items).IndexOfReference(t);", span="229-229"];
m11_95 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.IndexOfReference(Newtonsoft.Json.Linq.JToken)", span="227-227"];
m11_17 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="95-95"];
m11_39 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="_dictionary == null", span="97-97"];
m11_41 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="string key = GetKeyForItem(item)", span="102-102"];
m11_40 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="return false;", span="99-99"];
m11_42 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="JToken value", span="103-103"];
m11_43 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="return _dictionary.TryGetValue(key, out value);", span="104-104"];
m11_44 [cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Linq.JPropertyKeyedCollection.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="95-95"];
m11_27 [cluster="System.Collections.ObjectModel.Collection<T>.ClearItems()", file="TypeNameHandlingTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.ClearItems()", span="0-0"];
m11_123 [file="TypeNameHandlingTests.cs", label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", span=""];
m12_7 [cluster="Unk.CreateComment", file="XmlNodeConverter.cs", label="Entry Unk.CreateComment", span=""];
m12_452 [cluster="XmlDocument.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocument.cstr", span=""];
m12_160 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="136-136"];
m12_28 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="79-79"];
m12_29 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="81-81"];
m12_30 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="79-79"];
m12_409 [cluster="Unk.All", file="XmlNodeConverter.cs", label="Entry Unk.All", span=""];
m12_226 [cluster="XAttributeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XAttributeWrapper.cstr", span=""];
m12_123 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="378-378"];
m12_124 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XComment(text));", span="380-380"];
m12_125 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="378-378"];
m12_90 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="276-276"];
m12_91 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="276-276"];
m12_102 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="282-282"];
m12_103 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="282-282"];
m12_474 [cluster="object.ToString()", file="XmlNodeConverter.cs", label="Entry object.ToString()", span="0-0"];
m12_641 [cluster="string.StartsWith(string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m12_189 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="573-573"];
m12_190 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XDocument", span="575-575"];
m12_191 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XDocumentWrapper((XDocument)node);", span="576-576"];
m12_192 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XElement", span="577-577"];
m12_193 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XElementWrapper((XElement)node);", span="578-578"];
m12_194 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XContainer", span="579-579"];
m12_195 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XContainerWrapper((XContainer)node);", span="580-580"];
m12_196 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XProcessingInstruction", span="581-581"];
m12_197 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="582-582"];
m12_198 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XText", span="583-583"];
m12_199 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XTextWrapper((XText)node);", span="584-584"];
m12_200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XComment", span="585-585"];
m12_201 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XCommentWrapper((XComment)node);", span="586-586"];
m12_202 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XAttribute", span="587-587"];
m12_203 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper((XAttribute) node);", span="588-588"];
m12_204 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(node);", span="590-590"];
m12_205 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="573-573"];
m12_156 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="418-418"];
m12_157 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="420-420"];
m12_158 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceURI)));", span="421-421"];
m12_159 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="418-418"];
m12_453 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1171-1171"];
m12_477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string.IsNullOrEmpty(propertyName)", span="1173-1173"];
m12_479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1176-1176"];
m12_480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1178-1178"];
m12_481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1180-1180"];
m12_482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(element)", span="1182-1182"];
m12_485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                               ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                               : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1189-1191"];
m12_487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.String", span="1196-1196"];
m12_488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1198-1198"];
m12_489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Integer", span="1200-1200"];
m12_490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((long)reader.Value)))", span="1202-1202"];
m12_491 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Float", span="1204-1204"];
m12_492 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((double)reader.Value)))", span="1206-1206"];
m12_493 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Boolean", span="1208-1208"];
m12_494 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((bool)reader.Value)))", span="1210-1210"];
m12_495 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Date", span="1212-1212"];
m12_496 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DateTime d = (DateTime)reader.Value", span="1214-1214"];
m12_497 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind))))", span="1215-1215"];
m12_498 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1217-1217"];
m12_499 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.EndObject", span="1224-1224"];
m12_500 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1226-1226"];
m12_501 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, element)", span="1228-1228"];
m12_502 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="1230-1230"];
m12_478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1174-1174"];
m12_483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=attributeNameValues, span="1185-1185"];
m12_486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(attribute)", span="1193-1193"];
m12_484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1187-1187"];
m12_503 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1171-1171"];
m12_45 [cluster="Unk.CreateAttribute", file="XmlNodeConverter.cs", label="Entry Unk.CreateAttribute", span=""];
m12_110 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="286-286"];
m12_111 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="286-286"];
m12_525 [cluster="System.Collections.IEnumerable.CastValid<T>()", file="XmlNodeConverter.cs", label="Entry System.Collections.IEnumerable.CastValid<T>()", span="38-38"];
m12_165 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="663-663"];
m12_217 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="663-663"];
m12_306 [cluster="JsonSerializationException.cstr", file="XmlNodeConverter.cs", label="Entry JsonSerializationException.cstr", span=""];
m12_139 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="398-398"];
m12_140 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XText(text));", span="400-400"];
m12_141 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="398-398"];
m12_66 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="177-177"];
m12_67 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="_node = node", span="179-179"];
m12_68 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="177-177"];
m12_51 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="126-126"];
m12_52 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="_element = element", span="129-129"];
m12_53 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="126-126"];
m12_316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="895-895"];
m12_317 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="898-898"];
m12_319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.ChildNodes.Count", span="900-900"];
m12_320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlNode childNode = node.ChildNodes[i]", span="902-902"];
m12_321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string nodeName = GetPropertyName(childNode, manager)", span="903-903"];
m12_335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="933-933"];
m12_337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="939-939"];
m12_338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(elementNames)", span="940-940"];
m12_339 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartArray()", span="942-942"];
m12_342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="946-946"];
m12_344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndArray()", span="949-949"];
m12_318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="900-900"];
m12_323 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="906-906"];
m12_325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="909-909"];
m12_328 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=nodesGroupedByName, span="917-917"];
m12_327 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="900-900"];
m12_326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes.Add(childNode)", span="912-912"];
m12_322 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> nodes", span="905-905"];
m12_324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes = new List<IXmlNode>()", span="908-908"];
m12_329 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="919-919"];
m12_330 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="bool writeArray", span="920-920"];
m12_331 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="groupedNodes.Count == 1", span="922-922"];
m12_332 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = IsArray(groupedNodes[0])", span="924-924"];
m12_336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string elementNames = nodeNameGroup.Key", span="937-937"];
m12_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < groupedNodes.Count", span="944-944"];
m12_333 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = true", span="928-928"];
m12_334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!writeArray", span="931-931"];
m12_340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="944-944"];
m12_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="944-944"];
m12_345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="895-895"];
m12_11 [cluster="Unk.CreateTextNode", file="XmlNodeConverter.cs", label="Entry Unk.CreateTextNode", span=""];
m12_73 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="207-207"];
m12_74 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="node.NodeType", span="209-209"];
m12_76 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper((XmlElement) node);", span="212-212"];
m12_78 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="return new XmlDeclarationWrapper((XmlDeclaration) node);", span="214-214"];
m12_79 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(node);", span="216-216"];
m12_75 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="211-211"];
m12_77 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="213-213"];
m12_80 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="207-207"];
m12_575 [cluster="string.Substring(int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int)", span="0-0"];
m12_63 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="149-149"];
m12_64 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="XmlNodeConverter.cs", label="_declaration = declaration", span="152-152"];
m12_65 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="149-149"];
m12_58 [cluster="Unk.SetAttributeNode", file="XmlNodeConverter.cs", label="Entry Unk.SetAttributeNode", span=""];
m12_92 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="277-277"];
m12_93 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="277-277"];
m12_171 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="446-446"];
m12_172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="448-448"];
m12_176 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return base.AppendChild(newChild);", span="456-456"];
m12_173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="declarationWrapper != null", span="449-449"];
m12_174 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Document.Declaration = declarationWrapper._declaration", span="451-451"];
m12_175 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return declarationWrapper;", span="452-452"];
m12_177 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="446-446"];
m12_645 [cluster="Unk.Where", file="XmlNodeConverter.cs", label="Entry Unk.Where", span=""];
m12_24 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="74-74"];
m12_25 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="76-76"];
m12_26 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="74-74"];
m12_167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="429-429"];
m12_168 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="431-431"];
m12_169 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceURI), value));", span="432-432"];
m12_170 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="429-429"];
m12_210 [cluster="Unk.Add", file="XmlNodeConverter.cs", label="Entry Unk.Add", span=""];
m12_413 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73"];
m12_131 [cluster="XText.cstr", file="XmlNodeConverter.cs", label="Entry XText.cstr", span=""];
m12_54 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="132-132"];
m12_55 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="134-134"];
m12_56 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_element.SetAttributeNode((XmlAttribute) xmlAttributeWrapper.WrappedNode)", span="136-136"];
m12_57 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="132-132"];
m12_411 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_273 [cluster="Unk.AddNamespace", file="XmlNodeConverter.cs", label="Entry Unk.AddNamespace", span=""];
m12_475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1367-1367"];
m12_578 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="propertyName == DeclarationName", span="1369-1369"];
m12_582 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1374-1374"];
m12_583 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Value.ToString()", span="1376-1376"];
m12_585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1379-1379"];
m12_586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="version = reader.Value.ToString()", span="1380-1380"];
m12_588 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1383-1383"];
m12_589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="encoding = reader.Value.ToString()", span="1384-1384"];
m12_591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1387-1387"];
m12_592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="standalone = reader.Value.ToString()", span="1388-1388"];
m12_593 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1391-1391"];
m12_594 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1395-1395"];
m12_595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(declaration)", span="1396-1396"];
m12_596 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1400-1400"];
m12_597 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(instruction)", span="1401-1401"];
m12_579 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string version = null", span="1371-1371"];
m12_580 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string encoding = null", span="1372-1372"];
m12_581 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string standalone = null", span="1373-1373"];
m12_584 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@version''", span="1378-1378"];
m12_587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@encoding''", span="1382-1382"];
m12_590 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@standalone''", span="1386-1386"];
m12_598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1367-1367"];
m12_213 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="645-645"];
m12_214 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new InvalidOperationException();", span="647-647"];
m12_215 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="645-645"];
m12_8 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="54-54"];
m12_9 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="56-56"];
m12_10 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="54-54"];
m12_19 [cluster="Unk.CreateWhitespace", file="XmlNodeConverter.cs", label="Entry Unk.CreateWhitespace", span=""];
m12_0 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="43-43"];
m12_1 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="_document = document", span="46-46"];
m12_2 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="43-43"];
m12_505 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="127-127"];
m12_27 [cluster="Unk.CreateXmlDeclaration", file="XmlNodeConverter.cs", label="Entry Unk.CreateXmlDeclaration", span=""];
m12_106 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="284-284"];
m12_107 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="284-284"];
m12_135 [cluster="XCData.cstr", file="XmlNodeConverter.cs", label="Entry XCData.cstr", span=""];
m12_348 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_142 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="403-403"];
m12_143 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="405-405"];
m12_144 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="403-403"];
m12_642 [cluster="string.Substring(int, int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m12_3 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="49-49"];
m12_4 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateComment(data));", span="51-51"];
m12_5 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="49-49"];
m12_450 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m12_20 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="69-69"];
m12_21 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="71-71"];
m12_22 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="69-69"];
m12_6 [cluster="XmlNodeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlNodeWrapper.cstr", span=""];
m12_457 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1132-1132"];
m12_458 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=propertyName, span="1134-1134"];
m12_460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1137-1137"];
m12_462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1140-1140"];
m12_464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1143-1143"];
m12_466 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1146-1146"];
m12_467 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1150-1150"];
m12_468 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="CreateInstruction(reader, document, currentNode, propertyName)", span="1152-1152"];
m12_469 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="1156-1156"];
m12_470 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1159-1159"];
m12_472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1165-1165"];
m12_459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=TextName, span="1136-1136"];
m12_461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=CDataName, span="1139-1139"];
m12_463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=WhitespaceName, span="1142-1142"];
m12_465 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=SignificantWhitespaceName, span="1145-1145"];
m12_471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return;", span="1160-1160"];
m12_473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1132-1132"];
m12_181 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="498-498"];
m12_182 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="498-498"];
m12_312 [cluster="Unk.ToBoolean", file="XmlNodeConverter.cs", label="Entry Unk.ToBoolean", span=""];
m12_89 [cluster="Unk.AppendChild", file="XmlNodeConverter.cs", label="Entry Unk.AppendChild", span=""];
m12_509 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="23-23"];
m12_154 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="703-703"];
m12_218 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="703-703"];
m12_274 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="844-844"];
m12_275 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string prefix = (node.NamespaceURI == null || (node.LocalName == ''xmlns'' && node.NamespaceURI == ''http://www.w3.org/2000/xmlns/''))\r\n                        ? null\r\n                        : manager.LookupPrefix(node.NamespaceURI)", span="846-848"];
m12_277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return prefix + '':'' + node.LocalName;", span="851-851"];
m12_278 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return node.LocalName;", span="853-853"];
m12_276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(prefix)", span="850-850"];
m12_279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="844-844"];
m12_253 [cluster="System.ArgumentException.ArgumentException(string, string)", file="XmlNodeConverter.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m12_414 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="634-634"];
m12_227 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="735-735"];
m12_228 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="return Element.GetPrefixOfNamespace(namespaceURI);", span="737-737"];
m12_229 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="735-735"];
m12_410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1491-1491"];
m12_643 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="return c.Where(a => a.NamespaceURI != JsonNamespaceUri);", span="1493-1493"];
m12_644 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1491-1491"];
m12_271 [cluster="System.Collections.Generic.List<T>.Reverse()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m12_98 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="280-280"];
m12_99 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="280-280"];
m12_178 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="593-593"];
m12_207 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Container.Add(newChild.WrappedNode)", span="595-595"];
m12_208 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return newChild;", span="596-596"];
m12_209 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="593-593"];
m12_307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="886-886"];
m12_308 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                                      ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceURI == JsonNamespaceUri)\r\n                                      : null", span="888-890"];
m12_309 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="892-892"];
m12_310 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="886-886"];
m12_146 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="408-408"];
m12_147 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="410-410"];
m12_148 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="408-408"];
m12_72 [cluster="Unk.WrapNode", file="XmlNodeConverter.cs", label="Entry Unk.WrapNode", span=""];
m12_23 [cluster="Unk.CreateSignificantWhitespace", file="XmlNodeConverter.cs", label="Entry Unk.CreateSignificantWhitespace", span=""];
m12_35 [cluster="XmlElementWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlElementWrapper.cstr", span=""];
m12_282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="856-856"];
m12_283 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="node.NodeType", span="858-858"];
m12_285 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="node.NamespaceURI == JsonNamespaceUri", span="861-861"];
m12_286 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''$'' + node.LocalName;", span="862-862"];
m12_287 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''@'' + ResolveFullName(node, manager);", span="864-864"];
m12_293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ResolveFullName(node, manager);", span="870-870"];
m12_295 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''?'' + ResolveFullName(node, manager);", span="872-872"];
m12_304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="882-882"];
m12_284 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="860-860"];
m12_288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="865-865"];
m12_290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="867-867"];
m12_292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="869-869"];
m12_294 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="871-871"];
m12_296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="873-873"];
m12_298 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="875-875"];
m12_300 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="877-877"];
m12_302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="879-879"];
m12_289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return CDataName;", span="866-866"];
m12_291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return CommentName;", span="868-868"];
m12_297 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return DeclarationName;", span="874-874"];
m12_299 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return SignificantWhitespaceName;", span="876-876"];
m12_301 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return TextName;", span="878-878"];
m12_303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return WhitespaceName;", span="880-880"];
m12_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="856-856"];
m12_454 [cluster="Newtonsoft.Json.JsonReader.Read()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="217-217"];
m12_151 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="413-413"];
m12_152 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(elementName));", span="415-415"];
m12_153 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="413-413"];
m12_150 [cluster="XProcessingInstruction.cstr", file="XmlNodeConverter.cs", label="Entry XProcessingInstruction.cstr", span=""];
m12_419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1072-1072"];
m12_420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1074-1074"];
m12_423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="typeof(XObject).IsAssignableFrom(objectType)", span="1079-1079"];
m12_424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType != typeof (XDocument) && objectType != typeof (XElement)", span="1081-1081"];
m12_429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1090-1090"];
m12_430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType != typeof (XmlDocument)", span="1092-1092"];
m12_436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1102-1102"];
m12_437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.StartObject", span="1104-1104"];
m12_440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1111-1111"];
m12_441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.Read()", span="1115-1115"];
m12_442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, rootNode)", span="1116-1116"];
m12_443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType == typeof(XElement)", span="1120-1120"];
m12_421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlDocument document = null", span="1075-1075"];
m12_422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode rootNode = null", span="1076-1076"];
m12_435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document == null || rootNode == null", span="1101-1101"];
m12_444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1122-1122"];
m12_447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return document.WrappedNode;", span="1129-1129"];
m12_425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1082-1082"];
m12_426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XDocument d = new XDocument()", span="1084-1084"];
m12_427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document = new XDocumentWrapper(d)", span="1085-1085"];
m12_428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="rootNode = document", span="1086-1086"];
m12_431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1093-1093"];
m12_432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlDocument d = new XmlDocument()", span="1095-1095"];
m12_433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document = new XmlDocumentWrapper(d)", span="1096-1096"];
m12_434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="rootNode = document", span="1097-1097"];
m12_438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1105-1105"];
m12_439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1107-1107"];
m12_445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="element.Remove()", span="1123-1123"];
m12_446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return element;", span="1125-1125"];
m12_448 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1072-1072"];
m12_132 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="388-388"];
m12_133 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XCData(data));", span="390-390"];
m12_134 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="388-388"];
m12_510 [cluster="Unk.PopScope", file="XmlNodeConverter.cs", label="Entry Unk.PopScope", span=""];
m12_241 [cluster="XmlNamespaceManager.cstr", file="XmlNodeConverter.cs", label="Entry XmlNamespaceManager.cstr", span=""];
m12_270 [cluster="System.Collections.Generic.List<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_415 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1103-1103"];
m12_162 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="424-424"];
m12_163 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper(new XAttribute(name, value));", span="426-426"];
m12_164 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="424-424"];
m12_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="670-670"];
m12_346 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1235-1235"];
m12_511 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1237-1237"];
m12_512 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1239-1239"];
m12_513 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(nestedArrayElement)", span="1241-1241"];
m12_515 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1244-1244"];
m12_516 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1246-1246"];
m12_519 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1252-1252"];
m12_521 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1257-1257"];
m12_522 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1258-1258"];
m12_514 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int count = 0", span="1243-1243"];
m12_517 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count++", span="1247-1247"];
m12_520 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count == 1 && WriteArrayAttribute", span="1255-1255"];
m12_518 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=WriteArrayAttribute, span="1250-1250"];
m12_523 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1235-1235"];
m12_118 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="324-324"];
m12_119 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="_declaration = declaration", span="327-327"];
m12_120 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="324-324"];
m12_349 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292"];
m12_112 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="300-300"];
m12_113 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="300-300"];
m12_126 [cluster="XObjectWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XObjectWrapper.cstr", span=""];
m12_149 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="528-528"];
m12_183 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="528-528"];
m12_136 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="393-393"];
m12_137 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XText(text));", span="395-395"];
m12_138 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="393-393"];
m12_508 [cluster="Unk.ToString", file="XmlNodeConverter.cs", label="Entry Unk.ToString", span=""];
m12_576 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1472-1472"];
m12_631 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1474-1474"];
m12_632 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.Length == 5", span="1476-1476"];
m12_635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName[5] == ':'", span="1481-1481"];
m12_636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1483-1483"];
m12_638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = null", span="1487-1487"];
m12_633 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = string.Empty", span="1478-1478"];
m12_634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="1479-1479"];
m12_637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="1484-1484"];
m12_639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return false;", span="1488-1488"];
m12_640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1472-1472"];
m12_12 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="59-59"];
m12_13 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="61-61"];
m12_14 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="59-59"];
m12_166 [cluster="XAttribute.cstr", file="XmlNodeConverter.cs", label="Entry XAttribute.cstr", span=""];
m12_351 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m12_179 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="468-468"];
m12_180 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="468-468"];
m12_100 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="281-281"];
m12_101 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="281-281"];
m12_104 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="283-283"];
m12_105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="283-283"];
m12_206 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="604-604"];
m12_211 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="_xmlObject = xmlObject", span="606-606"];
m12_212 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="604-604"];
m12_649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1504-1504"];
m12_650 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XObject).IsAssignableFrom(valueType)", span="1507-1507"];
m12_652 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1511-1511"];
m12_651 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return true;", span="1508-1508"];
m12_653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return true;", span="1512-1512"];
m12_654 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return false;", span="1515-1515"];
m12_655 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1504-1504"];
m12_46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="102-102"];
m12_47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceURI))", span="104-104"];
m12_48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="105-105"];
m12_49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="107-107"];
m12_50 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="102-102"];
m12_449 [cluster="System.Type.IsAssignableFrom(System.Type)", file="XmlNodeConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m12_128 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="383-383"];
m12_129 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XText(text));", span="385-385"];
m12_130 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="383-383"];
m12_524 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1262-1262"];
m12_530 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1264-1264"];
m12_531 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element is XElementWrapper", span="1268-1268"];
m12_532 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1270-1270"];
m12_533 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1272-1272"];
m12_534 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1262-1262"];
m12_646 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1493-1493"];
m12_69 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="204-204"];
m12_70 [cluster="lambda expression", file="XmlNodeConverter.cs", label="WrapNode(n)", span="204-204"];
m12_71 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="204-204"];
m12_81 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="227-227"];
m12_82 [cluster="lambda expression", file="XmlNodeConverter.cs", label="WrapNode(a)", span="227-227"];
m12_83 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="227-227"];
m12_186 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="559-559"];
m12_187 [cluster="lambda expression", file="XmlNodeConverter.cs", label="WrapNode(n)", span="559-559"];
m12_188 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="559-559"];
m12_223 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="716-716"];
m12_224 [cluster="lambda expression", file="XmlNodeConverter.cs", label="new XAttributeWrapper(a)", span="716-716"];
m12_225 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="716-716"];
m12_313 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="889-889"];
m12_314 [cluster="lambda expression", file="XmlNodeConverter.cs", label="a.LocalName == ''Array'' && a.NamespaceURI == JsonNamespaceUri", span="889-889"];
m12_315 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="889-889"];
m12_417 [cluster="lambda expression", color=red, community=0, file="XmlNodeConverter.cs", label="0: n.LocalName == node.LocalName", span="963-963"];
m12_416 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="963-963"];
m12_418 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="963-963"];
m12_528 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == propertyName", span="1257-1257"];
m12_527 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1257-1257"];
m12_529 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1257-1257"];
m12_629 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == propertyName", span="1436-1436"];
m12_628 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1436-1436"];
m12_630 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1436-1436"];
m12_647 [cluster="lambda expression", file="XmlNodeConverter.cs", label="a.NamespaceURI != JsonNamespaceUri", span="1493-1493"];
m12_648 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1493-1493"];
m12_451 [cluster="XDocument.cstr", file="XmlNodeConverter.cs", label="Entry XDocument.cstr", span=""];
m12_281 [cluster="string.IsNullOrEmpty(string)", file="XmlNodeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m12_121 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="360-360"];
m12_122 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="360-360"];
m12_116 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="312-312"];
m12_117 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="312-312"];
m12_37 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="89-89"];
m12_38 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceURI));", span="91-91"];
m12_39 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="89-89"];
m12_36 [cluster="Unk.CreateElement", file="XmlNodeConverter.cs", label="Entry Unk.CreateElement", span=""];
m12_114 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="301-301"];
m12_115 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="301-301"];
m12_244 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m12_347 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m12_216 [cluster="System.InvalidOperationException.InvalidOperationException()", file="XmlNodeConverter.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m12_526 [cluster="Unk.Single", file="XmlNodeConverter.cs", label="Entry Unk.Single", span=""];
m12_269 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_577 [cluster="System.Nullable<T>.GetValueOrDefault()", file="XmlNodeConverter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m12_184 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="552-552"];
m12_185 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="552-552"];
m12_94 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="278-278"];
m12_95 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="278-278"];
m12_350 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m12_59 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="139-139"];
m12_60 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="return _element.GetPrefixOfNamespace(namespaceURI);", span="141-141"];
m12_61 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="139-139"];
m12_230 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="782-782"];
m12_231 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode node = WrapXml(value)", span="784-784"];
m12_235 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="790-790"];
m12_236 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="792-792"];
m12_238 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="795-795"];
m12_232 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="786-786"];
m12_233 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="PushParentNamespaces(node, manager)", span="787-787"];
m12_234 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!OmitRootObject", span="789-789"];
m12_237 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!OmitRootObject", span="794-794"];
m12_239 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="782-782"];
m12_145 [cluster="XDeclaration.cstr", file="XmlNodeConverter.cs", label="Entry XDeclaration.cstr", span=""];
m12_155 [cluster="XElement.cstr", file="XmlNodeConverter.cs", label="Entry XElement.cstr", span=""];
m12_32 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="84-84"];
m12_33 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="86-86"];
m12_34 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="84-84"];
m12_219 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="708-708"];
m12_220 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="710-710"];
m12_221 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Element.Add(wrapper.WrappedNode)", span="711-711"];
m12_222 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="708-708"];
m12_242 [cluster="NameTable.cstr", file="XmlNodeConverter.cs", label="Entry NameTable.cstr", span=""];
m12_127 [cluster="XComment.cstr", file="XmlNodeConverter.cs", label="Entry XComment.cstr", span=""];
m12_15 [cluster="Unk.CreateCDataSection", file="XmlNodeConverter.cs", label="Entry Unk.CreateCDataSection", span=""];
m12_240 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="798-798"];
m12_247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="value is XObject", span="801-801"];
m12_248 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="return XContainerWrapper.WrapNode((XObject)value);", span="802-802"];
m12_249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="value is XmlNode", span="805-805"];
m12_250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper((XmlNode)value);", span="806-806"];
m12_251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="809-809"];
m12_252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="798-798"];
m12_16 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="64-64"];
m12_17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="66-66"];
m12_18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="64-64"];
m12_31 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverter.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m12_246 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m12_40 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="94-94"];
m12_41 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="96-96"];
m12_42 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="97-97"];
m12_43 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="99-99"];
m12_44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="94-94"];
m12_96 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="279-279"];
m12_97 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="279-279"];
m12_108 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="285-285"];
m12_109 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="285-285"];
m12_161 [cluster="Unk.Get", file="XmlNodeConverter.cs", label="Entry Unk.Get", span=""];
m12_506 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1405-1405"];
m12_599 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return (!string.IsNullOrEmpty(elementPrefix))\r\n               ? document.CreateElement(elementName, manager.LookupNamespace(elementPrefix))\r\n               : document.CreateElement(elementName);", span="1407-1409"];
m12_600 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1405-1405"];
m12_62 [cluster="Unk.GetPrefixOfNamespace", file="XmlNodeConverter.cs", label="Entry Unk.GetPrefixOfNamespace", span=""];
m12_456 [cluster="Unk.Remove", file="XmlNodeConverter.cs", label="Entry Unk.Remove", span=""];
m12_84 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="252-252"];
m12_85 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="254-254"];
m12_87 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return newChild;", span="257-257"];
m12_86 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_node.AppendChild(xmlNodeWrapper._node)", span="255-255"];
m12_88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="252-252"];
m12_245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="954-954"];
m12_352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NodeType", span="956-956"];
m12_355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="960-960"];
m12_357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", color=red, community=0, file="XmlNodeConverter.cs", label="0: IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName)", span="963-963"];
m12_358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, false)", span="965-965"];
m12_359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.Attributes", span="969-969"];
m12_362 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.AddNamespace(prefix, attribute.Value)", span="977-977"];
m12_363 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="981-981"];
m12_364 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="982-982"];
m12_365 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="ValueAttributes(node.Attributes).Count() == 0 && node.ChildNodes.Count == 1\r\n                && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="984-985"];
m12_366 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="988-988"];
m12_367 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="990-990"];
m12_368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteNull()", span="993-993"];
m12_369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="997-997"];
m12_371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.Attributes.Count", span="999-999"];
m12_372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1001-1001"];
m12_374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, true)", span="1004-1004"];
m12_375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1006-1006"];
m12_377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1012-1012"];
m12_378 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteComment(node.Value)", span="1013-1013"];
m12_385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceURI == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1021-1021"];
m12_387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceURI == JsonNamespaceUri", span="1024-1024"];
m12_388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.LocalName == ''Array''", span="1026-1026"];
m12_390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1030-1030"];
m12_391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1031-1031"];
m12_392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.Value)", span="1032-1032"];
m12_394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1035-1035"];
m12_395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1036-1036"];
m12_396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1037-1037"];
m12_398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@version'')", span="1041-1041"];
m12_399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Version)", span="1042-1042"];
m12_401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@encoding'')", span="1046-1046"];
m12_402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Encoding)", span="1047-1047"];
m12_404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@standalone'')", span="1051-1051"];
m12_405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Standalone)", span="1052-1052"];
m12_406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1055-1055"];
m12_407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1058-1058"];
m12_353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Document", span="958-958"];
m12_356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="962-962"];
m12_376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="1011-1011"];
m12_379 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="1015-1015"];
m12_393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="1034-1034"];
m12_354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentFragment", span="959-959"];
m12_360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="attribute.NamespaceURI == ''http://www.w3.org/2000/xmlns/''", span="971-971"];
m12_361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string prefix = (attribute.LocalName != ''xmlns'')\r\n                                  ? attribute.LocalName\r\n                                  : string.Empty", span="973-975"];
m12_370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="999-999"];
m12_373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="999-999"];
m12_380 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="1016-1016"];
m12_381 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="1017-1017"];
m12_382 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="1018-1018"];
m12_383 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="1019-1019"];
m12_384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="1020-1020"];
m12_386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1022-1022"];
m12_389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1027-1027"];
m12_397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="1039-1039"];
m12_400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1044-1044"];
m12_403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1049-1049"];
m12_408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="954-954"];
m12_243 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="812-812"];
m12_254 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="List<IXmlNode> parentElements = null", span="814-814"];
m12_255 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlNode parent = node", span="816-816"];
m12_264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="834-834"];
m12_267 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="838-838"];
m12_258 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements == null", span="821-821"];
m12_260 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements.Add(parent)", span="824-824"];
m12_261 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements != null", span="828-828"];
m12_262 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements.Reverse()", span="830-830"];
m12_263 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=parentElements, span="832-832"];
m12_256 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="(parent = parent.ParentNode) != null", span="817-817"];
m12_257 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parent.NodeType == XmlNodeType.Element", span="819-819"];
m12_259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements = new List<IXmlNode>()", span="822-822"];
m12_265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElement.Attributes", span="835-835"];
m12_266 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attribute.NamespaceURI == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="837-837"];
m12_268 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="812-812"];
m12_507 [cluster="Unk.LookupNamespace", file="XmlNodeConverter.cs", label="Entry Unk.LookupNamespace", span=""];
m12_504 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1278-1278"];
m12_535 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1280-1280"];
m12_538 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.String\r\n          && reader.TokenType != JsonToken.Null\r\n          && reader.TokenType != JsonToken.Boolean\r\n          && reader.TokenType != JsonToken.Integer\r\n          && reader.TokenType != JsonToken.Float\r\n          && reader.TokenType != JsonToken.Date\r\n          && reader.TokenType != JsonToken.StartConstructor", span="1285-1291"];
m12_539 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!finishedAttributes && !finishedElement && reader.Read()", span="1294-1294"];
m12_540 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType", span="1296-1296"];
m12_542 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeName = reader.Value.ToString()", span="1299-1299"];
m12_549 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1310-1310"];
m12_550 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = reader.Value.ToString()", span="1311-1311"];
m12_554 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1317-1317"];
m12_557 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1322-1322"];
m12_558 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = reader.Value.ToString()", span="1323-1323"];
m12_559 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1327-1327"];
m12_562 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.LookupNamespace(''json'' + i) != null", span="1332-1332"];
m12_566 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1339-1339"];
m12_572 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1359-1359"];
m12_536 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedAttributes = false", span="1281-1281"];
m12_551 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="1312-1312"];
m12_565 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1338-1338"];
m12_567 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1342-1342"];
m12_573 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return attributeNameValues;", span="1364-1364"];
m12_537 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedElement = false", span="1282-1282"];
m12_541 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="1298-1298"];
m12_570 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="1355-1355"];
m12_543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeValue", span="1300-1300"];
m12_544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(attributeName)", span="1302-1302"];
m12_545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="char firstChar = attributeName[0]", span="1304-1304"];
m12_548 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1309-1309"];
m12_569 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1351-1351"];
m12_546 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=firstChar, span="1306-1306"];
m12_547 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'@'", span="1308-1308"];
m12_555 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'$'", span="1320-1320"];
m12_568 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1345-1345"];
m12_553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1315-1315"];
m12_556 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1321-1321"];
m12_552 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string namespacePrefix", span="1314-1314"];
m12_560 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix == null", span="1328-1328"];
m12_561 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int? i = null", span="1331-1331"];
m12_563 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="i = i.GetValueOrDefault() + 1", span="1334-1334"];
m12_564 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix = ''json'' + i", span="1336-1336"];
m12_571 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedElement = true", span="1356-1356"];
m12_574 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1278-1278"];
m12_311 [cluster="Unk.SingleOrDefault", file="XmlNodeConverter.cs", label="Entry Unk.SingleOrDefault", span=""];
m12_280 [cluster="Unk.LookupPrefix", file="XmlNodeConverter.cs", label="Entry Unk.LookupPrefix", span=""];
m12_455 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1412-1412"];
m12_601 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType", span="1416-1416"];
m12_603 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1419-1419"];
m12_605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string propertyName = reader.Value.ToString()", span="1422-1422"];
m12_606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1423-1423"];
m12_607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="1425-1425"];
m12_609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1428-1428"];
m12_610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1430-1430"];
m12_613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlElement arrayElement = currentNode.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1436-1436"];
m12_614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1437-1437"];
m12_615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1442-1442"];
m12_617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string constructorName = reader.Value.ToString()", span="1446-1446"];
m12_618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1448-1448"];
m12_619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1450-1450"];
m12_621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1454-1454"];
m12_625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1460-1460"];
m12_626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1462-1462"];
m12_602 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="1418-1418"];
m12_616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.StartConstructor", span="1445-1445"];
m12_620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.Comment", span="1453-1453"];
m12_622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="1456-1456"];
m12_604 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1420-1420"];
m12_608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="int count = 0", span="1427-1427"];
m12_611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="count++", span="1431-1431"];
m12_612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="count == 1 && WriteArrayAttribute", span="1434-1434"];
m12_623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndArray", span="1457-1457"];
m12_624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return;", span="1458-1458"];
m12_627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1412-1412"];
m12_272 [cluster="Unk.PushScope", file="XmlNodeConverter.cs", label="Entry Unk.PushScope", span=""];
m12_656 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
m12_657 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
m12_658 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
m12_659 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
m12_660 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
m12_661 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
m12_662 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
m12_663 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
m12_664 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
m12_665 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m12_666 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.IXmlNode", span=""];
m12_667 [file="XmlNodeConverter.cs", label=string, span=""];
m12_668 [file="XmlNodeConverter.cs", label=propertyName, span=""];
m13_651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1064-1064"];
m13_652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1066-1066"];
m13_653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'')", span="1068-1068"];
m13_654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1064-1064"];
m13_952 [cluster="System.Text.StringBuilder.StringBuilder()", file="XmlNodeConverterTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m13_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="205-205"];
m13_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="207-209"];
m13_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="211-211"];
m13_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="213-213"];
m13_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="214-214"];
m13_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="216-216"];
m13_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="217-217"];
m13_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="219-219"];
m13_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="220-220"];
m13_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="221-221"];
m13_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="223-223"];
m13_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="224-224"];
m13_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="226-226"];
m13_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="205-205"];
m13_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1506-1506"];
m13_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1508-1512"];
m13_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="StringReader sr = new StringReader(input)", span="1514-1514"];
m13_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1516-1516"];
m13_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1518-1518"];
m13_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1519-1519"];
m13_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1521-1521"];
m13_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1522-1522"];
m13_975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1523-1523"];
m13_976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1525-1525"];
m13_977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1526-1526"];
m13_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1527-1527"];
m13_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1529-1529"];
m13_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1530-1530"];
m13_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1531-1531"];
m13_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1533-1533"];
m13_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1534-1534"];
m13_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1506-1506"];
m13_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2047-2047"];
m13_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2049-2049"];
m13_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2051-2051"];
m13_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2053-2053"];
m13_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2054-2054"];
m13_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2056-2056"];
m13_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2057-2057"];
m13_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="2059-2059"];
m13_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2060-2060"];
m13_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2061-2061"];
m13_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2062-2062"];
m13_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2064-2064"];
m13_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2065-2065"];
m13_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2047-2047"];
m13_10 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m13_1332 [cluster="System.TimeSpan.FromMinutes(double)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m13_675 [cluster="Unk.IsNull", file="XmlNodeConverterTest.cs", label="Entry Unk.IsNull", span=""];
m13_684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1102-1102"];
m13_685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1104-1104"];
m13_686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1106-1132"];
m13_688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="StringReader sr = new StringReader(newLinesText)", span="1135-1135"];
m13_696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1147-1147"];
m13_711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1167-1167"];
m13_687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="int count = 0", span="1134-1134"];
m13_691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1141-1141"];
m13_690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="count++", span="1138-1138"];
m13_689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="sr.ReadLine() != null", span="1136-1136"];
m13_692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1142-1142"];
m13_693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1143-1143"];
m13_694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1145-1145"];
m13_695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1146-1146"];
m13_697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1149-1149"];
m13_698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1150-1150"];
m13_699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1152-1152"];
m13_700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1153-1153"];
m13_701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1154-1154"];
m13_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1155-1155"];
m13_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1157-1157"];
m13_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1158-1158"];
m13_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1159-1159"];
m13_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1161-1161"];
m13_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1162-1162"];
m13_708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.Value)", span="1163-1163"];
m13_709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1165-1165"];
m13_710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1166-1166"];
m13_712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1169-1169"];
m13_713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1170-1170"];
m13_714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1172-1172"];
m13_715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1173-1173"];
m13_716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1175-1175"];
m13_717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1176-1176"];
m13_718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1178-1178"];
m13_719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1179-1179"];
m13_720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1180-1180"];
m13_721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1182-1182"];
m13_722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1183-1183"];
m13_723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1185-1185"];
m13_724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1186-1186"];
m13_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1188-1188"];
m13_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1189-1189"];
m13_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1102-1102"];
m13_665 [cluster="System.Convert.ToBase64String(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m13_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2513-2513"];
m13_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="XmlNodeConverterTest.cs", label="string json = ''new Date,()''", span="2515-2515"];
m13_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2516-2516"];
m13_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2518-2518"];
m13_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2513-2513"];
m13_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="86-86"];
m13_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="88-91"];
m13_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="93-93"];
m13_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="117-117"];
m13_23 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="95-95"];
m13_24 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="96-96"];
m13_25 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="98-98"];
m13_26 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="99-99"];
m13_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="101-101"];
m13_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="102-102"];
m13_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="104-104"];
m13_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="105-105"];
m13_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="107-107"];
m13_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonTextReader.TokenType)", span="108-108"];
m13_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(BigInteger), jsonTextReader.ValueType)", span="109-109"];
m13_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), jsonTextReader.Value)", span="110-110"];
m13_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="112-112"];
m13_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="113-113"];
m13_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="115-115"];
m13_39 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="var i = (BigInteger)((JValue)o[''ChildId'']).Value", span="118-118"];
m13_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(BigInteger.Parse(''333333333333333333333333333333333333333''), i)", span="119-119"];
m13_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="86-86"];
m13_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2120-2120"];
m13_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Name'''':1}''", span="2122-2122"];
m13_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2124-2124"];
m13_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2126-2126"];
m13_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2127-2127"];
m13_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2129-2129"];
m13_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2130-2130"];
m13_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2132-2132"];
m13_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2133-2133"];
m13_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2134-2134"];
m13_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1m, reader.Value)", span="2135-2135"];
m13_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2120-2120"];
m13_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="436-436"];
m13_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="438-457"];
m13_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="459-459"];
m13_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="461-461"];
m13_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="436-436"];
m13_283 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="XmlNodeConverterTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m13_1365 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="XmlNodeConverterTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m13_1333 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m13_19 [cluster="Unk.IsTrue", file="XmlNodeConverterTest.cs", label="Entry Unk.IsTrue", span=""];
m13_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2910-2910"];
m13_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="XmlNodeConverterTest.cs", label="string json = ''[[]]''", span="2912-2912"];
m13_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2914-2917"];
m13_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2919-2919"];
m13_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2921-2921"];
m13_1896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2910-2910"];
m13_960 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="940-940"];
m13_44 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m13_1013 [cluster="System.Convert.ToInt32(char)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m13_1226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1886-1886"];
m13_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1888-1888"];
m13_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="1890-1890"];
m13_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1886-1886"];
m13_1099 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m13_2032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3104-3104"];
m13_2033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3106-3106"];
m13_2034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3107-3107"];
m13_2036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="toggleReaderError.Error = true", span="3111-3111"];
m13_2039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="toggleReaderError.Error = false", span="3116-3116"];
m13_2042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="toggleReaderError.Error = true", span="3121-3121"];
m13_2044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="toggleReaderError.Error = false", span="3125-3125"];
m13_2047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="toggleReaderError.Error = true", span="3130-3130"];
m13_2051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="toggleReaderError.Error = false", span="3136-3136"];
m13_2035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3109-3109"];
m13_2037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3113-3113"];
m13_2038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3114-3114"];
m13_2040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3118-3118"];
m13_2041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3119-3119"];
m13_2043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3123-3123"];
m13_2045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3127-3127"];
m13_2046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3128-3128"];
m13_2048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3132-3132"];
m13_2049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3133-3133"];
m13_2050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3134-3134"];
m13_2052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3104-3104"];
m13_219 [cluster="object.ToString()", file="XmlNodeConverterTest.cs", label="Entry object.ToString()", span="0-0"];
m13_832 [cluster="int.ToString()", file="XmlNodeConverterTest.cs", label="Entry int.ToString()", span="0-0"];
m13_1889 [cluster="double.ToString(System.IFormatProvider)", file="XmlNodeConverterTest.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m13_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1056-1056"];
m13_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1058-1058"];
m13_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1060-1060"];
m13_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1056-1056"];
m13_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1764-1764"];
m13_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1766-1766"];
m13_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1767-1767"];
m13_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1769-1769"];
m13_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1770-1770"];
m13_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="jsonReader.ReadAsInt32()", span="1772-1772"];
m13_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1773-1773"];
m13_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1774-1774"];
m13_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1775-1775"];
m13_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="jsonReader.ReadAsInt32()", span="1777-1777"];
m13_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1778-1778"];
m13_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1779-1779"];
m13_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1780-1780"];
m13_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="jsonReader.ReadAsInt32()", span="1782-1782"];
m13_1153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1783-1783"];
m13_1154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1784-1784"];
m13_1155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1785-1785"];
m13_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1787-1787"];
m13_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1788-1788"];
m13_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1790-1790"];
m13_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1764-1764"];
m13_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2522-2522"];
m13_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2524-2524"];
m13_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2525-2525"];
m13_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2527-2527"];
m13_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2528-2528"];
m13_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2530-2530"];
m13_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2531-2531"];
m13_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2533-2533"];
m13_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2534-2534"];
m13_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2536-2536"];
m13_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2537-2537"];
m13_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2539-2539"];
m13_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2540-2540"];
m13_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2542-2542"];
m13_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2543-2543"];
m13_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2545-2545"];
m13_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2546-2546"];
m13_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2548-2548"];
m13_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2549-2549"];
m13_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2551-2551"];
m13_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2552-2552"];
m13_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2554-2554"];
m13_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2522-2522"];
m13_2053 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3202-3202"];
m13_2098 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="XmlNodeConverterTest.cs", label="_inner = inner", span="3204-3204"];
m13_2099 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3202-3202"];
m13_1480 [cluster="System.DateTime.DateTime(long)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m13_42 [cluster="Unk.Parse", file="XmlNodeConverterTest.cs", label="Entry Unk.Parse", span=""];
m13_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="923-923"];
m13_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="long i = int.MaxValue", span="925-925"];
m13_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="927-927"];
m13_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="long total = j + i", span="933-933"];
m13_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="928-928"];
m13_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="929-929"];
m13_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="934-938"];
m13_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="int j = 1", span="931-931"];
m13_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="j < 1000", span="931-931"];
m13_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="j++", span="931-931"];
m13_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="923-923"];
m13_2029 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m13_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="468-468"];
m13_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="470-470"];
m13_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="472-472"];
m13_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="474-474"];
m13_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="475-475"];
m13_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="476-476"];
m13_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="477-477"];
m13_272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="478-478"];
m13_273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="480-480"];
m13_274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0L, reader.Value)", span="481-481"];
m13_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="483-483"];
m13_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="484-484"];
m13_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="486-486"];
m13_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="487-487"];
m13_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="489-489"];
m13_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="490-490"];
m13_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="468-468"];
m13_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1093-1093"];
m13_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1095-1095"];
m13_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1096-1096"];
m13_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1098-1098"];
m13_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1093-1093"];
m13_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1539-1539"];
m13_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="int length = 20000", span="1541-1541"];
m13_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1542-1542"];
m13_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1544-1544"];
m13_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1546-1546"];
m13_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1547-1547"];
m13_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1549-1549"];
m13_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1550-1550"];
m13_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1551-1551"];
m13_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1552-1552"];
m13_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1554-1554"];
m13_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1555-1555"];
m13_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="1557-1557"];
m13_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1558-1558"];
m13_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1539-1539"];
m13_518 [cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m13_2090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3170-3170"];
m13_2091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3172-3182"];
m13_2092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies.['System.Xml.ReaderWriter'].source', line 6, position 21.'')", span="3184-3192"];
m13_2093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3170-3170"];
m13_258 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1616-1616"];
m13_2124 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="XmlNodeConverterTest.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m13_2123 [cluster="System.Math.Min(int, int)", file="XmlNodeConverterTest.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m13_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1327-1327"];
m13_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = null", span="1329-1329"];
m13_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''1''))", span="1331-1331"];
m13_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1332-1332"];
m13_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-1''))", span="1334-1334"];
m13_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1335-1335"];
m13_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''0''))", span="1337-1337"];
m13_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1338-1338"];
m13_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-0''))", span="1340-1340"];
m13_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1341-1341"];
m13_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1343-1343"];
m13_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1344-1344"];
m13_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1346-1346"];
m13_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1347-1347"];
m13_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1349-1349"];
m13_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1350-1350"];
m13_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1352-1352"];
m13_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1353-1353"];
m13_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1355-1355"];
m13_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1356-1356"];
m13_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1358-1358"];
m13_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1359-1359"];
m13_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1361-1361"];
m13_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1362-1362"];
m13_829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1364-1364"];
m13_830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1365-1365"];
m13_831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1327-1327"];
m13_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2834-2834"];
m13_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2836-2836"];
m13_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2837-2837"];
m13_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2838-2838"];
m13_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="2840-2840"];
m13_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2834-2834"];
m13_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="351-351"];
m13_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="353-353"];
m13_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="355-355"];
m13_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="357-357"];
m13_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="358-358"];
m13_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="360-360"];
m13_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="361-361"];
m13_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="string s = reader.Value.ToString()", span="363-363"];
m13_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, s.Length)", span="364-364"];
m13_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="StringInfo stringInfo = new StringInfo(s)", span="366-366"];
m13_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="367-367"];
m13_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="351-351"];
m13_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1734-1734"];
m13_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1736-1736"];
m13_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1737-1737"];
m13_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1739-1739"];
m13_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1740-1740"];
m13_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1742-1742"];
m13_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1743-1743"];
m13_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1744-1744"];
m13_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1745-1745"];
m13_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1747-1747"];
m13_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1748-1748"];
m13_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1749-1749"];
m13_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1750-1750"];
m13_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1752-1752"];
m13_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1753-1753"];
m13_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1754-1754"];
m13_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1755-1755"];
m13_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1757-1757"];
m13_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1758-1758"];
m13_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1760-1760"];
m13_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1734-1734"];
m13_100 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m13_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1804-1804"];
m13_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1806-1806"];
m13_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="XmlNodeConverterTest.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1808-1808"];
m13_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1809-1809"];
m13_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1804-1804"];
m13_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1006-1006"];
m13_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1008-1021"];
m13_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1023-1023"];
m13_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="int i = 0", span="1028-1028"];
m13_626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1030-1030"];
m13_628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1033-1033"];
m13_629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1034-1034"];
m13_630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''type'', reader.Value)", span="1035-1035"];
m13_625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="i < 14", span="1028-1028"];
m13_627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="i++", span="1028-1028"];
m13_631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1006-1006"];
m13_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1585-1585"];
m13_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1587-1588"];
m13_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1590-1590"];
m13_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1592-1592"];
m13_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1593-1593"];
m13_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1595-1595"];
m13_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1596-1596"];
m13_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1597-1597"];
m13_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1599-1599"];
m13_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1600-1600"];
m13_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1601-1601"];
m13_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1603-1603"];
m13_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1604-1604"];
m13_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1605-1605"];
m13_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1607-1607"];
m13_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1608-1608"];
m13_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1609-1609"];
m13_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1611-1611"];
m13_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1612-1612"];
m13_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1613-1613"];
m13_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1615-1615"];
m13_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1616-1616"];
m13_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1617-1617"];
m13_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1619-1619"];
m13_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1620-1620"];
m13_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1621-1621"];
m13_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1623-1623"];
m13_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1624-1624"];
m13_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1625-1625"];
m13_1043 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1627-1627"];
m13_1044 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1628-1628"];
m13_1045 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1629-1629"];
m13_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1631-1631"];
m13_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1632-1632"];
m13_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1633-1633"];
m13_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1635-1635"];
m13_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1636-1636"];
m13_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1637-1637"];
m13_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1639-1639"];
m13_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1640-1640"];
m13_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1641-1641"];
m13_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1643-1643"];
m13_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1644-1644"];
m13_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1645-1645"];
m13_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1647-1647"];
m13_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1648-1648"];
m13_1060 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1649-1649"];
m13_1061 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1651-1651"];
m13_1062 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1652-1652"];
m13_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1653-1653"];
m13_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1655-1655"];
m13_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1656-1656"];
m13_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1657-1657"];
m13_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1659-1659"];
m13_1068 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1660-1660"];
m13_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1661-1661"];
m13_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1663-1663"];
m13_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1664-1664"];
m13_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1665-1665"];
m13_1073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1667-1667"];
m13_1074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1668-1668"];
m13_1075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1585-1585"];
m13_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2094-2094"];
m13_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2096-2096"];
m13_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2098-2098"];
m13_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="2099-2099"];
m13_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2101-2101"];
m13_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2102-2102"];
m13_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2104-2104"];
m13_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2105-2105"];
m13_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="2107-2107"];
m13_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2108-2108"];
m13_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2109-2109"];
m13_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2111-2111"];
m13_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2114-2114"];
m13_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2115-2115"];
m13_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2112-2112"];
m13_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2094-2094"];
m13_2105 [cluster="System.Exception.Exception(string)", file="XmlNodeConverterTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m13_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="147-147"];
m13_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="149-154"];
m13_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="156-156"];
m13_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="158-158"];
m13_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="159-159"];
m13_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]', line 2, position 42.'')", span="161-161"];
m13_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '3.3' is not a valid integer. Path '[1]', line 3, position 6.'')", span="163-163"];
m13_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Error reading integer. Unexpected token: Undefined. Path '[2]', line 4, position 3.'')", span="165-165"];
m13_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''Input string '0f' is not a valid integer. Path '[3]', line 5, position 5.'')", span="167-167"];
m13_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="169-169"];
m13_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="170-170"];
m13_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="172-172"];
m13_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="147-147"];
m13_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2425-2425"];
m13_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="XmlNodeConverterTest.cs", label="string json = ''[true ''", span="2427-2427"];
m13_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2428-2428"];
m13_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2430-2430"];
m13_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2431-2431"];
m13_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2432-2432"];
m13_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2425-2425"];
m13_799 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703"];
m13_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1048-1048"];
m13_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1050-1050"];
m13_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1052-1052"];
m13_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1048-1048"];
m13_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="305-305"];
m13_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="string json = ''[NaN]''", span="307-307"];
m13_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="309-309"];
m13_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="310-310"];
m13_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="312-312"];
m13_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="313-313"];
m13_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="315-315"];
m13_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="305-305"];
m13_2107 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3222-3222"];
m13_2108 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="XmlNodeConverterTest.cs", label="bytes = content", span="3224-3224"];
m13_2110 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="XmlNodeConverterTest.cs", label="this.bytesPerRead = bytesPerRead", span="3226-3226"];
m13_2109 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="XmlNodeConverterTest.cs", label="totalBytesRead = 0", span="3225-3225"];
m13_2111 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(byte[], int)", span="3222-3222"];
m13_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="840-840"];
m13_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="842-842"];
m13_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="843-843"];
m13_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="845-845"];
m13_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="846-846"];
m13_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="848-848"];
m13_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="849-849"];
m13_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="851-851"];
m13_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="852-852"];
m13_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="854-854"];
m13_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="855-855"];
m13_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="857-857"];
m13_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="858-858"];
m13_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="860-860"];
m13_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="861-861"];
m13_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="863-863"];
m13_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="864-864"];
m13_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="866-866"];
m13_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="867-867"];
m13_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="869-869"];
m13_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="870-870"];
m13_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="872-872"];
m13_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="873-873"];
m13_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="875-875"];
m13_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="876-876"];
m13_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="877-877"];
m13_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="879-879"];
m13_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="880-880"];
m13_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="881-881"];
m13_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="883-883"];
m13_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="840-840"];
m13_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="248-248"];
m13_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="250-250"];
m13_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="252-252"];
m13_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="254-254"];
m13_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="255-255"];
m13_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="257-257"];
m13_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="258-258"];
m13_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="260-260"];
m13_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="261-261"];
m13_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="263-263"];
m13_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="264-264"];
m13_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'')", span="266-266"];
m13_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="248-248"];
m13_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1296-1296"];
m13_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="XmlNodeConverterTest.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1298-1318"];
m13_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1320-1320"];
m13_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1321-1321"];
m13_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1296-1296"];
m13_953 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m13_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2454-2454"];
m13_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="string json = ''{hi:1, ''", span="2456-2456"];
m13_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2457-2457"];
m13_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2459-2459"];
m13_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2460-2460"];
m13_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2461-2461"];
m13_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2462-2462"];
m13_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2454-2454"];
m13_1420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2171-2171"];
m13_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2173-2173"];
m13_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2175-2175"];
m13_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2171-2171"];
m13_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="785-785"];
m13_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<ArgumentNullException> (\r\n                () => { new JsonTextReader (null); },\r\n                new string[] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="787-792"];
m13_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="785-785"];
m13_669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1083-1083"];
m13_670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1085-1085"];
m13_671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1086-1086"];
m13_672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1088-1088"];
m13_673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1089-1089"];
m13_674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1083-1083"];
m13_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="545-545"];
m13_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="XmlNodeConverterTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="547-553"];
m13_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="555-555"];
m13_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="556-556"];
m13_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="545-545"];
m13_728 [cluster="System.IO.StringReader.ReadLine()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m13_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1369-1369"];
m13_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = null", span="1371-1371"];
m13_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1373-1373"];
m13_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1374-1374"];
m13_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1376-1376"];
m13_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1377-1377"];
m13_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1379-1379"];
m13_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1380-1380"];
m13_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1382-1382"];
m13_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1383-1383"];
m13_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1385-1385"];
m13_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1386-1386"];
m13_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1388-1388"];
m13_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1389-1389"];
m13_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1390-1390"];
m13_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1392-1392"];
m13_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1393-1393"];
m13_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1395-1395"];
m13_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1396-1396"];
m13_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1398-1398"];
m13_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1399-1399"];
m13_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1369-1369"];
m13_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="577-577"];
m13_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="579-585"];
m13_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="StringReader sr = new StringReader(input)", span="587-587"];
m13_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="589-589"];
m13_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="595-595"];
m13_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="596-596"];
m13_329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="597-597"];
m13_330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="599-599"];
m13_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="600-600"];
m13_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="601-601"];
m13_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="602-602"];
m13_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="604-604"];
m13_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="605-605"];
m13_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="606-606"];
m13_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="607-607"];
m13_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="608-608"];
m13_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="610-610"];
m13_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="611-611"];
m13_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="612-612"];
m13_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="613-613"];
m13_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="614-614"];
m13_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="616-616"];
m13_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="617-617"];
m13_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="618-618"];
m13_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="619-619"];
m13_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="620-620"];
m13_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="622-622"];
m13_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="623-623"];
m13_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="624-624"];
m13_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="625-625"];
m13_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="627-627"];
m13_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="628-628"];
m13_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="629-629"];
m13_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="630-630"];
m13_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="631-631"];
m13_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(22, jsonReader.LinePosition)", span="632-632"];
m13_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="634-634"];
m13_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="635-635"];
m13_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="636-636"];
m13_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="637-637"];
m13_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="638-638"];
m13_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="639-639"];
m13_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="641-641"];
m13_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="642-642"];
m13_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="643-643"];
m13_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(4, jsonReader.LinePosition)", span="644-644"];
m13_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="646-646"];
m13_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="647-647"];
m13_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="648-648"];
m13_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, jsonReader.LinePosition)", span="649-649"];
m13_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="651-651"];
m13_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="577-577"];
m13_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="494-494"];
m13_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="XmlNodeConverterTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="496-500"];
m13_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="502-502"];
m13_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'')", span="504-509"];
m13_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="494-494"];
m13_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2187-2187"];
m13_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2189-2189"];
m13_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2191-2191"];
m13_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2187-2187"];
m13_1190 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m13_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2179-2179"];
m13_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2181-2181"];
m13_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2183-2183"];
m13_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2179-2179"];
m13_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2217-2217"];
m13_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2219-2219"];
m13_1457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2221-2221"];
m13_1458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2222-2222"];
m13_1459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2224-2224"];
m13_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2225-2225"];
m13_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2227-2227"];
m13_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2228-2228"];
m13_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2230-2230"];
m13_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2231-2231"];
m13_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2232-2232"];
m13_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2235-2235"];
m13_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2236-2236"];
m13_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(9.99m, d)", span="2233-2233"];
m13_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2217-2217"];
m13_43 [cluster="Unk.IsFalse", file="XmlNodeConverterTest.cs", label="Entry Unk.IsFalse", span=""];
m13_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m13_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2240-2240"];
m13_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2242-2253"];
m13_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2255-2255"];
m13_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="int i = 0", span="2260-2260"];
m13_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2262-2262"];
m13_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2265-2265"];
m13_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2266-2266"];
m13_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="i < 13", span="2260-2260"];
m13_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="i++", span="2260-2260"];
m13_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2240-2240"];
m13_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2925-2925"];
m13_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="string json = ''[[[[]]],[[]]]''", span="2927-2927"];
m13_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2929-2932"];
m13_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2934-2934"];
m13_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2935-2935"];
m13_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2937-2937"];
m13_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2938-2938"];
m13_1907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2940-2940"];
m13_1908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2941-2941"];
m13_1909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2943-2943"];
m13_1910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2944-2944"];
m13_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2946-2946"];
m13_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2947-2947"];
m13_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2949-2949"];
m13_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2950-2950"];
m13_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2952-2952"];
m13_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2953-2953"];
m13_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="2955-2955"];
m13_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2956-2956"];
m13_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2958-2958"];
m13_1920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2959-2959"];
m13_1921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2961-2961"];
m13_1922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2962-2962"];
m13_1923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2964-2964"];
m13_1924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2965-2965"];
m13_1925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2967-2967"];
m13_1926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2968-2968"];
m13_1927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2970-2970"];
m13_1928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2925-2925"];
m13_115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="230-230"];
m13_116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="string json = ''0aq2dun13.hod''", span="232-232"];
m13_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="234-234"];
m13_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="238-238"];
m13_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="242-242"];
m13_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="236-236"];
m13_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="240-240"];
m13_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="244-244"];
m13_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="230-230"];
m13_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1858-1858"];
m13_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1860-1860"];
m13_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1862-1862"];
m13_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1858-1858"];
m13_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="405-405"];
m13_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="XmlNodeConverterTest.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="407-407"];
m13_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="409-409"];
m13_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="410-410"];
m13_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="XmlNodeConverterTest.cs", label="string s = (string)reader.Value", span="412-412"];
m13_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="XmlNodeConverterTest.cs", label="return s;", span="414-414"];
m13_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="405-405"];
m13_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2195-2195"];
m13_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2197-2197"];
m13_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2199-2199"];
m13_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2201-2201"];
m13_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2202-2202"];
m13_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2204-2204"];
m13_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2205-2205"];
m13_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2207-2207"];
m13_1449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2208-2208"];
m13_1450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2209-2209"];
m13_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2212-2212"];
m13_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2213-2213"];
m13_1451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2210-2210"];
m13_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2195-2195"];
m13_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1443-1443"];
m13_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="StringBuilder sb = new StringBuilder()", span="1445-1445"];
m13_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1446-1446"];
m13_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="string json = sb.ToString()", span="1485-1485"];
m13_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1448-1451"];
m13_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteStartArray()", span="1453-1453"];
m13_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteValue(true)", span="1454-1454"];
m13_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteStartObject()", span="1456-1456"];
m13_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1457-1457"];
m13_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteValue(99)", span="1458-1458"];
m13_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WritePropertyName(''string'')", span="1459-1459"];
m13_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1460-1460"];
m13_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WritePropertyName(''array'')", span="1461-1461"];
m13_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteStartArray()", span="1463-1463"];
m13_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteValue(i)", span="1466-1466"];
m13_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteStartObject()", span="1469-1469"];
m13_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1470-1470"];
m13_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1471-1471"];
m13_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteEndObject()", span="1472-1472"];
m13_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteValue(5)", span="1474-1474"];
m13_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteEndArray()", span="1475-1475"];
m13_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteEndObject()", span="1477-1477"];
m13_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1479-1479"];
m13_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteNull()", span="1480-1480"];
m13_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteNull()", span="1481-1481"];
m13_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="jsonWriter.WriteEndArray()", span="1482-1482"];
m13_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="int i = 0", span="1464-1464"];
m13_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="i < 5", span="1464-1464"];
m13_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="i++", span="1464-1464"];
m13_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1487-1487"];
m13_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1489-1489"];
m13_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json, sb.ToString())", span="1502-1502"];
m13_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1499-1499"];
m13_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="sb = new StringBuilder()", span="1491-1491"];
m13_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="sw = new StringWriter(sb)", span="1492-1492"];
m13_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1494-1497"];
m13_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1443-1443"];
m13_257 [cluster="System.IO.MemoryStream.MemoryStream()", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m13_2106 [cluster="System.IO.TextReader.Read(char[], int, int)", file="XmlNodeConverterTest.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m13_1935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2974-2974"];
m13_1936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2976-2976"];
m13_1937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2978-2978"];
m13_1938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2980-2980"];
m13_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2982-2982"];
m13_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2983-2983"];
m13_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2985-2985"];
m13_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2986-2986"];
m13_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2987-2987"];
m13_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2989-2989"];
m13_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2990-2990"];
m13_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2991-2991"];
m13_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2993-2993"];
m13_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2994-2994"];
m13_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2995-2995"];
m13_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2997-2997"];
m13_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2998-2998"];
m13_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="2999-2999"];
m13_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3001-3001"];
m13_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3002-3002"];
m13_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="3003-3003"];
m13_1956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3005-3005"];
m13_1957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3006-3006"];
m13_1958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3007-3007"];
m13_1959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3009-3009"];
m13_1960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3010-3010"];
m13_1961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="3011-3011"];
m13_1962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3013-3013"];
m13_1963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3014-3014"];
m13_1964 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="3015-3015"];
m13_1965 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3017-3017"];
m13_1966 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3018-3018"];
m13_1967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="3019-3019"];
m13_1968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3021-3021"];
m13_1969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3022-3022"];
m13_1970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3023-3023"];
m13_1971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3025-3025"];
m13_1972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3026-3026"];
m13_1973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3027-3027"];
m13_1974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3029-3029"];
m13_1975 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2974-2974"];
m13_175 [cluster="System.Convert.ToDecimal(double)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m13_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2300-2300"];
m13_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="string json = ''new Date\0()''", span="2302-2302"];
m13_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2303-2303"];
m13_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2308-2308"];
m13_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2309-2309"];
m13_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2310-2310"];
m13_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2312-2312"];
m13_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2313-2313"];
m13_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2300-2300"];
m13_1413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2163-2163"];
m13_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2165-2165"];
m13_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2167-2167"];
m13_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2163-2163"];
m13_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1403-1403"];
m13_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = null", span="1405-1405"];
m13_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1407-1407"];
m13_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1408-1408"];
m13_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1409-1409"];
m13_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1410-1410"];
m13_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1412-1412"];
m13_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1413-1413"];
m13_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1414-1414"];
m13_889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1415-1415"];
m13_890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1417-1417"];
m13_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1418-1418"];
m13_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1419-1419"];
m13_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1420-1420"];
m13_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1422-1422"];
m13_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1423-1423"];
m13_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1424-1424"];
m13_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1425-1425"];
m13_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1427-1427"];
m13_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1428-1428"];
m13_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1430-1430"];
m13_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1431-1431"];
m13_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1432-1432"];
m13_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1433-1433"];
m13_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1435-1435"];
m13_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="1436-1436"];
m13_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1438-1438"];
m13_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1439-1439"];
m13_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1403-1403"];
m13_632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1039-1039"];
m13_633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1041-1041"];
m13_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1042-1042"];
m13_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="1044-1044"];
m13_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1039-1039"];
m13_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="513-513"];
m13_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="515-519"];
m13_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="521-521"];
m13_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="526-526"];
m13_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="527-527"];
m13_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="529-529"];
m13_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="530-530"];
m13_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="532-532"];
m13_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="533-533"];
m13_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="535-535"];
m13_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="536-536"];
m13_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="538-538"];
m13_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="539-539"];
m13_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'')", span="541-541"];
m13_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="513-513"];
m13_962 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="781-781"];
m13_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1562-1562"];
m13_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1564-1564"];
m13_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1566-1566"];
m13_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1571-1571"];
m13_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1572-1572"];
m13_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1574-1574"];
m13_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1575-1575"];
m13_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1577-1577"];
m13_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1578-1578"];
m13_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1580-1580"];
m13_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1581-1581"];
m13_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1562-1562"];
m13_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="55-55"];
m13_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="57-57"];
m13_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="59-59"];
m13_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="60-60"];
m13_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="61-61"];
m13_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="62-62"];
m13_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="64-64"];
m13_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="55-55"];
m13_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="124-124"];
m13_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="126-128"];
m13_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="130-130"];
m13_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="132-132"];
m13_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="133-133"];
m13_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="135-135"];
m13_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="136-136"];
m13_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 53.'')", span="138-138"];
m13_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="140-140"];
m13_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="141-141"];
m13_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="143-143"];
m13_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="124-124"];
m13_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="656-656"];
m13_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="658-662"];
m13_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="StringReader sr = new StringReader(input)", span="664-664"];
m13_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(sr)", span="666-666"];
m13_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="668-668"];
m13_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="670-670"];
m13_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="671-671"];
m13_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="672-672"];
m13_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual('''', reader.Path)", span="673-673"];
m13_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="675-675"];
m13_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="676-676"];
m13_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="677-677"];
m13_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="678-678"];
m13_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="680-680"];
m13_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="681-681"];
m13_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="682-682"];
m13_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="683-683"];
m13_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="684-684"];
m13_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="685-685"];
m13_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="687-687"];
m13_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="688-688"];
m13_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="689-689"];
m13_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="690-690"];
m13_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="692-692"];
m13_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="693-693"];
m13_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="694-694"];
m13_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="695-695"];
m13_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="697-697"];
m13_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="698-698"];
m13_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="699-699"];
m13_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="700-700"];
m13_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="701-701"];
m13_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="703-703"];
m13_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="704-704"];
m13_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2L, reader.Value)", span="705-705"];
m13_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="706-706"];
m13_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="707-707"];
m13_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="709-709"];
m13_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="710-710"];
m13_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="711-711"];
m13_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="712-712"];
m13_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="713-713"];
m13_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="715-715"];
m13_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="716-716"];
m13_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="717-717"];
m13_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="718-718"];
m13_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="719-719"];
m13_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="721-721"];
m13_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="722-722"];
m13_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.Value)", span="723-723"];
m13_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="724-724"];
m13_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="725-725"];
m13_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="727-727"];
m13_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="728-728"];
m13_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="729-729"];
m13_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="730-730"];
m13_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="732-732"];
m13_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="733-733"];
m13_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="734-734"];
m13_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="735-735"];
m13_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="737-737"];
m13_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="738-738"];
m13_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="739-739"];
m13_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="740-740"];
m13_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="742-742"];
m13_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="743-743"];
m13_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="744-744"];
m13_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="745-745"];
m13_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="747-747"];
m13_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="748-748"];
m13_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="749-749"];
m13_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="750-750"];
m13_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="752-752"];
m13_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="753-753"];
m13_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="754-754"];
m13_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="755-755"];
m13_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="757-757"];
m13_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="758-758"];
m13_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="759-759"];
m13_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="760-760"];
m13_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="762-762"];
m13_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="763-763"];
m13_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="764-764"];
m13_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="765-765"];
m13_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="767-767"];
m13_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="768-768"];
m13_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="769-769"];
m13_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="770-770"];
m13_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="772-772"];
m13_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="773-773"];
m13_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="774-774"];
m13_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="775-775"];
m13_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="777-777"];
m13_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="778-778"];
m13_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="779-779"];
m13_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual('''', reader.Path)", span="780-780"];
m13_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="656-656"];
m13_8 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m13_659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1072-1072"];
m13_660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="string helloWorld = ''Hello world!''", span="1074-1074"];
m13_661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1075-1075"];
m13_662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1077-1077"];
m13_663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1079-1079"];
m13_664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1072-1072"];
m13_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2500-2500"];
m13_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="string json = ''new Date()''", span="2502-2502"];
m13_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2503-2503"];
m13_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2505-2505"];
m13_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2506-2506"];
m13_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2508-2508"];
m13_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2509-2509"];
m13_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2500-2500"];
m13_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="965-965"];
m13_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="BigInteger i = new BigInteger(long.MaxValue)", span="967-967"];
m13_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="969-969"];
m13_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="BigInteger total = i + j", span="975-975"];
m13_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="970-970"];
m13_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="971-971"];
m13_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="int j = 1", span="973-973"];
m13_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="j < 1000", span="973-973"];
m13_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="j++", span="973-973"];
m13_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="977-977"];
m13_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="978-978"];
m13_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="980-980"];
m13_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="965-965"];
m13_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1943-1943"];
m13_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1945-1945"];
m13_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1947-1947"];
m13_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1949-1949"];
m13_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1950-1950"];
m13_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1952-1952"];
m13_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1953-1953"];
m13_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="1955-1955"];
m13_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1956-1956"];
m13_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1957-1957"];
m13_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1958-1958"];
m13_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1960-1960"];
m13_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1961-1961"];
m13_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1943-1943"];
m13_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1251-1251"];
m13_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1253-1253"];
m13_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="StringReader sr = new StringReader(input)", span="1255-1255"];
m13_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1257-1257"];
m13_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1259-1259"];
m13_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1261-1261"];
m13_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1262-1262"];
m13_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1263-1263"];
m13_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1265-1265"];
m13_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1266-1266"];
m13_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1267-1267"];
m13_786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1269-1269"];
m13_787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1270-1270"];
m13_788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1271-1271"];
m13_789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1272-1272"];
m13_790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="1273-1273"];
m13_791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="1275-1275"];
m13_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1276-1276"];
m13_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="1277-1277"];
m13_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1251-1251"];
m13_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2796-2796"];
m13_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="XmlNodeConverterTest.cs", label="string json = @''0x20''", span="2798-2798"];
m13_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2800-2800"];
m13_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2802-2802"];
m13_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2803-2803"];
m13_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(32m, reader.Value)", span="2804-2804"];
m13_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2796-2796"];
m13_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="943-943"];
m13_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="long i = int.MinValue", span="945-945"];
m13_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="947-947"];
m13_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(i, reader.Value)", span="950-950"];
m13_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="long total = -j + i", span="954-954"];
m13_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="948-948"];
m13_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="949-949"];
m13_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="955-959"];
m13_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="int j = 1", span="952-952"];
m13_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="j < 1000", span="952-952"];
m13_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="j++", span="952-952"];
m13_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="943-943"];
m13_2100 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3207-3207"];
m13_2101 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="XmlNodeConverterTest.cs", label=Error, span="3209-3209"];
m13_2103 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="XmlNodeConverterTest.cs", label="return _inner.Read(buffer, index, 1);", span="3212-3212"];
m13_2102 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="XmlNodeConverterTest.cs", label="throw new Exception(''Read error'');", span="3210-3210"];
m13_2104 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3207-3207"];
m13_955 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="884-884"];
m13_1638 [cluster="Unk.>", file="XmlNodeConverterTest.cs", label="Entry Unk.>", span=""];
m13_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1193-1193"];
m13_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1195-1195"];
m13_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1196-1196"];
m13_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1197-1197"];
m13_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1198-1198"];
m13_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1199-1199"];
m13_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1200-1200"];
m13_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1201-1201"];
m13_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1202-1202"];
m13_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1203-1203"];
m13_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1204-1204"];
m13_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="1205-1205"];
m13_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1193-1193"];
m13_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2466-2466"];
m13_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="string json = ''[]''", span="2468-2468"];
m13_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2469-2469"];
m13_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2471-2471"];
m13_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2472-2472"];
m13_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2474-2474"];
m13_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2475-2475"];
m13_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2466-2466"];
m13_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2445-2445"];
m13_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="XmlNodeConverterTest.cs", label="string json = ''new Date !''", span="2447-2447"];
m13_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2448-2448"];
m13_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2450-2450"];
m13_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2445-2445"];
m13_282 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3229-3229"];
m13_2112 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3229-3229"];
m13_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="887-887"];
m13_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="889-906"];
m13_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="908-908"];
m13_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="int i = 0", span="913-913"];
m13_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="915-915"];
m13_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="918-918"];
m13_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="919-919"];
m13_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="i < 15", span="913-913"];
m13_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="i++", span="913-913"];
m13_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="887-887"];
m13_264 [cluster="Newtonsoft.Json.JsonReader.Read()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m13_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1282-1282"];
m13_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="XmlNodeConverterTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="1284-1290"];
m13_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="XmlNodeConverterTest.cs", label="object o = JsonConvert.DeserializeObject(input)", span="1292-1292"];
m13_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="1282-1282"];
m13_516 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="387-387"];
m13_833 [cluster="long.ToString()", file="XmlNodeConverterTest.cs", label="Entry long.ToString()", span="0-0"];
m13_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2139-2139"];
m13_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Name'''': 1.1}''", span="2141-2141"];
m13_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2143-2143"];
m13_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2145-2145"];
m13_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2146-2146"];
m13_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2148-2148"];
m13_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2149-2149"];
m13_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2151-2151"];
m13_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2139-2139"];
m13_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2359-2359"];
m13_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2361-2361"];
m13_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="reader.SupportMultipleContent = true", span="2362-2362"];
m13_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2364-2364"];
m13_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2365-2365"];
m13_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2367-2367"];
m13_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2368-2368"];
m13_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2370-2370"];
m13_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2371-2371"];
m13_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2373-2373"];
m13_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2374-2374"];
m13_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2376-2376"];
m13_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2377-2377"];
m13_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2379-2379"];
m13_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2380-2380"];
m13_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m13_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2383-2383"];
m13_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2385-2385"];
m13_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2386-2386"];
m13_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2388-2388"];
m13_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2389-2389"];
m13_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2391-2391"];
m13_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2392-2392"];
m13_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2394-2394"];
m13_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2395-2395"];
m13_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2397-2397"];
m13_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2398-2398"];
m13_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2400-2400"];
m13_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2401-2401"];
m13_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2403-2403"];
m13_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2404-2404"];
m13_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2406-2406"];
m13_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2407-2407"];
m13_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2409-2409"];
m13_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2410-2410"];
m13_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2412-2412"];
m13_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2413-2413"];
m13_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2415-2415"];
m13_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2416-2416"];
m13_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2418-2418"];
m13_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2419-2419"];
m13_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2421-2421"];
m13_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2359-2359"];
m13_606 [cluster="StringReader.cstr", file="XmlNodeConverterTest.cs", label="Entry StringReader.cstr", span=""];
m13_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2760-2760"];
m13_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="string json = @''//comment''", span="2762-2762"];
m13_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2764-2764"];
m13_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2766-2766"];
m13_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2767-2767"];
m13_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2768-2768"];
m13_1796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2770-2770"];
m13_1797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2760-2760"];
m13_571 [cluster="long.ToString(System.IFormatProvider)", file="XmlNodeConverterTest.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m13_966 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860"];
m13_964 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433"];
m13_2125 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3277-3277"];
m13_2126 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="XmlNodeConverterTest.cs", label="throw new NotSupportedException();", span="3279-3279"];
m13_2127 [cluster="Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Seek(long, System.IO.SeekOrigin)", span="3277-3277"];
m13_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2784-2784"];
m13_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="XmlNodeConverterTest.cs", label="string json = @''010''", span="2786-2786"];
m13_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2788-2788"];
m13_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2790-2790"];
m13_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2791-2791"];
m13_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(8m, reader.Value)", span="2792-2792"];
m13_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2784-2784"];
m13_2128 [cluster="System.NotSupportedException.NotSupportedException()", file="XmlNodeConverterTest.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m13_1888 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m13_959 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819"];
m13_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1673-1673"];
m13_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1675-1677"];
m13_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1679-1679"];
m13_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1681-1681"];
m13_1080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1682-1682"];
m13_1081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1684-1684"];
m13_1082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1685-1685"];
m13_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1687-1687"];
m13_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1688-1688"];
m13_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'')", span="1690-1690"];
m13_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1673-1673"];
m13_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2479-2479"];
m13_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="string json = ''{}''", span="2481-2481"];
m13_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2482-2482"];
m13_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2484-2484"];
m13_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2485-2485"];
m13_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2487-2487"];
m13_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2488-2488"];
m13_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2479-2479"];
m13_11 [cluster="Unk.AreEqual", file="XmlNodeConverterTest.cs", label="Entry Unk.AreEqual", span=""];
m13_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1694-1694"];
m13_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1696-1696"];
m13_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1697-1697"];
m13_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1699-1699"];
m13_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="Assert.IsNotNull(data)", span="1700-1700"];
m13_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1702-1702"];
m13_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1703-1703"];
m13_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1694-1694"];
m13_2089 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="545-545"];
m13_957 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m13_757 [cluster="Unk.AreEquivalent", file="XmlNodeConverterTest.cs", label="Entry Unk.AreEquivalent", span=""];
m13_607 [cluster="Unk.ToString", file="XmlNodeConverterTest.cs", label="Entry Unk.ToString", span=""];
m13_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="804-804"];
m13_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="XmlNodeConverterTest.cs", label="string s = new string('a', 10000)", span="806-806"];
m13_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="807-807"];
m13_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(s, reader.Value)", span="810-810"];
m13_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="808-808"];
m13_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="804-804"];
m13_1276 [cluster="System.DateTime.DateTime(int, int, int)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m13_2129 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3282-3282"];
m13_2130 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="XmlNodeConverterTest.cs", label="throw new NotSupportedException();", span="3284-3284"];
m13_2131 [cluster="Newtonsoft.Json.Tests.SlowStream.SetLength(long)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SetLength(long)", span="3282-3282"];
m13_1098 [cluster="Unk.IsNotNull", file="XmlNodeConverterTest.cs", label="Entry Unk.IsNotNull", span=""];
m13_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1822-1822"];
m13_1179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1824-1824"];
m13_1180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="1826-1826"];
m13_1181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1822-1822"];
m13_517 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m13_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2492-2492"];
m13_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2494-2494"];
m13_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2496-2496"];
m13_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2492-2492"];
m13_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1209-1209"];
m13_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="string helloWorld = ''Hello world!''", span="1211-1211"];
m13_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1212-1212"];
m13_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1214-1214"];
m13_751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1220-1220"];
m13_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1215-1215"];
m13_747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1216-1216"];
m13_748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1217-1217"];
m13_749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1218-1218"];
m13_750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1219-1219"];
m13_752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1221-1221"];
m13_753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1222-1222"];
m13_754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1223-1223"];
m13_755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="1225-1225"];
m13_756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1209-1209"];
m13_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="319-319"];
m13_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="321-321"];
m13_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="323-323"];
m13_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="325-325"];
m13_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="326-326"];
m13_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="328-328"];
m13_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="329-329"];
m13_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="331-331"];
m13_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="332-332"];
m13_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="334-334"];
m13_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="335-335"];
m13_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="337-337"];
m13_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="338-338"];
m13_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="340-340"];
m13_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="341-341"];
m13_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="342-342"];
m13_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="344-344"];
m13_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="345-345"];
m13_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="347-347"];
m13_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="319-319"];
m13_2072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3143-3143"];
m13_2073 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="3145-3145"];
m13_2074 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3146-3146"];
m13_2079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="string json = sw.ToString()", span="3153-3153"];
m13_2075 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="writer.WriteStartArray()", span="3148-3148"];
m13_2076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="writer.WriteValue(decimal.MaxValue)", span="3149-3149"];
m13_2077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="writer.WriteValue(decimal.MinValue)", span="3150-3150"];
m13_2078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="writer.WriteEndArray()", span="3151-3151"];
m13_2080 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="StringReader sr = new StringReader(json)", span="3155-3155"];
m13_2081 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3156-3156"];
m13_2082 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3158-3158"];
m13_2083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="decimal? max = reader.ReadAsDecimal()", span="3160-3160"];
m13_2085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="decimal? min = reader.ReadAsDecimal()", span="3163-3163"];
m13_2087 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3166-3166"];
m13_2084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3161-3161"];
m13_2086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3164-3164"];
m13_2088 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3143-3143"];
m13_514 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m13_1012 [cluster="System.Convert.ToChar(string)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m13_2094 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="3185-3191"];
m13_59 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.ReadAsInt32()", span="138-138"];
m13_58 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="138-138"];
m13_60 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="138-138"];
m13_76 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.ReadAsInt32()", span="161-161"];
m13_79 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.ReadAsInt32()", span="163-163"];
m13_82 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.ReadAsInt32()", span="165-165"];
m13_85 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.ReadAsInt32()", span="167-167"];
m13_75 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="161-161"];
m13_78 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="163-163"];
m13_81 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="165-165"];
m13_84 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="167-167"];
m13_77 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="161-161"];
m13_80 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="163-163"];
m13_83 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="165-165"];
m13_86 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="167-167"];
m13_125 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="236-236"];
m13_124 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="236-236"];
m13_128 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="240-240"];
m13_127 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="240-240"];
m13_132 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="244-244"];
m13_131 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="244-244"];
m13_126 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="236-236"];
m13_129 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="240-240"];
m13_133 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="244-244"];
m13_148 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="266-266"];
m13_147 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="266-266"];
m13_149 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="266-266"];
m13_185 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="315-315"];
m13_184 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="315-315"];
m13_186 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="315-315"];
m13_290 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="506-506"];
m13_289 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="504-509"];
m13_291 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="504-509"];
m13_308 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="541-541"];
m13_307 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="541-541"];
m13_309 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="541-541"];
m13_321 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="570-570"];
m13_320 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="568-573"];
m13_322 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="568-573"];
m13_475 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="788-788"];
m13_476 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="new JsonTextReader (null)", span="788-788"];
m13_477 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="788-788"];
m13_483 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="800-800"];
m13_482 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="800-800"];
m13_484 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="800-800"];
m13_573 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="936-936"];
m13_572 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="934-938"];
m13_574 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="937-937"];
m13_575 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="934-938"];
m13_589 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="957-957"];
m13_588 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="955-959"];
m13_590 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="958-958"];
m13_591 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="955-959"];
m13_642 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1052-1052"];
m13_641 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1052-1052"];
m13_643 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1052-1052"];
m13_649 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1060-1060"];
m13_648 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1060-1060"];
m13_650 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1060-1060"];
m13_656 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsBytes()", span="1068-1068"];
m13_655 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1068-1068"];
m13_657 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1068-1068"];
m13_667 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsBytes()", span="1079-1079"];
m13_666 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1079-1079"];
m13_668 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1079-1079"];
m13_682 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1098-1098"];
m13_681 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1098-1098"];
m13_683 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1098-1098"];
m13_835 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="1350-1350"];
m13_834 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1350-1350"];
m13_838 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="1353-1353"];
m13_837 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1353-1353"];
m13_841 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="1356-1356"];
m13_840 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1356-1356"];
m13_844 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="1359-1359"];
m13_843 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1359-1359"];
m13_847 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="1365-1365"];
m13_846 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1365-1365"];
m13_836 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1350-1350"];
m13_839 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1353-1353"];
m13_842 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1356-1356"];
m13_845 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1359-1359"];
m13_848 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1365-1365"];
m13_872 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="1386-1386"];
m13_871 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1386-1386"];
m13_875 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1390-1390"];
m13_874 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1390-1390"];
m13_878 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="1399-1399"];
m13_877 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1399-1399"];
m13_873 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1386-1386"];
m13_876 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1390-1390"];
m13_879 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1399-1399"];
m13_910 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1428-1428"];
m13_909 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1428-1428"];
m13_913 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1439-1439"];
m13_912 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1439-1439"];
m13_911 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1428-1428"];
m13_914 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1439-1439"];
m13_1088 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1690-1690"];
m13_1087 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1690-1690"];
m13_1089 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1690-1690"];
m13_1166 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1800-1800"];
m13_1165 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1800-1800"];
m13_1167 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1800-1800"];
m13_1183 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsBytes()", span="1826-1826"];
m13_1182 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1826-1826"];
m13_1184 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1826-1826"];
m13_1196 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="1845-1845"];
m13_1195 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1845-1845"];
m13_1197 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1845-1845"];
m13_1203 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsBytes()", span="1853-1853"];
m13_1202 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1853-1853"];
m13_1204 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1853-1853"];
m13_1210 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="1862-1862"];
m13_1209 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1862-1862"];
m13_1211 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1862-1862"];
m13_1224 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsBytes()", span="1882-1882"];
m13_1223 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1882-1882"];
m13_1225 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1882-1882"];
m13_1231 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsBytes()", span="1890-1890"];
m13_1230 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1890-1890"];
m13_1232 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1890-1890"];
m13_1302 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="1999-1999"];
m13_1301 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1999-1999"];
m13_1303 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1999-1999"];
m13_1404 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="2151-2151"];
m13_1403 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2151-2151"];
m13_1405 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2151-2151"];
m13_1411 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2159-2159"];
m13_1410 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2159-2159"];
m13_1412 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2159-2159"];
m13_1418 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2167-2167"];
m13_1417 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2167-2167"];
m13_1419 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2167-2167"];
m13_1425 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2175-2175"];
m13_1424 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2175-2175"];
m13_1426 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2175-2175"];
m13_1432 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2183-2183"];
m13_1431 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2183-2183"];
m13_1433 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2183-2183"];
m13_1439 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2191-2191"];
m13_1438 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2191-2191"];
m13_1440 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2191-2191"];
m13_1584 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2441-2441"];
m13_1583 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2441-2441"];
m13_1585 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2441-2441"];
m13_1592 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2450-2450"];
m13_1591 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2450-2450"];
m13_1593 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2450-2450"];
m13_1623 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2496-2496"];
m13_1622 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2496-2496"];
m13_1624 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2496-2496"];
m13_1640 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2518-2518"];
m13_1639 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2518-2518"];
m13_1641 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2518-2518"];
m13_1804 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2780-2780"];
m13_1803 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2780-2780"];
m13_1805 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2780-2780"];
m13_1843 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2840-2840"];
m13_1842 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2840-2840"];
m13_1844 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2840-2840"];
m13_1898 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2921-2921"];
m13_1897 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2921-2921"];
m13_1899 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2921-2921"];
m13_1930 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2937-2937"];
m13_1933 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2955-2955"];
m13_1929 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2937-2937"];
m13_1932 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="2955-2955"];
m13_1931 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2937-2937"];
m13_1934 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="2955-2955"];
m13_2055 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="3113-3113"];
m13_2058 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="3114-3114"];
m13_2061 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="3123-3123"];
m13_2064 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="3132-3132"];
m13_2067 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="3133-3133"];
m13_2070 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonTextReader.Read()", span="3134-3134"];
m13_2054 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="3113-3113"];
m13_2057 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="3114-3114"];
m13_2060 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="3123-3123"];
m13_2063 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="3132-3132"];
m13_2066 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="3133-3133"];
m13_2069 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="3134-3134"];
m13_2056 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="3113-3113"];
m13_2059 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="3114-3114"];
m13_2062 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="3123-3123"];
m13_2065 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="3132-3132"];
m13_2068 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="3133-3133"];
m13_2071 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="3134-3134"];
m13_2095 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3187-3187"];
m13_2096 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.Read()", span="3188-3188"];
m13_2097 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="3185-3191"];
m13_2030 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m13_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2270-2270"];
m13_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2272-2281"];
m13_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2283-2283"];
m13_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="int i = 0", span="2288-2288"];
m13_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2290-2290"];
m13_1488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2293-2293"];
m13_1489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2294-2294"];
m13_1490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2296-2296"];
m13_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="i < 26", span="2288-2288"];
m13_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="i++", span="2288-2288"];
m13_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2270-2270"];
m13_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2558-2558"];
m13_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2560-2567"];
m13_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2569-2569"];
m13_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2571-2571"];
m13_1669 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2572-2572"];
m13_1670 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2574-2574"];
m13_1671 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2575-2575"];
m13_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2577-2577"];
m13_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2578-2578"];
m13_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2580-2580"];
m13_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2581-2581"];
m13_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2582-2582"];
m13_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2584-2584"];
m13_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2585-2585"];
m13_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2587-2587"];
m13_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2588-2588"];
m13_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2589-2589"];
m13_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2591-2591"];
m13_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2592-2592"];
m13_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2594-2594"];
m13_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2595-2595"];
m13_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2597-2597"];
m13_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2598-2598"];
m13_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2599-2599"];
m13_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2601-2601"];
m13_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2602-2602"];
m13_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2604-2604"];
m13_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2605-2605"];
m13_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2606-2606"];
m13_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2607-2607"];
m13_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2609-2609"];
m13_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2610-2610"];
m13_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m13_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2613-2613"];
m13_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2615-2615"];
m13_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2616-2616"];
m13_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2618-2618"];
m13_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2619-2619"];
m13_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2558-2558"];
m13_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1878-1878"];
m13_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1880-1880"];
m13_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="1882-1882"];
m13_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1878-1878"];
m13_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2844-2844"];
m13_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="double d", span="2846-2846"];
m13_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2848-2848"];
m13_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="2850-2850"];
m13_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="2851-2851"];
m13_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2853-2853"];
m13_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2855-2855"];
m13_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2882-2882"];
m13_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2857-2857"];
m13_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2859-2859"];
m13_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2860-2860"];
m13_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2861-2861"];
m13_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2863-2863"];
m13_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2864-2864"];
m13_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2865-2865"];
m13_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2867-2867"];
m13_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2868-2868"];
m13_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2869-2869"];
m13_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2871-2871"];
m13_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2872-2872"];
m13_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2873-2873"];
m13_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2875-2875"];
m13_1866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2876-2876"];
m13_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2877-2877"];
m13_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2879-2879"];
m13_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2884-2884"];
m13_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2886-2886"];
m13_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2887-2887"];
m13_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2888-2888"];
m13_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2890-2890"];
m13_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2891-2891"];
m13_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2892-2892"];
m13_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2894-2894"];
m13_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2895-2895"];
m13_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2896-2896"];
m13_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2898-2898"];
m13_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2899-2899"];
m13_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2900-2900"];
m13_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="2902-2902"];
m13_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2903-2903"];
m13_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2904-2904"];
m13_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2906-2906"];
m13_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2844-2844"];
m13_2132 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3287-3287"];
m13_2133 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="XmlNodeConverterTest.cs", label="throw new NotSupportedException();", span="3289-3289"];
m13_2134 [cluster="Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Write(byte[], int, int)", span="3287-3287"];
m13_956 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m13_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1794-1794"];
m13_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1796-1796"];
m13_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1798-1798"];
m13_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="1800-1800"];
m13_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1794-1794"];
m13_220 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="XmlNodeConverterTest.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m13_9 [cluster="System.IO.StringReader.StringReader(string)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m13_1318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2025-2025"];
m13_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2027-2027"];
m13_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2029-2029"];
m13_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2031-2031"];
m13_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2032-2032"];
m13_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2034-2034"];
m13_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2035-2035"];
m13_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="2037-2037"];
m13_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2038-2038"];
m13_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2039-2039"];
m13_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2040-2040"];
m13_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2042-2042"];
m13_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2043-2043"];
m13_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2025-2025"];
m13_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="562-562"];
m13_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="XmlNodeConverterTest.cs", label="string json = @'''hi' a''", span="564-564"];
m13_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="566-566"];
m13_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="568-573"];
m13_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="562-562"];
m13_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="814-814"];
m13_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="int valueCount = 10000", span="816-816"];
m13_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="817-817"];
m13_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="i < valueCount", span="820-820"];
m13_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="i < valueCount", span="830-830"];
m13_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="818-818"];
m13_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="string json = sw.ToString()", span="826-826"];
m13_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="writer.WriteStartArray()", span="819-819"];
m13_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="writer.WriteValue(i)", span="822-822"];
m13_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="writer.WriteEndArray()", span="824-824"];
m13_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="int i = 0", span="820-820"];
m13_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="i++", span="820-820"];
m13_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="828-828"];
m13_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="829-829"];
m13_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="832-832"];
m13_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual((long)i, reader.Value)", span="833-833"];
m13_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="835-835"];
m13_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="836-836"];
m13_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="int i = 0", span="830-830"];
m13_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="i++", span="830-830"];
m13_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="814-814"];
m13_1275 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m13_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1987-1987"];
m13_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1989-1989"];
m13_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1991-1991"];
m13_1295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1993-1993"];
m13_1296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1994-1994"];
m13_1297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1996-1996"];
m13_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1997-1997"];
m13_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="1999-1999"];
m13_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1987-1987"];
m13_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1841-1841"];
m13_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1843-1843"];
m13_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1845-1845"];
m13_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1841-1841"];
m13_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="418-418"];
m13_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="MemoryStream ms = new MemoryStream()", span="420-420"];
m13_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="421-421"];
m13_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(ms.CanRead)", span="423-423"];
m13_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(ms.CanRead)", span="425-425"];
m13_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="reader.Close()", span="424-424"];
m13_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="ms = new MemoryStream()", span="427-427"];
m13_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="428-428"];
m13_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(ms.CanRead)", span="430-430"];
m13_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(ms.CanRead)", span="432-432"];
m13_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="reader.Close()", span="431-431"];
m13_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="418-418"];
m13_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1921-1921"];
m13_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1923-1923"];
m13_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1925-1925"];
m13_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1927-1927"];
m13_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1928-1928"];
m13_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1930-1930"];
m13_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1931-1931"];
m13_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1933-1933"];
m13_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1934-1934"];
m13_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1935-1935"];
m13_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1937-1937"];
m13_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1938-1938"];
m13_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1921-1921"];
m13_1277 [cluster="System.TimeSpan.FromHours(double)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_1304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2003-2003"];
m13_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2005-2005"];
m13_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2007-2007"];
m13_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2009-2009"];
m13_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2010-2010"];
m13_1309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2012-2012"];
m13_1310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2013-2013"];
m13_1311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="2015-2015"];
m13_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2016-2016"];
m13_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2017-2017"];
m13_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2018-2018"];
m13_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2020-2020"];
m13_1316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2021-2021"];
m13_1317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2003-2003"];
m13_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="796-796"];
m13_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="798-798"];
m13_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="800-800"];
m13_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="796-796"];
m13_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2436-2436"];
m13_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="string json = ''new Dat''", span="2438-2438"];
m13_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2439-2439"];
m13_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2441-2441"];
m13_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2436-2436"];
m13_954 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m13_1976 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3033-3033"];
m13_1977 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3035-3035"];
m13_1978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3037-3037"];
m13_1988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3050-3050"];
m13_1998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3063-3063"];
m13_2008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3076-3076"];
m13_2018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3089-3089"];
m13_1979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3038-3038"];
m13_1980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3040-3040"];
m13_1981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3041-3041"];
m13_1982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3042-3042"];
m13_1983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3043-3043"];
m13_1984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3044-3044"];
m13_1985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3045-3045"];
m13_1986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3046-3046"];
m13_1987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3047-3047"];
m13_1989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3051-3051"];
m13_1990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3053-3053"];
m13_1991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3054-3054"];
m13_1992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3055-3055"];
m13_1993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3056-3056"];
m13_1994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3057-3057"];
m13_1995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3058-3058"];
m13_1996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3059-3059"];
m13_1997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3060-3060"];
m13_1999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="3064-3064"];
m13_2000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3066-3066"];
m13_2001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3067-3067"];
m13_2002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3068-3068"];
m13_2003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3069-3069"];
m13_2004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3070-3070"];
m13_2005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3071-3071"];
m13_2006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3072-3072"];
m13_2007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3073-3073"];
m13_2009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3077-3077"];
m13_2010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3079-3079"];
m13_2011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="3080-3080"];
m13_2012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3081-3081"];
m13_2013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3082-3082"];
m13_2014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="3083-3083"];
m13_2015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3084-3084"];
m13_2016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3085-3085"];
m13_2017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3086-3086"];
m13_2019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3090-3090"];
m13_2020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3092-3092"];
m13_2021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTime()", span="3093-3093"];
m13_2022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3094-3094"];
m13_2023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3095-3095"];
m13_2024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTime()", span="3096-3096"];
m13_2025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3097-3097"];
m13_2026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3098-3098"];
m13_2027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="3099-3099"];
m13_2028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3033-3033"];
m13_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="371-371"];
m13_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="374-374"];
m13_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="377-377"];
m13_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="380-380"];
m13_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="383-383"];
m13_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="386-386"];
m13_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="389-389"];
m13_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="392-392"];
m13_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="395-395"];
m13_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="398-398"];
m13_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="400-400"];
m13_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="401-401"];
m13_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="402-402"];
m13_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="371-371"];
m13_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1831-1831"];
m13_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1833-1833"];
m13_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="XmlNodeConverterTest.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1835-1835"];
m13_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1836-1836"];
m13_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1831-1831"];
m13_2115 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3264-3264"];
m13_2116 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="int toReturn = Math.Min(count, bytesPerRead)", span="3266-3266"];
m13_2119 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="Array.Copy(bytes, totalBytesRead, buffer, offset, toReturn)", span="3270-3270"];
m13_2117 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="toReturn = Math.Min(toReturn, bytes.Length - totalBytesRead)", span="3267-3267"];
m13_2118 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="toReturn > 0", span="3268-3268"];
m13_2120 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="totalBytesRead += toReturn", span="3273-3273"];
m13_2121 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="return toReturn;", span="3274-3274"];
m13_2122 [cluster="Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Read(byte[], int, int)", span="3264-3264"];
m13_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2808-2808"];
m13_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="string json = @''[0,1,2 , 3]''", span="2810-2810"];
m13_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2812-2812"];
m13_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2814-2814"];
m13_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2815-2815"];
m13_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2817-2817"];
m13_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2818-2818"];
m13_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2820-2820"];
m13_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2821-2821"];
m13_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2823-2823"];
m13_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2824-2824"];
m13_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2826-2826"];
m13_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2827-2827"];
m13_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="2829-2829"];
m13_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2830-2830"];
m13_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2808-2808"];
m13_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m13_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="string json = ''[1.0,1,9.9,1E-06]''", span="272-272"];
m13_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="274-274"];
m13_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="275-275"];
m13_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="277-277"];
m13_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="278-278"];
m13_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="280-280"];
m13_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1.0m, reader.Value)", span="281-281"];
m13_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="282-282"];
m13_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="283-283"];
m13_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="285-285"];
m13_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="286-286"];
m13_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="287-287"];
m13_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="288-288"];
m13_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="290-290"];
m13_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(9.9m, reader.Value)", span="291-291"];
m13_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="292-292"];
m13_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="293-293"];
m13_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="295-295"];
m13_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="296-296"];
m13_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="297-297"];
m13_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="298-298"];
m13_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="300-300"];
m13_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="301-301"];
m13_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="270-270"];
m13_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1867-1867"];
m13_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1869-1869"];
m13_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="XmlNodeConverterTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1871-1871"];
m13_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, data.Length)", span="1872-1872"];
m13_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, data[0])", span="1873-1873"];
m13_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, data[1])", span="1874-1874"];
m13_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1867-1867"];
m13_244 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m13_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1707-1707"];
m13_1101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1709-1709"];
m13_1102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1710-1710"];
m13_1103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1712-1712"];
m13_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1713-1713"];
m13_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1715-1715"];
m13_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1716-1716"];
m13_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1717-1717"];
m13_1108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1719-1719"];
m13_1109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1720-1720"];
m13_1110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1721-1721"];
m13_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1723-1723"];
m13_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1724-1724"];
m13_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1725-1725"];
m13_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1727-1727"];
m13_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1728-1728"];
m13_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1730-1730"];
m13_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1707-1707"];
m13_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2317-2317"];
m13_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="string json = ''new Date\n()''", span="2319-2319"];
m13_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2320-2320"];
m13_1504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2322-2322"];
m13_1505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2323-2323"];
m13_1506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2324-2324"];
m13_1507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2326-2326"];
m13_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2327-2327"];
m13_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2317-2317"];
m13_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1229-1229"];
m13_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="string helloWorld = ''Hello world!''", span="1231-1231"];
m13_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1232-1232"];
m13_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1234-1234"];
m13_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1242-1242"];
m13_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1235-1235"];
m13_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1236-1236"];
m13_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1237-1237"];
m13_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1238-1238"];
m13_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1239-1239"];
m13_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1240-1240"];
m13_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1241-1241"];
m13_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1243-1243"];
m13_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1244-1244"];
m13_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1245-1245"];
m13_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="1247-1247"];
m13_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1229-1229"];
m13_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="985-985"];
m13_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="BigInteger i = new BigInteger(long.MinValue)", span="987-987"];
m13_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="989-989"];
m13_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="BigInteger total = i + -j", span="995-995"];
m13_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="990-990"];
m13_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="991-991"];
m13_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="int j = 1", span="993-993"];
m13_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="j < 1000", span="993-993"];
m13_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="j++", span="993-993"];
m13_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="997-997"];
m13_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="reader.Read()", span="998-998"];
m13_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1000-1000"];
m13_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="985-985"];
m13_513 [cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m13_605 [cluster="BigInteger.cstr", file="XmlNodeConverterTest.cs", label="Entry BigInteger.cstr", span=""];
m13_965 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650"];
m13_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1813-1813"];
m13_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1815-1815"];
m13_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="XmlNodeConverterTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1817-1817"];
m13_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1818-1818"];
m13_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1813-1813"];
m13_961 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m13_658 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m13_2031 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m13_491 [cluster="string.String(char, int)", file="XmlNodeConverterTest.cs", label="Entry string.String(char, int)", span="0-0"];
m13_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2331-2331"];
m13_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2333-2333"];
m13_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2334-2334"];
m13_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2336-2336"];
m13_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2337-2337"];
m13_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2339-2339"];
m13_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2340-2340"];
m13_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2342-2342"];
m13_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2343-2343"];
m13_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2345-2345"];
m13_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2346-2346"];
m13_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2348-2348"];
m13_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2349-2349"];
m13_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2351-2351"];
m13_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2352-2352"];
m13_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2354-2354"];
m13_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2355-2355"];
m13_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2331-2331"];
m13_1798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2774-2774"];
m13_1799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="XmlNodeConverterTest.cs", label="string json = @''/''", span="2776-2776"];
m13_1800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2778-2778"];
m13_1801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2780-2780"];
m13_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2774-2774"];
m13_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2623-2623"];
m13_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2625-2643"];
m13_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2645-2645"];
m13_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2647-2647"];
m13_1708 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2648-2648"];
m13_1709 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2649-2649"];
m13_1710 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2650-2650"];
m13_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2652-2652"];
m13_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2653-2653"];
m13_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2654-2654"];
m13_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2656-2656"];
m13_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2657-2657"];
m13_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2658-2658"];
m13_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2660-2660"];
m13_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2661-2661"];
m13_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2662-2662"];
m13_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2663-2663"];
m13_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2665-2665"];
m13_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2666-2666"];
m13_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2667-2667"];
m13_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2669-2669"];
m13_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2670-2670"];
m13_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2671-2671"];
m13_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2672-2672"];
m13_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2674-2674"];
m13_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2675-2675"];
m13_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2676-2676"];
m13_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2677-2677"];
m13_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2679-2679"];
m13_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2680-2680"];
m13_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2681-2681"];
m13_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2682-2682"];
m13_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2684-2684"];
m13_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2685-2685"];
m13_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2686-2686"];
m13_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="2687-2687"];
m13_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2689-2689"];
m13_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2690-2690"];
m13_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2691-2691"];
m13_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2693-2693"];
m13_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2694-2694"];
m13_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2695-2695"];
m13_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2696-2696"];
m13_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2698-2698"];
m13_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2699-2699"];
m13_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2701-2701"];
m13_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2702-2702"];
m13_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="2703-2703"];
m13_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2705-2705"];
m13_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2706-2706"];
m13_1754 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2707-2707"];
m13_1755 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2709-2709"];
m13_1756 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2710-2710"];
m13_1757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="2711-2711"];
m13_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2713-2713"];
m13_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2714-2714"];
m13_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2715-2715"];
m13_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2717-2717"];
m13_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2718-2718"];
m13_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2720-2720"];
m13_1764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2721-2721"];
m13_1765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2722-2722"];
m13_1766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2724-2724"];
m13_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2725-2725"];
m13_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2727-2727"];
m13_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2728-2728"];
m13_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2730-2730"];
m13_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2731-2731"];
m13_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2733-2733"];
m13_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2734-2734"];
m13_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2736-2736"];
m13_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2737-2737"];
m13_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2739-2739"];
m13_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2740-2740"];
m13_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2742-2742"];
m13_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2743-2743"];
m13_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2745-2745"];
m13_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2746-2746"];
m13_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2748-2748"];
m13_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2749-2749"];
m13_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2750-2750"];
m13_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2752-2752"];
m13_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2753-2753"];
m13_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2754-2754"];
m13_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="2756-2756"];
m13_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2623-2623"];
m13_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2069-2069"];
m13_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2071-2071"];
m13_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2073-2073"];
m13_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="2074-2074"];
m13_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2076-2076"];
m13_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2077-2077"];
m13_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2079-2079"];
m13_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2080-2080"];
m13_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="2082-2082"];
m13_1358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2083-2083"];
m13_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2084-2084"];
m13_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2086-2086"];
m13_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="2089-2089"];
m13_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2090-2090"];
m13_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2087-2087"];
m13_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2069-2069"];
m13_515 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="174-174"];
m13_12 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="68-68"];
m13_13 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="XmlNodeConverterTest.cs", label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="70-72"];
m13_14 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="74-74"];
m13_15 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="76-76"];
m13_16 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="77-77"];
m13_17 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''first line\r\nsecond line\r\nthird line'', jsonTextReader.Value)", span="79-81"];
m13_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="68-68"];
m13_1348 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m13_2113 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.Flush()", span="3249-3249"];
m13_2114 [cluster="Newtonsoft.Json.Tests.SlowStream.Flush()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.Flush()", span="3249-3249"];
m13_963 [cluster="System.Text.StringBuilder.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m13_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m13_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="178-180"];
m13_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="182-182"];
m13_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="184-184"];
m13_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="185-185"];
m13_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="187-187"];
m13_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="188-188"];
m13_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="jsonTextReader.ReadAsBytes()", span="192-192"];
m13_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="198-198"];
m13_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="199-199"];
m13_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonTextReader.Read())", span="201-201"];
m13_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label=FormatException, span="194-194"];
m13_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="176-176"];
m13_61 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m13_242 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m13_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1849-1849"];
m13_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1851-1851"];
m13_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1853-1853"];
m13_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1849-1849"];
m13_243 [cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m13_958 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="828-828"];
m13_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1965-1965"];
m13_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1967-1967"];
m13_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1969-1969"];
m13_1281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1971-1971"];
m13_1282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1972-1972"];
m13_1283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1974-1974"];
m13_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1975-1975"];
m13_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="1977-1977"];
m13_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1978-1978"];
m13_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1979-1979"];
m13_1288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1980-1980"];
m13_1289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1982-1982"];
m13_1290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1983-1983"];
m13_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1965-1965"];
m13_1406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2155-2155"];
m13_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2157-2157"];
m13_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2159-2159"];
m13_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2155-2155"];
m13_57 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
m13_1890 [cluster="double.ToString(string)", file="XmlNodeConverterTest.cs", label="Entry double.ToString(string)", span="0-0"];
m13_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1894-1894"];
m13_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1896-1896"];
m13_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1898-1898"];
m13_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1903-1903"];
m13_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1904-1904"];
m13_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1906-1906"];
m13_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1907-1907"];
m13_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1908-1908"];
m13_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1910-1910"];
m13_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1911-1911"];
m13_1243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1912-1912"];
m13_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="1914-1914"];
m13_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1915-1915"];
m13_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="1917-1917"];
m13_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1894-1894"];
m13_2135 [file="XmlNodeConverterTest.cs", label=jsonTextReader, span=""];
m13_2136 [file="XmlNodeConverterTest.cs", label=jsonTextReader, span=""];
m13_2137 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2138 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2139 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2140 [file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m13_2141 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2142 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2143 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2144 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2145 [file="XmlNodeConverterTest.cs", label=total, span=""];
m13_2146 [file="XmlNodeConverterTest.cs", label=total, span=""];
m13_2147 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2148 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2149 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2150 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2151 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2152 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2153 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2154 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2155 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2156 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2157 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2158 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2159 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2160 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2161 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2162 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2163 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2164 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2165 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2166 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2167 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2168 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2169 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2170 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2171 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2172 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2173 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2174 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2175 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2176 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2177 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m13_2178 [file="XmlNodeConverterTest.cs", label=jsonTextReader, span=""];
m13_2179 [file="XmlNodeConverterTest.cs", label=json, span=""];
m13_2180 [file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m13_2181 [file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Tests.SlowStream", span=""];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_49  [key=2, style=dotted];
m0_43 -> m0_47  [key=2, style=dotted];
m0_43 -> m0_48  [key=2, style=dotted];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_50  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_49 -> m0_65  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_61  [key=0, style=solid];
m0_49 -> m0_66  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_50  [key=0, style=solid];
m0_65 -> m0_74  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_67 -> m0_74  [key=2, style=dotted];
m0_67 -> m0_66  [key=0, style=solid];
m0_61 -> m0_65  [color=darkseagreen4, key=1, label=typeBuilder, style=dashed];
m0_61 -> m0_67  [color=darkseagreen4, key=1, label=typeBuilder, style=dashed];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_70  [key=2, style=dotted];
m0_61 -> m0_68  [color=darkseagreen4, key=1, label=typeBuilder, style=dashed];
m0_61 -> m0_19  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_73  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [key=0, style=solid];
m0_66 -> m0_75  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_71  [key=2, style=dotted];
m0_62 -> m0_49  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_76  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_72  [key=2, style=dotted];
m0_69 -> m0_49  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_40  [key=2, style=dotted];
m0_35 -> m0_23  [key=2, style=dotted];
m0_35 -> m0_38  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_41  [key=2, style=dotted];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_36 -> m0_33  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_37  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m0_37 -> m0_34  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_19  [key=2, style=dotted];
m0_38 -> m0_35  [color=blue, key=0, style=bold];
m0_39 -> m0_34  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_17  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_66  [key=2, style=dotted];
m0_53 -> m0_67  [key=2, style=dotted];
m0_53 -> m0_17  [key=2, style=dotted];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m0_53 -> m0_56  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m0_53 -> m0_57  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m0_53 -> m0_58  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m0_53 -> m0_60  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m0_53 -> m0_61  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_59  [key=2, style=dotted];
m0_55 -> m0_64  [key=2, style=dotted];
m0_55 -> m0_19  [key=2, style=dotted];
m0_55 -> m0_26  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m0_55 -> m0_34  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m0_55 -> m0_52  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m0_55 -> m0_60  [color=darkorchid, key=3, label="method methodReturn bool IsCompatibleObject", style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_58  [key=2, style=dotted];
m0_54 -> m0_19  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_19  [key=2, style=dotted];
m0_57 -> m0_53  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_19  [key=2, style=dotted];
m0_13 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_17  [key=2, style=dotted];
m0_13 -> m0_18  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_40 -> m0_10  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_22 -> m0_103  [color=darkorchid, key=3, label="Parameter variable int arrayIndex", style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_16  [key=2, style=dotted];
m0_22 -> m0_17  [key=2, style=dotted];
m0_22 -> m0_18  [key=2, style=dotted];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_41 -> m0_39  [color=blue, key=0, style=bold];
m0_74 -> m0_83  [color=green, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_74 -> m0_84  [color=green, key=1, label="System.Type", style=dashed];
m0_74 -> m0_85  [color=green, key=1, label="System.Type", style=dashed];
m0_74 -> m0_77  [key=0, style=solid];
m0_74 -> m0_81  [color=darkseagreen4, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_74 -> m0_86  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_74 -> m0_87  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_83 -> m0_78  [color=green, key=0, style=solid];
m0_83 -> m0_92  [color=green, key=2, style=dotted];
m0_78 -> m0_83  [color=green, key=1, label=methodInfo, style=dashed];
m0_78 -> m0_84  [color=green, key=0, style=solid];
m0_78 -> m0_82  [color=green, key=1, label=methodInfo, style=dashed];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=methodInfo, style=dashed];
m0_78 -> m0_81  [color=darkseagreen4, key=1, label=methodInfo, style=dashed];
m0_82 -> m0_83  [color=green, key=0, style=solid];
m0_82 -> m0_78  [color=green, key=0, style=solid];
m0_84 -> m0_85  [color=green, key=0, style=solid];
m0_84 -> m0_86  [color=green, key=0, style=solid];
m0_85 -> m0_88  [color=green, key=0, style=solid];
m0_85 -> m0_93  [color=green, key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_88  [key=0, style=solid];
m0_80 -> m0_82  [color=green, key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_90  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_89  [key=2, style=dotted];
m0_81 -> m0_78  [key=0, style=solid];
m0_81 -> m0_91  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_94  [key=2, style=dotted];
m0_79 -> m0_78  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_90  [key=2, style=dotted];
m0_88 -> m0_74  [color=blue, key=0, style=bold];
m0_91 -> m0_128  [key=0, style=solid];
m0_91 -> m0_129  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_91 -> m0_130  [color=darkseagreen4, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_91 -> m0_131  [color=darkseagreen4, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_91 -> m0_136  [color=darkseagreen4, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_91 -> m0_142  [color=darkseagreen4, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_146  [key=2, style=dotted];
m0_128 -> m0_130  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m0_128 -> m0_131  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m0_128 -> m0_136  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m0_128 -> m0_142  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [color=darkseagreen4, key=1, label=propertyType, style=dashed];
m0_129 -> m0_136  [color=darkseagreen4, key=1, label=propertyType, style=dashed];
m0_129 -> m0_142  [color=darkseagreen4, key=1, label=propertyType, style=dashed];
m0_129 -> m0_55  [color=darkorchid, key=3, label="method methodReturn bool IsCompatibleObject", style=bold];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_147  [key=2, style=dotted];
m0_130 -> m0_134  [color=darkseagreen4, key=1, label=backingField, style=dashed];
m0_130 -> m0_140  [color=darkseagreen4, key=1, label=backingField, style=dashed];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_148  [key=2, style=dotted];
m0_131 -> m0_143  [color=darkseagreen4, key=1, label=backingGet, style=dashed];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_148  [key=2, style=dotted];
m0_136 -> m0_144  [color=darkseagreen4, key=1, label=backingSet, style=dashed];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_150  [key=2, style=dotted];
m0_142 -> m0_144  [color=darkseagreen4, key=1, label=propertyBuilder, style=dashed];
m0_133 -> m0_73  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_135 -> m0_73  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_138 -> m0_73  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_73  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_141 -> m0_73  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_152  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_149  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_149  [key=2, style=dotted];
m0_132 -> m0_118  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_135  [color=darkseagreen4, key=1, label=getIl, style=dashed];
m0_132 -> m0_134  [color=darkseagreen4, key=1, label=getIl, style=dashed];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_151  [key=2, style=dotted];
m0_137 -> m0_118  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_139  [color=darkseagreen4, key=1, label=setIl, style=dashed];
m0_137 -> m0_141  [color=darkseagreen4, key=1, label=setIl, style=dashed];
m0_137 -> m0_140  [color=darkseagreen4, key=1, label=setIl, style=dashed];
m0_145 -> m0_91  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_19  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_19  [key=2, style=dotted];
m0_25 -> m0_20  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_25  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_48 -> m0_46  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_19  [key=2, style=dotted];
m0_47 -> m0_51  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_45  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_15  [key=2, style=dotted];
m0_51 -> m0_53  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_52 -> m0_47  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_65  [key=2, style=dotted];
m0_52 -> m0_45  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_19  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_8  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_1 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_63  [key=2, style=dotted];
m0_50 -> m0_45  [key=2, style=dotted];
m0_50 -> m0_64  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_11  [color=blue, key=0, style=bold];
m0_32 -> m0_26  [color=blue, key=0, style=bold];
m0_33 -> m0_36  [key=0, style=solid];
m0_4 -> m0_44  [color=darkorchid, key=3, label="Parameter variable T item", style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_13  [key=2, style=dotted];
m0_5 -> m0_3  [key=2, style=dotted];
m0_5 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_15  [key=2, style=dotted];
m0_5 -> m0_26  [color=darkorchid, key=3, label="Parameter variable T item", style=bold];
m0_5 -> m0_50  [color=darkorchid, key=3, label="Parameter variable int arrayIndex", style=bold];
m0_92 -> m0_95  [key=0, style=solid];
m0_92 -> m0_96  [color=darkseagreen4, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_92 -> m0_98  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_92 -> m0_100  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_92 -> m0_102  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_92 -> m0_104  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m0_92 -> m0_112  [color=darkseagreen4, key=1, label="System.Reflection.Emit.TypeBuilder", style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_114  [key=2, style=dotted];
m0_95 -> m0_115  [key=2, style=dotted];
m0_95 -> m0_116  [key=2, style=dotted];
m0_95 -> m0_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_117  [key=2, style=dotted];
m0_96 -> m0_112  [color=darkseagreen4, key=1, label=methodBuilder, style=dashed];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_100  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_110  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_120  [key=2, style=dotted];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=lb, style=dashed];
m0_104 -> m0_109  [color=darkseagreen4, key=1, label=lb, style=dashed];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_124  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_104  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_118  [key=2, style=dotted];
m0_97 -> m0_99  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_101  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_106  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_107  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_108  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_109  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_110  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_97 -> m0_111  [color=darkseagreen4, key=1, label=methodILGen, style=dashed];
m0_99 -> m0_112  [key=0, style=solid];
m0_99 -> m0_73  [key=2, style=dotted];
m0_101 -> m0_111  [key=0, style=solid];
m0_101 -> m0_73  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_119  [key=2, style=dotted];
m0_103 -> m0_108  [color=darkseagreen4, key=1, label=getMethod, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_73  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_111  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_121  [key=2, style=dotted];
m0_106 -> m0_55  [color=darkorchid, key=3, label="Property variable bool System.Collections.ICollection.IsSynchronized", style=bold];
m0_109 -> m0_111  [key=0, style=solid];
m0_109 -> m0_121  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_73  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_122  [key=2, style=dotted];
m0_107 -> m0_123  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_123  [key=2, style=dotted];
m0_113 -> m0_92  [color=blue, key=0, style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_32  [key=2, style=dotted];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=myClass, style=dashed];
m0_26 -> m0_29  [color=darkseagreen4, key=1, label=myClass, style=dashed];
m0_26 -> m0_30  [color=darkseagreen4, key=1, label=myClass, style=dashed];
m0_26 -> m0_5  [color=darkorchid, key=3, label="method methodReturn bool System.Collections.IList.Contains", style=bold];
m0_28 -> m0_16  [key=2, style=dotted];
m0_28 -> m0_17  [key=2, style=dotted];
m0_28 -> m0_18  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_28 -> m0_19  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_33  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_33  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_34  [key=2, style=dotted];
m0_30 -> m0_19  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_24  [color=blue, key=0, style=bold];
m0_14 -> m0_19  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label=person, style=dashed];
m0_7 -> m0_10  [color=darkseagreen4, key=1, label=person, style=dashed];
m0_125 -> m0_126  [key=0, style=solid];
m0_127 -> m0_125  [color=blue, key=0, style=bold];
m0_126 -> m0_127  [key=0, style=solid];
m0_8 -> m0_10  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_18  [key=2, style=dotted];
m0_8 -> m0_19  [key=2, style=dotted];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_19  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_4  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_10  [color=blue, key=0, style=bold];
m0_10 -> m0_43  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_10 -> m0_42  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_154 -> m0_8  [color=darkseagreen4, key=1, label=contract, style=dashed];
m0_153 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicConcreteTests.DynamicConcreteContractResolver", style=dashed];
m1_44 -> m1_48  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_51  [key=0, style=solid];
m1_48 -> m1_53  [key=0, style=solid];
m1_48 -> m1_57  [key=0, style=solid];
m1_48 -> m1_59  [key=0, style=solid];
m1_48 -> m1_61  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=2, style=dotted];
m1_50 -> m1_62  [key=0, style=solid];
m1_52 -> m1_62  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_62  [key=0, style=solid];
m1_58 -> m1_62  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_62 -> m1_44  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_33  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_17 -> m1_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_40  [key=2, style=dotted];
m1_20 -> m1_25  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_20 -> m1_30  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_20 -> m1_32  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_20 -> m1_36  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_20 -> m1_38  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_41  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_41  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_38  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_41  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_35  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [color=darkseagreen4, key=1, label=columnName, style=dashed];
m1_28 -> m1_32  [color=darkseagreen4, key=1, label=columnName, style=dashed];
m1_28 -> m1_33  [color=green, key=1, label=columnName, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_41  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_44  [key=2, style=dotted];
m1_33 -> m1_34  [color=green, key=0, style=solid];
m1_34 -> m1_27  [key=0, style=solid];
m1_34 -> m1_41  [key=2, style=dotted];
m1_37 -> m1_24  [key=0, style=solid];
m1_37 -> m1_41  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_40  [key=2, style=dotted];
m1_22 -> m1_25  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_30  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_32  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_36  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_38  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_42  [key=2, style=dotted];
m1_25 -> m1_33  [color=green, key=1, label=dr, style=dashed];
m1_25 -> m1_35  [color=darkseagreen4, key=1, label=dr, style=dashed];
m1_25 -> m1_36  [color=darkseagreen4, key=1, label=dr, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [color=green, key=0, style=solid];
m1_30 -> m1_43  [key=2, style=dotted];
m1_32 -> m1_33  [color=green, key=0, style=solid];
m1_32 -> m1_45  [key=2, style=dotted];
m1_32 -> m1_46  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_46  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_47  [key=2, style=dotted];
m1_39 -> m1_17  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_66 -> m1_64  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=table, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_11  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_5  [key=0, style=solid];
m1_7 -> m1_14  [key=2, style=dotted];
m1_8 -> m1_3  [key=0, style=solid];
m1_8 -> m1_15  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_16  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=0, style=solid];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=row, style=dashed];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label=row, style=dashed];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=0, style=solid];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=column, style=dashed];
m1_10 -> m1_0  [color=blue, key=0, style=bold];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_207  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_204 -> m2_209  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_204 -> m2_214  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_204 -> m2_218  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_13  [key=2, style=dotted];
m2_205 -> m2_14  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_214  [key=0, style=solid];
m2_207 -> m2_138  [key=2, style=dotted];
m2_207 -> m2_210  [color=darkseagreen4, key=1, label=genericDictionaryType, style=dashed];
m2_209 -> m2_219  [key=0, style=solid];
m2_209 -> m2_201  [key=2, style=dotted];
m2_209 -> m2_161  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_218  [key=0, style=solid];
m2_214 -> m2_203  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_201  [key=2, style=dotted];
m2_218 -> m2_161  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_210  [key=0, style=solid];
m2_208 -> m2_159  [key=2, style=dotted];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_202  [key=2, style=dotted];
m2_210 -> m2_212  [color=darkseagreen4, key=1, label=dictionaryGenericArguments, style=dashed];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_219  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_219  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m2_213 -> m2_219  [key=0, style=solid];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_219  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_219  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m2_217 -> m2_219  [key=0, style=solid];
m2_219 -> m2_204  [color=blue, key=0, style=bold];
m2_86 -> m2_87  [color=green, key=0, style=solid];
m2_86 -> m2_55  [color=green, key=2, style=dotted];
m2_551 -> m2_552  [key=0, style=solid];
m2_551 -> m2_554  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_551 -> m2_582  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_551 -> m2_584  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_552 -> m2_553  [key=0, style=solid];
m2_552 -> m2_554  [key=0, style=solid];
m2_552 -> m2_95  [key=2, style=dotted];
m2_554 -> m2_555  [key=0, style=solid];
m2_554 -> m2_557  [key=0, style=solid];
m2_554 -> m2_565  [key=0, style=solid];
m2_554 -> m2_568  [key=0, style=solid];
m2_554 -> m2_570  [key=0, style=solid];
m2_554 -> m2_572  [key=0, style=solid];
m2_554 -> m2_574  [key=0, style=solid];
m2_554 -> m2_576  [key=0, style=solid];
m2_554 -> m2_578  [key=0, style=solid];
m2_554 -> m2_580  [key=0, style=solid];
m2_554 -> m2_586  [key=2, style=dotted];
m2_582 -> m2_583  [key=0, style=solid];
m2_582 -> m2_584  [key=0, style=solid];
m2_582 -> m2_112  [key=2, style=dotted];
m2_584 -> m2_585  [key=0, style=solid];
m2_584 -> m2_591  [key=2, style=dotted];
m2_553 -> m2_585  [key=0, style=solid];
m2_555 -> m2_556  [key=0, style=solid];
m2_557 -> m2_558  [key=0, style=solid];
m2_565 -> m2_566  [key=0, style=solid];
m2_568 -> m2_569  [key=0, style=solid];
m2_570 -> m2_571  [key=0, style=solid];
m2_572 -> m2_573  [key=0, style=solid];
m2_574 -> m2_575  [key=0, style=solid];
m2_576 -> m2_577  [key=0, style=solid];
m2_578 -> m2_579  [key=0, style=solid];
m2_580 -> m2_581  [key=0, style=solid];
m2_556 -> m2_585  [key=0, style=solid];
m2_558 -> m2_559  [key=0, style=solid];
m2_559 -> m2_560  [key=0, style=solid];
m2_560 -> m2_561  [key=0, style=solid];
m2_561 -> m2_562  [key=0, style=solid];
m2_562 -> m2_563  [key=0, style=solid];
m2_563 -> m2_564  [key=0, style=solid];
m2_564 -> m2_585  [key=0, style=solid];
m2_566 -> m2_567  [key=0, style=solid];
m2_567 -> m2_585  [key=0, style=solid];
m2_569 -> m2_585  [key=0, style=solid];
m2_571 -> m2_585  [key=0, style=solid];
m2_573 -> m2_585  [key=0, style=solid];
m2_575 -> m2_585  [key=0, style=solid];
m2_575 -> m2_587  [key=2, style=dotted];
m2_577 -> m2_585  [key=0, style=solid];
m2_577 -> m2_588  [key=2, style=dotted];
m2_579 -> m2_585  [key=0, style=solid];
m2_579 -> m2_589  [key=2, style=dotted];
m2_581 -> m2_585  [key=0, style=solid];
m2_581 -> m2_590  [key=2, style=dotted];
m2_583 -> m2_585  [key=0, style=solid];
m2_585 -> m2_551  [color=blue, key=0, style=bold];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_278  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_275 -> m2_279  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_275 -> m2_285  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_275 -> m2_288  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_275 -> m2_290  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_284  [key=0, style=solid];
m2_276 -> m2_291  [key=0, style=solid];
m2_276 -> m2_233  [key=2, style=dotted];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_281  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_281  [key=0, style=solid];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_290  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_290  [key=0, style=solid];
m2_290 -> m2_292  [key=0, style=solid];
m2_290 -> m2_15  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_284 -> m2_285  [key=0, style=solid];
m2_291 -> m2_292  [key=0, style=solid];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_283  [key=0, style=solid];
m2_280 -> m2_292  [key=0, style=solid];
m2_282 -> m2_292  [key=0, style=solid];
m2_283 -> m2_292  [key=0, style=solid];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_288  [key=0, style=solid];
m2_287 -> m2_292  [key=0, style=solid];
m2_289 -> m2_292  [key=0, style=solid];
m2_292 -> m2_275  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_60  [key=2, style=dotted];
m2_59 -> m2_50  [color=blue, key=0, style=bold];
m2_69 -> m2_70  [color=green, key=0, style=solid];
m2_70 -> m2_71  [color=green, key=0, style=solid];
m2_71 -> m2_69  [color=blue, key=0, style=bold];
m2_71 -> m2_83  [key=0, style=solid];
m2_71 -> m2_87  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_26  [key=0, style=solid];
m2_21 -> m2_27  [key=2, style=dotted];
m2_22 -> m2_53  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_28  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_31  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_34  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_38  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_41  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_42  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_49  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_50  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m2_22 -> m2_16  [key=2, style=dotted];
m2_22 -> m2_24  [color=darkseagreen4, key=1, label=m, style=dashed];
m2_25 -> m2_55  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_28 -> m2_55  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_31  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m2_31 -> m2_55  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_31 -> m2_36  [key=2, style=dotted];
m2_34 -> m2_55  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_28  [color=blue, key=0, style=bold];
m2_38 -> m2_55  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_41 -> m2_55  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.TypeNameAssemblyFormatHandling", style=dashed];
m2_49 -> m2_55  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_41  [color=blue, key=0, style=bold];
m2_50 -> m2_59  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_53  [key=0, style=solid];
m2_50 -> m2_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_50 -> m2_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_51 -> m2_20  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_61  [key=0, style=solid];
m2_51 -> m2_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_51 -> m2_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_54  [key=2, style=dotted];
m2_23 -> m2_25  [key=0, style=solid];
m2_42 -> m2_49  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_56  [key=2, style=dotted];
m2_42 -> m2_44  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m2_42 -> m2_45  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m2_42 -> m2_46  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m2_42 -> m2_47  [color=darkseagreen4, key=1, label=fullyQualifiedTypeName, style=dashed];
m2_42 -> m2_48  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m2_42 -> m2_50  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_24  [color=darkseagreen4, key=1, label=colString, style=dashed];
m2_24 -> m2_26  [key=0, style=solid];
m2_24 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_54  [key=2, style=dotted];
m2_26 -> m2_17  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_27  [color=darkseagreen4, key=1, label=colInt32, style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_54  [key=2, style=dotted];
m2_29 -> m2_31  [key=0, style=solid];
m2_29 -> m2_35  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_30  [color=darkseagreen4, key=1, label=colBoolean, style=dashed];
m2_30 -> m2_34  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_54  [key=2, style=dotted];
m2_32 -> m2_34  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_33  [color=darkseagreen4, key=1, label=colTimeSpan, style=dashed];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_54  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_37  [color=darkseagreen4, key=1, label=colDateTime, style=dashed];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_54  [key=2, style=dotted];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_40  [color=darkseagreen4, key=1, label=colDecimal, style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_52  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_46  [key=0, style=solid];
m2_43 -> m2_48  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_49  [key=0, style=solid];
m2_45 -> m2_51  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_57  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_58  [key=2, style=dotted];
m2_47 -> m2_49  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_36  [color=darkseagreen4, key=1, label=colDateTime, style=dashed];
m2_52 -> m2_21  [color=blue, key=0, style=bold];
m2_105 -> m2_106  [color=green, key=0, style=solid];
m2_105 -> m2_20  [color=green, key=2, style=dotted];
m2_95 -> m2_96  [color=green, key=0, style=solid];
m2_95 -> m2_20  [color=green, key=2, style=dotted];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_136  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_135 -> m2_136  [key=0, style=solid];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_138  [key=2, style=dotted];
m2_137 -> m2_134  [color=blue, key=0, style=bold];
m2_384 -> m2_387  [key=0, style=solid];
m2_384 -> m2_388  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_384 -> m2_391  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_384 -> m2_396  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_384 -> m2_399  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_384 -> m2_402  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_384 -> m2_405  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_384 -> m2_406  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_384 -> m2_407  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_387 -> m2_388  [key=0, style=solid];
m2_387 -> m2_13  [key=2, style=dotted];
m2_387 -> m2_14  [key=2, style=dotted];
m2_388 -> m2_389  [key=0, style=solid];
m2_388 -> m2_390  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_394  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_395  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_397  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_398  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_400  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_401  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_403  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_388 -> m2_404  [color=darkseagreen4, key=1, label=provider, style=dashed];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_410  [key=2, style=dotted];
m2_391 -> m2_411  [key=2, style=dotted];
m2_396 -> m2_409  [key=0, style=solid];
m2_396 -> m2_412  [key=2, style=dotted];
m2_396 -> m2_413  [key=2, style=dotted];
m2_399 -> m2_409  [key=0, style=solid];
m2_399 -> m2_414  [key=2, style=dotted];
m2_399 -> m2_415  [key=2, style=dotted];
m2_402 -> m2_409  [key=0, style=solid];
m2_402 -> m2_416  [key=2, style=dotted];
m2_402 -> m2_417  [key=2, style=dotted];
m2_405 -> m2_409  [key=0, style=solid];
m2_405 -> m2_418  [key=2, style=dotted];
m2_405 -> m2_419  [key=2, style=dotted];
m2_406 -> m2_407  [key=0, style=solid];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_420  [key=2, style=dotted];
m2_407 -> m2_421  [key=2, style=dotted];
m2_389 -> m2_390  [key=0, style=solid];
m2_389 -> m2_394  [key=0, style=solid];
m2_390 -> m2_391  [key=0, style=solid];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_397  [key=0, style=solid];
m2_395 -> m2_396  [key=0, style=solid];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_400  [key=0, style=solid];
m2_398 -> m2_399  [key=0, style=solid];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_403  [key=0, style=solid];
m2_401 -> m2_402  [key=0, style=solid];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_406  [key=0, style=solid];
m2_404 -> m2_405  [key=0, style=solid];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_385  [key=2, style=dotted];
m2_392 -> m2_386  [key=2, style=dotted];
m2_393 -> m2_409  [key=0, style=solid];
m2_408 -> m2_409  [key=0, style=solid];
m2_409 -> m2_384  [color=blue, key=0, style=bold];
m2_57 -> m2_59  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [color=darkseagreen4, key=1, label=dr2, style=dashed];
m2_604 -> m2_605  [key=0, style=solid];
m2_605 -> m2_606  [key=0, style=solid];
m2_606 -> m2_604  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_507 -> m2_511  [key=0, style=solid];
m2_507 -> m2_512  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m2_507 -> m2_516  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_507 -> m2_518  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_507 -> m2_519  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_507 -> m2_521  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_507 -> m2_522  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_507 -> m2_524  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_507 -> m2_526  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_507 -> m2_528  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.PropertyInfo>", style=dashed];
m2_511 -> m2_512  [key=0, style=solid];
m2_511 -> m2_529  [key=0, style=solid];
m2_511 -> m2_186  [key=2, style=dotted];
m2_511 -> m2_511  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_512 -> m2_513  [key=0, style=solid];
m2_512 -> m2_511  [key=0, style=solid];
m2_512 -> m2_506  [key=2, style=dotted];
m2_516 -> m2_517  [key=0, style=solid];
m2_516 -> m2_531  [key=2, style=dotted];
m2_516 -> m2_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_516 -> m2_519  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_516 -> m2_521  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_518 -> m2_512  [key=0, style=solid];
m2_518 -> m2_344  [key=2, style=dotted];
m2_519 -> m2_520  [key=0, style=solid];
m2_521 -> m2_512  [key=0, style=solid];
m2_522 -> m2_523  [key=0, style=solid];
m2_522 -> m2_531  [key=2, style=dotted];
m2_522 -> m2_536  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_524 -> m2_512  [key=0, style=solid];
m2_524 -> m2_344  [key=2, style=dotted];
m2_526 -> m2_527  [key=0, style=solid];
m2_526 -> m2_531  [key=2, style=dotted];
m2_526 -> m2_539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_528 -> m2_512  [key=0, style=solid];
m2_528 -> m2_344  [key=2, style=dotted];
m2_513 -> m2_514  [key=0, style=solid];
m2_513 -> m2_515  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_516  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_534  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_518  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_521  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_522  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_537  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_524  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_525  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_526  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_540  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_513 -> m2_528  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_514 -> m2_515  [key=0, style=solid];
m2_514 -> m2_525  [key=0, style=solid];
m2_514 -> m2_530  [key=2, style=dotted];
m2_515 -> m2_516  [key=0, style=solid];
m2_515 -> m2_522  [key=0, style=solid];
m2_515 -> m2_28  [key=2, style=dotted];
m2_525 -> m2_526  [key=0, style=solid];
m2_525 -> m2_532  [key=2, style=dotted];
m2_525 -> m2_540  [color=darkseagreen4, key=1, label=subTypePropertyDeclaringType, style=dashed];
m2_517 -> m2_518  [key=0, style=solid];
m2_517 -> m2_519  [key=0, style=solid];
m2_520 -> m2_521  [key=0, style=solid];
m2_520 -> m2_512  [key=0, style=solid];
m2_520 -> m2_28  [key=2, style=dotted];
m2_523 -> m2_524  [key=0, style=solid];
m2_523 -> m2_512  [key=0, style=solid];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_512  [key=0, style=solid];
m2_529 -> m2_507  [color=blue, key=0, style=bold];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_187 -> m2_191  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_187 -> m2_192  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_187 -> m2_194  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_187 -> m2_196  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_187 -> m2_198  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_13  [key=2, style=dotted];
m2_188 -> m2_14  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_192  [key=0, style=solid];
m2_191 -> m2_199  [key=0, style=solid];
m2_191 -> m2_200  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_196  [key=0, style=solid];
m2_192 -> m2_138  [key=2, style=dotted];
m2_192 -> m2_195  [color=darkseagreen4, key=1, label=genericListType, style=dashed];
m2_194 -> m2_199  [key=0, style=solid];
m2_194 -> m2_201  [key=2, style=dotted];
m2_194 -> m2_161  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_198  [key=0, style=solid];
m2_196 -> m2_203  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_201  [key=2, style=dotted];
m2_198 -> m2_161  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_195  [key=0, style=solid];
m2_193 -> m2_159  [key=2, style=dotted];
m2_195 -> m2_199  [key=0, style=solid];
m2_195 -> m2_202  [key=2, style=dotted];
m2_197 -> m2_199  [key=0, style=solid];
m2_199 -> m2_187  [color=blue, key=0, style=bold];
m2_89 -> m2_90  [color=green, key=0, style=solid];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_89 -> m2_93  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_89 -> m2_20  [color=green, key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_13  [key=2, style=dotted];
m2_90 -> m2_14  [key=2, style=dotted];
m2_90 -> m2_81  [color=blue, key=0, style=bold];
m2_91 -> m2_92  [color=green, key=0, style=solid];
m2_91 -> m2_93  [key=0, style=solid];
m2_91 -> m2_95  [key=2, style=dotted];
m2_93 -> m2_94  [color=green, key=0, style=solid];
m2_93 -> m2_96  [key=2, style=dotted];
m2_93 -> m2_18  [color=green, key=2, style=dotted];
m2_93 -> m2_95  [color=green, key=1, label=table, style=dashed];
m2_93 -> m2_97  [color=green, key=1, label=table, style=dashed];
m2_93 -> m2_98  [color=green, key=1, label=table, style=dashed];
m2_93 -> m2_99  [color=green, key=1, label=table, style=dashed];
m2_92 -> m2_94  [key=0, style=solid];
m2_92 -> m2_92  [color=green, key=3, label="Local variable string json", style=bold];
m2_92 -> m2_93  [color=green, key=0, style=solid];
m2_94 -> m2_89  [color=blue, key=0, style=bold];
m2_94 -> m2_95  [color=green, key=0, style=solid];
m2_94 -> m2_20  [color=green, key=2, style=dotted];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_317  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_315 -> m2_318  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_315 -> m2_329  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_334  [key=2, style=dotted];
m2_316 -> m2_318  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m2_316 -> m2_319  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m2_316 -> m2_320  [color=darkseagreen4, key=1, label=targetMembers, style=dashed];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_335  [key=2, style=dotted];
m2_317 -> m2_336  [key=2, style=dotted];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_337  [key=2, style=dotted];
m2_318 -> m2_336  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_326  [key=0, style=solid];
m2_329 -> m2_345  [key=2, style=dotted];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_338  [key=2, style=dotted];
m2_319 -> m2_324  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m2_319 -> m2_331  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m2_319 -> m2_332  [color=darkseagreen4, key=1, label=distinctMembers, style=dashed];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_332  [key=0, style=solid];
m2_320 -> m2_339  [key=2, style=dotted];
m2_320 -> m2_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_320 -> m2_322  [color=darkseagreen4, key=1, label=groupedMember, style=dashed];
m2_324 -> m2_320  [key=0, style=solid];
m2_324 -> m2_342  [key=2, style=dotted];
m2_324 -> m2_343  [key=2, style=dotted];
m2_331 -> m2_320  [key=0, style=solid];
m2_331 -> m2_336  [key=2, style=dotted];
m2_332 -> m2_333  [key=0, style=solid];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_340  [key=2, style=dotted];
m2_321 -> m2_323  [color=darkseagreen4, key=1, label=count, style=dashed];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_341  [key=2, style=dotted];
m2_322 -> m2_324  [color=darkseagreen4, key=1, label=members, style=dashed];
m2_322 -> m2_326  [color=darkseagreen4, key=1, label=members, style=dashed];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_325  [key=0, style=solid];
m2_326 -> m2_327  [key=0, style=solid];
m2_326 -> m2_331  [key=0, style=solid];
m2_326 -> m2_328  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m2_326 -> m2_329  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m2_326 -> m2_330  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_334  [key=2, style=dotted];
m2_325 -> m2_327  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m2_325 -> m2_328  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m2_325 -> m2_330  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m2_325 -> m2_331  [color=darkseagreen4, key=1, label=resolvedMembers, style=dashed];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_329  [key=0, style=solid];
m2_328 -> m2_326  [key=0, style=solid];
m2_328 -> m2_344  [key=2, style=dotted];
m2_330 -> m2_326  [key=0, style=solid];
m2_330 -> m2_344  [key=2, style=dotted];
m2_333 -> m2_315  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [color=green, key=0, style=solid];
m2_81 -> m2_83  [key=0, style=solid];
m2_82 -> m2_83  [color=green, key=0, style=solid];
m2_82 -> m2_53  [color=green, key=2, style=dotted];
m2_82 -> m2_84  [color=green, key=1, label=table, style=dashed];
m2_82 -> m2_85  [color=green, key=1, label=table, style=dashed];
m2_82 -> m2_86  [color=green, key=1, label=table, style=dashed];
m2_82 -> m2_87  [color=green, key=1, label=table, style=dashed];
m2_82 -> m2_88  [color=green, key=1, label=table, style=dashed];
m2_83 -> m2_84  [color=green, key=0, style=solid];
m2_83 -> m2_55  [color=green, key=2, style=dotted];
m2_83 -> m2_65  [key=0, style=solid];
m2_83 -> m2_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_84 -> m2_85  [color=green, key=0, style=solid];
m2_84 -> m2_55  [color=green, key=2, style=dotted];
m2_84 -> m2_88  [key=2, style=dotted];
m2_85 -> m2_86  [color=green, key=0, style=solid];
m2_85 -> m2_55  [color=green, key=2, style=dotted];
m2_85 -> m2_51  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [color=green, key=0, style=solid];
m2_87 -> m2_55  [color=green, key=2, style=dotted];
m2_88 -> m2_89  [color=green, key=0, style=solid];
m2_88 -> m2_59  [color=green, key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_120  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_13  [key=2, style=dotted];
m2_119 -> m2_14  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=2, style=dotted];
m2_120 -> m2_123  [key=2, style=dotted];
m2_121 -> m2_118  [color=blue, key=0, style=bold];
m2_80 -> m2_83  [key=0, style=solid];
m2_80 -> m2_81  [color=darkseagreen4, key=1, label=skippingAssemblyDetails, style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_508 -> m2_509  [key=0, style=solid];
m2_509 -> m2_510  [key=0, style=solid];
m2_510 -> m2_508  [color=blue, key=0, style=bold];
m2_599 -> m2_600  [key=0, style=solid];
m2_599 -> m2_602  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_600 -> m2_601  [key=0, style=solid];
m2_600 -> m2_602  [key=0, style=solid];
m2_602 -> m2_603  [key=0, style=solid];
m2_602 -> m2_604  [key=2, style=dotted];
m2_602 -> m2_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m2_601 -> m2_603  [key=0, style=solid];
m2_603 -> m2_599  [color=blue, key=0, style=bold];
m2_102 -> m2_103  [color=green, key=0, style=solid];
m2_102 -> m2_102  [color=darkseagreen4, key=1, label=bindingFlags, style=dashed];
m2_103 -> m2_103  [color=green, key=3, label="Local variable string json", style=bold];
m2_103 -> m2_104  [color=green, key=0, style=solid];
m2_103 -> m2_105  [key=2, style=dotted];
m2_103 -> m2_106  [key=2, style=dotted];
m2_103 -> m2_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_104 -> m2_105  [color=green, key=0, style=solid];
m2_104 -> m2_18  [color=green, key=2, style=dotted];
m2_104 -> m2_106  [color=green, key=1, label=table, style=dashed];
m2_104 -> m2_107  [color=green, key=1, label=table, style=dashed];
m2_104 -> m2_108  [color=green, key=1, label=table, style=dashed];
m2_104 -> m2_109  [color=green, key=1, label=table, style=dashed];
m2_104 -> m2_110  [color=green, key=1, label=table, style=dashed];
m2_104 -> m2_96  [color=blue, key=0, style=bold];
m2_106 -> m2_107  [color=green, key=0, style=solid];
m2_106 -> m2_20  [color=green, key=2, style=dotted];
m2_107 -> m2_108  [color=green, key=0, style=solid];
m2_107 -> m2_20  [color=green, key=2, style=dotted];
m2_108 -> m2_109  [color=green, key=0, style=solid];
m2_108 -> m2_20  [color=green, key=2, style=dotted];
m2_108 -> m2_110  [key=2, style=dotted];
m2_108 -> m2_111  [key=2, style=dotted];
m2_109 -> m2_110  [color=green, key=0, style=solid];
m2_109 -> m2_20  [color=green, key=2, style=dotted];
m2_109 -> m2_107  [color=blue, key=0, style=bold];
m2_110 -> m2_111  [color=green, key=0, style=solid];
m2_110 -> m2_101  [color=green, key=2, style=dotted];
m2_111 -> m2_102  [color=blue, key=0, style=bold];
m2_345 -> m2_349  [key=0, style=solid];
m2_345 -> m2_351  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_345 -> m2_360  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_351  [key=0, style=solid];
m2_349 -> m2_233  [key=2, style=dotted];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_354  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m2_351 -> m2_360  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_368  [key=2, style=dotted];
m2_360 -> m2_363  [color=darkseagreen4, key=1, label=members, style=dashed];
m2_350 -> m2_367  [key=0, style=solid];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_354  [key=0, style=solid];
m2_352 -> m2_3  [key=2, style=dotted];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_357  [color=darkseagreen4, key=1, label=declaringType, style=dashed];
m2_353 -> m2_367  [key=0, style=solid];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_357  [key=0, style=solid];
m2_355 -> m2_122  [key=2, style=dotted];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_123  [key=2, style=dotted];
m2_357 -> m2_360  [color=darkseagreen4, key=1, label=genericTypeDefinition, style=dashed];
m2_356 -> m2_367  [key=0, style=solid];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_360  [key=0, style=solid];
m2_359 -> m2_367  [key=0, style=solid];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_363  [key=0, style=solid];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_220  [key=2, style=dotted];
m2_362 -> m2_367  [key=0, style=solid];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_366  [key=0, style=solid];
m2_365 -> m2_367  [key=0, style=solid];
m2_366 -> m2_367  [key=0, style=solid];
m2_367 -> m2_345  [color=blue, key=0, style=bold];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_118  [key=2, style=dotted];
m2_125 -> m2_127  [key=2, style=dotted];
m2_126 -> m2_124  [color=blue, key=0, style=bold];
m2_13 -> m2_20  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_96 -> m2_97  [color=green, key=0, style=solid];
m2_96 -> m2_20  [color=green, key=2, style=dotted];
m2_96 -> m2_100  [key=0, style=solid];
m2_96 -> m2_101  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_96 -> m2_103  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_97 -> m2_98  [color=green, key=0, style=solid];
m2_97 -> m2_20  [color=green, key=2, style=dotted];
m2_98 -> m2_99  [color=green, key=0, style=solid];
m2_98 -> m2_20  [color=green, key=2, style=dotted];
m2_98 -> m2_96  [key=2, style=dotted];
m2_99 -> m2_100  [color=green, key=0, style=solid];
m2_99 -> m2_101  [color=green, key=2, style=dotted];
m2_99 -> m2_97  [color=blue, key=0, style=bold];
m2_100 -> m2_91  [color=blue, key=0, style=bold];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [color=darkseagreen4, key=1, label=bindingFlags, style=dashed];
m2_100 -> m2_103  [color=darkseagreen4, key=1, label=bindingFlags, style=dashed];
m2_60 -> m2_61  [color=green, key=0, style=solid];
m2_60 -> m2_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_61 -> m2_62  [color=green, key=0, style=solid];
m2_61 -> m2_86  [key=2, style=dotted];
m2_61 -> m2_71  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_61 -> m2_75  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_61 -> m2_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_61 -> m2_82  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_61 -> m2_84  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=2, style=dotted];
m2_63 -> m2_60  [color=blue, key=0, style=bold];
m2_63 -> m2_64  [key=0, style=solid];
m2_437 -> m2_592  [key=0, style=solid];
m2_437 -> m2_593  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_592 -> m2_593  [key=0, style=solid];
m2_592 -> m2_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m2_593 -> m2_594  [key=0, style=solid];
m2_593 -> m2_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m2_594 -> m2_437  [color=blue, key=0, style=bold];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_244  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_13  [key=2, style=dotted];
m2_243 -> m2_14  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_246  [key=2, style=dotted];
m2_245 -> m2_242  [color=blue, key=0, style=bold];
m2_433 -> m2_438  [key=0, style=solid];
m2_433 -> m2_440  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_433 -> m2_441  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_444  [color=darkseagreen4, key=1, label=scope, style=dashed];
m2_440 -> m2_441  [key=0, style=solid];
m2_440 -> m2_451  [key=0, style=solid];
m2_441 -> m2_442  [key=0, style=solid];
m2_439 -> m2_440  [key=0, style=solid];
m2_439 -> m2_441  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_439 -> m2_449  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_439 -> m2_450  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_444 -> m2_450  [key=0, style=solid];
m2_444 -> m2_444  [color=darkseagreen4, key=1, label=scope, style=dashed];
m2_444 -> m2_446  [color=darkseagreen4, key=1, label=scope, style=dashed];
m2_449 -> m2_452  [key=0, style=solid];
m2_450 -> m2_440  [key=0, style=solid];
m2_450 -> m2_450  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_451 -> m2_452  [key=0, style=solid];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_445  [key=0, style=solid];
m2_442 -> m2_447  [key=0, style=solid];
m2_443 -> m2_444  [key=0, style=solid];
m2_445 -> m2_446  [key=0, style=solid];
m2_447 -> m2_448  [key=0, style=solid];
m2_446 -> m2_450  [key=0, style=solid];
m2_446 -> m2_446  [color=darkseagreen4, key=1, label=scope, style=dashed];
m2_446 -> m2_448  [color=darkseagreen4, key=1, label=scope, style=dashed];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_450  [key=0, style=solid];
m2_452 -> m2_433  [color=blue, key=0, style=bold];
m2_369 -> m2_370  [key=0, style=solid];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_372  [key=2, style=dotted];
m2_371 -> m2_369  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_64 -> m2_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_103  [key=0, style=solid];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_237  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_13  [key=2, style=dotted];
m2_236 -> m2_14  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_239  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_240  [key=0, style=solid];
m2_239 -> m2_241  [key=0, style=solid];
m2_239 -> m2_242  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_241 -> m2_235  [color=blue, key=0, style=bold];
m2_16 -> m2_20  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_455  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_453 -> m2_457  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_453 -> m2_459  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_453 -> m2_460  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_454 -> m2_455  [key=0, style=solid];
m2_454 -> m2_459  [color=darkseagreen4, key=1, label=bindingAttr, style=dashed];
m2_454 -> m2_460  [color=darkseagreen4, key=1, label=bindingAttr, style=dashed];
m2_455 -> m2_456  [key=0, style=solid];
m2_455 -> m2_460  [key=0, style=solid];
m2_455 -> m2_233  [key=2, style=dotted];
m2_457 -> m2_458  [key=0, style=solid];
m2_457 -> m2_459  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m2_459 -> m2_461  [key=0, style=solid];
m2_459 -> m2_464  [key=2, style=dotted];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_233  [key=2, style=dotted];
m2_460 -> m2_465  [key=2, style=dotted];
m2_460 -> m2_466  [key=2, style=dotted];
m2_456 -> m2_457  [key=0, style=solid];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_246  [key=2, style=dotted];
m2_458 -> m2_462  [key=2, style=dotted];
m2_458 -> m2_463  [key=2, style=dotted];
m2_458 -> m2_467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_461 -> m2_453  [color=blue, key=0, style=bold];
m2_335 -> m2_470  [key=0, style=solid];
m2_335 -> m2_471  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_335 -> m2_472  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_470 -> m2_471  [key=0, style=solid];
m2_470 -> m2_13  [key=2, style=dotted];
m2_470 -> m2_14  [key=2, style=dotted];
m2_471 -> m2_472  [key=0, style=solid];
m2_471 -> m2_475  [key=2, style=dotted];
m2_471 -> m2_476  [key=2, style=dotted];
m2_471 -> m2_473  [color=darkseagreen4, key=1, label=fieldInfos, style=dashed];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_477  [key=2, style=dotted];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_385  [key=2, style=dotted];
m2_474 -> m2_335  [color=blue, key=0, style=bold];
m2_72 -> m2_73  [key=0, style=solid];
m2_73 -> m2_53  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label=writingAssemblyName, style=dashed];
m2_74 -> m2_59  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_79  [key=2, style=dotted];
m2_74 -> m2_76  [color=darkseagreen4, key=1, label=json, style=dashed];
m2_74 -> m2_81  [color=darkseagreen4, key=1, label=skippingAssemblyDetails, style=dashed];
m2_77 -> m2_20  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_80  [key=0, style=solid];
m2_75 -> m2_20  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_83  [key=0, style=solid];
m2_75 -> m2_87  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_79  [key=2, style=dotted];
m2_76 -> m2_80  [key=2, style=dotted];
m2_78 -> m2_72  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_296  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_293 -> m2_299  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_293 -> m2_301  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_293 -> m2_307  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_293 -> m2_310  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_293 -> m2_312  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_306  [key=0, style=solid];
m2_294 -> m2_313  [key=0, style=solid];
m2_294 -> m2_233  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_299  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m2_296 -> m2_303  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_301  [key=0, style=solid];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_303  [key=0, style=solid];
m2_307 -> m2_308  [key=0, style=solid];
m2_307 -> m2_312  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_312  [key=0, style=solid];
m2_312 -> m2_314  [key=0, style=solid];
m2_312 -> m2_16  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_306 -> m2_307  [key=0, style=solid];
m2_313 -> m2_314  [key=0, style=solid];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_299  [key=0, style=solid];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_305  [key=0, style=solid];
m2_298 -> m2_314  [key=0, style=solid];
m2_300 -> m2_314  [key=0, style=solid];
m2_302 -> m2_314  [key=0, style=solid];
m2_304 -> m2_314  [key=0, style=solid];
m2_305 -> m2_314  [key=0, style=solid];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_310  [key=0, style=solid];
m2_309 -> m2_314  [key=0, style=solid];
m2_311 -> m2_314  [key=0, style=solid];
m2_314 -> m2_293  [color=blue, key=0, style=bold];
m2_595 -> m2_596  [key=0, style=solid];
m2_596 -> m2_597  [key=0, style=solid];
m2_596 -> m2_598  [key=2, style=dotted];
m2_597 -> m2_595  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=0, style=solid];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_177  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_175 -> m2_178  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_175 -> m2_179  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_175 -> m2_181  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_175 -> m2_184  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_181  [key=0, style=solid];
m2_176 -> m2_122  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_123  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_181  [key=0, style=solid];
m2_179 -> m2_180  [key=0, style=solid];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_184  [key=0, style=solid];
m2_181 -> m2_186  [key=2, style=dotted];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_186  [key=2, style=dotted];
m2_184 -> m2_175  [key=2, style=dotted];
m2_180 -> m2_185  [key=0, style=solid];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_185  [key=0, style=solid];
m2_185 -> m2_175  [color=blue, key=0, style=bold];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_169  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_167 -> m2_170  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_167 -> m2_171  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_167 -> m2_172  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_13  [key=2, style=dotted];
m2_168 -> m2_14  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_13  [key=2, style=dotted];
m2_169 -> m2_14  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_172  [key=0, style=solid];
m2_170 -> m2_174  [key=2, style=dotted];
m2_170 -> m2_159  [key=2, style=dotted];
m2_171 -> m2_173  [key=0, style=solid];
m2_171 -> m2_160  [key=2, style=dotted];
m2_171 -> m2_161  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_175  [key=2, style=dotted];
m2_173 -> m2_167  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_15  [key=2, style=dotted];
m2_19 -> m2_21  [color=darkseagreen4, key=1, label=m, style=dashed];
m2_376 -> m2_378  [key=0, style=solid];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_384  [key=2, style=dotted];
m2_378 -> m2_382  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_381  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_385  [key=2, style=dotted];
m2_382 -> m2_386  [key=2, style=dotted];
m2_380 -> m2_381  [key=0, style=solid];
m2_380 -> m2_382  [key=0, style=solid];
m2_381 -> m2_383  [key=0, style=solid];
m2_383 -> m2_376  [color=blue, key=0, style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_114  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_112 -> m2_115  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_13  [key=2, style=dotted];
m2_113 -> m2_14  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_116  [key=0, style=solid];
m2_114 -> m2_95  [key=2, style=dotted];
m2_115 -> m2_117  [key=0, style=solid];
m2_115 -> m2_118  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_117 -> m2_112  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m2_17 -> m2_22  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m2_17 -> m2_0  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_13  [key=2, style=dotted];
m2_18 -> m2_14  [key=2, style=dotted];
m2_0 -> m2_1  [key=0, style=solid];
m2_4 -> m2_20  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_13  [key=2, style=dotted];
m2_4 -> m2_14  [key=2, style=dotted];
m2_5 -> m2_20  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_15  [key=2, style=dotted];
m2_6 -> m2_20  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=0, style=solid];
m2_7 -> m2_20  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_12  [key=0, style=solid];
m2_8 -> m2_20  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_16  [key=2, style=dotted];
m2_9 -> m2_20  [key=2, style=dotted];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_10 -> m2_20  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [color=red, key=0, style=solid];
m2_12 -> m2_20  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_3  [color=blue, key=0, style=bold];
m2_15 -> m2_20  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_2 -> m2_18  [key=2, style=dotted];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_6  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_7  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_8  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_9  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_10  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_11  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_14  [color=darkseagreen4, key=1, label=deserializedDataTable, style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_19  [key=2, style=dotted];
m2_3 -> m2_5  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m2_3 -> m2_8  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label=dr1, style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_1  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_140  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_142  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_143  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_144  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_146  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_138 -> m2_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_13  [key=2, style=dotted];
m2_139 -> m2_14  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_13  [key=2, style=dotted];
m2_140 -> m2_14  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_143  [key=0, style=solid];
m2_141 -> m2_158  [key=2, style=dotted];
m2_141 -> m2_159  [key=2, style=dotted];
m2_142 -> m2_157  [key=0, style=solid];
m2_142 -> m2_160  [key=2, style=dotted];
m2_142 -> m2_161  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_149  [key=0, style=solid];
m2_143 -> m2_158  [key=2, style=dotted];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_149  [key=0, style=solid];
m2_144 -> m2_122  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_123  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_149  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_155  [key=0, style=solid];
m2_149 -> m2_162  [key=2, style=dotted];
m2_149 -> m2_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_149 -> m2_153  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_149  [key=0, style=solid];
m2_148 -> m2_157  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_149  [key=0, style=solid];
m2_150 -> m2_122  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_157  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_123  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_154 -> m2_157  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_157 -> m2_138  [color=blue, key=0, style=bold];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_165  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_164 -> m2_165  [key=0, style=solid];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_167  [key=2, style=dotted];
m2_166 -> m2_163  [color=blue, key=0, style=bold];
m2_548 -> m2_549  [key=0, style=solid];
m2_346 -> m2_347  [key=0, style=solid];
m2_347 -> m2_348  [key=0, style=solid];
m2_348 -> m2_346  [color=blue, key=0, style=bold];
m2_467 -> m2_468  [key=0, style=solid];
m2_468 -> m2_469  [key=0, style=solid];
m2_469 -> m2_467  [color=blue, key=0, style=bold];
m2_488 -> m2_489  [key=0, style=solid];
m2_489 -> m2_490  [key=0, style=solid];
m2_490 -> m2_488  [color=blue, key=0, style=bold];
m2_534 -> m2_535  [key=0, style=solid];
m2_537 -> m2_538  [key=0, style=solid];
m2_540 -> m2_541  [key=0, style=solid];
m2_540 -> m2_530  [key=2, style=dotted];
m2_540 -> m2_532  [key=2, style=dotted];
m2_540 -> m2_203  [key=2, style=dotted];
m2_533 -> m2_534  [key=0, style=solid];
m2_536 -> m2_537  [key=0, style=solid];
m2_539 -> m2_540  [key=0, style=solid];
m2_535 -> m2_533  [color=blue, key=0, style=bold];
m2_538 -> m2_536  [color=blue, key=0, style=bold];
m2_541 -> m2_539  [color=blue, key=0, style=bold];
m2_549 -> m2_550  [key=0, style=solid];
m2_549 -> m2_27  [key=2, style=dotted];
m2_550 -> m2_548  [color=blue, key=0, style=bold];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_249  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_247 -> m2_250  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_247 -> m2_252  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_247 -> m2_254  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_247 -> m2_256  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_247 -> m2_257  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_13  [key=2, style=dotted];
m2_248 -> m2_14  [key=2, style=dotted];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_13  [key=2, style=dotted];
m2_249 -> m2_14  [key=2, style=dotted];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_253  [key=0, style=solid];
m2_250 -> m2_257  [key=0, style=solid];
m2_250 -> m2_233  [key=2, style=dotted];
m2_252 -> m2_258  [key=0, style=solid];
m2_252 -> m2_259  [key=2, style=dotted];
m2_254 -> m2_258  [key=0, style=solid];
m2_254 -> m2_260  [key=2, style=dotted];
m2_256 -> m2_258  [key=0, style=solid];
m2_256 -> m2_261  [key=2, style=dotted];
m2_256 -> m2_161  [key=2, style=dotted];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_234  [key=2, style=dotted];
m2_257 -> m2_262  [key=2, style=dotted];
m2_257 -> m2_13  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_253 -> m2_254  [key=0, style=solid];
m2_255 -> m2_256  [key=0, style=solid];
m2_258 -> m2_247  [color=blue, key=0, style=bold];
m2_542 -> m2_543  [key=0, style=solid];
m2_542 -> m2_549  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_543 -> m2_544  [key=0, style=solid];
m2_543 -> m2_546  [key=2, style=dotted];
m2_543 -> m2_547  [key=2, style=dotted];
m2_543 -> m2_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_544 -> m2_545  [key=0, style=solid];
m2_545 -> m2_542  [color=blue, key=0, style=bold];
m2_79 -> m2_83  [key=0, style=solid];
m2_79 -> m2_87  [key=2, style=dotted];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_479  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m2_477 -> m2_480  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_477 -> m2_482  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>", style=dashed];
m2_478 -> m2_479  [key=0, style=solid];
m2_478 -> m2_483  [key=0, style=solid];
m2_479 -> m2_480  [key=0, style=solid];
m2_479 -> m2_484  [key=2, style=dotted];
m2_479 -> m2_481  [color=darkseagreen4, key=1, label=nonPublicBindingAttr, style=dashed];
m2_480 -> m2_481  [key=0, style=solid];
m2_480 -> m2_483  [key=0, style=solid];
m2_480 -> m2_186  [key=2, style=dotted];
m2_480 -> m2_480  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_482 -> m2_480  [key=0, style=solid];
m2_482 -> m2_487  [key=2, style=dotted];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_476  [key=2, style=dotted];
m2_481 -> m2_485  [key=2, style=dotted];
m2_481 -> m2_486  [key=2, style=dotted];
m2_481 -> m2_488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_483 -> m2_477  [color=blue, key=0, style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_84  [key=0, style=solid];
m2_66 -> m2_53  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_71  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_66 -> m2_75  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_66 -> m2_79  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_66 -> m2_82  [color=darkseagreen4, key=1, label=current, style=dashed];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_72  [key=0, style=solid];
m2_67 -> m2_76  [key=0, style=solid];
m2_67 -> m2_81  [key=0, style=solid];
m2_68 -> m2_65  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [key=0, style=solid];
m2_263 -> m2_264  [key=0, style=solid];
m2_263 -> m2_265  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_263 -> m2_266  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_263 -> m2_268  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_263 -> m2_270  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_263 -> m2_271  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_13  [key=2, style=dotted];
m2_264 -> m2_14  [key=2, style=dotted];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_13  [key=2, style=dotted];
m2_265 -> m2_14  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_269  [key=0, style=solid];
m2_266 -> m2_271  [key=0, style=solid];
m2_266 -> m2_233  [key=2, style=dotted];
m2_268 -> m2_272  [key=0, style=solid];
m2_268 -> m2_273  [key=2, style=dotted];
m2_270 -> m2_272  [key=0, style=solid];
m2_270 -> m2_274  [key=2, style=dotted];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_234  [key=2, style=dotted];
m2_271 -> m2_161  [key=2, style=dotted];
m2_271 -> m2_13  [key=2, style=dotted];
m2_267 -> m2_268  [key=0, style=solid];
m2_269 -> m2_270  [key=0, style=solid];
m2_272 -> m2_263  [color=blue, key=0, style=bold];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_422 -> m2_428  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_422 -> m2_429  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_433  [key=2, style=dotted];
m2_423 -> m2_426  [color=darkseagreen4, key=1, label=assemblyDelimiterIndex, style=dashed];
m2_423 -> m2_427  [color=darkseagreen4, key=1, label=assemblyDelimiterIndex, style=dashed];
m2_423 -> m2_428  [color=darkseagreen4, key=1, label=assemblyDelimiterIndex, style=dashed];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_434  [key=2, style=dotted];
m2_427 -> m2_435  [key=2, style=dotted];
m2_427 -> m2_436  [key=2, style=dotted];
m2_427 -> m2_431  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_428 -> m2_431  [key=0, style=solid];
m2_428 -> m2_434  [key=2, style=dotted];
m2_428 -> m2_435  [key=2, style=dotted];
m2_428 -> m2_436  [key=2, style=dotted];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_431  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_424 -> m2_425  [key=0, style=solid];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_429  [key=0, style=solid];
m2_425 -> m2_426  [key=0, style=solid];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_437  [key=2, style=dotted];
m2_430 -> m2_431  [key=0, style=solid];
m2_432 -> m2_422  [color=blue, key=0, style=bold];
m2_337 -> m2_491  [key=0, style=solid];
m2_337 -> m2_492  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_337 -> m2_493  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_337 -> m2_494  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_337 -> m2_495  [color=darkseagreen4, key=1, label="System.Reflection.BindingFlags", style=dashed];
m2_337 -> m2_496  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_337 -> m2_500  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_491 -> m2_492  [key=0, style=solid];
m2_491 -> m2_13  [key=2, style=dotted];
m2_491 -> m2_14  [key=2, style=dotted];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_475  [key=2, style=dotted];
m2_492 -> m2_506  [key=2, style=dotted];
m2_492 -> m2_495  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m2_492 -> m2_496  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m2_492 -> m2_498  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m2_492 -> m2_499  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m2_492 -> m2_502  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m2_492 -> m2_504  [color=darkseagreen4, key=1, label=propertyInfos, style=dashed];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_496  [key=0, style=solid];
m2_493 -> m2_158  [key=2, style=dotted];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_496  [key=0, style=solid];
m2_494 -> m2_162  [key=2, style=dotted];
m2_495 -> m2_494  [key=0, style=solid];
m2_495 -> m2_506  [key=2, style=dotted];
m2_495 -> m2_336  [key=2, style=dotted];
m2_496 -> m2_497  [key=0, style=solid];
m2_496 -> m2_507  [key=2, style=dotted];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_503  [key=0, style=solid];
m2_498 -> m2_499  [key=0, style=solid];
m2_498 -> m2_504  [key=0, style=solid];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_501  [color=darkseagreen4, key=1, label=member, style=dashed];
m2_502 -> m2_503  [key=0, style=solid];
m2_504 -> m2_505  [key=0, style=solid];
m2_497 -> m2_498  [key=0, style=solid];
m2_497 -> m2_499  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_497 -> m2_502  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_497 -> m2_503  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_503 -> m2_498  [key=0, style=solid];
m2_503 -> m2_503  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_453  [key=2, style=dotted];
m2_505 -> m2_337  [color=blue, key=0, style=bold];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_222  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_220 -> m2_224  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_220 -> m2_226  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_220 -> m2_228  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_220 -> m2_230  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_220 -> m2_231  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_13  [key=2, style=dotted];
m2_221 -> m2_14  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_225  [key=0, style=solid];
m2_222 -> m2_227  [key=0, style=solid];
m2_222 -> m2_229  [key=0, style=solid];
m2_222 -> m2_231  [key=0, style=solid];
m2_222 -> m2_233  [key=2, style=dotted];
m2_224 -> m2_232  [key=0, style=solid];
m2_226 -> m2_232  [key=0, style=solid];
m2_228 -> m2_232  [key=0, style=solid];
m2_230 -> m2_232  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_234  [key=2, style=dotted];
m2_231 -> m2_13  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_225 -> m2_226  [key=0, style=solid];
m2_227 -> m2_228  [key=0, style=solid];
m2_229 -> m2_230  [key=0, style=solid];
m2_232 -> m2_220  [color=blue, key=0, style=bold];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_131  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_128 -> m2_132  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=0, style=solid];
m2_129 -> m2_122  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_123  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_130 -> m2_133  [key=0, style=solid];
m2_133 -> m2_128  [color=blue, key=0, style=bold];
m2_372 -> m2_373  [key=0, style=solid];
m2_373 -> m2_374  [key=0, style=solid];
m2_373 -> m2_376  [key=2, style=dotted];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_377  [key=2, style=dotted];
m2_375 -> m2_372  [color=blue, key=0, style=bold];
m2_607 -> m2_534  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_607 -> m2_537  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_607 -> m2_540  [color=darkseagreen4, key=1, label=subTypeProperty, style=dashed];
m2_608 -> m2_540  [color=darkseagreen4, key=1, label=subTypePropertyDeclaringType, style=dashed];
m2_609 -> m2_549  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_610 -> m2_549  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_612 -> m2_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m2_612 -> m2_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m2_612 -> m2_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m2_613 -> m2_603  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Utilities.TypeNameKey", style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_6  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_4  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [color=blue, key=0, style=bold];
m3_10 -> m3_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReaderException", style=dashed];
m3_10 -> m3_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReaderException", style=dashed];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_6  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [color=blue, key=0, style=bold];
m4_10 -> m4_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaException", style=dashed];
m4_10 -> m4_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaException", style=dashed];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_4  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [color=blue, key=0, style=bold];
m6_835 -> m6_30  [key=2, style=dotted];
m6_835 -> m6_81  [key=2, style=dotted];
m6_835 -> m6_836  [key=0, style=solid];
m6_54 -> m6_30  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_77  [key=2, style=dotted];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_120  [key=2, style=dotted];
m6_1027 -> m6_1028  [key=0, style=solid];
m6_1028 -> m6_1029  [key=0, style=solid];
m6_1028 -> m6_996  [key=2, style=dotted];
m6_1029 -> m6_1027  [color=blue, key=0, style=bold];
m6_841 -> m6_842  [key=0, style=solid];
m6_841 -> m6_898  [key=2, style=dotted];
m6_842 -> m6_70  [key=2, style=dotted];
m6_842 -> m6_110  [key=2, style=dotted];
m6_842 -> m6_843  [key=0, style=solid];
m6_842 -> m6_74  [key=2, style=dotted];
m6_842 -> m6_75  [key=2, style=dotted];
m6_842 -> m6_252  [key=2, style=dotted];
m6_842 -> m6_266  [key=2, style=dotted];
m6_842 -> m6_76  [key=2, style=dotted];
m6_842 -> m6_847  [key=2, style=dotted];
m6_842 -> m6_845  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_842 -> m6_895  [key=0, style=solid];
m6_843 -> m6_844  [key=0, style=solid];
m6_843 -> m6_848  [key=2, style=dotted];
m6_843 -> m6_845  [color=darkseagreen4, key=1, label=a2, style=dashed];
m6_843 -> m6_882  [color=darkseagreen4, key=1, label=chars, style=dashed];
m6_843 -> m6_884  [color=darkseagreen4, key=1, label=chars, style=dashed];
m6_843 -> m6_892  [color=darkseagreen4, key=1, label=chars, style=dashed];
m6_843 -> m6_894  [color=darkseagreen4, key=1, label=chars, style=dashed];
m6_845 -> m6_36  [key=2, style=dotted];
m6_845 -> m6_846  [key=0, style=solid];
m6_845 -> m6_849  [key=2, style=dotted];
m6_845 -> m6_881  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_845 -> m6_884  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_845 -> m6_890  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_845 -> m6_894  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_844 -> m6_801  [key=2, style=dotted];
m6_844 -> m6_845  [key=0, style=solid];
m6_844 -> m6_802  [key=2, style=dotted];
m6_844 -> m6_875  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m6_844 -> m6_877  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m6_844 -> m6_888  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m6_846 -> m6_841  [color=blue, key=0, style=bold];
m6_846 -> m6_847  [key=0, style=solid];
m6_846 -> m6_848  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_846 -> m6_881  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_846 -> m6_884  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_846 -> m6_885  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_846 -> m6_889  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_67 -> m6_30  [key=2, style=dotted];
m6_67 -> m6_35  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_1018 -> m6_1019  [key=0, style=solid];
m6_1019 -> m6_1020  [key=0, style=solid];
m6_1019 -> m6_996  [key=2, style=dotted];
m6_1020 -> m6_1018  [color=blue, key=0, style=bold];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_53  [key=2, style=dotted];
m6_53 -> m6_59  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_53 -> m6_74  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_56  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_53 -> m6_60  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_53 -> m6_62  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_53 -> m6_75  [key=2, style=dotted];
m6_53 -> m6_76  [key=2, style=dotted];
m6_53 -> m6_61  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_53 -> m6_63  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_53 -> m6_64  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_181 -> m6_30  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_258  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_30  [key=2, style=dotted];
m6_189 -> m6_258  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_93  [key=2, style=dotted];
m6_190 -> m6_196  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_190 -> m6_253  [key=2, style=dotted];
m6_190 -> m6_30  [key=2, style=dotted];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_29  [key=2, style=dotted];
m6_191 -> m6_193  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_191 -> m6_194  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_191 -> m6_195  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_191 -> m6_261  [key=2, style=dotted];
m6_191 -> m6_30  [key=2, style=dotted];
m6_191 -> m6_260  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_196 -> m6_96  [key=2, style=dotted];
m6_196 -> m6_198  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_196 -> m6_30  [key=2, style=dotted];
m6_196 -> m6_263  [key=2, style=dotted];
m6_196 -> m6_258  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_194  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_192 -> m6_261  [key=2, style=dotted];
m6_192 -> m6_30  [key=2, style=dotted];
m6_192 -> m6_260  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_171  [key=2, style=dotted];
m6_193 -> m6_30  [key=2, style=dotted];
m6_193 -> m6_260  [key=2, style=dotted];
m6_193 -> m6_258  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_95  [key=2, style=dotted];
m6_194 -> m6_5  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_194 -> m6_262  [key=2, style=dotted];
m6_194 -> m6_30  [key=2, style=dotted];
m6_194 -> m6_263  [key=2, style=dotted];
m6_195 -> m6_196  [key=0, style=solid];
m6_195 -> m6_130  [key=2, style=dotted];
m6_195 -> m6_30  [key=2, style=dotted];
m6_195 -> m6_264  [key=2, style=dotted];
m6_195 -> m6_265  [key=2, style=dotted];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_262  [key=2, style=dotted];
m6_197 -> m6_30  [key=2, style=dotted];
m6_197 -> m6_263  [key=2, style=dotted];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_37  [key=2, style=dotted];
m6_198 -> m6_30  [key=2, style=dotted];
m6_198 -> m6_265  [key=2, style=dotted];
m6_198 -> m6_258  [key=2, style=dotted];
m6_199 -> m6_189  [color=blue, key=0, style=bold];
m6_199 -> m6_30  [key=2, style=dotted];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_265  [key=2, style=dotted];
m6_199 -> m6_264  [key=2, style=dotted];
m6_472 -> m6_32  [key=2, style=dotted];
m6_472 -> m6_30  [key=2, style=dotted];
m6_472 -> m6_473  [key=0, style=solid];
m6_472 -> m6_500  [key=2, style=dotted];
m6_260 -> m6_261  [key=0, style=solid];
m6_260 -> m6_249  [key=2, style=dotted];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_122  [key=2, style=dotted];
m6_730 -> m6_731  [key=0, style=solid];
m6_761 -> m6_762  [key=0, style=solid];
m6_761 -> m6_751  [key=2, style=dotted];
m6_761 -> m6_37  [key=2, style=dotted];
m6_121 -> m6_72  [key=2, style=dotted];
m6_121 -> m6_30  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_73  [key=2, style=dotted];
m6_52 -> m6_30  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_488 -> m6_72  [key=2, style=dotted];
m6_488 -> m6_30  [key=2, style=dotted];
m6_488 -> m6_489  [key=0, style=solid];
m6_488 -> m6_500  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_867 -> m6_868  [key=0, style=solid];
m6_867 -> m6_880  [key=0, style=solid];
m6_868 -> m6_321  [key=2, style=dotted];
m6_868 -> m6_869  [key=0, style=solid];
m6_868 -> m6_870  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_869 -> m6_867  [color=blue, key=0, style=bold];
m6_869 -> m6_880  [key=0, style=solid];
m6_187 -> m6_32  [key=2, style=dotted];
m6_187 -> m6_30  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_126 -> m6_253  [key=2, style=dotted];
m6_126 -> m6_30  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_274 -> m6_275  [key=0, style=solid];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_67  [key=2, style=dotted];
m6_275 -> m6_294  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_68  [key=2, style=dotted];
m6_276 -> m6_321  [key=2, style=dotted];
m6_276 -> m6_323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_70  [key=2, style=dotted];
m6_294 -> m6_321  [key=2, style=dotted];
m6_294 -> m6_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_29  [key=2, style=dotted];
m6_277 -> m6_279  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_280  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_281  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_282  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_283  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_284  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_285  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_286  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_287  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_288  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_289  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_290  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_291  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_292  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_277 -> m6_321  [key=2, style=dotted];
m6_277 -> m6_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_321  [key=2, style=dotted];
m6_278 -> m6_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_248  [key=2, style=dotted];
m6_279 -> m6_321  [key=2, style=dotted];
m6_279 -> m6_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_249  [key=2, style=dotted];
m6_280 -> m6_321  [key=2, style=dotted];
m6_280 -> m6_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_122  [key=2, style=dotted];
m6_281 -> m6_321  [key=2, style=dotted];
m6_281 -> m6_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_282 -> m6_283  [color=green, key=0, style=solid];
m6_282 -> m6_249  [key=2, style=dotted];
m6_282 -> m6_321  [key=2, style=dotted];
m6_282 -> m6_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_283 -> m6_284  [color=green, key=0, style=solid];
m6_283 -> m6_122  [key=2, style=dotted];
m6_283 -> m6_321  [color=green, key=2, style=dotted];
m6_283 -> m6_344  [color=green, key=1, label="lambda expression", style=dashed];
m6_284 -> m6_285  [color=green, key=0, style=solid];
m6_284 -> m6_249  [key=2, style=dotted];
m6_284 -> m6_321  [color=green, key=2, style=dotted];
m6_284 -> m6_348  [color=green, key=1, label="lambda expression", style=dashed];
m6_285 -> m6_286  [color=green, key=0, style=solid];
m6_285 -> m6_120  [key=2, style=dotted];
m6_285 -> m6_321  [color=green, key=2, style=dotted];
m6_285 -> m6_351  [color=green, key=1, label="lambda expression", style=dashed];
m6_286 -> m6_287  [color=green, key=0, style=solid];
m6_286 -> m6_122  [key=2, style=dotted];
m6_286 -> m6_321  [color=green, key=2, style=dotted];
m6_286 -> m6_354  [color=green, key=1, label="lambda expression", style=dashed];
m6_287 -> m6_288  [color=green, key=0, style=solid];
m6_287 -> m6_250  [key=2, style=dotted];
m6_287 -> m6_321  [color=green, key=2, style=dotted];
m6_287 -> m6_357  [color=green, key=1, label="lambda expression", style=dashed];
m6_288 -> m6_289  [color=green, key=0, style=solid];
m6_288 -> m6_122  [key=2, style=dotted];
m6_288 -> m6_321  [color=green, key=2, style=dotted];
m6_288 -> m6_360  [color=green, key=1, label="lambda expression", style=dashed];
m6_289 -> m6_290  [color=green, key=0, style=solid];
m6_289 -> m6_122  [key=2, style=dotted];
m6_289 -> m6_321  [color=green, key=2, style=dotted];
m6_289 -> m6_363  [color=green, key=1, label="lambda expression", style=dashed];
m6_289 -> m6_106  [color=green, key=3, label="Local variable object value", style=bold];
m6_290 -> m6_291  [color=green, key=0, style=solid];
m6_290 -> m6_297  [key=2, style=dotted];
m6_290 -> m6_321  [color=green, key=2, style=dotted];
m6_290 -> m6_366  [color=green, key=1, label="lambda expression", style=dashed];
m6_291 -> m6_292  [color=green, key=0, style=solid];
m6_291 -> m6_35  [key=2, style=dotted];
m6_291 -> m6_321  [color=green, key=2, style=dotted];
m6_291 -> m6_369  [color=green, key=1, label="lambda expression", style=dashed];
m6_292 -> m6_293  [color=green, key=0, style=solid];
m6_292 -> m6_37  [key=2, style=dotted];
m6_292 -> m6_321  [color=green, key=2, style=dotted];
m6_292 -> m6_372  [color=green, key=1, label="lambda expression", style=dashed];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_295  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_293 -> m6_133  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m6_293 -> m6_201  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m6_293 -> m6_5  [color=darkorchid, key=3, label="Parameter variable string reference", style=bold];
m6_293 -> m6_212  [color=darkorchid, key=3, label="Parameter variable string reference", style=bold];
m6_293 -> m6_417  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_293 -> m6_440  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_293 -> m6_64  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_293 -> m6_293  [color=darkorchid, key=3, label="method methodReturn object CreateList", style=bold];
m6_293 -> m6_321  [key=2, style=dotted];
m6_293 -> m6_375  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_251  [key=2, style=dotted];
m6_295 -> m6_321  [key=2, style=dotted];
m6_295 -> m6_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_296 -> m6_274  [color=blue, key=0, style=bold];
m6_296 -> m6_321  [key=2, style=dotted];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_741 -> m6_742  [key=0, style=solid];
m6_741 -> m6_30  [key=2, style=dotted];
m6_742 -> m6_743  [key=0, style=solid];
m6_742 -> m6_93  [key=2, style=dotted];
m6_742 -> m6_746  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_742 -> m6_30  [key=2, style=dotted];
m6_743 -> m6_744  [key=0, style=solid];
m6_743 -> m6_29  [key=2, style=dotted];
m6_743 -> m6_745  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_743 -> m6_30  [key=2, style=dotted];
m6_743 -> m6_81  [key=2, style=dotted];
m6_746 -> m6_747  [key=0, style=solid];
m6_746 -> m6_96  [key=2, style=dotted];
m6_746 -> m6_748  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_746 -> m6_30  [key=2, style=dotted];
m6_746 -> m6_510  [color=darkorchid, key=3, label="Local variable bool exit", style=bold];
m6_744 -> m6_745  [key=0, style=solid];
m6_744 -> m6_749  [color=darkseagreen4, key=1, label=script, style=dashed];
m6_744 -> m6_751  [key=2, style=dotted];
m6_745 -> m6_746  [key=0, style=solid];
m6_745 -> m6_34  [key=2, style=dotted];
m6_745 -> m6_30  [key=2, style=dotted];
m6_749 -> m6_750  [key=0, style=solid];
m6_749 -> m6_751  [key=2, style=dotted];
m6_749 -> m6_37  [key=2, style=dotted];
m6_749 -> m6_30  [key=2, style=dotted];
m6_747 -> m6_748  [key=0, style=solid];
m6_747 -> m6_37  [key=2, style=dotted];
m6_747 -> m6_30  [key=2, style=dotted];
m6_748 -> m6_749  [key=0, style=solid];
m6_748 -> m6_470  [key=2, style=dotted];
m6_748 -> m6_471  [key=2, style=dotted];
m6_748 -> m6_30  [key=2, style=dotted];
m6_748 -> m6_81  [key=2, style=dotted];
m6_750 -> m6_741  [color=blue, key=0, style=bold];
m6_750 -> m6_737  [color=blue, key=0, style=bold];
m6_686 -> m6_687  [key=0, style=solid];
m6_686 -> m6_631  [key=2, style=dotted];
m6_687 -> m6_70  [key=2, style=dotted];
m6_687 -> m6_110  [key=2, style=dotted];
m6_687 -> m6_688  [key=0, style=solid];
m6_687 -> m6_690  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_687 -> m6_37  [key=2, style=dotted];
m6_692 -> m6_70  [key=2, style=dotted];
m6_692 -> m6_693  [key=0, style=solid];
m6_692 -> m6_35  [key=2, style=dotted];
m6_692 -> m6_36  [key=2, style=dotted];
m6_692 -> m6_171  [key=2, style=dotted];
m6_690 -> m6_30  [key=2, style=dotted];
m6_690 -> m6_691  [key=0, style=solid];
m6_690 -> m6_171  [key=2, style=dotted];
m6_689 -> m6_30  [key=2, style=dotted];
m6_689 -> m6_81  [key=2, style=dotted];
m6_689 -> m6_690  [key=0, style=solid];
m6_689 -> m6_37  [key=2, style=dotted];
m6_689 -> m6_390  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m6_689 -> m6_440  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_689 -> m6_445  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m6_691 -> m6_30  [key=2, style=dotted];
m6_691 -> m6_692  [key=0, style=solid];
m6_691 -> m6_37  [key=2, style=dotted];
m6_693 -> m6_30  [key=2, style=dotted];
m6_693 -> m6_694  [key=0, style=solid];
m6_693 -> m6_37  [key=2, style=dotted];
m6_694 -> m6_30  [key=2, style=dotted];
m6_694 -> m6_695  [key=0, style=solid];
m6_694 -> m6_35  [key=2, style=dotted];
m6_695 -> m6_30  [key=2, style=dotted];
m6_695 -> m6_696  [key=0, style=solid];
m6_695 -> m6_37  [key=2, style=dotted];
m6_688 -> m6_692  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_688 -> m6_596  [key=2, style=dotted];
m6_688 -> m6_690  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_688 -> m6_689  [key=0, style=solid];
m6_688 -> m6_691  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_688 -> m6_693  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_688 -> m6_694  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_688 -> m6_695  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_688 -> m6_697  [key=2, style=dotted];
m6_688 -> m6_171  [key=2, style=dotted];
m6_696 -> m6_686  [color=blue, key=0, style=bold];
m6_696 -> m6_697  [key=0, style=solid];
m6_696 -> m6_30  [key=2, style=dotted];
m6_714 -> m6_715  [key=0, style=solid];
m6_714 -> m6_70  [key=2, style=dotted];
m6_714 -> m6_251  [key=2, style=dotted];
m6_821 -> m6_822  [key=0, style=solid];
m6_822 -> m6_70  [key=2, style=dotted];
m6_822 -> m6_110  [key=2, style=dotted];
m6_822 -> m6_823  [key=0, style=solid];
m6_822 -> m6_824  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_825  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_822 -> m6_826  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_827  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_822 -> m6_828  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_829  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_830  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_831  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_822 -> m6_832  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_822 -> m6_833  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_834  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_835  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_836  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_837  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_822 -> m6_838  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_832 -> m6_795  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_832 -> m6_30  [key=2, style=dotted];
m6_832 -> m6_833  [key=0, style=solid];
m6_832 -> m6_807  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_832 -> m6_796  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.RequiredValue> requiredProperties", style=bold];
m6_832 -> m6_832  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_824 -> m6_30  [key=2, style=dotted];
m6_824 -> m6_825  [key=0, style=solid];
m6_825 -> m6_30  [key=2, style=dotted];
m6_825 -> m6_826  [key=0, style=solid];
m6_825 -> m6_835  [key=2, style=dotted];
m6_825 -> m6_836  [key=2, style=dotted];
m6_825 -> m6_825  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m6_826 -> m6_30  [key=2, style=dotted];
m6_826 -> m6_827  [key=0, style=solid];
m6_826 -> m6_93  [key=2, style=dotted];
m6_826 -> m6_829  [color=darkseagreen4, key=1, label=swOld, style=dashed];
m6_827 -> m6_30  [key=2, style=dotted];
m6_827 -> m6_828  [key=0, style=solid];
m6_827 -> m6_835  [key=2, style=dotted];
m6_827 -> m6_837  [key=2, style=dotted];
m6_828 -> m6_30  [key=2, style=dotted];
m6_828 -> m6_81  [key=2, style=dotted];
m6_828 -> m6_829  [key=0, style=solid];
m6_828 -> m6_96  [key=2, style=dotted];
m6_828 -> m6_830  [color=darkseagreen4, key=1, label=newText, style=dashed];
m6_828 -> m6_831  [color=darkseagreen4, key=1, label=newText, style=dashed];
m6_830 -> m6_30  [key=2, style=dotted];
m6_830 -> m6_831  [key=0, style=solid];
m6_830 -> m6_832  [key=0, style=solid];
m6_831 -> m6_30  [key=2, style=dotted];
m6_831 -> m6_832  [key=0, style=solid];
m6_831 -> m6_834  [key=0, style=solid];
m6_831 -> m6_838  [key=2, style=dotted];
m6_831 -> m6_839  [key=2, style=dotted];
m6_833 -> m6_30  [key=2, style=dotted];
m6_833 -> m6_834  [key=0, style=solid];
m6_833 -> m6_822  [key=0, style=solid];
m6_834 -> m6_30  [key=2, style=dotted];
m6_834 -> m6_835  [key=0, style=solid];
m6_834 -> m6_821  [color=blue, key=0, style=bold];
m6_837 -> m6_30  [key=2, style=dotted];
m6_837 -> m6_838  [key=0, style=solid];
m6_837 -> m6_840  [key=0, style=solid];
m6_837 -> m6_841  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m6_837 -> m6_842  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_837 -> m6_847  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_837 -> m6_848  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_837 -> m6_849  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_837 -> m6_883  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_837 -> m6_884  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m6_837 -> m6_887  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m6_837 -> m6_888  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m6_837 -> m6_891  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m6_837 -> m6_893  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_837 -> m6_894  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m6_837 -> m6_895  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_837 -> m6_896  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m6_838 -> m6_30  [key=2, style=dotted];
m6_838 -> m6_81  [key=2, style=dotted];
m6_838 -> m6_839  [key=0, style=solid];
m6_823 -> m6_824  [key=0, style=solid];
m6_823 -> m6_840  [key=2, style=dotted];
m6_823 -> m6_93  [key=2, style=dotted];
m6_823 -> m6_825  [color=darkseagreen4, key=1, label=swNew, style=dashed];
m6_823 -> m6_828  [color=darkseagreen4, key=1, label=swNew, style=dashed];
m6_829 -> m6_830  [key=0, style=solid];
m6_829 -> m6_840  [key=2, style=dotted];
m6_829 -> m6_96  [key=2, style=dotted];
m6_829 -> m6_831  [color=darkseagreen4, key=1, label=oldText, style=dashed];
m6_836 -> m6_837  [key=0, style=solid];
m6_836 -> m6_840  [key=2, style=dotted];
m6_839 -> m6_821  [color=blue, key=0, style=bold];
m6_94 -> m6_988  [key=0, style=solid];
m6_94 -> m6_106  [color=darkorchid, key=3, label="method methodReturn object CreateValueProperty", style=bold];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_6  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m6_94 -> m6_753  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_94 -> m6_511  [color=darkorchid, key=3, label="Parameter variable bool gottenCurrentValue", style=bold];
m6_94 -> m6_755  [color=darkorchid, key=3, label="Parameter variable bool gottenCurrentValue", style=bold];
m6_988 -> m6_989  [key=0, style=solid];
m6_988 -> m6_1063  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m6_989 -> m6_94  [color=blue, key=0, style=bold];
m6_55 -> m6_58  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_75  [key=2, style=dotted];
m6_55 -> m6_57  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_346 -> m6_344  [color=blue, key=0, style=bold];
m6_874 -> m6_875  [key=0, style=solid];
m6_874 -> m6_879  [key=0, style=solid];
m6_875 -> m6_70  [key=2, style=dotted];
m6_875 -> m6_876  [key=0, style=solid];
m6_875 -> m6_74  [key=2, style=dotted];
m6_875 -> m6_75  [key=2, style=dotted];
m6_875 -> m6_736  [key=2, style=dotted];
m6_875 -> m6_847  [key=2, style=dotted];
m6_875 -> m6_878  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_875 -> m6_880  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_875 -> m6_882  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_875 -> m6_884  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_875 -> m6_888  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_875 -> m6_877  [key=0, style=solid];
m6_890 -> m6_110  [key=2, style=dotted];
m6_890 -> m6_891  [key=0, style=solid];
m6_890 -> m6_892  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_877 -> m6_30  [key=2, style=dotted];
m6_877 -> m6_878  [key=0, style=solid];
m6_877 -> m6_899  [key=2, style=dotted];
m6_879 -> m6_30  [key=2, style=dotted];
m6_879 -> m6_880  [key=0, style=solid];
m6_879 -> m6_886  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m6_879 -> m6_887  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m6_881 -> m6_30  [key=2, style=dotted];
m6_881 -> m6_882  [key=0, style=solid];
m6_881 -> m6_885  [key=0, style=solid];
m6_883 -> m6_30  [key=2, style=dotted];
m6_883 -> m6_884  [key=0, style=solid];
m6_883 -> m6_900  [key=2, style=dotted];
m6_883 -> m6_892  [color=darkseagreen4, key=1, label=chars, style=dashed];
m6_883 -> m6_894  [color=darkseagreen4, key=1, label=chars, style=dashed];
m6_885 -> m6_30  [key=2, style=dotted];
m6_885 -> m6_886  [key=0, style=solid];
m6_885 -> m6_890  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_885 -> m6_894  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m6_887 -> m6_30  [key=2, style=dotted];
m6_887 -> m6_888  [key=0, style=solid];
m6_887 -> m6_889  [key=0, style=solid];
m6_887 -> m6_903  [key=2, style=dotted];
m6_889 -> m6_30  [key=2, style=dotted];
m6_889 -> m6_890  [key=0, style=solid];
m6_889 -> m6_847  [key=0, style=solid];
m6_889 -> m6_889  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_891 -> m6_30  [key=2, style=dotted];
m6_891 -> m6_892  [key=0, style=solid];
m6_891 -> m6_895  [key=0, style=solid];
m6_891 -> m6_903  [key=2, style=dotted];
m6_892 -> m6_30  [key=2, style=dotted];
m6_892 -> m6_893  [key=0, style=solid];
m6_892 -> m6_894  [key=0, style=solid];
m6_876 -> m6_877  [key=0, style=solid];
m6_876 -> m6_894  [key=2, style=dotted];
m6_876 -> m6_888  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m6_878 -> m6_879  [key=0, style=solid];
m6_878 -> m6_894  [key=2, style=dotted];
m6_878 -> m6_880  [key=0, style=solid];
m6_878 -> m6_886  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m6_878 -> m6_887  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m6_880 -> m6_881  [key=0, style=solid];
m6_880 -> m6_894  [key=2, style=dotted];
m6_880 -> m6_847  [key=0, style=solid];
m6_882 -> m6_883  [key=0, style=solid];
m6_882 -> m6_894  [key=2, style=dotted];
m6_882 -> m6_884  [key=0, style=solid];
m6_884 -> m6_885  [key=0, style=solid];
m6_884 -> m6_894  [key=2, style=dotted];
m6_884 -> m6_886  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_884 -> m6_901  [key=2, style=dotted];
m6_888 -> m6_889  [key=0, style=solid];
m6_888 -> m6_894  [key=2, style=dotted];
m6_888 -> m6_904  [key=2, style=dotted];
m6_886 -> m6_887  [key=0, style=solid];
m6_886 -> m6_886  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_886 -> m6_848  [key=2, style=dotted];
m6_886 -> m6_888  [key=0, style=solid];
m6_886 -> m6_902  [key=2, style=dotted];
m6_893 -> m6_874  [color=blue, key=0, style=bold];
m6_893 -> m6_894  [key=0, style=solid];
m6_893 -> m6_900  [key=2, style=dotted];
m6_530 -> m6_531  [key=0, style=solid];
m6_530 -> m6_35  [key=2, style=dotted];
m6_530 -> m6_36  [key=2, style=dotted];
m6_530 -> m6_256  [key=2, style=dotted];
m6_531 -> m6_532  [key=0, style=solid];
m6_531 -> m6_67  [key=2, style=dotted];
m6_531 -> m6_546  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_531 -> m6_547  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_531 -> m6_255  [key=2, style=dotted];
m6_531 -> m6_35  [key=2, style=dotted];
m6_531 -> m6_36  [key=2, style=dotted];
m6_532 -> m6_533  [key=0, style=solid];
m6_532 -> m6_68  [key=2, style=dotted];
m6_532 -> m6_32  [key=2, style=dotted];
m6_532 -> m6_35  [key=2, style=dotted];
m6_532 -> m6_36  [key=2, style=dotted];
m6_546 -> m6_547  [key=0, style=solid];
m6_546 -> m6_70  [key=2, style=dotted];
m6_546 -> m6_36  [key=2, style=dotted];
m6_546 -> m6_35  [key=2, style=dotted];
m6_546 -> m6_252  [key=2, style=dotted];
m6_547 -> m6_548  [key=0, style=solid];
m6_547 -> m6_70  [key=2, style=dotted];
m6_547 -> m6_251  [key=2, style=dotted];
m6_547 -> m6_35  [key=2, style=dotted];
m6_547 -> m6_252  [key=2, style=dotted];
m6_547 -> m6_557  [key=2, style=dotted];
m6_533 -> m6_534  [key=0, style=solid];
m6_533 -> m6_29  [key=2, style=dotted];
m6_533 -> m6_535  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_536  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_537  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_538  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_539  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_540  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_541  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_542  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_543  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_544  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_545  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_533 -> m6_35  [key=2, style=dotted];
m6_533 -> m6_36  [key=2, style=dotted];
m6_533 -> m6_257  [key=2, style=dotted];
m6_534 -> m6_535  [key=0, style=solid];
m6_534 -> m6_120  [key=2, style=dotted];
m6_534 -> m6_35  [key=2, style=dotted];
m6_534 -> m6_36  [key=2, style=dotted];
m6_534 -> m6_257  [key=2, style=dotted];
m6_535 -> m6_536  [key=0, style=solid];
m6_535 -> m6_124  [key=2, style=dotted];
m6_535 -> m6_35  [key=2, style=dotted];
m6_535 -> m6_36  [key=2, style=dotted];
m6_535 -> m6_258  [key=2, style=dotted];
m6_536 -> m6_537  [key=0, style=solid];
m6_536 -> m6_124  [key=2, style=dotted];
m6_536 -> m6_5  [color=darkorchid, key=3, label="Local variable object newObject", style=bold];
m6_536 -> m6_35  [key=2, style=dotted];
m6_536 -> m6_252  [key=2, style=dotted];
m6_536 -> m6_36  [key=2, style=dotted];
m6_537 -> m6_538  [key=0, style=solid];
m6_537 -> m6_124  [key=2, style=dotted];
m6_537 -> m6_259  [key=2, style=dotted];
m6_537 -> m6_35  [key=2, style=dotted];
m6_537 -> m6_36  [key=2, style=dotted];
m6_538 -> m6_539  [key=0, style=solid];
m6_538 -> m6_124  [key=2, style=dotted];
m6_538 -> m6_259  [key=2, style=dotted];
m6_538 -> m6_35  [key=2, style=dotted];
m6_538 -> m6_36  [key=2, style=dotted];
m6_539 -> m6_540  [key=0, style=solid];
m6_539 -> m6_549  [key=2, style=dotted];
m6_539 -> m6_259  [key=2, style=dotted];
m6_539 -> m6_35  [key=2, style=dotted];
m6_539 -> m6_36  [key=2, style=dotted];
m6_540 -> m6_541  [key=0, style=solid];
m6_540 -> m6_550  [key=2, style=dotted];
m6_540 -> m6_35  [key=2, style=dotted];
m6_540 -> m6_36  [key=2, style=dotted];
m6_540 -> m6_256  [key=2, style=dotted];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_549  [key=2, style=dotted];
m6_541 -> m6_255  [key=2, style=dotted];
m6_541 -> m6_35  [key=2, style=dotted];
m6_541 -> m6_36  [key=2, style=dotted];
m6_542 -> m6_543  [key=0, style=solid];
m6_542 -> m6_549  [key=2, style=dotted];
m6_542 -> m6_35  [key=2, style=dotted];
m6_542 -> m6_36  [key=2, style=dotted];
m6_542 -> m6_254  [key=2, style=dotted];
m6_543 -> m6_544  [key=0, style=solid];
m6_543 -> m6_550  [key=2, style=dotted];
m6_543 -> m6_253  [key=2, style=dotted];
m6_543 -> m6_35  [key=2, style=dotted];
m6_543 -> m6_557  [key=2, style=dotted];
m6_544 -> m6_545  [key=0, style=solid];
m6_544 -> m6_550  [key=2, style=dotted];
m6_544 -> m6_35  [key=2, style=dotted];
m6_544 -> m6_254  [key=2, style=dotted];
m6_544 -> m6_557  [key=2, style=dotted];
m6_545 -> m6_546  [key=0, style=solid];
m6_545 -> m6_130  [key=2, style=dotted];
m6_545 -> m6_547  [color=darkseagreen4, key=1, label=emptyData, style=dashed];
m6_548 -> m6_530  [color=blue, key=0, style=bold];
m6_548 -> m6_549  [key=0, style=solid];
m6_548 -> m6_35  [key=2, style=dotted];
m6_548 -> m6_252  [key=2, style=dotted];
m6_548 -> m6_36  [key=2, style=dotted];
m6_548 -> m6_266  [key=2, style=dotted];
m6_771 -> m6_772  [key=0, style=solid];
m6_771 -> m6_29  [key=2, style=dotted];
m6_771 -> m6_773  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_771 -> m6_774  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_771 -> m6_775  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_850 -> m6_851  [key=0, style=solid];
m6_851 -> m6_70  [key=2, style=dotted];
m6_851 -> m6_110  [key=2, style=dotted];
m6_851 -> m6_852  [key=0, style=solid];
m6_851 -> m6_74  [key=2, style=dotted];
m6_851 -> m6_75  [key=2, style=dotted];
m6_851 -> m6_252  [key=2, style=dotted];
m6_851 -> m6_266  [key=2, style=dotted];
m6_851 -> m6_76  [key=2, style=dotted];
m6_851 -> m6_847  [key=2, style=dotted];
m6_851 -> m6_854  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_851 -> m6_856  [key=0, style=solid];
m6_851 -> m6_858  [key=0, style=solid];
m6_851 -> m6_860  [key=0, style=solid];
m6_851 -> m6_862  [key=0, style=solid];
m6_851 -> m6_864  [key=0, style=solid];
m6_851 -> m6_866  [key=0, style=solid];
m6_851 -> m6_868  [key=0, style=solid];
m6_851 -> m6_870  [key=0, style=solid];
m6_851 -> m6_872  [key=0, style=solid];
m6_851 -> m6_874  [key=0, style=solid];
m6_852 -> m6_853  [key=0, style=solid];
m6_854 -> m6_36  [key=2, style=dotted];
m6_854 -> m6_855  [key=0, style=solid];
m6_854 -> m6_849  [key=2, style=dotted];
m6_853 -> m6_854  [key=0, style=solid];
m6_853 -> m6_856  [key=2, style=dotted];
m6_853 -> m6_880  [key=0, style=solid];
m6_855 -> m6_850  [color=blue, key=0, style=bold];
m6_855 -> m6_880  [key=0, style=solid];
m6_176 -> m6_30  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_923 -> m6_980  [key=0, style=solid];
m6_980 -> m6_981  [key=0, style=solid];
m6_980 -> m6_970  [key=2, style=dotted];
m6_981 -> m6_923  [color=blue, key=0, style=bold];
m6_752 -> m6_753  [key=0, style=solid];
m6_753 -> m6_70  [key=2, style=dotted];
m6_753 -> m6_110  [key=2, style=dotted];
m6_753 -> m6_754  [key=0, style=solid];
m6_753 -> m6_756  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_753 -> m6_757  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_753 -> m6_93  [key=2, style=dotted];
m6_755 -> m6_30  [key=2, style=dotted];
m6_755 -> m6_756  [key=0, style=solid];
m6_755 -> m6_761  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m6_755 -> m6_764  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m6_757 -> m6_30  [key=2, style=dotted];
m6_757 -> m6_81  [key=2, style=dotted];
m6_757 -> m6_758  [key=0, style=solid];
m6_757 -> m6_96  [key=2, style=dotted];
m6_757 -> m6_759  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_757 -> m6_760  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_754 -> m6_755  [key=0, style=solid];
m6_754 -> m6_758  [color=darkseagreen4, key=1, label=first, style=dashed];
m6_754 -> m6_759  [color=darkseagreen4, key=1, label=first, style=dashed];
m6_754 -> m6_29  [key=2, style=dotted];
m6_754 -> m6_756  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_756 -> m6_757  [key=0, style=solid];
m6_756 -> m6_761  [key=2, style=dotted];
m6_756 -> m6_34  [key=2, style=dotted];
m6_758 -> m6_93  [key=2, style=dotted];
m6_758 -> m6_759  [key=0, style=solid];
m6_758 -> m6_37  [key=2, style=dotted];
m6_759 -> m6_93  [key=2, style=dotted];
m6_759 -> m6_760  [key=0, style=solid];
m6_759 -> m6_37  [key=2, style=dotted];
m6_760 -> m6_752  [color=blue, key=0, style=bold];
m6_760 -> m6_761  [key=0, style=solid];
m6_760 -> m6_470  [key=2, style=dotted];
m6_760 -> m6_471  [key=2, style=dotted];
m6_586 -> m6_587  [key=0, style=solid];
m6_586 -> m6_29  [key=2, style=dotted];
m6_586 -> m6_588  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_586 -> m6_589  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_586 -> m6_590  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_50  [key=2, style=dotted];
m6_39 -> m6_46  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_51  [key=2, style=dotted];
m6_40 -> m6_52  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_54  [key=2, style=dotted];
m6_46 -> m6_6  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m6_46 -> m6_49  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_29  [key=2, style=dotted];
m6_41 -> m6_43  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_41 -> m6_44  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_41 -> m6_45  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_41 -> m6_5  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m6_41 -> m6_116  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m6_41 -> m6_27  [key=2, style=dotted];
m6_41 -> m6_28  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_30  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_31  [key=2, style=dotted];
m6_43 -> m6_40  [color=blue, key=0, style=bold];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_35  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_55  [key=2, style=dotted];
m6_47 -> m6_30  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_37  [key=2, style=dotted];
m6_48 -> m6_45  [color=blue, key=0, style=bold];
m6_49 -> m6_38  [color=blue, key=0, style=bold];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_70  [key=2, style=dotted];
m6_87 -> m6_35  [key=2, style=dotted];
m6_87 -> m6_36  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_93  [key=2, style=dotted];
m6_88 -> m6_91  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_88 -> m6_88  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_88 -> m6_90  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_29  [key=2, style=dotted];
m6_89 -> m6_70  [key=2, style=dotted];
m6_89 -> m6_35  [key=2, style=dotted];
m6_89 -> m6_36  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_96  [key=2, style=dotted];
m6_91 -> m6_37  [key=2, style=dotted];
m6_91 -> m6_93  [key=2, style=dotted];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_94  [key=2, style=dotted];
m6_90 -> m6_95  [key=2, style=dotted];
m6_90 -> m6_90  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_92 -> m6_87  [color=blue, key=0, style=bold];
m6_92 -> m6_82  [color=blue, key=0, style=bold];
m6_920 -> m6_977  [key=0, style=solid];
m6_977 -> m6_978  [key=0, style=solid];
m6_977 -> m6_970  [key=2, style=dotted];
m6_978 -> m6_979  [key=0, style=solid];
m6_978 -> m6_903  [key=2, style=dotted];
m6_979 -> m6_920  [color=blue, key=0, style=bold];
m6_183 -> m6_32  [key=2, style=dotted];
m6_183 -> m6_30  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_432 -> m6_433  [key=0, style=solid];
m6_804 -> m6_805  [key=0, style=solid];
m6_805 -> m6_806  [key=0, style=solid];
m6_805 -> m6_820  [key=2, style=dotted];
m6_805 -> m6_807  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_805 -> m6_812  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_805 -> m6_72  [key=2, style=dotted];
m6_805 -> m6_110  [key=2, style=dotted];
m6_805 -> m6_250  [key=2, style=dotted];
m6_806 -> m6_807  [key=0, style=solid];
m6_806 -> m6_800  [key=2, style=dotted];
m6_806 -> m6_801  [key=2, style=dotted];
m6_807 -> m6_808  [key=0, style=solid];
m6_807 -> m6_30  [key=2, style=dotted];
m6_812 -> m6_813  [key=0, style=solid];
m6_812 -> m6_30  [key=2, style=dotted];
m6_808 -> m6_809  [key=0, style=solid];
m6_808 -> m6_93  [key=2, style=dotted];
m6_808 -> m6_818  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_808 -> m6_804  [color=blue, key=0, style=bold];
m6_809 -> m6_810  [key=0, style=solid];
m6_809 -> m6_29  [key=2, style=dotted];
m6_809 -> m6_811  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_809 -> m6_812  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_809 -> m6_813  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_809 -> m6_814  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_809 -> m6_815  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_809 -> m6_816  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_809 -> m6_817  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_818 -> m6_819  [key=0, style=solid];
m6_818 -> m6_96  [key=2, style=dotted];
m6_818 -> m6_251  [key=2, style=dotted];
m6_818 -> m6_30  [key=2, style=dotted];
m6_810 -> m6_811  [key=0, style=solid];
m6_810 -> m6_70  [key=2, style=dotted];
m6_810 -> m6_110  [key=2, style=dotted];
m6_810 -> m6_812  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_810 -> m6_813  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_810 -> m6_814  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_810 -> m6_815  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_810 -> m6_816  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_810 -> m6_817  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_810 -> m6_818  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_811 -> m6_812  [key=0, style=solid];
m6_811 -> m6_820  [key=2, style=dotted];
m6_813 -> m6_814  [key=0, style=solid];
m6_813 -> m6_30  [key=2, style=dotted];
m6_813 -> m6_81  [key=2, style=dotted];
m6_814 -> m6_815  [key=0, style=solid];
m6_814 -> m6_171  [key=2, style=dotted];
m6_814 -> m6_30  [key=2, style=dotted];
m6_815 -> m6_816  [key=0, style=solid];
m6_815 -> m6_32  [key=2, style=dotted];
m6_815 -> m6_33  [key=2, style=dotted];
m6_815 -> m6_30  [key=2, style=dotted];
m6_815 -> m6_81  [key=2, style=dotted];
m6_816 -> m6_817  [key=0, style=solid];
m6_816 -> m6_799  [key=2, style=dotted];
m6_816 -> m6_800  [key=2, style=dotted];
m6_816 -> m6_820  [key=2, style=dotted];
m6_817 -> m6_818  [key=0, style=solid];
m6_817 -> m6_297  [key=2, style=dotted];
m6_817 -> m6_30  [key=2, style=dotted];
m6_819 -> m6_804  [color=blue, key=0, style=bold];
m6_819 -> m6_809  [color=blue, key=0, style=bold];
m6_1058 -> m6_1059  [key=0, style=solid];
m6_1059 -> m6_1060  [key=0, style=solid];
m6_1059 -> m6_996  [key=2, style=dotted];
m6_1060 -> m6_1058  [color=blue, key=0, style=bold];
m6_762 -> m6_763  [color=green, key=0, style=solid];
m6_762 -> m6_93  [key=2, style=dotted];
m6_762 -> m6_765  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_763 -> m6_764  [color=green, key=0, style=solid];
m6_763 -> m6_321  [color=green, key=2, style=dotted];
m6_763 -> m6_765  [color=green, key=1, label="lambda expression", style=dashed];
m6_763 -> m6_29  [key=2, style=dotted];
m6_764 -> m6_762  [color=blue, key=0, style=bold];
m6_764 -> m6_765  [key=0, style=solid];
m6_764 -> m6_34  [key=2, style=dotted];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_122  [key=2, style=dotted];
m6_113 -> m6_70  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_115  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_113 -> m6_128  [key=2, style=dotted];
m6_114 -> m6_30  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_129  [key=2, style=dotted];
m6_115 -> m6_30  [key=2, style=dotted];
m6_115 -> m6_81  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_117  [key=2, style=dotted];
m6_115 -> m6_130  [key=2, style=dotted];
m6_116 -> m6_112  [color=blue, key=0, style=bold];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_118  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_116 -> m6_41  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m6_116 -> m6_390  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_116 -> m6_440  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_116 -> m6_522  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m6_116 -> m6_133  [color=darkorchid, key=3, label="method methodReturn object CreateValueNonProperty", style=bold];
m6_186 -> m6_253  [key=2, style=dotted];
m6_186 -> m6_30  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_847 -> m6_848  [key=0, style=solid];
m6_847 -> m6_890  [key=0, style=solid];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_251  [key=2, style=dotted];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_70  [key=2, style=dotted];
m6_1038 -> m6_1039  [key=0, style=solid];
m6_1039 -> m6_1040  [key=0, style=solid];
m6_1039 -> m6_996  [key=2, style=dotted];
m6_1040 -> m6_1038  [color=blue, key=0, style=bold];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_50  [key=2, style=dotted];
m6_72 -> m6_74  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_72 -> m6_76  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_375 -> m6_376  [key=0, style=solid];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_67  [key=2, style=dotted];
m6_376 -> m6_391  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_376 -> m6_32  [key=2, style=dotted];
m6_377 -> m6_378  [key=0, style=solid];
m6_377 -> m6_68  [key=2, style=dotted];
m6_377 -> m6_375  [color=blue, key=0, style=bold];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_70  [key=2, style=dotted];
m6_391 -> m6_72  [key=2, style=dotted];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_29  [key=2, style=dotted];
m6_378 -> m6_380  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_381  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_382  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_383  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_384  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_385  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_386  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_387  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_388  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_389  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_378 -> m6_201  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_378 -> m6_269  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m6_378 -> m6_212  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m6_379 -> m6_380  [key=0, style=solid];
m6_379 -> m6_255  [key=2, style=dotted];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_378  [color=blue, key=0, style=bold];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_120  [key=2, style=dotted];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_125  [key=2, style=dotted];
m6_382 -> m6_259  [key=2, style=dotted];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_125  [key=2, style=dotted];
m6_383 -> m6_381  [color=blue, key=0, style=bold];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_125  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_346  [key=2, style=dotted];
m6_385 -> m6_254  [key=2, style=dotted];
m6_386 -> m6_387  [key=0, style=solid];
m6_386 -> m6_346  [key=2, style=dotted];
m6_386 -> m6_384  [color=blue, key=0, style=bold];
m6_387 -> m6_388  [key=0, style=solid];
m6_387 -> m6_346  [key=2, style=dotted];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_130  [key=2, style=dotted];
m6_388 -> m6_262  [key=2, style=dotted];
m6_388 -> m6_347  [key=2, style=dotted];
m6_389 -> m6_390  [key=0, style=solid];
m6_389 -> m6_347  [key=2, style=dotted];
m6_389 -> m6_387  [color=blue, key=0, style=bold];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_392  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_390 -> m6_386  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.IWrappedDictionary dictionary", style=bold];
m6_390 -> m6_201  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_390 -> m6_378  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m6_390 -> m6_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m6_390 -> m6_269  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m6_390 -> m6_10  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m6_390 -> m6_212  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m6_392 -> m6_393  [key=0, style=solid];
m6_392 -> m6_251  [key=2, style=dotted];
m6_392 -> m6_390  [color=blue, key=0, style=bold];
m6_393 -> m6_375  [color=blue, key=0, style=bold];
m6_393 -> m6_394  [key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_98  [color=darkseagreen4, key=1, label=previous, style=dashed];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_249  [key=2, style=dotted];
m6_1024 -> m6_1025  [key=0, style=solid];
m6_1025 -> m6_1026  [key=0, style=solid];
m6_1025 -> m6_996  [key=2, style=dotted];
m6_1026 -> m6_1024  [color=blue, key=0, style=bold];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_122  [key=2, style=dotted];
m6_1021 -> m6_1022  [key=0, style=solid];
m6_1022 -> m6_1023  [key=0, style=solid];
m6_1022 -> m6_996  [key=2, style=dotted];
m6_1023 -> m6_1021  [color=blue, key=0, style=bold];
m6_456 -> m6_457  [key=0, style=solid];
m6_456 -> m6_297  [key=2, style=dotted];
m6_475 -> m6_106  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m6_475 -> m6_32  [key=2, style=dotted];
m6_475 -> m6_475  [color=darkorchid, key=3, label="method methodReturn object EnsureType", style=bold];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_500  [key=2, style=dotted];
m6_475 -> m6_30  [key=2, style=dotted];
m6_475 -> m6_67  [key=2, style=dotted];
m6_475 -> m6_486  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_466 -> m6_168  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m6_466 -> m6_32  [key=2, style=dotted];
m6_466 -> m6_467  [key=0, style=solid];
m6_466 -> m6_500  [key=2, style=dotted];
m6_466 -> m6_30  [key=2, style=dotted];
m6_466 -> m6_29  [key=2, style=dotted];
m6_493 -> m6_262  [key=2, style=dotted];
m6_493 -> m6_30  [key=2, style=dotted];
m6_493 -> m6_494  [key=0, style=solid];
m6_493 -> m6_263  [key=2, style=dotted];
m6_493 -> m6_500  [key=2, style=dotted];
m6_493 -> m6_248  [key=2, style=dotted];
m6_494 -> m6_262  [key=2, style=dotted];
m6_494 -> m6_30  [key=2, style=dotted];
m6_494 -> m6_495  [key=0, style=solid];
m6_494 -> m6_263  [key=2, style=dotted];
m6_494 -> m6_500  [key=2, style=dotted];
m6_494 -> m6_249  [key=2, style=dotted];
m6_482 -> m6_253  [key=2, style=dotted];
m6_482 -> m6_30  [key=2, style=dotted];
m6_482 -> m6_483  [key=0, style=solid];
m6_482 -> m6_500  [key=2, style=dotted];
m6_482 -> m6_249  [key=2, style=dotted];
m6_483 -> m6_253  [key=2, style=dotted];
m6_483 -> m6_30  [key=2, style=dotted];
m6_483 -> m6_484  [key=0, style=solid];
m6_483 -> m6_500  [key=2, style=dotted];
m6_483 -> m6_488  [key=2, style=dotted];
m6_457 -> m6_32  [key=2, style=dotted];
m6_457 -> m6_30  [key=2, style=dotted];
m6_457 -> m6_458  [key=0, style=solid];
m6_457 -> m6_500  [key=2, style=dotted];
m6_457 -> m6_459  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_458 -> m6_32  [key=2, style=dotted];
m6_458 -> m6_30  [key=2, style=dotted];
m6_458 -> m6_459  [key=0, style=solid];
m6_458 -> m6_500  [key=2, style=dotted];
m6_458 -> m6_70  [key=2, style=dotted];
m6_460 -> m6_32  [key=2, style=dotted];
m6_460 -> m6_30  [key=2, style=dotted];
m6_460 -> m6_461  [key=0, style=solid];
m6_460 -> m6_500  [key=2, style=dotted];
m6_460 -> m6_449  [color=blue, key=0, style=bold];
m6_461 -> m6_32  [key=2, style=dotted];
m6_461 -> m6_30  [key=2, style=dotted];
m6_461 -> m6_462  [key=0, style=solid];
m6_461 -> m6_500  [key=2, style=dotted];
m6_462 -> m6_32  [key=2, style=dotted];
m6_462 -> m6_30  [key=2, style=dotted];
m6_462 -> m6_463  [key=0, style=solid];
m6_462 -> m6_500  [key=2, style=dotted];
m6_462 -> m6_470  [key=2, style=dotted];
m6_462 -> m6_471  [key=2, style=dotted];
m6_462 -> m6_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_462 -> m6_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_463 -> m6_32  [key=2, style=dotted];
m6_463 -> m6_30  [key=2, style=dotted];
m6_463 -> m6_464  [key=0, style=solid];
m6_463 -> m6_500  [key=2, style=dotted];
m6_463 -> m6_472  [key=2, style=dotted];
m6_464 -> m6_32  [key=2, style=dotted];
m6_464 -> m6_30  [key=2, style=dotted];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_500  [key=2, style=dotted];
m6_464 -> m6_472  [key=2, style=dotted];
m6_465 -> m6_32  [key=2, style=dotted];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_30  [key=2, style=dotted];
m6_465 -> m6_500  [key=2, style=dotted];
m6_465 -> m6_93  [key=2, style=dotted];
m6_465 -> m6_468  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_467 -> m6_32  [key=2, style=dotted];
m6_467 -> m6_30  [key=2, style=dotted];
m6_467 -> m6_468  [key=0, style=solid];
m6_467 -> m6_500  [key=2, style=dotted];
m6_467 -> m6_473  [key=2, style=dotted];
m6_468 -> m6_32  [key=2, style=dotted];
m6_468 -> m6_30  [key=2, style=dotted];
m6_468 -> m6_469  [key=0, style=solid];
m6_468 -> m6_500  [key=2, style=dotted];
m6_468 -> m6_96  [key=2, style=dotted];
m6_468 -> m6_37  [key=2, style=dotted];
m6_469 -> m6_32  [key=2, style=dotted];
m6_469 -> m6_30  [key=2, style=dotted];
m6_469 -> m6_470  [key=0, style=solid];
m6_469 -> m6_500  [key=2, style=dotted];
m6_469 -> m6_461  [color=blue, key=0, style=bold];
m6_470 -> m6_32  [key=2, style=dotted];
m6_470 -> m6_30  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_500  [key=2, style=dotted];
m6_471 -> m6_32  [key=2, style=dotted];
m6_471 -> m6_30  [key=2, style=dotted];
m6_471 -> m6_472  [key=0, style=solid];
m6_471 -> m6_500  [key=2, style=dotted];
m6_473 -> m6_32  [key=2, style=dotted];
m6_473 -> m6_30  [key=2, style=dotted];
m6_473 -> m6_474  [key=0, style=solid];
m6_473 -> m6_500  [key=2, style=dotted];
m6_474 -> m6_32  [key=2, style=dotted];
m6_474 -> m6_475  [key=0, style=solid];
m6_474 -> m6_30  [key=2, style=dotted];
m6_474 -> m6_500  [key=2, style=dotted];
m6_480 -> m6_32  [key=2, style=dotted];
m6_480 -> m6_30  [key=2, style=dotted];
m6_480 -> m6_481  [key=0, style=solid];
m6_480 -> m6_500  [key=2, style=dotted];
m6_480 -> m6_248  [key=2, style=dotted];
m6_481 -> m6_32  [key=2, style=dotted];
m6_481 -> m6_30  [key=2, style=dotted];
m6_481 -> m6_482  [key=0, style=solid];
m6_481 -> m6_500  [key=2, style=dotted];
m6_481 -> m6_485  [key=0, style=solid];
m6_476 -> m6_255  [key=2, style=dotted];
m6_476 -> m6_30  [key=2, style=dotted];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_500  [key=2, style=dotted];
m6_476 -> m6_68  [key=2, style=dotted];
m6_477 -> m6_255  [key=2, style=dotted];
m6_477 -> m6_30  [key=2, style=dotted];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_500  [key=2, style=dotted];
m6_477 -> m6_29  [key=2, style=dotted];
m6_477 -> m6_480  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_477 -> m6_482  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_477 -> m6_483  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_477 -> m6_485  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_478 -> m6_255  [key=2, style=dotted];
m6_478 -> m6_30  [key=2, style=dotted];
m6_478 -> m6_479  [key=0, style=solid];
m6_478 -> m6_500  [key=2, style=dotted];
m6_478 -> m6_481  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_478 -> m6_482  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_478 -> m6_484  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_479 -> m6_255  [key=2, style=dotted];
m6_479 -> m6_30  [key=2, style=dotted];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_500  [key=2, style=dotted];
m6_479 -> m6_483  [color=darkseagreen4, key=1, label=rawJson, style=dashed];
m6_486 -> m6_261  [key=2, style=dotted];
m6_486 -> m6_30  [key=2, style=dotted];
m6_486 -> m6_487  [key=0, style=solid];
m6_486 -> m6_500  [key=2, style=dotted];
m6_486 -> m6_70  [key=2, style=dotted];
m6_486 -> m6_37  [key=2, style=dotted];
m6_487 -> m6_261  [key=2, style=dotted];
m6_487 -> m6_30  [key=2, style=dotted];
m6_487 -> m6_488  [key=0, style=solid];
m6_487 -> m6_500  [key=2, style=dotted];
m6_487 -> m6_474  [color=blue, key=0, style=bold];
m6_489 -> m6_72  [key=2, style=dotted];
m6_489 -> m6_30  [key=2, style=dotted];
m6_489 -> m6_490  [key=0, style=solid];
m6_489 -> m6_500  [key=2, style=dotted];
m6_490 -> m6_251  [key=2, style=dotted];
m6_490 -> m6_30  [key=2, style=dotted];
m6_490 -> m6_491  [key=0, style=solid];
m6_490 -> m6_500  [key=2, style=dotted];
m6_490 -> m6_67  [key=2, style=dotted];
m6_490 -> m6_502  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_491 -> m6_251  [key=2, style=dotted];
m6_491 -> m6_30  [key=2, style=dotted];
m6_491 -> m6_492  [key=0, style=solid];
m6_491 -> m6_500  [key=2, style=dotted];
m6_491 -> m6_68  [key=2, style=dotted];
m6_497 -> m6_475  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_497 -> m6_30  [key=2, style=dotted];
m6_497 -> m6_498  [key=0, style=solid];
m6_497 -> m6_258  [key=2, style=dotted];
m6_497 -> m6_500  [key=2, style=dotted];
m6_497 -> m6_249  [key=2, style=dotted];
m6_459 -> m6_30  [key=2, style=dotted];
m6_459 -> m6_460  [key=0, style=solid];
m6_459 -> m6_500  [key=2, style=dotted];
m6_459 -> m6_254  [key=2, style=dotted];
m6_459 -> m6_37  [key=2, style=dotted];
m6_484 -> m6_30  [key=2, style=dotted];
m6_484 -> m6_500  [key=2, style=dotted];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> m6_501  [key=2, style=dotted];
m6_484 -> m6_481  [key=0, style=solid];
m6_484 -> m6_484  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_485 -> m6_30  [key=2, style=dotted];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_500  [key=2, style=dotted];
m6_485 -> m6_501  [key=2, style=dotted];
m6_485 -> m6_35  [key=2, style=dotted];
m6_492 -> m6_30  [key=2, style=dotted];
m6_492 -> m6_493  [key=0, style=solid];
m6_492 -> m6_500  [key=2, style=dotted];
m6_492 -> m6_258  [key=2, style=dotted];
m6_492 -> m6_29  [key=2, style=dotted];
m6_492 -> m6_494  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_492 -> m6_495  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_492 -> m6_496  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_492 -> m6_497  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_492 -> m6_498  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_492 -> m6_499  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_492 -> m6_501  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_495 -> m6_30  [key=2, style=dotted];
m6_495 -> m6_500  [key=2, style=dotted];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_265  [key=2, style=dotted];
m6_495 -> m6_264  [key=2, style=dotted];
m6_495 -> m6_504  [key=2, style=dotted];
m6_496 -> m6_30  [key=2, style=dotted];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_500  [key=2, style=dotted];
m6_496 -> m6_258  [key=2, style=dotted];
m6_496 -> m6_248  [key=2, style=dotted];
m6_496 -> m6_5  [color=darkorchid, key=3, label="Local variable System.Dynamic.IDynamicMetaObjectProvider newObject", style=bold];
m6_498 -> m6_30  [key=2, style=dotted];
m6_498 -> m6_500  [key=2, style=dotted];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_254  [key=2, style=dotted];
m6_498 -> m6_122  [key=2, style=dotted];
m6_499 -> m6_456  [color=blue, key=0, style=bold];
m6_499 -> m6_500  [key=0, style=solid];
m6_499 -> m6_35  [key=2, style=dotted];
m6_558 -> m6_559  [key=0, style=solid];
m6_558 -> m6_565  [key=2, style=dotted];
m6_559 -> m6_70  [key=2, style=dotted];
m6_559 -> m6_510  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m6_559 -> m6_549  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_559 -> m6_560  [key=0, style=solid];
m6_559 -> m6_561  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_559 -> m6_562  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_559 -> m6_755  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m6_559 -> m6_565  [key=2, style=dotted];
m6_560 -> m6_30  [key=2, style=dotted];
m6_560 -> m6_561  [key=0, style=solid];
m6_560 -> m6_564  [key=2, style=dotted];
m6_561 -> m6_30  [key=2, style=dotted];
m6_561 -> m6_562  [key=0, style=solid];
m6_561 -> m6_564  [key=2, style=dotted];
m6_562 -> m6_30  [key=2, style=dotted];
m6_562 -> m6_563  [key=0, style=solid];
m6_562 -> m6_70  [key=2, style=dotted];
m6_562 -> m6_37  [key=2, style=dotted];
m6_563 -> m6_558  [color=blue, key=0, style=bold];
m6_563 -> m6_551  [color=blue, key=0, style=bold];
m6_74 -> m6_94  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_74 -> m6_6  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m6_74 -> m6_23  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe", style=bold];
m6_74 -> m6_687  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_84  [key=2, style=dotted];
m6_645 -> m6_646  [key=0, style=solid];
m6_645 -> m6_55  [key=2, style=dotted];
m6_645 -> m6_37  [key=2, style=dotted];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_250  [key=2, style=dotted];
m6_736 -> m6_737  [key=0, style=solid];
m6_736 -> m6_93  [key=2, style=dotted];
m6_736 -> m6_739  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_1006 -> m6_1007  [key=0, style=solid];
m6_1007 -> m6_1008  [key=0, style=solid];
m6_1007 -> m6_996  [key=2, style=dotted];
m6_1008 -> m6_1006  [color=blue, key=0, style=bold];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_5  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m6_212 -> m6_30  [key=2, style=dotted];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_67  [key=2, style=dotted];
m6_213 -> m6_223  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_213 -> m6_30  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_68  [key=2, style=dotted];
m6_214 -> m6_30  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_70  [key=2, style=dotted];
m6_223 -> m6_30  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_29  [key=2, style=dotted];
m6_215 -> m6_217  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_215 -> m6_218  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_215 -> m6_219  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_215 -> m6_220  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_215 -> m6_221  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_215 -> m6_30  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_120  [key=2, style=dotted];
m6_216 -> m6_30  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_122  [key=2, style=dotted];
m6_217 -> m6_30  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_122  [key=2, style=dotted];
m6_218 -> m6_30  [key=2, style=dotted];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_122  [key=2, style=dotted];
m6_219 -> m6_30  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_122  [key=2, style=dotted];
m6_220 -> m6_30  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_130  [key=2, style=dotted];
m6_221 -> m6_30  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_224  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_222 -> m6_30  [key=2, style=dotted];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_37  [key=2, style=dotted];
m6_224 -> m6_30  [key=2, style=dotted];
m6_225 -> m6_212  [color=blue, key=0, style=bold];
m6_225 -> m6_30  [key=2, style=dotted];
m6_225 -> m6_226  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_85  [key=2, style=dotted];
m6_659 -> m6_660  [key=0, style=solid];
m6_659 -> m6_171  [key=2, style=dotted];
m6_449 -> m6_450  [key=0, style=solid];
m6_449 -> m6_447  [color=blue, key=0, style=bold];
m6_450 -> m6_451  [key=0, style=solid];
m6_450 -> m6_67  [key=2, style=dotted];
m6_450 -> m6_458  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_451 -> m6_452  [key=0, style=solid];
m6_451 -> m6_68  [key=2, style=dotted];
m6_451 -> m6_272  [key=2, style=dotted];
m6_451 -> m6_258  [key=2, style=dotted];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_29  [key=2, style=dotted];
m6_452 -> m6_454  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_452 -> m6_455  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_452 -> m6_456  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_452 -> m6_450  [color=blue, key=0, style=bold];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_116  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_248  [key=2, style=dotted];
m6_454 -> m6_272  [key=2, style=dotted];
m6_454 -> m6_258  [key=2, style=dotted];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_431  [key=2, style=dotted];
m6_455 -> m6_453  [color=blue, key=0, style=bold];
m6_565 -> m6_566  [key=0, style=solid];
m6_549 -> m6_261  [key=2, style=dotted];
m6_549 -> m6_94  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_260  [key=2, style=dotted];
m6_549 -> m6_35  [key=2, style=dotted];
m6_549 -> m6_36  [key=2, style=dotted];
m6_550 -> m6_551  [key=0, style=solid];
m6_550 -> m6_35  [key=2, style=dotted];
m6_550 -> m6_36  [key=2, style=dotted];
m6_550 -> m6_254  [key=2, style=dotted];
m6_1046 -> m6_1048  [key=0, style=solid];
m6_1048 -> m6_1049  [key=0, style=solid];
m6_1049 -> m6_1046  [color=blue, key=0, style=bold];
m6_685 -> m6_686  [key=0, style=solid];
m6_685 -> m6_37  [key=2, style=dotted];
m6_617 -> m6_618  [key=0, style=solid];
m6_617 -> m6_30  [key=2, style=dotted];
m6_605 -> m6_606  [key=0, style=solid];
m6_605 -> m6_29  [key=2, style=dotted];
m6_605 -> m6_607  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_608  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_609  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_610  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_611  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_612  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_613  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_614  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_615  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_616  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_617  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_618  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_619  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_620  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_621  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_622  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_623  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_624  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_625  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_605 -> m6_626  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_606 -> m6_70  [key=2, style=dotted];
m6_606 -> m6_110  [key=2, style=dotted];
m6_606 -> m6_607  [key=0, style=solid];
m6_607 -> m6_36  [key=2, style=dotted];
m6_607 -> m6_608  [key=0, style=solid];
m6_608 -> m6_605  [color=blue, key=0, style=bold];
m6_608 -> m6_609  [key=0, style=solid];
m6_608 -> m6_37  [key=2, style=dotted];
m6_643 -> m6_644  [key=0, style=solid];
m6_643 -> m6_37  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_84  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_84  [key=2, style=dotted];
m6_650 -> m6_651  [key=0, style=solid];
m6_68 -> m6_30  [key=2, style=dotted];
m6_68 -> m6_35  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_649 -> m6_650  [key=0, style=solid];
m6_649 -> m6_651  [color=darkseagreen4, key=1, label=t1, style=dashed];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_248  [key=2, style=dotted];
m6_174 -> m6_253  [key=2, style=dotted];
m6_174 -> m6_30  [key=2, style=dotted];
m6_174 -> m6_175  [key=0, style=solid];
m6_184 -> m6_255  [key=2, style=dotted];
m6_184 -> m6_30  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_182 -> m6_182  [color=darkorchid, key=3, label="Local variable bool useExistingValue", style=bold];
m6_182 -> m6_253  [key=2, style=dotted];
m6_182 -> m6_30  [key=2, style=dotted];
m6_182 -> m6_183  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_30  [key=2, style=dotted];
m6_131 -> m6_252  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_93  [key=2, style=dotted];
m6_132 -> m6_166  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_132 -> m6_30  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_29  [key=2, style=dotted];
m6_133 -> m6_135  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_136  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_137  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_138  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_139  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_140  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_141  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_142  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_143  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_144  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_145  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_146  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_147  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_148  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_149  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_150  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_151  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_152  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_153  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_154  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_155  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_156  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_157  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_158  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_159  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_160  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_161  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_162  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_163  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_164  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_165  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_133 -> m6_116  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_133 -> m6_103  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m6_133 -> m6_102  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_133 -> m6_5  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_133 -> m6_64  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_133 -> m6_201  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_133 -> m6_293  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_133 -> m6_309  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_133 -> m6_30  [key=2, style=dotted];
m6_133 -> m6_252  [key=2, style=dotted];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_96  [key=2, style=dotted];
m6_166 -> m6_169  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_166 -> m6_259  [key=2, style=dotted];
m6_166 -> m6_30  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_171  [key=2, style=dotted];
m6_134 -> m6_30  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_172  [key=2, style=dotted];
m6_135 -> m6_30  [key=2, style=dotted];
m6_135 -> m6_252  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_172  [key=2, style=dotted];
m6_136 -> m6_30  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_173  [key=2, style=dotted];
m6_137 -> m6_30  [key=2, style=dotted];
m6_137 -> m6_252  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_173  [key=2, style=dotted];
m6_138 -> m6_30  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_174  [key=2, style=dotted];
m6_139 -> m6_30  [key=2, style=dotted];
m6_139 -> m6_252  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_174  [key=2, style=dotted];
m6_140 -> m6_30  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_175  [key=2, style=dotted];
m6_141 -> m6_30  [key=2, style=dotted];
m6_141 -> m6_252  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_175  [key=2, style=dotted];
m6_142 -> m6_30  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_176  [key=2, style=dotted];
m6_143 -> m6_30  [key=2, style=dotted];
m6_143 -> m6_252  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_176  [key=2, style=dotted];
m6_144 -> m6_95  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_144 -> m6_6  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter memberConverter", style=bold];
m6_144 -> m6_773  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter memberConverter", style=bold];
m6_144 -> m6_30  [key=2, style=dotted];
m6_144 -> m6_23  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_144 -> m6_146  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonConverter GetConverter", style=bold];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_177  [key=2, style=dotted];
m6_145 -> m6_30  [key=2, style=dotted];
m6_145 -> m6_252  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_177  [key=2, style=dotted];
m6_146 -> m6_6  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_146 -> m6_30  [key=2, style=dotted];
m6_146 -> m6_144  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_146 -> m6_154  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_178  [key=2, style=dotted];
m6_147 -> m6_30  [key=2, style=dotted];
m6_147 -> m6_252  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_178  [key=2, style=dotted];
m6_148 -> m6_30  [key=2, style=dotted];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_179  [key=2, style=dotted];
m6_149 -> m6_30  [key=2, style=dotted];
m6_149 -> m6_252  [key=2, style=dotted];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_179  [key=2, style=dotted];
m6_150 -> m6_30  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_180  [key=2, style=dotted];
m6_151 -> m6_30  [key=2, style=dotted];
m6_151 -> m6_252  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_180  [key=2, style=dotted];
m6_152 -> m6_30  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_181  [key=2, style=dotted];
m6_153 -> m6_30  [key=2, style=dotted];
m6_153 -> m6_252  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_181  [key=2, style=dotted];
m6_154 -> m6_30  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_182  [key=2, style=dotted];
m6_155 -> m6_255  [key=2, style=dotted];
m6_155 -> m6_30  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_182  [key=2, style=dotted];
m6_156 -> m6_30  [key=2, style=dotted];
m6_156 -> m6_256  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_183  [key=2, style=dotted];
m6_157 -> m6_255  [key=2, style=dotted];
m6_157 -> m6_30  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_183  [key=2, style=dotted];
m6_158 -> m6_32  [key=2, style=dotted];
m6_158 -> m6_30  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_184  [key=2, style=dotted];
m6_159 -> m6_30  [key=2, style=dotted];
m6_159 -> m6_257  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_184  [key=2, style=dotted];
m6_160 -> m6_30  [key=2, style=dotted];
m6_160 -> m6_75  [key=2, style=dotted];
m6_160 -> m6_257  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_185  [key=2, style=dotted];
m6_161 -> m6_30  [key=2, style=dotted];
m6_161 -> m6_258  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_186  [key=2, style=dotted];
m6_162 -> m6_185  [key=2, style=dotted];
m6_162 -> m6_32  [key=2, style=dotted];
m6_162 -> m6_30  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_187  [key=2, style=dotted];
m6_163 -> m6_32  [key=2, style=dotted];
m6_163 -> m6_30  [key=2, style=dotted];
m6_164 -> m6_165  [key=0, style=solid];
m6_164 -> m6_188  [key=2, style=dotted];
m6_164 -> m6_187  [key=2, style=dotted];
m6_164 -> m6_32  [key=2, style=dotted];
m6_164 -> m6_30  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_130  [key=2, style=dotted];
m6_165 -> m6_259  [key=2, style=dotted];
m6_165 -> m6_30  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_32  [key=2, style=dotted];
m6_167 -> m6_30  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_37  [key=2, style=dotted];
m6_169 -> m6_32  [key=2, style=dotted];
m6_169 -> m6_30  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_289  [color=green, key=3, label="method methodReturn object CreateObject", style=bold];
m6_168 -> m6_106  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m6_168 -> m6_32  [key=2, style=dotted];
m6_168 -> m6_30  [key=2, style=dotted];
m6_168 -> m6_205  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m6_168 -> m6_23  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_168 -> m6_31  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_168 -> m6_83  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_168 -> m6_566  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_168 -> m6_699  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_168 -> m6_795  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_168 -> m6_646  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_168 -> m6_668  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_170 -> m6_131  [color=blue, key=0, style=bold];
m6_170 -> m6_30  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_254  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_557 -> m6_558  [key=0, style=solid];
m6_557 -> m6_564  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_86  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_86 -> m6_88  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_30  [key=2, style=dotted];
m6_6 -> m6_23  [key=0, style=solid];
m6_23 -> m6_6  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe", style=bold];
m6_23 -> m6_773  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m6_23 -> m6_205  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_27  [key=2, style=dotted];
m6_23 -> m6_28  [key=2, style=dotted];
m6_23 -> m6_29  [key=2, style=dotted];
m6_23 -> m6_25  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_23 -> m6_74  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m6_23 -> m6_46  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m6_23 -> m6_37  [key=2, style=dotted];
m6_15 -> m6_32  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_33  [key=2, style=dotted];
m6_15 -> m6_34  [key=2, style=dotted];
m6_15 -> m6_35  [key=2, style=dotted];
m6_15 -> m6_36  [key=2, style=dotted];
m6_15 -> m6_31  [key=2, style=dotted];
m6_3 -> m6_6  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_27  [key=2, style=dotted];
m6_3 -> m6_28  [key=2, style=dotted];
m6_3 -> m6_29  [key=2, style=dotted];
m6_3 -> m6_5  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_3 -> m6_16  [color=darkseagreen4, key=1, label=longEscapedString, style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_30  [key=2, style=dotted];
m6_5 -> m6_20  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_5 -> m6_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_12 -> m6_6  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m6_12 -> m6_30  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_32  [key=2, style=dotted];
m6_12 -> m6_33  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_27  [key=2, style=dotted];
m6_7 -> m6_28  [key=2, style=dotted];
m6_7 -> m6_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_7 -> m6_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2 -> m6_30  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_27  [key=2, style=dotted];
m6_2 -> m6_14  [color=darkseagreen4, key=1, label=longString, style=dashed];
m6_4 -> m6_30  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_27  [key=2, style=dotted];
m6_4 -> m6_18  [color=darkseagreen4, key=1, label=longerEscapedString, style=dashed];
m6_11 -> m6_30  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_31  [key=2, style=dotted];
m6_14 -> m6_30  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_34  [key=2, style=dotted];
m6_18 -> m6_30  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_34  [key=2, style=dotted];
m6_20 -> m6_30  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=0, style=solid];
m6_22 -> m6_30  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_6  [key=0, style=solid];
m6_22 -> m6_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_24 -> m6_30  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_37  [key=2, style=dotted];
m6_25 -> m6_30  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_38  [key=2, style=dotted];
m6_25 -> m6_39  [key=2, style=dotted];
m6_25 -> m6_0  [color=blue, key=0, style=bold];
m6_8 -> m6_31  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_29  [key=2, style=dotted];
m6_8 -> m6_10  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_11  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_12  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_14  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_15  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_16  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_17  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_18  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_8 -> m6_19  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_9 -> m6_31  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_13 -> m6_15  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_27  [key=2, style=dotted];
m6_13 -> m6_28  [key=2, style=dotted];
m6_13 -> m6_29  [key=2, style=dotted];
m6_13 -> m6_31  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_34  [key=2, style=dotted];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_27  [key=2, style=dotted];
m6_1 -> m6_28  [key=2, style=dotted];
m6_1 -> m6_29  [key=2, style=dotted];
m6_1 -> m6_26  [key=2, style=dotted];
m6_1 -> m6_9  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m6_1 -> m6_21  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m6_1 -> m6_23  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m6_1 -> m6_24  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m6_10 -> m6_12  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_29  [key=2, style=dotted];
m6_10 -> m6_30  [key=2, style=dotted];
m6_10 -> m6_5  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_27  [key=2, style=dotted];
m6_17 -> m6_28  [key=2, style=dotted];
m6_17 -> m6_29  [key=2, style=dotted];
m6_17 -> m6_31  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_27  [key=2, style=dotted];
m6_19 -> m6_28  [key=2, style=dotted];
m6_19 -> m6_29  [key=2, style=dotted];
m6_19 -> m6_35  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_27  [key=2, style=dotted];
m6_21 -> m6_28  [key=2, style=dotted];
m6_21 -> m6_29  [key=2, style=dotted];
m6_21 -> m6_36  [key=2, style=dotted];
m6_26 -> m6_0  [color=blue, key=0, style=bold];
m6_849 -> m6_850  [key=0, style=solid];
m6_849 -> m6_847  [key=0, style=solid];
m6_737 -> m6_738  [key=0, style=solid];
m6_737 -> m6_29  [key=2, style=dotted];
m6_738 -> m6_70  [key=2, style=dotted];
m6_738 -> m6_110  [key=2, style=dotted];
m6_738 -> m6_739  [key=0, style=solid];
m6_738 -> m6_740  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_741  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_742  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_743  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_744  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_745  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_746  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_747  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_748  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_749  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_738 -> m6_32  [key=2, style=dotted];
m6_738 -> m6_33  [key=2, style=dotted];
m6_740 -> m6_30  [key=2, style=dotted];
m6_740 -> m6_741  [key=0, style=solid];
m6_740 -> m6_735  [color=blue, key=0, style=bold];
m6_739 -> m6_740  [key=0, style=solid];
m6_739 -> m6_751  [key=2, style=dotted];
m6_739 -> m6_96  [key=2, style=dotted];
m6_739 -> m6_37  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_85  [key=2, style=dotted];
m6_415 -> m6_72  [key=2, style=dotted];
m6_415 -> m6_416  [key=0, style=solid];
m6_651 -> m6_652  [key=0, style=solid];
m6_651 -> m6_644  [key=2, style=dotted];
m6_652 -> m6_653  [key=0, style=solid];
m6_652 -> m6_67  [key=2, style=dotted];
m6_652 -> m6_667  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_652 -> m6_596  [key=2, style=dotted];
m6_652 -> m6_654  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_652 -> m6_655  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_652 -> m6_656  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_652 -> m6_657  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_652 -> m6_659  [key=2, style=dotted];
m6_653 -> m6_654  [key=0, style=solid];
m6_653 -> m6_68  [key=2, style=dotted];
m6_653 -> m6_656  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_653 -> m6_30  [key=2, style=dotted];
m6_653 -> m6_81  [key=2, style=dotted];
m6_667 -> m6_668  [key=0, style=solid];
m6_667 -> m6_70  [key=2, style=dotted];
m6_667 -> m6_30  [key=2, style=dotted];
m6_654 -> m6_655  [key=0, style=solid];
m6_654 -> m6_30  [key=2, style=dotted];
m6_656 -> m6_657  [key=0, style=solid];
m6_656 -> m6_29  [key=2, style=dotted];
m6_656 -> m6_658  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_659  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_660  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_661  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_662  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_663  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_664  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_665  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_656 -> m6_30  [key=2, style=dotted];
m6_656 -> m6_77  [key=2, style=dotted];
m6_655 -> m6_656  [key=0, style=solid];
m6_655 -> m6_647  [key=2, style=dotted];
m6_655 -> m6_660  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_655 -> m6_661  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_655 -> m6_662  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_655 -> m6_30  [key=2, style=dotted];
m6_660 -> m6_661  [key=0, style=solid];
m6_660 -> m6_648  [key=2, style=dotted];
m6_661 -> m6_662  [key=0, style=solid];
m6_661 -> m6_648  [key=2, style=dotted];
m6_661 -> m6_70  [key=2, style=dotted];
m6_661 -> m6_110  [key=2, style=dotted];
m6_662 -> m6_663  [key=0, style=solid];
m6_662 -> m6_95  [key=2, style=dotted];
m6_662 -> m6_668  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_662 -> m6_665  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_662 -> m6_596  [key=2, style=dotted];
m6_662 -> m6_670  [key=2, style=dotted];
m6_662 -> m6_664  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_662 -> m6_666  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_662 -> m6_667  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_657 -> m6_658  [key=0, style=solid];
m6_657 -> m6_30  [key=2, style=dotted];
m6_658 -> m6_659  [key=0, style=solid];
m6_658 -> m6_37  [key=2, style=dotted];
m6_658 -> m6_646  [color=blue, key=0, style=bold];
m6_663 -> m6_664  [key=0, style=solid];
m6_663 -> m6_648  [key=2, style=dotted];
m6_663 -> m6_30  [key=2, style=dotted];
m6_663 -> m6_81  [key=2, style=dotted];
m6_664 -> m6_665  [key=0, style=solid];
m6_664 -> m6_670  [key=2, style=dotted];
m6_664 -> m6_30  [key=2, style=dotted];
m6_665 -> m6_666  [key=0, style=solid];
m6_665 -> m6_130  [key=2, style=dotted];
m6_665 -> m6_70  [key=2, style=dotted];
m6_665 -> m6_35  [key=2, style=dotted];
m6_665 -> m6_36  [key=2, style=dotted];
m6_666 -> m6_667  [key=0, style=solid];
m6_666 -> m6_668  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_666 -> m6_30  [key=2, style=dotted];
m6_668 -> m6_669  [key=0, style=solid];
m6_668 -> m6_251  [key=2, style=dotted];
m6_668 -> m6_168  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_668 -> m6_300  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDynamicContract contract", style=bold];
m6_668 -> m6_30  [key=2, style=dotted];
m6_669 -> m6_651  [color=blue, key=0, style=bold];
m6_669 -> m6_660  [color=blue, key=0, style=bold];
m6_770 -> m6_771  [key=0, style=solid];
m6_770 -> m6_93  [key=2, style=dotted];
m6_770 -> m6_776  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_50 -> m6_51  [key=0, style=solid];
m6_58 -> m6_106  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_30  [key=2, style=dotted];
m6_58 -> m6_35  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken CreateJToken", style=bold];
m6_58 -> m6_68  [key=2, style=dotted];
m6_51 -> m6_72  [key=2, style=dotted];
m6_51 -> m6_70  [key=2, style=dotted];
m6_51 -> m6_58  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_71  [key=2, style=dotted];
m6_51 -> m6_73  [key=2, style=dotted];
m6_51 -> m6_53  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_51 -> m6_54  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_51 -> m6_55  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_51 -> m6_56  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_51 -> m6_57  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_51 -> m6_59  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_78  [key=2, style=dotted];
m6_57 -> m6_67  [key=2, style=dotted];
m6_57 -> m6_65  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_59 -> m6_30  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_29  [key=2, style=dotted];
m6_59 -> m6_61  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_59 -> m6_62  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_59 -> m6_63  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_59 -> m6_64  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_56 -> m6_30  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_77  [key=2, style=dotted];
m6_60 -> m6_30  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_62 -> m6_30  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_34  [key=2, style=dotted];
m6_66 -> m6_30  [key=2, style=dotted];
m6_66 -> m6_81  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_80  [key=2, style=dotted];
m6_66 -> m6_56  [color=blue, key=0, style=bold];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_66  [color=darkseagreen4, key=1, label=o1, style=dashed];
m6_61 -> m6_67  [color=darkseagreen4, key=1, label=o1, style=dashed];
m6_61 -> m6_68  [color=darkseagreen4, key=1, label=o1, style=dashed];
m6_61 -> m6_75  [key=2, style=dotted];
m6_61 -> m6_65  [color=darkseagreen4, key=1, label=o1, style=dashed];
m6_61 -> m6_31  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_79  [key=2, style=dotted];
m6_63 -> m6_35  [key=2, style=dotted];
m6_64 -> m6_66  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_64 -> m6_67  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_64 -> m6_68  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_64 -> m6_75  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_69  [key=2, style=dotted];
m6_64 -> m6_133  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_64 -> m6_293  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_78  [key=2, style=dotted];
m6_65 -> m6_70  [key=2, style=dotted];
m6_65 -> m6_37  [key=2, style=dotted];
m6_69 -> m6_50  [color=blue, key=0, style=bold];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_293  [color=darkorchid, key=3, label="Local variable object list", style=bold];
m6_618 -> m6_619  [color=green, key=0, style=solid];
m6_618 -> m6_6  [color=darkorchid, key=3, label="Parameter variable string reference", style=bold];
m6_618 -> m6_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m6_618 -> m6_31  [key=2, style=dotted];
m6_619 -> m6_620  [color=green, key=0, style=solid];
m6_619 -> m6_70  [color=green, key=2, style=dotted];
m6_619 -> m6_110  [color=green, key=2, style=dotted];
m6_619 -> m6_624  [color=green, key=1, label=a, style=dashed];
m6_619 -> m6_625  [color=green, key=1, label=a, style=dashed];
m6_619 -> m6_414  [key=2, style=dotted];
m6_620 -> m6_621  [color=green, key=0, style=solid];
m6_620 -> m6_623  [color=green, key=1, label=t, style=dashed];
m6_624 -> m6_625  [key=0, style=solid];
m6_624 -> m6_30  [key=2, style=dotted];
m6_624 -> m6_31  [key=2, style=dotted];
m6_625 -> m6_626  [key=0, style=solid];
m6_625 -> m6_30  [key=2, style=dotted];
m6_625 -> m6_631  [key=2, style=dotted];
m6_621 -> m6_624  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_621 -> m6_625  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_621 -> m6_622  [key=0, style=solid];
m6_621 -> m6_627  [key=2, style=dotted];
m6_621 -> m6_596  [key=2, style=dotted];
m6_621 -> m6_623  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_621 -> m6_37  [key=2, style=dotted];
m6_623 -> m6_624  [key=0, style=solid];
m6_623 -> m6_30  [key=2, style=dotted];
m6_623 -> m6_37  [key=2, style=dotted];
m6_622 -> m6_623  [key=0, style=solid];
m6_622 -> m6_30  [key=2, style=dotted];
m6_622 -> m6_81  [key=2, style=dotted];
m6_626 -> m6_618  [color=blue, key=0, style=bold];
m6_626 -> m6_627  [key=0, style=solid];
m6_626 -> m6_35  [key=2, style=dotted];
m6_1050 -> m6_1051  [key=0, style=solid];
m6_1051 -> m6_1052  [key=0, style=solid];
m6_1051 -> m6_1054  [key=2, style=dotted];
m6_1052 -> m6_1053  [key=0, style=solid];
m6_1053 -> m6_1050  [color=blue, key=0, style=bold];
m6_646 -> m6_168  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_646 -> m6_294  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonISerializableContract contract", style=bold];
m6_646 -> m6_647  [key=0, style=solid];
m6_646 -> m6_661  [color=darkorchid, key=3, label="method methodReturn object CreateISerializable", style=bold];
m6_646 -> m6_632  [color=blue, key=0, style=bold];
m6_647 -> m6_70  [key=2, style=dotted];
m6_647 -> m6_110  [key=2, style=dotted];
m6_647 -> m6_510  [color=darkorchid, key=3, label="Local variable bool exit", style=bold];
m6_647 -> m6_648  [key=0, style=solid];
m6_647 -> m6_649  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_647 -> m6_654  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_647 -> m6_655  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_648 -> m6_656  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_648 -> m6_657  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_648 -> m6_649  [key=0, style=solid];
m6_648 -> m6_643  [key=2, style=dotted];
m6_648 -> m6_650  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_715 -> m6_716  [key=0, style=solid];
m6_715 -> m6_671  [color=blue, key=0, style=bold];
m6_716 -> m6_70  [key=2, style=dotted];
m6_716 -> m6_110  [key=2, style=dotted];
m6_716 -> m6_699  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m6_716 -> m6_717  [key=0, style=solid];
m6_716 -> m6_719  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_716 -> m6_721  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_716 -> m6_722  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_716 -> m6_727  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_716 -> m6_728  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_719 -> m6_30  [key=2, style=dotted];
m6_719 -> m6_81  [key=2, style=dotted];
m6_719 -> m6_720  [key=0, style=solid];
m6_719 -> m6_733  [key=2, style=dotted];
m6_719 -> m6_731  [color=darkseagreen4, key=1, label=stateArray, style=dashed];
m6_721 -> m6_30  [key=2, style=dotted];
m6_721 -> m6_81  [key=2, style=dotted];
m6_721 -> m6_722  [key=0, style=solid];
m6_721 -> m6_732  [key=0, style=solid];
m6_721 -> m6_734  [key=2, style=dotted];
m6_721 -> m6_731  [color=darkseagreen4, key=1, label=valueToken, style=dashed];
m6_722 -> m6_30  [key=2, style=dotted];
m6_722 -> m6_723  [key=0, style=solid];
m6_727 -> m6_30  [key=2, style=dotted];
m6_727 -> m6_81  [key=2, style=dotted];
m6_727 -> m6_728  [key=0, style=solid];
m6_717 -> m6_718  [key=0, style=solid];
m6_717 -> m6_730  [key=2, style=dotted];
m6_717 -> m6_720  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_717 -> m6_723  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_717 -> m6_724  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_717 -> m6_725  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_717 -> m6_726  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_728 -> m6_35  [key=2, style=dotted];
m6_728 -> m6_36  [key=2, style=dotted];
m6_728 -> m6_729  [key=0, style=solid];
m6_728 -> m6_736  [key=2, style=dotted];
m6_728 -> m6_75  [key=2, style=dotted];
m6_718 -> m6_719  [key=0, style=solid];
m6_718 -> m6_731  [key=2, style=dotted];
m6_720 -> m6_721  [key=0, style=solid];
m6_720 -> m6_732  [key=2, style=dotted];
m6_720 -> m6_731  [color=darkseagreen4, key=1, label=valueStates, style=dashed];
m6_723 -> m6_724  [key=0, style=solid];
m6_723 -> m6_733  [key=2, style=dotted];
m6_726 -> m6_727  [key=0, style=solid];
m6_726 -> m6_735  [key=2, style=dotted];
m6_724 -> m6_725  [key=0, style=solid];
m6_724 -> m6_734  [key=2, style=dotted];
m6_725 -> m6_726  [key=0, style=solid];
m6_725 -> m6_732  [key=2, style=dotted];
m6_729 -> m6_715  [color=blue, key=0, style=bold];
m6_729 -> m6_730  [key=0, style=solid];
m6_564 -> m6_565  [key=0, style=solid];
m6_857 -> m6_858  [key=0, style=solid];
m6_857 -> m6_880  [key=0, style=solid];
m6_862 -> m6_255  [key=2, style=dotted];
m6_862 -> m6_863  [key=0, style=solid];
m6_862 -> m6_864  [color=darkseagreen4, key=1, label=v1, style=dashed];
m6_863 -> m6_255  [key=2, style=dotted];
m6_863 -> m6_864  [key=0, style=solid];
m6_863 -> m6_880  [key=0, style=solid];
m6_858 -> m6_70  [key=2, style=dotted];
m6_858 -> m6_859  [key=0, style=solid];
m6_858 -> m6_860  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_861 -> m6_862  [key=0, style=solid];
m6_861 -> m6_880  [key=0, style=solid];
m6_864 -> m6_36  [key=2, style=dotted];
m6_864 -> m6_865  [key=0, style=solid];
m6_864 -> m6_866  [key=2, style=dotted];
m6_859 -> m6_860  [key=0, style=solid];
m6_859 -> m6_848  [key=2, style=dotted];
m6_859 -> m6_880  [key=0, style=solid];
m6_860 -> m6_36  [key=2, style=dotted];
m6_860 -> m6_861  [key=0, style=solid];
m6_860 -> m6_849  [key=2, style=dotted];
m6_865 -> m6_857  [color=blue, key=0, style=bold];
m6_865 -> m6_880  [key=0, style=solid];
m6_128 -> m6_30  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_173 -> m6_259  [key=2, style=dotted];
m6_173 -> m6_30  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_602 -> m6_603  [key=0, style=solid];
m6_602 -> m6_32  [key=2, style=dotted];
m6_602 -> m6_35  [key=2, style=dotted];
m6_602 -> m6_36  [key=2, style=dotted];
m6_603 -> m6_604  [key=0, style=solid];
m6_603 -> m6_67  [key=2, style=dotted];
m6_603 -> m6_628  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_603 -> m6_110  [key=2, style=dotted];
m6_603 -> m6_35  [key=2, style=dotted];
m6_603 -> m6_36  [key=2, style=dotted];
m6_604 -> m6_605  [key=0, style=solid];
m6_604 -> m6_68  [key=2, style=dotted];
m6_604 -> m6_597  [color=blue, key=0, style=bold];
m6_628 -> m6_629  [key=0, style=solid];
m6_628 -> m6_70  [key=2, style=dotted];
m6_609 -> m6_610  [key=0, style=solid];
m6_610 -> m6_611  [key=0, style=solid];
m6_610 -> m6_37  [key=2, style=dotted];
m6_610 -> m6_70  [key=2, style=dotted];
m6_610 -> m6_110  [key=2, style=dotted];
m6_610 -> m6_614  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_610 -> m6_615  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_611 -> m6_612  [key=0, style=solid];
m6_612 -> m6_613  [key=0, style=solid];
m6_612 -> m6_37  [key=2, style=dotted];
m6_612 -> m6_41  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m6_612 -> m6_390  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_612 -> m6_428  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m6_612 -> m6_581  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_612 -> m6_5  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter", style=bold];
m6_612 -> m6_593  [color=darkorchid, key=3, label="method methodReturn bool ReadForType", style=bold];
m6_612 -> m6_182  [color=darkorchid, key=3, label="method methodReturn bool ReadForType", style=bold];
m6_612 -> m6_596  [key=2, style=dotted];
m6_612 -> m6_614  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_612 -> m6_615  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_612 -> m6_617  [key=2, style=dotted];
m6_613 -> m6_614  [key=0, style=solid];
m6_613 -> m6_30  [key=2, style=dotted];
m6_613 -> m6_81  [key=2, style=dotted];
m6_614 -> m6_615  [key=0, style=solid];
m6_614 -> m6_37  [key=2, style=dotted];
m6_614 -> m6_30  [key=2, style=dotted];
m6_615 -> m6_616  [key=0, style=solid];
m6_615 -> m6_30  [key=2, style=dotted];
m6_616 -> m6_617  [key=0, style=solid];
m6_616 -> m6_37  [key=2, style=dotted];
m6_616 -> m6_609  [color=blue, key=0, style=bold];
m6_627 -> m6_628  [key=0, style=solid];
m6_627 -> m6_629  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_629 -> m6_630  [key=0, style=solid];
m6_629 -> m6_251  [key=2, style=dotted];
m6_629 -> m6_70  [key=2, style=dotted];
m6_629 -> m6_110  [key=2, style=dotted];
m6_629 -> m6_631  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_629 -> m6_637  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_629 -> m6_638  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_630 -> m6_602  [color=blue, key=0, style=bold];
m6_630 -> m6_640  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_630 -> m6_641  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_630 -> m6_631  [key=0, style=solid];
m6_630 -> m6_643  [key=2, style=dotted];
m6_630 -> m6_632  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_180 -> m6_255  [key=2, style=dotted];
m6_180 -> m6_30  [key=2, style=dotted];
m6_180 -> m6_181  [key=0, style=solid];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_309  [color=darkorchid, key=3, label="Local variable object keyValue", style=bold];
m6_394 -> m6_251  [key=2, style=dotted];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_67  [key=2, style=dotted];
m6_395 -> m6_411  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_395 -> m6_393  [color=blue, key=0, style=bold];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_68  [key=2, style=dotted];
m6_411 -> m6_412  [key=0, style=solid];
m6_411 -> m6_70  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_29  [key=2, style=dotted];
m6_397 -> m6_399  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_400  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_401  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_402  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_403  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_404  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_405  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_406  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_407  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_408  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_409  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_397 -> m6_264  [key=2, style=dotted];
m6_397 -> m6_265  [key=2, style=dotted];
m6_398 -> m6_399  [key=0, style=solid];
m6_398 -> m6_396  [color=blue, key=0, style=bold];
m6_399 -> m6_400  [key=0, style=solid];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_253  [key=2, style=dotted];
m6_401 -> m6_402  [key=0, style=solid];
m6_401 -> m6_171  [key=2, style=dotted];
m6_401 -> m6_399  [color=blue, key=0, style=bold];
m6_402 -> m6_403  [key=0, style=solid];
m6_402 -> m6_414  [key=2, style=dotted];
m6_403 -> m6_404  [key=0, style=solid];
m6_403 -> m6_414  [key=2, style=dotted];
m6_403 -> m6_32  [key=2, style=dotted];
m6_404 -> m6_405  [key=0, style=solid];
m6_404 -> m6_414  [key=2, style=dotted];
m6_404 -> m6_402  [color=blue, key=0, style=bold];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_415  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_415  [key=2, style=dotted];
m6_406 -> m6_255  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_415  [key=2, style=dotted];
m6_407 -> m6_405  [color=blue, key=0, style=bold];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_130  [key=2, style=dotted];
m6_409 -> m6_410  [key=0, style=solid];
m6_409 -> m6_69  [key=2, style=dotted];
m6_409 -> m6_259  [key=2, style=dotted];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_412  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_410 -> m6_408  [color=blue, key=0, style=bold];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_251  [key=2, style=dotted];
m6_412 -> m6_254  [key=2, style=dotted];
m6_413 -> m6_394  [color=blue, key=0, style=bold];
m6_413 -> m6_411  [color=blue, key=0, style=bold];
m6_948 -> m6_949  [key=0, style=solid];
m6_949 -> m6_950  [key=0, style=solid];
m6_949 -> m6_954  [key=2, style=dotted];
m6_950 -> m6_951  [key=0, style=solid];
m6_950 -> m6_955  [key=2, style=dotted];
m6_951 -> m6_952  [key=0, style=solid];
m6_951 -> m6_956  [key=2, style=dotted];
m6_952 -> m6_953  [key=0, style=solid];
m6_952 -> m6_37  [key=2, style=dotted];
m6_953 -> m6_948  [color=blue, key=0, style=bold];
m6_502 -> m6_503  [key=0, style=solid];
m6_502 -> m6_70  [key=2, style=dotted];
m6_502 -> m6_37  [key=2, style=dotted];
m6_552 -> m6_262  [key=2, style=dotted];
m6_552 -> m6_553  [key=0, style=solid];
m6_552 -> m6_263  [key=2, style=dotted];
m6_552 -> m6_35  [key=2, style=dotted];
m6_552 -> m6_36  [key=2, style=dotted];
m6_552 -> m6_67  [key=2, style=dotted];
m6_552 -> m6_562  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_508 -> m6_253  [key=2, style=dotted];
m6_508 -> m6_509  [key=0, style=solid];
m6_508 -> m6_35  [key=2, style=dotted];
m6_508 -> m6_36  [key=2, style=dotted];
m6_508 -> m6_68  [key=2, style=dotted];
m6_508 -> m6_182  [color=darkorchid, key=3, label="Local variable bool exit", style=bold];
m6_509 -> m6_253  [key=2, style=dotted];
m6_509 -> m6_6  [color=darkorchid, key=3, label="Local variable object currentValue", style=bold];
m6_509 -> m6_510  [key=0, style=solid];
m6_509 -> m6_35  [key=2, style=dotted];
m6_509 -> m6_36  [key=2, style=dotted];
m6_509 -> m6_29  [key=2, style=dotted];
m6_509 -> m6_511  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_512  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_513  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_514  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_515  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_516  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_517  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_518  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_519  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_520  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_521  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_522  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_523  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_524  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_525  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_526  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_509 -> m6_527  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_510 -> m6_253  [key=2, style=dotted];
m6_510 -> m6_510  [color=darkorchid, key=3, label="Local variable bool useExistingValue", style=bold];
m6_510 -> m6_511  [key=0, style=solid];
m6_510 -> m6_35  [key=2, style=dotted];
m6_510 -> m6_36  [key=2, style=dotted];
m6_512 -> m6_32  [key=2, style=dotted];
m6_512 -> m6_513  [key=0, style=solid];
m6_512 -> m6_35  [key=2, style=dotted];
m6_512 -> m6_36  [key=2, style=dotted];
m6_512 -> m6_125  [key=2, style=dotted];
m6_515 -> m6_32  [key=2, style=dotted];
m6_515 -> m6_516  [key=0, style=solid];
m6_515 -> m6_35  [key=2, style=dotted];
m6_515 -> m6_36  [key=2, style=dotted];
m6_515 -> m6_125  [key=2, style=dotted];
m6_523 -> m6_32  [key=2, style=dotted];
m6_523 -> m6_524  [key=0, style=solid];
m6_523 -> m6_35  [key=2, style=dotted];
m6_523 -> m6_36  [key=2, style=dotted];
m6_523 -> m6_125  [key=2, style=dotted];
m6_525 -> m6_32  [key=2, style=dotted];
m6_525 -> m6_526  [key=0, style=solid];
m6_525 -> m6_35  [key=2, style=dotted];
m6_525 -> m6_36  [key=2, style=dotted];
m6_525 -> m6_346  [key=2, style=dotted];
m6_527 -> m6_32  [key=2, style=dotted];
m6_527 -> m6_528  [key=0, style=solid];
m6_527 -> m6_35  [key=2, style=dotted];
m6_527 -> m6_36  [key=2, style=dotted];
m6_527 -> m6_130  [key=2, style=dotted];
m6_528 -> m6_32  [key=2, style=dotted];
m6_528 -> m6_529  [key=0, style=solid];
m6_528 -> m6_35  [key=2, style=dotted];
m6_528 -> m6_36  [key=2, style=dotted];
m6_528 -> m6_70  [key=2, style=dotted];
m6_528 -> m6_37  [key=2, style=dotted];
m6_551 -> m6_261  [key=2, style=dotted];
m6_551 -> m6_552  [key=0, style=solid];
m6_551 -> m6_260  [key=2, style=dotted];
m6_551 -> m6_35  [key=2, style=dotted];
m6_551 -> m6_36  [key=2, style=dotted];
m6_503 -> m6_72  [key=2, style=dotted];
m6_503 -> m6_504  [key=0, style=solid];
m6_503 -> m6_73  [key=2, style=dotted];
m6_503 -> m6_35  [key=2, style=dotted];
m6_503 -> m6_36  [key=2, style=dotted];
m6_503 -> m6_489  [color=blue, key=0, style=bold];
m6_504 -> m6_251  [key=2, style=dotted];
m6_504 -> m6_505  [key=0, style=solid];
m6_504 -> m6_249  [key=2, style=dotted];
m6_504 -> m6_35  [key=2, style=dotted];
m6_504 -> m6_36  [key=2, style=dotted];
m6_511 -> m6_510  [color=darkorchid, key=3, label="Local variable bool gottenCurrentValue", style=bold];
m6_511 -> m6_512  [key=0, style=solid];
m6_511 -> m6_35  [key=2, style=dotted];
m6_511 -> m6_252  [key=2, style=dotted];
m6_511 -> m6_36  [key=2, style=dotted];
m6_511 -> m6_120  [key=2, style=dotted];
m6_553 -> m6_35  [key=2, style=dotted];
m6_553 -> m6_554  [key=0, style=solid];
m6_553 -> m6_264  [key=2, style=dotted];
m6_553 -> m6_265  [key=2, style=dotted];
m6_553 -> m6_36  [key=2, style=dotted];
m6_553 -> m6_68  [key=2, style=dotted];
m6_507 -> m6_508  [key=0, style=solid];
m6_507 -> m6_35  [key=2, style=dotted];
m6_507 -> m6_36  [key=2, style=dotted];
m6_507 -> m6_271  [key=2, style=dotted];
m6_507 -> m6_67  [key=2, style=dotted];
m6_507 -> m6_528  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_513 -> m6_35  [key=2, style=dotted];
m6_513 -> m6_252  [key=2, style=dotted];
m6_513 -> m6_36  [key=2, style=dotted];
m6_513 -> m6_514  [key=0, style=solid];
m6_513 -> m6_346  [key=2, style=dotted];
m6_514 -> m6_515  [key=0, style=solid];
m6_514 -> m6_35  [key=2, style=dotted];
m6_514 -> m6_252  [key=2, style=dotted];
m6_514 -> m6_36  [key=2, style=dotted];
m6_514 -> m6_125  [key=2, style=dotted];
m6_516 -> m6_35  [key=2, style=dotted];
m6_516 -> m6_252  [key=2, style=dotted];
m6_516 -> m6_36  [key=2, style=dotted];
m6_516 -> m6_517  [key=0, style=solid];
m6_516 -> m6_125  [key=2, style=dotted];
m6_522 -> m6_523  [key=0, style=solid];
m6_522 -> m6_35  [key=2, style=dotted];
m6_522 -> m6_252  [key=2, style=dotted];
m6_522 -> m6_36  [key=2, style=dotted];
m6_522 -> m6_125  [key=2, style=dotted];
m6_524 -> m6_525  [key=0, style=solid];
m6_524 -> m6_35  [key=2, style=dotted];
m6_524 -> m6_252  [key=2, style=dotted];
m6_524 -> m6_36  [key=2, style=dotted];
m6_524 -> m6_346  [key=2, style=dotted];
m6_524 -> m6_116  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_526 -> m6_527  [key=0, style=solid];
m6_526 -> m6_35  [key=2, style=dotted];
m6_526 -> m6_252  [key=2, style=dotted];
m6_526 -> m6_36  [key=2, style=dotted];
m6_526 -> m6_346  [key=2, style=dotted];
m6_529 -> m6_35  [key=2, style=dotted];
m6_529 -> m6_36  [key=2, style=dotted];
m6_529 -> m6_530  [key=0, style=solid];
m6_529 -> m6_256  [key=2, style=dotted];
m6_529 -> m6_506  [color=blue, key=0, style=bold];
m6_505 -> m6_35  [key=2, style=dotted];
m6_505 -> m6_252  [key=2, style=dotted];
m6_505 -> m6_36  [key=2, style=dotted];
m6_505 -> m6_506  [key=0, style=solid];
m6_506 -> m6_35  [key=2, style=dotted];
m6_506 -> m6_36  [key=2, style=dotted];
m6_506 -> m6_507  [key=0, style=solid];
m6_506 -> m6_273  [key=2, style=dotted];
m6_506 -> m6_271  [key=2, style=dotted];
m6_517 -> m6_35  [key=2, style=dotted];
m6_517 -> m6_252  [key=2, style=dotted];
m6_517 -> m6_36  [key=2, style=dotted];
m6_517 -> m6_518  [key=0, style=solid];
m6_517 -> m6_125  [key=2, style=dotted];
m6_518 -> m6_35  [key=2, style=dotted];
m6_518 -> m6_252  [key=2, style=dotted];
m6_518 -> m6_36  [key=2, style=dotted];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_125  [key=2, style=dotted];
m6_519 -> m6_35  [key=2, style=dotted];
m6_519 -> m6_252  [key=2, style=dotted];
m6_519 -> m6_36  [key=2, style=dotted];
m6_519 -> m6_520  [key=0, style=solid];
m6_519 -> m6_125  [key=2, style=dotted];
m6_520 -> m6_35  [key=2, style=dotted];
m6_520 -> m6_252  [key=2, style=dotted];
m6_520 -> m6_36  [key=2, style=dotted];
m6_520 -> m6_521  [key=0, style=solid];
m6_520 -> m6_125  [key=2, style=dotted];
m6_521 -> m6_35  [key=2, style=dotted];
m6_521 -> m6_252  [key=2, style=dotted];
m6_521 -> m6_36  [key=2, style=dotted];
m6_521 -> m6_522  [key=0, style=solid];
m6_521 -> m6_125  [key=2, style=dotted];
m6_554 -> m6_35  [key=2, style=dotted];
m6_554 -> m6_36  [key=2, style=dotted];
m6_554 -> m6_555  [key=0, style=solid];
m6_554 -> m6_254  [key=2, style=dotted];
m6_554 -> m6_29  [key=2, style=dotted];
m6_554 -> m6_556  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_554 -> m6_557  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_554 -> m6_558  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_554 -> m6_559  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_554 -> m6_560  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_554 -> m6_561  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_554 -> m6_581  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IDictionary<Newtonsoft.Json.Serialization.JsonProperty, object> propertyValues", style=bold];
m6_555 -> m6_35  [key=2, style=dotted];
m6_555 -> m6_36  [key=2, style=dotted];
m6_555 -> m6_556  [key=0, style=solid];
m6_555 -> m6_254  [key=2, style=dotted];
m6_555 -> m6_564  [key=2, style=dotted];
m6_556 -> m6_502  [color=blue, key=0, style=bold];
m6_556 -> m6_557  [key=0, style=solid];
m6_556 -> m6_565  [key=2, style=dotted];
m6_840 -> m6_841  [key=0, style=solid];
m6_840 -> m6_842  [key=0, style=solid];
m6_848 -> m6_849  [key=0, style=solid];
m6_848 -> m6_851  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_848 -> m6_874  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_848 -> m6_877  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_894 -> m6_895  [key=0, style=solid];
m6_894 -> m6_901  [key=2, style=dotted];
m6_895 -> m6_896  [key=0, style=solid];
m6_895 -> m6_897  [key=0, style=solid];
m6_896 -> m6_897  [key=0, style=solid];
m6_896 -> m6_898  [key=2, style=dotted];
m6_856 -> m6_857  [key=0, style=solid];
m6_866 -> m6_867  [key=0, style=solid];
m6_870 -> m6_871  [key=0, style=solid];
m6_872 -> m6_873  [key=0, style=solid];
m6_872 -> m6_49  [key=2, style=dotted];
m6_871 -> m6_880  [key=0, style=solid];
m6_871 -> m6_872  [key=0, style=solid];
m6_873 -> m6_880  [key=0, style=solid];
m6_873 -> m6_870  [color=blue, key=0, style=bold];
m6_897 -> m6_837  [color=blue, key=0, style=bold];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_122  [key=2, style=dotted];
m6_780 -> m6_781  [key=0, style=solid];
m6_780 -> m6_29  [key=2, style=dotted];
m6_780 -> m6_782  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_783  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_784  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_785  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_786  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_787  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_788  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_789  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_790  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_791  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_792  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_793  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_794  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_795  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_780 -> m6_796  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_782 -> m6_32  [key=2, style=dotted];
m6_782 -> m6_783  [key=0, style=solid];
m6_782 -> m6_792  [key=2, style=dotted];
m6_787 -> m6_32  [key=2, style=dotted];
m6_787 -> m6_788  [key=0, style=solid];
m6_787 -> m6_792  [key=2, style=dotted];
m6_787 -> m6_33  [key=2, style=dotted];
m6_781 -> m6_70  [key=2, style=dotted];
m6_781 -> m6_110  [key=2, style=dotted];
m6_781 -> m6_782  [key=0, style=solid];
m6_781 -> m6_787  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_781 -> m6_783  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_781 -> m6_784  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_781 -> m6_785  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_781 -> m6_786  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_781 -> m6_788  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_781 -> m6_789  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_781 -> m6_790  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_790 -> m6_70  [key=2, style=dotted];
m6_790 -> m6_110  [key=2, style=dotted];
m6_790 -> m6_791  [key=0, style=solid];
m6_790 -> m6_35  [key=2, style=dotted];
m6_790 -> m6_36  [key=2, style=dotted];
m6_790 -> m6_32  [key=2, style=dotted];
m6_790 -> m6_33  [key=2, style=dotted];
m6_783 -> m6_30  [key=2, style=dotted];
m6_783 -> m6_784  [key=0, style=solid];
m6_783 -> m6_171  [key=2, style=dotted];
m6_784 -> m6_30  [key=2, style=dotted];
m6_784 -> m6_81  [key=2, style=dotted];
m6_784 -> m6_785  [key=0, style=solid];
m6_784 -> m6_32  [key=2, style=dotted];
m6_784 -> m6_33  [key=2, style=dotted];
m6_786 -> m6_30  [key=2, style=dotted];
m6_786 -> m6_787  [key=0, style=solid];
m6_788 -> m6_30  [key=2, style=dotted];
m6_788 -> m6_789  [key=0, style=solid];
m6_788 -> m6_799  [key=2, style=dotted];
m6_788 -> m6_800  [key=2, style=dotted];
m6_789 -> m6_30  [key=2, style=dotted];
m6_789 -> m6_790  [key=0, style=solid];
m6_789 -> m6_81  [key=2, style=dotted];
m6_785 -> m6_786  [key=0, style=solid];
m6_785 -> m6_792  [key=2, style=dotted];
m6_785 -> m6_258  [key=2, style=dotted];
m6_785 -> m6_799  [key=2, style=dotted];
m6_785 -> m6_800  [key=2, style=dotted];
m6_791 -> m6_780  [color=blue, key=0, style=bold];
m6_791 -> m6_792  [key=0, style=solid];
m6_791 -> m6_799  [key=2, style=dotted];
m6_791 -> m6_800  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_32  [key=2, style=dotted];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_67  [key=2, style=dotted];
m6_328 -> m6_343  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_328 -> m6_326  [color=blue, key=0, style=bold];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_68  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_70  [key=2, style=dotted];
m6_343 -> m6_341  [color=blue, key=0, style=bold];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_29  [key=2, style=dotted];
m6_330 -> m6_332  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_333  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_334  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_335  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_336  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_337  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_338  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_339  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_340  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_341  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_330 -> m6_255  [key=2, style=dotted];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_329  [color=blue, key=0, style=bold];
m6_332 -> m6_333  [key=0, style=solid];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_120  [key=2, style=dotted];
m6_333 -> m6_259  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_125  [key=2, style=dotted];
m6_334 -> m6_332  [color=blue, key=0, style=bold];
m6_335 -> m6_336  [key=0, style=solid];
m6_335 -> m6_125  [key=2, style=dotted];
m6_336 -> m6_337  [key=0, style=solid];
m6_336 -> m6_125  [key=2, style=dotted];
m6_336 -> m6_261  [key=2, style=dotted];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_346  [key=2, style=dotted];
m6_337 -> m6_335  [color=blue, key=0, style=bold];
m6_338 -> m6_339  [key=0, style=solid];
m6_338 -> m6_346  [key=2, style=dotted];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_346  [key=2, style=dotted];
m6_339 -> m6_264  [key=2, style=dotted];
m6_339 -> m6_265  [key=2, style=dotted];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_130  [key=2, style=dotted];
m6_340 -> m6_5  [color=darkorchid, key=3, label="Local variable object currentValue", style=bold];
m6_340 -> m6_338  [color=blue, key=0, style=bold];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_347  [key=2, style=dotted];
m6_341 -> m6_182  [color=darkorchid, key=3, label="Local variable bool gottenCurrentValue", style=bold];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_344  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_342 -> m6_254  [key=2, style=dotted];
m6_344 -> m6_345  [color=green, key=0, style=solid];
m6_344 -> m6_251  [key=2, style=dotted];
m6_345 -> m6_327  [color=blue, key=0, style=bold];
m6_345 -> m6_346  [color=green, key=0, style=solid];
m6_345 -> m6_262  [color=green, key=2, style=dotted];
m6_345 -> m6_347  [color=green, key=2, style=dotted];
m6_374 -> m6_372  [color=blue, key=0, style=bold];
m6_95 -> m6_70  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_74  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_95 -> m6_144  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_123 -> m6_251  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_249  [key=2, style=dotted];
m6_123 -> m6_30  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_29  [key=2, style=dotted];
m6_78 -> m6_83  [key=2, style=dotted];
m6_78 -> m6_80  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_172 -> m6_255  [key=2, style=dotted];
m6_172 -> m6_30  [key=2, style=dotted];
m6_172 -> m6_173  [key=0, style=solid];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_37  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_297 -> m6_321  [key=2, style=dotted];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_298 -> m6_321  [key=2, style=dotted];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_299 -> m6_321  [key=2, style=dotted];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_299 -> m6_67  [key=2, style=dotted];
m6_300 -> m6_321  [key=2, style=dotted];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_300 -> m6_68  [key=2, style=dotted];
m6_301 -> m6_321  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_301 -> m6_29  [key=2, style=dotted];
m6_301 -> m6_303  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_304  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_305  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_306  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_307  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_308  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_309  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_310  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_311  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_312  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_313  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_314  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_315  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_316  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_317  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_318  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_319  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_320  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_322  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_323  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_324  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_301 -> m6_325  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_302 -> m6_321  [key=2, style=dotted];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_302 -> m6_37  [key=2, style=dotted];
m6_303 -> m6_321  [key=2, style=dotted];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_303 -> m6_248  [key=2, style=dotted];
m6_304 -> m6_321  [key=2, style=dotted];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_304 -> m6_37  [key=2, style=dotted];
m6_305 -> m6_321  [key=2, style=dotted];
m6_305 -> m6_306  [key=0, style=solid];
m6_305 -> m6_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_305 -> m6_37  [key=2, style=dotted];
m6_306 -> m6_321  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_414  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_306 -> m6_249  [key=2, style=dotted];
m6_307 -> m6_321  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_307 -> m6_37  [key=2, style=dotted];
m6_308 -> m6_321  [key=2, style=dotted];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_308 -> m6_37  [key=2, style=dotted];
m6_309 -> m6_321  [key=2, style=dotted];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_309 -> m6_122  [key=2, style=dotted];
m6_309 -> m6_133  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m6_309 -> m6_309  [color=darkorchid, key=3, label="method methodReturn object EnsureType", style=bold];
m6_310 -> m6_321  [key=2, style=dotted];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_310 -> m6_37  [key=2, style=dotted];
m6_311 -> m6_321  [key=2, style=dotted];
m6_311 -> m6_312  [key=0, style=solid];
m6_311 -> m6_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_311 -> m6_37  [key=2, style=dotted];
m6_316 -> m6_321  [key=2, style=dotted];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_316 -> m6_37  [key=2, style=dotted];
m6_317 -> m6_321  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_317 -> m6_122  [key=2, style=dotted];
m6_318 -> m6_321  [key=2, style=dotted];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_318 -> m6_37  [key=2, style=dotted];
m6_319 -> m6_321  [key=2, style=dotted];
m6_319 -> m6_618  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_319 -> m6_58  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_319 -> m6_37  [key=2, style=dotted];
m6_314 -> m6_168  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_322  [key=2, style=dotted];
m6_314 -> m6_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_314 -> m6_37  [key=2, style=dotted];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_322  [key=2, style=dotted];
m6_312 -> m6_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_312 -> m6_249  [key=2, style=dotted];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_322  [key=2, style=dotted];
m6_315 -> m6_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_315 -> m6_120  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_322  [key=2, style=dotted];
m6_313 -> m6_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_313 -> m6_37  [key=2, style=dotted];
m6_320 -> m6_275  [color=blue, key=0, style=bold];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_297  [key=2, style=dotted];
m6_272 -> m6_252  [color=blue, key=0, style=bold];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_86  [key=2, style=dotted];
m6_252 -> m6_253  [key=0, style=solid];
m6_735 -> m6_736  [key=0, style=solid];
m6_1012 -> m6_1013  [key=0, style=solid];
m6_1013 -> m6_1014  [key=0, style=solid];
m6_1013 -> m6_996  [key=2, style=dotted];
m6_1014 -> m6_1012  [color=blue, key=0, style=bold];
m6_85 -> m6_30  [key=2, style=dotted];
m6_85 -> m6_86  [key=0, style=solid];
m6_631 -> m6_636  [color=darkseagreen4, key=1, label=t1, style=dashed];
m6_631 -> m6_632  [key=0, style=solid];
m6_631 -> m6_633  [color=darkseagreen4, key=1, label=t1, style=dashed];
m6_769 -> m6_770  [key=0, style=solid];
m6_776 -> m6_777  [key=0, style=solid];
m6_776 -> m6_96  [key=2, style=dotted];
m6_776 -> m6_37  [key=2, style=dotted];
m6_776 -> m6_643  [key=2, style=dotted];
m6_772 -> m6_773  [key=0, style=solid];
m6_773 -> m6_774  [key=0, style=solid];
m6_773 -> m6_30  [key=2, style=dotted];
m6_773 -> m6_321  [key=2, style=dotted];
m6_773 -> m6_6  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter", style=bold];
m6_773 -> m6_775  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_773 -> m6_46  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m6_773 -> m6_795  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_773 -> m6_755  [color=darkorchid, key=3, label="method methodReturn bool ReadForType", style=bold];
m6_773 -> m6_510  [color=darkorchid, key=3, label="method methodReturn bool ReadForType", style=bold];
m6_774 -> m6_775  [key=0, style=solid];
m6_774 -> m6_31  [key=2, style=dotted];
m6_774 -> m6_772  [color=blue, key=0, style=bold];
m6_775 -> m6_776  [key=0, style=solid];
m6_775 -> m6_297  [key=2, style=dotted];
m6_777 -> m6_769  [color=blue, key=0, style=bold];
m6_777 -> m6_778  [key=0, style=solid];
m6_777 -> m6_779  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_71  [color=blue, key=0, style=bold];
m6_83 -> m6_168  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_83 -> m6_70  [key=2, style=dotted];
m6_83 -> m6_83  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken CreateJObject", style=bold];
m6_83 -> m6_84  [key=0, style=solid];
m6_500 -> m6_501  [key=0, style=solid];
m6_500 -> m6_505  [key=2, style=dotted];
m6_97 -> m6_70  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_35  [key=2, style=dotted];
m6_97 -> m6_36  [key=2, style=dotted];
m6_99 -> m6_30  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_68  [key=2, style=dotted];
m6_101 -> m6_30  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_120  [key=2, style=dotted];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_98  [color=darkseagreen4, key=1, label=previous, style=dashed];
m6_98 -> m6_100  [color=darkseagreen4, key=1, label=previous, style=dashed];
m6_98 -> m6_67  [key=2, style=dotted];
m6_98 -> m6_117  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_144  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_103 -> m6_93  [key=2, style=dotted];
m6_103 -> m6_122  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_100  [color=darkseagreen4, key=1, label=previous, style=dashed];
m6_100 -> m6_102  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_29  [key=2, style=dotted];
m6_100 -> m6_103  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_104  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_105  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_106  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_107  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_108  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_109  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_110  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_111  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_112  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_113  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_114  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_100 -> m6_115  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_102  [color=darkseagreen4, key=1, label=previous, style=dashed];
m6_102 -> m6_121  [key=2, style=dotted];
m6_104 -> m6_94  [color=blue, key=0, style=bold];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_123  [key=2, style=dotted];
m6_178 -> m6_251  [key=2, style=dotted];
m6_178 -> m6_30  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_249  [key=2, style=dotted];
m6_177 -> m6_72  [key=2, style=dotted];
m6_177 -> m6_30  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_250  [key=2, style=dotted];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_249  [key=2, style=dotted];
m6_990 -> m6_991  [key=0, style=solid];
m6_991 -> m6_992  [key=0, style=solid];
m6_992 -> m6_990  [color=blue, key=0, style=bold];
m6_1009 -> m6_1010  [key=0, style=solid];
m6_1010 -> m6_1011  [key=0, style=solid];
m6_1010 -> m6_996  [key=2, style=dotted];
m6_1011 -> m6_1009  [color=blue, key=0, style=bold];
m6_129 -> m6_30  [key=2, style=dotted];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_254  [key=2, style=dotted];
m6_732 -> m6_718  [color=blue, key=0, style=bold];
m6_122 -> m6_72  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_30  [key=2, style=dotted];
m6_122 -> m6_249  [key=2, style=dotted];
m6_122 -> m6_250  [key=2, style=dotted];
m6_961 -> m6_962  [key=0, style=solid];
m6_961 -> m6_965  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_962 -> m6_963  [key=0, style=solid];
m6_962 -> m6_970  [key=2, style=dotted];
m6_965 -> m6_966  [key=0, style=solid];
m6_965 -> m6_971  [key=2, style=dotted];
m6_965 -> m6_900  [key=2, style=dotted];
m6_965 -> m6_972  [key=2, style=dotted];
m6_965 -> m6_973  [key=2, style=dotted];
m6_965 -> m6_903  [key=2, style=dotted];
m6_963 -> m6_964  [key=0, style=solid];
m6_963 -> m6_965  [key=0, style=solid];
m6_964 -> m6_965  [key=0, style=solid];
m6_964 -> m6_898  [key=2, style=dotted];
m6_966 -> m6_967  [key=0, style=solid];
m6_966 -> m6_968  [key=0, style=solid];
m6_967 -> m6_968  [key=0, style=solid];
m6_967 -> m6_898  [key=2, style=dotted];
m6_968 -> m6_969  [key=0, style=solid];
m6_968 -> m6_898  [key=2, style=dotted];
m6_969 -> m6_961  [color=blue, key=0, style=bold];
m6_919 -> m6_957  [key=0, style=solid];
m6_957 -> m6_958  [key=0, style=solid];
m6_958 -> m6_919  [color=blue, key=0, style=bold];
m6_1003 -> m6_1004  [key=0, style=solid];
m6_1004 -> m6_1005  [key=0, style=solid];
m6_1004 -> m6_996  [key=2, style=dotted];
m6_1005 -> m6_1003  [color=blue, key=0, style=bold];
m6_793 -> m6_794  [key=0, style=solid];
m6_793 -> m6_801  [key=2, style=dotted];
m6_795 -> m6_168  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_795 -> m6_699  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m6_795 -> m6_795  [color=darkorchid, key=3, label="method methodReturn object PopulateObject", style=bold];
m6_795 -> m6_796  [key=0, style=solid];
m6_795 -> m6_800  [key=2, style=dotted];
m6_795 -> m6_801  [key=2, style=dotted];
m6_795 -> m6_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m6_795 -> m6_275  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m6_795 -> m6_12  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m6_795 -> m6_803  [key=2, style=dotted];
m6_794 -> m6_72  [key=2, style=dotted];
m6_794 -> m6_110  [key=2, style=dotted];
m6_794 -> m6_795  [key=0, style=solid];
m6_794 -> m6_250  [key=2, style=dotted];
m6_794 -> m6_797  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_794 -> m6_802  [key=2, style=dotted];
m6_794 -> m6_670  [key=2, style=dotted];
m6_796 -> m6_797  [key=0, style=solid];
m6_796 -> m6_802  [key=2, style=dotted];
m6_796 -> m6_297  [key=2, style=dotted];
m6_798 -> m6_30  [key=2, style=dotted];
m6_798 -> m6_799  [key=0, style=solid];
m6_798 -> m6_778  [color=blue, key=0, style=bold];
m6_797 -> m6_800  [key=2, style=dotted];
m6_797 -> m6_798  [key=0, style=solid];
m6_797 -> m6_803  [key=2, style=dotted];
m6_797 -> m6_96  [key=2, style=dotted];
m6_797 -> m6_251  [key=2, style=dotted];
m6_799 -> m6_793  [color=blue, key=0, style=bold];
m6_697 -> m6_698  [key=0, style=solid];
m6_697 -> m6_37  [key=2, style=dotted];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_122  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_124  [key=2, style=dotted];
m6_106 -> m6_283  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_70  [key=2, style=dotted];
m6_106 -> m6_110  [key=2, style=dotted];
m6_106 -> m6_108  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_106 -> m6_94  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m6_106 -> m6_168  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_106 -> m6_95  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_106 -> m6_6  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_106 -> m6_58  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_106 -> m6_475  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_106 -> m6_123  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m6_106 -> m6_125  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_81  [key=2, style=dotted];
m6_107 -> m6_30  [key=2, style=dotted];
m6_107 -> m6_125  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_111  [key=2, style=dotted];
m6_108 -> m6_81  [key=2, style=dotted];
m6_108 -> m6_30  [key=2, style=dotted];
m6_108 -> m6_125  [key=2, style=dotted];
m6_109 -> m6_105  [color=blue, key=0, style=bold];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_126  [key=2, style=dotted];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_273  [key=2, style=dotted];
m6_637 -> m6_30  [key=2, style=dotted];
m6_637 -> m6_638  [key=0, style=solid];
m6_637 -> m6_29  [key=2, style=dotted];
m6_637 -> m6_639  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_637 -> m6_640  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_638 -> m6_30  [key=2, style=dotted];
m6_638 -> m6_639  [key=0, style=solid];
m6_640 -> m6_30  [key=2, style=dotted];
m6_640 -> m6_641  [key=0, style=solid];
m6_640 -> m6_77  [key=2, style=dotted];
m6_640 -> m6_648  [key=2, style=dotted];
m6_641 -> m6_30  [key=2, style=dotted];
m6_641 -> m6_642  [key=0, style=solid];
m6_641 -> m6_643  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_636 -> m6_30  [key=2, style=dotted];
m6_636 -> m6_637  [key=0, style=solid];
m6_636 -> m6_647  [key=2, style=dotted];
m6_636 -> m6_640  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_639 -> m6_30  [key=2, style=dotted];
m6_639 -> m6_640  [key=0, style=solid];
m6_639 -> m6_37  [key=2, style=dotted];
m6_635 -> m6_30  [key=2, style=dotted];
m6_635 -> m6_81  [key=2, style=dotted];
m6_635 -> m6_636  [key=0, style=solid];
m6_635 -> m6_645  [color=darkseagreen4, key=1, label=text, style=dashed];
m6_634 -> m6_596  [key=2, style=dotted];
m6_634 -> m6_637  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_634 -> m6_638  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_634 -> m6_640  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_634 -> m6_641  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_634 -> m6_636  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_634 -> m6_639  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m6_634 -> m6_635  [key=0, style=solid];
m6_634 -> m6_645  [key=2, style=dotted];
m6_634 -> m6_68  [key=2, style=dotted];
m6_632 -> m6_639  [color=darkseagreen4, key=1, label=t2, style=dashed];
m6_632 -> m6_633  [key=0, style=solid];
m6_633 -> m6_634  [key=0, style=solid];
m6_633 -> m6_644  [key=2, style=dotted];
m6_633 -> m6_67  [key=2, style=dotted];
m6_633 -> m6_642  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_642 -> m6_628  [color=blue, key=0, style=bold];
m6_642 -> m6_643  [key=0, style=solid];
m6_642 -> m6_70  [key=2, style=dotted];
m6_642 -> m6_644  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_29  [key=2, style=dotted];
m6_73 -> m6_83  [key=2, style=dotted];
m6_73 -> m6_75  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_70  [key=2, style=dotted];
m6_731 -> m6_721  [key=0, style=solid];
m6_731 -> m6_37  [key=2, style=dotted];
m6_130 -> m6_32  [key=2, style=dotted];
m6_130 -> m6_30  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_982 -> m6_983  [key=0, style=solid];
m6_982 -> m6_985  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m6_983 -> m6_984  [key=0, style=solid];
m6_983 -> m6_985  [key=0, style=solid];
m6_985 -> m6_986  [key=0, style=solid];
m6_985 -> m6_987  [key=2, style=dotted];
m6_984 -> m6_986  [key=0, style=solid];
m6_984 -> m6_903  [key=2, style=dotted];
m6_986 -> m6_982  [color=blue, key=0, style=bold];
m6_924 -> m6_925  [key=0, style=solid];
m6_925 -> m6_926  [key=0, style=solid];
m6_925 -> m6_934  [key=2, style=dotted];
m6_925 -> m6_930  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_926 -> m6_927  [key=0, style=solid];
m6_926 -> m6_935  [key=2, style=dotted];
m6_930 -> m6_931  [key=0, style=solid];
m6_930 -> m6_937  [key=2, style=dotted];
m6_927 -> m6_928  [key=0, style=solid];
m6_927 -> m6_936  [key=2, style=dotted];
m6_927 -> m6_930  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_928 -> m6_929  [key=0, style=solid];
m6_928 -> m6_93  [key=2, style=dotted];
m6_928 -> m6_932  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m6_929 -> m6_930  [key=0, style=solid];
m6_929 -> m6_29  [key=2, style=dotted];
m6_929 -> m6_931  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_932 -> m6_933  [key=0, style=solid];
m6_932 -> m6_96  [key=2, style=dotted];
m6_932 -> m6_251  [key=2, style=dotted];
m6_931 -> m6_932  [key=0, style=solid];
m6_931 -> m6_85  [key=2, style=dotted];
m6_933 -> m6_924  [color=blue, key=0, style=bold];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_67  [key=2, style=dotted];
m6_253 -> m6_270  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_592 -> m6_593  [key=0, style=solid];
m6_592 -> m6_70  [key=2, style=dotted];
m6_592 -> m6_35  [key=2, style=dotted];
m6_592 -> m6_36  [key=2, style=dotted];
m6_593 -> m6_594  [key=0, style=solid];
m6_593 -> m6_203  [key=2, style=dotted];
m6_593 -> m6_595  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_593 -> m6_70  [key=2, style=dotted];
m6_593 -> m6_35  [key=2, style=dotted];
m6_593 -> m6_36  [key=2, style=dotted];
m6_594 -> m6_592  [color=blue, key=0, style=bold];
m6_594 -> m6_587  [color=blue, key=0, style=bold];
m6_1055 -> m6_1056  [key=0, style=solid];
m6_1056 -> m6_1057  [key=0, style=solid];
m6_1056 -> m6_1050  [key=2, style=dotted];
m6_1057 -> m6_1055  [color=blue, key=0, style=bold];
m6_922 -> m6_974  [key=0, style=solid];
m6_974 -> m6_975  [key=0, style=solid];
m6_974 -> m6_970  [key=2, style=dotted];
m6_975 -> m6_976  [key=0, style=solid];
m6_975 -> m6_903  [key=2, style=dotted];
m6_976 -> m6_922  [color=blue, key=0, style=bold];
m6_185 -> m6_30  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_258  [key=2, style=dotted];
m6_431 -> m6_429  [color=blue, key=0, style=bold];
m6_1041 -> m6_1042  [key=0, style=solid];
m6_1042 -> m6_1043  [key=0, style=solid];
m6_1042 -> m6_996  [key=2, style=dotted];
m6_1043 -> m6_1041  [color=blue, key=0, style=bold];
m6_188 -> m6_255  [key=2, style=dotted];
m6_188 -> m6_30  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_435 -> m6_436  [key=0, style=solid];
m6_435 -> m6_68  [key=2, style=dotted];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_30  [key=2, style=dotted];
m6_204 -> m6_263  [key=2, style=dotted];
m6_204 -> m6_252  [key=2, style=dotted];
m6_204 -> m6_269  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_93  [key=2, style=dotted];
m6_205 -> m6_30  [key=2, style=dotted];
m6_205 -> m6_252  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_29  [key=2, style=dotted];
m6_206 -> m6_208  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_206 -> m6_209  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_206 -> m6_30  [key=2, style=dotted];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_171  [key=2, style=dotted];
m6_207 -> m6_30  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_211  [key=2, style=dotted];
m6_208 -> m6_95  [key=2, style=dotted];
m6_208 -> m6_30  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_130  [key=2, style=dotted];
m6_209 -> m6_30  [key=2, style=dotted];
m6_210 -> m6_204  [color=blue, key=0, style=bold];
m6_210 -> m6_30  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_575 -> m6_576  [key=0, style=solid];
m6_575 -> m6_565  [key=2, style=dotted];
m6_575 -> m6_30  [key=2, style=dotted];
m6_578 -> m6_579  [key=0, style=solid];
m6_578 -> m6_564  [key=2, style=dotted];
m6_578 -> m6_93  [key=2, style=dotted];
m6_574 -> m6_575  [key=0, style=solid];
m6_574 -> m6_586  [key=2, style=dotted];
m6_577 -> m6_578  [key=0, style=solid];
m6_577 -> m6_93  [key=2, style=dotted];
m6_576 -> m6_574  [color=blue, key=0, style=bold];
m6_576 -> m6_93  [key=2, style=dotted];
m6_576 -> m6_577  [key=0, style=solid];
m6_579 -> m6_577  [color=blue, key=0, style=bold];
m6_579 -> m6_584  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_579 -> m6_580  [key=0, style=solid];
m6_579 -> m6_582  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_579 -> m6_583  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_583 -> m6_584  [key=0, style=solid];
m6_583 -> m6_93  [key=2, style=dotted];
m6_584 -> m6_585  [key=0, style=solid];
m6_584 -> m6_67  [key=2, style=dotted];
m6_584 -> m6_475  [color=darkorchid, key=3, label="Local variable object keyValue", style=bold];
m6_584 -> m6_93  [key=2, style=dotted];
m6_585 -> m6_586  [key=0, style=solid];
m6_585 -> m6_68  [key=2, style=dotted];
m6_585 -> m6_564  [color=blue, key=0, style=bold];
m6_587 -> m6_588  [key=0, style=solid];
m6_587 -> m6_120  [key=2, style=dotted];
m6_588 -> m6_589  [key=0, style=solid];
m6_588 -> m6_125  [key=2, style=dotted];
m6_588 -> m6_70  [key=2, style=dotted];
m6_588 -> m6_110  [key=2, style=dotted];
m6_589 -> m6_590  [key=0, style=solid];
m6_589 -> m6_130  [key=2, style=dotted];
m6_590 -> m6_591  [key=0, style=solid];
m6_590 -> m6_130  [key=2, style=dotted];
m6_590 -> m6_592  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m6_590 -> m6_593  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m6_590 -> m6_596  [key=2, style=dotted];
m6_590 -> m6_595  [key=2, style=dotted];
m6_591 -> m6_583  [color=blue, key=0, style=bold];
m6_591 -> m6_30  [key=2, style=dotted];
m6_591 -> m6_592  [key=0, style=solid];
m6_595 -> m6_596  [key=0, style=solid];
m6_596 -> m6_597  [key=0, style=solid];
m6_596 -> m6_67  [key=2, style=dotted];
m6_597 -> m6_598  [key=0, style=solid];
m6_597 -> m6_68  [key=2, style=dotted];
m6_598 -> m6_599  [key=0, style=solid];
m6_598 -> m6_29  [key=2, style=dotted];
m6_598 -> m6_600  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_598 -> m6_70  [key=2, style=dotted];
m6_598 -> m6_110  [key=2, style=dotted];
m6_599 -> m6_600  [key=0, style=solid];
m6_600 -> m6_601  [key=0, style=solid];
m6_600 -> m6_602  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m6_600 -> m6_603  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m6_600 -> m6_596  [key=2, style=dotted];
m6_600 -> m6_117  [key=2, style=dotted];
m6_601 -> m6_595  [color=blue, key=0, style=bold];
m6_601 -> m6_30  [key=2, style=dotted];
m6_601 -> m6_602  [key=0, style=solid];
m6_348 -> m6_349  [color=green, key=0, style=solid];
m6_351 -> m6_352  [color=green, key=0, style=solid];
m6_351 -> m6_29  [key=2, style=dotted];
m6_351 -> m6_353  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_354  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_355  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_356  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_357  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_358  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_359  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_360  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_361  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_362  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_363  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_364  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_365  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_366  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_367  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_351 -> m6_368  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_354 -> m6_355  [color=green, key=0, style=solid];
m6_354 -> m6_120  [key=2, style=dotted];
m6_357 -> m6_358  [color=green, key=0, style=solid];
m6_357 -> m6_125  [key=2, style=dotted];
m6_360 -> m6_361  [color=green, key=0, style=solid];
m6_360 -> m6_346  [key=2, style=dotted];
m6_363 -> m6_364  [color=green, key=0, style=solid];
m6_363 -> m6_373  [key=2, style=dotted];
m6_366 -> m6_367  [color=green, key=0, style=solid];
m6_366 -> m6_374  [key=2, style=dotted];
m6_369 -> m6_370  [color=green, key=0, style=solid];
m6_369 -> m6_371  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_369 -> m6_182  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m6_369 -> m6_593  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m6_372 -> m6_373  [color=green, key=0, style=solid];
m6_372 -> m6_348  [color=blue, key=0, style=bold];
m6_349 -> m6_350  [color=green, key=0, style=solid];
m6_349 -> m6_253  [color=green, key=2, style=dotted];
m6_349 -> m6_67  [key=2, style=dotted];
m6_349 -> m6_370  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_350 -> m6_348  [color=blue, key=0, style=bold];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_68  [key=2, style=dotted];
m6_352 -> m6_353  [color=green, key=0, style=solid];
m6_352 -> m6_32  [color=green, key=2, style=dotted];
m6_353 -> m6_351  [color=blue, key=0, style=bold];
m6_353 -> m6_354  [key=0, style=solid];
m6_355 -> m6_356  [color=green, key=0, style=solid];
m6_355 -> m6_255  [color=green, key=2, style=dotted];
m6_355 -> m6_125  [key=2, style=dotted];
m6_356 -> m6_354  [color=blue, key=0, style=bold];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_125  [key=2, style=dotted];
m6_358 -> m6_359  [color=green, key=0, style=solid];
m6_358 -> m6_259  [color=green, key=2, style=dotted];
m6_358 -> m6_346  [key=2, style=dotted];
m6_359 -> m6_357  [color=blue, key=0, style=bold];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_346  [key=2, style=dotted];
m6_361 -> m6_362  [color=green, key=0, style=solid];
m6_361 -> m6_261  [color=green, key=2, style=dotted];
m6_361 -> m6_373  [key=2, style=dotted];
m6_362 -> m6_360  [color=blue, key=0, style=bold];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_373  [key=2, style=dotted];
m6_364 -> m6_365  [color=green, key=0, style=solid];
m6_364 -> m6_262  [color=green, key=2, style=dotted];
m6_364 -> m6_347  [color=green, key=2, style=dotted];
m6_364 -> m6_374  [key=2, style=dotted];
m6_365 -> m6_363  [color=blue, key=0, style=bold];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_374  [key=2, style=dotted];
m6_367 -> m6_368  [color=green, key=0, style=solid];
m6_367 -> m6_72  [color=green, key=2, style=dotted];
m6_367 -> m6_130  [key=2, style=dotted];
m6_368 -> m6_366  [color=blue, key=0, style=bold];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_347  [key=2, style=dotted];
m6_370 -> m6_371  [color=green, key=0, style=solid];
m6_370 -> m6_251  [color=green, key=2, style=dotted];
m6_370 -> m6_70  [key=2, style=dotted];
m6_371 -> m6_369  [color=blue, key=0, style=bold];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_251  [key=2, style=dotted];
m6_373 -> m6_374  [color=green, key=0, style=solid];
m6_373 -> m6_253  [color=green, key=2, style=dotted];
m6_765 -> m6_766  [key=0, style=solid];
m6_765 -> m6_96  [key=2, style=dotted];
m6_765 -> m6_767  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_767 -> m6_768  [color=green, key=0, style=solid];
m6_767 -> m6_770  [color=green, key=2, style=dotted];
m6_767 -> m6_771  [color=green, key=2, style=dotted];
m6_767 -> m6_37  [key=2, style=dotted];
m6_766 -> m6_767  [color=green, key=0, style=solid];
m6_766 -> m6_769  [key=2, style=dotted];
m6_766 -> m6_37  [key=2, style=dotted];
m6_768 -> m6_765  [color=blue, key=0, style=bold];
m6_768 -> m6_752  [color=blue, key=0, style=bold];
m6_439 -> m6_262  [key=2, style=dotted];
m6_439 -> m6_347  [key=2, style=dotted];
m6_439 -> m6_440  [key=0, style=solid];
m6_439 -> m6_272  [key=2, style=dotted];
m6_439 -> m6_120  [key=2, style=dotted];
m6_442 -> m6_262  [key=2, style=dotted];
m6_442 -> m6_347  [key=2, style=dotted];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_272  [key=2, style=dotted];
m6_442 -> m6_431  [key=2, style=dotted];
m6_324 -> m6_253  [key=2, style=dotted];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_37  [key=2, style=dotted];
m6_427 -> m6_253  [key=2, style=dotted];
m6_427 -> m6_428  [key=0, style=solid];
m6_427 -> m6_429  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_430 -> m6_253  [key=2, style=dotted];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_416  [color=blue, key=0, style=bold];
m6_421 -> m6_261  [key=2, style=dotted];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_260  [key=2, style=dotted];
m6_445 -> m6_72  [key=2, style=dotted];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_447  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_448 -> m6_72  [key=2, style=dotted];
m6_448 -> m6_449  [key=0, style=solid];
m6_448 -> m6_433  [color=blue, key=0, style=bold];
m6_418 -> m6_251  [key=2, style=dotted];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_68  [key=2, style=dotted];
m6_323 -> m6_324  [key=0, style=solid];
m6_323 -> m6_35  [key=2, style=dotted];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_298  [color=blue, key=0, style=bold];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_67  [key=2, style=dotted];
m6_417 -> m6_428  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_417 -> m6_293  [color=darkorchid, key=3, label="Parameter variable string reference", style=bold];
m6_417 -> m6_294  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m6_420 -> m6_421  [key=0, style=solid];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_432  [key=2, style=dotted];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_130  [key=2, style=dotted];
m6_429 -> m6_430  [key=0, style=solid];
m6_429 -> m6_251  [key=2, style=dotted];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_130  [key=2, style=dotted];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_251  [key=2, style=dotted];
m6_438 -> m6_439  [key=0, style=solid];
m6_440 -> m6_438  [color=blue, key=0, style=bold];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_125  [key=2, style=dotted];
m6_440 -> m6_293  [color=darkorchid, key=3, label="Parameter variable string reference", style=bold];
m6_440 -> m6_417  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m6_440 -> m6_5  [color=darkorchid, key=3, label="Parameter variable string reference", style=bold];
m6_440 -> m6_0  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m6_440 -> m6_294  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_431  [key=2, style=dotted];
m6_443 -> m6_441  [color=blue, key=0, style=bold];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_346  [key=2, style=dotted];
m6_325 -> m6_323  [color=blue, key=0, style=bold];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_37  [key=2, style=dotted];
m6_428 -> m6_426  [color=blue, key=0, style=bold];
m6_428 -> m6_429  [key=0, style=solid];
m6_428 -> m6_70  [key=2, style=dotted];
m6_428 -> m6_612  [color=darkorchid, key=3, label="method methodReturn bool ReadForTypeArrayHack", style=bold];
m6_428 -> m6_593  [color=darkorchid, key=3, label="method methodReturn bool ReadForTypeArrayHack", style=bold];
m6_428 -> m6_440  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_422 -> m6_420  [color=blue, key=0, style=bold];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_431  [key=2, style=dotted];
m6_416 -> m6_414  [color=blue, key=0, style=bold];
m6_416 -> m6_417  [key=0, style=solid];
m6_446 -> m6_444  [color=blue, key=0, style=bold];
m6_446 -> m6_447  [key=0, style=solid];
m6_446 -> m6_70  [key=2, style=dotted];
m6_419 -> m6_417  [color=blue, key=0, style=bold];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_29  [key=2, style=dotted];
m6_419 -> m6_421  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_419 -> m6_422  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_419 -> m6_423  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_419 -> m6_424  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_419 -> m6_425  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_419 -> m6_426  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_425 -> m6_423  [color=blue, key=0, style=bold];
m6_425 -> m6_426  [key=0, style=solid];
m6_425 -> m6_125  [key=2, style=dotted];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_264  [key=2, style=dotted];
m6_424 -> m6_265  [key=2, style=dotted];
m6_424 -> m6_120  [key=2, style=dotted];
m6_778 -> m6_775  [color=blue, key=0, style=bold];
m6_778 -> m6_779  [key=0, style=solid];
m6_433 -> m6_272  [key=2, style=dotted];
m6_433 -> m6_264  [key=2, style=dotted];
m6_433 -> m6_265  [key=2, style=dotted];
m6_433 -> m6_434  [key=0, style=solid];
m6_436 -> m6_272  [key=2, style=dotted];
m6_436 -> m6_254  [key=2, style=dotted];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_29  [key=2, style=dotted];
m6_436 -> m6_438  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_436 -> m6_439  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_436 -> m6_440  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_436 -> m6_441  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_436 -> m6_442  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_436 -> m6_443  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_436 -> m6_444  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_434 -> m6_432  [color=blue, key=0, style=bold];
m6_434 -> m6_435  [key=0, style=solid];
m6_434 -> m6_67  [key=2, style=dotted];
m6_434 -> m6_446  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_437 -> m6_435  [color=blue, key=0, style=bold];
m6_437 -> m6_438  [key=0, style=solid];
m6_921 -> m6_959  [key=0, style=solid];
m6_959 -> m6_960  [key=0, style=solid];
m6_959 -> m6_961  [key=2, style=dotted];
m6_960 -> m6_921  [color=blue, key=0, style=bold];
m6_1000 -> m6_1001  [key=0, style=solid];
m6_1001 -> m6_1002  [key=0, style=solid];
m6_1001 -> m6_996  [key=2, style=dotted];
m6_1002 -> m6_1000  [color=blue, key=0, style=bold];
m6_671 -> m6_672  [key=0, style=solid];
m6_672 -> m6_70  [key=2, style=dotted];
m6_672 -> m6_110  [key=2, style=dotted];
m6_672 -> m6_673  [key=0, style=solid];
m6_672 -> m6_674  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_672 -> m6_67  [key=2, style=dotted];
m6_672 -> m6_714  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_678 -> m6_70  [key=2, style=dotted];
m6_678 -> m6_679  [key=0, style=solid];
m6_678 -> m6_35  [key=2, style=dotted];
m6_678 -> m6_36  [key=2, style=dotted];
m6_678 -> m6_171  [key=2, style=dotted];
m6_682 -> m6_30  [key=2, style=dotted];
m6_682 -> m6_683  [key=0, style=solid];
m6_682 -> m6_77  [key=2, style=dotted];
m6_682 -> m6_31  [key=2, style=dotted];
m6_683 -> m6_30  [key=2, style=dotted];
m6_683 -> m6_684  [key=0, style=solid];
m6_683 -> m6_37  [key=2, style=dotted];
m6_676 -> m6_30  [key=2, style=dotted];
m6_676 -> m6_81  [key=2, style=dotted];
m6_676 -> m6_677  [key=0, style=solid];
m6_676 -> m6_29  [key=2, style=dotted];
m6_676 -> m6_678  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_679  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_680  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_681  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_682  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_683  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_684  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_685  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_686  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_687  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_688  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_689  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_690  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_691  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_692  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_693  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_694  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_695  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_696  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_697  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_698  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_699  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_700  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_701  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_702  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_703  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_704  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_705  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_706  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_707  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_708  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_709  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_710  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_711  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_712  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_676 -> m6_713  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_677 -> m6_30  [key=2, style=dotted];
m6_677 -> m6_678  [key=0, style=solid];
m6_679 -> m6_30  [key=2, style=dotted];
m6_679 -> m6_680  [key=0, style=solid];
m6_679 -> m6_37  [key=2, style=dotted];
m6_679 -> m6_637  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.RequiredValue> requiredProperties", style=bold];
m6_680 -> m6_30  [key=2, style=dotted];
m6_680 -> m6_681  [key=0, style=solid];
m6_681 -> m6_30  [key=2, style=dotted];
m6_681 -> m6_682  [key=0, style=solid];
m6_681 -> m6_37  [key=2, style=dotted];
m6_673 -> m6_682  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_673 -> m6_683  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_673 -> m6_674  [key=0, style=solid];
m6_673 -> m6_643  [key=2, style=dotted];
m6_673 -> m6_68  [key=2, style=dotted];
m6_673 -> m6_676  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_674 -> m6_675  [key=0, style=solid];
m6_674 -> m6_644  [key=2, style=dotted];
m6_675 -> m6_678  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_675 -> m6_596  [key=2, style=dotted];
m6_675 -> m6_682  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_675 -> m6_683  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_675 -> m6_676  [key=0, style=solid];
m6_675 -> m6_677  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_675 -> m6_679  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_675 -> m6_680  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_675 -> m6_681  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m6_675 -> m6_685  [key=2, style=dotted];
m6_675 -> m6_647  [key=2, style=dotted];
m6_684 -> m6_671  [color=blue, key=0, style=bold];
m6_684 -> m6_685  [key=0, style=solid];
m6_684 -> m6_171  [key=2, style=dotted];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_68  [key=2, style=dotted];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_29  [key=2, style=dotted];
m6_255 -> m6_257  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_258  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_259  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_260  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_261  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_262  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_263  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_264  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_265  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_266  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_267  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_255 -> m6_268  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_122  [key=2, style=dotted];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_122  [key=2, style=dotted];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_271  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_248 -> m6_118  [color=blue, key=0, style=bold];
m6_954 -> m6_1044  [key=0, style=solid];
m6_1044 -> m6_1045  [key=0, style=solid];
m6_1044 -> m6_1046  [key=2, style=dotted];
m6_1044 -> m6_1047  [key=2, style=dotted];
m6_1045 -> m6_954  [color=blue, key=0, style=bold];
m6_566 -> m6_168  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_566 -> m6_70  [key=2, style=dotted];
m6_566 -> m6_567  [key=0, style=solid];
m6_566 -> m6_568  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_569  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_570  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_571  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_572  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_573  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_575  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_579  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_581  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_566 -> m6_244  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m6_571 -> m6_70  [key=2, style=dotted];
m6_571 -> m6_572  [key=0, style=solid];
m6_571 -> m6_35  [key=2, style=dotted];
m6_571 -> m6_36  [key=2, style=dotted];
m6_571 -> m6_203  [key=2, style=dotted];
m6_571 -> m6_574  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_567 -> m6_568  [key=0, style=solid];
m6_567 -> m6_586  [key=2, style=dotted];
m6_567 -> m6_67  [key=2, style=dotted];
m6_568 -> m6_30  [key=2, style=dotted];
m6_568 -> m6_569  [key=0, style=solid];
m6_568 -> m6_68  [key=2, style=dotted];
m6_569 -> m6_570  [key=0, style=solid];
m6_569 -> m6_586  [key=2, style=dotted];
m6_569 -> m6_29  [key=2, style=dotted];
m6_569 -> m6_571  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_569 -> m6_575  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_569 -> m6_572  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_569 -> m6_578  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_570 -> m6_30  [key=2, style=dotted];
m6_570 -> m6_571  [key=0, style=solid];
m6_570 -> m6_564  [key=2, style=dotted];
m6_572 -> m6_30  [key=2, style=dotted];
m6_572 -> m6_81  [key=2, style=dotted];
m6_572 -> m6_573  [key=0, style=solid];
m6_572 -> m6_203  [key=2, style=dotted];
m6_572 -> m6_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_573 -> m6_574  [key=0, style=solid];
m6_573 -> m6_576  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_573 -> m6_577  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_573 -> m6_578  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_573 -> m6_566  [color=blue, key=0, style=bold];
m6_581 -> m6_30  [key=2, style=dotted];
m6_581 -> m6_81  [key=2, style=dotted];
m6_581 -> m6_582  [key=0, style=solid];
m6_581 -> m6_203  [key=2, style=dotted];
m6_581 -> m6_583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_581 -> m6_553  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m6_581 -> m6_182  [color=darkorchid, key=3, label="Local variable bool exit", style=bold];
m6_581 -> m6_488  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<Newtonsoft.Json.Serialization.JsonProperty, object> ResolvePropertyAndConstructorValues", style=bold];
m6_580 -> m6_581  [key=0, style=solid];
m6_580 -> m6_586  [key=2, style=dotted];
m6_582 -> m6_583  [key=0, style=solid];
m6_582 -> m6_93  [key=2, style=dotted];
m6_582 -> m6_580  [color=blue, key=0, style=bold];
m6_501 -> m6_502  [key=0, style=solid];
m6_501 -> m6_35  [key=2, style=dotted];
m6_779 -> m6_780  [key=0, style=solid];
m6_779 -> m6_93  [key=2, style=dotted];
m6_779 -> m6_797  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_792 -> m6_793  [key=0, style=solid];
m6_792 -> m6_648  [key=2, style=dotted];
m6_211 -> m6_30  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_127  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_37  [key=2, style=dotted];
m6_119 -> m6_97  [color=blue, key=0, style=bold];
m6_119 -> m6_32  [key=2, style=dotted];
m6_119 -> m6_30  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_37  [key=2, style=dotted];
m6_698 -> m6_699  [key=0, style=solid];
m6_698 -> m6_31  [key=2, style=dotted];
m6_699 -> m6_168  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m6_699 -> m6_70  [key=2, style=dotted];
m6_699 -> m6_110  [key=2, style=dotted];
m6_699 -> m6_6  [color=darkorchid, key=3, label="Local variable object newObject", style=bold];
m6_699 -> m6_699  [color=darkorchid, key=3, label="method methodReturn object CreateAndPopulateObject", style=bold];
m6_699 -> m6_700  [key=0, style=solid];
m6_699 -> m6_701  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_699 -> m6_704  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_699 -> m6_275  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m6_699 -> m6_716  [color=darkorchid, key=3, label="method methodReturn object CreateAndPopulateObject", style=bold];
m6_699 -> m6_37  [key=2, style=dotted];
m6_706 -> m6_70  [key=2, style=dotted];
m6_706 -> m6_707  [key=0, style=solid];
m6_706 -> m6_35  [key=2, style=dotted];
m6_706 -> m6_36  [key=2, style=dotted];
m6_706 -> m6_631  [key=2, style=dotted];
m6_700 -> m6_701  [key=0, style=solid];
m6_700 -> m6_643  [key=2, style=dotted];
m6_700 -> m6_710  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_700 -> m6_711  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_700 -> m6_712  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_700 -> m6_716  [key=2, style=dotted];
m6_701 -> m6_702  [key=0, style=solid];
m6_701 -> m6_644  [key=2, style=dotted];
m6_701 -> m6_37  [key=2, style=dotted];
m6_704 -> m6_30  [key=2, style=dotted];
m6_704 -> m6_705  [key=0, style=solid];
m6_704 -> m6_171  [key=2, style=dotted];
m6_710 -> m6_30  [key=2, style=dotted];
m6_710 -> m6_711  [key=0, style=solid];
m6_710 -> m6_35  [key=2, style=dotted];
m6_711 -> m6_30  [key=2, style=dotted];
m6_711 -> m6_712  [key=0, style=solid];
m6_711 -> m6_77  [key=2, style=dotted];
m6_711 -> m6_37  [key=2, style=dotted];
m6_712 -> m6_30  [key=2, style=dotted];
m6_712 -> m6_713  [key=0, style=solid];
m6_712 -> m6_130  [key=2, style=dotted];
m6_703 -> m6_30  [key=2, style=dotted];
m6_703 -> m6_81  [key=2, style=dotted];
m6_703 -> m6_704  [key=0, style=solid];
m6_703 -> m6_37  [key=2, style=dotted];
m6_705 -> m6_30  [key=2, style=dotted];
m6_705 -> m6_706  [key=0, style=solid];
m6_705 -> m6_37  [key=2, style=dotted];
m6_707 -> m6_30  [key=2, style=dotted];
m6_707 -> m6_708  [key=0, style=solid];
m6_707 -> m6_37  [key=2, style=dotted];
m6_708 -> m6_30  [key=2, style=dotted];
m6_708 -> m6_709  [key=0, style=solid];
m6_708 -> m6_297  [key=2, style=dotted];
m6_709 -> m6_30  [key=2, style=dotted];
m6_709 -> m6_710  [key=0, style=solid];
m6_709 -> m6_37  [key=2, style=dotted];
m6_702 -> m6_706  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_596  [key=2, style=dotted];
m6_702 -> m6_704  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_710  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_711  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_712  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_703  [key=0, style=solid];
m6_702 -> m6_705  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_707  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_708  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_709  [color=darkseagreen4, key=1, label=descendantsAndSelf, style=dashed];
m6_702 -> m6_714  [key=2, style=dotted];
m6_702 -> m6_717  [key=2, style=dotted];
m6_713 -> m6_698  [color=blue, key=0, style=bold];
m6_713 -> m6_714  [key=0, style=solid];
m6_713 -> m6_37  [key=2, style=dotted];
m6_644 -> m6_645  [key=0, style=solid];
m6_644 -> m6_649  [key=2, style=dotted];
m6_644 -> m6_650  [key=2, style=dotted];
m6_993 -> m6_994  [key=0, style=solid];
m6_994 -> m6_995  [key=0, style=solid];
m6_994 -> m6_996  [key=2, style=dotted];
m6_995 -> m6_993  [color=blue, key=0, style=bold];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_50  [key=2, style=dotted];
m6_77 -> m6_79  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_77 -> m6_81  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_120 -> m6_70  [key=2, style=dotted];
m6_120 -> m6_30  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_905 -> m6_906  [key=0, style=solid];
m6_906 -> m6_907  [key=0, style=solid];
m6_906 -> m6_93  [key=2, style=dotted];
m6_906 -> m6_917  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_907 -> m6_908  [key=0, style=solid];
m6_907 -> m6_919  [key=2, style=dotted];
m6_907 -> m6_909  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_907 -> m6_910  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_907 -> m6_911  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_907 -> m6_912  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_907 -> m6_913  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_907 -> m6_914  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_907 -> m6_915  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_907 -> m6_916  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_917 -> m6_918  [key=0, style=solid];
m6_917 -> m6_96  [key=2, style=dotted];
m6_917 -> m6_251  [key=2, style=dotted];
m6_908 -> m6_909  [key=0, style=solid];
m6_908 -> m6_920  [key=2, style=dotted];
m6_909 -> m6_910  [key=0, style=solid];
m6_909 -> m6_37  [key=2, style=dotted];
m6_910 -> m6_911  [key=0, style=solid];
m6_910 -> m6_921  [key=2, style=dotted];
m6_911 -> m6_912  [key=0, style=solid];
m6_911 -> m6_37  [key=2, style=dotted];
m6_912 -> m6_913  [key=0, style=solid];
m6_912 -> m6_37  [key=2, style=dotted];
m6_913 -> m6_914  [key=0, style=solid];
m6_913 -> m6_922  [key=2, style=dotted];
m6_914 -> m6_915  [key=0, style=solid];
m6_914 -> m6_37  [key=2, style=dotted];
m6_915 -> m6_916  [key=0, style=solid];
m6_915 -> m6_923  [key=2, style=dotted];
m6_916 -> m6_917  [key=0, style=solid];
m6_916 -> m6_37  [key=2, style=dotted];
m6_918 -> m6_905  [color=blue, key=0, style=bold];
m6_938 -> m6_939  [key=0, style=solid];
m6_939 -> m6_940  [key=0, style=solid];
m6_940 -> m6_941  [key=0, style=solid];
m6_940 -> m6_470  [key=2, style=dotted];
m6_940 -> m6_471  [key=2, style=dotted];
m6_940 -> m6_944  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_941 -> m6_942  [key=0, style=solid];
m6_941 -> m6_93  [key=2, style=dotted];
m6_941 -> m6_945  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_944 -> m6_945  [key=0, style=solid];
m6_944 -> m6_947  [key=2, style=dotted];
m6_942 -> m6_943  [key=0, style=solid];
m6_942 -> m6_29  [key=2, style=dotted];
m6_942 -> m6_944  [color=darkseagreen4, key=1, label=w, style=dashed];
m6_945 -> m6_946  [key=0, style=solid];
m6_945 -> m6_96  [key=2, style=dotted];
m6_945 -> m6_251  [key=2, style=dotted];
m6_943 -> m6_944  [key=0, style=solid];
m6_946 -> m6_938  [color=blue, key=0, style=bold];
m6_179 -> m6_32  [key=2, style=dotted];
m6_179 -> m6_30  [key=2, style=dotted];
m6_179 -> m6_180  [key=0, style=solid];
m6_1035 -> m6_1036  [key=0, style=solid];
m6_1036 -> m6_1037  [key=0, style=solid];
m6_1036 -> m6_996  [key=2, style=dotted];
m6_1037 -> m6_1035  [color=blue, key=0, style=bold];
m6_1030 -> m6_1031  [key=0, style=solid];
m6_1030 -> m6_1033  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_1031 -> m6_1032  [key=0, style=solid];
m6_1031 -> m6_1033  [key=0, style=solid];
m6_1033 -> m6_1034  [key=0, style=solid];
m6_1033 -> m6_838  [key=2, style=dotted];
m6_1032 -> m6_1034  [key=0, style=solid];
m6_1034 -> m6_1030  [color=blue, key=0, style=bold];
m6_1015 -> m6_1016  [key=0, style=solid];
m6_1016 -> m6_1017  [key=0, style=solid];
m6_1016 -> m6_996  [key=2, style=dotted];
m6_1017 -> m6_1015  [color=blue, key=0, style=bold];
m6_125 -> m6_30  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_127 -> m6_253  [key=2, style=dotted];
m6_127 -> m6_30  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_30  [key=2, style=dotted];
m6_200 -> m6_254  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_203  [key=2, style=dotted];
m6_201 -> m6_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_201 -> m6_133  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m6_201 -> m6_237  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m6_201 -> m6_256  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_201 -> m6_378  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_201 -> m6_390  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m6_201 -> m6_30  [key=2, style=dotted];
m6_201 -> m6_266  [key=2, style=dotted];
m6_201 -> m6_267  [key=2, style=dotted];
m6_201 -> m6_252  [key=2, style=dotted];
m6_202 -> m6_200  [color=blue, key=0, style=bold];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_266  [key=2, style=dotted];
m6_202 -> m6_258  [key=2, style=dotted];
m6_202 -> m6_267  [key=2, style=dotted];
m6_202 -> m6_268  [key=2, style=dotted];
m6_175 -> m6_30  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_254  [key=2, style=dotted];
m6_171 -> m6_32  [key=2, style=dotted];
m6_171 -> m6_30  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_997 -> m6_998  [key=0, style=solid];
m6_998 -> m6_999  [key=0, style=solid];
m6_998 -> m6_996  [key=2, style=dotted];
m6_999 -> m6_997  [color=blue, key=0, style=bold];
m6_232 -> m6_32  [key=2, style=dotted];
m6_232 -> m6_30  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_273  [key=2, style=dotted];
m6_232 -> m6_272  [key=2, style=dotted];
m6_232 -> m6_249  [key=2, style=dotted];
m6_235 -> m6_32  [key=2, style=dotted];
m6_235 -> m6_30  [key=2, style=dotted];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_273  [key=2, style=dotted];
m6_235 -> m6_272  [key=2, style=dotted];
m6_235 -> m6_122  [key=2, style=dotted];
m6_236 -> m6_32  [key=2, style=dotted];
m6_236 -> m6_30  [key=2, style=dotted];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_273  [key=2, style=dotted];
m6_236 -> m6_272  [key=2, style=dotted];
m6_236 -> m6_249  [key=2, style=dotted];
m6_237 -> m6_32  [key=2, style=dotted];
m6_237 -> m6_30  [key=2, style=dotted];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_273  [key=2, style=dotted];
m6_237 -> m6_272  [key=2, style=dotted];
m6_237 -> m6_120  [key=2, style=dotted];
m6_233 -> m6_255  [key=2, style=dotted];
m6_233 -> m6_30  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_273  [key=2, style=dotted];
m6_233 -> m6_272  [key=2, style=dotted];
m6_233 -> m6_122  [key=2, style=dotted];
m6_124 -> m6_30  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_252  [key=2, style=dotted];
m6_244 -> m6_30  [key=2, style=dotted];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_271  [key=2, style=dotted];
m6_244 -> m6_273  [key=2, style=dotted];
m6_244 -> m6_246  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_203 -> m6_30  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_263  [key=2, style=dotted];
m6_203 -> m6_252  [key=2, style=dotted];
m6_203 -> m6_269  [key=2, style=dotted];
m6_227 -> m6_30  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_252  [key=2, style=dotted];
m6_227 -> m6_67  [key=2, style=dotted];
m6_227 -> m6_245  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_228 -> m6_30  [key=2, style=dotted];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> m6_252  [key=2, style=dotted];
m6_228 -> m6_68  [key=2, style=dotted];
m6_230 -> m6_30  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_270  [key=2, style=dotted];
m6_230 -> m6_271  [key=2, style=dotted];
m6_231 -> m6_30  [key=2, style=dotted];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_270  [key=2, style=dotted];
m6_231 -> m6_258  [key=2, style=dotted];
m6_231 -> m6_272  [key=2, style=dotted];
m6_231 -> m6_248  [key=2, style=dotted];
m6_240 -> m6_30  [key=2, style=dotted];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_270  [key=2, style=dotted];
m6_240 -> m6_252  [key=2, style=dotted];
m6_240 -> m6_272  [key=2, style=dotted];
m6_240 -> m6_122  [key=2, style=dotted];
m6_234 -> m6_30  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_273  [key=2, style=dotted];
m6_234 -> m6_256  [key=2, style=dotted];
m6_234 -> m6_272  [key=2, style=dotted];
m6_234 -> m6_249  [key=2, style=dotted];
m6_238 -> m6_30  [key=2, style=dotted];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_254  [key=2, style=dotted];
m6_238 -> m6_272  [key=2, style=dotted];
m6_238 -> m6_122  [key=2, style=dotted];
m6_241 -> m6_30  [key=2, style=dotted];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_271  [key=2, style=dotted];
m6_241 -> m6_273  [key=2, style=dotted];
m6_241 -> m6_122  [key=2, style=dotted];
m6_242 -> m6_30  [key=2, style=dotted];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_271  [key=2, style=dotted];
m6_242 -> m6_273  [key=2, style=dotted];
m6_242 -> m6_35  [key=2, style=dotted];
m6_243 -> m6_30  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_271  [key=2, style=dotted];
m6_243 -> m6_273  [key=2, style=dotted];
m6_243 -> m6_37  [key=2, style=dotted];
m6_245 -> m6_30  [key=2, style=dotted];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_271  [key=2, style=dotted];
m6_245 -> m6_273  [key=2, style=dotted];
m6_245 -> m6_70  [key=2, style=dotted];
m6_247 -> m6_30  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_226  [color=blue, key=0, style=bold];
m6_226 -> m6_227  [key=0, style=solid];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_231  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_240  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_239  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_29  [key=2, style=dotted];
m6_229 -> m6_232  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_233  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_234  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_235  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_236  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_237  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_238  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_241  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_242  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_229 -> m6_243  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_270  [key=2, style=dotted];
m6_239 -> m6_274  [key=2, style=dotted];
m6_239 -> m6_250  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_273  [key=2, style=dotted];
m6_246 -> m6_271  [key=2, style=dotted];
m6_246 -> m6_251  [key=2, style=dotted];
m6_1061 -> m6_575  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_1061 -> m6_578  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_1062 -> m6_957  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_959  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_962  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_965  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_966  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_975  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_977  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_978  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_980  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_984  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1062 -> m6_985  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m6_1064 -> m6_1032  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m6_1065 -> m6_1051  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter", style=dashed];
m6_1065 -> m6_1056  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter", style=dashed];
m7_119 -> m7_5  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.ReferenceLoopHandling? referenceLoopHandling", style=bold];
m7_119 -> m7_124  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_119 -> m7_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReferenceLoopHandling?", style=dashed];
m7_119 -> m7_73  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_119 -> m7_71  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_119 -> m7_123  [color=darkorchid, key=3, label="method methodReturn bool CheckForCircularReference", style=bold];
m7_119 -> m7_80  [color=darkorchid, key=3, label="method methodReturn bool CheckForCircularReference", style=bold];
m7_119 -> m7_98  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_119 -> m7_67  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_119 -> m7_231  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_119 -> m7_305  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_119 -> m7_122  [key=0, style=solid];
m7_119 -> m7_127  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_133  [key=0, style=solid];
m7_124 -> m7_135  [key=2, style=dotted];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_128  [key=0, style=solid];
m7_125 -> m7_130  [key=0, style=solid];
m7_125 -> m7_132  [key=0, style=solid];
m7_125 -> m7_116  [key=2, style=dotted];
m7_132 -> m7_134  [key=0, style=solid];
m7_132 -> m7_136  [key=2, style=dotted];
m7_132 -> m7_121  [key=2, style=dotted];
m7_123 -> m7_134  [key=0, style=solid];
m7_122 -> m7_124  [key=0, style=solid];
m7_122 -> m7_123  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_126 -> m7_127  [key=0, style=solid];
m7_128 -> m7_129  [key=0, style=solid];
m7_130 -> m7_131  [key=0, style=solid];
m7_127 -> m7_20  [key=2, style=dotted];
m7_127 -> m7_134  [key=0, style=solid];
m7_127 -> m7_121  [key=2, style=dotted];
m7_127 -> m7_120  [key=2, style=dotted];
m7_129 -> m7_134  [key=0, style=solid];
m7_131 -> m7_134  [key=0, style=solid];
m7_134 -> m7_119  [color=blue, key=0, style=bold];
m7_328 -> m7_321  [color=blue, key=0, style=bold];
m7_321 -> m7_302  [color=darkorchid, key=3, label="Parameter variable System.Collections.DictionaryEntry entry", style=bold];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_323  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m7_325 -> m7_20  [key=2, style=dotted];
m7_325 -> m7_144  [key=2, style=dotted];
m7_325 -> m7_325  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_327  [key=0, style=solid];
m7_322 -> m7_323  [key=0, style=solid];
m7_323 -> m7_325  [key=0, style=solid];
m7_323 -> m7_323  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m7_323 -> m7_324  [key=0, style=solid];
m7_326 -> m7_328  [key=0, style=solid];
m7_327 -> m7_328  [key=0, style=solid];
m7_327 -> m7_327  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m7_327 -> m7_330  [key=2, style=dotted];
m7_324 -> m7_328  [key=0, style=solid];
m7_324 -> m7_324  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m7_324 -> m7_329  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_142  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonSerializerProxy GetInternalSerializer", style=bold];
m7_10 -> m7_12  [key=2, style=dotted];
m7_10 -> m7_13  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_13  [key=0, style=solid];
m7_11 -> m7_6  [color=blue, key=0, style=bold];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_15  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_10  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_4 -> m7_6  [key=0, style=solid];
m7_4 -> m7_7  [key=2, style=dotted];
m7_144 -> m7_123  [color=darkorchid, key=3, label="method methodReturn bool TryConvertToString", style=bold];
m7_144 -> m7_80  [color=darkorchid, key=3, label="method methodReturn bool TryConvertToString", style=bold];
m7_144 -> m7_68  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_144 -> m7_160  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_148  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_144 -> m7_150  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_144 -> m7_151  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_144 -> m7_322  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m7_146 -> m7_20  [key=2, style=dotted];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_150  [key=0, style=solid];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_156  [key=2, style=dotted];
m7_145 -> m7_147  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_145 -> m7_148  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_158  [key=2, style=dotted];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_153  [key=0, style=solid];
m7_151 -> m7_152  [key=0, style=solid];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_150  [key=0, style=solid];
m7_147 -> m7_157  [key=2, style=dotted];
m7_149 -> m7_155  [key=0, style=solid];
m7_153 -> m7_155  [color=darkseagreen4, key=1, label="out string", style=dashed];
m7_153 -> m7_154  [key=0, style=solid];
m7_152 -> m7_155  [key=0, style=solid];
m7_154 -> m7_155  [key=0, style=solid];
m7_155 -> m7_144  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_10  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_96 -> m7_24  [color=green, key=3, label="Parameter variable Newtonsoft.Json.PreserveReferencesHandling flag", style=bold];
m7_96 -> m7_201  [key=0, style=solid];
m7_96 -> m7_218  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.PreserveReferencesHandling flag", style=bold];
m7_201 -> m7_202  [key=0, style=solid];
m7_202 -> m7_96  [color=blue, key=0, style=bold];
m7_76 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonISerializableContract contract", style=bold];
m7_76 -> m7_249  [key=0, style=solid];
m7_76 -> m7_250  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m7_76 -> m7_253  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m7_76 -> m7_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_76 -> m7_259  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m7_76 -> m7_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_76 -> m7_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_76 -> m7_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_76 -> m7_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_165  [key=2, style=dotted];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_190  [key=2, style=dotted];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_263  [key=2, style=dotted];
m7_256 -> m7_9  [key=2, style=dotted];
m7_256 -> m7_256  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m7_256 -> m7_254  [key=0, style=solid];
m7_256 -> m7_8  [key=2, style=dotted];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_196  [key=2, style=dotted];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_166  [key=2, style=dotted];
m7_251 -> m7_35  [key=2, style=dotted];
m7_251 -> m7_252  [key=0, style=solid];
m7_255 -> m7_37  [key=2, style=dotted];
m7_255 -> m7_256  [key=0, style=solid];
m7_255 -> m7_255  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m7_257 -> m7_39  [key=2, style=dotted];
m7_257 -> m7_258  [key=0, style=solid];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_261  [key=2, style=dotted];
m7_252 -> m7_262  [key=2, style=dotted];
m7_252 -> m7_254  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_257  [key=0, style=solid];
m7_260 -> m7_76  [color=blue, key=0, style=bold];
m7_191 -> m7_69  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m7_191 -> m7_123  [color=darkorchid, key=3, label="method methodReturn bool ShouldSerialize", style=bold];
m7_191 -> m7_177  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m7_191 -> m7_337  [key=0, style=solid];
m7_191 -> m7_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m7_337 -> m7_338  [key=0, style=solid];
m7_337 -> m7_339  [key=0, style=solid];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_341  [key=2, style=dotted];
m7_338 -> m7_340  [key=0, style=solid];
m7_340 -> m7_191  [color=blue, key=0, style=bold];
m7_77 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDynamicContract contract", style=bold];
m7_77 -> m7_264  [key=0, style=solid];
m7_77 -> m7_265  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m7_77 -> m7_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_77 -> m7_275  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m7_77 -> m7_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_77 -> m7_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_77 -> m7_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_77 -> m7_267  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m7_77 -> m7_269  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m7_77 -> m7_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_165  [key=2, style=dotted];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_190  [key=2, style=dotted];
m7_272 -> m7_9  [key=2, style=dotted];
m7_272 -> m7_267  [key=0, style=solid];
m7_272 -> m7_8  [key=2, style=dotted];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_196  [key=2, style=dotted];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_166  [key=2, style=dotted];
m7_266 -> m7_35  [key=2, style=dotted];
m7_266 -> m7_267  [key=0, style=solid];
m7_271 -> m7_37  [key=2, style=dotted];
m7_271 -> m7_272  [key=0, style=solid];
m7_273 -> m7_39  [key=2, style=dotted];
m7_273 -> m7_274  [key=0, style=solid];
m7_268 -> m7_269  [key=0, style=solid];
m7_269 -> m7_272  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m7_269 -> m7_270  [key=0, style=solid];
m7_269 -> m7_267  [key=0, style=solid];
m7_269 -> m7_278  [key=2, style=dotted];
m7_267 -> m7_273  [key=0, style=solid];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_269  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m7_267 -> m7_277  [key=2, style=dotted];
m7_267 -> m7_270  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m7_270 -> m7_271  [key=0, style=solid];
m7_270 -> m7_279  [key=2, style=dotted];
m7_276 -> m7_77  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_36 -> m7_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_36 -> m7_197  [key=0, style=solid];
m7_36 -> m7_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_36 -> m7_69  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_36 -> m7_73  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_36 -> m7_71  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_200  [key=2, style=dotted];
m7_198 -> m7_143  [key=2, style=dotted];
m7_197 -> m7_37  [key=2, style=dotted];
m7_197 -> m7_198  [key=0, style=solid];
m7_199 -> m7_36  [color=blue, key=0, style=bold];
m7_68 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonStringContract contract", style=bold];
m7_68 -> m7_159  [key=0, style=solid];
m7_68 -> m7_163  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_68 -> m7_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_68 -> m7_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_165  [key=2, style=dotted];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_166  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_143  [key=2, style=dotted];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_144  [key=2, style=dotted];
m7_164 -> m7_68  [color=blue, key=0, style=bold];
m7_203 -> m7_34  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag", style=bold];
m7_203 -> m7_204  [key=0, style=solid];
m7_204 -> m7_205  [key=0, style=solid];
m7_205 -> m7_203  [color=blue, key=0, style=bold];
m7_9 -> m7_47  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_40  [key=0, style=solid];
m7_9 -> m7_41  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_9 -> m7_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_9 -> m7_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_9 -> m7_2  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_9 -> m7_98  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m7_9 -> m7_73  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_9 -> m7_76  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_9 -> m7_77  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_9 -> m7_71  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_9 -> m7_231  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_9 -> m7_268  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_9 -> m7_305  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_9 -> m7_8  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m7_9 -> m7_232  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m7_9 -> m7_306  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract valueContract", style=bold];
m7_9 -> m7_5  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_9 -> m7_227  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_9 -> m7_299  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_9 -> m7_11  [key=0, style=solid];
m7_47 -> m7_64  [color=green, key=0, style=solid];
m7_47 -> m7_22  [color=green, key=2, style=dotted];
m7_46 -> m7_47  [color=green, key=0, style=solid];
m7_46 -> m7_48  [key=0, style=solid];
m7_44 -> m7_46  [key=0, style=solid];
m7_44 -> m7_44  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_66  [key=2, style=dotted];
m7_45 -> m7_64  [key=0, style=solid];
m7_45 -> m7_67  [key=2, style=dotted];
m7_49 -> m7_64  [key=0, style=solid];
m7_49 -> m7_68  [key=2, style=dotted];
m7_51 -> m7_64  [key=0, style=solid];
m7_51 -> m7_69  [key=2, style=dotted];
m7_54 -> m7_64  [key=0, style=solid];
m7_54 -> m7_70  [key=2, style=dotted];
m7_54 -> m7_71  [key=2, style=dotted];
m7_57 -> m7_64  [key=0, style=solid];
m7_57 -> m7_72  [key=2, style=dotted];
m7_57 -> m7_73  [key=2, style=dotted];
m7_59 -> m7_64  [key=0, style=solid];
m7_59 -> m7_74  [key=2, style=dotted];
m7_59 -> m7_75  [key=2, style=dotted];
m7_61 -> m7_64  [key=0, style=solid];
m7_61 -> m7_76  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_77  [key=2, style=dotted];
m7_40 -> m7_44  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_44  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_65  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_55  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_58  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_60  [key=0, style=solid];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_62  [key=0, style=solid];
m7_62 -> m7_64  [key=0, style=solid];
m7_62 -> m7_63  [key=0, style=solid];
m7_43 -> m7_64  [key=0, style=solid];
m7_64 -> m7_9  [color=blue, key=0, style=bold];
m7_78 -> m7_5  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m7_78 -> m7_94  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_78 -> m7_232  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_78 -> m7_306  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_78 -> m7_80  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteReference", style=bold];
m7_78 -> m7_98  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_78 -> m7_67  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_78 -> m7_231  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_78 -> m7_305  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_78 -> m7_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m7_78 -> m7_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m7_78 -> m7_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_78 -> m7_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_90 -> m7_96  [key=2, style=dotted];
m7_90 -> m7_92  [key=0, style=solid];
m7_91 -> m7_96  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_97  [key=2, style=dotted];
m7_80 -> m7_95  [key=0, style=solid];
m7_83 -> m7_96  [color=darkorchid, key=3, label="Local variable bool? isReference", style=bold];
m7_83 -> m7_5  [color=darkorchid, key=3, label="Local variable bool? isReference", style=bold];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_86  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_83 -> m7_88  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_83 -> m7_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_91  [key=0, style=solid];
m7_92 -> m7_94  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_81  [key=0, style=solid];
m7_81 -> m7_83  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_86  [key=0, style=solid];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_88  [key=0, style=solid];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_92  [key=0, style=solid];
m7_85 -> m7_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_88  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_87 -> m7_92  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_87 -> m7_88  [key=0, style=solid];
m7_93 -> m7_95  [key=0, style=solid];
m7_82 -> m7_95  [key=0, style=solid];
m7_95 -> m7_78  [color=blue, key=0, style=bold];
m7_71 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_71 -> m7_290  [key=0, style=solid];
m7_71 -> m7_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedDictionary", style=dashed];
m7_71 -> m7_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m7_71 -> m7_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m7_71 -> m7_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m7_71 -> m7_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m7_71 -> m7_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedDictionary", style=dashed];
m7_71 -> m7_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedDictionary", style=dashed];
m7_71 -> m7_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedDictionary", style=dashed];
m7_71 -> m7_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m7_71 -> m7_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_71 -> m7_53  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_165  [key=2, style=dotted];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_190  [key=2, style=dotted];
m7_293 -> m7_96  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_142  [key=2, style=dotted];
m7_296 -> m7_143  [key=2, style=dotted];
m7_297 -> m7_34  [key=2, style=dotted];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_299  [key=0, style=solid];
m7_298 -> m7_36  [key=2, style=dotted];
m7_298 -> m7_299  [key=0, style=solid];
m7_298 -> m7_20  [key=2, style=dotted];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_21  [key=2, style=dotted];
m7_299 -> m7_312  [color=darkseagreen4, key=1, label=childValuesContract, style=dashed];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_321  [key=2, style=dotted];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_8  [key=2, style=dotted];
m7_306 -> m7_312  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_310  [key=0, style=solid];
m7_307 -> m7_78  [key=2, style=dotted];
m7_309 -> m7_313  [key=0, style=solid];
m7_309 -> m7_302  [key=0, style=solid];
m7_309 -> m7_118  [key=2, style=dotted];
m7_310 -> m7_311  [key=0, style=solid];
m7_310 -> m7_302  [key=0, style=solid];
m7_310 -> m7_119  [key=2, style=dotted];
m7_312 -> m7_9  [key=2, style=dotted];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_302  [key=0, style=solid];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_316  [key=0, style=solid];
m7_314 -> m7_194  [key=2, style=dotted];
m7_315 -> m7_302  [key=0, style=solid];
m7_315 -> m7_195  [key=2, style=dotted];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_196  [key=2, style=dotted];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_166  [key=2, style=dotted];
m7_292 -> m7_35  [key=2, style=dotted];
m7_292 -> m7_293  [key=0, style=solid];
m7_295 -> m7_37  [key=2, style=dotted];
m7_295 -> m7_296  [key=0, style=solid];
m7_308 -> m7_37  [key=2, style=dotted];
m7_308 -> m7_309  [key=0, style=solid];
m7_311 -> m7_37  [key=2, style=dotted];
m7_311 -> m7_312  [key=0, style=solid];
m7_317 -> m7_39  [key=2, style=dotted];
m7_317 -> m7_318  [key=0, style=solid];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_307  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_305 -> m7_309  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_305 -> m7_310  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_305 -> m7_312  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_305 -> m7_305  [color=darkseagreen4, key=1, label=entry, style=dashed];
m7_294 -> m7_297  [key=0, style=solid];
m7_294 -> m7_295  [key=0, style=solid];
m7_300 -> m7_315  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m7_300 -> m7_301  [key=0, style=solid];
m7_302 -> m7_303  [key=0, style=solid];
m7_302 -> m7_317  [key=0, style=solid];
m7_302 -> m7_305  [color=darkseagreen4, key=1, label=entry, style=dashed];
m7_304 -> m7_314  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m7_304 -> m7_308  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m7_304 -> m7_311  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_304  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m7_304 -> m7_279  [key=2, style=dotted];
m7_313 -> m7_314  [key=0, style=solid];
m7_316 -> m7_320  [key=0, style=solid];
m7_301 -> m7_71  [color=darkorchid, key=3, label="Local variable System.Collections.IDictionary d", style=bold];
m7_301 -> m7_302  [key=0, style=solid];
m7_320 -> m7_71  [color=blue, key=0, style=bold];
m7_3 -> m7_5  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_5 -> m7_9  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_8  [key=2, style=dotted];
m7_39 -> m7_98  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_39 -> m7_67  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_39 -> m7_73  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_39 -> m7_71  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_39 -> m7_231  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_39 -> m7_305  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_73 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_73 -> m7_215  [key=0, style=solid];
m7_73 -> m7_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m7_73 -> m7_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m7_73 -> m7_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m7_73 -> m7_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m7_73 -> m7_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m7_73 -> m7_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m7_73 -> m7_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m7_73 -> m7_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m7_73 -> m7_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_73 -> m7_56  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_165  [key=2, style=dotted];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_190  [key=2, style=dotted];
m7_217 -> m7_96  [key=2, style=dotted];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_219  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_217 -> m7_221  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_217 -> m7_242  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m7_218 -> m7_34  [key=2, style=dotted];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_224  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m7_218 -> m7_242  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_142  [key=2, style=dotted];
m7_223 -> m7_143  [key=2, style=dotted];
m7_225 -> m7_36  [key=2, style=dotted];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_20  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_21  [key=2, style=dotted];
m7_227 -> m7_236  [color=darkseagreen4, key=1, label=childValuesContract, style=dashed];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_8  [key=2, style=dotted];
m7_232 -> m7_236  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_235  [key=0, style=solid];
m7_233 -> m7_78  [key=2, style=dotted];
m7_234 -> m7_237  [key=0, style=solid];
m7_234 -> m7_231  [key=0, style=solid];
m7_234 -> m7_118  [key=2, style=dotted];
m7_235 -> m7_236  [key=0, style=solid];
m7_235 -> m7_237  [key=0, style=solid];
m7_235 -> m7_231  [key=0, style=solid];
m7_235 -> m7_119  [key=2, style=dotted];
m7_236 -> m7_9  [key=2, style=dotted];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_231  [key=0, style=solid];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_240  [key=0, style=solid];
m7_238 -> m7_194  [key=2, style=dotted];
m7_239 -> m7_231  [key=0, style=solid];
m7_239 -> m7_195  [key=2, style=dotted];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_196  [key=2, style=dotted];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_166  [key=2, style=dotted];
m7_220 -> m7_35  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_222 -> m7_37  [key=2, style=dotted];
m7_222 -> m7_223  [key=0, style=solid];
m7_226 -> m7_37  [key=2, style=dotted];
m7_226 -> m7_227  [key=0, style=solid];
m7_243 -> m7_39  [key=2, style=dotted];
m7_243 -> m7_244  [key=0, style=solid];
m7_231 -> m7_232  [key=0, style=solid];
m7_231 -> m7_233  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_231 -> m7_234  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_231 -> m7_235  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_231 -> m7_236  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_231 -> m7_241  [key=0, style=solid];
m7_219 -> m7_227  [key=0, style=solid];
m7_219 -> m7_220  [key=0, style=solid];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_224  [key=0, style=solid];
m7_242 -> m7_244  [key=0, style=solid];
m7_242 -> m7_243  [key=0, style=solid];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_226  [key=0, style=solid];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_247  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_230 -> m7_238  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_230  [color=darkorchid, key=3, label="Local variable int index", style=bold];
m7_240 -> m7_246  [key=0, style=solid];
m7_229 -> m7_239  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m7_229 -> m7_230  [key=0, style=solid];
m7_241 -> m7_242  [key=0, style=solid];
m7_241 -> m7_248  [key=2, style=dotted];
m7_246 -> m7_73  [color=blue, key=0, style=bold];
m7_192 -> m7_69  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m7_192 -> m7_123  [color=darkorchid, key=3, label="method methodReturn bool IsSpecified", style=bold];
m7_192 -> m7_177  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m7_192 -> m7_342  [key=0, style=solid];
m7_192 -> m7_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_344  [key=0, style=solid];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_341  [key=2, style=dotted];
m7_343 -> m7_345  [key=0, style=solid];
m7_345 -> m7_192  [color=blue, key=0, style=bold];
m7_34 -> m7_24  [color=green, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling typeNameHandlingFlag", style=bold];
m7_34 -> m7_22  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_34 -> m7_280  [key=0, style=solid];
m7_34 -> m7_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m7_34 -> m7_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_34 -> m7_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_34 -> m7_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m7_34 -> m7_218  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.TypeNameHandling typeNameHandlingFlag", style=bold];
m7_34 -> m7_69  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_34 -> m7_73  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_34 -> m7_71  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_34 -> m7_123  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteType", style=bold];
m7_34 -> m7_80  [color=darkorchid, key=3, label="method methodReturn bool ShouldWriteType", style=bold];
m7_280 -> m7_281  [key=0, style=solid];
m7_280 -> m7_282  [key=0, style=solid];
m7_280 -> m7_203  [key=2, style=dotted];
m7_283 -> m7_284  [key=0, style=solid];
m7_283 -> m7_288  [key=0, style=solid];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_288  [key=0, style=solid];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_285  [key=0, style=solid];
m7_285 -> m7_286  [key=0, style=solid];
m7_285 -> m7_288  [key=0, style=solid];
m7_281 -> m7_289  [key=0, style=solid];
m7_284 -> m7_289  [key=0, style=solid];
m7_288 -> m7_289  [key=0, style=solid];
m7_287 -> m7_289  [key=0, style=solid];
m7_289 -> m7_34  [color=blue, key=0, style=bold];
m7_8 -> m7_5  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe", style=bold];
m7_8 -> m7_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_8 -> m7_231  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_8 -> m7_305  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_8 -> m7_2  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_8 -> m7_268  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_8 -> m7_16  [key=0, style=solid];
m7_8 -> m7_179  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_20  [key=2, style=dotted];
m7_18 -> m7_21  [key=2, style=dotted];
m7_16 -> m7_18  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_14  [color=blue, key=0, style=bold];
m7_17 -> m7_19  [key=0, style=solid];
m7_19 -> m7_8  [color=blue, key=0, style=bold];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_2  [color=blue, key=0, style=bold];
m7_69 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_69 -> m7_167  [key=0, style=solid];
m7_69 -> m7_168  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_69 -> m7_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m7_69 -> m7_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_69 -> m7_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m7_69 -> m7_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_69 -> m7_178  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_69 -> m7_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_69 -> m7_183  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_69 -> m7_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_69 -> m7_188  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_69 -> m7_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_69 -> m7_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_69 -> m7_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_69 -> m7_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m7_69 -> m7_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_69 -> m7_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_165  [key=2, style=dotted];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_190  [key=2, style=dotted];
m7_170 -> m7_96  [key=2, style=dotted];
m7_170 -> m7_171  [key=0, style=solid];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_142  [key=2, style=dotted];
m7_173 -> m7_143  [key=2, style=dotted];
m7_174 -> m7_34  [key=2, style=dotted];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_176  [key=0, style=solid];
m7_175 -> m7_36  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_182  [key=0, style=solid];
m7_178 -> m7_177  [key=0, style=solid];
m7_178 -> m7_191  [key=2, style=dotted];
m7_178 -> m7_192  [key=2, style=dotted];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_8  [key=2, style=dotted];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_177  [key=0, style=solid];
m7_181 -> m7_98  [key=2, style=dotted];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_185  [key=0, style=solid];
m7_183 -> m7_194  [key=2, style=dotted];
m7_184 -> m7_177  [key=0, style=solid];
m7_184 -> m7_195  [key=2, style=dotted];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_196  [key=2, style=dotted];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_166  [key=2, style=dotted];
m7_169 -> m7_35  [key=2, style=dotted];
m7_169 -> m7_170  [key=0, style=solid];
m7_172 -> m7_37  [key=2, style=dotted];
m7_172 -> m7_173  [key=0, style=solid];
m7_186 -> m7_39  [key=2, style=dotted];
m7_186 -> m7_187  [key=0, style=solid];
m7_171 -> m7_174  [key=0, style=solid];
m7_171 -> m7_172  [key=0, style=solid];
m7_176 -> m7_184  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m7_176 -> m7_177  [key=0, style=solid];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_181  [color=darkseagreen4, key=1, label=property, style=dashed];
m7_177 -> m7_183  [color=darkseagreen4, key=1, label=property, style=dashed];
m7_177 -> m7_186  [key=0, style=solid];
m7_177 -> m7_179  [color=darkseagreen4, key=1, label=property, style=dashed];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_181  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m7_179 -> m7_193  [key=2, style=dotted];
m7_182 -> m7_183  [key=0, style=solid];
m7_185 -> m7_189  [key=0, style=solid];
m7_189 -> m7_69  [color=blue, key=0, style=bold];
m7_67 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_67 -> m7_206  [key=0, style=solid];
m7_67 -> m7_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_67 -> m7_208  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_67 -> m7_210  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_67 -> m7_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_67 -> m7_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_208  [key=0, style=solid];
m7_206 -> m7_78  [key=2, style=dotted];
m7_207 -> m7_213  [key=0, style=solid];
m7_207 -> m7_118  [key=2, style=dotted];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_210  [key=0, style=solid];
m7_208 -> m7_119  [key=2, style=dotted];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_190  [key=2, style=dotted];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_10  [key=2, style=dotted];
m7_211 -> m7_214  [key=2, style=dotted];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_196  [key=2, style=dotted];
m7_209 -> m7_213  [key=0, style=solid];
m7_213 -> m7_67  [color=blue, key=0, style=bold];
m7_98 -> m7_101  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_98 -> m7_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_98 -> m7_105  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_98 -> m7_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_98 -> m7_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_98 -> m7_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_98 -> m7_180  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m7_98 -> m7_69  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_98 -> m7_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_98 -> m7_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m7_98 -> m7_111  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_98 -> m7_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m7_98 -> m7_179  [color=darkorchid, key=3, label="Parameter variable object memberValue", style=bold];
m7_98 -> m7_177  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_103  [key=0, style=solid];
m7_101 -> m7_116  [key=2, style=dotted];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_105  [key=0, style=solid];
m7_103 -> m7_116  [key=2, style=dotted];
m7_103 -> m7_117  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_109  [key=0, style=solid];
m7_105 -> m7_78  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_118  [key=2, style=dotted];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_111  [key=0, style=solid];
m7_109 -> m7_119  [key=2, style=dotted];
m7_114 -> m7_9  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_106 -> m7_37  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_113 -> m7_37  [key=2, style=dotted];
m7_113 -> m7_114  [key=0, style=solid];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_103  [color=darkseagreen4, key=1, label=defaultValue, style=dashed];
m7_102 -> m7_115  [key=0, style=solid];
m7_104 -> m7_115  [key=0, style=solid];
m7_108 -> m7_115  [key=0, style=solid];
m7_110 -> m7_115  [key=0, style=solid];
m7_111 -> m7_113  [key=0, style=solid];
m7_111 -> m7_112  [key=0, style=solid];
m7_99 -> m7_106  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m7_99 -> m7_113  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m7_99 -> m7_100  [key=0, style=solid];
m7_112 -> m7_115  [key=0, style=solid];
m7_112 -> m7_121  [key=2, style=dotted];
m7_112 -> m7_120  [key=2, style=dotted];
m7_115 -> m7_98  [color=blue, key=0, style=bold];
m7_195 -> m7_331  [key=0, style=solid];
m7_195 -> m7_69  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_195 -> m7_73  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_195 -> m7_71  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_195 -> m7_176  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m7_195 -> m7_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_195 -> m7_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_195 -> m7_229  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m7_195 -> m7_300  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m7_331 -> m7_332  [key=0, style=solid];
m7_331 -> m7_335  [key=2, style=dotted];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_334  [key=0, style=solid];
m7_333 -> m7_332  [key=0, style=solid];
m7_333 -> m7_336  [key=2, style=dotted];
m7_334 -> m7_195  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [color=green, key=0, style=solid];
m7_22 -> m7_24  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract", style=dashed];
m7_22 -> m7_26  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_22 -> m7_27  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_22 -> m7_28  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_22 -> m7_29  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_22 -> m7_30  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_22 -> m7_32  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_22 -> m7_9  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract collectionValueContract", style=bold];
m7_23 -> m7_24  [color=green, key=0, style=solid];
m7_23 -> m7_32  [color=green, key=0, style=solid];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_34  [color=green, key=2, style=dotted];
m7_32 -> m7_33  [color=green, key=0, style=solid];
m7_32 -> m7_38  [color=green, key=2, style=dotted];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_32  [color=green, key=0, style=solid];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_35  [color=green, key=2, style=dotted];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_27 -> m7_36  [color=green, key=2, style=dotted];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_37  [color=green, key=2, style=dotted];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_29 -> m7_38  [color=green, key=2, style=dotted];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_30 -> m7_39  [color=green, key=2, style=dotted];
m7_31 -> m7_33  [color=green, key=0, style=solid];
m7_33 -> m7_22  [color=blue, key=0, style=bold];
m7_118 -> m7_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_118 -> m7_137  [key=0, style=solid];
m7_118 -> m7_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_118 -> m7_140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_142  [key=2, style=dotted];
m7_139 -> m7_143  [key=2, style=dotted];
m7_137 -> m7_35  [key=2, style=dotted];
m7_137 -> m7_138  [key=0, style=solid];
m7_138 -> m7_37  [key=2, style=dotted];
m7_138 -> m7_139  [key=0, style=solid];
m7_140 -> m7_39  [key=2, style=dotted];
m7_140 -> m7_141  [key=0, style=solid];
m7_141 -> m7_118  [color=blue, key=0, style=bold];
m7_346 -> m7_24  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_27  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_47  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m7_346 -> m7_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m8_1122 -> m8_1123  [key=0, style=solid];
m8_1123 -> m8_1124  [key=0, style=solid];
m8_1123 -> m8_1125  [key=2, style=dotted];
m8_1124 -> m8_1122  [color=blue, key=0, style=bold];
m8_1547 -> m8_1548  [key=0, style=solid];
m8_1548 -> m8_1549  [key=0, style=solid];
m8_1548 -> m8_1557  [key=2, style=dotted];
m8_1548 -> m8_1552  [color=darkseagreen4, key=1, label=joe, style=dashed];
m8_1548 -> m8_1554  [color=darkseagreen4, key=1, label=joe, style=dashed];
m8_1549 -> m8_1550  [key=0, style=solid];
m8_1552 -> m8_1553  [key=0, style=solid];
m8_1554 -> m8_1555  [key=0, style=solid];
m8_1554 -> m8_362  [key=2, style=dotted];
m8_1550 -> m8_1551  [key=0, style=solid];
m8_1550 -> m8_1557  [key=2, style=dotted];
m8_1550 -> m8_1552  [color=darkseagreen4, key=1, label=mike, style=dashed];
m8_1550 -> m8_1553  [color=darkseagreen4, key=1, label=mike, style=dashed];
m8_1550 -> m8_1554  [color=darkseagreen4, key=1, label=mike, style=dashed];
m8_1551 -> m8_1552  [key=0, style=solid];
m8_1553 -> m8_1554  [key=0, style=solid];
m8_1555 -> m8_1556  [key=0, style=solid];
m8_1555 -> m8_12  [key=2, style=dotted];
m8_1556 -> m8_1547  [color=blue, key=0, style=bold];
m8_697 -> m8_698  [key=0, style=solid];
m8_697 -> m8_699  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_697 -> m8_700  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_697 -> m8_701  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_698 -> m8_699  [key=0, style=solid];
m8_699 -> m8_700  [key=0, style=solid];
m8_700 -> m8_701  [key=0, style=solid];
m8_701 -> m8_702  [key=0, style=solid];
m8_702 -> m8_697  [color=blue, key=0, style=bold];
m8_788 -> m8_789  [key=0, style=solid];
m8_789 -> m8_790  [key=0, style=solid];
m8_789 -> m8_789  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_790 -> m8_791  [key=0, style=solid];
m8_790 -> m8_98  [key=2, style=dotted];
m8_790 -> m8_792  [color=darkseagreen4, key=1, label=r, style=dashed];
m8_790 -> m8_793  [color=darkseagreen4, key=1, label=r, style=dashed];
m8_791 -> m8_792  [key=0, style=solid];
m8_791 -> m8_11  [key=2, style=dotted];
m8_792 -> m8_793  [key=0, style=solid];
m8_792 -> m8_11  [key=2, style=dotted];
m8_793 -> m8_794  [key=0, style=solid];
m8_793 -> m8_11  [key=2, style=dotted];
m8_794 -> m8_788  [color=blue, key=0, style=bold];
m8_1046 -> m8_1047  [key=0, style=solid];
m8_1047 -> m8_1048  [key=0, style=solid];
m8_1047 -> m8_1049  [key=0, style=solid];
m8_1048 -> m8_1047  [key=0, style=solid];
m8_1048 -> m8_229  [key=2, style=dotted];
m8_1048 -> m8_1048  [color=darkseagreen4, key=1, label=pair, style=dashed];
m8_1049 -> m8_1046  [color=blue, key=0, style=bold];
m8_1503 -> m8_1504  [key=0, style=solid];
m8_1504 -> m8_1505  [key=0, style=solid];
m8_1504 -> m8_56  [key=2, style=dotted];
m8_1504 -> m8_1506  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_1504 -> m8_1510  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_1505 -> m8_1506  [key=0, style=solid];
m8_1505 -> m8_229  [key=2, style=dotted];
m8_1506 -> m8_1507  [key=0, style=solid];
m8_1506 -> m8_229  [key=2, style=dotted];
m8_1510 -> m8_1511  [key=0, style=solid];
m8_1510 -> m8_229  [key=2, style=dotted];
m8_1507 -> m8_1508  [key=0, style=solid];
m8_1507 -> m8_56  [key=2, style=dotted];
m8_1507 -> m8_1509  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_1507 -> m8_1510  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_1507 -> m8_1511  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_1508 -> m8_1509  [key=0, style=solid];
m8_1508 -> m8_229  [key=2, style=dotted];
m8_1509 -> m8_1510  [key=0, style=solid];
m8_1509 -> m8_229  [key=2, style=dotted];
m8_1511 -> m8_1512  [key=0, style=solid];
m8_1511 -> m8_9  [key=2, style=dotted];
m8_1512 -> m8_1513  [key=0, style=solid];
m8_1512 -> m8_98  [key=2, style=dotted];
m8_1513 -> m8_1503  [color=blue, key=0, style=bold];
m8_1406 -> m8_1407  [key=0, style=solid];
m8_1407 -> m8_1408  [key=0, style=solid];
m8_1407 -> m8_1403  [key=2, style=dotted];
m8_1407 -> m8_1409  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1407 -> m8_1410  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1408 -> m8_1409  [key=0, style=solid];
m8_1408 -> m8_159  [key=2, style=dotted];
m8_1409 -> m8_1410  [key=0, style=solid];
m8_1409 -> m8_159  [key=2, style=dotted];
m8_1410 -> m8_1411  [key=0, style=solid];
m8_1410 -> m8_362  [key=2, style=dotted];
m8_1411 -> m8_1412  [key=0, style=solid];
m8_1411 -> m8_98  [key=2, style=dotted];
m8_1411 -> m8_1413  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m8_1412 -> m8_1413  [key=0, style=solid];
m8_1412 -> m8_11  [key=2, style=dotted];
m8_1413 -> m8_1414  [key=0, style=solid];
m8_1413 -> m8_1014  [key=2, style=dotted];
m8_1413 -> m8_11  [key=2, style=dotted];
m8_1414 -> m8_1406  [color=blue, key=0, style=bold];
m8_868 -> m8_869  [key=0, style=solid];
m8_869 -> m8_870  [key=0, style=solid];
m8_869 -> m8_98  [key=2, style=dotted];
m8_869 -> m8_871  [color=darkseagreen4, key=1, label=l, style=dashed];
m8_869 -> m8_872  [color=darkseagreen4, key=1, label=l, style=dashed];
m8_869 -> m8_873  [color=darkseagreen4, key=1, label=l, style=dashed];
m8_870 -> m8_871  [key=0, style=solid];
m8_870 -> m8_11  [key=2, style=dotted];
m8_871 -> m8_872  [key=0, style=solid];
m8_871 -> m8_11  [key=2, style=dotted];
m8_872 -> m8_873  [key=0, style=solid];
m8_872 -> m8_11  [key=2, style=dotted];
m8_873 -> m8_874  [key=0, style=solid];
m8_873 -> m8_11  [key=2, style=dotted];
m8_874 -> m8_868  [color=blue, key=0, style=bold];
m8_767 -> m8_768  [key=0, style=solid];
m8_768 -> m8_769  [key=0, style=solid];
m8_768 -> m8_772  [key=2, style=dotted];
m8_768 -> m8_773  [key=2, style=dotted];
m8_769 -> m8_770  [key=0, style=solid];
m8_769 -> m8_9  [key=2, style=dotted];
m8_770 -> m8_771  [key=0, style=solid];
m8_770 -> m8_11  [key=2, style=dotted];
m8_771 -> m8_767  [color=blue, key=0, style=bold];
m8_566 -> m8_567  [key=0, style=solid];
m8_567 -> m8_568  [key=0, style=solid];
m8_567 -> m8_576  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_567 -> m8_567  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_568 -> m8_569  [key=0, style=solid];
m8_568 -> m8_98  [key=2, style=dotted];
m8_568 -> m8_570  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_568 -> m8_571  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_568 -> m8_572  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_568 -> m8_573  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_568 -> m8_574  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_568 -> m8_575  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_576 -> m8_577  [key=0, style=solid];
m8_576 -> m8_11  [key=2, style=dotted];
m8_569 -> m8_570  [key=0, style=solid];
m8_569 -> m8_11  [key=2, style=dotted];
m8_570 -> m8_571  [key=0, style=solid];
m8_570 -> m8_11  [key=2, style=dotted];
m8_571 -> m8_572  [key=0, style=solid];
m8_571 -> m8_11  [key=2, style=dotted];
m8_572 -> m8_573  [key=0, style=solid];
m8_572 -> m8_11  [key=2, style=dotted];
m8_573 -> m8_574  [key=0, style=solid];
m8_573 -> m8_11  [key=2, style=dotted];
m8_574 -> m8_575  [key=0, style=solid];
m8_574 -> m8_11  [key=2, style=dotted];
m8_575 -> m8_576  [key=0, style=solid];
m8_575 -> m8_9  [key=2, style=dotted];
m8_577 -> m8_566  [color=blue, key=0, style=bold];
m8_851 -> m8_852  [key=0, style=solid];
m8_852 -> m8_853  [key=0, style=solid];
m8_852 -> m8_852  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_853 -> m8_854  [key=0, style=solid];
m8_853 -> m8_98  [key=2, style=dotted];
m8_854 -> m8_851  [color=blue, key=0, style=bold];
m8_1485 -> m8_1486  [key=0, style=solid];
m8_1486 -> m8_1487  [key=0, style=solid];
m8_1486 -> m8_1471  [key=2, style=dotted];
m8_1486 -> m8_1488  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1486 -> m8_1489  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1487 -> m8_1488  [key=0, style=solid];
m8_1488 -> m8_1489  [key=0, style=solid];
m8_1488 -> m8_664  [key=2, style=dotted];
m8_1488 -> m8_207  [key=2, style=dotted];
m8_1488 -> m8_1491  [key=2, style=dotted];
m8_1488 -> m8_1473  [key=2, style=dotted];
m8_1489 -> m8_1490  [key=0, style=solid];
m8_1489 -> m8_11  [key=2, style=dotted];
m8_1490 -> m8_1485  [color=blue, key=0, style=bold];
m8_1871 -> m8_1872  [key=0, style=solid];
m8_1872 -> m8_1873  [key=0, style=solid];
m8_1872 -> m8_1872  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1873 -> m8_1874  [key=0, style=solid];
m8_1873 -> m8_98  [key=2, style=dotted];
m8_1873 -> m8_1875  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1873 -> m8_1876  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1874 -> m8_1875  [key=0, style=solid];
m8_1874 -> m8_11  [key=2, style=dotted];
m8_1875 -> m8_1876  [key=0, style=solid];
m8_1875 -> m8_11  [key=2, style=dotted];
m8_1876 -> m8_1877  [key=0, style=solid];
m8_1876 -> m8_11  [key=2, style=dotted];
m8_1877 -> m8_1871  [color=blue, key=0, style=bold];
m8_268 -> m8_269  [key=0, style=solid];
m8_269 -> m8_270  [key=0, style=solid];
m8_269 -> m8_9  [key=2, style=dotted];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_11  [key=2, style=dotted];
m8_271 -> m8_268  [color=blue, key=0, style=bold];
m8_557 -> m8_558  [key=0, style=solid];
m8_558 -> m8_559  [key=0, style=solid];
m8_558 -> m8_565  [key=2, style=dotted];
m8_558 -> m8_560  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_558 -> m8_561  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_558 -> m8_562  [color=darkseagreen4, key=1, label=aa, style=dashed];
m8_559 -> m8_560  [key=0, style=solid];
m8_560 -> m8_561  [key=0, style=solid];
m8_561 -> m8_562  [key=0, style=solid];
m8_562 -> m8_563  [key=0, style=solid];
m8_562 -> m8_9  [key=2, style=dotted];
m8_563 -> m8_564  [key=0, style=solid];
m8_563 -> m8_11  [key=2, style=dotted];
m8_564 -> m8_557  [color=blue, key=0, style=bold];
m8_1613 -> m8_1614  [key=0, style=solid];
m8_1614 -> m8_1615  [key=0, style=solid];
m8_1614 -> m8_56  [key=2, style=dotted];
m8_1614 -> m8_1616  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_1614 -> m8_1617  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_1615 -> m8_1616  [key=0, style=solid];
m8_1615 -> m8_1612  [key=2, style=dotted];
m8_1615 -> m8_229  [key=2, style=dotted];
m8_1616 -> m8_1617  [key=0, style=solid];
m8_1616 -> m8_1612  [key=2, style=dotted];
m8_1616 -> m8_229  [key=2, style=dotted];
m8_1617 -> m8_1618  [key=0, style=solid];
m8_1617 -> m8_362  [key=2, style=dotted];
m8_1617 -> m8_1619  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1618 -> m8_1619  [key=0, style=solid];
m8_1618 -> m8_11  [key=2, style=dotted];
m8_1619 -> m8_1620  [key=0, style=solid];
m8_1619 -> m8_98  [key=2, style=dotted];
m8_1620 -> m8_1621  [key=0, style=solid];
m8_1620 -> m8_11  [key=2, style=dotted];
m8_1621 -> m8_1613  [color=blue, key=0, style=bold];
m8_1042 -> m8_1043  [key=0, style=solid];
m8_1043 -> m8_1044  [key=0, style=solid];
m8_1043 -> m8_1043  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1044 -> m8_1045  [key=0, style=solid];
m8_1044 -> m8_98  [key=2, style=dotted];
m8_1045 -> m8_1042  [color=blue, key=0, style=bold];
m8_1130 -> m8_1131  [key=0, style=solid];
m8_1131 -> m8_1132  [key=0, style=solid];
m8_1131 -> m8_1133  [key=2, style=dotted];
m8_1132 -> m8_1130  [color=blue, key=0, style=bold];
m8_1527 -> m8_1528  [key=0, style=solid];
m8_1528 -> m8_1529  [key=0, style=solid];
m8_1529 -> m8_1527  [color=blue, key=0, style=bold];
m8_1015 -> m8_1016  [key=0, style=solid];
m8_1016 -> m8_1017  [key=0, style=solid];
m8_1016 -> m8_229  [key=2, style=dotted];
m8_1017 -> m8_1015  [color=blue, key=0, style=bold];
m8_1824 -> m8_1825  [key=0, style=solid];
m8_1825 -> m8_1826  [key=0, style=solid];
m8_1825 -> m8_98  [key=2, style=dotted];
m8_1826 -> m8_1827  [key=0, style=solid];
m8_1826 -> m8_11  [key=2, style=dotted];
m8_1827 -> m8_1824  [color=blue, key=0, style=bold];
m8_1721 -> m8_1722  [key=0, style=solid];
m8_1722 -> m8_1723  [key=0, style=solid];
m8_1722 -> m8_1722  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1723 -> m8_1724  [key=0, style=solid];
m8_1723 -> m8_98  [key=2, style=dotted];
m8_1724 -> m8_1725  [key=0, style=solid];
m8_1724 -> m8_11  [key=2, style=dotted];
m8_1725 -> m8_1721  [color=blue, key=0, style=bold];
m8_1885 -> m8_1886  [key=0, style=solid];
m8_1886 -> m8_1887  [key=0, style=solid];
m8_1886 -> m8_1890  [key=2, style=dotted];
m8_1887 -> m8_1888  [key=0, style=solid];
m8_1887 -> m8_362  [key=2, style=dotted];
m8_1888 -> m8_1889  [key=0, style=solid];
m8_1888 -> m8_11  [key=2, style=dotted];
m8_1889 -> m8_1885  [color=blue, key=0, style=bold];
m8_1083 -> m8_1084  [key=0, style=solid];
m8_1083 -> m8_1086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1084 -> m8_1085  [key=0, style=solid];
m8_1084 -> m8_1086  [key=0, style=solid];
m8_1086 -> m8_1087  [key=0, style=solid];
m8_1086 -> m8_1088  [key=0, style=solid];
m8_1085 -> m8_1088  [key=0, style=solid];
m8_1085 -> m8_1089  [key=2, style=dotted];
m8_1087 -> m8_1086  [key=0, style=solid];
m8_1087 -> m8_229  [key=2, style=dotted];
m8_1087 -> m8_1087  [color=darkseagreen4, key=1, label=entry, style=dashed];
m8_1088 -> m8_1083  [color=blue, key=0, style=bold];
m8_537 -> m8_538  [key=0, style=solid];
m8_538 -> m8_539  [key=0, style=solid];
m8_538 -> m8_538  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_539 -> m8_540  [key=0, style=solid];
m8_539 -> m8_98  [key=2, style=dotted];
m8_539 -> m8_541  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_539 -> m8_542  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_540 -> m8_541  [key=0, style=solid];
m8_540 -> m8_11  [key=2, style=dotted];
m8_541 -> m8_542  [key=0, style=solid];
m8_541 -> m8_11  [key=2, style=dotted];
m8_542 -> m8_543  [key=0, style=solid];
m8_542 -> m8_11  [key=2, style=dotted];
m8_543 -> m8_537  [color=blue, key=0, style=bold];
m8_1386 -> m8_1387  [key=0, style=solid];
m8_1387 -> m8_1388  [key=0, style=solid];
m8_1387 -> m8_1374  [key=2, style=dotted];
m8_1388 -> m8_1386  [color=blue, key=0, style=bold];
m8_1403 -> m8_1404  [key=0, style=solid];
m8_1404 -> m8_1405  [key=0, style=solid];
m8_1404 -> m8_207  [key=2, style=dotted];
m8_1405 -> m8_1403  [color=blue, key=0, style=bold];
m8_1147 -> m8_1148  [key=0, style=solid];
m8_1147 -> m8_1149  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1147 -> m8_1150  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m8_1147 -> m8_1151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.Person", style=dashed];
m8_1148 -> m8_1149  [key=0, style=solid];
m8_1149 -> m8_1150  [key=0, style=solid];
m8_1150 -> m8_1151  [key=0, style=solid];
m8_1151 -> m8_1152  [key=0, style=solid];
m8_1152 -> m8_1153  [key=0, style=solid];
m8_1152 -> m8_430  [key=2, style=dotted];
m8_1153 -> m8_1147  [color=blue, key=0, style=bold];
m8_1090 -> m8_1091  [key=0, style=solid];
m8_1091 -> m8_1092  [key=0, style=solid];
m8_1091 -> m8_318  [key=2, style=dotted];
m8_1092 -> m8_1090  [color=blue, key=0, style=bold];
m8_1713 -> m8_1714  [key=0, style=solid];
m8_1714 -> m8_1715  [key=0, style=solid];
m8_1714 -> m8_98  [key=2, style=dotted];
m8_1715 -> m8_1716  [key=0, style=solid];
m8_1715 -> m8_11  [key=2, style=dotted];
m8_1716 -> m8_1713  [color=blue, key=0, style=bold];
m8_1530 -> m8_1531  [key=0, style=solid];
m8_1531 -> m8_1532  [key=0, style=solid];
m8_1531 -> m8_1543  [key=2, style=dotted];
m8_1531 -> m8_1533  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1531 -> m8_1534  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1531 -> m8_1536  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1531 -> m8_1537  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1532 -> m8_1533  [key=0, style=solid];
m8_1533 -> m8_1534  [key=0, style=solid];
m8_1534 -> m8_1535  [key=0, style=solid];
m8_1534 -> m8_362  [key=2, style=dotted];
m8_1536 -> m8_1537  [key=0, style=solid];
m8_1537 -> m8_1538  [key=0, style=solid];
m8_1537 -> m8_362  [key=2, style=dotted];
m8_1537 -> m8_1539  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1535 -> m8_1536  [key=0, style=solid];
m8_1535 -> m8_11  [key=2, style=dotted];
m8_1538 -> m8_1539  [key=0, style=solid];
m8_1538 -> m8_11  [key=2, style=dotted];
m8_1539 -> m8_1540  [key=0, style=solid];
m8_1539 -> m8_98  [key=2, style=dotted];
m8_1539 -> m8_1541  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1540 -> m8_1541  [key=0, style=solid];
m8_1540 -> m8_11  [key=2, style=dotted];
m8_1541 -> m8_1542  [key=0, style=solid];
m8_1541 -> m8_11  [key=2, style=dotted];
m8_1542 -> m8_1530  [color=blue, key=0, style=bold];
m8_1322 -> m8_1323  [key=0, style=solid];
m8_1323 -> m8_1324  [key=0, style=solid];
m8_1323 -> m8_1334  [key=2, style=dotted];
m8_1323 -> m8_1325  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m8_1323 -> m8_1326  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m8_1323 -> m8_1330  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m8_1323 -> m8_1331  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m8_1324 -> m8_1325  [key=0, style=solid];
m8_1324 -> m8_1335  [key=2, style=dotted];
m8_1325 -> m8_1326  [key=0, style=solid];
m8_1325 -> m8_1335  [key=2, style=dotted];
m8_1326 -> m8_1327  [key=0, style=solid];
m8_1326 -> m8_362  [key=2, style=dotted];
m8_1326 -> m8_1328  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1326 -> m8_1329  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1330 -> m8_1331  [key=0, style=solid];
m8_1330 -> m8_1336  [key=2, style=dotted];
m8_1330 -> m8_11  [key=2, style=dotted];
m8_1331 -> m8_1332  [key=0, style=solid];
m8_1331 -> m8_1336  [key=2, style=dotted];
m8_1331 -> m8_11  [key=2, style=dotted];
m8_1327 -> m8_1328  [key=0, style=solid];
m8_1327 -> m8_1327  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m8_1328 -> m8_1329  [key=0, style=solid];
m8_1328 -> m8_11  [key=2, style=dotted];
m8_1329 -> m8_1330  [key=0, style=solid];
m8_1329 -> m8_98  [key=2, style=dotted];
m8_1329 -> m8_1331  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m8_1329 -> m8_1332  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m8_1332 -> m8_1333  [key=0, style=solid];
m8_1332 -> m8_1337  [key=2, style=dotted];
m8_1333 -> m8_1322  [color=blue, key=0, style=bold];
m8_85 -> m8_86  [key=0, style=solid];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_86  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_10  [key=2, style=dotted];
m8_87 -> m8_89  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_84  [key=2, style=dotted];
m8_88 -> m8_11  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_84  [key=2, style=dotted];
m8_89 -> m8_11  [key=2, style=dotted];
m8_90 -> m8_85  [color=blue, key=0, style=bold];
m8_1096 -> m8_1097  [key=0, style=solid];
m8_1097 -> m8_1098  [key=0, style=solid];
m8_1097 -> m8_1099  [key=2, style=dotted];
m8_1098 -> m8_1096  [color=blue, key=0, style=bold];
m8_450 -> m8_451  [key=0, style=solid];
m8_451 -> m8_452  [key=0, style=solid];
m8_451 -> m8_460  [key=2, style=dotted];
m8_451 -> m8_453  [color=darkseagreen4, key=1, label=c1, style=dashed];
m8_451 -> m8_454  [color=darkseagreen4, key=1, label=c1, style=dashed];
m8_452 -> m8_453  [key=0, style=solid];
m8_452 -> m8_410  [key=2, style=dotted];
m8_453 -> m8_454  [key=0, style=solid];
m8_453 -> m8_410  [key=2, style=dotted];
m8_454 -> m8_455  [key=0, style=solid];
m8_454 -> m8_418  [key=2, style=dotted];
m8_454 -> m8_419  [key=2, style=dotted];
m8_454 -> m8_456  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_455 -> m8_456  [key=0, style=solid];
m8_455 -> m8_11  [key=2, style=dotted];
m8_456 -> m8_457  [key=0, style=solid];
m8_456 -> m8_418  [key=2, style=dotted];
m8_456 -> m8_420  [key=2, style=dotted];
m8_456 -> m8_458  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_457 -> m8_458  [key=0, style=solid];
m8_457 -> m8_11  [key=2, style=dotted];
m8_458 -> m8_459  [key=0, style=solid];
m8_458 -> m8_11  [key=2, style=dotted];
m8_459 -> m8_450  [color=blue, key=0, style=bold];
m8_900 -> m8_901  [key=0, style=solid];
m8_901 -> m8_902  [key=0, style=solid];
m8_901 -> m8_98  [key=2, style=dotted];
m8_902 -> m8_900  [color=blue, key=0, style=bold];
m8_1756 -> m8_1757  [key=0, style=solid];
m8_1757 -> m8_1756  [color=blue, key=0, style=bold];
m8_1264 -> m8_1311  [key=0, style=solid];
m8_1264 -> m8_1312  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1313  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1314  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1315  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1316  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1317  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1318  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1319  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1264 -> m8_1320  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1311 -> m8_1312  [key=0, style=solid];
m8_1312 -> m8_1313  [key=0, style=solid];
m8_1313 -> m8_1314  [key=0, style=solid];
m8_1314 -> m8_1315  [key=0, style=solid];
m8_1315 -> m8_1316  [key=0, style=solid];
m8_1316 -> m8_1317  [key=0, style=solid];
m8_1317 -> m8_1318  [key=0, style=solid];
m8_1318 -> m8_1319  [key=0, style=solid];
m8_1319 -> m8_1320  [key=0, style=solid];
m8_1320 -> m8_1321  [key=0, style=solid];
m8_1321 -> m8_1264  [color=blue, key=0, style=bold];
m8_471 -> m8_472  [key=0, style=solid];
m8_472 -> m8_473  [key=0, style=solid];
m8_473 -> m8_474  [key=0, style=solid];
m8_473 -> m8_9  [key=2, style=dotted];
m8_474 -> m8_475  [key=0, style=solid];
m8_474 -> m8_11  [key=2, style=dotted];
m8_475 -> m8_476  [key=0, style=solid];
m8_475 -> m8_9  [key=2, style=dotted];
m8_476 -> m8_477  [key=0, style=solid];
m8_476 -> m8_11  [key=2, style=dotted];
m8_477 -> m8_471  [color=blue, key=0, style=bold];
m8_774 -> m8_775  [key=0, style=solid];
m8_775 -> m8_776  [key=0, style=solid];
m8_775 -> m8_779  [key=2, style=dotted];
m8_775 -> m8_207  [key=2, style=dotted];
m8_776 -> m8_777  [key=0, style=solid];
m8_776 -> m8_362  [key=2, style=dotted];
m8_777 -> m8_778  [key=0, style=solid];
m8_777 -> m8_11  [key=2, style=dotted];
m8_778 -> m8_774  [color=blue, key=0, style=bold];
m8_1586 -> m8_1587  [key=0, style=solid];
m8_1587 -> m8_1588  [key=0, style=solid];
m8_1587 -> m8_1604  [key=2, style=dotted];
m8_1587 -> m8_1589  [color=darkseagreen4, key=1, label=joe, style=dashed];
m8_1587 -> m8_1590  [color=darkseagreen4, key=1, label=joe, style=dashed];
m8_1587 -> m8_1595  [color=darkseagreen4, key=1, label=joe, style=dashed];
m8_1588 -> m8_1589  [key=0, style=solid];
m8_1589 -> m8_1590  [key=0, style=solid];
m8_1590 -> m8_1591  [key=0, style=solid];
m8_1595 -> m8_1596  [key=0, style=solid];
m8_1595 -> m8_362  [key=2, style=dotted];
m8_1591 -> m8_1592  [key=0, style=solid];
m8_1591 -> m8_1604  [key=2, style=dotted];
m8_1591 -> m8_1593  [color=darkseagreen4, key=1, label=martha, style=dashed];
m8_1591 -> m8_1594  [color=darkseagreen4, key=1, label=martha, style=dashed];
m8_1591 -> m8_1595  [color=darkseagreen4, key=1, label=martha, style=dashed];
m8_1592 -> m8_1593  [key=0, style=solid];
m8_1593 -> m8_1594  [key=0, style=solid];
m8_1594 -> m8_1595  [key=0, style=solid];
m8_1596 -> m8_1597  [key=0, style=solid];
m8_1596 -> m8_12  [key=2, style=dotted];
m8_1597 -> m8_1598  [key=0, style=solid];
m8_1597 -> m8_1597  [color=darkorchid, key=3, label="Local variable string mikeString", style=bold];
m8_1598 -> m8_1599  [key=0, style=solid];
m8_1598 -> m8_98  [key=2, style=dotted];
m8_1599 -> m8_1600  [key=0, style=solid];
m8_1599 -> m8_1605  [key=2, style=dotted];
m8_1600 -> m8_1601  [key=0, style=solid];
m8_1600 -> m8_1600  [color=darkorchid, key=3, label="Local variable string mikeFullDisclosureString", style=bold];
m8_1601 -> m8_1602  [key=0, style=solid];
m8_1601 -> m8_98  [key=2, style=dotted];
m8_1602 -> m8_1603  [key=0, style=solid];
m8_1602 -> m8_1605  [key=2, style=dotted];
m8_1603 -> m8_1586  [color=blue, key=0, style=bold];
m8_1902 -> m8_1903  [key=0, style=solid];
m8_1903 -> m8_1904  [key=0, style=solid];
m8_1904 -> m8_1902  [color=blue, key=0, style=bold];
m8_378 -> m8_379  [key=0, style=solid];
m8_379 -> m8_380  [key=0, style=solid];
m8_379 -> m8_392  [key=2, style=dotted];
m8_379 -> m8_382  [color=darkseagreen4, key=1, label=name, style=dashed];
m8_379 -> m8_383  [color=darkseagreen4, key=1, label=name, style=dashed];
m8_379 -> m8_384  [color=darkseagreen4, key=1, label=name, style=dashed];
m8_380 -> m8_381  [key=0, style=solid];
m8_380 -> m8_393  [key=2, style=dotted];
m8_380 -> m8_382  [color=darkseagreen4, key=1, label=p1, style=dashed];
m8_382 -> m8_383  [key=0, style=solid];
m8_382 -> m8_159  [key=2, style=dotted];
m8_383 -> m8_384  [key=0, style=solid];
m8_383 -> m8_159  [key=2, style=dotted];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_362  [key=2, style=dotted];
m8_384 -> m8_386  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_381 -> m8_382  [key=0, style=solid];
m8_381 -> m8_393  [key=2, style=dotted];
m8_381 -> m8_383  [color=darkseagreen4, key=1, label=p2, style=dashed];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_11  [key=2, style=dotted];
m8_386 -> m8_387  [key=0, style=solid];
m8_386 -> m8_98  [key=2, style=dotted];
m8_386 -> m8_388  [color=darkseagreen4, key=1, label=newName, style=dashed];
m8_386 -> m8_389  [color=darkseagreen4, key=1, label=newName, style=dashed];
m8_386 -> m8_390  [color=darkseagreen4, key=1, label=newName, style=dashed];
m8_387 -> m8_388  [key=0, style=solid];
m8_387 -> m8_11  [key=2, style=dotted];
m8_388 -> m8_389  [key=0, style=solid];
m8_388 -> m8_11  [key=2, style=dotted];
m8_389 -> m8_390  [key=0, style=solid];
m8_389 -> m8_11  [key=2, style=dotted];
m8_390 -> m8_391  [key=0, style=solid];
m8_390 -> m8_11  [key=2, style=dotted];
m8_391 -> m8_378  [color=blue, key=0, style=bold];
m8_528 -> m8_529  [key=0, style=solid];
m8_529 -> m8_530  [key=0, style=solid];
m8_529 -> m8_536  [key=2, style=dotted];
m8_529 -> m8_208  [key=2, style=dotted];
m8_530 -> m8_531  [key=0, style=solid];
m8_530 -> m8_362  [key=2, style=dotted];
m8_530 -> m8_532  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_531 -> m8_532  [key=0, style=solid];
m8_531 -> m8_11  [key=2, style=dotted];
m8_532 -> m8_533  [key=0, style=solid];
m8_532 -> m8_98  [key=2, style=dotted];
m8_532 -> m8_534  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_533 -> m8_534  [key=0, style=solid];
m8_533 -> m8_11  [key=2, style=dotted];
m8_534 -> m8_535  [key=0, style=solid];
m8_534 -> m8_208  [key=2, style=dotted];
m8_534 -> m8_11  [key=2, style=dotted];
m8_535 -> m8_528  [color=blue, key=0, style=bold];
m8_1808 -> m8_1809  [key=0, style=solid];
m8_1809 -> m8_1810  [key=0, style=solid];
m8_1810 -> m8_1808  [color=blue, key=0, style=bold];
m8_1444 -> m8_1445  [key=0, style=solid];
m8_1445 -> m8_1446  [key=0, style=solid];
m8_1445 -> m8_1447  [key=2, style=dotted];
m8_1446 -> m8_1444  [color=blue, key=0, style=bold];
m8_1050 -> m8_1051  [key=0, style=solid];
m8_1051 -> m8_1052  [key=0, style=solid];
m8_1051 -> m8_1055  [key=2, style=dotted];
m8_1052 -> m8_1053  [key=0, style=solid];
m8_1052 -> m8_362  [key=2, style=dotted];
m8_1053 -> m8_1054  [key=0, style=solid];
m8_1053 -> m8_11  [key=2, style=dotted];
m8_1054 -> m8_1050  [color=blue, key=0, style=bold];
m8_666 -> m8_667  [key=0, style=solid];
m8_667 -> m8_668  [key=0, style=solid];
m8_667 -> m8_663  [key=2, style=dotted];
m8_667 -> m8_669  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_668 -> m8_669  [key=0, style=solid];
m8_669 -> m8_670  [key=0, style=solid];
m8_669 -> m8_664  [key=2, style=dotted];
m8_669 -> m8_665  [key=2, style=dotted];
m8_670 -> m8_666  [color=blue, key=0, style=bold];
m8_544 -> m8_545  [key=0, style=solid];
m8_545 -> m8_546  [key=0, style=solid];
m8_545 -> m8_545  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_546 -> m8_547  [key=0, style=solid];
m8_546 -> m8_98  [key=2, style=dotted];
m8_547 -> m8_544  [color=blue, key=0, style=bold];
m8_1093 -> m8_1094  [key=0, style=solid];
m8_1093 -> m8_1140  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m8_1094 -> m8_1095  [key=0, style=solid];
m8_1094 -> m8_229  [key=2, style=dotted];
m8_1095 -> m8_1093  [color=blue, key=0, style=bold];
m8_1189 -> m8_1190  [key=0, style=solid];
m8_1189 -> m8_1191  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1192  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1193  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1194  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1195  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1196  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1197  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1198  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1199  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1200  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1201  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1202  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1203  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1204  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1205  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1206  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1189 -> m8_1207  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1190 -> m8_1191  [key=0, style=solid];
m8_1190 -> m8_1209  [key=2, style=dotted];
m8_1191 -> m8_1192  [key=0, style=solid];
m8_1191 -> m8_1210  [key=2, style=dotted];
m8_1192 -> m8_1193  [key=0, style=solid];
m8_1192 -> m8_1209  [key=2, style=dotted];
m8_1193 -> m8_1194  [key=0, style=solid];
m8_1193 -> m8_1209  [key=2, style=dotted];
m8_1194 -> m8_1195  [key=0, style=solid];
m8_1194 -> m8_1209  [key=2, style=dotted];
m8_1195 -> m8_1196  [key=0, style=solid];
m8_1195 -> m8_1209  [key=2, style=dotted];
m8_1196 -> m8_1197  [key=0, style=solid];
m8_1196 -> m8_1211  [key=2, style=dotted];
m8_1197 -> m8_1198  [key=0, style=solid];
m8_1197 -> m8_1212  [key=2, style=dotted];
m8_1198 -> m8_1199  [key=0, style=solid];
m8_1198 -> m8_1213  [key=2, style=dotted];
m8_1199 -> m8_1200  [key=0, style=solid];
m8_1199 -> m8_1214  [key=2, style=dotted];
m8_1200 -> m8_1201  [key=0, style=solid];
m8_1200 -> m8_1215  [key=2, style=dotted];
m8_1201 -> m8_1202  [key=0, style=solid];
m8_1201 -> m8_1216  [key=2, style=dotted];
m8_1202 -> m8_1203  [key=0, style=solid];
m8_1202 -> m8_1217  [key=2, style=dotted];
m8_1203 -> m8_1204  [key=0, style=solid];
m8_1203 -> m8_1218  [key=2, style=dotted];
m8_1204 -> m8_1205  [key=0, style=solid];
m8_1204 -> m8_1219  [key=2, style=dotted];
m8_1205 -> m8_1206  [key=0, style=solid];
m8_1205 -> m8_1220  [key=2, style=dotted];
m8_1206 -> m8_1207  [key=0, style=solid];
m8_1206 -> m8_1221  [key=2, style=dotted];
m8_1207 -> m8_1208  [key=0, style=solid];
m8_1207 -> m8_1222  [key=2, style=dotted];
m8_1208 -> m8_1189  [color=blue, key=0, style=bold];
m8_938 -> m8_939  [key=0, style=solid];
m8_939 -> m8_940  [key=0, style=solid];
m8_939 -> m8_951  [key=2, style=dotted];
m8_939 -> m8_941  [color=darkseagreen4, key=1, label=f, style=dashed];
m8_939 -> m8_942  [color=darkseagreen4, key=1, label=f, style=dashed];
m8_939 -> m8_943  [color=darkseagreen4, key=1, label=f, style=dashed];
m8_940 -> m8_941  [key=0, style=solid];
m8_940 -> m8_952  [key=2, style=dotted];
m8_940 -> m8_159  [key=2, style=dotted];
m8_941 -> m8_942  [key=0, style=solid];
m8_941 -> m8_952  [key=2, style=dotted];
m8_941 -> m8_159  [key=2, style=dotted];
m8_942 -> m8_943  [key=0, style=solid];
m8_942 -> m8_952  [key=2, style=dotted];
m8_942 -> m8_159  [key=2, style=dotted];
m8_943 -> m8_944  [key=0, style=solid];
m8_943 -> m8_362  [key=2, style=dotted];
m8_943 -> m8_945  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_944 -> m8_945  [key=0, style=solid];
m8_944 -> m8_11  [key=2, style=dotted];
m8_945 -> m8_946  [key=0, style=solid];
m8_945 -> m8_98  [key=2, style=dotted];
m8_945 -> m8_947  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m8_945 -> m8_948  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m8_945 -> m8_949  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m8_946 -> m8_947  [key=0, style=solid];
m8_946 -> m8_11  [key=2, style=dotted];
m8_947 -> m8_948  [key=0, style=solid];
m8_947 -> m8_11  [key=2, style=dotted];
m8_948 -> m8_949  [key=0, style=solid];
m8_948 -> m8_11  [key=2, style=dotted];
m8_949 -> m8_950  [key=0, style=solid];
m8_949 -> m8_11  [key=2, style=dotted];
m8_950 -> m8_938  [color=blue, key=0, style=bold];
m8_146 -> m8_147  [key=0, style=solid];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_157  [key=2, style=dotted];
m8_147 -> m8_150  [color=darkseagreen4, key=1, label=a1, style=dashed];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_157  [key=2, style=dotted];
m8_148 -> m8_151  [color=darkseagreen4, key=1, label=a2, style=dashed];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_159  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_158  [key=2, style=dotted];
m8_149 -> m8_151  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m8_149 -> m8_152  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m8_149 -> m8_154  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m8_149 -> m8_155  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_159  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_9  [key=2, style=dotted];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_11  [key=2, style=dotted];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_11  [key=2, style=dotted];
m8_153 -> m8_154  [key=0, style=solid];
m8_153 -> m8_98  [key=2, style=dotted];
m8_153 -> m8_155  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m8_156 -> m8_146  [color=blue, key=0, style=bold];
m8_513 -> m8_514  [key=0, style=solid];
m8_514 -> m8_515  [key=0, style=solid];
m8_514 -> m8_517  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m8_515 -> m8_516  [key=0, style=solid];
m8_515 -> m8_527  [key=2, style=dotted];
m8_517 -> m8_518  [key=0, style=solid];
m8_517 -> m8_11  [key=2, style=dotted];
m8_516 -> m8_517  [key=0, style=solid];
m8_516 -> m8_9  [key=2, style=dotted];
m8_516 -> m8_518  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_518 -> m8_519  [key=0, style=solid];
m8_518 -> m8_98  [key=2, style=dotted];
m8_519 -> m8_520  [key=0, style=solid];
m8_519 -> m8_11  [key=2, style=dotted];
m8_520 -> m8_521  [key=0, style=solid];
m8_520 -> m8_523  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m8_521 -> m8_522  [key=0, style=solid];
m8_521 -> m8_527  [key=2, style=dotted];
m8_523 -> m8_524  [key=0, style=solid];
m8_523 -> m8_11  [key=2, style=dotted];
m8_522 -> m8_523  [key=0, style=solid];
m8_522 -> m8_9  [key=2, style=dotted];
m8_522 -> m8_524  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_524 -> m8_525  [key=0, style=solid];
m8_524 -> m8_98  [key=2, style=dotted];
m8_525 -> m8_526  [key=0, style=solid];
m8_525 -> m8_11  [key=2, style=dotted];
m8_526 -> m8_513  [color=blue, key=0, style=bold];
m8_1265 -> m8_1266  [key=0, style=solid];
m8_1266 -> m8_1267  [key=0, style=solid];
m8_1266 -> m8_98  [key=2, style=dotted];
m8_1266 -> m8_1268  [color=darkseagreen4, key=1, label=myA, style=dashed];
m8_1266 -> m8_1269  [color=darkseagreen4, key=1, label=myA, style=dashed];
m8_1266 -> m8_1270  [color=darkseagreen4, key=1, label=myA, style=dashed];
m8_1266 -> m8_1271  [color=darkseagreen4, key=1, label=myA, style=dashed];
m8_1266 -> m8_1272  [color=darkseagreen4, key=1, label=myA, style=dashed];
m8_1266 -> m8_1273  [color=darkseagreen4, key=1, label=myA, style=dashed];
m8_1266 -> m8_1274  [color=darkseagreen4, key=1, label=myA, style=dashed];
m8_1267 -> m8_1268  [key=0, style=solid];
m8_1267 -> m8_1295  [key=2, style=dotted];
m8_1267 -> m8_1296  [key=2, style=dotted];
m8_1267 -> m8_11  [key=2, style=dotted];
m8_1268 -> m8_1269  [key=0, style=solid];
m8_1268 -> m8_1295  [key=2, style=dotted];
m8_1268 -> m8_1296  [key=2, style=dotted];
m8_1268 -> m8_11  [key=2, style=dotted];
m8_1269 -> m8_1270  [key=0, style=solid];
m8_1269 -> m8_1297  [key=2, style=dotted];
m8_1269 -> m8_1296  [key=2, style=dotted];
m8_1269 -> m8_11  [key=2, style=dotted];
m8_1270 -> m8_1271  [key=0, style=solid];
m8_1270 -> m8_1297  [key=2, style=dotted];
m8_1270 -> m8_1296  [key=2, style=dotted];
m8_1270 -> m8_11  [key=2, style=dotted];
m8_1271 -> m8_1272  [key=0, style=solid];
m8_1271 -> m8_1297  [key=2, style=dotted];
m8_1271 -> m8_1296  [key=2, style=dotted];
m8_1271 -> m8_11  [key=2, style=dotted];
m8_1272 -> m8_1273  [key=0, style=solid];
m8_1272 -> m8_1297  [key=2, style=dotted];
m8_1272 -> m8_1296  [key=2, style=dotted];
m8_1272 -> m8_11  [key=2, style=dotted];
m8_1273 -> m8_1274  [key=0, style=solid];
m8_1273 -> m8_1297  [key=2, style=dotted];
m8_1273 -> m8_1296  [key=2, style=dotted];
m8_1273 -> m8_11  [key=2, style=dotted];
m8_1274 -> m8_1275  [key=0, style=solid];
m8_1274 -> m8_1297  [key=2, style=dotted];
m8_1274 -> m8_1296  [key=2, style=dotted];
m8_1274 -> m8_11  [key=2, style=dotted];
m8_1275 -> m8_1276  [key=0, style=solid];
m8_1275 -> m8_98  [key=2, style=dotted];
m8_1275 -> m8_1277  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1278  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1279  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1280  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1281  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1282  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1283  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1284  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1285  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1286  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1287  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1288  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1289  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1290  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1291  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1292  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1275 -> m8_1293  [color=darkseagreen4, key=1, label=myB, style=dashed];
m8_1276 -> m8_1277  [key=0, style=solid];
m8_1276 -> m8_1295  [key=2, style=dotted];
m8_1276 -> m8_1296  [key=2, style=dotted];
m8_1276 -> m8_11  [key=2, style=dotted];
m8_1277 -> m8_1278  [key=0, style=solid];
m8_1277 -> m8_1295  [key=2, style=dotted];
m8_1277 -> m8_1296  [key=2, style=dotted];
m8_1277 -> m8_11  [key=2, style=dotted];
m8_1278 -> m8_1279  [key=0, style=solid];
m8_1278 -> m8_1297  [key=2, style=dotted];
m8_1278 -> m8_1296  [key=2, style=dotted];
m8_1278 -> m8_11  [key=2, style=dotted];
m8_1279 -> m8_1280  [key=0, style=solid];
m8_1279 -> m8_1297  [key=2, style=dotted];
m8_1279 -> m8_1296  [key=2, style=dotted];
m8_1279 -> m8_11  [key=2, style=dotted];
m8_1280 -> m8_1281  [key=0, style=solid];
m8_1280 -> m8_1297  [key=2, style=dotted];
m8_1280 -> m8_1296  [key=2, style=dotted];
m8_1280 -> m8_11  [key=2, style=dotted];
m8_1281 -> m8_1282  [key=0, style=solid];
m8_1281 -> m8_1297  [key=2, style=dotted];
m8_1281 -> m8_1296  [key=2, style=dotted];
m8_1281 -> m8_11  [key=2, style=dotted];
m8_1282 -> m8_1283  [key=0, style=solid];
m8_1282 -> m8_1297  [key=2, style=dotted];
m8_1282 -> m8_1296  [key=2, style=dotted];
m8_1282 -> m8_11  [key=2, style=dotted];
m8_1283 -> m8_1284  [key=0, style=solid];
m8_1283 -> m8_1297  [key=2, style=dotted];
m8_1283 -> m8_1296  [key=2, style=dotted];
m8_1283 -> m8_11  [key=2, style=dotted];
m8_1284 -> m8_1285  [key=0, style=solid];
m8_1284 -> m8_11  [key=2, style=dotted];
m8_1285 -> m8_1286  [key=0, style=solid];
m8_1285 -> m8_11  [key=2, style=dotted];
m8_1286 -> m8_1287  [key=0, style=solid];
m8_1286 -> m8_11  [key=2, style=dotted];
m8_1287 -> m8_1288  [key=0, style=solid];
m8_1287 -> m8_11  [key=2, style=dotted];
m8_1288 -> m8_1289  [key=0, style=solid];
m8_1288 -> m8_1297  [key=2, style=dotted];
m8_1288 -> m8_1296  [key=2, style=dotted];
m8_1288 -> m8_11  [key=2, style=dotted];
m8_1289 -> m8_1290  [key=0, style=solid];
m8_1289 -> m8_1297  [key=2, style=dotted];
m8_1289 -> m8_1296  [key=2, style=dotted];
m8_1289 -> m8_11  [key=2, style=dotted];
m8_1290 -> m8_1291  [key=0, style=solid];
m8_1290 -> m8_11  [key=2, style=dotted];
m8_1291 -> m8_1292  [key=0, style=solid];
m8_1291 -> m8_1297  [key=2, style=dotted];
m8_1291 -> m8_1296  [key=2, style=dotted];
m8_1291 -> m8_11  [key=2, style=dotted];
m8_1292 -> m8_1293  [key=0, style=solid];
m8_1292 -> m8_1297  [key=2, style=dotted];
m8_1292 -> m8_1296  [key=2, style=dotted];
m8_1292 -> m8_11  [key=2, style=dotted];
m8_1293 -> m8_1294  [key=0, style=solid];
m8_1293 -> m8_1297  [key=2, style=dotted];
m8_1293 -> m8_1296  [key=2, style=dotted];
m8_1293 -> m8_11  [key=2, style=dotted];
m8_1294 -> m8_1265  [color=blue, key=0, style=bold];
m8_1751 -> m8_1752  [key=0, style=solid];
m8_1752 -> m8_1751  [color=blue, key=0, style=bold];
m8_635 -> m8_636  [key=0, style=solid];
m8_636 -> m8_637  [key=0, style=solid];
m8_636 -> m8_636  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_637 -> m8_638  [key=0, style=solid];
m8_637 -> m8_98  [key=2, style=dotted];
m8_637 -> m8_639  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_637 -> m8_640  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_637 -> m8_641  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_637 -> m8_642  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_638 -> m8_639  [key=0, style=solid];
m8_638 -> m8_633  [key=2, style=dotted];
m8_639 -> m8_640  [key=0, style=solid];
m8_639 -> m8_11  [key=2, style=dotted];
m8_640 -> m8_641  [key=0, style=solid];
m8_640 -> m8_11  [key=2, style=dotted];
m8_641 -> m8_642  [key=0, style=solid];
m8_641 -> m8_11  [key=2, style=dotted];
m8_642 -> m8_643  [key=0, style=solid];
m8_642 -> m8_11  [key=2, style=dotted];
m8_643 -> m8_635  [color=blue, key=0, style=bold];
m8_292 -> m8_293  [key=0, style=solid];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_296  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_293 -> m8_283  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_255  [key=2, style=dotted];
m8_294 -> m8_296  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_261  [key=2, style=dotted];
m8_296 -> m8_300  [key=2, style=dotted];
m8_296 -> m8_298  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_295 -> m8_296  [key=0, style=solid];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_11  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_11  [key=2, style=dotted];
m8_299 -> m8_292  [color=blue, key=0, style=bold];
m8_230 -> m8_231  [key=0, style=solid];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_28  [key=2, style=dotted];
m8_231 -> m8_234  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_232 -> m8_233  [key=0, style=solid];
m8_232 -> m8_9  [key=2, style=dotted];
m8_232 -> m8_234  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_234 -> m8_235  [key=0, style=solid];
m8_234 -> m8_243  [key=2, style=dotted];
m8_234 -> m8_234  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_234 -> m8_236  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_234 -> m8_237  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_234 -> m8_238  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_234 -> m8_239  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_234 -> m8_240  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_234 -> m8_241  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_11  [key=2, style=dotted];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_11  [key=2, style=dotted];
m8_236 -> m8_237  [key=0, style=solid];
m8_236 -> m8_11  [key=2, style=dotted];
m8_237 -> m8_238  [key=0, style=solid];
m8_237 -> m8_11  [key=2, style=dotted];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_11  [key=2, style=dotted];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_11  [key=2, style=dotted];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_11  [key=2, style=dotted];
m8_241 -> m8_242  [key=0, style=solid];
m8_241 -> m8_11  [key=2, style=dotted];
m8_242 -> m8_230  [color=blue, key=0, style=bold];
m8_1518 -> m8_1519  [key=0, style=solid];
m8_1519 -> m8_1520  [key=0, style=solid];
m8_1519 -> m8_1519  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1520 -> m8_1521  [key=0, style=solid];
m8_1520 -> m8_98  [key=2, style=dotted];
m8_1520 -> m8_1522  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_1520 -> m8_1523  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_1521 -> m8_1522  [key=0, style=solid];
m8_1521 -> m8_11  [key=2, style=dotted];
m8_1522 -> m8_1523  [key=0, style=solid];
m8_1522 -> m8_11  [key=2, style=dotted];
m8_1523 -> m8_1524  [key=0, style=solid];
m8_1523 -> m8_11  [key=2, style=dotted];
m8_1524 -> m8_1518  [color=blue, key=0, style=bold];
m8_1338 -> m8_1339  [key=0, style=solid];
m8_1339 -> m8_1340  [key=0, style=solid];
m8_1339 -> m8_1349  [key=2, style=dotted];
m8_1339 -> m8_1342  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m8_1339 -> m8_1343  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m8_1339 -> m8_1347  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m8_1340 -> m8_1341  [key=0, style=solid];
m8_1340 -> m8_1350  [key=2, style=dotted];
m8_1340 -> m8_1342  [color=darkseagreen4, key=1, label=document, style=dashed];
m8_1342 -> m8_1343  [key=0, style=solid];
m8_1343 -> m8_1344  [key=0, style=solid];
m8_1343 -> m8_362  [key=2, style=dotted];
m8_1343 -> m8_1345  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1343 -> m8_1346  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1347 -> m8_1348  [key=0, style=solid];
m8_1347 -> m8_11  [key=2, style=dotted];
m8_1341 -> m8_1342  [key=0, style=solid];
m8_1341 -> m8_1351  [key=2, style=dotted];
m8_1344 -> m8_1345  [key=0, style=solid];
m8_1344 -> m8_1344  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m8_1345 -> m8_1346  [key=0, style=solid];
m8_1345 -> m8_11  [key=2, style=dotted];
m8_1346 -> m8_1347  [key=0, style=solid];
m8_1346 -> m8_98  [key=2, style=dotted];
m8_1348 -> m8_1338  [color=blue, key=0, style=bold];
m8_1112 -> m8_1113  [key=0, style=solid];
m8_1113 -> m8_1114  [key=0, style=solid];
m8_1113 -> m8_1115  [key=2, style=dotted];
m8_1114 -> m8_1112  [color=blue, key=0, style=bold];
m8_1740 -> m8_1741  [key=0, style=solid];
m8_1741 -> m8_1742  [key=0, style=solid];
m8_1741 -> m8_1749  [key=2, style=dotted];
m8_1741 -> m8_1743  [color=darkseagreen4, key=1, label=obj, style=dashed];
m8_1742 -> m8_1743  [key=0, style=solid];
m8_1742 -> m8_1750  [key=2, style=dotted];
m8_1743 -> m8_1744  [key=0, style=solid];
m8_1743 -> m8_9  [key=2, style=dotted];
m8_1744 -> m8_1745  [key=0, style=solid];
m8_1744 -> m8_98  [key=2, style=dotted];
m8_1744 -> m8_1746  [color=darkseagreen4, key=1, label=obj, style=dashed];
m8_1744 -> m8_1747  [color=darkseagreen4, key=1, label=obj, style=dashed];
m8_1745 -> m8_1746  [key=0, style=solid];
m8_1745 -> m8_11  [key=2, style=dotted];
m8_1746 -> m8_1747  [key=0, style=solid];
m8_1746 -> m8_11  [key=2, style=dotted];
m8_1747 -> m8_1748  [key=0, style=solid];
m8_1747 -> m8_11  [key=2, style=dotted];
m8_1748 -> m8_1740  [color=blue, key=0, style=bold];
m8_706 -> m8_707  [key=0, style=solid];
m8_707 -> m8_708  [key=0, style=solid];
m8_707 -> m8_697  [key=2, style=dotted];
m8_707 -> m8_709  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_708 -> m8_709  [key=0, style=solid];
m8_709 -> m8_710  [key=0, style=solid];
m8_709 -> m8_362  [key=2, style=dotted];
m8_709 -> m8_711  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_710 -> m8_711  [key=0, style=solid];
m8_710 -> m8_11  [key=2, style=dotted];
m8_711 -> m8_712  [key=0, style=solid];
m8_711 -> m8_98  [key=2, style=dotted];
m8_712 -> m8_713  [key=0, style=solid];
m8_712 -> m8_703  [key=2, style=dotted];
m8_712 -> m8_11  [key=2, style=dotted];
m8_713 -> m8_706  [color=blue, key=0, style=bold];
m8_403 -> m8_404  [key=0, style=solid];
m8_404 -> m8_405  [key=0, style=solid];
m8_404 -> m8_410  [key=2, style=dotted];
m8_405 -> m8_406  [key=0, style=solid];
m8_405 -> m8_9  [key=2, style=dotted];
m8_405 -> m8_407  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_406 -> m8_407  [key=0, style=solid];
m8_406 -> m8_11  [key=2, style=dotted];
m8_407 -> m8_408  [key=0, style=solid];
m8_407 -> m8_98  [key=2, style=dotted];
m8_408 -> m8_409  [key=0, style=solid];
m8_408 -> m8_11  [key=2, style=dotted];
m8_409 -> m8_403  [color=blue, key=0, style=bold];
m8_1255 -> m8_1256  [key=0, style=solid];
m8_1256 -> m8_1257  [key=0, style=solid];
m8_1256 -> m8_1263  [key=2, style=dotted];
m8_1257 -> m8_1258  [key=0, style=solid];
m8_1257 -> m8_362  [key=2, style=dotted];
m8_1258 -> m8_1259  [key=0, style=solid];
m8_1258 -> m8_11  [key=2, style=dotted];
m8_1259 -> m8_1260  [key=0, style=solid];
m8_1259 -> m8_1264  [key=2, style=dotted];
m8_1260 -> m8_1261  [key=0, style=solid];
m8_1260 -> m8_362  [key=2, style=dotted];
m8_1261 -> m8_1262  [key=0, style=solid];
m8_1261 -> m8_11  [key=2, style=dotted];
m8_1262 -> m8_1255  [color=blue, key=0, style=bold];
m8_1558 -> m8_1559  [key=0, style=solid];
m8_1559 -> m8_1560  [key=0, style=solid];
m8_1559 -> m8_1583  [key=2, style=dotted];
m8_1559 -> m8_1561  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1559 -> m8_1562  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1559 -> m8_1563  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1559 -> m8_1571  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1559 -> m8_1572  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1559 -> m8_1573  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1559 -> m8_1574  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1560 -> m8_1561  [key=0, style=solid];
m8_1561 -> m8_1562  [key=0, style=solid];
m8_1562 -> m8_1563  [key=0, style=solid];
m8_1563 -> m8_1564  [key=0, style=solid];
m8_1563 -> m8_362  [key=2, style=dotted];
m8_1563 -> m8_1565  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1571 -> m8_1572  [key=0, style=solid];
m8_1572 -> m8_1573  [key=0, style=solid];
m8_1573 -> m8_1574  [key=0, style=solid];
m8_1574 -> m8_1575  [key=0, style=solid];
m8_1574 -> m8_362  [key=2, style=dotted];
m8_1574 -> m8_1576  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1564 -> m8_1565  [key=0, style=solid];
m8_1564 -> m8_11  [key=2, style=dotted];
m8_1565 -> m8_1566  [key=0, style=solid];
m8_1565 -> m8_98  [key=2, style=dotted];
m8_1565 -> m8_1567  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1565 -> m8_1568  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1565 -> m8_1569  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1565 -> m8_1570  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1566 -> m8_1567  [key=0, style=solid];
m8_1566 -> m8_1337  [key=2, style=dotted];
m8_1567 -> m8_1568  [key=0, style=solid];
m8_1567 -> m8_1584  [key=2, style=dotted];
m8_1568 -> m8_1569  [key=0, style=solid];
m8_1568 -> m8_1584  [key=2, style=dotted];
m8_1569 -> m8_1570  [key=0, style=solid];
m8_1569 -> m8_1584  [key=2, style=dotted];
m8_1570 -> m8_1571  [key=0, style=solid];
m8_1570 -> m8_11  [key=2, style=dotted];
m8_1575 -> m8_1576  [key=0, style=solid];
m8_1575 -> m8_11  [key=2, style=dotted];
m8_1576 -> m8_1577  [key=0, style=solid];
m8_1576 -> m8_98  [key=2, style=dotted];
m8_1576 -> m8_1578  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1576 -> m8_1579  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1576 -> m8_1580  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1576 -> m8_1581  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1577 -> m8_1578  [key=0, style=solid];
m8_1577 -> m8_11  [key=2, style=dotted];
m8_1578 -> m8_1579  [key=0, style=solid];
m8_1578 -> m8_1585  [key=2, style=dotted];
m8_1579 -> m8_1580  [key=0, style=solid];
m8_1579 -> m8_1585  [key=2, style=dotted];
m8_1580 -> m8_1581  [key=0, style=solid];
m8_1580 -> m8_1585  [key=2, style=dotted];
m8_1581 -> m8_1582  [key=0, style=solid];
m8_1581 -> m8_11  [key=2, style=dotted];
m8_1582 -> m8_1558  [color=blue, key=0, style=bold];
m8_1793 -> m8_1794  [key=0, style=solid];
m8_1793 -> m8_1782  [color=darkorchid, key=3, label="Parameter variable string serStr", style=bold];
m8_1794 -> m8_1795  [key=0, style=solid];
m8_1794 -> m8_664  [key=2, style=dotted];
m8_1794 -> m8_721  [key=2, style=dotted];
m8_1795 -> m8_1793  [color=blue, key=0, style=bold];
m8_578 -> m8_579  [key=0, style=solid];
m8_579 -> m8_580  [key=0, style=solid];
m8_579 -> m8_579  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_580 -> m8_581  [key=0, style=solid];
m8_580 -> m8_98  [key=2, style=dotted];
m8_581 -> m8_578  [color=blue, key=0, style=bold];
m8_1002 -> m8_1003  [key=0, style=solid];
m8_1003 -> m8_1004  [key=0, style=solid];
m8_1003 -> m8_98  [key=2, style=dotted];
m8_1003 -> m8_1005  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1003 -> m8_1006  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1003 -> m8_1007  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1003 -> m8_1008  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1003 -> m8_1009  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1003 -> m8_1010  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1003 -> m8_1011  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1003 -> m8_1012  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1004 -> m8_1005  [key=0, style=solid];
m8_1004 -> m8_633  [key=2, style=dotted];
m8_1005 -> m8_1006  [key=0, style=solid];
m8_1005 -> m8_633  [key=2, style=dotted];
m8_1006 -> m8_1007  [key=0, style=solid];
m8_1006 -> m8_1014  [key=2, style=dotted];
m8_1006 -> m8_11  [key=2, style=dotted];
m8_1007 -> m8_1008  [key=0, style=solid];
m8_1007 -> m8_1014  [key=2, style=dotted];
m8_1007 -> m8_11  [key=2, style=dotted];
m8_1008 -> m8_1009  [key=0, style=solid];
m8_1008 -> m8_11  [key=2, style=dotted];
m8_1009 -> m8_1010  [key=0, style=solid];
m8_1009 -> m8_11  [key=2, style=dotted];
m8_1010 -> m8_1011  [key=0, style=solid];
m8_1010 -> m8_11  [key=2, style=dotted];
m8_1011 -> m8_1012  [key=0, style=solid];
m8_1011 -> m8_11  [key=2, style=dotted];
m8_1012 -> m8_1013  [key=0, style=solid];
m8_1012 -> m8_11  [key=2, style=dotted];
m8_1013 -> m8_1002  [color=blue, key=0, style=bold];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_28  [key=2, style=dotted];
m8_14 -> m8_16  [color=darkseagreen4, key=1, label=product, style=dashed];
m8_14 -> m8_17  [color=darkseagreen4, key=1, label=product, style=dashed];
m8_14 -> m8_18  [color=darkseagreen4, key=1, label=product, style=dashed];
m8_14 -> m8_19  [color=darkseagreen4, key=1, label=product, style=dashed];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_29  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_9  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_10  [key=2, style=dotted];
m8_20 -> m8_22  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_20 -> m8_23  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_20 -> m8_24  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_20 -> m8_25  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_20 -> m8_26  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_11  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_29  [key=2, style=dotted];
m8_22 -> m8_11  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_11  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_11  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_11  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_11  [key=2, style=dotted];
m8_27 -> m8_13  [color=blue, key=0, style=bold];
m8_1690 -> m8_1691  [key=0, style=solid];
m8_1691 -> m8_1692  [key=0, style=solid];
m8_1691 -> m8_1711  [key=2, style=dotted];
m8_1691 -> m8_1693  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1694  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1695  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1696  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1697  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1701  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1703  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1707  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1691 -> m8_1709  [color=darkseagreen4, key=1, label=expando, style=dashed];
m8_1692 -> m8_1693  [key=0, style=solid];
m8_1693 -> m8_1694  [key=0, style=solid];
m8_1694 -> m8_1695  [key=0, style=solid];
m8_1694 -> m8_1711  [key=2, style=dotted];
m8_1695 -> m8_1696  [key=0, style=solid];
m8_1696 -> m8_1697  [key=0, style=solid];
m8_1696 -> m8_208  [key=2, style=dotted];
m8_1697 -> m8_1698  [key=0, style=solid];
m8_1697 -> m8_1712  [key=2, style=dotted];
m8_1697 -> m8_1699  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1701 -> m8_1702  [key=0, style=solid];
m8_1701 -> m8_11  [key=2, style=dotted];
m8_1703 -> m8_1704  [key=0, style=solid];
m8_1703 -> m8_11  [key=2, style=dotted];
m8_1707 -> m8_1708  [key=0, style=solid];
m8_1707 -> m8_11  [key=2, style=dotted];
m8_1709 -> m8_1710  [key=0, style=solid];
m8_1709 -> m8_11  [key=2, style=dotted];
m8_1698 -> m8_1699  [key=0, style=solid];
m8_1698 -> m8_11  [key=2, style=dotted];
m8_1699 -> m8_1700  [key=0, style=solid];
m8_1699 -> m8_98  [key=2, style=dotted];
m8_1699 -> m8_1701  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m8_1699 -> m8_1702  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m8_1699 -> m8_1703  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m8_1699 -> m8_1704  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m8_1699 -> m8_1705  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m8_1700 -> m8_1701  [key=0, style=solid];
m8_1700 -> m8_817  [key=2, style=dotted];
m8_1702 -> m8_1703  [key=0, style=solid];
m8_1702 -> m8_817  [key=2, style=dotted];
m8_1704 -> m8_1705  [key=0, style=solid];
m8_1704 -> m8_817  [key=2, style=dotted];
m8_1705 -> m8_1706  [key=0, style=solid];
m8_1705 -> m8_1707  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1705 -> m8_1708  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1705 -> m8_1709  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1706 -> m8_1707  [key=0, style=solid];
m8_1706 -> m8_817  [key=2, style=dotted];
m8_1708 -> m8_1709  [key=0, style=solid];
m8_1708 -> m8_817  [key=2, style=dotted];
m8_1710 -> m8_1690  [color=blue, key=0, style=bold];
m8_1448 -> m8_1449  [key=0, style=solid];
m8_1448 -> m8_1451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1448 -> m8_1452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1448 -> m8_1453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1448 -> m8_1455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1448 -> m8_1450  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m8_1449 -> m8_1450  [key=0, style=solid];
m8_1451 -> m8_1452  [key=0, style=solid];
m8_1451 -> m8_1459  [key=2, style=dotted];
m8_1452 -> m8_1453  [key=0, style=solid];
m8_1452 -> m8_1456  [key=0, style=solid];
m8_1453 -> m8_1454  [key=0, style=solid];
m8_1455 -> m8_1452  [key=0, style=solid];
m8_1455 -> m8_1459  [key=2, style=dotted];
m8_1450 -> m8_1451  [key=0, style=solid];
m8_1450 -> m8_1458  [key=2, style=dotted];
m8_1450 -> m8_1454  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m8_1450 -> m8_1456  [color=darkseagreen4, key=1, label=newStrings, style=dashed];
m8_1454 -> m8_1455  [key=0, style=solid];
m8_1454 -> m8_159  [key=2, style=dotted];
m8_1456 -> m8_1457  [key=0, style=solid];
m8_1457 -> m8_1448  [color=blue, key=0, style=bold];
m8_892 -> m8_893  [key=0, style=solid];
m8_893 -> m8_894  [key=0, style=solid];
m8_893 -> m8_893  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_894 -> m8_895  [key=0, style=solid];
m8_894 -> m8_98  [key=2, style=dotted];
m8_895 -> m8_896  [key=0, style=solid];
m8_895 -> m8_11  [key=2, style=dotted];
m8_896 -> m8_892  [color=blue, key=0, style=bold];
m8_926 -> m8_927  [key=0, style=solid];
m8_927 -> m8_928  [key=0, style=solid];
m8_927 -> m8_937  [key=2, style=dotted];
m8_927 -> m8_932  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m8_928 -> m8_929  [key=0, style=solid];
m8_928 -> m8_362  [key=2, style=dotted];
m8_928 -> m8_930  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_928 -> m8_931  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_932 -> m8_933  [key=0, style=solid];
m8_932 -> m8_11  [key=2, style=dotted];
m8_932 -> m8_932  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m8_932 -> m8_934  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m8_929 -> m8_930  [key=0, style=solid];
m8_929 -> m8_12  [key=2, style=dotted];
m8_930 -> m8_931  [key=0, style=solid];
m8_930 -> m8_11  [key=2, style=dotted];
m8_931 -> m8_932  [key=0, style=solid];
m8_931 -> m8_98  [key=2, style=dotted];
m8_933 -> m8_934  [key=0, style=solid];
m8_933 -> m8_11  [key=2, style=dotted];
m8_934 -> m8_935  [key=0, style=solid];
m8_934 -> m8_11  [key=2, style=dotted];
m8_934 -> m8_934  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m8_935 -> m8_936  [key=0, style=solid];
m8_935 -> m8_11  [key=2, style=dotted];
m8_936 -> m8_926  [color=blue, key=0, style=bold];
m8_244 -> m8_245  [key=0, style=solid];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_254  [key=2, style=dotted];
m8_245 -> m8_28  [key=2, style=dotted];
m8_245 -> m8_249  [color=darkseagreen4, key=1, label=collection, style=dashed];
m8_245 -> m8_252  [color=darkseagreen4, key=1, label=collection, style=dashed];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_255  [key=2, style=dotted];
m8_246 -> m8_249  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m8_246 -> m8_251  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_257  [key=2, style=dotted];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_11  [key=2, style=dotted];
m8_247 -> m8_248  [key=0, style=solid];
m8_251 -> m8_252  [key=0, style=solid];
m8_251 -> m8_260  [key=2, style=dotted];
m8_251 -> m8_261  [key=2, style=dotted];
m8_251 -> m8_258  [key=2, style=dotted];
m8_251 -> m8_259  [key=2, style=dotted];
m8_251 -> m8_262  [key=2, style=dotted];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_256  [key=2, style=dotted];
m8_248 -> m8_250  [color=darkseagreen4, key=1, label=sw, style=dashed];
m8_248 -> m8_251  [color=darkseagreen4, key=1, label=sw, style=dashed];
m8_250 -> m8_251  [key=0, style=solid];
m8_250 -> m8_258  [key=2, style=dotted];
m8_250 -> m8_259  [key=2, style=dotted];
m8_250 -> m8_11  [key=2, style=dotted];
m8_253 -> m8_244  [color=blue, key=0, style=bold];
m8_191 -> m8_192  [key=0, style=solid];
m8_192 -> m8_193  [key=0, style=solid];
m8_192 -> m8_192  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_98  [key=2, style=dotted];
m8_194 -> m8_191  [color=blue, key=0, style=bold];
m8_644 -> m8_645  [key=0, style=solid];
m8_645 -> m8_646  [key=0, style=solid];
m8_645 -> m8_653  [key=2, style=dotted];
m8_645 -> m8_647  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_646 -> m8_647  [key=0, style=solid];
m8_647 -> m8_648  [key=0, style=solid];
m8_647 -> m8_9  [key=2, style=dotted];
m8_647 -> m8_649  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_648 -> m8_649  [key=0, style=solid];
m8_648 -> m8_11  [key=2, style=dotted];
m8_649 -> m8_650  [key=0, style=solid];
m8_649 -> m8_98  [key=2, style=dotted];
m8_650 -> m8_651  [key=0, style=solid];
m8_650 -> m8_9  [key=2, style=dotted];
m8_651 -> m8_652  [key=0, style=solid];
m8_651 -> m8_11  [key=2, style=dotted];
m8_652 -> m8_644  [color=blue, key=0, style=bold];
m8_1828 -> m8_1829  [key=0, style=solid];
m8_1829 -> m8_1830  [key=0, style=solid];
m8_1830 -> m8_1828  [color=blue, key=0, style=bold];
m8_879 -> m8_880  [key=0, style=solid];
m8_880 -> m8_881  [key=0, style=solid];
m8_880 -> m8_1825  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_881 -> m8_882  [key=0, style=solid];
m8_881 -> m8_98  [key=2, style=dotted];
m8_882 -> m8_879  [color=blue, key=0, style=bold];
m8_1761 -> m8_1762  [key=0, style=solid];
m8_1762 -> m8_1763  [key=0, style=solid];
m8_1762 -> m8_1753  [key=2, style=dotted];
m8_1762 -> m8_1764  [color=darkseagreen4, key=1, label=derived, style=dashed];
m8_1763 -> m8_1764  [key=0, style=solid];
m8_1763 -> m8_664  [key=2, style=dotted];
m8_1763 -> m8_1765  [color=darkseagreen4, key=1, label=settings, style=dashed];
m8_1764 -> m8_1765  [key=0, style=solid];
m8_1764 -> m8_665  [key=2, style=dotted];
m8_1765 -> m8_1766  [key=0, style=solid];
m8_1765 -> m8_721  [key=2, style=dotted];
m8_1765 -> m8_1767  [color=darkseagreen4, key=1, label=meh, style=dashed];
m8_1766 -> m8_1767  [key=0, style=solid];
m8_1766 -> m8_11  [key=2, style=dotted];
m8_1767 -> m8_1768  [key=0, style=solid];
m8_1767 -> m8_11  [key=2, style=dotted];
m8_1768 -> m8_1761  [color=blue, key=0, style=bold];
m8_1736 -> m8_1737  [key=0, style=solid];
m8_1737 -> m8_1738  [key=0, style=solid];
m8_1737 -> m8_1739  [key=2, style=dotted];
m8_1738 -> m8_1736  [color=blue, key=0, style=bold];
m8_1460 -> m8_1461  [key=0, style=solid];
m8_1461 -> m8_1462  [key=0, style=solid];
m8_1462 -> m8_1460  [color=blue, key=0, style=bold];
m8_1544 -> m8_1545  [key=0, style=solid];
m8_1545 -> m8_1546  [key=0, style=solid];
m8_1546 -> m8_1544  [color=blue, key=0, style=bold];
m8_1731 -> m8_1732  [key=0, style=solid];
m8_1732 -> m8_1733  [key=0, style=solid];
m8_1732 -> m8_1732  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1733 -> m8_1734  [key=0, style=solid];
m8_1733 -> m8_98  [key=2, style=dotted];
m8_1734 -> m8_1735  [key=0, style=solid];
m8_1734 -> m8_11  [key=2, style=dotted];
m8_1735 -> m8_1731  [color=blue, key=0, style=bold];
m8_353 -> m8_354  [key=0, style=solid];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_360  [key=2, style=dotted];
m8_354 -> m8_358  [color=darkseagreen4, key=1, label=ts, style=dashed];
m8_355 -> m8_356  [key=0, style=solid];
m8_355 -> m8_361  [key=2, style=dotted];
m8_355 -> m8_362  [key=2, style=dotted];
m8_355 -> m8_357  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_358 -> m8_359  [key=0, style=solid];
m8_358 -> m8_11  [key=2, style=dotted];
m8_356 -> m8_357  [key=0, style=solid];
m8_356 -> m8_11  [key=2, style=dotted];
m8_357 -> m8_358  [key=0, style=solid];
m8_357 -> m8_98  [key=2, style=dotted];
m8_359 -> m8_353  [color=blue, key=0, style=bold];
m8_1154 -> m8_1155  [key=0, style=solid];
m8_1154 -> m8_1156  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1157  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1158  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1159  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1160  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1161  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1162  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1163  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1164  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1165  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1166  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1167  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1168  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1169  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1170  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1171  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1154 -> m8_1172  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m8_1155 -> m8_1156  [key=0, style=solid];
m8_1155 -> m8_1174  [key=2, style=dotted];
m8_1156 -> m8_1157  [key=0, style=solid];
m8_1156 -> m8_1175  [key=2, style=dotted];
m8_1157 -> m8_1158  [key=0, style=solid];
m8_1157 -> m8_1176  [key=2, style=dotted];
m8_1158 -> m8_1159  [key=0, style=solid];
m8_1158 -> m8_1176  [key=2, style=dotted];
m8_1159 -> m8_1160  [key=0, style=solid];
m8_1159 -> m8_1176  [key=2, style=dotted];
m8_1160 -> m8_1161  [key=0, style=solid];
m8_1160 -> m8_1176  [key=2, style=dotted];
m8_1161 -> m8_1162  [key=0, style=solid];
m8_1161 -> m8_1177  [key=2, style=dotted];
m8_1162 -> m8_1163  [key=0, style=solid];
m8_1162 -> m8_1178  [key=2, style=dotted];
m8_1163 -> m8_1164  [key=0, style=solid];
m8_1163 -> m8_1179  [key=2, style=dotted];
m8_1164 -> m8_1165  [key=0, style=solid];
m8_1164 -> m8_1180  [key=2, style=dotted];
m8_1165 -> m8_1166  [key=0, style=solid];
m8_1165 -> m8_1181  [key=2, style=dotted];
m8_1166 -> m8_1167  [key=0, style=solid];
m8_1166 -> m8_1182  [key=2, style=dotted];
m8_1167 -> m8_1168  [key=0, style=solid];
m8_1167 -> m8_1183  [key=2, style=dotted];
m8_1168 -> m8_1169  [key=0, style=solid];
m8_1168 -> m8_1184  [key=2, style=dotted];
m8_1169 -> m8_1170  [key=0, style=solid];
m8_1169 -> m8_1185  [key=2, style=dotted];
m8_1170 -> m8_1171  [key=0, style=solid];
m8_1170 -> m8_1186  [key=2, style=dotted];
m8_1171 -> m8_1172  [key=0, style=solid];
m8_1171 -> m8_1187  [key=2, style=dotted];
m8_1172 -> m8_1173  [key=0, style=solid];
m8_1172 -> m8_1188  [key=2, style=dotted];
m8_1173 -> m8_1154  [color=blue, key=0, style=bold];
m8_212 -> m8_213  [key=0, style=solid];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_207  [key=2, style=dotted];
m8_213 -> m8_217  [key=2, style=dotted];
m8_213 -> m8_208  [key=2, style=dotted];
m8_213 -> m8_218  [key=2, style=dotted];
m8_213 -> m8_219  [key=2, style=dotted];
m8_214 -> m8_215  [key=0, style=solid];
m8_214 -> m8_9  [key=2, style=dotted];
m8_215 -> m8_216  [key=0, style=solid];
m8_215 -> m8_11  [key=2, style=dotted];
m8_216 -> m8_212  [color=blue, key=0, style=bold];
m8_1672 -> m8_1673  [key=0, style=solid];
m8_1673 -> m8_1674  [key=0, style=solid];
m8_1673 -> m8_1679  [key=2, style=dotted];
m8_1673 -> m8_1680  [key=2, style=dotted];
m8_1673 -> m8_29  [key=2, style=dotted];
m8_1673 -> m8_219  [key=2, style=dotted];
m8_1673 -> m8_9  [key=2, style=dotted];
m8_1673 -> m8_1675  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m8_1674 -> m8_1675  [key=0, style=solid];
m8_1674 -> m8_11  [key=2, style=dotted];
m8_1675 -> m8_1676  [key=0, style=solid];
m8_1675 -> m8_98  [key=2, style=dotted];
m8_1675 -> m8_1677  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m8_1676 -> m8_1677  [key=0, style=solid];
m8_1676 -> m8_219  [key=2, style=dotted];
m8_1676 -> m8_11  [key=2, style=dotted];
m8_1677 -> m8_1678  [key=0, style=solid];
m8_1677 -> m8_29  [key=2, style=dotted];
m8_1677 -> m8_11  [key=2, style=dotted];
m8_1678 -> m8_1672  [color=blue, key=0, style=bold];
m8_1081 -> m8_1082  [key=0, style=solid];
m8_1082 -> m8_1081  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_31  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_10  [key=2, style=dotted];
m8_32 -> m8_34  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_32 -> m8_35  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_11  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_37  [key=2, style=dotted];
m8_34 -> m8_11  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_11  [key=2, style=dotted];
m8_36 -> m8_30  [color=blue, key=0, style=bold];
m8_590 -> m8_591  [key=0, style=solid];
m8_591 -> m8_592  [key=0, style=solid];
m8_591 -> m8_594  [key=2, style=dotted];
m8_591 -> m8_208  [key=2, style=dotted];
m8_592 -> m8_593  [key=0, style=solid];
m8_593 -> m8_590  [color=blue, key=0, style=bold];
m8_553 -> m8_554  [key=0, style=solid];
m8_554 -> m8_555  [key=0, style=solid];
m8_554 -> m8_554  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_555 -> m8_556  [key=0, style=solid];
m8_555 -> m8_98  [key=2, style=dotted];
m8_556 -> m8_553  [color=blue, key=0, style=bold];
m8_1817 -> m8_1818  [key=0, style=solid];
m8_1818 -> m8_1819  [key=0, style=solid];
m8_1819 -> m8_1817  [color=blue, key=0, style=bold];
m8_548 -> m8_549  [key=0, style=solid];
m8_549 -> m8_550  [key=0, style=solid];
m8_549 -> m8_536  [key=2, style=dotted];
m8_549 -> m8_208  [key=2, style=dotted];
m8_550 -> m8_551  [key=0, style=solid];
m8_550 -> m8_9  [key=2, style=dotted];
m8_551 -> m8_552  [key=0, style=solid];
m8_551 -> m8_12  [key=2, style=dotted];
m8_552 -> m8_548  [color=blue, key=0, style=bold];
m8_1772 -> m8_1773  [key=0, style=solid];
m8_1773 -> m8_1774  [key=0, style=solid];
m8_1773 -> m8_1209  [key=2, style=dotted];
m8_1774 -> m8_1772  [color=blue, key=0, style=bold];
m8_1477 -> m8_1478  [key=0, style=solid];
m8_1477 -> m8_1479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1478 -> m8_1479  [key=0, style=solid];
m8_1479 -> m8_1480  [key=0, style=solid];
m8_1480 -> m8_1481  [key=0, style=solid];
m8_1481 -> m8_1477  [color=blue, key=0, style=bold];
m8_737 -> m8_738  [key=0, style=solid];
m8_738 -> m8_739  [key=0, style=solid];
m8_738 -> m8_738  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_739 -> m8_740  [key=0, style=solid];
m8_739 -> m8_10  [key=2, style=dotted];
m8_739 -> m8_741  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_739 -> m8_742  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_739 -> m8_743  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_739 -> m8_744  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_739 -> m8_745  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m8_740 -> m8_741  [key=0, style=solid];
m8_740 -> m8_11  [key=2, style=dotted];
m8_741 -> m8_742  [key=0, style=solid];
m8_741 -> m8_208  [key=2, style=dotted];
m8_741 -> m8_11  [key=2, style=dotted];
m8_742 -> m8_743  [key=0, style=solid];
m8_742 -> m8_11  [key=2, style=dotted];
m8_743 -> m8_744  [key=0, style=solid];
m8_743 -> m8_11  [key=2, style=dotted];
m8_744 -> m8_745  [key=0, style=solid];
m8_744 -> m8_11  [key=2, style=dotted];
m8_745 -> m8_746  [key=0, style=solid];
m8_745 -> m8_11  [key=2, style=dotted];
m8_746 -> m8_737  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_8  [key=2, style=dotted];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label=store, style=dashed];
m8_1 -> m8_5  [color=darkseagreen4, key=1, label=store, style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_9  [key=2, style=dotted];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_11  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_11  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_10  [key=2, style=dotted];
m8_3 -> m8_5  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_12  [key=2, style=dotted];
m8_7 -> m8_0  [color=blue, key=0, style=bold];
m8_1849 -> m8_1850  [key=0, style=solid];
m8_1850 -> m8_1851  [key=0, style=solid];
m8_1850 -> m8_98  [key=2, style=dotted];
m8_1850 -> m8_1852  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1850 -> m8_1853  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1851 -> m8_1852  [key=0, style=solid];
m8_1851 -> m8_11  [key=2, style=dotted];
m8_1852 -> m8_1853  [key=0, style=solid];
m8_1852 -> m8_11  [key=2, style=dotted];
m8_1853 -> m8_1854  [key=0, style=solid];
m8_1853 -> m8_11  [key=2, style=dotted];
m8_1854 -> m8_1849  [color=blue, key=0, style=bold];
m8_301 -> m8_302  [key=0, style=solid];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_317  [key=2, style=dotted];
m8_302 -> m8_304  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_302 -> m8_305  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_302 -> m8_306  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_302 -> m8_307  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_303 -> m8_304  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_318  [key=2, style=dotted];
m8_305 -> m8_306  [key=0, style=solid];
m8_305 -> m8_318  [key=2, style=dotted];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_318  [key=2, style=dotted];
m8_307 -> m8_308  [key=0, style=solid];
m8_307 -> m8_9  [key=2, style=dotted];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_98  [key=2, style=dotted];
m8_308 -> m8_310  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_308 -> m8_311  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_308 -> m8_312  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_308 -> m8_313  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_308 -> m8_314  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_308 -> m8_315  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m8_309 -> m8_310  [key=0, style=solid];
m8_309 -> m8_11  [key=2, style=dotted];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_11  [key=2, style=dotted];
m8_311 -> m8_312  [key=0, style=solid];
m8_311 -> m8_11  [key=2, style=dotted];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_11  [key=2, style=dotted];
m8_313 -> m8_314  [key=0, style=solid];
m8_313 -> m8_11  [key=2, style=dotted];
m8_314 -> m8_315  [key=0, style=solid];
m8_314 -> m8_11  [key=2, style=dotted];
m8_315 -> m8_316  [key=0, style=solid];
m8_315 -> m8_11  [key=2, style=dotted];
m8_316 -> m8_301  [color=blue, key=0, style=bold];
m8_432 -> m8_433  [key=0, style=solid];
m8_433 -> m8_434  [key=0, style=solid];
m8_433 -> m8_430  [key=2, style=dotted];
m8_433 -> m8_438  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_433 -> m8_439  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_434 -> m8_435  [key=0, style=solid];
m8_434 -> m8_431  [key=2, style=dotted];
m8_438 -> m8_439  [key=0, style=solid];
m8_438 -> m8_11  [key=2, style=dotted];
m8_439 -> m8_440  [key=0, style=solid];
m8_439 -> m8_11  [key=2, style=dotted];
m8_435 -> m8_436  [key=0, style=solid];
m8_435 -> m8_441  [key=2, style=dotted];
m8_435 -> m8_419  [key=2, style=dotted];
m8_435 -> m8_437  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_436 -> m8_437  [key=0, style=solid];
m8_436 -> m8_11  [key=2, style=dotted];
m8_437 -> m8_438  [key=0, style=solid];
m8_437 -> m8_441  [key=2, style=dotted];
m8_437 -> m8_420  [key=2, style=dotted];
m8_437 -> m8_439  [color=darkseagreen4, key=1, label=m2, style=dashed];
m8_440 -> m8_432  [color=blue, key=0, style=bold];
m8_780 -> m8_781  [key=0, style=solid];
m8_781 -> m8_782  [key=0, style=solid];
m8_781 -> m8_781  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_782 -> m8_783  [key=0, style=solid];
m8_782 -> m8_98  [key=2, style=dotted];
m8_782 -> m8_784  [color=darkseagreen4, key=1, label=content, style=dashed];
m8_782 -> m8_785  [color=darkseagreen4, key=1, label=content, style=dashed];
m8_782 -> m8_786  [color=darkseagreen4, key=1, label=content, style=dashed];
m8_783 -> m8_784  [key=0, style=solid];
m8_783 -> m8_11  [key=2, style=dotted];
m8_784 -> m8_785  [key=0, style=solid];
m8_784 -> m8_11  [key=2, style=dotted];
m8_785 -> m8_786  [key=0, style=solid];
m8_785 -> m8_11  [key=2, style=dotted];
m8_786 -> m8_787  [key=0, style=solid];
m8_786 -> m8_11  [key=2, style=dotted];
m8_787 -> m8_780  [color=blue, key=0, style=bold];
m8_1018 -> m8_1019  [key=0, style=solid];
m8_1019 -> m8_1020  [key=0, style=solid];
m8_1020 -> m8_1018  [color=blue, key=0, style=bold];
m8_1392 -> m8_1393  [key=0, style=solid];
m8_1393 -> m8_1394  [key=0, style=solid];
m8_1393 -> m8_1397  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_1393 -> m8_1400  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_1393 -> m8_1393  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m8_1394 -> m8_1395  [key=0, style=solid];
m8_1394 -> m8_9  [key=2, style=dotted];
m8_1397 -> m8_1398  [key=0, style=solid];
m8_1397 -> m8_229  [key=2, style=dotted];
m8_1400 -> m8_1401  [key=0, style=solid];
m8_1400 -> m8_229  [key=2, style=dotted];
m8_1395 -> m8_1396  [key=0, style=solid];
m8_1395 -> m8_11  [key=2, style=dotted];
m8_1396 -> m8_1397  [key=0, style=solid];
m8_1396 -> m8_56  [key=2, style=dotted];
m8_1396 -> m8_1398  [color=darkseagreen4, key=1, label=d1, style=dashed];
m8_1398 -> m8_1399  [key=0, style=solid];
m8_1398 -> m8_9  [key=2, style=dotted];
m8_1398 -> m8_11  [key=2, style=dotted];
m8_1399 -> m8_1400  [key=0, style=solid];
m8_1399 -> m8_56  [key=2, style=dotted];
m8_1399 -> m8_1401  [color=darkseagreen4, key=1, label=d2, style=dashed];
m8_1401 -> m8_1402  [key=0, style=solid];
m8_1401 -> m8_9  [key=2, style=dotted];
m8_1401 -> m8_11  [key=2, style=dotted];
m8_1402 -> m8_1392  [color=blue, key=0, style=bold];
m8_442 -> m8_443  [key=0, style=solid];
m8_443 -> m8_444  [key=0, style=solid];
m8_443 -> m8_448  [key=2, style=dotted];
m8_443 -> m8_449  [key=2, style=dotted];
m8_444 -> m8_445  [key=0, style=solid];
m8_444 -> m8_431  [key=2, style=dotted];
m8_445 -> m8_446  [key=0, style=solid];
m8_445 -> m8_362  [key=2, style=dotted];
m8_446 -> m8_447  [key=0, style=solid];
m8_446 -> m8_12  [key=2, style=dotted];
m8_447 -> m8_442  [color=blue, key=0, style=bold];
m8_903 -> m8_904  [key=0, style=solid];
m8_904 -> m8_905  [key=0, style=solid];
m8_904 -> m8_98  [key=2, style=dotted];
m8_905 -> m8_903  [color=blue, key=0, style=bold];
m8_1247 -> m8_1248  [key=0, style=solid];
m8_1248 -> m8_1249  [key=0, style=solid];
m8_1248 -> m8_98  [key=2, style=dotted];
m8_1248 -> m8_1250  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m8_1248 -> m8_1251  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m8_1248 -> m8_1252  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m8_1248 -> m8_1253  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m8_1249 -> m8_1250  [key=0, style=solid];
m8_1249 -> m8_11  [key=2, style=dotted];
m8_1250 -> m8_1251  [key=0, style=solid];
m8_1250 -> m8_11  [key=2, style=dotted];
m8_1251 -> m8_1252  [key=0, style=solid];
m8_1251 -> m8_11  [key=2, style=dotted];
m8_1252 -> m8_1253  [key=0, style=solid];
m8_1252 -> m8_11  [key=2, style=dotted];
m8_1253 -> m8_1254  [key=0, style=solid];
m8_1253 -> m8_11  [key=2, style=dotted];
m8_1254 -> m8_1247  [color=blue, key=0, style=bold];
m8_971 -> m8_972  [key=0, style=solid];
m8_972 -> m8_973  [key=0, style=solid];
m8_972 -> m8_972  [color=darkorchid, key=3, label="Local variable string googleSearchText", style=bold];
m8_973 -> m8_974  [key=0, style=solid];
m8_973 -> m8_756  [key=2, style=dotted];
m8_974 -> m8_975  [key=0, style=solid];
m8_974 -> m8_130  [key=2, style=dotted];
m8_974 -> m8_983  [key=2, style=dotted];
m8_974 -> m8_976  [color=darkseagreen4, key=1, label=results, style=dashed];
m8_975 -> m8_976  [key=0, style=solid];
m8_975 -> m8_207  [key=2, style=dotted];
m8_975 -> m8_978  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m8_975 -> m8_979  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m8_975 -> m8_980  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m8_975 -> m8_981  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m8_976 -> m8_977  [key=0, style=solid];
m8_976 -> m8_979  [key=0, style=solid];
m8_978 -> m8_976  [key=0, style=solid];
m8_978 -> m8_318  [key=2, style=dotted];
m8_979 -> m8_980  [key=0, style=solid];
m8_979 -> m8_11  [key=2, style=dotted];
m8_980 -> m8_981  [key=0, style=solid];
m8_980 -> m8_11  [key=2, style=dotted];
m8_981 -> m8_982  [key=0, style=solid];
m8_981 -> m8_11  [key=2, style=dotted];
m8_977 -> m8_978  [key=0, style=solid];
m8_977 -> m8_757  [key=2, style=dotted];
m8_977 -> m8_98  [key=2, style=dotted];
m8_982 -> m8_971  [color=blue, key=0, style=bold];
m8_582 -> m8_583  [key=0, style=solid];
m8_583 -> m8_584  [key=0, style=solid];
m8_583 -> m8_588  [key=2, style=dotted];
m8_583 -> m8_585  [color=darkseagreen4, key=1, label=testClass, style=dashed];
m8_584 -> m8_585  [key=0, style=solid];
m8_584 -> m8_589  [key=2, style=dotted];
m8_585 -> m8_586  [key=0, style=solid];
m8_585 -> m8_9  [key=2, style=dotted];
m8_586 -> m8_587  [key=0, style=solid];
m8_586 -> m8_10  [key=2, style=dotted];
m8_587 -> m8_582  [color=blue, key=0, style=bold];
m8_960 -> m8_961  [key=0, style=solid];
m8_961 -> m8_962  [key=0, style=solid];
m8_961 -> m8_56  [key=2, style=dotted];
m8_961 -> m8_963  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_961 -> m8_964  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_962 -> m8_963  [key=0, style=solid];
m8_962 -> m8_594  [key=2, style=dotted];
m8_962 -> m8_229  [key=2, style=dotted];
m8_963 -> m8_964  [key=0, style=solid];
m8_963 -> m8_594  [key=2, style=dotted];
m8_963 -> m8_229  [key=2, style=dotted];
m8_964 -> m8_965  [key=0, style=solid];
m8_964 -> m8_362  [key=2, style=dotted];
m8_965 -> m8_966  [key=0, style=solid];
m8_965 -> m8_11  [key=2, style=dotted];
m8_966 -> m8_960  [color=blue, key=0, style=bold];
m8_1811 -> m8_1812  [key=0, style=solid];
m8_1812 -> m8_1813  [key=0, style=solid];
m8_1812 -> m8_1808  [key=2, style=dotted];
m8_1813 -> m8_1814  [key=0, style=solid];
m8_1813 -> m8_9  [key=2, style=dotted];
m8_1814 -> m8_1815  [key=0, style=solid];
m8_1814 -> m8_98  [key=2, style=dotted];
m8_1815 -> m8_1816  [key=0, style=solid];
m8_1815 -> m8_11  [key=2, style=dotted];
m8_1816 -> m8_1811  [color=blue, key=0, style=bold];
m8_347 -> m8_348  [key=0, style=solid];
m8_348 -> m8_349  [key=0, style=solid];
m8_348 -> m8_9  [key=2, style=dotted];
m8_348 -> m8_350  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_349 -> m8_350  [key=0, style=solid];
m8_349 -> m8_11  [key=2, style=dotted];
m8_350 -> m8_351  [key=0, style=solid];
m8_350 -> m8_98  [key=2, style=dotted];
m8_351 -> m8_352  [key=0, style=solid];
m8_351 -> m8_11  [key=2, style=dotted];
m8_352 -> m8_347  [color=blue, key=0, style=bold];
m8_595 -> m8_596  [key=0, style=solid];
m8_596 -> m8_597  [key=0, style=solid];
m8_596 -> m8_590  [key=2, style=dotted];
m8_596 -> m8_602  [color=darkseagreen4, key=1, label=person, style=dashed];
m8_597 -> m8_598  [key=0, style=solid];
m8_597 -> m8_604  [key=2, style=dotted];
m8_602 -> m8_603  [key=0, style=solid];
m8_602 -> m8_607  [key=2, style=dotted];
m8_598 -> m8_599  [key=0, style=solid];
m8_598 -> m8_605  [key=2, style=dotted];
m8_599 -> m8_600  [key=0, style=solid];
m8_599 -> m8_606  [key=2, style=dotted];
m8_599 -> m8_602  [color=darkseagreen4, key=1, label=jw, style=dashed];
m8_600 -> m8_601  [key=0, style=solid];
m8_601 -> m8_602  [key=0, style=solid];
m8_601 -> m8_255  [key=2, style=dotted];
m8_603 -> m8_595  [color=blue, key=0, style=bold];
m8_328 -> m8_329  [key=0, style=solid];
m8_329 -> m8_330  [key=0, style=solid];
m8_329 -> m8_336  [key=2, style=dotted];
m8_329 -> m8_331  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_329 -> m8_332  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_329 -> m8_333  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_330 -> m8_331  [key=0, style=solid];
m8_330 -> m8_337  [key=2, style=dotted];
m8_331 -> m8_332  [key=0, style=solid];
m8_331 -> m8_337  [key=2, style=dotted];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_337  [key=2, style=dotted];
m8_333 -> m8_334  [key=0, style=solid];
m8_333 -> m8_9  [key=2, style=dotted];
m8_334 -> m8_335  [key=0, style=solid];
m8_334 -> m8_11  [key=2, style=dotted];
m8_335 -> m8_328  [color=blue, key=0, style=bold];
m8_195 -> m8_196  [key=0, style=solid];
m8_196 -> m8_197  [key=0, style=solid];
m8_196 -> m8_207  [key=2, style=dotted];
m8_196 -> m8_208  [key=2, style=dotted];
m8_196 -> m8_200  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m8_196 -> m8_204  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m8_197 -> m8_198  [key=0, style=solid];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_59  [key=2, style=dotted];
m8_204 -> m8_205  [key=0, style=solid];
m8_204 -> m8_9  [key=2, style=dotted];
m8_198 -> m8_199  [key=0, style=solid];
m8_198 -> m8_57  [key=2, style=dotted];
m8_198 -> m8_200  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_198 -> m8_201  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_198 -> m8_202  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_58  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_209  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_210  [key=2, style=dotted];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_211  [key=2, style=dotted];
m8_203 -> m8_205  [color=darkseagreen4, key=1, label=expected, style=dashed];
m8_205 -> m8_206  [key=0, style=solid];
m8_205 -> m8_11  [key=2, style=dotted];
m8_206 -> m8_195  [color=blue, key=0, style=bold];
m8_703 -> m8_704  [key=0, style=solid];
m8_704 -> m8_705  [key=0, style=solid];
m8_705 -> m8_703  [color=blue, key=0, style=bold];
m8_1100 -> m8_1101  [key=0, style=solid];
m8_1101 -> m8_1102  [key=0, style=solid];
m8_1101 -> m8_1103  [key=2, style=dotted];
m8_1102 -> m8_1100  [color=blue, key=0, style=bold];
m8_99 -> m8_100  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_104  [key=2, style=dotted];
m8_100 -> m8_9  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_98  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_11  [key=2, style=dotted];
m8_103 -> m8_99  [color=blue, key=0, style=bold];
m8_421 -> m8_422  [key=0, style=solid];
m8_422 -> m8_423  [key=0, style=solid];
m8_422 -> m8_430  [key=2, style=dotted];
m8_422 -> m8_427  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_422 -> m8_428  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m8_423 -> m8_424  [key=0, style=solid];
m8_423 -> m8_431  [key=2, style=dotted];
m8_427 -> m8_428  [key=0, style=solid];
m8_427 -> m8_11  [key=2, style=dotted];
m8_428 -> m8_429  [key=0, style=solid];
m8_428 -> m8_11  [key=2, style=dotted];
m8_424 -> m8_425  [key=0, style=solid];
m8_424 -> m8_9  [key=2, style=dotted];
m8_424 -> m8_426  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_425 -> m8_426  [key=0, style=solid];
m8_425 -> m8_11  [key=2, style=dotted];
m8_426 -> m8_427  [key=0, style=solid];
m8_426 -> m8_98  [key=2, style=dotted];
m8_426 -> m8_428  [color=darkseagreen4, key=1, label=m2, style=dashed];
m8_429 -> m8_421  [color=blue, key=0, style=bold];
m8_1126 -> m8_1127  [key=0, style=solid];
m8_1127 -> m8_1128  [key=0, style=solid];
m8_1127 -> m8_1129  [key=2, style=dotted];
m8_1128 -> m8_1126  [color=blue, key=0, style=bold];
m8_1865 -> m8_1866  [key=0, style=solid];
m8_1866 -> m8_1867  [key=0, style=solid];
m8_1866 -> m8_1870  [key=2, style=dotted];
m8_1867 -> m8_1868  [key=0, style=solid];
m8_1867 -> m8_362  [key=2, style=dotted];
m8_1868 -> m8_1869  [key=0, style=solid];
m8_1868 -> m8_11  [key=2, style=dotted];
m8_1869 -> m8_1865  [color=blue, key=0, style=bold];
m8_837 -> m8_838  [key=0, style=solid];
m8_838 -> m8_839  [key=0, style=solid];
m8_838 -> m8_838  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_839 -> m8_840  [key=0, style=solid];
m8_839 -> m8_98  [key=2, style=dotted];
m8_839 -> m8_841  [color=darkseagreen4, key=1, label=products, style=dashed];
m8_839 -> m8_843  [color=darkseagreen4, key=1, label=products, style=dashed];
m8_839 -> m8_844  [color=darkseagreen4, key=1, label=products, style=dashed];
m8_840 -> m8_841  [key=0, style=solid];
m8_840 -> m8_827  [key=2, style=dotted];
m8_841 -> m8_842  [key=0, style=solid];
m8_843 -> m8_844  [key=0, style=solid];
m8_843 -> m8_11  [key=2, style=dotted];
m8_844 -> m8_845  [key=0, style=solid];
m8_844 -> m8_11  [key=2, style=dotted];
m8_842 -> m8_843  [key=0, style=solid];
m8_842 -> m8_12  [key=2, style=dotted];
m8_845 -> m8_837  [color=blue, key=0, style=bold];
m8_1371 -> m8_1372  [key=0, style=solid];
m8_1372 -> m8_1373  [key=0, style=solid];
m8_1372 -> m8_1374  [key=2, style=dotted];
m8_1373 -> m8_1371  [color=blue, key=0, style=bold];
m8_1104 -> m8_1105  [key=0, style=solid];
m8_1105 -> m8_1106  [key=0, style=solid];
m8_1105 -> m8_1107  [key=2, style=dotted];
m8_1106 -> m8_1104  [color=blue, key=0, style=bold];
m8_1362 -> m8_1363  [key=0, style=solid];
m8_1362 -> m8_1365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_1362 -> m8_1366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_1363 -> m8_1364  [key=0, style=solid];
m8_1363 -> m8_1365  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1365 -> m8_1367  [key=0, style=solid];
m8_1365 -> m8_1368  [key=2, style=dotted];
m8_1365 -> m8_1369  [key=2, style=dotted];
m8_1366 -> m8_1367  [key=0, style=solid];
m8_1366 -> m8_1370  [key=2, style=dotted];
m8_1364 -> m8_1365  [key=0, style=solid];
m8_1364 -> m8_1366  [key=0, style=solid];
m8_1367 -> m8_1362  [color=blue, key=0, style=bold];
m8_875 -> m8_876  [key=0, style=solid];
m8_876 -> m8_877  [key=0, style=solid];
m8_876 -> m8_876  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_877 -> m8_878  [key=0, style=solid];
m8_877 -> m8_98  [key=2, style=dotted];
m8_878 -> m8_875  [color=blue, key=0, style=bold];
m8_998 -> m8_999  [key=0, style=solid];
m8_999 -> m8_1000  [key=0, style=solid];
m8_999 -> m8_56  [key=2, style=dotted];
m8_1000 -> m8_1001  [key=0, style=solid];
m8_1000 -> m8_207  [key=2, style=dotted];
m8_1001 -> m8_998  [color=blue, key=0, style=bold];
m8_1855 -> m8_1856  [key=0, style=solid];
m8_1856 -> m8_1857  [key=0, style=solid];
m8_1856 -> m8_1864  [key=2, style=dotted];
m8_1856 -> m8_207  [key=2, style=dotted];
m8_1857 -> m8_1858  [key=0, style=solid];
m8_1857 -> m8_362  [key=2, style=dotted];
m8_1857 -> m8_1859  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1858 -> m8_1859  [key=0, style=solid];
m8_1858 -> m8_11  [key=2, style=dotted];
m8_1859 -> m8_1860  [key=0, style=solid];
m8_1859 -> m8_98  [key=2, style=dotted];
m8_1859 -> m8_1861  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_1859 -> m8_1862  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_1860 -> m8_1861  [key=0, style=solid];
m8_1860 -> m8_736  [key=2, style=dotted];
m8_1860 -> m8_11  [key=2, style=dotted];
m8_1861 -> m8_1862  [key=0, style=solid];
m8_1861 -> m8_736  [key=2, style=dotted];
m8_1861 -> m8_11  [key=2, style=dotted];
m8_1862 -> m8_1863  [key=0, style=solid];
m8_1862 -> m8_736  [key=2, style=dotted];
m8_1862 -> m8_11  [key=2, style=dotted];
m8_1863 -> m8_1855  [color=blue, key=0, style=bold];
m8_1243 -> m8_1244  [key=0, style=solid];
m8_1243 -> m8_1245  [color=darkseagreen4, key=1, label=TValue, style=dashed];
m8_1244 -> m8_1245  [key=0, style=solid];
m8_1245 -> m8_1246  [key=0, style=solid];
m8_1246 -> m8_1243  [color=blue, key=0, style=bold];
m8_272 -> m8_273  [key=0, style=solid];
m8_273 -> m8_274  [key=0, style=solid];
m8_273 -> m8_273  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_274 -> m8_275  [key=0, style=solid];
m8_274 -> m8_98  [key=2, style=dotted];
m8_274 -> m8_276  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_274 -> m8_277  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_274 -> m8_278  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_274 -> m8_279  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_274 -> m8_280  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_275 -> m8_276  [key=0, style=solid];
m8_275 -> m8_11  [key=2, style=dotted];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_11  [key=2, style=dotted];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_11  [key=2, style=dotted];
m8_278 -> m8_279  [key=0, style=solid];
m8_278 -> m8_11  [key=2, style=dotted];
m8_279 -> m8_280  [key=0, style=solid];
m8_279 -> m8_11  [key=2, style=dotted];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_11  [key=2, style=dotted];
m8_281 -> m8_272  [color=blue, key=0, style=bold];
m8_1820 -> m8_1821  [key=0, style=solid];
m8_1821 -> m8_1822  [key=0, style=solid];
m8_1822 -> m8_1823  [key=0, style=solid];
m8_1823 -> m8_1820  [color=blue, key=0, style=bold];
m8_220 -> m8_221  [key=0, style=solid];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_56  [key=2, style=dotted];
m8_221 -> m8_223  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_221 -> m8_224  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_221 -> m8_227  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_229  [key=2, style=dotted];
m8_223 -> m8_224  [key=0, style=solid];
m8_223 -> m8_229  [key=2, style=dotted];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_9  [key=2, style=dotted];
m8_224 -> m8_226  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_227 -> m8_228  [key=0, style=solid];
m8_227 -> m8_11  [key=2, style=dotted];
m8_225 -> m8_226  [key=0, style=solid];
m8_225 -> m8_11  [key=2, style=dotted];
m8_226 -> m8_227  [key=0, style=solid];
m8_226 -> m8_98  [key=2, style=dotted];
m8_228 -> m8_220  [color=blue, key=0, style=bold];
m8_1389 -> m8_1390  [key=0, style=solid];
m8_1390 -> m8_1391  [key=0, style=solid];
m8_1390 -> m8_1378  [key=2, style=dotted];
m8_1391 -> m8_1389  [color=blue, key=0, style=bold];
m8_984 -> m8_985  [key=0, style=solid];
m8_985 -> m8_986  [key=0, style=solid];
m8_985 -> m8_997  [key=2, style=dotted];
m8_985 -> m8_992  [color=darkseagreen4, key=1, label=personPropertyClass, style=dashed];
m8_986 -> m8_987  [key=0, style=solid];
m8_986 -> m8_988  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m8_986 -> m8_989  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m8_986 -> m8_990  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m8_986 -> m8_991  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m8_986 -> m8_995  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m8_992 -> m8_993  [key=0, style=solid];
m8_992 -> m8_362  [key=2, style=dotted];
m8_992 -> m8_994  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_987 -> m8_988  [key=0, style=solid];
m8_987 -> m8_208  [key=2, style=dotted];
m8_988 -> m8_989  [key=0, style=solid];
m8_989 -> m8_990  [key=0, style=solid];
m8_990 -> m8_991  [key=0, style=solid];
m8_990 -> m8_208  [key=2, style=dotted];
m8_991 -> m8_992  [key=0, style=solid];
m8_995 -> m8_996  [key=0, style=solid];
m8_995 -> m8_11  [key=2, style=dotted];
m8_993 -> m8_994  [key=0, style=solid];
m8_993 -> m8_11  [key=2, style=dotted];
m8_994 -> m8_995  [key=0, style=solid];
m8_994 -> m8_98  [key=2, style=dotted];
m8_996 -> m8_984  [color=blue, key=0, style=bold];
m8_461 -> m8_462  [key=0, style=solid];
m8_462 -> m8_463  [key=0, style=solid];
m8_462 -> m8_465  [key=2, style=dotted];
m8_463 -> m8_464  [key=0, style=solid];
m8_463 -> m8_9  [key=2, style=dotted];
m8_464 -> m8_461  [color=blue, key=0, style=bold];
m8_120 -> m8_121  [key=0, style=solid];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_121  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_119  [key=2, style=dotted];
m8_122 -> m8_124  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_128  [key=2, style=dotted];
m8_123 -> m8_129  [key=2, style=dotted];
m8_123 -> m8_11  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_125 -> m8_126  [key=0, style=solid];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_130  [key=2, style=dotted];
m8_126 -> m8_129  [key=2, style=dotted];
m8_126 -> m8_11  [key=2, style=dotted];
m8_127 -> m8_120  [color=blue, key=0, style=bold];
m8_795 -> m8_796  [key=0, style=solid];
m8_796 -> m8_797  [key=0, style=solid];
m8_796 -> m8_796  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_797 -> m8_798  [key=0, style=solid];
m8_797 -> m8_98  [key=2, style=dotted];
m8_797 -> m8_799  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_797 -> m8_800  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_797 -> m8_801  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_797 -> m8_802  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_798 -> m8_799  [key=0, style=solid];
m8_798 -> m8_11  [key=2, style=dotted];
m8_799 -> m8_800  [key=0, style=solid];
m8_799 -> m8_11  [key=2, style=dotted];
m8_800 -> m8_801  [key=0, style=solid];
m8_800 -> m8_11  [key=2, style=dotted];
m8_801 -> m8_802  [key=0, style=solid];
m8_801 -> m8_11  [key=2, style=dotted];
m8_802 -> m8_803  [key=0, style=solid];
m8_802 -> m8_11  [key=2, style=dotted];
m8_803 -> m8_795  [color=blue, key=0, style=bold];
m8_1482 -> m8_1483  [key=0, style=solid];
m8_1483 -> m8_1484  [key=0, style=solid];
m8_1484 -> m8_1482  [color=blue, key=0, style=bold];
m8_371 -> m8_372  [key=0, style=solid];
m8_372 -> m8_373  [key=0, style=solid];
m8_372 -> m8_372  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m8_373 -> m8_374  [key=0, style=solid];
m8_373 -> m8_98  [key=2, style=dotted];
m8_373 -> m8_375  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_373 -> m8_376  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_374 -> m8_375  [key=0, style=solid];
m8_374 -> m8_11  [key=2, style=dotted];
m8_375 -> m8_376  [key=0, style=solid];
m8_375 -> m8_11  [key=2, style=dotted];
m8_376 -> m8_377  [key=0, style=solid];
m8_376 -> m8_11  [key=2, style=dotted];
m8_377 -> m8_371  [color=blue, key=0, style=bold];
m8_1796 -> m8_1797  [key=0, style=solid];
m8_1797 -> m8_1798  [key=0, style=solid];
m8_1797 -> m8_1803  [key=2, style=dotted];
m8_1797 -> m8_1804  [key=2, style=dotted];
m8_1797 -> m8_773  [key=2, style=dotted];
m8_1797 -> m8_1801  [color=darkseagreen4, key=1, label=response, style=dashed];
m8_1798 -> m8_1799  [key=0, style=solid];
m8_1798 -> m8_362  [key=2, style=dotted];
m8_1801 -> m8_1802  [key=0, style=solid];
m8_1801 -> m8_1805  [key=2, style=dotted];
m8_1801 -> m8_1585  [key=2, style=dotted];
m8_1799 -> m8_1800  [key=0, style=solid];
m8_1799 -> m8_98  [key=2, style=dotted];
m8_1799 -> m8_1801  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m8_1800 -> m8_1801  [key=0, style=solid];
m8_1800 -> m8_11  [key=2, style=dotted];
m8_1802 -> m8_1796  [color=blue, key=0, style=bold];
m8_1769 -> m8_1770  [key=0, style=solid];
m8_1770 -> m8_1771  [key=0, style=solid];
m8_1770 -> m8_1174  [key=2, style=dotted];
m8_1770 -> m8_1930  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m8_1771 -> m8_1769  [color=blue, key=0, style=bold];
m8_967 -> m8_968  [key=0, style=solid];
m8_968 -> m8_969  [key=0, style=solid];
m8_968 -> m8_968  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_969 -> m8_970  [key=0, style=solid];
m8_969 -> m8_98  [key=2, style=dotted];
m8_970 -> m8_967  [color=blue, key=0, style=bold];
m8_1835 -> m8_1836  [key=0, style=solid];
m8_1836 -> m8_1837  [key=0, style=solid];
m8_1836 -> m8_98  [key=2, style=dotted];
m8_1836 -> m8_1838  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1837 -> m8_1838  [key=0, style=solid];
m8_1837 -> m8_11  [key=2, style=dotted];
m8_1838 -> m8_1839  [key=0, style=solid];
m8_1838 -> m8_11  [key=2, style=dotted];
m8_1839 -> m8_1835  [color=blue, key=0, style=bold];
m8_167 -> m8_168  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_170  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_168 -> m8_171  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_168 -> m8_168  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_58  [key=2, style=dotted];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_175  [key=2, style=dotted];
m8_170 -> m8_176  [key=2, style=dotted];
m8_170 -> m8_177  [key=2, style=dotted];
m8_170 -> m8_173  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_98  [key=2, style=dotted];
m8_171 -> m8_173  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_11  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_11  [key=2, style=dotted];
m8_174 -> m8_167  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_29  [key=2, style=dotted];
m8_39 -> m8_41  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m8_39 -> m8_50  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_56  [key=2, style=dotted];
m8_40 -> m8_42  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m8_40 -> m8_45  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m8_41 -> m8_42  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_11  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_9  [key=2, style=dotted];
m8_42 -> m8_48  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_42 -> m8_52  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_42 -> m8_54  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_59  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_57  [key=2, style=dotted];
m8_43 -> m8_45  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_43 -> m8_46  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_10  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_12  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_12  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_58  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_60  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_61  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_12  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_62  [key=2, style=dotted];
m8_55 -> m8_38  [color=blue, key=0, style=bold];
m8_1134 -> m8_1135  [key=0, style=solid];
m8_1135 -> m8_1136  [key=0, style=solid];
m8_1135 -> m8_1137  [key=2, style=dotted];
m8_1136 -> m8_1134  [color=blue, key=0, style=bold];
m8_722 -> m8_723  [key=0, style=solid];
m8_723 -> m8_724  [key=0, style=solid];
m8_723 -> m8_723  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_724 -> m8_725  [key=0, style=solid];
m8_724 -> m8_664  [key=2, style=dotted];
m8_724 -> m8_721  [key=2, style=dotted];
m8_724 -> m8_726  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_727  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_728  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_729  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_730  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_731  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_732  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_733  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_724 -> m8_734  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_725 -> m8_726  [key=0, style=solid];
m8_725 -> m8_11  [key=2, style=dotted];
m8_726 -> m8_727  [key=0, style=solid];
m8_726 -> m8_11  [key=2, style=dotted];
m8_727 -> m8_728  [key=0, style=solid];
m8_727 -> m8_11  [key=2, style=dotted];
m8_728 -> m8_729  [key=0, style=solid];
m8_728 -> m8_11  [key=2, style=dotted];
m8_729 -> m8_730  [key=0, style=solid];
m8_729 -> m8_11  [key=2, style=dotted];
m8_730 -> m8_731  [key=0, style=solid];
m8_730 -> m8_736  [key=2, style=dotted];
m8_730 -> m8_11  [key=2, style=dotted];
m8_731 -> m8_732  [key=0, style=solid];
m8_731 -> m8_736  [key=2, style=dotted];
m8_731 -> m8_11  [key=2, style=dotted];
m8_732 -> m8_733  [key=0, style=solid];
m8_732 -> m8_11  [key=2, style=dotted];
m8_733 -> m8_734  [key=0, style=solid];
m8_733 -> m8_11  [key=2, style=dotted];
m8_734 -> m8_735  [key=0, style=solid];
m8_734 -> m8_633  [key=2, style=dotted];
m8_735 -> m8_722  [color=blue, key=0, style=bold];
m8_478 -> m8_479  [key=0, style=solid];
m8_479 -> m8_480  [key=0, style=solid];
m8_479 -> m8_484  [key=2, style=dotted];
m8_479 -> m8_485  [key=2, style=dotted];
m8_479 -> m8_481  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m8_480 -> m8_481  [key=0, style=solid];
m8_481 -> m8_482  [key=0, style=solid];
m8_481 -> m8_9  [key=2, style=dotted];
m8_482 -> m8_483  [key=0, style=solid];
m8_482 -> m8_11  [key=2, style=dotted];
m8_483 -> m8_478  [color=blue, key=0, style=bold];
m8_1379 -> m8_1380  [key=0, style=solid];
m8_1379 -> m8_1382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_1379 -> m8_1383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m8_1380 -> m8_1381  [key=0, style=solid];
m8_1380 -> m8_1382  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1382 -> m8_1384  [key=0, style=solid];
m8_1382 -> m8_1385  [key=2, style=dotted];
m8_1382 -> m8_1369  [key=2, style=dotted];
m8_1383 -> m8_1384  [key=0, style=solid];
m8_1383 -> m8_1370  [key=2, style=dotted];
m8_1381 -> m8_1382  [key=0, style=solid];
m8_1381 -> m8_1383  [key=0, style=solid];
m8_1384 -> m8_1379  [color=blue, key=0, style=bold];
m8_1108 -> m8_1109  [key=0, style=solid];
m8_1109 -> m8_1110  [key=0, style=solid];
m8_1109 -> m8_1111  [key=2, style=dotted];
m8_1110 -> m8_1108  [color=blue, key=0, style=bold];
m8_1606 -> m8_1607  [key=0, style=solid];
m8_1607 -> m8_1608  [key=0, style=solid];
m8_1608 -> m8_1606  [color=blue, key=0, style=bold];
m8_1891 -> m8_1892  [key=0, style=solid];
m8_1892 -> m8_1893  [key=0, style=solid];
m8_1892 -> m8_1892  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1893 -> m8_1894  [key=0, style=solid];
m8_1893 -> m8_98  [key=2, style=dotted];
m8_1893 -> m8_1895  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m8_1893 -> m8_1896  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m8_1894 -> m8_1895  [key=0, style=solid];
m8_1894 -> m8_11  [key=2, style=dotted];
m8_1895 -> m8_1896  [key=0, style=solid];
m8_1895 -> m8_11  [key=2, style=dotted];
m8_1896 -> m8_1897  [key=0, style=solid];
m8_1896 -> m8_11  [key=2, style=dotted];
m8_1897 -> m8_1891  [color=blue, key=0, style=bold];
m8_1298 -> m8_1299  [key=0, style=solid];
m8_1299 -> m8_1298  [color=blue, key=0, style=bold];
m8_846 -> m8_847  [key=0, style=solid];
m8_847 -> m8_848  [key=0, style=solid];
m8_847 -> m8_847  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_848 -> m8_849  [key=0, style=solid];
m8_848 -> m8_98  [key=2, style=dotted];
m8_849 -> m8_850  [key=0, style=solid];
m8_849 -> m8_11  [key=2, style=dotted];
m8_850 -> m8_846  [color=blue, key=0, style=bold];
m8_1806 -> m8_1807  [key=0, style=solid];
m8_1807 -> m8_1806  [color=blue, key=0, style=bold];
m8_1878 -> m8_1879  [key=0, style=solid];
m8_1879 -> m8_1880  [key=0, style=solid];
m8_1879 -> m8_10  [key=2, style=dotted];
m8_1880 -> m8_1878  [color=blue, key=0, style=bold];
m8_1138 -> m8_1139  [key=0, style=solid];
m8_1139 -> m8_1140  [key=0, style=solid];
m8_1139 -> m8_1081  [key=2, style=dotted];
m8_1139 -> m8_1141  [color=darkseagreen4, key=1, label=modelStateDictionary, style=dashed];
m8_1140 -> m8_1141  [key=0, style=solid];
m8_1140 -> m8_1093  [key=2, style=dotted];
m8_1141 -> m8_1142  [key=0, style=solid];
m8_1141 -> m8_9  [key=2, style=dotted];
m8_1141 -> m8_1143  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1142 -> m8_1143  [key=0, style=solid];
m8_1142 -> m8_11  [key=2, style=dotted];
m8_1143 -> m8_1144  [key=0, style=solid];
m8_1143 -> m8_98  [key=2, style=dotted];
m8_1143 -> m8_1145  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m8_1144 -> m8_1145  [key=0, style=solid];
m8_1144 -> m8_11  [key=2, style=dotted];
m8_1145 -> m8_1146  [key=0, style=solid];
m8_1145 -> m8_11  [key=2, style=dotted];
m8_1146 -> m8_1138  [color=blue, key=0, style=bold];
m8_1429 -> m8_1430  [key=0, style=solid];
m8_1430 -> m8_1431  [key=0, style=solid];
m8_1430 -> m8_208  [key=2, style=dotted];
m8_1430 -> m8_1432  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m8_1430 -> m8_1433  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m8_1431 -> m8_1432  [key=0, style=solid];
m8_1431 -> m8_207  [key=2, style=dotted];
m8_1431 -> m8_1433  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_1431 -> m8_1434  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_1432 -> m8_1433  [key=0, style=solid];
m8_1432 -> m8_1428  [key=2, style=dotted];
m8_1432 -> m8_1443  [key=2, style=dotted];
m8_1432 -> m8_159  [key=2, style=dotted];
m8_1433 -> m8_1434  [key=0, style=solid];
m8_1433 -> m8_1428  [key=2, style=dotted];
m8_1433 -> m8_1443  [key=2, style=dotted];
m8_1433 -> m8_159  [key=2, style=dotted];
m8_1434 -> m8_1435  [key=0, style=solid];
m8_1434 -> m8_362  [key=2, style=dotted];
m8_1434 -> m8_1436  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1435 -> m8_1436  [key=0, style=solid];
m8_1435 -> m8_11  [key=2, style=dotted];
m8_1436 -> m8_1437  [key=0, style=solid];
m8_1436 -> m8_98  [key=2, style=dotted];
m8_1436 -> m8_1438  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1436 -> m8_1439  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1436 -> m8_1440  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1436 -> m8_1441  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1437 -> m8_1438  [key=0, style=solid];
m8_1437 -> m8_11  [key=2, style=dotted];
m8_1438 -> m8_1439  [key=0, style=solid];
m8_1438 -> m8_11  [key=2, style=dotted];
m8_1439 -> m8_1440  [key=0, style=solid];
m8_1439 -> m8_11  [key=2, style=dotted];
m8_1440 -> m8_1441  [key=0, style=solid];
m8_1440 -> m8_11  [key=2, style=dotted];
m8_1441 -> m8_1442  [key=0, style=solid];
m8_1441 -> m8_11  [key=2, style=dotted];
m8_1442 -> m8_1429  [color=blue, key=0, style=bold];
m8_909 -> m8_910  [key=0, style=solid];
m8_910 -> m8_911  [key=0, style=solid];
m8_910 -> m8_207  [key=2, style=dotted];
m8_910 -> m8_912  [color=darkseagreen4, key=1, label=strings, style=dashed];
m8_910 -> m8_913  [color=darkseagreen4, key=1, label=strings, style=dashed];
m8_910 -> m8_914  [color=darkseagreen4, key=1, label=strings, style=dashed];
m8_911 -> m8_912  [key=0, style=solid];
m8_911 -> m8_159  [key=2, style=dotted];
m8_912 -> m8_913  [key=0, style=solid];
m8_912 -> m8_159  [key=2, style=dotted];
m8_913 -> m8_914  [key=0, style=solid];
m8_913 -> m8_159  [key=2, style=dotted];
m8_914 -> m8_915  [key=0, style=solid];
m8_914 -> m8_9  [key=2, style=dotted];
m8_915 -> m8_916  [key=0, style=solid];
m8_915 -> m8_11  [key=2, style=dotted];
m8_916 -> m8_909  [color=blue, key=0, style=bold];
m8_917 -> m8_918  [key=0, style=solid];
m8_918 -> m8_919  [key=0, style=solid];
m8_918 -> m8_925  [key=2, style=dotted];
m8_919 -> m8_920  [key=0, style=solid];
m8_919 -> m8_362  [key=2, style=dotted];
m8_919 -> m8_921  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_920 -> m8_921  [key=0, style=solid];
m8_920 -> m8_11  [key=2, style=dotted];
m8_921 -> m8_922  [key=0, style=solid];
m8_921 -> m8_98  [key=2, style=dotted];
m8_921 -> m8_923  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_922 -> m8_923  [key=0, style=solid];
m8_922 -> m8_11  [key=2, style=dotted];
m8_923 -> m8_924  [key=0, style=solid];
m8_923 -> m8_11  [key=2, style=dotted];
m8_924 -> m8_917  [color=blue, key=0, style=bold];
m8_363 -> m8_364  [key=0, style=solid];
m8_364 -> m8_365  [key=0, style=solid];
m8_364 -> m8_370  [key=2, style=dotted];
m8_364 -> m8_9  [key=2, style=dotted];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_11  [key=2, style=dotted];
m8_366 -> m8_367  [key=0, style=solid];
m8_366 -> m8_98  [key=2, style=dotted];
m8_366 -> m8_368  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_367 -> m8_368  [key=0, style=solid];
m8_367 -> m8_11  [key=2, style=dotted];
m8_368 -> m8_369  [key=0, style=solid];
m8_368 -> m8_11  [key=2, style=dotted];
m8_369 -> m8_363  [color=blue, key=0, style=bold];
m8_1898 -> m8_1899  [key=0, style=solid];
m8_1899 -> m8_1900  [key=0, style=solid];
m8_1900 -> m8_1901  [key=0, style=solid];
m8_1901 -> m8_1898  [color=blue, key=0, style=bold];
m8_1831 -> m8_1832  [key=0, style=solid];
m8_1832 -> m8_1833  [key=0, style=solid];
m8_1833 -> m8_1834  [key=0, style=solid];
m8_1834 -> m8_1831  [color=blue, key=0, style=bold];
m8_883 -> m8_884  [key=0, style=solid];
m8_884 -> m8_885  [key=0, style=solid];
m8_884 -> m8_876  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_885 -> m8_886  [key=0, style=solid];
m8_885 -> m8_594  [key=2, style=dotted];
m8_885 -> m8_887  [key=2, style=dotted];
m8_886 -> m8_883  [color=blue, key=0, style=bold];
m8_818 -> m8_819  [key=0, style=solid];
m8_819 -> m8_820  [key=0, style=solid];
m8_819 -> m8_819  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_820 -> m8_821  [key=0, style=solid];
m8_820 -> m8_98  [key=2, style=dotted];
m8_820 -> m8_822  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_820 -> m8_823  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_820 -> m8_824  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_820 -> m8_825  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_821 -> m8_822  [key=0, style=solid];
m8_821 -> m8_827  [key=2, style=dotted];
m8_822 -> m8_823  [key=0, style=solid];
m8_822 -> m8_12  [key=2, style=dotted];
m8_823 -> m8_824  [key=0, style=solid];
m8_823 -> m8_11  [key=2, style=dotted];
m8_824 -> m8_825  [key=0, style=solid];
m8_824 -> m8_11  [key=2, style=dotted];
m8_825 -> m8_826  [key=0, style=solid];
m8_825 -> m8_11  [key=2, style=dotted];
m8_826 -> m8_818  [color=blue, key=0, style=bold];
m8_1021 -> m8_1022  [key=0, style=solid];
m8_1022 -> m8_1023  [key=0, style=solid];
m8_1022 -> m8_362  [key=2, style=dotted];
m8_1023 -> m8_1021  [color=blue, key=0, style=bold];
m8_1726 -> m8_1727  [key=0, style=solid];
m8_1727 -> m8_1728  [key=0, style=solid];
m8_1727 -> m8_1727  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1728 -> m8_1729  [key=0, style=solid];
m8_1728 -> m8_98  [key=2, style=dotted];
m8_1729 -> m8_1730  [key=0, style=solid];
m8_1729 -> m8_11  [key=2, style=dotted];
m8_1730 -> m8_1726  [color=blue, key=0, style=bold];
m8_864 -> m8_865  [key=0, style=solid];
m8_865 -> m8_866  [key=0, style=solid];
m8_865 -> m8_865  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_866 -> m8_867  [key=0, style=solid];
m8_866 -> m8_98  [key=2, style=dotted];
m8_867 -> m8_864  [color=blue, key=0, style=bold];
m8_411 -> m8_412  [key=0, style=solid];
m8_412 -> m8_413  [key=0, style=solid];
m8_412 -> m8_410  [key=2, style=dotted];
m8_413 -> m8_414  [key=0, style=solid];
m8_413 -> m8_418  [key=2, style=dotted];
m8_413 -> m8_419  [key=2, style=dotted];
m8_413 -> m8_415  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_414 -> m8_415  [key=0, style=solid];
m8_414 -> m8_11  [key=2, style=dotted];
m8_415 -> m8_416  [key=0, style=solid];
m8_415 -> m8_418  [key=2, style=dotted];
m8_415 -> m8_420  [key=2, style=dotted];
m8_416 -> m8_417  [key=0, style=solid];
m8_416 -> m8_11  [key=2, style=dotted];
m8_417 -> m8_411  [color=blue, key=0, style=bold];
m8_494 -> m8_495  [key=0, style=solid];
m8_495 -> m8_496  [key=0, style=solid];
m8_495 -> m8_507  [key=2, style=dotted];
m8_495 -> m8_345  [key=2, style=dotted];
m8_496 -> m8_497  [key=0, style=solid];
m8_496 -> m8_9  [key=2, style=dotted];
m8_496 -> m8_498  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_497 -> m8_498  [key=0, style=solid];
m8_497 -> m8_11  [key=2, style=dotted];
m8_498 -> m8_499  [key=0, style=solid];
m8_498 -> m8_98  [key=2, style=dotted];
m8_498 -> m8_500  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_498 -> m8_501  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_498 -> m8_502  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_498 -> m8_503  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_498 -> m8_504  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_498 -> m8_505  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m8_499 -> m8_500  [key=0, style=solid];
m8_499 -> m8_345  [key=2, style=dotted];
m8_499 -> m8_11  [key=2, style=dotted];
m8_500 -> m8_501  [key=0, style=solid];
m8_500 -> m8_11  [key=2, style=dotted];
m8_501 -> m8_502  [key=0, style=solid];
m8_501 -> m8_11  [key=2, style=dotted];
m8_502 -> m8_503  [key=0, style=solid];
m8_502 -> m8_11  [key=2, style=dotted];
m8_503 -> m8_504  [key=0, style=solid];
m8_503 -> m8_11  [key=2, style=dotted];
m8_504 -> m8_505  [key=0, style=solid];
m8_504 -> m8_11  [key=2, style=dotted];
m8_505 -> m8_506  [key=0, style=solid];
m8_505 -> m8_11  [key=2, style=dotted];
m8_506 -> m8_494  [color=blue, key=0, style=bold];
m8_906 -> m8_907  [key=0, style=solid];
m8_907 -> m8_908  [key=0, style=solid];
m8_907 -> m8_98  [key=2, style=dotted];
m8_908 -> m8_906  [color=blue, key=0, style=bold];
m8_682 -> m8_683  [key=0, style=solid];
m8_683 -> m8_684  [key=0, style=solid];
m8_683 -> m8_694  [key=2, style=dotted];
m8_683 -> m8_685  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m8_683 -> m8_686  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m8_683 -> m8_687  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m8_684 -> m8_685  [key=0, style=solid];
m8_685 -> m8_686  [key=0, style=solid];
m8_686 -> m8_687  [key=0, style=solid];
m8_687 -> m8_688  [key=0, style=solid];
m8_687 -> m8_362  [key=2, style=dotted];
m8_688 -> m8_689  [key=0, style=solid];
m8_688 -> m8_11  [key=2, style=dotted];
m8_689 -> m8_690  [key=0, style=solid];
m8_689 -> m8_98  [key=2, style=dotted];
m8_689 -> m8_691  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m8_689 -> m8_692  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m8_690 -> m8_691  [key=0, style=solid];
m8_690 -> m8_11  [key=2, style=dotted];
m8_691 -> m8_692  [key=0, style=solid];
m8_691 -> m8_11  [key=2, style=dotted];
m8_692 -> m8_693  [key=0, style=solid];
m8_692 -> m8_11  [key=2, style=dotted];
m8_693 -> m8_682  [color=blue, key=0, style=bold];
m8_609 -> m8_610  [key=0, style=solid];
m8_609 -> m8_617  [key=2, style=dotted];
m8_609 -> m8_208  [key=2, style=dotted];
m8_609 -> m8_611  [color=darkseagreen4, key=1, label=entry, style=dashed];
m8_609 -> m8_612  [color=darkseagreen4, key=1, label=entry, style=dashed];
m8_608 -> m8_609  [key=0, style=solid];
m8_610 -> m8_611  [key=0, style=solid];
m8_610 -> m8_9  [key=2, style=dotted];
m8_610 -> m8_613  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m8_611 -> m8_612  [key=0, style=solid];
m8_611 -> m8_618  [key=2, style=dotted];
m8_611 -> m8_419  [key=2, style=dotted];
m8_611 -> m8_614  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m8_612 -> m8_613  [key=0, style=solid];
m8_612 -> m8_441  [key=2, style=dotted];
m8_612 -> m8_419  [key=2, style=dotted];
m8_612 -> m8_615  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m8_613 -> m8_614  [key=0, style=solid];
m8_613 -> m8_12  [key=2, style=dotted];
m8_614 -> m8_615  [key=0, style=solid];
m8_614 -> m8_12  [key=2, style=dotted];
m8_615 -> m8_616  [key=0, style=solid];
m8_615 -> m8_12  [key=2, style=dotted];
m8_616 -> m8_608  [color=blue, key=0, style=bold];
m8_63 -> m8_64  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_76  [key=2, style=dotted];
m8_64 -> m8_66  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m8_64 -> m8_67  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m8_64 -> m8_68  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m8_64 -> m8_70  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m8_65 -> m8_66  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_9  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_77  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_10  [key=2, style=dotted];
m8_69 -> m8_71  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_69 -> m8_72  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_69 -> m8_73  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_69 -> m8_74  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_11  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_11  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_78  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_11  [key=2, style=dotted];
m8_75 -> m8_63  [color=blue, key=0, style=bold];
m8_1664 -> m8_1665  [key=0, style=solid];
m8_1665 -> m8_1666  [key=0, style=solid];
m8_1665 -> m8_1671  [key=2, style=dotted];
m8_1666 -> m8_1667  [key=0, style=solid];
m8_1666 -> m8_362  [key=2, style=dotted];
m8_1666 -> m8_1668  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1667 -> m8_1668  [key=0, style=solid];
m8_1667 -> m8_11  [key=2, style=dotted];
m8_1668 -> m8_1669  [key=0, style=solid];
m8_1668 -> m8_98  [key=2, style=dotted];
m8_1669 -> m8_1670  [key=0, style=solid];
m8_1669 -> m8_11  [key=2, style=dotted];
m8_1669 -> m8_1669  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m8_1670 -> m8_1664  [color=blue, key=0, style=bold];
m8_1881 -> m8_1882  [key=0, style=solid];
m8_1882 -> m8_1883  [key=0, style=solid];
m8_1882 -> m8_10  [key=2, style=dotted];
m8_1883 -> m8_1884  [key=0, style=solid];
m8_1883 -> m8_1337  [key=2, style=dotted];
m8_1884 -> m8_1881  [color=blue, key=0, style=bold];
m8_486 -> m8_487  [key=0, style=solid];
m8_487 -> m8_488  [key=0, style=solid];
m8_487 -> m8_487  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_488 -> m8_489  [key=0, style=solid];
m8_488 -> m8_98  [key=2, style=dotted];
m8_488 -> m8_490  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m8_488 -> m8_491  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m8_489 -> m8_490  [key=0, style=solid];
m8_489 -> m8_11  [key=2, style=dotted];
m8_490 -> m8_491  [key=0, style=solid];
m8_490 -> m8_493  [key=2, style=dotted];
m8_490 -> m8_11  [key=2, style=dotted];
m8_491 -> m8_492  [key=0, style=solid];
m8_491 -> m8_11  [key=2, style=dotted];
m8_492 -> m8_486  [color=blue, key=0, style=bold];
m8_1263 -> m8_1300  [key=0, style=solid];
m8_1263 -> m8_1301  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1263 -> m8_1302  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1263 -> m8_1303  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1263 -> m8_1304  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1263 -> m8_1305  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1263 -> m8_1306  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1263 -> m8_1307  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1300 -> m8_1301  [key=0, style=solid];
m8_1301 -> m8_1302  [key=0, style=solid];
m8_1302 -> m8_1303  [key=0, style=solid];
m8_1303 -> m8_1304  [key=0, style=solid];
m8_1304 -> m8_1305  [key=0, style=solid];
m8_1305 -> m8_1306  [key=0, style=solid];
m8_1306 -> m8_1307  [key=0, style=solid];
m8_1307 -> m8_1308  [key=0, style=solid];
m8_1308 -> m8_1263  [color=blue, key=0, style=bold];
m8_1622 -> m8_1623  [key=0, style=solid];
m8_1623 -> m8_1624  [key=0, style=solid];
m8_1623 -> m8_362  [key=2, style=dotted];
m8_1623 -> m8_1625  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_1624 -> m8_1625  [key=0, style=solid];
m8_1624 -> m8_11  [key=2, style=dotted];
m8_1625 -> m8_1626  [key=0, style=solid];
m8_1625 -> m8_10  [key=2, style=dotted];
m8_1625 -> m8_1627  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1625 -> m8_1628  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1625 -> m8_1629  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1626 -> m8_1627  [key=0, style=solid];
m8_1626 -> m8_11  [key=2, style=dotted];
m8_1627 -> m8_1628  [key=0, style=solid];
m8_1627 -> m8_11  [key=2, style=dotted];
m8_1628 -> m8_1629  [key=0, style=solid];
m8_1628 -> m8_11  [key=2, style=dotted];
m8_1629 -> m8_1630  [key=0, style=solid];
m8_1629 -> m8_11  [key=2, style=dotted];
m8_1630 -> m8_1622  [color=blue, key=0, style=bold];
m8_394 -> m8_395  [key=0, style=solid];
m8_395 -> m8_396  [key=0, style=solid];
m8_395 -> m8_402  [key=2, style=dotted];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_9  [key=2, style=dotted];
m8_397 -> m8_398  [key=0, style=solid];
m8_397 -> m8_98  [key=2, style=dotted];
m8_397 -> m8_399  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_397 -> m8_400  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_398 -> m8_399  [key=0, style=solid];
m8_398 -> m8_11  [key=2, style=dotted];
m8_399 -> m8_400  [key=0, style=solid];
m8_399 -> m8_11  [key=2, style=dotted];
m8_400 -> m8_401  [key=0, style=solid];
m8_400 -> m8_11  [key=2, style=dotted];
m8_401 -> m8_394  [color=blue, key=0, style=bold];
m8_1657 -> m8_1658  [key=0, style=solid];
m8_1658 -> m8_1659  [key=0, style=solid];
m8_1658 -> m8_1662  [key=2, style=dotted];
m8_1658 -> m8_1663  [key=2, style=dotted];
m8_1659 -> m8_1660  [key=0, style=solid];
m8_1659 -> m8_362  [key=2, style=dotted];
m8_1660 -> m8_1661  [key=0, style=solid];
m8_1660 -> m8_98  [key=2, style=dotted];
m8_1661 -> m8_1657  [color=blue, key=0, style=bold];
m8_338 -> m8_339  [key=0, style=solid];
m8_339 -> m8_340  [key=0, style=solid];
m8_339 -> m8_345  [key=2, style=dotted];
m8_339 -> m8_343  [color=darkseagreen4, key=1, label=guid, style=dashed];
m8_340 -> m8_341  [key=0, style=solid];
m8_340 -> m8_346  [key=2, style=dotted];
m8_340 -> m8_9  [key=2, style=dotted];
m8_340 -> m8_342  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_343 -> m8_344  [key=0, style=solid];
m8_343 -> m8_11  [key=2, style=dotted];
m8_341 -> m8_342  [key=0, style=solid];
m8_341 -> m8_11  [key=2, style=dotted];
m8_342 -> m8_343  [key=0, style=solid];
m8_342 -> m8_98  [key=2, style=dotted];
m8_344 -> m8_338  [color=blue, key=0, style=bold];
m8_1753 -> m8_1754  [key=0, style=solid];
m8_1754 -> m8_1755  [key=0, style=solid];
m8_1755 -> m8_1753  [color=blue, key=0, style=bold];
m8_263 -> m8_264  [key=0, style=solid];
m8_264 -> m8_265  [key=0, style=solid];
m8_264 -> m8_267  [key=2, style=dotted];
m8_264 -> m8_9  [key=2, style=dotted];
m8_265 -> m8_266  [key=0, style=solid];
m8_265 -> m8_11  [key=2, style=dotted];
m8_266 -> m8_263  [color=blue, key=0, style=bold];
m8_1609 -> m8_1610  [key=0, style=solid];
m8_1610 -> m8_1611  [key=0, style=solid];
m8_1610 -> m8_1612  [key=2, style=dotted];
m8_1611 -> m8_1609  [color=blue, key=0, style=bold];
m8_1681 -> m8_1682  [key=0, style=solid];
m8_1682 -> m8_1683  [key=0, style=solid];
m8_1682 -> m8_98  [key=2, style=dotted];
m8_1683 -> m8_1684  [key=0, style=solid];
m8_1683 -> m8_1680  [key=2, style=dotted];
m8_1683 -> m8_29  [key=2, style=dotted];
m8_1683 -> m8_219  [key=2, style=dotted];
m8_1683 -> m8_11  [key=2, style=dotted];
m8_1684 -> m8_1681  [color=blue, key=0, style=bold];
m8_1840 -> m8_1841  [key=0, style=solid];
m8_1841 -> m8_1842  [key=0, style=solid];
m8_1842 -> m8_1843  [key=0, style=solid];
m8_1843 -> m8_1840  [color=blue, key=0, style=bold];
m8_319 -> m8_320  [key=0, style=solid];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_327  [key=2, style=dotted];
m8_320 -> m8_9  [key=2, style=dotted];
m8_320 -> m8_322  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_321 -> m8_322  [key=0, style=solid];
m8_321 -> m8_11  [key=2, style=dotted];
m8_322 -> m8_323  [key=0, style=solid];
m8_322 -> m8_98  [key=2, style=dotted];
m8_322 -> m8_324  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_322 -> m8_325  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_11  [key=2, style=dotted];
m8_324 -> m8_325  [key=0, style=solid];
m8_324 -> m8_11  [key=2, style=dotted];
m8_325 -> m8_326  [key=0, style=solid];
m8_325 -> m8_11  [key=2, style=dotted];
m8_326 -> m8_319  [color=blue, key=0, style=bold];
m8_1645 -> m8_1646  [key=0, style=solid];
m8_1646 -> m8_1647  [key=0, style=solid];
m8_1646 -> m8_255  [key=2, style=dotted];
m8_1646 -> m8_1648  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m8_1646 -> m8_1651  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m8_1647 -> m8_1648  [key=0, style=solid];
m8_1647 -> m8_618  [key=2, style=dotted];
m8_1647 -> m8_1656  [key=2, style=dotted];
m8_1648 -> m8_1649  [key=0, style=solid];
m8_1651 -> m8_1652  [key=0, style=solid];
m8_1651 -> m8_262  [key=2, style=dotted];
m8_1651 -> m8_1653  [color=darkseagreen4, key=1, label=z, style=dashed];
m8_1651 -> m8_1654  [color=darkseagreen4, key=1, label=z, style=dashed];
m8_1649 -> m8_1650  [key=0, style=solid];
m8_1649 -> m8_1649  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1650 -> m8_1651  [key=0, style=solid];
m8_1650 -> m8_260  [key=2, style=dotted];
m8_1650 -> m8_261  [key=2, style=dotted];
m8_1652 -> m8_1653  [key=0, style=solid];
m8_1652 -> m8_11  [key=2, style=dotted];
m8_1653 -> m8_1654  [key=0, style=solid];
m8_1653 -> m8_11  [key=2, style=dotted];
m8_1654 -> m8_1655  [key=0, style=solid];
m8_1654 -> m8_11  [key=2, style=dotted];
m8_1655 -> m8_1645  [color=blue, key=0, style=bold];
m8_747 -> m8_748  [key=0, style=solid];
m8_748 -> m8_749  [key=0, style=solid];
m8_748 -> m8_748  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_749 -> m8_750  [key=0, style=solid];
m8_749 -> m8_756  [key=2, style=dotted];
m8_750 -> m8_751  [key=0, style=solid];
m8_750 -> m8_757  [key=2, style=dotted];
m8_750 -> m8_98  [key=2, style=dotted];
m8_750 -> m8_752  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_750 -> m8_753  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_750 -> m8_754  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_751 -> m8_752  [key=0, style=solid];
m8_751 -> m8_633  [key=2, style=dotted];
m8_752 -> m8_753  [key=0, style=solid];
m8_752 -> m8_11  [key=2, style=dotted];
m8_753 -> m8_754  [key=0, style=solid];
m8_753 -> m8_11  [key=2, style=dotted];
m8_754 -> m8_755  [key=0, style=solid];
m8_754 -> m8_11  [key=2, style=dotted];
m8_755 -> m8_747  [color=blue, key=0, style=bold];
m8_619 -> m8_620  [key=0, style=solid];
m8_620 -> m8_621  [key=0, style=solid];
m8_620 -> m8_632  [key=2, style=dotted];
m8_620 -> m8_622  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_620 -> m8_623  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_620 -> m8_624  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_620 -> m8_628  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_620 -> m8_629  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_620 -> m8_630  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_621 -> m8_622  [key=0, style=solid];
m8_621 -> m8_56  [key=2, style=dotted];
m8_622 -> m8_623  [key=0, style=solid];
m8_622 -> m8_207  [key=2, style=dotted];
m8_623 -> m8_624  [key=0, style=solid];
m8_623 -> m8_207  [key=2, style=dotted];
m8_624 -> m8_625  [key=0, style=solid];
m8_624 -> m8_362  [key=2, style=dotted];
m8_624 -> m8_626  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_628 -> m8_629  [key=0, style=solid];
m8_628 -> m8_634  [key=2, style=dotted];
m8_628 -> m8_11  [key=2, style=dotted];
m8_629 -> m8_630  [key=0, style=solid];
m8_629 -> m8_634  [key=2, style=dotted];
m8_629 -> m8_11  [key=2, style=dotted];
m8_630 -> m8_631  [key=0, style=solid];
m8_630 -> m8_634  [key=2, style=dotted];
m8_630 -> m8_11  [key=2, style=dotted];
m8_625 -> m8_626  [key=0, style=solid];
m8_625 -> m8_11  [key=2, style=dotted];
m8_626 -> m8_627  [key=0, style=solid];
m8_626 -> m8_98  [key=2, style=dotted];
m8_626 -> m8_628  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m8_626 -> m8_629  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m8_626 -> m8_630  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m8_627 -> m8_628  [key=0, style=solid];
m8_627 -> m8_633  [key=2, style=dotted];
m8_631 -> m8_619  [color=blue, key=0, style=bold];
m8_671 -> m8_672  [key=0, style=solid];
m8_672 -> m8_673  [key=0, style=solid];
m8_672 -> m8_675  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_672 -> m8_672  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_673 -> m8_674  [key=0, style=solid];
m8_673 -> m8_98  [key=2, style=dotted];
m8_675 -> m8_676  [key=0, style=solid];
m8_675 -> m8_98  [key=2, style=dotted];
m8_675 -> m8_677  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_675 -> m8_678  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_675 -> m8_679  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_675 -> m8_680  [color=darkseagreen4, key=1, label=n, style=dashed];
m8_674 -> m8_675  [key=0, style=solid];
m8_674 -> m8_11  [key=2, style=dotted];
m8_676 -> m8_677  [key=0, style=solid];
m8_676 -> m8_345  [key=2, style=dotted];
m8_676 -> m8_11  [key=2, style=dotted];
m8_677 -> m8_678  [key=0, style=solid];
m8_677 -> m8_345  [key=2, style=dotted];
m8_677 -> m8_11  [key=2, style=dotted];
m8_678 -> m8_679  [key=0, style=solid];
m8_678 -> m8_11  [key=2, style=dotted];
m8_679 -> m8_680  [key=0, style=solid];
m8_679 -> m8_11  [key=2, style=dotted];
m8_680 -> m8_681  [key=0, style=solid];
m8_680 -> m8_11  [key=2, style=dotted];
m8_681 -> m8_671  [color=blue, key=0, style=bold];
m8_1775 -> m8_1776  [key=0, style=solid];
m8_1776 -> m8_1777  [key=0, style=solid];
m8_1776 -> m8_1791  [key=2, style=dotted];
m8_1776 -> m8_1778  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m8_1776 -> m8_1782  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m8_1777 -> m8_1778  [key=0, style=solid];
m8_1777 -> m8_1792  [key=2, style=dotted];
m8_1778 -> m8_1779  [key=0, style=solid];
m8_1778 -> m8_1792  [key=2, style=dotted];
m8_1782 -> m8_1783  [key=0, style=solid];
m8_1782 -> m8_9  [key=2, style=dotted];
m8_1779 -> m8_1780  [key=0, style=solid];
m8_1779 -> m8_1791  [key=2, style=dotted];
m8_1779 -> m8_1781  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m8_1779 -> m8_1786  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m8_1780 -> m8_1781  [key=0, style=solid];
m8_1780 -> m8_1792  [key=2, style=dotted];
m8_1781 -> m8_1782  [key=0, style=solid];
m8_1786 -> m8_1787  [key=0, style=solid];
m8_1786 -> m8_9  [key=2, style=dotted];
m8_1783 -> m8_1784  [key=0, style=solid];
m8_1783 -> m8_1793  [key=2, style=dotted];
m8_1783 -> m8_1785  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1784 -> m8_1785  [key=0, style=solid];
m8_1784 -> m8_11  [key=2, style=dotted];
m8_1785 -> m8_1786  [key=0, style=solid];
m8_1785 -> m8_11  [key=2, style=dotted];
m8_1787 -> m8_1788  [key=0, style=solid];
m8_1787 -> m8_1793  [key=2, style=dotted];
m8_1787 -> m8_1789  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_1788 -> m8_1789  [key=0, style=solid];
m8_1788 -> m8_11  [key=2, style=dotted];
m8_1789 -> m8_1790  [key=0, style=solid];
m8_1789 -> m8_11  [key=2, style=dotted];
m8_1790 -> m8_1775  [color=blue, key=0, style=bold];
m8_508 -> m8_509  [key=0, style=solid];
m8_509 -> m8_510  [key=0, style=solid];
m8_509 -> m8_509  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_510 -> m8_511  [key=0, style=solid];
m8_510 -> m8_98  [key=2, style=dotted];
m8_511 -> m8_512  [key=0, style=solid];
m8_511 -> m8_11  [key=2, style=dotted];
m8_512 -> m8_508  [color=blue, key=0, style=bold];
m8_1415 -> m8_1416  [key=0, style=solid];
m8_1416 -> m8_1417  [key=0, style=solid];
m8_1416 -> m8_207  [key=2, style=dotted];
m8_1416 -> m8_1418  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_1416 -> m8_1419  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_1417 -> m8_1418  [key=0, style=solid];
m8_1417 -> m8_1428  [key=2, style=dotted];
m8_1417 -> m8_159  [key=2, style=dotted];
m8_1418 -> m8_1419  [key=0, style=solid];
m8_1418 -> m8_1428  [key=2, style=dotted];
m8_1418 -> m8_159  [key=2, style=dotted];
m8_1419 -> m8_1420  [key=0, style=solid];
m8_1419 -> m8_9  [key=2, style=dotted];
m8_1419 -> m8_1421  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1420 -> m8_1421  [key=0, style=solid];
m8_1420 -> m8_11  [key=2, style=dotted];
m8_1421 -> m8_1422  [key=0, style=solid];
m8_1421 -> m8_98  [key=2, style=dotted];
m8_1421 -> m8_1423  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1421 -> m8_1424  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1421 -> m8_1425  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1421 -> m8_1426  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_1422 -> m8_1423  [key=0, style=solid];
m8_1422 -> m8_11  [key=2, style=dotted];
m8_1423 -> m8_1424  [key=0, style=solid];
m8_1423 -> m8_11  [key=2, style=dotted];
m8_1424 -> m8_1425  [key=0, style=solid];
m8_1424 -> m8_11  [key=2, style=dotted];
m8_1425 -> m8_1426  [key=0, style=solid];
m8_1425 -> m8_11  [key=2, style=dotted];
m8_1426 -> m8_1427  [key=0, style=solid];
m8_1426 -> m8_11  [key=2, style=dotted];
m8_1427 -> m8_1415  [color=blue, key=0, style=bold];
m8_1352 -> m8_1353  [key=0, style=solid];
m8_1353 -> m8_1354  [key=0, style=solid];
m8_1353 -> m8_1357  [key=2, style=dotted];
m8_1353 -> m8_1358  [key=2, style=dotted];
m8_1353 -> m8_1359  [key=2, style=dotted];
m8_1354 -> m8_1355  [key=0, style=solid];
m8_1354 -> m8_1360  [key=2, style=dotted];
m8_1354 -> m8_1361  [key=2, style=dotted];
m8_1354 -> m8_419  [key=2, style=dotted];
m8_1355 -> m8_1356  [key=0, style=solid];
m8_1355 -> m8_11  [key=2, style=dotted];
m8_1356 -> m8_1352  [color=blue, key=0, style=bold];
m8_1474 -> m8_1475  [key=0, style=solid];
m8_1475 -> m8_1476  [key=0, style=solid];
m8_1475 -> m8_1447  [key=2, style=dotted];
m8_1476 -> m8_1474  [color=blue, key=0, style=bold];
m8_160 -> m8_161  [key=0, style=solid];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_166  [key=2, style=dotted];
m8_161 -> m8_164  [color=darkseagreen4, key=1, label=r1, style=dashed];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_9  [key=2, style=dotted];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_11  [key=2, style=dotted];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_98  [key=2, style=dotted];
m8_165 -> m8_160  [color=blue, key=0, style=bold];
m8_1642 -> m8_1643  [key=0, style=solid];
m8_1643 -> m8_1644  [key=0, style=solid];
m8_1644 -> m8_1642  [color=blue, key=0, style=bold];
m8_1844 -> m8_1845  [key=0, style=solid];
m8_1844 -> m8_1846  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1845 -> m8_1846  [key=0, style=solid];
m8_1846 -> m8_1847  [key=0, style=solid];
m8_1847 -> m8_1848  [key=0, style=solid];
m8_1848 -> m8_1844  [color=blue, key=0, style=bold];
m8_695 -> m8_696  [key=0, style=solid];
m8_696 -> m8_695  [color=blue, key=0, style=bold];
m8_1116 -> m8_1117  [key=0, style=solid];
m8_1116 -> m8_1119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1117 -> m8_1118  [key=0, style=solid];
m8_1117 -> m8_1119  [key=0, style=solid];
m8_1119 -> m8_1120  [key=0, style=solid];
m8_1119 -> m8_1121  [key=0, style=solid];
m8_1118 -> m8_1121  [key=0, style=solid];
m8_1120 -> m8_1119  [key=0, style=solid];
m8_1120 -> m8_1120  [color=darkseagreen4, key=1, label=entry, style=dashed];
m8_1121 -> m8_1116  [color=blue, key=0, style=bold];
m8_1685 -> m8_1686  [key=0, style=solid];
m8_1686 -> m8_1687  [key=0, style=solid];
m8_1686 -> m8_1689  [key=2, style=dotted];
m8_1686 -> m8_362  [key=2, style=dotted];
m8_1687 -> m8_1688  [key=0, style=solid];
m8_1687 -> m8_11  [key=2, style=dotted];
m8_1688 -> m8_1685  [color=blue, key=0, style=bold];
m8_282 -> m8_283  [key=0, style=solid];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_283  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_284 -> m8_285  [key=0, style=solid];
m8_284 -> m8_98  [key=2, style=dotted];
m8_284 -> m8_286  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_284 -> m8_287  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_284 -> m8_288  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_284 -> m8_289  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_284 -> m8_290  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m8_285 -> m8_286  [key=0, style=solid];
m8_285 -> m8_11  [key=2, style=dotted];
m8_286 -> m8_287  [key=0, style=solid];
m8_286 -> m8_11  [key=2, style=dotted];
m8_287 -> m8_288  [key=0, style=solid];
m8_287 -> m8_11  [key=2, style=dotted];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_11  [key=2, style=dotted];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_11  [key=2, style=dotted];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_11  [key=2, style=dotted];
m8_291 -> m8_282  [color=blue, key=0, style=bold];
m8_105 -> m8_106  [key=0, style=solid];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_112  [key=2, style=dotted];
m8_106 -> m8_9  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_11  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_98  [key=2, style=dotted];
m8_108 -> m8_110  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_11  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_11  [key=2, style=dotted];
m8_111 -> m8_105  [color=blue, key=0, style=bold];
m8_178 -> m8_179  [key=0, style=solid];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_181  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_179 -> m8_183  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_179 -> m8_184  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_179 -> m8_179  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_180 -> m8_181  [key=0, style=solid];
m8_180 -> m8_189  [key=2, style=dotted];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_190  [key=2, style=dotted];
m8_181 -> m8_187  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_175  [key=2, style=dotted];
m8_183 -> m8_176  [key=2, style=dotted];
m8_183 -> m8_177  [key=2, style=dotted];
m8_183 -> m8_186  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m8_184 -> m8_185  [key=0, style=solid];
m8_184 -> m8_98  [key=2, style=dotted];
m8_184 -> m8_186  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m8_184 -> m8_187  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_58  [key=2, style=dotted];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_11  [key=2, style=dotted];
m8_186 -> m8_187  [key=0, style=solid];
m8_186 -> m8_11  [key=2, style=dotted];
m8_185 -> m8_186  [key=0, style=solid];
m8_185 -> m8_11  [key=2, style=dotted];
m8_188 -> m8_178  [color=blue, key=0, style=bold];
m8_142 -> m8_143  [key=0, style=solid];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_145  [key=2, style=dotted];
m8_143 -> m8_9  [key=2, style=dotted];
m8_144 -> m8_142  [color=blue, key=0, style=bold];
m8_1758 -> m8_1759  [key=0, style=solid];
m8_1759 -> m8_1760  [key=0, style=solid];
m8_1760 -> m8_1758  [color=blue, key=0, style=bold];
m8_1309 -> m8_1310  [key=0, style=solid];
m8_1310 -> m8_1309  [color=blue, key=0, style=bold];
m8_1514 -> m8_1515  [key=0, style=solid];
m8_1514 -> m8_1516  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1515 -> m8_1516  [key=0, style=solid];
m8_1516 -> m8_1517  [key=0, style=solid];
m8_1517 -> m8_1514  [color=blue, key=0, style=bold];
m8_714 -> m8_715  [key=0, style=solid];
m8_715 -> m8_716  [key=0, style=solid];
m8_715 -> m8_715  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_716 -> m8_717  [key=0, style=solid];
m8_716 -> m8_664  [key=2, style=dotted];
m8_716 -> m8_721  [key=2, style=dotted];
m8_716 -> m8_718  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_716 -> m8_719  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_717 -> m8_718  [key=0, style=solid];
m8_717 -> m8_11  [key=2, style=dotted];
m8_718 -> m8_719  [key=0, style=solid];
m8_718 -> m8_11  [key=2, style=dotted];
m8_719 -> m8_720  [key=0, style=solid];
m8_719 -> m8_11  [key=2, style=dotted];
m8_720 -> m8_714  [color=blue, key=0, style=bold];
m8_855 -> m8_856  [key=0, style=solid];
m8_856 -> m8_857  [key=0, style=solid];
m8_856 -> m8_856  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_857 -> m8_858  [key=0, style=solid];
m8_857 -> m8_98  [key=2, style=dotted];
m8_858 -> m8_859  [key=0, style=solid];
m8_858 -> m8_863  [key=2, style=dotted];
m8_858 -> m8_860  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_858 -> m8_861  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_859 -> m8_860  [key=0, style=solid];
m8_859 -> m8_11  [key=2, style=dotted];
m8_860 -> m8_861  [key=0, style=solid];
m8_860 -> m8_11  [key=2, style=dotted];
m8_861 -> m8_862  [key=0, style=solid];
m8_861 -> m8_11  [key=2, style=dotted];
m8_862 -> m8_855  [color=blue, key=0, style=bold];
m8_1056 -> m8_1057  [key=0, style=solid];
m8_1057 -> m8_1058  [key=0, style=solid];
m8_1057 -> m8_1057  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1058 -> m8_1059  [key=0, style=solid];
m8_1058 -> m8_98  [key=2, style=dotted];
m8_1059 -> m8_1060  [key=0, style=solid];
m8_1059 -> m8_11  [key=2, style=dotted];
m8_1060 -> m8_1056  [color=blue, key=0, style=bold];
m8_888 -> m8_889  [key=0, style=solid];
m8_889 -> m8_890  [key=0, style=solid];
m8_889 -> m8_1825  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_890 -> m8_891  [key=0, style=solid];
m8_890 -> m8_207  [key=2, style=dotted];
m8_890 -> m8_887  [key=2, style=dotted];
m8_891 -> m8_888  [color=blue, key=0, style=bold];
m8_1525 -> m8_1526  [key=0, style=solid];
m8_1526 -> m8_1525  [color=blue, key=0, style=bold];
m8_1061 -> m8_1062  [key=0, style=solid];
m8_1062 -> m8_1063  [key=0, style=solid];
m8_1062 -> m8_1077  [key=2, style=dotted];
m8_1062 -> m8_1067  [color=darkseagreen4, key=1, label=ex, style=dashed];
m8_1063 -> m8_1064  [key=0, style=solid];
m8_1063 -> m8_1078  [key=2, style=dotted];
m8_1063 -> m8_1065  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1063 -> m8_1066  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1063 -> m8_1067  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1063 -> m8_1070  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1063 -> m8_1075  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_1067 -> m8_1068  [key=0, style=solid];
m8_1064 -> m8_1065  [key=0, style=solid];
m8_1064 -> m8_1079  [key=2, style=dotted];
m8_1065 -> m8_1066  [key=0, style=solid];
m8_1065 -> m8_345  [key=2, style=dotted];
m8_1066 -> m8_1067  [key=0, style=solid];
m8_1066 -> m8_1080  [key=2, style=dotted];
m8_1070 -> m8_1071  [key=0, style=solid];
m8_1070 -> m8_59  [key=2, style=dotted];
m8_1075 -> m8_1076  [key=0, style=solid];
m8_1075 -> m8_664  [key=2, style=dotted];
m8_1075 -> m8_665  [key=2, style=dotted];
m8_1075 -> m8_12  [key=2, style=dotted];
m8_1068 -> m8_1069  [key=0, style=solid];
m8_1068 -> m8_57  [key=2, style=dotted];
m8_1068 -> m8_1070  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_1068 -> m8_1071  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_1069 -> m8_1070  [key=0, style=solid];
m8_1069 -> m8_58  [key=2, style=dotted];
m8_1071 -> m8_1072  [key=0, style=solid];
m8_1071 -> m8_60  [key=2, style=dotted];
m8_1072 -> m8_1073  [key=0, style=solid];
m8_1072 -> m8_61  [key=2, style=dotted];
m8_1073 -> m8_1074  [key=0, style=solid];
m8_1073 -> m8_756  [key=2, style=dotted];
m8_1073 -> m8_757  [key=2, style=dotted];
m8_1073 -> m8_12  [key=2, style=dotted];
m8_1074 -> m8_1075  [key=0, style=solid];
m8_1074 -> m8_62  [key=2, style=dotted];
m8_1076 -> m8_1061  [color=blue, key=0, style=bold];
m8_79 -> m8_80  [key=0, style=solid];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_31  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_10  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_84  [key=2, style=dotted];
m8_82 -> m8_11  [key=2, style=dotted];
m8_83 -> m8_79  [color=blue, key=0, style=bold];
m8_953 -> m8_954  [key=0, style=solid];
m8_954 -> m8_955  [key=0, style=solid];
m8_954 -> m8_56  [key=2, style=dotted];
m8_954 -> m8_956  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_954 -> m8_957  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_955 -> m8_956  [key=0, style=solid];
m8_955 -> m8_345  [key=2, style=dotted];
m8_955 -> m8_229  [key=2, style=dotted];
m8_956 -> m8_957  [key=0, style=solid];
m8_956 -> m8_345  [key=2, style=dotted];
m8_956 -> m8_229  [key=2, style=dotted];
m8_957 -> m8_958  [key=0, style=solid];
m8_957 -> m8_362  [key=2, style=dotted];
m8_958 -> m8_959  [key=0, style=solid];
m8_958 -> m8_11  [key=2, style=dotted];
m8_959 -> m8_953  [color=blue, key=0, style=bold];
m8_1223 -> m8_1224  [key=0, style=solid];
m8_1224 -> m8_1225  [key=0, style=solid];
m8_1224 -> m8_594  [key=2, style=dotted];
m8_1224 -> m8_1226  [color=darkseagreen4, key=1, label=person, style=dashed];
m8_1224 -> m8_1227  [color=darkseagreen4, key=1, label=person, style=dashed];
m8_1224 -> m8_1228  [color=darkseagreen4, key=1, label=person, style=dashed];
m8_1224 -> m8_1232  [color=darkseagreen4, key=1, label=person, style=dashed];
m8_1225 -> m8_1226  [key=0, style=solid];
m8_1225 -> m8_208  [key=2, style=dotted];
m8_1226 -> m8_1227  [key=0, style=solid];
m8_1227 -> m8_1228  [key=0, style=solid];
m8_1228 -> m8_1229  [key=0, style=solid];
m8_1232 -> m8_1233  [key=0, style=solid];
m8_1232 -> m8_1147  [key=2, style=dotted];
m8_1229 -> m8_1230  [key=0, style=solid];
m8_1229 -> m8_218  [key=2, style=dotted];
m8_1229 -> m8_219  [key=2, style=dotted];
m8_1229 -> m8_1232  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m8_1229 -> m8_1238  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m8_1230 -> m8_1231  [key=0, style=solid];
m8_1238 -> m8_1239  [key=0, style=solid];
m8_1238 -> m8_11  [key=2, style=dotted];
m8_1231 -> m8_1232  [key=0, style=solid];
m8_1231 -> m8_1234  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m8_1234 -> m8_1235  [key=0, style=solid];
m8_1234 -> m8_11  [key=2, style=dotted];
m8_1233 -> m8_1234  [key=0, style=solid];
m8_1233 -> m8_362  [key=2, style=dotted];
m8_1233 -> m8_1235  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1235 -> m8_1236  [key=0, style=solid];
m8_1235 -> m8_98  [key=2, style=dotted];
m8_1235 -> m8_1237  [color=darkseagreen4, key=1, label=o2, style=dashed];
m8_1235 -> m8_1238  [color=darkseagreen4, key=1, label=o2, style=dashed];
m8_1235 -> m8_1239  [color=darkseagreen4, key=1, label=o2, style=dashed];
m8_1235 -> m8_1240  [color=darkseagreen4, key=1, label=o2, style=dashed];
m8_1235 -> m8_1241  [color=darkseagreen4, key=1, label=o2, style=dashed];
m8_1236 -> m8_1237  [key=0, style=solid];
m8_1236 -> m8_11  [key=2, style=dotted];
m8_1237 -> m8_1238  [key=0, style=solid];
m8_1237 -> m8_11  [key=2, style=dotted];
m8_1239 -> m8_1240  [key=0, style=solid];
m8_1239 -> m8_11  [key=2, style=dotted];
m8_1240 -> m8_1241  [key=0, style=solid];
m8_1240 -> m8_11  [key=2, style=dotted];
m8_1241 -> m8_1242  [key=0, style=solid];
m8_1241 -> m8_11  [key=2, style=dotted];
m8_1242 -> m8_1223  [color=blue, key=0, style=bold];
m8_1717 -> m8_1718  [key=0, style=solid];
m8_1718 -> m8_1719  [key=0, style=solid];
m8_1718 -> m8_98  [key=2, style=dotted];
m8_1719 -> m8_1720  [key=0, style=solid];
m8_1719 -> m8_11  [key=2, style=dotted];
m8_1720 -> m8_1717  [color=blue, key=0, style=bold];
m8_1631 -> m8_1632  [key=0, style=solid];
m8_1632 -> m8_1633  [key=0, style=solid];
m8_1632 -> m8_1640  [key=2, style=dotted];
m8_1632 -> m8_362  [key=2, style=dotted];
m8_1632 -> m8_1634  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_1633 -> m8_1634  [key=0, style=solid];
m8_1633 -> m8_11  [key=2, style=dotted];
m8_1634 -> m8_1635  [key=0, style=solid];
m8_1634 -> m8_98  [key=2, style=dotted];
m8_1634 -> m8_1636  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1634 -> m8_1637  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1634 -> m8_1638  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_1635 -> m8_1636  [key=0, style=solid];
m8_1635 -> m8_11  [key=2, style=dotted];
m8_1636 -> m8_1637  [key=0, style=solid];
m8_1636 -> m8_1641  [key=2, style=dotted];
m8_1636 -> m8_1585  [key=2, style=dotted];
m8_1637 -> m8_1638  [key=0, style=solid];
m8_1637 -> m8_1641  [key=2, style=dotted];
m8_1637 -> m8_1585  [key=2, style=dotted];
m8_1638 -> m8_1639  [key=0, style=solid];
m8_1638 -> m8_1641  [key=2, style=dotted];
m8_1638 -> m8_1585  [key=2, style=dotted];
m8_1639 -> m8_1631  [color=blue, key=0, style=bold];
m8_758 -> m8_759  [key=0, style=solid];
m8_759 -> m8_760  [key=0, style=solid];
m8_759 -> m8_765  [key=2, style=dotted];
m8_759 -> m8_761  [color=darkseagreen4, key=1, label=uri, style=dashed];
m8_759 -> m8_763  [color=darkseagreen4, key=1, label=uri, style=dashed];
m8_760 -> m8_761  [key=0, style=solid];
m8_760 -> m8_9  [key=2, style=dotted];
m8_760 -> m8_762  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_761 -> m8_762  [key=0, style=solid];
m8_761 -> m8_766  [key=2, style=dotted];
m8_761 -> m8_11  [key=2, style=dotted];
m8_763 -> m8_764  [key=0, style=solid];
m8_763 -> m8_11  [key=2, style=dotted];
m8_762 -> m8_763  [key=0, style=solid];
m8_762 -> m8_98  [key=2, style=dotted];
m8_764 -> m8_758  [color=blue, key=0, style=bold];
m8_1492 -> m8_1493  [key=0, style=solid];
m8_1493 -> m8_1494  [key=0, style=solid];
m8_1493 -> m8_56  [key=2, style=dotted];
m8_1493 -> m8_1495  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_1493 -> m8_1499  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_1494 -> m8_1495  [key=0, style=solid];
m8_1494 -> m8_229  [key=2, style=dotted];
m8_1495 -> m8_1496  [key=0, style=solid];
m8_1495 -> m8_229  [key=2, style=dotted];
m8_1499 -> m8_1500  [key=0, style=solid];
m8_1499 -> m8_229  [key=2, style=dotted];
m8_1496 -> m8_1497  [key=0, style=solid];
m8_1496 -> m8_56  [key=2, style=dotted];
m8_1496 -> m8_1498  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_1496 -> m8_1499  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_1496 -> m8_1500  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_1497 -> m8_1498  [key=0, style=solid];
m8_1497 -> m8_229  [key=2, style=dotted];
m8_1498 -> m8_1499  [key=0, style=solid];
m8_1498 -> m8_229  [key=2, style=dotted];
m8_1500 -> m8_1501  [key=0, style=solid];
m8_1500 -> m8_9  [key=2, style=dotted];
m8_1501 -> m8_1502  [key=0, style=solid];
m8_1501 -> m8_98  [key=2, style=dotted];
m8_1502 -> m8_1492  [color=blue, key=0, style=bold];
m8_113 -> m8_114  [key=0, style=solid];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_114  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_119  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_116  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_117  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_118 -> m8_113  [color=blue, key=0, style=bold];
m8_1375 -> m8_1376  [key=0, style=solid];
m8_1376 -> m8_1377  [key=0, style=solid];
m8_1376 -> m8_1378  [key=2, style=dotted];
m8_1377 -> m8_1375  [color=blue, key=0, style=bold];
m8_828 -> m8_829  [key=0, style=solid];
m8_829 -> m8_830  [key=0, style=solid];
m8_829 -> m8_28  [key=2, style=dotted];
m8_829 -> m8_208  [key=2, style=dotted];
m8_829 -> m8_832  [color=darkseagreen4, key=1, label=p1, style=dashed];
m8_830 -> m8_831  [key=0, style=solid];
m8_830 -> m8_28  [key=2, style=dotted];
m8_830 -> m8_208  [key=2, style=dotted];
m8_830 -> m8_833  [color=darkseagreen4, key=1, label=p2, style=dashed];
m8_832 -> m8_833  [key=0, style=solid];
m8_832 -> m8_159  [key=2, style=dotted];
m8_831 -> m8_832  [key=0, style=solid];
m8_831 -> m8_207  [key=2, style=dotted];
m8_831 -> m8_833  [color=darkseagreen4, key=1, label=products, style=dashed];
m8_831 -> m8_834  [color=darkseagreen4, key=1, label=products, style=dashed];
m8_833 -> m8_834  [key=0, style=solid];
m8_833 -> m8_159  [key=2, style=dotted];
m8_834 -> m8_835  [key=0, style=solid];
m8_834 -> m8_362  [key=2, style=dotted];
m8_835 -> m8_836  [key=0, style=solid];
m8_835 -> m8_11  [key=2, style=dotted];
m8_836 -> m8_828  [color=blue, key=0, style=bold];
m8_1036 -> m8_1037  [key=0, style=solid];
m8_1037 -> m8_1038  [key=0, style=solid];
m8_1037 -> m8_98  [key=2, style=dotted];
m8_1038 -> m8_1039  [key=0, style=solid];
m8_1038 -> m8_493  [key=2, style=dotted];
m8_1038 -> m8_11  [key=2, style=dotted];
m8_1039 -> m8_1040  [key=0, style=solid];
m8_1039 -> m8_98  [key=2, style=dotted];
m8_1040 -> m8_1041  [key=0, style=solid];
m8_1040 -> m8_493  [key=2, style=dotted];
m8_1040 -> m8_11  [key=2, style=dotted];
m8_1041 -> m8_1036  [color=blue, key=0, style=bold];
m8_91 -> m8_92  [key=0, style=solid];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_97  [key=2, style=dotted];
m8_92 -> m8_9  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_98  [key=2, style=dotted];
m8_93 -> m8_95  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_11  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_11  [key=2, style=dotted];
m8_96 -> m8_91  [color=blue, key=0, style=bold];
m8_1905 -> m8_1906  [key=0, style=solid];
m8_1906 -> m8_1907  [key=0, style=solid];
m8_1906 -> m8_1908  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1906 -> m8_1906  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_1907 -> m8_1908  [key=0, style=solid];
m8_1907 -> m8_98  [key=2, style=dotted];
m8_1907 -> m8_1909  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m8_1908 -> m8_1909  [key=0, style=solid];
m8_1908 -> m8_98  [key=2, style=dotted];
m8_1909 -> m8_1910  [key=0, style=solid];
m8_1909 -> m8_11  [key=2, style=dotted];
m8_1910 -> m8_1905  [color=blue, key=0, style=bold];
m8_654 -> m8_655  [key=0, style=solid];
m8_655 -> m8_656  [key=0, style=solid];
m8_655 -> m8_663  [key=2, style=dotted];
m8_655 -> m8_657  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_655 -> m8_658  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_655 -> m8_660  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_656 -> m8_657  [key=0, style=solid];
m8_657 -> m8_658  [key=0, style=solid];
m8_658 -> m8_659  [key=0, style=solid];
m8_658 -> m8_362  [key=2, style=dotted];
m8_660 -> m8_661  [key=0, style=solid];
m8_660 -> m8_664  [key=2, style=dotted];
m8_660 -> m8_665  [key=2, style=dotted];
m8_659 -> m8_660  [key=0, style=solid];
m8_659 -> m8_11  [key=2, style=dotted];
m8_661 -> m8_662  [key=0, style=solid];
m8_661 -> m8_11  [key=2, style=dotted];
m8_662 -> m8_654  [color=blue, key=0, style=bold];
m8_1463 -> m8_1464  [key=0, style=solid];
m8_1464 -> m8_1465  [key=0, style=solid];
m8_1464 -> m8_1471  [key=2, style=dotted];
m8_1464 -> m8_1466  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1464 -> m8_1467  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1464 -> m8_1468  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1464 -> m8_1469  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_1465 -> m8_1466  [key=0, style=solid];
m8_1465 -> m8_207  [key=2, style=dotted];
m8_1466 -> m8_1467  [key=0, style=solid];
m8_1466 -> m8_664  [key=2, style=dotted];
m8_1466 -> m8_207  [key=2, style=dotted];
m8_1466 -> m8_1472  [key=2, style=dotted];
m8_1466 -> m8_1473  [key=2, style=dotted];
m8_1467 -> m8_1468  [key=0, style=solid];
m8_1467 -> m8_11  [key=2, style=dotted];
m8_1468 -> m8_1469  [key=0, style=solid];
m8_1468 -> m8_11  [key=2, style=dotted];
m8_1469 -> m8_1470  [key=0, style=solid];
m8_1469 -> m8_11  [key=2, style=dotted];
m8_1470 -> m8_1463  [color=blue, key=0, style=bold];
m8_1024 -> m8_1025  [key=0, style=solid];
m8_1025 -> m8_1026  [key=0, style=solid];
m8_1025 -> m8_1034  [key=2, style=dotted];
m8_1025 -> m8_1027  [color=darkseagreen4, key=1, label=g, style=dashed];
m8_1025 -> m8_1028  [color=darkseagreen4, key=1, label=g, style=dashed];
m8_1025 -> m8_1029  [color=darkseagreen4, key=1, label=g, style=dashed];
m8_1026 -> m8_1027  [key=0, style=solid];
m8_1026 -> m8_1035  [key=2, style=dotted];
m8_1026 -> m8_1015  [key=2, style=dotted];
m8_1027 -> m8_1028  [key=0, style=solid];
m8_1027 -> m8_1035  [key=2, style=dotted];
m8_1027 -> m8_1015  [key=2, style=dotted];
m8_1028 -> m8_1029  [key=0, style=solid];
m8_1029 -> m8_1030  [key=0, style=solid];
m8_1029 -> m8_1021  [key=2, style=dotted];
m8_1029 -> m8_1031  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_1030 -> m8_1031  [key=0, style=solid];
m8_1030 -> m8_11  [key=2, style=dotted];
m8_1031 -> m8_1032  [key=0, style=solid];
m8_1031 -> m8_98  [key=2, style=dotted];
m8_1032 -> m8_1033  [key=0, style=solid];
m8_1032 -> m8_11  [key=2, style=dotted];
m8_1033 -> m8_1024  [color=blue, key=0, style=bold];
m8_466 -> m8_467  [key=0, style=solid];
m8_467 -> m8_468  [key=0, style=solid];
m8_467 -> m8_470  [key=2, style=dotted];
m8_467 -> m8_9  [key=2, style=dotted];
m8_468 -> m8_469  [key=0, style=solid];
m8_468 -> m8_11  [key=2, style=dotted];
m8_469 -> m8_466  [color=blue, key=0, style=bold];
m8_897 -> m8_898  [key=0, style=solid];
m8_898 -> m8_899  [key=0, style=solid];
m8_898 -> m8_57  [key=2, style=dotted];
m8_898 -> m8_9  [key=2, style=dotted];
m8_899 -> m8_897  [color=blue, key=0, style=bold];
m8_131 -> m8_132  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_141  [key=2, style=dotted];
m8_132 -> m8_134  [color=darkseagreen4, key=1, label=test, style=dashed];
m8_132 -> m8_135  [color=darkseagreen4, key=1, label=test, style=dashed];
m8_132 -> m8_138  [color=darkseagreen4, key=1, label=test, style=dashed];
m8_132 -> m8_139  [color=darkseagreen4, key=1, label=test, style=dashed];
m8_133 -> m8_134  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_9  [key=2, style=dotted];
m8_135 -> m8_137  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_11  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_11  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_11  [key=2, style=dotted];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_98  [key=2, style=dotted];
m8_137 -> m8_139  [color=darkseagreen4, key=1, label=test2, style=dashed];
m8_140 -> m8_131  [color=blue, key=0, style=bold];
m8_804 -> m8_805  [key=0, style=solid];
m8_805 -> m8_806  [key=0, style=solid];
m8_805 -> m8_805  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m8_806 -> m8_807  [key=0, style=solid];
m8_806 -> m8_98  [key=2, style=dotted];
m8_806 -> m8_808  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_806 -> m8_809  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_806 -> m8_810  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_806 -> m8_811  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_806 -> m8_812  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_806 -> m8_813  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_806 -> m8_814  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_806 -> m8_815  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_807 -> m8_808  [key=0, style=solid];
m8_807 -> m8_11  [key=2, style=dotted];
m8_808 -> m8_809  [key=0, style=solid];
m8_808 -> m8_11  [key=2, style=dotted];
m8_809 -> m8_810  [key=0, style=solid];
m8_809 -> m8_11  [key=2, style=dotted];
m8_810 -> m8_811  [key=0, style=solid];
m8_810 -> m8_11  [key=2, style=dotted];
m8_811 -> m8_812  [key=0, style=solid];
m8_811 -> m8_817  [key=2, style=dotted];
m8_812 -> m8_813  [key=0, style=solid];
m8_812 -> m8_11  [key=2, style=dotted];
m8_813 -> m8_814  [key=0, style=solid];
m8_813 -> m8_817  [key=2, style=dotted];
m8_814 -> m8_815  [key=0, style=solid];
m8_814 -> m8_11  [key=2, style=dotted];
m8_815 -> m8_816  [key=0, style=solid];
m8_815 -> m8_11  [key=2, style=dotted];
m8_816 -> m8_804  [color=blue, key=0, style=bold];
m8_1911 -> m8_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m8_1912 -> m8_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m8_1912 -> m8_699  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m8_1912 -> m8_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m8_1912 -> m8_701  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m8_1912 -> m8_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m8_1913 -> m8_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m8_1913 -> m8_1000  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m8_1914 -> m8_1016  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m8_1914 -> m8_1019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m8_1914 -> m8_1022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m8_1915 -> m8_1048  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m8_1916 -> m8_1087  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1091  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1097  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1916 -> m8_1135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m8_1917 -> m8_1148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1917 -> m8_1207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m8_1918 -> m8_1244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m8_1918 -> m8_1245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", style=dashed];
m8_1919 -> m8_1300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1919 -> m8_1301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1919 -> m8_1302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1919 -> m8_1303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1919 -> m8_1304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1919 -> m8_1305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1919 -> m8_1306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1919 -> m8_1307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m8_1920 -> m8_1311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1920 -> m8_1320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m8_1921 -> m8_1404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", style=dashed];
m8_1922 -> m8_1515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", style=dashed];
m8_1922 -> m8_1516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", style=dashed];
m8_1923 -> m8_1528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass", style=dashed];
m8_1924 -> m8_1545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", style=dashed];
m8_1925 -> m8_1607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", style=dashed];
m8_1926 -> m8_1643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", style=dashed];
m8_1927 -> m8_1737  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", style=dashed];
m8_1928 -> m8_1754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", style=dashed];
m8_1929 -> m8_1759  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", style=dashed];
m8_1931 -> m8_1773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m8_1932 -> m8_1809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", style=dashed];
m8_1933 -> m8_1818  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", style=dashed];
m8_1933 -> m8_1821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", style=dashed];
m8_1933 -> m8_1822  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", style=dashed];
m8_1934 -> m8_1829  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", style=dashed];
m8_1934 -> m8_1832  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", style=dashed];
m8_1934 -> m8_1833  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", style=dashed];
m8_1935 -> m8_1841  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m8_1935 -> m8_1842  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m8_1935 -> m8_1845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m8_1935 -> m8_1846  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m8_1935 -> m8_1847  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", style=dashed];
m8_1936 -> m8_1899  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", style=dashed];
m8_1936 -> m8_1900  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", style=dashed];
m8_1937 -> m8_1903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", style=dashed];
m9_44 -> m9_44  [color=green, key=3, label="Field variable string ValuePropertyName", style=bold];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_87  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m9_84 -> m9_92  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m9_84 -> m9_89  [color=darkorchid, key=3, label="method methodReturn T GetAttribute", style=bold];
m9_84 -> m9_98  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MemberInfo memberInfo", style=bold];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_49  [key=2, style=dotted];
m9_85 -> m9_87  [color=darkseagreen4, key=1, label=metadataType, style=dashed];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_94  [key=2, style=dotted];
m9_87 -> m9_64  [key=2, style=dotted];
m9_87 -> m9_89  [color=darkseagreen4, key=1, label=metadataTypeMemberInfo, style=dashed];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_83  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_92  [key=0, style=solid];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_92  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_83  [key=2, style=dotted];
m9_89 -> m9_91  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_92  [key=0, style=solid];
m9_91 -> m9_93  [key=0, style=solid];
m9_93 -> m9_84  [color=blue, key=0, style=bold];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_75  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_25  [key=2, style=dotted];
m9_51 -> m9_49  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_16  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_13 -> m9_18  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.MemberSerialization GetObjectMemberSerialization", style=bold];
m9_13 -> m9_19  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.MemberSerialization GetObjectMemberSerialization", style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_4  [key=2, style=dotted];
m9_14 -> m9_20  [color=darkseagreen4, key=1, label=objectAttribute, style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_10  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_20  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_18 -> m9_21  [key=0, style=solid];
m9_19 -> m9_21  [key=0, style=solid];
m9_21 -> m9_13  [color=blue, key=0, style=bold];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_30  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_26  [color=blue, key=0, style=bold];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_81  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_75 -> m9_78  [color=darkorchid, key=3, label="method methodReturn T GetAttribute", style=bold];
m9_75 -> m9_95  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_49  [key=2, style=dotted];
m9_76 -> m9_78  [color=darkseagreen4, key=1, label=metadataType, style=dashed];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_83  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_81  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_83  [key=2, style=dotted];
m9_78 -> m9_80  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_81  [key=0, style=solid];
m9_80 -> m9_82  [key=0, style=solid];
m9_82 -> m9_75  [color=blue, key=0, style=bold];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_48  [key=2, style=dotted];
m9_47 -> m9_45  [color=blue, key=0, style=bold];
m9_42 -> m9_42  [color=green, key=3, label="Field variable string ShouldSerializePrefix", style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_3  [key=2, style=dotted];
m9_12 -> m9_10  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_0  [key=2, style=dotted];
m9_9 -> m9_7  [color=blue, key=0, style=bold];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_35  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_31 -> m9_36  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m9_31 -> m9_34  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonConverter GetJsonConverter", style=bold];
m9_31 -> m9_38  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonConverter GetJsonConverter", style=bold];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_22  [key=2, style=dotted];
m9_32 -> m9_34  [color=darkseagreen4, key=1, label=converterType, style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_37  [key=0, style=solid];
m9_35 -> m9_41  [key=2, style=dotted];
m9_36 -> m9_39  [key=0, style=solid];
m9_36 -> m9_42  [key=2, style=dotted];
m9_36 -> m9_43  [key=2, style=dotted];
m9_36 -> m9_44  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_38  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_40  [key=2, style=dotted];
m9_34 -> m9_36  [color=darkseagreen4, key=1, label=memberConverter, style=dashed];
m9_34 -> m9_37  [color=darkseagreen4, key=1, label=memberConverter, style=dashed];
m9_38 -> m9_39  [key=0, style=solid];
m9_37 -> m9_39  [key=0, style=solid];
m9_39 -> m9_31  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_4  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m9_0 -> m9_7  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_30 -> m9_95  [key=0, style=solid];
m9_30 -> m9_98  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m9_30 -> m9_101  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m9_30 -> m9_26  [color=darkorchid, key=3, label="Parameter variable System.Reflection.ICustomAttributeProvider attributeProvider", style=bold];
m9_30 -> m9_75  [color=darkorchid, key=3, label="method methodReturn T GetAttribute", style=bold];
m9_30 -> m9_84  [color=darkorchid, key=3, label="method methodReturn T GetAttribute", style=bold];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_97  [color=darkseagreen4, key=1, label=type, style=dashed];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_100  [color=darkseagreen4, key=1, label=memberInfo, style=dashed];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_83  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_98  [key=0, style=solid];
m9_97 -> m9_102  [key=0, style=solid];
m9_97 -> m9_75  [key=2, style=dotted];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_101  [key=0, style=solid];
m9_100 -> m9_102  [key=0, style=solid];
m9_100 -> m9_84  [key=2, style=dotted];
m9_102 -> m9_30  [color=blue, key=0, style=bold];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_31  [color=darkorchid, key=3, label="Parameter variable System.Reflection.ICustomAttributeProvider attributeProvider", style=bold];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=2, style=dotted];
m9_24 -> m9_22  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_13  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_0  [key=2, style=dotted];
m9_6 -> m9_4  [color=blue, key=0, style=bold];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_52 -> m9_38  [color=darkorchid, key=3, label="method methodReturn System.Type GetAssociateMetadataTypeFromAttribute", style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_62  [key=2, style=dotted];
m9_53 -> m9_56  [color=darkseagreen4, key=1, label=metadataTypeAttributeType, style=dashed];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_63  [key=2, style=dotted];
m9_56 -> m9_64  [key=2, style=dotted];
m9_56 -> m9_59  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_56  [key=0, style=solid];
m9_55 -> m9_61  [key=0, style=solid];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_59  [key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_65  [key=2, style=dotted];
m9_59 -> m9_66  [key=2, style=dotted];
m9_58 -> m9_61  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_61 -> m9_52  [color=blue, key=0, style=bold];
m9_62 -> m9_67  [key=0, style=solid];
m9_62 -> m9_38  [color=darkorchid, key=3, label="method methodReturn System.Type GetMetadataTypeAttributeType", style=bold];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_72  [key=0, style=solid];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_74  [key=2, style=dotted];
m9_68 -> m9_70  [color=darkseagreen4, key=1, label=metadataTypeAttributeType, style=dashed];
m9_72 -> m9_73  [key=0, style=solid];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_71  [key=0, style=solid];
m9_70 -> m9_72  [key=0, style=solid];
m9_71 -> m9_73  [key=0, style=solid];
m9_73 -> m9_62  [color=blue, key=0, style=bold];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_4  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_68  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_19  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_70  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_21  [key=2, style=dotted];
m11_69 -> m11_65  [color=blue, key=0, style=bold];
m11_19 -> m11_50  [key=0, style=solid];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_19  [color=blue, key=0, style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_27  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_26  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_28  [key=2, style=dotted];
m11_26 -> m11_22  [color=blue, key=0, style=bold];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_57 -> m11_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_60  [key=0, style=solid];
m11_59 -> m11_63  [key=0, style=solid];
m11_59 -> m11_36  [key=2, style=dotted];
m11_59 -> m11_37  [key=2, style=dotted];
m11_61 -> m11_63  [key=0, style=solid];
m11_61 -> m11_38  [key=2, style=dotted];
m11_61 -> m11_64  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_62  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_63 -> m11_57  [color=blue, key=0, style=bold];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_29 -> m11_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=0, style=solid];
m11_31 -> m11_35  [key=0, style=solid];
m11_31 -> m11_36  [key=2, style=dotted];
m11_31 -> m11_37  [key=2, style=dotted];
m11_33 -> m11_35  [key=0, style=solid];
m11_33 -> m11_38  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_35 -> m11_29  [color=blue, key=0, style=bold];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_91  [key=0, style=solid];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_45  [key=2, style=dotted];
m11_89 -> m11_90  [key=0, style=solid];
m11_90 -> m11_92  [key=0, style=solid];
m11_92 -> m11_87  [color=blue, key=0, style=bold];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_19  [key=2, style=dotted];
m11_53 -> m11_2  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_56  [key=2, style=dotted];
m11_55 -> m11_52  [color=blue, key=0, style=bold];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m11_7 -> m11_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_7 -> m11_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_7 -> m11_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=0, style=solid];
m11_8 -> m11_17  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_19  [key=2, style=dotted];
m11_10 -> m11_14  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m11_10 -> m11_15  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m11_10 -> m11_10  [color=darkorchid, key=3, label="Field variable int MaximumJavascriptIntegerCharacterLength", style=bold];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_16  [key=0, style=solid];
m11_11 -> m11_20  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=0, style=solid];
m11_12 -> m11_107  [color=darkorchid, key=3, label="Field variable char[] _chars", style=bold];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_2  [key=2, style=dotted];
m11_9 -> m11_16  [key=0, style=solid];
m11_9 -> m11_18  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_21  [key=2, style=dotted];
m11_16 -> m11_7  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_6  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_2  [color=blue, key=0, style=bold];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_77  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_75 -> m11_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m11_75 -> m11_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m11_75 -> m11_84  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_19  [key=2, style=dotted];
m11_76 -> m11_78  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m11_76 -> m11_80  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m11_76 -> m11_81  [color=darkseagreen4, key=1, label=keyForItem, style=dashed];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_19  [key=2, style=dotted];
m11_77 -> m11_82  [color=darkseagreen4, key=1, label=keyAtIndex, style=dashed];
m11_77 -> m11_83  [color=darkseagreen4, key=1, label=keyAtIndex, style=dashed];
m11_80 -> m11_84  [key=0, style=solid];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_2  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_86  [key=2, style=dotted];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_81  [key=0, style=solid];
m11_78 -> m11_20  [key=2, style=dotted];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_84  [key=0, style=solid];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_21  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_84  [key=0, style=solid];
m11_85 -> m11_75  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_21 -> m11_71  [key=0, style=solid];
m11_21 -> m11_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_73  [key=0, style=solid];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_74  [key=2, style=dotted];
m11_73 -> m11_21  [color=blue, key=0, style=bold];
m11_6 -> m11_46  [key=0, style=solid];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_48  [key=0, style=solid];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_49  [key=2, style=dotted];
m11_48 -> m11_6  [color=blue, key=0, style=bold];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_100  [key=0, style=solid];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_105  [color=darkseagreen4, key=1, label=d2, style=dashed];
m11_101 -> m11_106  [color=darkseagreen4, key=1, label=d2, style=dashed];
m11_101 -> m11_108  [color=darkseagreen4, key=1, label=d2, style=dashed];
m11_101 -> m11_112  [color=darkseagreen4, key=1, label=d2, style=dashed];
m11_99 -> m11_121  [key=0, style=solid];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_102  [color=darkseagreen4, key=1, label=d1, style=dashed];
m11_100 -> m11_104  [color=darkseagreen4, key=1, label=d1, style=dashed];
m11_100 -> m11_107  [color=darkseagreen4, key=1, label=d1, style=dashed];
m11_100 -> m11_108  [color=darkseagreen4, key=1, label=d1, style=dashed];
m11_100 -> m11_110  [color=darkseagreen4, key=1, label=d1, style=dashed];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_104  [key=0, style=solid];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_106  [key=0, style=solid];
m11_107 -> m11_121  [key=0, style=solid];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_110  [key=0, style=solid];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_120  [key=0, style=solid];
m11_110 -> m11_112  [color=darkseagreen4, key=1, label=keyAndProperty, style=dashed];
m11_105 -> m11_121  [key=0, style=solid];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_108  [key=0, style=solid];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_114  [key=0, style=solid];
m11_112 -> m11_45  [key=2, style=dotted];
m11_112 -> m11_112  [color=darkseagreen4, key=1, label=keyAndProperty, style=dashed];
m11_112 -> m11_115  [color=darkseagreen4, key=1, label=secondValue, style=dashed];
m11_103 -> m11_121  [key=0, style=solid];
m11_109 -> m11_121  [key=0, style=solid];
m11_111 -> m11_112  [key=0, style=solid];
m11_120 -> m11_121  [key=0, style=solid];
m11_113 -> m11_121  [key=0, style=solid];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_114  [color=darkseagreen4, key=1, label=keyAndProperty, style=dashed];
m11_114 -> m11_116  [color=darkseagreen4, key=1, label=p1, style=dashed];
m11_114 -> m11_118  [color=darkseagreen4, key=1, label=p1, style=dashed];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_117  [color=darkseagreen4, key=1, label=p2, style=dashed];
m11_115 -> m11_118  [color=darkseagreen4, key=1, label=p2, style=dashed];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_118  [key=0, style=solid];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_110  [key=0, style=solid];
m11_118 -> m11_122  [key=2, style=dotted];
m11_117 -> m11_121  [key=0, style=solid];
m11_119 -> m11_121  [key=0, style=solid];
m11_121 -> m11_97  [color=blue, key=0, style=bold];
m11_93 -> m11_94  [key=0, style=solid];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_96  [key=2, style=dotted];
m11_95 -> m11_93  [color=blue, key=0, style=bold];
m11_17 -> m11_39  [key=0, style=solid];
m11_17 -> m11_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JToken", style=dashed];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_41  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_19  [key=2, style=dotted];
m11_41 -> m11_43  [color=darkseagreen4, key=1, label=key, style=dashed];
m11_40 -> m11_44  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_45  [key=2, style=dotted];
m11_44 -> m11_17  [color=blue, key=0, style=bold];
m11_123 -> m11_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m11_123 -> m11_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JPropertyKeyedCollection", style=dashed];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_102  [color=darkorchid, key=3, label="Parameter variable string data", style=bold];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_6  [key=2, style=dotted];
m12_29 -> m12_31  [key=2, style=dotted];
m12_30 -> m12_28  [color=blue, key=0, style=bold];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_90  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_126  [key=2, style=dotted];
m12_124 -> m12_127  [key=2, style=dotted];
m12_125 -> m12_123  [color=blue, key=0, style=bold];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_3  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateComment", style=bold];
m12_90 -> m12_123  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateComment", style=bold];
m12_91 -> m12_90  [color=blue, key=0, style=bold];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_28  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateProcessingInstruction", style=bold];
m12_102 -> m12_146  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateProcessingInstruction", style=bold];
m12_103 -> m12_102  [color=blue, key=0, style=bold];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_191  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_192  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_193  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_194  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_195  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_196  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_197  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_198  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_199  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_200  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_201  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_202  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_203  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_204  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m12_189 -> m12_240  [color=darkorchid, key=3, label="Parameter variable XObject node", style=bold];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_192  [key=0, style=solid];
m12_191 -> m12_205  [key=0, style=solid];
m12_191 -> m12_121  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_194  [key=0, style=solid];
m12_193 -> m12_205  [key=0, style=solid];
m12_193 -> m12_154  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_196  [key=0, style=solid];
m12_195 -> m12_205  [key=0, style=solid];
m12_195 -> m12_184  [key=2, style=dotted];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_198  [key=0, style=solid];
m12_197 -> m12_205  [key=0, style=solid];
m12_197 -> m12_149  [key=2, style=dotted];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_200  [key=0, style=solid];
m12_199 -> m12_205  [key=0, style=solid];
m12_199 -> m12_179  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_202  [key=0, style=solid];
m12_201 -> m12_205  [key=0, style=solid];
m12_201 -> m12_181  [key=2, style=dotted];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_204  [key=0, style=solid];
m12_203 -> m12_205  [key=0, style=solid];
m12_203 -> m12_165  [key=2, style=dotted];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_206  [key=2, style=dotted];
m12_205 -> m12_189  [color=blue, key=0, style=bold];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_106  [color=darkorchid, key=3, label="Parameter variable string namespaceURI", style=bold];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_160  [key=2, style=dotted];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_154  [key=2, style=dotted];
m12_158 -> m12_155  [key=2, style=dotted];
m12_158 -> m12_161  [key=2, style=dotted];
m12_159 -> m12_156  [color=blue, key=0, style=bold];
m12_453 -> m12_477  [key=0, style=solid];
m12_453 -> m12_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_480  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_453 -> m12_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_453 -> m12_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_453 -> m12_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_453 -> m12_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_453 -> m12_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_500  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_453 -> m12_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_453 -> m12_502  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_453 -> m12_419  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m12_453 -> m12_457  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_453 -> m12_421  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m12_453 -> m12_422  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m12_453 -> m12_420  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_477 -> m12_478  [key=0, style=solid];
m12_477 -> m12_479  [key=0, style=solid];
m12_477 -> m12_281  [key=2, style=dotted];
m12_479 -> m12_480  [key=0, style=solid];
m12_479 -> m12_504  [key=2, style=dotted];
m12_479 -> m12_483  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m12_480 -> m12_481  [key=0, style=solid];
m12_480 -> m12_505  [key=2, style=dotted];
m12_481 -> m12_482  [key=0, style=solid];
m12_481 -> m12_506  [key=2, style=dotted];
m12_481 -> m12_486  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_481 -> m12_488  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_481 -> m12_490  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_481 -> m12_492  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_481 -> m12_494  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_481 -> m12_497  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_481 -> m12_501  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_482 -> m12_483  [key=0, style=solid];
m12_482 -> m12_116  [key=2, style=dotted];
m12_485 -> m12_486  [key=0, style=solid];
m12_485 -> m12_281  [key=2, style=dotted];
m12_485 -> m12_507  [key=2, style=dotted];
m12_485 -> m12_45  [key=2, style=dotted];
m12_485 -> m12_108  [key=2, style=dotted];
m12_485 -> m12_485  [color=darkseagreen4, key=1, label=nameValue, style=dashed];
m12_487 -> m12_488  [key=0, style=solid];
m12_487 -> m12_489  [key=0, style=solid];
m12_488 -> m12_503  [key=0, style=solid];
m12_488 -> m12_474  [key=2, style=dotted];
m12_488 -> m12_92  [key=2, style=dotted];
m12_488 -> m12_116  [key=2, style=dotted];
m12_489 -> m12_490  [key=0, style=solid];
m12_489 -> m12_491  [key=0, style=solid];
m12_490 -> m12_503  [key=0, style=solid];
m12_490 -> m12_508  [key=2, style=dotted];
m12_490 -> m12_11  [key=2, style=dotted];
m12_490 -> m12_116  [key=2, style=dotted];
m12_491 -> m12_492  [key=0, style=solid];
m12_491 -> m12_493  [key=0, style=solid];
m12_492 -> m12_503  [key=0, style=solid];
m12_492 -> m12_508  [key=2, style=dotted];
m12_492 -> m12_11  [key=2, style=dotted];
m12_492 -> m12_116  [key=2, style=dotted];
m12_493 -> m12_494  [key=0, style=solid];
m12_493 -> m12_495  [key=0, style=solid];
m12_494 -> m12_503  [key=0, style=solid];
m12_494 -> m12_508  [key=2, style=dotted];
m12_494 -> m12_11  [key=2, style=dotted];
m12_494 -> m12_116  [key=2, style=dotted];
m12_495 -> m12_496  [key=0, style=solid];
m12_495 -> m12_498  [key=0, style=solid];
m12_496 -> m12_497  [key=0, style=solid];
m12_497 -> m12_503  [key=0, style=solid];
m12_497 -> m12_509  [key=2, style=dotted];
m12_497 -> m12_508  [key=2, style=dotted];
m12_497 -> m12_11  [key=2, style=dotted];
m12_497 -> m12_116  [key=2, style=dotted];
m12_498 -> m12_499  [key=0, style=solid];
m12_498 -> m12_503  [key=0, style=solid];
m12_499 -> m12_500  [key=0, style=solid];
m12_499 -> m12_503  [key=0, style=solid];
m12_500 -> m12_501  [key=0, style=solid];
m12_500 -> m12_272  [key=2, style=dotted];
m12_501 -> m12_502  [key=0, style=solid];
m12_501 -> m12_455  [key=2, style=dotted];
m12_502 -> m12_503  [key=0, style=solid];
m12_502 -> m12_510  [key=2, style=dotted];
m12_478 -> m12_503  [key=0, style=solid];
m12_478 -> m12_450  [key=2, style=dotted];
m12_483 -> m12_484  [key=0, style=solid];
m12_483 -> m12_487  [key=0, style=solid];
m12_486 -> m12_483  [key=0, style=solid];
m12_486 -> m12_112  [key=2, style=dotted];
m12_484 -> m12_485  [key=0, style=solid];
m12_484 -> m12_505  [key=2, style=dotted];
m12_484 -> m12_484  [color=darkseagreen4, key=1, label=nameValue, style=dashed];
m12_503 -> m12_453  [color=blue, key=0, style=bold];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_46  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m12_110 -> m12_167  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m12_110 -> m12_530  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m12_110 -> m12_533  [color=darkorchid, key=3, label="Parameter variable string namespaceURI", style=bold];
m12_111 -> m12_110  [color=blue, key=0, style=bold];
m12_165 -> m12_217  [key=0, style=solid];
m12_217 -> m12_165  [color=blue, key=0, style=bold];
m12_139 -> m12_140  [key=0, style=solid];
m12_139 -> m12_98  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m12_140 -> m12_141  [key=0, style=solid];
m12_140 -> m12_126  [key=2, style=dotted];
m12_140 -> m12_131  [key=2, style=dotted];
m12_141 -> m12_139  [color=blue, key=0, style=bold];
m12_66 -> m12_67  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_68 -> m12_66  [color=blue, key=0, style=bold];
m12_51 -> m12_52  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid];
m12_53 -> m12_51  [color=blue, key=0, style=bold];
m12_316 -> m12_317  [key=0, style=solid];
m12_316 -> m12_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_316 -> m12_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_316 -> m12_321  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_316 -> m12_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_316 -> m12_337  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_316 -> m12_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_316 -> m12_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_316 -> m12_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_316 -> m12_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_316 -> m12_245  [color=darkorchid, key=3, label="Parameter variable bool writePropertyName", style=bold];
m12_316 -> m12_372  [color=darkorchid, key=3, label="Parameter variable bool writePropertyName", style=bold];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_346  [key=2, style=dotted];
m12_317 -> m12_323  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m12_317 -> m12_325  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m12_317 -> m12_328  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_328  [key=0, style=solid];
m12_319 -> m12_319  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_326  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m12_321 -> m12_322  [key=0, style=solid];
m12_321 -> m12_282  [key=2, style=dotted];
m12_321 -> m12_323  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m12_321 -> m12_325  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m12_335 -> m12_328  [key=0, style=solid];
m12_335 -> m12_245  [key=2, style=dotted];
m12_337 -> m12_338  [key=0, style=solid];
m12_337 -> m12_339  [key=0, style=solid];
m12_338 -> m12_339  [key=0, style=solid];
m12_338 -> m12_349  [key=2, style=dotted];
m12_339 -> m12_340  [key=0, style=solid];
m12_339 -> m12_350  [key=2, style=dotted];
m12_342 -> m12_343  [key=0, style=solid];
m12_342 -> m12_245  [key=2, style=dotted];
m12_344 -> m12_328  [key=0, style=solid];
m12_344 -> m12_351  [key=2, style=dotted];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_320  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_318 -> m12_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_323 -> m12_324  [key=0, style=solid];
m12_323 -> m12_326  [key=0, style=solid];
m12_323 -> m12_347  [key=2, style=dotted];
m12_325 -> m12_326  [key=0, style=solid];
m12_325 -> m12_348  [key=2, style=dotted];
m12_328 -> m12_329  [key=0, style=solid];
m12_328 -> m12_345  [key=0, style=solid];
m12_327 -> m12_319  [key=0, style=solid];
m12_327 -> m12_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_270  [key=2, style=dotted];
m12_322 -> m12_323  [key=0, style=solid];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_269  [key=2, style=dotted];
m12_324 -> m12_326  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m12_329 -> m12_330  [key=0, style=solid];
m12_329 -> m12_329  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m12_329 -> m12_331  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m12_329 -> m12_332  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m12_329 -> m12_335  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m12_329 -> m12_336  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m12_329 -> m12_341  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m12_329 -> m12_342  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m12_330 -> m12_331  [key=0, style=solid];
m12_330 -> m12_307  [color=darkorchid, key=3, label="Local variable bool writeArray", style=bold];
m12_331 -> m12_332  [key=0, style=solid];
m12_331 -> m12_333  [key=0, style=solid];
m12_332 -> m12_334  [key=0, style=solid];
m12_332 -> m12_307  [key=2, style=dotted];
m12_336 -> m12_337  [key=0, style=solid];
m12_336 -> m12_336  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m12_336 -> m12_338  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
m12_341 -> m12_342  [key=0, style=solid];
m12_341 -> m12_344  [key=0, style=solid];
m12_341 -> m12_319  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m12_333 -> m12_334  [key=0, style=solid];
m12_334 -> m12_335  [key=0, style=solid];
m12_334 -> m12_336  [key=0, style=solid];
m12_340 -> m12_341  [key=0, style=solid];
m12_340 -> m12_342  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_340 -> m12_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_343 -> m12_341  [key=0, style=solid];
m12_343 -> m12_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_345 -> m12_316  [color=blue, key=0, style=bold];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_76  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_73 -> m12_78  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_73 -> m12_79  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_77  [key=0, style=solid];
m12_74 -> m12_79  [key=0, style=solid];
m12_76 -> m12_80  [key=0, style=solid];
m12_76 -> m12_51  [key=2, style=dotted];
m12_78 -> m12_80  [key=0, style=solid];
m12_78 -> m12_63  [key=2, style=dotted];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_66  [key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_77 -> m12_78  [key=0, style=solid];
m12_80 -> m12_73  [color=blue, key=0, style=bold];
m12_63 -> m12_64  [key=0, style=solid];
m12_64 -> m12_65  [key=0, style=solid];
m12_65 -> m12_63  [color=blue, key=0, style=bold];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_8  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateTextNode", style=bold];
m12_92 -> m12_128  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateTextNode", style=bold];
m12_93 -> m12_92  [color=blue, key=0, style=bold];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_171 -> m12_116  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_171 -> m12_178  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_174  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m12_172 -> m12_175  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_178  [key=2, style=dotted];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_176  [key=0, style=solid];
m12_174 -> m12_175  [key=0, style=solid];
m12_175 -> m12_177  [key=0, style=solid];
m12_177 -> m12_171  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_100  [color=darkorchid, key=3, label="Parameter variable string standalone", style=bold];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_6  [key=2, style=dotted];
m12_25 -> m12_27  [key=2, style=dotted];
m12_26 -> m12_24  [color=blue, key=0, style=bold];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_167 -> m12_110  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_160  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_165  [key=2, style=dotted];
m12_169 -> m12_166  [key=2, style=dotted];
m12_169 -> m12_161  [key=2, style=dotted];
m12_170 -> m12_167  [color=blue, key=0, style=bold];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_112  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m12_55 -> m12_56  [key=0, style=solid];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_58  [key=2, style=dotted];
m12_57 -> m12_54  [color=blue, key=0, style=bold];
m12_475 -> m12_578  [key=0, style=solid];
m12_475 -> m12_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_475 -> m12_595  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_475 -> m12_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_475 -> m12_597  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_475 -> m12_457  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m12_578 -> m12_579  [key=0, style=solid];
m12_578 -> m12_596  [key=0, style=solid];
m12_582 -> m12_583  [key=0, style=solid];
m12_582 -> m12_594  [key=0, style=solid];
m12_582 -> m12_454  [key=2, style=dotted];
m12_583 -> m12_584  [key=0, style=solid];
m12_583 -> m12_587  [key=0, style=solid];
m12_583 -> m12_590  [key=0, style=solid];
m12_583 -> m12_593  [key=0, style=solid];
m12_583 -> m12_474  [key=2, style=dotted];
m12_585 -> m12_586  [key=0, style=solid];
m12_585 -> m12_454  [key=2, style=dotted];
m12_586 -> m12_582  [key=0, style=solid];
m12_586 -> m12_474  [key=2, style=dotted];
m12_586 -> m12_594  [color=darkseagreen4, key=1, label=version, style=dashed];
m12_588 -> m12_589  [key=0, style=solid];
m12_588 -> m12_454  [key=2, style=dotted];
m12_589 -> m12_582  [key=0, style=solid];
m12_589 -> m12_474  [key=2, style=dotted];
m12_589 -> m12_594  [color=darkseagreen4, key=1, label=encoding, style=dashed];
m12_591 -> m12_592  [key=0, style=solid];
m12_591 -> m12_454  [key=2, style=dotted];
m12_592 -> m12_582  [key=0, style=solid];
m12_592 -> m12_474  [key=2, style=dotted];
m12_592 -> m12_594  [color=darkseagreen4, key=1, label=standalone, style=dashed];
m12_593 -> m12_598  [key=0, style=solid];
m12_593 -> m12_450  [key=2, style=dotted];
m12_594 -> m12_595  [key=0, style=solid];
m12_594 -> m12_100  [key=2, style=dotted];
m12_595 -> m12_598  [key=0, style=solid];
m12_595 -> m12_116  [key=2, style=dotted];
m12_596 -> m12_597  [key=0, style=solid];
m12_596 -> m12_575  [key=2, style=dotted];
m12_596 -> m12_474  [key=2, style=dotted];
m12_596 -> m12_102  [key=2, style=dotted];
m12_597 -> m12_598  [key=0, style=solid];
m12_597 -> m12_116  [key=2, style=dotted];
m12_579 -> m12_580  [key=0, style=solid];
m12_579 -> m12_594  [color=darkseagreen4, key=1, label=version, style=dashed];
m12_580 -> m12_581  [key=0, style=solid];
m12_580 -> m12_594  [color=darkseagreen4, key=1, label=encoding, style=dashed];
m12_581 -> m12_582  [key=0, style=solid];
m12_581 -> m12_594  [color=darkseagreen4, key=1, label=standalone, style=dashed];
m12_584 -> m12_585  [key=0, style=solid];
m12_587 -> m12_588  [key=0, style=solid];
m12_590 -> m12_591  [key=0, style=solid];
m12_598 -> m12_475  [color=blue, key=0, style=bold];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_178  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m12_213 -> m12_116  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_216  [key=2, style=dotted];
m12_215 -> m12_213  [color=blue, key=0, style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_92  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_6  [key=2, style=dotted];
m12_9 -> m12_11  [key=2, style=dotted];
m12_10 -> m12_8  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_37  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m12_106 -> m12_156  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m12_107 -> m12_106  [color=blue, key=0, style=bold];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_100  [color=darkorchid, key=3, label="Parameter variable string standalone", style=bold];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_118  [key=2, style=dotted];
m12_143 -> m12_145  [key=2, style=dotted];
m12_144 -> m12_142  [color=blue, key=0, style=bold];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_90  [color=darkorchid, key=3, label="Parameter variable string data", style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_3  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_98  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_6  [key=2, style=dotted];
m12_21 -> m12_23  [key=2, style=dotted];
m12_22 -> m12_20  [color=blue, key=0, style=bold];
m12_457 -> m12_458  [key=0, style=solid];
m12_457 -> m12_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_467  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_457 -> m12_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_457 -> m12_476  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m12_457 -> m12_455  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m12_457 -> m12_605  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m12_457 -> m12_617  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m12_457 -> m12_512  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m12_458 -> m12_459  [key=0, style=solid];
m12_458 -> m12_461  [key=0, style=solid];
m12_458 -> m12_463  [key=0, style=solid];
m12_458 -> m12_465  [key=0, style=solid];
m12_458 -> m12_467  [key=0, style=solid];
m12_460 -> m12_473  [key=0, style=solid];
m12_460 -> m12_474  [key=2, style=dotted];
m12_460 -> m12_92  [key=2, style=dotted];
m12_460 -> m12_116  [key=2, style=dotted];
m12_462 -> m12_473  [key=0, style=solid];
m12_462 -> m12_474  [key=2, style=dotted];
m12_462 -> m12_94  [key=2, style=dotted];
m12_462 -> m12_116  [key=2, style=dotted];
m12_464 -> m12_473  [key=0, style=solid];
m12_464 -> m12_474  [key=2, style=dotted];
m12_464 -> m12_96  [key=2, style=dotted];
m12_464 -> m12_116  [key=2, style=dotted];
m12_466 -> m12_473  [key=0, style=solid];
m12_466 -> m12_474  [key=2, style=dotted];
m12_466 -> m12_98  [key=2, style=dotted];
m12_466 -> m12_116  [key=2, style=dotted];
m12_467 -> m12_468  [key=0, style=solid];
m12_467 -> m12_469  [key=0, style=solid];
m12_467 -> m12_281  [key=2, style=dotted];
m12_468 -> m12_473  [key=0, style=solid];
m12_468 -> m12_475  [key=2, style=dotted];
m12_469 -> m12_470  [key=0, style=solid];
m12_469 -> m12_472  [key=0, style=solid];
m12_470 -> m12_471  [key=0, style=solid];
m12_470 -> m12_476  [key=2, style=dotted];
m12_472 -> m12_473  [key=0, style=solid];
m12_472 -> m12_453  [key=2, style=dotted];
m12_459 -> m12_460  [key=0, style=solid];
m12_461 -> m12_462  [key=0, style=solid];
m12_463 -> m12_464  [key=0, style=solid];
m12_465 -> m12_466  [key=0, style=solid];
m12_471 -> m12_473  [key=0, style=solid];
m12_473 -> m12_457  [color=blue, key=0, style=bold];
m12_181 -> m12_182  [key=0, style=solid];
m12_182 -> m12_181  [color=blue, key=0, style=bold];
m12_154 -> m12_218  [key=0, style=solid];
m12_218 -> m12_154  [color=blue, key=0, style=bold];
m12_274 -> m12_275  [key=0, style=solid];
m12_274 -> m12_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_274 -> m12_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_274 -> m12_282  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_280  [key=2, style=dotted];
m12_275 -> m12_277  [color=darkseagreen4, key=1, label=prefix, style=dashed];
m12_277 -> m12_279  [key=0, style=solid];
m12_278 -> m12_279  [key=0, style=solid];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_278  [key=0, style=solid];
m12_276 -> m12_281  [key=2, style=dotted];
m12_279 -> m12_274  [color=blue, key=0, style=bold];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_114  [color=darkorchid, key=3, label="Parameter variable string namespaceURI", style=bold];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_62  [key=2, style=dotted];
m12_229 -> m12_227  [color=blue, key=0, style=bold];
m12_410 -> m12_643  [key=0, style=solid];
m12_643 -> m12_644  [key=0, style=solid];
m12_643 -> m12_645  [key=2, style=dotted];
m12_643 -> m12_646  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_644 -> m12_410  [color=blue, key=0, style=bold];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_20  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateSignificantWhitespace", style=bold];
m12_98 -> m12_139  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateSignificantWhitespace", style=bold];
m12_99 -> m12_98  [color=blue, key=0, style=bold];
m12_178 -> m12_207  [key=0, style=solid];
m12_178 -> m12_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_178 -> m12_171  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_178 -> m12_178  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m12_178 -> m12_213  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_210  [key=2, style=dotted];
m12_208 -> m12_209  [key=0, style=solid];
m12_209 -> m12_178  [color=blue, key=0, style=bold];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_245  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m12_308 -> m12_309  [key=0, style=solid];
m12_308 -> m12_311  [key=2, style=dotted];
m12_308 -> m12_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_309 -> m12_310  [key=0, style=solid];
m12_309 -> m12_312  [key=2, style=dotted];
m12_310 -> m12_307  [color=blue, key=0, style=bold];
m12_146 -> m12_147  [key=0, style=solid];
m12_146 -> m12_102  [color=darkorchid, key=3, label="Parameter variable string data", style=bold];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_149  [key=2, style=dotted];
m12_147 -> m12_150  [key=2, style=dotted];
m12_148 -> m12_146  [color=blue, key=0, style=bold];
m12_282 -> m12_283  [key=0, style=solid];
m12_282 -> m12_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_282 -> m12_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_282 -> m12_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_282 -> m12_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_282 -> m12_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_282 -> m12_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_282 -> m12_274  [color=darkorchid, key=3, label="method methodReturn string GetPropertyName", style=bold];
m12_282 -> m12_320  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m12_282 -> m12_245  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_282 -> m12_316  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_283 -> m12_284  [key=0, style=solid];
m12_283 -> m12_288  [key=0, style=solid];
m12_283 -> m12_290  [key=0, style=solid];
m12_283 -> m12_292  [key=0, style=solid];
m12_283 -> m12_294  [key=0, style=solid];
m12_283 -> m12_296  [key=0, style=solid];
m12_283 -> m12_298  [key=0, style=solid];
m12_283 -> m12_300  [key=0, style=solid];
m12_283 -> m12_302  [key=0, style=solid];
m12_283 -> m12_304  [key=0, style=solid];
m12_285 -> m12_286  [key=0, style=solid];
m12_285 -> m12_287  [key=0, style=solid];
m12_286 -> m12_305  [key=0, style=solid];
m12_287 -> m12_305  [key=0, style=solid];
m12_287 -> m12_274  [key=2, style=dotted];
m12_293 -> m12_305  [key=0, style=solid];
m12_293 -> m12_274  [key=2, style=dotted];
m12_295 -> m12_305  [key=0, style=solid];
m12_295 -> m12_274  [key=2, style=dotted];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_306  [key=2, style=dotted];
m12_284 -> m12_285  [key=0, style=solid];
m12_288 -> m12_289  [key=0, style=solid];
m12_290 -> m12_291  [key=0, style=solid];
m12_292 -> m12_293  [key=0, style=solid];
m12_294 -> m12_295  [key=0, style=solid];
m12_296 -> m12_297  [key=0, style=solid];
m12_298 -> m12_299  [key=0, style=solid];
m12_300 -> m12_301  [key=0, style=solid];
m12_302 -> m12_303  [key=0, style=solid];
m12_289 -> m12_305  [key=0, style=solid];
m12_291 -> m12_305  [key=0, style=solid];
m12_297 -> m12_305  [key=0, style=solid];
m12_299 -> m12_305  [key=0, style=solid];
m12_301 -> m12_305  [key=0, style=solid];
m12_303 -> m12_305  [key=0, style=solid];
m12_305 -> m12_282  [color=blue, key=0, style=bold];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_104  [color=darkorchid, key=3, label="Parameter variable string elementName", style=bold];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_154  [key=2, style=dotted];
m12_152 -> m12_155  [key=2, style=dotted];
m12_153 -> m12_151  [color=blue, key=0, style=bold];
m12_419 -> m12_420  [key=0, style=solid];
m12_419 -> m12_423  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_419 -> m12_424  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_419 -> m12_429  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_419 -> m12_430  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_419 -> m12_436  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_419 -> m12_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_419 -> m12_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_419 -> m12_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_419 -> m12_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_419 -> m12_443  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_419 -> m12_444  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m12_420 -> m12_421  [key=0, style=solid];
m12_420 -> m12_241  [key=2, style=dotted];
m12_420 -> m12_242  [key=2, style=dotted];
m12_420 -> m12_440  [color=darkseagreen4, key=1, label=manager, style=dashed];
m12_420 -> m12_442  [color=darkseagreen4, key=1, label=manager, style=dashed];
m12_423 -> m12_424  [key=0, style=solid];
m12_423 -> m12_429  [key=0, style=solid];
m12_423 -> m12_449  [key=2, style=dotted];
m12_424 -> m12_425  [key=0, style=solid];
m12_424 -> m12_426  [key=0, style=solid];
m12_429 -> m12_430  [key=0, style=solid];
m12_429 -> m12_435  [key=0, style=solid];
m12_429 -> m12_449  [key=2, style=dotted];
m12_430 -> m12_431  [key=0, style=solid];
m12_430 -> m12_432  [key=0, style=solid];
m12_436 -> m12_448  [key=0, style=solid];
m12_436 -> m12_450  [key=2, style=dotted];
m12_437 -> m12_438  [key=0, style=solid];
m12_437 -> m12_439  [key=0, style=solid];
m12_440 -> m12_443  [key=0, style=solid];
m12_440 -> m12_453  [key=2, style=dotted];
m12_441 -> m12_442  [key=0, style=solid];
m12_441 -> m12_454  [key=2, style=dotted];
m12_442 -> m12_443  [key=0, style=solid];
m12_442 -> m12_455  [key=2, style=dotted];
m12_443 -> m12_444  [key=0, style=solid];
m12_443 -> m12_447  [key=0, style=solid];
m12_421 -> m12_422  [key=0, style=solid];
m12_421 -> m12_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_421 -> m12_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_421 -> m12_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_421 -> m12_444  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_421 -> m12_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_422 -> m12_423  [key=0, style=solid];
m12_422 -> m12_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_422 -> m12_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_422 -> m12_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_422 -> m12_421  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Converters.IXmlNode rootNode", style=bold];
m12_435 -> m12_436  [key=0, style=solid];
m12_435 -> m12_437  [key=0, style=solid];
m12_444 -> m12_445  [key=0, style=solid];
m12_444 -> m12_446  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_447 -> m12_448  [key=0, style=solid];
m12_425 -> m12_448  [key=0, style=solid];
m12_425 -> m12_450  [key=2, style=dotted];
m12_426 -> m12_427  [key=0, style=solid];
m12_426 -> m12_451  [key=2, style=dotted];
m12_427 -> m12_428  [key=0, style=solid];
m12_427 -> m12_121  [key=2, style=dotted];
m12_427 -> m12_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_427 -> m12_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_427 -> m12_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_427 -> m12_444  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_427 -> m12_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_428 -> m12_429  [key=0, style=solid];
m12_428 -> m12_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_428 -> m12_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_428 -> m12_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_431 -> m12_448  [key=0, style=solid];
m12_431 -> m12_450  [key=2, style=dotted];
m12_432 -> m12_433  [key=0, style=solid];
m12_432 -> m12_452  [key=2, style=dotted];
m12_433 -> m12_434  [key=0, style=solid];
m12_433 -> m12_0  [key=2, style=dotted];
m12_433 -> m12_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_433 -> m12_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_433 -> m12_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_433 -> m12_444  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_433 -> m12_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_434 -> m12_435  [key=0, style=solid];
m12_434 -> m12_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_434 -> m12_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m12_438 -> m12_448  [key=0, style=solid];
m12_438 -> m12_450  [key=2, style=dotted];
m12_439 -> m12_440  [key=0, style=solid];
m12_439 -> m12_441  [key=0, style=solid];
m12_439 -> m12_281  [key=2, style=dotted];
m12_445 -> m12_446  [key=0, style=solid];
m12_445 -> m12_456  [key=2, style=dotted];
m12_446 -> m12_448  [key=0, style=solid];
m12_448 -> m12_419  [color=blue, key=0, style=bold];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_94  [color=darkorchid, key=3, label="Parameter variable string data", style=bold];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_126  [key=2, style=dotted];
m12_133 -> m12_135  [key=2, style=dotted];
m12_134 -> m12_132  [color=blue, key=0, style=bold];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_108  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_165  [key=2, style=dotted];
m12_163 -> m12_166  [key=2, style=dotted];
m12_164 -> m12_162  [color=blue, key=0, style=bold];
m12_476 -> m12_511  [key=0, style=solid];
m12_476 -> m12_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_476 -> m12_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_476 -> m12_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_476 -> m12_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_476 -> m12_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_476 -> m12_521  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_476 -> m12_528  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_476 -> m12_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_476 -> m12_457  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_511 -> m12_512  [key=0, style=solid];
m12_511 -> m12_505  [key=2, style=dotted];
m12_512 -> m12_513  [key=0, style=solid];
m12_512 -> m12_506  [key=2, style=dotted];
m12_512 -> m12_516  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m12_512 -> m12_519  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m12_512 -> m12_521  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m12_513 -> m12_514  [key=0, style=solid];
m12_513 -> m12_116  [key=2, style=dotted];
m12_515 -> m12_516  [key=0, style=solid];
m12_515 -> m12_518  [key=0, style=solid];
m12_515 -> m12_454  [key=2, style=dotted];
m12_516 -> m12_517  [key=0, style=solid];
m12_516 -> m12_457  [key=2, style=dotted];
m12_519 -> m12_520  [key=0, style=solid];
m12_519 -> m12_524  [key=2, style=dotted];
m12_521 -> m12_522  [key=0, style=solid];
m12_521 -> m12_525  [key=2, style=dotted];
m12_521 -> m12_526  [key=2, style=dotted];
m12_521 -> m12_527  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_522 -> m12_523  [key=0, style=solid];
m12_522 -> m12_524  [key=2, style=dotted];
m12_514 -> m12_515  [key=0, style=solid];
m12_514 -> m12_517  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_514 -> m12_520  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_514 -> m12_319  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m12_517 -> m12_515  [key=0, style=solid];
m12_517 -> m12_517  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_517 -> m12_520  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_520 -> m12_521  [key=0, style=solid];
m12_520 -> m12_523  [key=0, style=solid];
m12_518 -> m12_519  [key=0, style=solid];
m12_518 -> m12_520  [key=0, style=solid];
m12_523 -> m12_476  [color=blue, key=0, style=bold];
m12_118 -> m12_119  [key=0, style=solid];
m12_119 -> m12_120  [key=0, style=solid];
m12_120 -> m12_118  [color=blue, key=0, style=bold];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_54  [color=darkorchid, key=3, label="method methodReturn void SetAttributeNode", style=bold];
m12_112 -> m12_219  [color=darkorchid, key=3, label="method methodReturn void SetAttributeNode", style=bold];
m12_112 -> m12_485  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m12_112 -> m12_110  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m12_113 -> m12_112  [color=blue, key=0, style=bold];
m12_149 -> m12_183  [key=0, style=solid];
m12_183 -> m12_149  [color=blue, key=0, style=bold];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_96  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_126  [key=2, style=dotted];
m12_137 -> m12_131  [key=2, style=dotted];
m12_138 -> m12_136  [color=blue, key=0, style=bold];
m12_576 -> m12_631  [key=0, style=solid];
m12_576 -> m12_632  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_576 -> m12_635  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_576 -> m12_636  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_576 -> m12_542  [color=darkorchid, key=3, label="Parameter variable string attributeName", style=bold];
m12_576 -> m12_552  [color=darkorchid, key=3, label="Parameter variable string prefix", style=bold];
m12_576 -> m12_372  [color=darkorchid, key=3, label="method methodReturn bool IsNamespaceAttribute", style=bold];
m12_576 -> m12_342  [color=darkorchid, key=3, label="method methodReturn bool IsNamespaceAttribute", style=bold];
m12_631 -> m12_632  [key=0, style=solid];
m12_631 -> m12_638  [key=0, style=solid];
m12_631 -> m12_641  [key=2, style=dotted];
m12_632 -> m12_633  [key=0, style=solid];
m12_632 -> m12_635  [key=0, style=solid];
m12_635 -> m12_636  [key=0, style=solid];
m12_635 -> m12_638  [key=0, style=solid];
m12_636 -> m12_637  [key=0, style=solid];
m12_636 -> m12_642  [key=2, style=dotted];
m12_638 -> m12_639  [key=0, style=solid];
m12_638 -> m12_640  [color=darkseagreen4, key=1, label="out string", style=dashed];
m12_633 -> m12_634  [key=0, style=solid];
m12_634 -> m12_640  [key=0, style=solid];
m12_637 -> m12_640  [key=0, style=solid];
m12_639 -> m12_640  [key=0, style=solid];
m12_640 -> m12_576  [color=blue, key=0, style=bold];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_94  [color=darkorchid, key=3, label="Parameter variable string data", style=bold];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_6  [key=2, style=dotted];
m12_13 -> m12_15  [key=2, style=dotted];
m12_14 -> m12_12  [color=blue, key=0, style=bold];
m12_179 -> m12_180  [key=0, style=solid];
m12_180 -> m12_179  [color=blue, key=0, style=bold];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_24  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDeclaration", style=bold];
m12_100 -> m12_142  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDeclaration", style=bold];
m12_100 -> m12_579  [color=darkorchid, key=3, label="Parameter variable string version", style=bold];
m12_100 -> m12_580  [color=darkorchid, key=3, label="Parameter variable string encoding", style=bold];
m12_100 -> m12_581  [color=darkorchid, key=3, label="Parameter variable string standalone", style=bold];
m12_101 -> m12_100  [color=blue, key=0, style=bold];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_32  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m12_104 -> m12_151  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m12_104 -> m12_506  [color=darkorchid, key=3, label="Parameter variable string elementName", style=bold];
m12_105 -> m12_104  [color=blue, key=0, style=bold];
m12_206 -> m12_211  [key=0, style=solid];
m12_211 -> m12_212  [key=0, style=solid];
m12_212 -> m12_206  [color=blue, key=0, style=bold];
m12_649 -> m12_650  [key=0, style=solid];
m12_649 -> m12_652  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m12_649 -> m12_372  [color=darkorchid, key=3, label="method methodReturn bool CanConvert", style=bold];
m12_649 -> m12_342  [color=darkorchid, key=3, label="method methodReturn bool CanConvert", style=bold];
m12_650 -> m12_651  [key=0, style=solid];
m12_650 -> m12_652  [key=0, style=solid];
m12_650 -> m12_449  [key=2, style=dotted];
m12_652 -> m12_653  [key=0, style=solid];
m12_652 -> m12_654  [key=0, style=solid];
m12_652 -> m12_449  [key=2, style=dotted];
m12_651 -> m12_655  [key=0, style=solid];
m12_653 -> m12_655  [key=0, style=solid];
m12_654 -> m12_655  [key=0, style=solid];
m12_655 -> m12_649  [color=blue, key=0, style=bold];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_46 -> m12_110  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_6  [key=2, style=dotted];
m12_47 -> m12_45  [key=2, style=dotted];
m12_47 -> m12_49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m12_48 -> m12_49  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_50 -> m12_46  [color=blue, key=0, style=bold];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_92  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_126  [key=2, style=dotted];
m12_129 -> m12_131  [key=2, style=dotted];
m12_130 -> m12_128  [color=blue, key=0, style=bold];
m12_524 -> m12_530  [key=0, style=solid];
m12_524 -> m12_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m12_524 -> m12_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m12_524 -> m12_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m12_524 -> m12_512  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element", style=bold];
m12_524 -> m12_521  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element", style=bold];
m12_524 -> m12_613  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element", style=bold];
m12_524 -> m12_476  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m12_524 -> m12_455  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m12_530 -> m12_531  [key=0, style=solid];
m12_530 -> m12_110  [key=2, style=dotted];
m12_530 -> m12_112  [key=2, style=dotted];
m12_531 -> m12_532  [key=0, style=solid];
m12_531 -> m12_534  [key=0, style=solid];
m12_532 -> m12_533  [key=0, style=solid];
m12_532 -> m12_534  [key=0, style=solid];
m12_532 -> m12_114  [key=2, style=dotted];
m12_533 -> m12_534  [key=0, style=solid];
m12_533 -> m12_110  [key=2, style=dotted];
m12_533 -> m12_112  [key=2, style=dotted];
m12_534 -> m12_524  [color=blue, key=0, style=bold];
m12_646 -> m12_647  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_72  [key=2, style=dotted];
m12_71 -> m12_69  [color=blue, key=0, style=bold];
m12_81 -> m12_82  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_72  [key=2, style=dotted];
m12_83 -> m12_81  [color=blue, key=0, style=bold];
m12_186 -> m12_187  [key=0, style=solid];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_72  [key=2, style=dotted];
m12_188 -> m12_186  [color=blue, key=0, style=bold];
m12_223 -> m12_224  [key=0, style=solid];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_226  [key=2, style=dotted];
m12_225 -> m12_223  [color=blue, key=0, style=bold];
m12_313 -> m12_314  [key=0, style=solid];
m12_314 -> m12_315  [key=0, style=solid];
m12_315 -> m12_313  [color=blue, key=0, style=bold];
m12_417 -> m12_418  [color=red, key=0, style=solid];
m12_416 -> m12_417  [color=red, key=0, style=solid];
m12_418 -> m12_416  [color=blue, key=0, style=bold];
m12_528 -> m12_529  [key=0, style=solid];
m12_527 -> m12_528  [key=0, style=solid];
m12_529 -> m12_527  [color=blue, key=0, style=bold];
m12_629 -> m12_630  [key=0, style=solid];
m12_628 -> m12_629  [key=0, style=solid];
m12_630 -> m12_628  [color=blue, key=0, style=bold];
m12_647 -> m12_648  [key=0, style=solid];
m12_648 -> m12_646  [color=blue, key=0, style=bold];
m12_121 -> m12_122  [key=0, style=solid];
m12_122 -> m12_121  [color=blue, key=0, style=bold];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_84  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m12_116 -> m12_171  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m12_116 -> m12_213  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m12_116 -> m12_92  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_94  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_96  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_98  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_481  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_512  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_594  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_596  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_116 -> m12_90  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_117 -> m12_116  [color=blue, key=0, style=bold];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_106  [color=darkorchid, key=3, label="Parameter variable string namespaceURI", style=bold];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_35  [key=2, style=dotted];
m12_38 -> m12_36  [key=2, style=dotted];
m12_39 -> m12_37  [color=blue, key=0, style=bold];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_59  [color=darkorchid, key=3, label="method methodReturn string GetPrefixOfNamespace", style=bold];
m12_114 -> m12_227  [color=darkorchid, key=3, label="method methodReturn string GetPrefixOfNamespace", style=bold];
m12_115 -> m12_114  [color=blue, key=0, style=bold];
m12_184 -> m12_185  [key=0, style=solid];
m12_185 -> m12_184  [color=blue, key=0, style=bold];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_12  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateCDataSection", style=bold];
m12_94 -> m12_132  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateCDataSection", style=bold];
m12_95 -> m12_94  [color=blue, key=0, style=bold];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_114  [color=darkorchid, key=3, label="Parameter variable string namespaceURI", style=bold];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_62  [key=2, style=dotted];
m12_61 -> m12_59  [color=blue, key=0, style=bold];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_230 -> m12_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_230 -> m12_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_240  [key=2, style=dotted];
m12_231 -> m12_233  [color=darkseagreen4, key=1, label=node, style=dashed];
m12_231 -> m12_236  [color=darkseagreen4, key=1, label=node, style=dashed];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_244  [key=2, style=dotted];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_245  [key=2, style=dotted];
m12_238 -> m12_239  [key=0, style=solid];
m12_238 -> m12_246  [key=2, style=dotted];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_241  [key=2, style=dotted];
m12_232 -> m12_242  [key=2, style=dotted];
m12_232 -> m12_236  [color=darkseagreen4, key=1, label=manager, style=dashed];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_243  [key=2, style=dotted];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_236  [key=0, style=solid];
m12_237 -> m12_238  [key=0, style=solid];
m12_237 -> m12_239  [key=0, style=solid];
m12_239 -> m12_230  [color=blue, key=0, style=bold];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_104  [color=darkorchid, key=3, label="Parameter variable string elementName", style=bold];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_35  [key=2, style=dotted];
m12_33 -> m12_36  [key=2, style=dotted];
m12_34 -> m12_32  [color=blue, key=0, style=bold];
m12_219 -> m12_220  [key=0, style=solid];
m12_219 -> m12_112  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m12_220 -> m12_221  [key=0, style=solid];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_210  [key=2, style=dotted];
m12_222 -> m12_219  [color=blue, key=0, style=bold];
m12_240 -> m12_247  [key=0, style=solid];
m12_240 -> m12_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_240 -> m12_249  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_240 -> m12_250  [color=darkseagreen4, key=1, label=object, style=dashed];
m12_240 -> m12_230  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m12_240 -> m12_189  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode WrapXml", style=bold];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_249  [key=0, style=solid];
m12_248 -> m12_252  [key=0, style=solid];
m12_248 -> m12_189  [key=2, style=dotted];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_251  [key=0, style=solid];
m12_250 -> m12_252  [key=0, style=solid];
m12_250 -> m12_66  [key=2, style=dotted];
m12_251 -> m12_252  [key=0, style=solid];
m12_251 -> m12_253  [key=2, style=dotted];
m12_252 -> m12_240  [color=blue, key=0, style=bold];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_96  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_6  [key=2, style=dotted];
m12_17 -> m12_19  [key=2, style=dotted];
m12_18 -> m12_16  [color=blue, key=0, style=bold];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_40 -> m12_108  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_6  [key=2, style=dotted];
m12_41 -> m12_45  [key=2, style=dotted];
m12_41 -> m12_43  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m12_42 -> m12_43  [key=0, style=solid];
m12_43 -> m12_44  [key=0, style=solid];
m12_44 -> m12_40  [color=blue, key=0, style=bold];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_16  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateWhitespace", style=bold];
m12_96 -> m12_136  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateWhitespace", style=bold];
m12_97 -> m12_96  [color=blue, key=0, style=bold];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_40  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m12_108 -> m12_162  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m12_109 -> m12_108  [color=blue, key=0, style=bold];
m12_506 -> m12_599  [key=0, style=solid];
m12_506 -> m12_453  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_506 -> m12_476  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_506 -> m12_480  [color=darkorchid, key=3, label="Parameter variable string elementPrefix", style=bold];
m12_506 -> m12_511  [color=darkorchid, key=3, label="Parameter variable string elementPrefix", style=bold];
m12_599 -> m12_600  [key=0, style=solid];
m12_599 -> m12_281  [key=2, style=dotted];
m12_599 -> m12_507  [key=2, style=dotted];
m12_599 -> m12_36  [key=2, style=dotted];
m12_599 -> m12_104  [key=2, style=dotted];
m12_600 -> m12_506  [color=blue, key=0, style=bold];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_84 -> m12_116  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m12_84 -> m12_84  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m12_85 -> m12_86  [key=0, style=solid];
m12_87 -> m12_88  [key=0, style=solid];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_89  [key=2, style=dotted];
m12_88 -> m12_84  [color=blue, key=0, style=bold];
m12_245 -> m12_352  [key=0, style=solid];
m12_245 -> m12_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_357  [color=red, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_417  [color=red, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_362  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_245 -> m12_363  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_245 -> m12_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_377  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_245 -> m12_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_390  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_245 -> m12_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m12_245 -> m12_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_245 -> m12_230  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m12_245 -> m12_316  [color=darkorchid, key=3, label="Parameter variable bool writePropertyName", style=bold];
m12_245 -> m12_245  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_245 -> m12_231  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m12_245 -> m12_232  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_245 -> m12_342  [color=darkorchid, key=3, label="Parameter variable bool writePropertyName", style=bold];
m12_352 -> m12_353  [key=0, style=solid];
m12_352 -> m12_356  [key=0, style=solid];
m12_352 -> m12_376  [key=0, style=solid];
m12_352 -> m12_379  [key=0, style=solid];
m12_352 -> m12_393  [key=0, style=solid];
m12_352 -> m12_407  [key=0, style=solid];
m12_355 -> m12_408  [key=0, style=solid];
m12_355 -> m12_316  [key=2, style=dotted];
m12_357 -> m12_358  [color=red, key=0, style=solid];
m12_357 -> m12_359  [color=red, key=0, style=solid];
m12_357 -> m12_307  [color=red, key=2, style=dotted];
m12_357 -> m12_409  [color=red, key=2, style=dotted];
m12_357 -> m12_416  [color=red, key=1, label="lambda expression", style=dashed];
m12_358 -> m12_408  [key=0, style=solid];
m12_358 -> m12_316  [key=2, style=dotted];
m12_359 -> m12_360  [key=0, style=solid];
m12_359 -> m12_363  [key=0, style=solid];
m12_359 -> m12_361  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m12_359 -> m12_362  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m12_362 -> m12_359  [key=0, style=solid];
m12_362 -> m12_273  [key=2, style=dotted];
m12_363 -> m12_364  [key=0, style=solid];
m12_363 -> m12_365  [key=0, style=solid];
m12_364 -> m12_365  [key=0, style=solid];
m12_364 -> m12_282  [key=2, style=dotted];
m12_364 -> m12_349  [key=2, style=dotted];
m12_365 -> m12_366  [key=0, style=solid];
m12_365 -> m12_367  [key=0, style=solid];
m12_365 -> m12_410  [key=2, style=dotted];
m12_365 -> m12_411  [key=2, style=dotted];
m12_366 -> m12_408  [key=0, style=solid];
m12_366 -> m12_412  [key=2, style=dotted];
m12_367 -> m12_368  [key=0, style=solid];
m12_367 -> m12_369  [key=0, style=solid];
m12_367 -> m12_413  [key=2, style=dotted];
m12_368 -> m12_408  [key=0, style=solid];
m12_368 -> m12_414  [key=2, style=dotted];
m12_369 -> m12_370  [key=0, style=solid];
m12_369 -> m12_244  [key=2, style=dotted];
m12_371 -> m12_372  [key=0, style=solid];
m12_371 -> m12_374  [key=0, style=solid];
m12_371 -> m12_319  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m12_372 -> m12_373  [key=0, style=solid];
m12_372 -> m12_245  [key=2, style=dotted];
m12_374 -> m12_375  [key=0, style=solid];
m12_374 -> m12_316  [key=2, style=dotted];
m12_375 -> m12_408  [key=0, style=solid];
m12_375 -> m12_246  [key=2, style=dotted];
m12_377 -> m12_378  [key=0, style=solid];
m12_377 -> m12_408  [key=0, style=solid];
m12_378 -> m12_408  [key=0, style=solid];
m12_378 -> m12_415  [key=2, style=dotted];
m12_385 -> m12_386  [key=0, style=solid];
m12_385 -> m12_387  [key=0, style=solid];
m12_387 -> m12_388  [key=0, style=solid];
m12_387 -> m12_390  [key=0, style=solid];
m12_388 -> m12_389  [key=0, style=solid];
m12_388 -> m12_390  [key=0, style=solid];
m12_390 -> m12_391  [key=0, style=solid];
m12_390 -> m12_392  [key=0, style=solid];
m12_391 -> m12_392  [key=0, style=solid];
m12_391 -> m12_282  [key=2, style=dotted];
m12_391 -> m12_349  [key=2, style=dotted];
m12_392 -> m12_408  [key=0, style=solid];
m12_392 -> m12_412  [key=2, style=dotted];
m12_394 -> m12_395  [key=0, style=solid];
m12_394 -> m12_397  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m12_394 -> m12_399  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m12_394 -> m12_400  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m12_394 -> m12_402  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m12_394 -> m12_403  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m12_394 -> m12_405  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m12_395 -> m12_396  [key=0, style=solid];
m12_395 -> m12_282  [key=2, style=dotted];
m12_395 -> m12_349  [key=2, style=dotted];
m12_396 -> m12_397  [key=0, style=solid];
m12_396 -> m12_244  [key=2, style=dotted];
m12_398 -> m12_399  [key=0, style=solid];
m12_398 -> m12_349  [key=2, style=dotted];
m12_399 -> m12_400  [key=0, style=solid];
m12_399 -> m12_412  [key=2, style=dotted];
m12_401 -> m12_402  [key=0, style=solid];
m12_401 -> m12_349  [key=2, style=dotted];
m12_402 -> m12_403  [key=0, style=solid];
m12_402 -> m12_412  [key=2, style=dotted];
m12_404 -> m12_405  [key=0, style=solid];
m12_404 -> m12_349  [key=2, style=dotted];
m12_405 -> m12_406  [key=0, style=solid];
m12_405 -> m12_412  [key=2, style=dotted];
m12_406 -> m12_408  [key=0, style=solid];
m12_406 -> m12_246  [key=2, style=dotted];
m12_407 -> m12_408  [key=0, style=solid];
m12_407 -> m12_306  [key=2, style=dotted];
m12_353 -> m12_354  [key=0, style=solid];
m12_356 -> m12_357  [color=red, key=0, style=solid];
m12_376 -> m12_377  [key=0, style=solid];
m12_379 -> m12_380  [key=0, style=solid];
m12_393 -> m12_394  [key=0, style=solid];
m12_354 -> m12_355  [key=0, style=solid];
m12_360 -> m12_361  [key=0, style=solid];
m12_360 -> m12_359  [key=0, style=solid];
m12_361 -> m12_362  [key=0, style=solid];
m12_370 -> m12_371  [key=0, style=solid];
m12_370 -> m12_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_370 -> m12_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_373 -> m12_371  [key=0, style=solid];
m12_373 -> m12_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_380 -> m12_381  [key=0, style=solid];
m12_381 -> m12_382  [key=0, style=solid];
m12_382 -> m12_383  [key=0, style=solid];
m12_383 -> m12_384  [key=0, style=solid];
m12_384 -> m12_385  [key=0, style=solid];
m12_386 -> m12_408  [key=0, style=solid];
m12_389 -> m12_408  [key=0, style=solid];
m12_397 -> m12_398  [key=0, style=solid];
m12_397 -> m12_400  [key=0, style=solid];
m12_397 -> m12_281  [key=2, style=dotted];
m12_400 -> m12_401  [key=0, style=solid];
m12_400 -> m12_403  [key=0, style=solid];
m12_400 -> m12_281  [key=2, style=dotted];
m12_403 -> m12_404  [key=0, style=solid];
m12_403 -> m12_406  [key=0, style=solid];
m12_403 -> m12_281  [key=2, style=dotted];
m12_408 -> m12_245  [color=blue, key=0, style=bold];
m12_243 -> m12_254  [key=0, style=solid];
m12_243 -> m12_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_243 -> m12_264  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_243 -> m12_267  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_243 -> m12_231  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m12_243 -> m12_232  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_254 -> m12_255  [key=0, style=solid];
m12_254 -> m12_258  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_254 -> m12_260  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_254 -> m12_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_254 -> m12_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_254 -> m12_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_255 -> m12_256  [key=0, style=solid];
m12_255 -> m12_243  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Converters.IXmlNode parent", style=bold];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_272  [key=2, style=dotted];
m12_267 -> m12_265  [key=0, style=solid];
m12_267 -> m12_273  [key=2, style=dotted];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_260  [key=0, style=solid];
m12_260 -> m12_256  [key=0, style=solid];
m12_260 -> m12_270  [key=2, style=dotted];
m12_261 -> m12_262  [key=0, style=solid];
m12_261 -> m12_268  [key=0, style=solid];
m12_262 -> m12_263  [key=0, style=solid];
m12_262 -> m12_271  [key=2, style=dotted];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_268  [key=0, style=solid];
m12_263 -> m12_265  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
m12_256 -> m12_257  [key=0, style=solid];
m12_256 -> m12_261  [key=0, style=solid];
m12_256 -> m12_256  [color=darkseagreen4, key=1, label=parent, style=dashed];
m12_256 -> m12_260  [color=darkseagreen4, key=1, label=parent, style=dashed];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_256  [key=0, style=solid];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_269  [key=2, style=dotted];
m12_259 -> m12_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_259 -> m12_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_259 -> m12_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m12_265 -> m12_266  [key=0, style=solid];
m12_265 -> m12_263  [key=0, style=solid];
m12_265 -> m12_267  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m12_266 -> m12_267  [key=0, style=solid];
m12_266 -> m12_265  [key=0, style=solid];
m12_268 -> m12_243  [color=blue, key=0, style=bold];
m12_504 -> m12_535  [key=0, style=solid];
m12_504 -> m12_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_554  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_504 -> m12_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_559  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_504 -> m12_562  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_504 -> m12_566  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m12_504 -> m12_572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_504 -> m12_453  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_535 -> m12_536  [key=0, style=solid];
m12_535 -> m12_346  [key=2, style=dotted];
m12_535 -> m12_551  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m12_535 -> m12_565  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m12_535 -> m12_567  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m12_535 -> m12_573  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m12_538 -> m12_539  [key=0, style=solid];
m12_538 -> m12_573  [key=0, style=solid];
m12_539 -> m12_540  [key=0, style=solid];
m12_539 -> m12_573  [key=0, style=solid];
m12_539 -> m12_454  [key=2, style=dotted];
m12_540 -> m12_541  [key=0, style=solid];
m12_540 -> m12_570  [key=0, style=solid];
m12_540 -> m12_572  [key=0, style=solid];
m12_542 -> m12_543  [key=0, style=solid];
m12_542 -> m12_474  [key=2, style=dotted];
m12_542 -> m12_544  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_542 -> m12_545  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_542 -> m12_548  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_549 -> m12_550  [key=0, style=solid];
m12_549 -> m12_454  [key=2, style=dotted];
m12_550 -> m12_551  [key=0, style=solid];
m12_550 -> m12_474  [key=2, style=dotted];
m12_550 -> m12_554  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m12_554 -> m12_539  [key=0, style=solid];
m12_554 -> m12_273  [key=2, style=dotted];
m12_557 -> m12_558  [key=0, style=solid];
m12_557 -> m12_454  [key=2, style=dotted];
m12_558 -> m12_559  [key=0, style=solid];
m12_558 -> m12_474  [key=2, style=dotted];
m12_558 -> m12_567  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m12_559 -> m12_560  [key=0, style=solid];
m12_559 -> m12_280  [key=2, style=dotted];
m12_559 -> m12_567  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m12_562 -> m12_563  [key=0, style=solid];
m12_562 -> m12_564  [key=0, style=solid];
m12_562 -> m12_507  [key=2, style=dotted];
m12_566 -> m12_567  [key=0, style=solid];
m12_566 -> m12_273  [key=2, style=dotted];
m12_572 -> m12_574  [key=0, style=solid];
m12_572 -> m12_450  [key=2, style=dotted];
m12_536 -> m12_537  [key=0, style=solid];
m12_536 -> m12_539  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
m12_536 -> m12_342  [color=darkorchid, key=3, label="Local variable bool finishedAttributes", style=bold];
m12_551 -> m12_552  [key=0, style=solid];
m12_551 -> m12_348  [key=2, style=dotted];
m12_565 -> m12_566  [key=0, style=solid];
m12_565 -> m12_348  [key=2, style=dotted];
m12_567 -> m12_539  [key=0, style=solid];
m12_567 -> m12_348  [key=2, style=dotted];
m12_573 -> m12_574  [key=0, style=solid];
m12_537 -> m12_538  [key=0, style=solid];
m12_537 -> m12_539  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m12_537 -> m12_342  [color=darkorchid, key=3, label="Local variable bool finishedElement", style=bold];
m12_541 -> m12_542  [key=0, style=solid];
m12_570 -> m12_571  [key=0, style=solid];
m12_543 -> m12_544  [key=0, style=solid];
m12_544 -> m12_545  [key=0, style=solid];
m12_544 -> m12_569  [key=0, style=solid];
m12_544 -> m12_281  [key=2, style=dotted];
m12_545 -> m12_546  [key=0, style=solid];
m12_548 -> m12_549  [key=0, style=solid];
m12_548 -> m12_575  [key=2, style=dotted];
m12_548 -> m12_548  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_548 -> m12_551  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_548 -> m12_553  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_548 -> m12_556  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_569 -> m12_539  [key=0, style=solid];
m12_546 -> m12_547  [key=0, style=solid];
m12_546 -> m12_555  [key=0, style=solid];
m12_546 -> m12_568  [key=0, style=solid];
m12_547 -> m12_548  [key=0, style=solid];
m12_555 -> m12_556  [key=0, style=solid];
m12_568 -> m12_539  [key=0, style=solid];
m12_553 -> m12_554  [key=0, style=solid];
m12_553 -> m12_539  [key=0, style=solid];
m12_553 -> m12_576  [key=2, style=dotted];
m12_556 -> m12_557  [key=0, style=solid];
m12_556 -> m12_575  [key=2, style=dotted];
m12_556 -> m12_556  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_556 -> m12_567  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m12_552 -> m12_553  [key=0, style=solid];
m12_560 -> m12_561  [key=0, style=solid];
m12_560 -> m12_567  [key=0, style=solid];
m12_561 -> m12_562  [key=0, style=solid];
m12_561 -> m12_563  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_561 -> m12_564  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_563 -> m12_562  [key=0, style=solid];
m12_563 -> m12_577  [key=2, style=dotted];
m12_563 -> m12_563  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_563 -> m12_564  [color=darkseagreen4, key=1, label=i, style=dashed];
m12_564 -> m12_565  [key=0, style=solid];
m12_564 -> m12_566  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m12_564 -> m12_567  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m12_571 -> m12_539  [key=0, style=solid];
m12_574 -> m12_504  [color=blue, key=0, style=bold];
m12_455 -> m12_601  [key=0, style=solid];
m12_455 -> m12_603  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_455 -> m12_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_455 -> m12_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m12_455 -> m12_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m12_455 -> m12_419  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m12_455 -> m12_453  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_455 -> m12_421  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m12_455 -> m12_420  [color=darkorchid, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m12_455 -> m12_422  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m12_455 -> m12_481  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m12_601 -> m12_602  [key=0, style=solid];
m12_601 -> m12_616  [key=0, style=solid];
m12_601 -> m12_620  [key=0, style=solid];
m12_601 -> m12_622  [key=0, style=solid];
m12_601 -> m12_625  [key=0, style=solid];
m12_603 -> m12_604  [key=0, style=solid];
m12_603 -> m12_605  [key=0, style=solid];
m12_605 -> m12_606  [key=0, style=solid];
m12_605 -> m12_474  [key=2, style=dotted];
m12_605 -> m12_610  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m12_605 -> m12_613  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m12_605 -> m12_629  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m12_605 -> m12_615  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m12_606 -> m12_607  [key=0, style=solid];
m12_606 -> m12_454  [key=2, style=dotted];
m12_607 -> m12_608  [key=0, style=solid];
m12_607 -> m12_615  [key=0, style=solid];
m12_609 -> m12_610  [key=0, style=solid];
m12_609 -> m12_612  [key=0, style=solid];
m12_609 -> m12_454  [key=2, style=dotted];
m12_610 -> m12_611  [key=0, style=solid];
m12_610 -> m12_457  [key=2, style=dotted];
m12_613 -> m12_614  [key=0, style=solid];
m12_613 -> m12_525  [key=2, style=dotted];
m12_613 -> m12_526  [key=2, style=dotted];
m12_613 -> m12_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_614 -> m12_626  [key=0, style=solid];
m12_614 -> m12_524  [key=2, style=dotted];
m12_615 -> m12_626  [key=0, style=solid];
m12_615 -> m12_457  [key=2, style=dotted];
m12_617 -> m12_618  [key=0, style=solid];
m12_617 -> m12_474  [key=2, style=dotted];
m12_617 -> m12_619  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m12_618 -> m12_619  [key=0, style=solid];
m12_618 -> m12_626  [key=0, style=solid];
m12_618 -> m12_454  [key=2, style=dotted];
m12_619 -> m12_618  [key=0, style=solid];
m12_619 -> m12_457  [key=2, style=dotted];
m12_621 -> m12_626  [key=0, style=solid];
m12_621 -> m12_90  [key=2, style=dotted];
m12_621 -> m12_116  [key=2, style=dotted];
m12_625 -> m12_627  [key=0, style=solid];
m12_625 -> m12_450  [key=2, style=dotted];
m12_626 -> m12_455  [key=0, style=solid];
m12_626 -> m12_627  [key=0, style=solid];
m12_626 -> m12_454  [key=2, style=dotted];
m12_602 -> m12_603  [key=0, style=solid];
m12_616 -> m12_617  [key=0, style=solid];
m12_620 -> m12_621  [key=0, style=solid];
m12_622 -> m12_623  [key=0, style=solid];
m12_604 -> m12_627  [key=0, style=solid];
m12_604 -> m12_450  [key=2, style=dotted];
m12_608 -> m12_609  [key=0, style=solid];
m12_608 -> m12_611  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_608 -> m12_612  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_608 -> m12_319  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m12_611 -> m12_609  [key=0, style=solid];
m12_611 -> m12_611  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_611 -> m12_612  [color=darkseagreen4, key=1, label=count, style=dashed];
m12_612 -> m12_613  [key=0, style=solid];
m12_612 -> m12_626  [key=0, style=solid];
m12_623 -> m12_624  [key=0, style=solid];
m12_624 -> m12_627  [key=0, style=solid];
m12_627 -> m12_455  [color=blue, key=0, style=bold];
m12_656 -> m12_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_656 -> m12_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m12_657 -> m12_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m12_657 -> m12_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m12_657 -> m12_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m12_658 -> m12_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", style=dashed];
m12_659 -> m12_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m12_659 -> m12_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m12_659 -> m12_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m12_659 -> m12_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m12_660 -> m12_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDeclarationWrapper", style=dashed];
m12_661 -> m12_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m12_661 -> m12_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m12_662 -> m12_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m12_662 -> m12_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m12_663 -> m12_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XObjectWrapper", style=dashed];
m12_664 -> m12_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m12_664 -> m12_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m12_665 -> m12_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_357  [color=red, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_665 -> m12_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m12_666 -> m12_417  [color=red, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m12_667 -> m12_528  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_668 -> m12_629  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m13_651 -> m13_652  [key=0, style=solid];
m13_652 -> m13_653  [key=0, style=solid];
m13_652 -> m13_8  [key=2, style=dotted];
m13_652 -> m13_9  [key=2, style=dotted];
m13_652 -> m13_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_653 -> m13_654  [key=0, style=solid];
m13_653 -> m13_57  [key=2, style=dotted];
m13_653 -> m13_655  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_654 -> m13_651  [color=blue, key=0, style=bold];
m13_101 -> m13_102  [key=0, style=solid];
m13_102 -> m13_103  [key=0, style=solid];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_8  [key=2, style=dotted];
m13_103 -> m13_9  [key=2, style=dotted];
m13_103 -> m13_105  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_106  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_107  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_108  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_109  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_110  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_111  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_112  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_103 -> m13_113  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_104 -> m13_105  [key=0, style=solid];
m13_104 -> m13_10  [key=2, style=dotted];
m13_104 -> m13_19  [key=2, style=dotted];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_11  [key=2, style=dotted];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_10  [key=2, style=dotted];
m13_106 -> m13_19  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_11  [key=2, style=dotted];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_10  [key=2, style=dotted];
m13_108 -> m13_19  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_11  [key=2, style=dotted];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_11  [key=2, style=dotted];
m13_111 -> m13_112  [key=0, style=solid];
m13_111 -> m13_10  [key=2, style=dotted];
m13_111 -> m13_19  [key=2, style=dotted];
m13_112 -> m13_113  [key=0, style=solid];
m13_112 -> m13_11  [key=2, style=dotted];
m13_113 -> m13_114  [key=0, style=solid];
m13_113 -> m13_10  [key=2, style=dotted];
m13_113 -> m13_43  [key=2, style=dotted];
m13_114 -> m13_101  [color=blue, key=0, style=bold];
m13_967 -> m13_968  [key=0, style=solid];
m13_968 -> m13_969  [key=0, style=solid];
m13_969 -> m13_970  [key=0, style=solid];
m13_969 -> m13_9  [key=2, style=dotted];
m13_970 -> m13_971  [key=0, style=solid];
m13_970 -> m13_8  [key=2, style=dotted];
m13_970 -> m13_972  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_973  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_974  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_975  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_976  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_977  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_978  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_979  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_980  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_981  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_970 -> m13_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_971 -> m13_972  [key=0, style=solid];
m13_971 -> m13_264  [key=2, style=dotted];
m13_972 -> m13_973  [key=0, style=solid];
m13_972 -> m13_11  [key=2, style=dotted];
m13_973 -> m13_974  [key=0, style=solid];
m13_973 -> m13_264  [key=2, style=dotted];
m13_974 -> m13_975  [key=0, style=solid];
m13_974 -> m13_11  [key=2, style=dotted];
m13_975 -> m13_976  [key=0, style=solid];
m13_975 -> m13_11  [key=2, style=dotted];
m13_976 -> m13_977  [key=0, style=solid];
m13_976 -> m13_264  [key=2, style=dotted];
m13_977 -> m13_978  [key=0, style=solid];
m13_977 -> m13_11  [key=2, style=dotted];
m13_978 -> m13_979  [key=0, style=solid];
m13_978 -> m13_11  [key=2, style=dotted];
m13_979 -> m13_980  [key=0, style=solid];
m13_979 -> m13_264  [key=2, style=dotted];
m13_980 -> m13_981  [key=0, style=solid];
m13_980 -> m13_11  [key=2, style=dotted];
m13_981 -> m13_982  [key=0, style=solid];
m13_981 -> m13_11  [key=2, style=dotted];
m13_982 -> m13_983  [key=0, style=solid];
m13_982 -> m13_264  [key=2, style=dotted];
m13_983 -> m13_984  [key=0, style=solid];
m13_983 -> m13_11  [key=2, style=dotted];
m13_984 -> m13_967  [color=blue, key=0, style=bold];
m13_1334 -> m13_1335  [key=0, style=solid];
m13_1335 -> m13_1336  [key=0, style=solid];
m13_1336 -> m13_1337  [key=0, style=solid];
m13_1336 -> m13_8  [key=2, style=dotted];
m13_1336 -> m13_9  [key=2, style=dotted];
m13_1336 -> m13_1338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1336 -> m13_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1337 -> m13_1338  [key=0, style=solid];
m13_1337 -> m13_10  [key=2, style=dotted];
m13_1337 -> m13_19  [key=2, style=dotted];
m13_1338 -> m13_1339  [key=0, style=solid];
m13_1338 -> m13_11  [key=2, style=dotted];
m13_1339 -> m13_1340  [key=0, style=solid];
m13_1339 -> m13_10  [key=2, style=dotted];
m13_1339 -> m13_19  [key=2, style=dotted];
m13_1340 -> m13_1341  [key=0, style=solid];
m13_1340 -> m13_11  [key=2, style=dotted];
m13_1341 -> m13_1342  [key=0, style=solid];
m13_1341 -> m13_1190  [key=2, style=dotted];
m13_1342 -> m13_1343  [key=0, style=solid];
m13_1342 -> m13_11  [key=2, style=dotted];
m13_1343 -> m13_1344  [key=0, style=solid];
m13_1343 -> m13_11  [key=2, style=dotted];
m13_1344 -> m13_1345  [key=0, style=solid];
m13_1344 -> m13_1275  [key=2, style=dotted];
m13_1344 -> m13_1348  [key=2, style=dotted];
m13_1344 -> m13_11  [key=2, style=dotted];
m13_1345 -> m13_1346  [key=0, style=solid];
m13_1345 -> m13_10  [key=2, style=dotted];
m13_1345 -> m13_19  [key=2, style=dotted];
m13_1346 -> m13_1347  [key=0, style=solid];
m13_1346 -> m13_11  [key=2, style=dotted];
m13_1347 -> m13_1334  [color=blue, key=0, style=bold];
m13_684 -> m13_685  [key=0, style=solid];
m13_685 -> m13_686  [key=0, style=solid];
m13_685 -> m13_688  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m13_685 -> m13_696  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m13_685 -> m13_711  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m13_686 -> m13_687  [key=0, style=solid];
m13_686 -> m13_691  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_688 -> m13_689  [key=0, style=solid];
m13_688 -> m13_9  [key=2, style=dotted];
m13_696 -> m13_697  [key=0, style=solid];
m13_696 -> m13_11  [key=2, style=dotted];
m13_711 -> m13_712  [key=0, style=solid];
m13_711 -> m13_11  [key=2, style=dotted];
m13_687 -> m13_688  [key=0, style=solid];
m13_687 -> m13_690  [color=darkseagreen4, key=1, label=count, style=dashed];
m13_691 -> m13_692  [key=0, style=solid];
m13_691 -> m13_8  [key=2, style=dotted];
m13_691 -> m13_244  [key=2, style=dotted];
m13_691 -> m13_282  [key=2, style=dotted];
m13_691 -> m13_283  [key=2, style=dotted];
m13_691 -> m13_693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_707  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_691 -> m13_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_690 -> m13_689  [key=0, style=solid];
m13_690 -> m13_690  [color=darkseagreen4, key=1, label=count, style=dashed];
m13_689 -> m13_690  [key=0, style=solid];
m13_689 -> m13_691  [key=0, style=solid];
m13_689 -> m13_728  [key=2, style=dotted];
m13_692 -> m13_693  [key=0, style=solid];
m13_692 -> m13_10  [key=2, style=dotted];
m13_692 -> m13_19  [key=2, style=dotted];
m13_693 -> m13_694  [key=0, style=solid];
m13_693 -> m13_11  [key=2, style=dotted];
m13_694 -> m13_695  [key=0, style=solid];
m13_694 -> m13_10  [key=2, style=dotted];
m13_694 -> m13_19  [key=2, style=dotted];
m13_695 -> m13_696  [key=0, style=solid];
m13_695 -> m13_11  [key=2, style=dotted];
m13_697 -> m13_698  [key=0, style=solid];
m13_697 -> m13_10  [key=2, style=dotted];
m13_697 -> m13_19  [key=2, style=dotted];
m13_698 -> m13_699  [key=0, style=solid];
m13_698 -> m13_11  [key=2, style=dotted];
m13_699 -> m13_700  [key=0, style=solid];
m13_699 -> m13_10  [key=2, style=dotted];
m13_699 -> m13_19  [key=2, style=dotted];
m13_700 -> m13_701  [key=0, style=solid];
m13_700 -> m13_11  [key=2, style=dotted];
m13_701 -> m13_702  [key=0, style=solid];
m13_701 -> m13_11  [key=2, style=dotted];
m13_702 -> m13_703  [key=0, style=solid];
m13_702 -> m13_11  [key=2, style=dotted];
m13_703 -> m13_704  [key=0, style=solid];
m13_703 -> m13_10  [key=2, style=dotted];
m13_703 -> m13_19  [key=2, style=dotted];
m13_704 -> m13_705  [key=0, style=solid];
m13_704 -> m13_11  [key=2, style=dotted];
m13_705 -> m13_706  [key=0, style=solid];
m13_705 -> m13_11  [key=2, style=dotted];
m13_706 -> m13_707  [key=0, style=solid];
m13_706 -> m13_10  [key=2, style=dotted];
m13_706 -> m13_19  [key=2, style=dotted];
m13_707 -> m13_708  [key=0, style=solid];
m13_707 -> m13_11  [key=2, style=dotted];
m13_708 -> m13_709  [key=0, style=solid];
m13_708 -> m13_11  [key=2, style=dotted];
m13_709 -> m13_710  [key=0, style=solid];
m13_709 -> m13_10  [key=2, style=dotted];
m13_709 -> m13_19  [key=2, style=dotted];
m13_710 -> m13_711  [key=0, style=solid];
m13_710 -> m13_11  [key=2, style=dotted];
m13_712 -> m13_713  [key=0, style=solid];
m13_712 -> m13_10  [key=2, style=dotted];
m13_712 -> m13_19  [key=2, style=dotted];
m13_713 -> m13_714  [key=0, style=solid];
m13_713 -> m13_11  [key=2, style=dotted];
m13_714 -> m13_715  [key=0, style=solid];
m13_714 -> m13_10  [key=2, style=dotted];
m13_714 -> m13_19  [key=2, style=dotted];
m13_715 -> m13_716  [key=0, style=solid];
m13_715 -> m13_11  [key=2, style=dotted];
m13_716 -> m13_717  [key=0, style=solid];
m13_716 -> m13_10  [key=2, style=dotted];
m13_716 -> m13_19  [key=2, style=dotted];
m13_717 -> m13_718  [key=0, style=solid];
m13_717 -> m13_11  [key=2, style=dotted];
m13_718 -> m13_719  [key=0, style=solid];
m13_718 -> m13_10  [key=2, style=dotted];
m13_718 -> m13_19  [key=2, style=dotted];
m13_719 -> m13_720  [key=0, style=solid];
m13_719 -> m13_11  [key=2, style=dotted];
m13_720 -> m13_721  [key=0, style=solid];
m13_720 -> m13_11  [key=2, style=dotted];
m13_721 -> m13_722  [key=0, style=solid];
m13_721 -> m13_10  [key=2, style=dotted];
m13_721 -> m13_19  [key=2, style=dotted];
m13_722 -> m13_723  [key=0, style=solid];
m13_722 -> m13_11  [key=2, style=dotted];
m13_723 -> m13_724  [key=0, style=solid];
m13_723 -> m13_10  [key=2, style=dotted];
m13_723 -> m13_19  [key=2, style=dotted];
m13_724 -> m13_725  [key=0, style=solid];
m13_724 -> m13_11  [key=2, style=dotted];
m13_725 -> m13_726  [key=0, style=solid];
m13_725 -> m13_10  [key=2, style=dotted];
m13_725 -> m13_19  [key=2, style=dotted];
m13_726 -> m13_727  [key=0, style=solid];
m13_726 -> m13_11  [key=2, style=dotted];
m13_727 -> m13_684  [color=blue, key=0, style=bold];
m13_1633 -> m13_1634  [key=0, style=solid];
m13_1634 -> m13_1635  [key=0, style=solid];
m13_1635 -> m13_1636  [key=0, style=solid];
m13_1635 -> m13_8  [key=2, style=dotted];
m13_1635 -> m13_9  [key=2, style=dotted];
m13_1635 -> m13_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1636 -> m13_1637  [key=0, style=solid];
m13_1636 -> m13_1638  [key=2, style=dotted];
m13_1636 -> m13_1639  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1637 -> m13_1633  [color=blue, key=0, style=bold];
m13_20 -> m13_21  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_38  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_8  [key=2, style=dotted];
m13_22 -> m13_9  [key=2, style=dotted];
m13_22 -> m13_24  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_25  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_26  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_27  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_28  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_29  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_30  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_31  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_32  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_33  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_22 -> m13_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_44  [key=2, style=dotted];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_10  [key=2, style=dotted];
m13_23 -> m13_19  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_11  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_10  [key=2, style=dotted];
m13_25 -> m13_19  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_11  [key=2, style=dotted];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_10  [key=2, style=dotted];
m13_27 -> m13_19  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_11  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_10  [key=2, style=dotted];
m13_29 -> m13_19  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_11  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_10  [key=2, style=dotted];
m13_31 -> m13_19  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_11  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_11  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_42  [key=2, style=dotted];
m13_34 -> m13_11  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_10  [key=2, style=dotted];
m13_35 -> m13_19  [key=2, style=dotted];
m13_35 -> m13_35  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_11  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_10  [key=2, style=dotted];
m13_37 -> m13_43  [key=2, style=dotted];
m13_39 -> m13_40  [key=0, style=solid];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_42  [key=2, style=dotted];
m13_40 -> m13_11  [key=2, style=dotted];
m13_41 -> m13_20  [color=blue, key=0, style=bold];
m13_1382 -> m13_1383  [key=0, style=solid];
m13_1383 -> m13_1384  [key=0, style=solid];
m13_1384 -> m13_1385  [key=0, style=solid];
m13_1384 -> m13_8  [key=2, style=dotted];
m13_1384 -> m13_9  [key=2, style=dotted];
m13_1384 -> m13_1386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1384 -> m13_1392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1385 -> m13_1386  [key=0, style=solid];
m13_1385 -> m13_10  [key=2, style=dotted];
m13_1385 -> m13_19  [key=2, style=dotted];
m13_1386 -> m13_1387  [key=0, style=solid];
m13_1386 -> m13_11  [key=2, style=dotted];
m13_1387 -> m13_1388  [key=0, style=solid];
m13_1387 -> m13_10  [key=2, style=dotted];
m13_1387 -> m13_19  [key=2, style=dotted];
m13_1388 -> m13_1389  [key=0, style=solid];
m13_1388 -> m13_11  [key=2, style=dotted];
m13_1389 -> m13_1390  [key=0, style=solid];
m13_1389 -> m13_130  [key=2, style=dotted];
m13_1390 -> m13_1391  [key=0, style=solid];
m13_1390 -> m13_11  [key=2, style=dotted];
m13_1391 -> m13_1392  [key=0, style=solid];
m13_1391 -> m13_11  [key=2, style=dotted];
m13_1392 -> m13_1393  [key=0, style=solid];
m13_1392 -> m13_11  [key=2, style=dotted];
m13_1393 -> m13_1382  [color=blue, key=0, style=bold];
m13_259 -> m13_260  [key=0, style=solid];
m13_260 -> m13_261  [key=0, style=solid];
m13_260 -> m13_260  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m13_261 -> m13_262  [key=0, style=solid];
m13_261 -> m13_8  [key=2, style=dotted];
m13_261 -> m13_9  [key=2, style=dotted];
m13_262 -> m13_262  [key=0, style=solid];
m13_262 -> m13_263  [key=0, style=solid];
m13_262 -> m13_264  [key=2, style=dotted];
m13_263 -> m13_259  [color=blue, key=0, style=bold];
m13_1891 -> m13_1892  [key=0, style=solid];
m13_1892 -> m13_1893  [key=0, style=solid];
m13_1893 -> m13_1894  [key=0, style=solid];
m13_1893 -> m13_8  [key=2, style=dotted];
m13_1893 -> m13_9  [key=2, style=dotted];
m13_1893 -> m13_1895  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1893 -> m13_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1894 -> m13_1895  [key=0, style=solid];
m13_1894 -> m13_10  [key=2, style=dotted];
m13_1894 -> m13_19  [key=2, style=dotted];
m13_1895 -> m13_1896  [key=0, style=solid];
m13_1895 -> m13_1638  [key=2, style=dotted];
m13_1895 -> m13_1897  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1896 -> m13_1891  [color=blue, key=0, style=bold];
m13_1226 -> m13_1227  [key=0, style=solid];
m13_1227 -> m13_1228  [key=0, style=solid];
m13_1227 -> m13_8  [key=2, style=dotted];
m13_1227 -> m13_9  [key=2, style=dotted];
m13_1227 -> m13_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1228 -> m13_1229  [key=0, style=solid];
m13_1228 -> m13_57  [key=2, style=dotted];
m13_1228 -> m13_1230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1229 -> m13_1226  [color=blue, key=0, style=bold];
m13_2032 -> m13_2033  [key=0, style=solid];
m13_2033 -> m13_2034  [key=0, style=solid];
m13_2033 -> m13_2053  [key=2, style=dotted];
m13_2033 -> m13_9  [key=2, style=dotted];
m13_2033 -> m13_2036  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m13_2033 -> m13_2039  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m13_2033 -> m13_2042  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m13_2033 -> m13_2044  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m13_2033 -> m13_2047  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m13_2033 -> m13_2051  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m13_2034 -> m13_2035  [key=0, style=solid];
m13_2034 -> m13_8  [key=2, style=dotted];
m13_2034 -> m13_2037  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2055  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2038  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2040  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2041  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2043  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2045  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2046  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2048  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2049  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2050  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2034 -> m13_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2036 -> m13_2037  [key=0, style=solid];
m13_2039 -> m13_2040  [key=0, style=solid];
m13_2042 -> m13_2043  [key=0, style=solid];
m13_2044 -> m13_2045  [key=0, style=solid];
m13_2047 -> m13_2048  [key=0, style=solid];
m13_2051 -> m13_2052  [key=0, style=solid];
m13_2035 -> m13_2036  [key=0, style=solid];
m13_2035 -> m13_10  [key=2, style=dotted];
m13_2035 -> m13_19  [key=2, style=dotted];
m13_2037 -> m13_2038  [key=0, style=solid];
m13_2037 -> m13_57  [key=2, style=dotted];
m13_2037 -> m13_2054  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2038 -> m13_2039  [key=0, style=solid];
m13_2038 -> m13_57  [key=2, style=dotted];
m13_2038 -> m13_2057  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2040 -> m13_2041  [key=0, style=solid];
m13_2040 -> m13_10  [key=2, style=dotted];
m13_2040 -> m13_19  [key=2, style=dotted];
m13_2041 -> m13_2042  [key=0, style=solid];
m13_2041 -> m13_11  [key=2, style=dotted];
m13_2043 -> m13_2044  [key=0, style=solid];
m13_2043 -> m13_57  [key=2, style=dotted];
m13_2043 -> m13_2060  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2045 -> m13_2046  [key=0, style=solid];
m13_2045 -> m13_10  [key=2, style=dotted];
m13_2045 -> m13_19  [key=2, style=dotted];
m13_2046 -> m13_2047  [key=0, style=solid];
m13_2046 -> m13_11  [key=2, style=dotted];
m13_2048 -> m13_2049  [key=0, style=solid];
m13_2048 -> m13_57  [key=2, style=dotted];
m13_2048 -> m13_2063  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2049 -> m13_2050  [key=0, style=solid];
m13_2049 -> m13_57  [key=2, style=dotted];
m13_2049 -> m13_2066  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2050 -> m13_2051  [key=0, style=solid];
m13_2050 -> m13_57  [key=2, style=dotted];
m13_2050 -> m13_2069  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2052 -> m13_2032  [color=blue, key=0, style=bold];
m13_644 -> m13_645  [key=0, style=solid];
m13_645 -> m13_646  [key=0, style=solid];
m13_645 -> m13_8  [key=2, style=dotted];
m13_645 -> m13_9  [key=2, style=dotted];
m13_645 -> m13_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_646 -> m13_647  [key=0, style=solid];
m13_646 -> m13_57  [key=2, style=dotted];
m13_646 -> m13_648  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_647 -> m13_644  [color=blue, key=0, style=bold];
m13_1139 -> m13_1140  [key=0, style=solid];
m13_1140 -> m13_1141  [key=0, style=solid];
m13_1140 -> m13_9  [key=2, style=dotted];
m13_1141 -> m13_1142  [key=0, style=solid];
m13_1141 -> m13_8  [key=2, style=dotted];
m13_1141 -> m13_1143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1145  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1146  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1147  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1150  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1151  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1152  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1153  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1154  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1155  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1156  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1157  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1141 -> m13_1158  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1142 -> m13_1143  [key=0, style=solid];
m13_1142 -> m13_10  [key=2, style=dotted];
m13_1142 -> m13_19  [key=2, style=dotted];
m13_1143 -> m13_1144  [key=0, style=solid];
m13_1143 -> m13_11  [key=2, style=dotted];
m13_1144 -> m13_1145  [key=0, style=solid];
m13_1144 -> m13_61  [key=2, style=dotted];
m13_1145 -> m13_1146  [key=0, style=solid];
m13_1145 -> m13_11  [key=2, style=dotted];
m13_1146 -> m13_1147  [key=0, style=solid];
m13_1146 -> m13_11  [key=2, style=dotted];
m13_1147 -> m13_1148  [key=0, style=solid];
m13_1147 -> m13_11  [key=2, style=dotted];
m13_1148 -> m13_1149  [key=0, style=solid];
m13_1148 -> m13_61  [key=2, style=dotted];
m13_1149 -> m13_1150  [key=0, style=solid];
m13_1149 -> m13_11  [key=2, style=dotted];
m13_1150 -> m13_1151  [key=0, style=solid];
m13_1150 -> m13_11  [key=2, style=dotted];
m13_1151 -> m13_1152  [key=0, style=solid];
m13_1151 -> m13_11  [key=2, style=dotted];
m13_1152 -> m13_1153  [key=0, style=solid];
m13_1152 -> m13_61  [key=2, style=dotted];
m13_1153 -> m13_1154  [key=0, style=solid];
m13_1153 -> m13_11  [key=2, style=dotted];
m13_1154 -> m13_1155  [key=0, style=solid];
m13_1154 -> m13_11  [key=2, style=dotted];
m13_1155 -> m13_1156  [key=0, style=solid];
m13_1155 -> m13_11  [key=2, style=dotted];
m13_1156 -> m13_1157  [key=0, style=solid];
m13_1156 -> m13_10  [key=2, style=dotted];
m13_1156 -> m13_19  [key=2, style=dotted];
m13_1157 -> m13_1158  [key=0, style=solid];
m13_1157 -> m13_11  [key=2, style=dotted];
m13_1158 -> m13_1159  [key=0, style=solid];
m13_1158 -> m13_10  [key=2, style=dotted];
m13_1158 -> m13_43  [key=2, style=dotted];
m13_1159 -> m13_1139  [color=blue, key=0, style=bold];
m13_1642 -> m13_1643  [key=0, style=solid];
m13_1643 -> m13_1644  [key=0, style=solid];
m13_1644 -> m13_1645  [key=0, style=solid];
m13_1644 -> m13_8  [key=2, style=dotted];
m13_1644 -> m13_244  [key=2, style=dotted];
m13_1644 -> m13_282  [key=2, style=dotted];
m13_1644 -> m13_283  [key=2, style=dotted];
m13_1644 -> m13_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1658  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1644 -> m13_1663  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1645 -> m13_1646  [key=0, style=solid];
m13_1645 -> m13_10  [key=2, style=dotted];
m13_1645 -> m13_19  [key=2, style=dotted];
m13_1646 -> m13_1647  [key=0, style=solid];
m13_1646 -> m13_11  [key=2, style=dotted];
m13_1647 -> m13_1648  [key=0, style=solid];
m13_1647 -> m13_10  [key=2, style=dotted];
m13_1647 -> m13_19  [key=2, style=dotted];
m13_1648 -> m13_1649  [key=0, style=solid];
m13_1648 -> m13_11  [key=2, style=dotted];
m13_1649 -> m13_1650  [key=0, style=solid];
m13_1649 -> m13_10  [key=2, style=dotted];
m13_1649 -> m13_19  [key=2, style=dotted];
m13_1650 -> m13_1651  [key=0, style=solid];
m13_1650 -> m13_11  [key=2, style=dotted];
m13_1651 -> m13_1652  [key=0, style=solid];
m13_1651 -> m13_10  [key=2, style=dotted];
m13_1651 -> m13_19  [key=2, style=dotted];
m13_1652 -> m13_1653  [key=0, style=solid];
m13_1652 -> m13_11  [key=2, style=dotted];
m13_1653 -> m13_1654  [key=0, style=solid];
m13_1653 -> m13_10  [key=2, style=dotted];
m13_1653 -> m13_19  [key=2, style=dotted];
m13_1654 -> m13_1655  [key=0, style=solid];
m13_1654 -> m13_11  [key=2, style=dotted];
m13_1655 -> m13_1656  [key=0, style=solid];
m13_1655 -> m13_10  [key=2, style=dotted];
m13_1655 -> m13_19  [key=2, style=dotted];
m13_1656 -> m13_1657  [key=0, style=solid];
m13_1656 -> m13_11  [key=2, style=dotted];
m13_1657 -> m13_1658  [key=0, style=solid];
m13_1657 -> m13_10  [key=2, style=dotted];
m13_1657 -> m13_19  [key=2, style=dotted];
m13_1658 -> m13_1659  [key=0, style=solid];
m13_1658 -> m13_11  [key=2, style=dotted];
m13_1659 -> m13_1660  [key=0, style=solid];
m13_1659 -> m13_10  [key=2, style=dotted];
m13_1659 -> m13_19  [key=2, style=dotted];
m13_1660 -> m13_1661  [key=0, style=solid];
m13_1660 -> m13_11  [key=2, style=dotted];
m13_1661 -> m13_1662  [key=0, style=solid];
m13_1661 -> m13_10  [key=2, style=dotted];
m13_1661 -> m13_19  [key=2, style=dotted];
m13_1662 -> m13_1663  [key=0, style=solid];
m13_1662 -> m13_11  [key=2, style=dotted];
m13_1663 -> m13_1664  [key=0, style=solid];
m13_1663 -> m13_10  [key=2, style=dotted];
m13_1663 -> m13_43  [key=2, style=dotted];
m13_1664 -> m13_1642  [color=blue, key=0, style=bold];
m13_2053 -> m13_2098  [key=0, style=solid];
m13_2098 -> m13_2099  [key=0, style=solid];
m13_2099 -> m13_2053  [color=blue, key=0, style=bold];
m13_560 -> m13_561  [key=0, style=solid];
m13_561 -> m13_562  [key=0, style=solid];
m13_561 -> m13_567  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_562 -> m13_563  [key=0, style=solid];
m13_562 -> m13_8  [key=2, style=dotted];
m13_562 -> m13_9  [key=2, style=dotted];
m13_562 -> m13_571  [key=2, style=dotted];
m13_562 -> m13_564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_562 -> m13_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_567 -> m13_568  [key=0, style=solid];
m13_567 -> m13_573  [color=darkseagreen4, key=1, label=total, style=dashed];
m13_563 -> m13_564  [key=0, style=solid];
m13_563 -> m13_10  [key=2, style=dotted];
m13_564 -> m13_565  [key=0, style=solid];
m13_564 -> m13_11  [key=2, style=dotted];
m13_568 -> m13_569  [key=0, style=solid];
m13_568 -> m13_57  [key=2, style=dotted];
m13_568 -> m13_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_565 -> m13_566  [key=0, style=solid];
m13_565 -> m13_567  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_565 -> m13_569  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_566 -> m13_567  [key=0, style=solid];
m13_566 -> m13_570  [key=0, style=solid];
m13_569 -> m13_566  [key=0, style=solid];
m13_569 -> m13_569  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_570 -> m13_560  [color=blue, key=0, style=bold];
m13_265 -> m13_266  [key=0, style=solid];
m13_266 -> m13_267  [key=0, style=solid];
m13_267 -> m13_268  [key=0, style=solid];
m13_267 -> m13_8  [key=2, style=dotted];
m13_267 -> m13_244  [key=2, style=dotted];
m13_267 -> m13_282  [key=2, style=dotted];
m13_267 -> m13_283  [key=2, style=dotted];
m13_267 -> m13_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_267 -> m13_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_268 -> m13_269  [key=0, style=solid];
m13_268 -> m13_264  [key=2, style=dotted];
m13_268 -> m13_19  [key=2, style=dotted];
m13_269 -> m13_270  [key=0, style=solid];
m13_269 -> m13_264  [key=2, style=dotted];
m13_269 -> m13_19  [key=2, style=dotted];
m13_270 -> m13_271  [key=0, style=solid];
m13_270 -> m13_264  [key=2, style=dotted];
m13_270 -> m13_19  [key=2, style=dotted];
m13_270 -> m13_270  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m13_271 -> m13_272  [key=0, style=solid];
m13_271 -> m13_11  [key=2, style=dotted];
m13_272 -> m13_273  [key=0, style=solid];
m13_272 -> m13_11  [key=2, style=dotted];
m13_273 -> m13_274  [key=0, style=solid];
m13_273 -> m13_264  [key=2, style=dotted];
m13_273 -> m13_19  [key=2, style=dotted];
m13_273 -> m13_273  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_274 -> m13_275  [key=0, style=solid];
m13_274 -> m13_11  [key=2, style=dotted];
m13_275 -> m13_276  [key=0, style=solid];
m13_275 -> m13_264  [key=2, style=dotted];
m13_275 -> m13_19  [key=2, style=dotted];
m13_276 -> m13_277  [key=0, style=solid];
m13_276 -> m13_11  [key=2, style=dotted];
m13_277 -> m13_278  [key=0, style=solid];
m13_277 -> m13_264  [key=2, style=dotted];
m13_277 -> m13_19  [key=2, style=dotted];
m13_278 -> m13_279  [key=0, style=solid];
m13_278 -> m13_11  [key=2, style=dotted];
m13_279 -> m13_280  [key=0, style=solid];
m13_279 -> m13_264  [key=2, style=dotted];
m13_279 -> m13_19  [key=2, style=dotted];
m13_280 -> m13_281  [key=0, style=solid];
m13_280 -> m13_11  [key=2, style=dotted];
m13_281 -> m13_265  [color=blue, key=0, style=bold];
m13_676 -> m13_677  [key=0, style=solid];
m13_677 -> m13_678  [key=0, style=solid];
m13_677 -> m13_8  [key=2, style=dotted];
m13_677 -> m13_9  [key=2, style=dotted];
m13_677 -> m13_679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_677 -> m13_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_678 -> m13_679  [key=0, style=solid];
m13_678 -> m13_264  [key=2, style=dotted];
m13_678 -> m13_19  [key=2, style=dotted];
m13_679 -> m13_680  [key=0, style=solid];
m13_679 -> m13_57  [key=2, style=dotted];
m13_679 -> m13_681  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_680 -> m13_676  [color=blue, key=0, style=bold];
m13_985 -> m13_986  [key=0, style=solid];
m13_986 -> m13_987  [key=0, style=solid];
m13_987 -> m13_988  [key=0, style=solid];
m13_987 -> m13_491  [key=2, style=dotted];
m13_988 -> m13_989  [key=0, style=solid];
m13_988 -> m13_8  [key=2, style=dotted];
m13_988 -> m13_9  [key=2, style=dotted];
m13_988 -> m13_990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_988 -> m13_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_989 -> m13_990  [key=0, style=solid];
m13_989 -> m13_10  [key=2, style=dotted];
m13_990 -> m13_991  [key=0, style=solid];
m13_990 -> m13_11  [key=2, style=dotted];
m13_991 -> m13_992  [key=0, style=solid];
m13_991 -> m13_10  [key=2, style=dotted];
m13_992 -> m13_993  [key=0, style=solid];
m13_992 -> m13_11  [key=2, style=dotted];
m13_993 -> m13_994  [key=0, style=solid];
m13_993 -> m13_11  [key=2, style=dotted];
m13_994 -> m13_995  [key=0, style=solid];
m13_994 -> m13_219  [key=2, style=dotted];
m13_994 -> m13_11  [key=2, style=dotted];
m13_995 -> m13_996  [key=0, style=solid];
m13_995 -> m13_10  [key=2, style=dotted];
m13_995 -> m13_19  [key=2, style=dotted];
m13_996 -> m13_997  [key=0, style=solid];
m13_996 -> m13_11  [key=2, style=dotted];
m13_997 -> m13_998  [key=0, style=solid];
m13_997 -> m13_10  [key=2, style=dotted];
m13_997 -> m13_43  [key=2, style=dotted];
m13_998 -> m13_999  [key=0, style=solid];
m13_998 -> m13_11  [key=2, style=dotted];
m13_999 -> m13_985  [color=blue, key=0, style=bold];
m13_2090 -> m13_2091  [key=0, style=solid];
m13_2091 -> m13_2092  [key=0, style=solid];
m13_2091 -> m13_2095  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2092 -> m13_2093  [key=0, style=solid];
m13_2092 -> m13_57  [key=2, style=dotted];
m13_2092 -> m13_2094  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2093 -> m13_2090  [color=blue, key=0, style=bold];
m13_805 -> m13_806  [key=0, style=solid];
m13_806 -> m13_807  [key=0, style=solid];
m13_807 -> m13_808  [key=0, style=solid];
m13_807 -> m13_8  [key=2, style=dotted];
m13_807 -> m13_9  [key=2, style=dotted];
m13_808 -> m13_809  [key=0, style=solid];
m13_808 -> m13_61  [key=2, style=dotted];
m13_808 -> m13_11  [key=2, style=dotted];
m13_809 -> m13_810  [key=0, style=solid];
m13_809 -> m13_8  [key=2, style=dotted];
m13_809 -> m13_9  [key=2, style=dotted];
m13_810 -> m13_811  [key=0, style=solid];
m13_810 -> m13_61  [key=2, style=dotted];
m13_810 -> m13_11  [key=2, style=dotted];
m13_811 -> m13_812  [key=0, style=solid];
m13_811 -> m13_8  [key=2, style=dotted];
m13_811 -> m13_9  [key=2, style=dotted];
m13_812 -> m13_813  [key=0, style=solid];
m13_812 -> m13_61  [key=2, style=dotted];
m13_812 -> m13_11  [key=2, style=dotted];
m13_813 -> m13_814  [key=0, style=solid];
m13_813 -> m13_8  [key=2, style=dotted];
m13_813 -> m13_9  [key=2, style=dotted];
m13_814 -> m13_815  [key=0, style=solid];
m13_814 -> m13_61  [key=2, style=dotted];
m13_814 -> m13_11  [key=2, style=dotted];
m13_815 -> m13_816  [key=0, style=solid];
m13_815 -> m13_8  [key=2, style=dotted];
m13_815 -> m13_9  [key=2, style=dotted];
m13_815 -> m13_832  [key=2, style=dotted];
m13_816 -> m13_817  [key=0, style=solid];
m13_816 -> m13_61  [key=2, style=dotted];
m13_816 -> m13_11  [key=2, style=dotted];
m13_817 -> m13_818  [key=0, style=solid];
m13_817 -> m13_8  [key=2, style=dotted];
m13_817 -> m13_9  [key=2, style=dotted];
m13_817 -> m13_832  [key=2, style=dotted];
m13_818 -> m13_819  [key=0, style=solid];
m13_818 -> m13_61  [key=2, style=dotted];
m13_818 -> m13_11  [key=2, style=dotted];
m13_819 -> m13_820  [key=0, style=solid];
m13_819 -> m13_8  [key=2, style=dotted];
m13_819 -> m13_9  [key=2, style=dotted];
m13_819 -> m13_833  [key=2, style=dotted];
m13_819 -> m13_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_820 -> m13_821  [key=0, style=solid];
m13_820 -> m13_57  [key=2, style=dotted];
m13_820 -> m13_834  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_821 -> m13_822  [key=0, style=solid];
m13_821 -> m13_8  [key=2, style=dotted];
m13_821 -> m13_9  [key=2, style=dotted];
m13_821 -> m13_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_822 -> m13_823  [key=0, style=solid];
m13_822 -> m13_57  [key=2, style=dotted];
m13_822 -> m13_837  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_823 -> m13_824  [key=0, style=solid];
m13_823 -> m13_8  [key=2, style=dotted];
m13_823 -> m13_9  [key=2, style=dotted];
m13_823 -> m13_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_824 -> m13_825  [key=0, style=solid];
m13_824 -> m13_57  [key=2, style=dotted];
m13_824 -> m13_840  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_825 -> m13_826  [key=0, style=solid];
m13_825 -> m13_8  [key=2, style=dotted];
m13_825 -> m13_9  [key=2, style=dotted];
m13_825 -> m13_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_826 -> m13_827  [key=0, style=solid];
m13_826 -> m13_57  [key=2, style=dotted];
m13_826 -> m13_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_827 -> m13_828  [key=0, style=solid];
m13_827 -> m13_8  [key=2, style=dotted];
m13_827 -> m13_9  [key=2, style=dotted];
m13_828 -> m13_829  [key=0, style=solid];
m13_828 -> m13_61  [key=2, style=dotted];
m13_828 -> m13_11  [key=2, style=dotted];
m13_829 -> m13_830  [key=0, style=solid];
m13_829 -> m13_8  [key=2, style=dotted];
m13_829 -> m13_9  [key=2, style=dotted];
m13_829 -> m13_847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_830 -> m13_831  [key=0, style=solid];
m13_830 -> m13_57  [key=2, style=dotted];
m13_830 -> m13_846  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_831 -> m13_805  [color=blue, key=0, style=bold];
m13_1836 -> m13_1837  [key=0, style=solid];
m13_1837 -> m13_1838  [key=0, style=solid];
m13_1837 -> m13_8  [key=2, style=dotted];
m13_1837 -> m13_9  [key=2, style=dotted];
m13_1837 -> m13_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1837 -> m13_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1837 -> m13_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1838 -> m13_1839  [key=0, style=solid];
m13_1838 -> m13_264  [key=2, style=dotted];
m13_1838 -> m13_19  [key=2, style=dotted];
m13_1839 -> m13_1840  [key=0, style=solid];
m13_1839 -> m13_264  [key=2, style=dotted];
m13_1839 -> m13_19  [key=2, style=dotted];
m13_1840 -> m13_1841  [key=0, style=solid];
m13_1840 -> m13_57  [key=2, style=dotted];
m13_1840 -> m13_1842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1841 -> m13_1836  [color=blue, key=0, style=bold];
m13_207 -> m13_208  [key=0, style=solid];
m13_208 -> m13_209  [key=0, style=solid];
m13_209 -> m13_210  [key=0, style=solid];
m13_209 -> m13_8  [key=2, style=dotted];
m13_209 -> m13_9  [key=2, style=dotted];
m13_209 -> m13_211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_209 -> m13_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_209 -> m13_213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_209 -> m13_214  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_210 -> m13_211  [key=0, style=solid];
m13_210 -> m13_10  [key=2, style=dotted];
m13_210 -> m13_19  [key=2, style=dotted];
m13_211 -> m13_212  [key=0, style=solid];
m13_211 -> m13_10  [key=2, style=dotted];
m13_211 -> m13_19  [key=2, style=dotted];
m13_212 -> m13_213  [key=0, style=solid];
m13_212 -> m13_10  [key=2, style=dotted];
m13_212 -> m13_19  [key=2, style=dotted];
m13_213 -> m13_214  [key=0, style=solid];
m13_213 -> m13_11  [key=2, style=dotted];
m13_214 -> m13_215  [key=0, style=solid];
m13_214 -> m13_219  [key=2, style=dotted];
m13_214 -> m13_216  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_215 -> m13_216  [key=0, style=solid];
m13_215 -> m13_11  [key=2, style=dotted];
m13_216 -> m13_217  [key=0, style=solid];
m13_216 -> m13_220  [key=2, style=dotted];
m13_217 -> m13_218  [key=0, style=solid];
m13_217 -> m13_11  [key=2, style=dotted];
m13_218 -> m13_207  [color=blue, key=0, style=bold];
m13_1118 -> m13_1119  [key=0, style=solid];
m13_1119 -> m13_1120  [key=0, style=solid];
m13_1119 -> m13_9  [key=2, style=dotted];
m13_1120 -> m13_1121  [key=0, style=solid];
m13_1120 -> m13_8  [key=2, style=dotted];
m13_1120 -> m13_1122  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1123  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1124  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1125  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1126  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1127  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1128  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1129  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1130  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1132  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1133  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1134  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1120 -> m13_1137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1121 -> m13_1122  [key=0, style=solid];
m13_1121 -> m13_10  [key=2, style=dotted];
m13_1121 -> m13_19  [key=2, style=dotted];
m13_1122 -> m13_1123  [key=0, style=solid];
m13_1122 -> m13_11  [key=2, style=dotted];
m13_1123 -> m13_1124  [key=0, style=solid];
m13_1123 -> m13_10  [key=2, style=dotted];
m13_1124 -> m13_1125  [key=0, style=solid];
m13_1124 -> m13_11  [key=2, style=dotted];
m13_1125 -> m13_1126  [key=0, style=solid];
m13_1125 -> m13_11  [key=2, style=dotted];
m13_1126 -> m13_1127  [key=0, style=solid];
m13_1126 -> m13_11  [key=2, style=dotted];
m13_1127 -> m13_1128  [key=0, style=solid];
m13_1127 -> m13_10  [key=2, style=dotted];
m13_1128 -> m13_1129  [key=0, style=solid];
m13_1128 -> m13_11  [key=2, style=dotted];
m13_1129 -> m13_1130  [key=0, style=solid];
m13_1129 -> m13_11  [key=2, style=dotted];
m13_1130 -> m13_1131  [key=0, style=solid];
m13_1130 -> m13_11  [key=2, style=dotted];
m13_1131 -> m13_1132  [key=0, style=solid];
m13_1131 -> m13_10  [key=2, style=dotted];
m13_1132 -> m13_1133  [key=0, style=solid];
m13_1132 -> m13_11  [key=2, style=dotted];
m13_1133 -> m13_1134  [key=0, style=solid];
m13_1133 -> m13_11  [key=2, style=dotted];
m13_1134 -> m13_1135  [key=0, style=solid];
m13_1134 -> m13_11  [key=2, style=dotted];
m13_1135 -> m13_1136  [key=0, style=solid];
m13_1135 -> m13_10  [key=2, style=dotted];
m13_1135 -> m13_19  [key=2, style=dotted];
m13_1136 -> m13_1137  [key=0, style=solid];
m13_1136 -> m13_11  [key=2, style=dotted];
m13_1137 -> m13_1138  [key=0, style=solid];
m13_1137 -> m13_10  [key=2, style=dotted];
m13_1137 -> m13_43  [key=2, style=dotted];
m13_1138 -> m13_1118  [color=blue, key=0, style=bold];
m13_1168 -> m13_1169  [key=0, style=solid];
m13_1169 -> m13_1170  [key=0, style=solid];
m13_1169 -> m13_8  [key=2, style=dotted];
m13_1169 -> m13_9  [key=2, style=dotted];
m13_1169 -> m13_1171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1170 -> m13_1171  [key=0, style=solid];
m13_1170 -> m13_130  [key=2, style=dotted];
m13_1170 -> m13_675  [key=2, style=dotted];
m13_1171 -> m13_1172  [key=0, style=solid];
m13_1171 -> m13_11  [key=2, style=dotted];
m13_1172 -> m13_1168  [color=blue, key=0, style=bold];
m13_621 -> m13_622  [key=0, style=solid];
m13_621 -> m13_621  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m13_622 -> m13_623  [key=0, style=solid];
m13_623 -> m13_624  [key=0, style=solid];
m13_623 -> m13_8  [key=2, style=dotted];
m13_623 -> m13_9  [key=2, style=dotted];
m13_623 -> m13_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_623 -> m13_628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_623 -> m13_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_623 -> m13_630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_624 -> m13_625  [key=0, style=solid];
m13_624 -> m13_627  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_626 -> m13_627  [key=0, style=solid];
m13_626 -> m13_10  [key=2, style=dotted];
m13_626 -> m13_19  [key=2, style=dotted];
m13_628 -> m13_629  [key=0, style=solid];
m13_628 -> m13_10  [key=2, style=dotted];
m13_628 -> m13_19  [key=2, style=dotted];
m13_629 -> m13_630  [key=0, style=solid];
m13_629 -> m13_11  [key=2, style=dotted];
m13_630 -> m13_631  [key=0, style=solid];
m13_630 -> m13_11  [key=2, style=dotted];
m13_625 -> m13_626  [key=0, style=solid];
m13_625 -> m13_628  [key=0, style=solid];
m13_627 -> m13_625  [key=0, style=solid];
m13_627 -> m13_627  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_631 -> m13_621  [color=blue, key=0, style=bold];
m13_1014 -> m13_1015  [key=0, style=solid];
m13_1015 -> m13_1016  [key=0, style=solid];
m13_1016 -> m13_1017  [key=0, style=solid];
m13_1016 -> m13_8  [key=2, style=dotted];
m13_1016 -> m13_9  [key=2, style=dotted];
m13_1016 -> m13_1018  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1019  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1020  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1037  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1038  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1039  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1040  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1041  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1042  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1043  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1044  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1045  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1046  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1047  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1048  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1049  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1050  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1051  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1052  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1053  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1054  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1055  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1056  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1057  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1058  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1059  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1060  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1061  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1062  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1063  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1064  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1065  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1066  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1067  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1068  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1069  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1070  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1071  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1072  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1073  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1016 -> m13_1074  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1017 -> m13_1018  [key=0, style=solid];
m13_1017 -> m13_264  [key=2, style=dotted];
m13_1018 -> m13_1019  [key=0, style=solid];
m13_1018 -> m13_11  [key=2, style=dotted];
m13_1019 -> m13_1020  [key=0, style=solid];
m13_1019 -> m13_264  [key=2, style=dotted];
m13_1020 -> m13_1021  [key=0, style=solid];
m13_1020 -> m13_11  [key=2, style=dotted];
m13_1021 -> m13_1022  [key=0, style=solid];
m13_1021 -> m13_11  [key=2, style=dotted];
m13_1022 -> m13_1023  [key=0, style=solid];
m13_1022 -> m13_264  [key=2, style=dotted];
m13_1023 -> m13_1024  [key=0, style=solid];
m13_1023 -> m13_11  [key=2, style=dotted];
m13_1024 -> m13_1025  [key=0, style=solid];
m13_1024 -> m13_11  [key=2, style=dotted];
m13_1025 -> m13_1026  [key=0, style=solid];
m13_1025 -> m13_264  [key=2, style=dotted];
m13_1026 -> m13_1027  [key=0, style=solid];
m13_1026 -> m13_11  [key=2, style=dotted];
m13_1027 -> m13_1028  [key=0, style=solid];
m13_1027 -> m13_11  [key=2, style=dotted];
m13_1028 -> m13_1029  [key=0, style=solid];
m13_1028 -> m13_264  [key=2, style=dotted];
m13_1029 -> m13_1030  [key=0, style=solid];
m13_1029 -> m13_11  [key=2, style=dotted];
m13_1030 -> m13_1031  [key=0, style=solid];
m13_1030 -> m13_11  [key=2, style=dotted];
m13_1031 -> m13_1032  [key=0, style=solid];
m13_1031 -> m13_264  [key=2, style=dotted];
m13_1032 -> m13_1033  [key=0, style=solid];
m13_1032 -> m13_11  [key=2, style=dotted];
m13_1033 -> m13_1034  [key=0, style=solid];
m13_1033 -> m13_11  [key=2, style=dotted];
m13_1034 -> m13_1035  [key=0, style=solid];
m13_1034 -> m13_264  [key=2, style=dotted];
m13_1035 -> m13_1036  [key=0, style=solid];
m13_1035 -> m13_11  [key=2, style=dotted];
m13_1036 -> m13_1037  [key=0, style=solid];
m13_1036 -> m13_11  [key=2, style=dotted];
m13_1037 -> m13_1038  [key=0, style=solid];
m13_1037 -> m13_264  [key=2, style=dotted];
m13_1038 -> m13_1039  [key=0, style=solid];
m13_1038 -> m13_11  [key=2, style=dotted];
m13_1039 -> m13_1040  [key=0, style=solid];
m13_1039 -> m13_11  [key=2, style=dotted];
m13_1040 -> m13_1041  [key=0, style=solid];
m13_1040 -> m13_264  [key=2, style=dotted];
m13_1041 -> m13_1042  [key=0, style=solid];
m13_1041 -> m13_11  [key=2, style=dotted];
m13_1042 -> m13_1043  [key=0, style=solid];
m13_1042 -> m13_11  [key=2, style=dotted];
m13_1043 -> m13_1044  [key=0, style=solid];
m13_1043 -> m13_264  [key=2, style=dotted];
m13_1044 -> m13_1045  [key=0, style=solid];
m13_1044 -> m13_11  [key=2, style=dotted];
m13_1045 -> m13_1046  [key=0, style=solid];
m13_1045 -> m13_11  [key=2, style=dotted];
m13_1046 -> m13_1047  [key=0, style=solid];
m13_1046 -> m13_264  [key=2, style=dotted];
m13_1047 -> m13_1048  [key=0, style=solid];
m13_1047 -> m13_11  [key=2, style=dotted];
m13_1048 -> m13_1049  [key=0, style=solid];
m13_1048 -> m13_11  [key=2, style=dotted];
m13_1049 -> m13_1050  [key=0, style=solid];
m13_1049 -> m13_264  [key=2, style=dotted];
m13_1050 -> m13_1051  [key=0, style=solid];
m13_1050 -> m13_11  [key=2, style=dotted];
m13_1051 -> m13_1052  [key=0, style=solid];
m13_1051 -> m13_11  [key=2, style=dotted];
m13_1052 -> m13_1053  [key=0, style=solid];
m13_1052 -> m13_264  [key=2, style=dotted];
m13_1053 -> m13_1054  [key=0, style=solid];
m13_1053 -> m13_11  [key=2, style=dotted];
m13_1054 -> m13_1055  [key=0, style=solid];
m13_1054 -> m13_11  [key=2, style=dotted];
m13_1055 -> m13_1056  [key=0, style=solid];
m13_1055 -> m13_264  [key=2, style=dotted];
m13_1056 -> m13_1057  [key=0, style=solid];
m13_1056 -> m13_11  [key=2, style=dotted];
m13_1057 -> m13_1058  [key=0, style=solid];
m13_1057 -> m13_11  [key=2, style=dotted];
m13_1058 -> m13_1059  [key=0, style=solid];
m13_1058 -> m13_264  [key=2, style=dotted];
m13_1059 -> m13_1060  [key=0, style=solid];
m13_1059 -> m13_11  [key=2, style=dotted];
m13_1060 -> m13_1061  [key=0, style=solid];
m13_1060 -> m13_11  [key=2, style=dotted];
m13_1061 -> m13_1062  [key=0, style=solid];
m13_1061 -> m13_264  [key=2, style=dotted];
m13_1062 -> m13_1063  [key=0, style=solid];
m13_1062 -> m13_11  [key=2, style=dotted];
m13_1063 -> m13_1064  [key=0, style=solid];
m13_1063 -> m13_11  [key=2, style=dotted];
m13_1064 -> m13_1065  [key=0, style=solid];
m13_1064 -> m13_264  [key=2, style=dotted];
m13_1065 -> m13_1066  [key=0, style=solid];
m13_1065 -> m13_11  [key=2, style=dotted];
m13_1066 -> m13_1067  [key=0, style=solid];
m13_1066 -> m13_11  [key=2, style=dotted];
m13_1067 -> m13_1068  [key=0, style=solid];
m13_1067 -> m13_264  [key=2, style=dotted];
m13_1068 -> m13_1069  [key=0, style=solid];
m13_1068 -> m13_11  [key=2, style=dotted];
m13_1069 -> m13_1070  [key=0, style=solid];
m13_1069 -> m13_11  [key=2, style=dotted];
m13_1070 -> m13_1071  [key=0, style=solid];
m13_1070 -> m13_264  [key=2, style=dotted];
m13_1071 -> m13_1072  [key=0, style=solid];
m13_1071 -> m13_11  [key=2, style=dotted];
m13_1072 -> m13_1073  [key=0, style=solid];
m13_1072 -> m13_11  [key=2, style=dotted];
m13_1073 -> m13_1074  [key=0, style=solid];
m13_1073 -> m13_264  [key=2, style=dotted];
m13_1074 -> m13_1075  [key=0, style=solid];
m13_1074 -> m13_11  [key=2, style=dotted];
m13_1075 -> m13_1014  [color=blue, key=0, style=bold];
m13_1366 -> m13_1367  [key=0, style=solid];
m13_1367 -> m13_1368  [key=0, style=solid];
m13_1368 -> m13_1369  [key=0, style=solid];
m13_1368 -> m13_8  [key=2, style=dotted];
m13_1368 -> m13_9  [key=2, style=dotted];
m13_1368 -> m13_1370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1368 -> m13_1380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1369 -> m13_1370  [key=0, style=solid];
m13_1369 -> m13_1365  [key=2, style=dotted];
m13_1370 -> m13_1371  [key=0, style=solid];
m13_1370 -> m13_10  [key=2, style=dotted];
m13_1370 -> m13_19  [key=2, style=dotted];
m13_1371 -> m13_1372  [key=0, style=solid];
m13_1371 -> m13_11  [key=2, style=dotted];
m13_1372 -> m13_1373  [key=0, style=solid];
m13_1372 -> m13_10  [key=2, style=dotted];
m13_1372 -> m13_19  [key=2, style=dotted];
m13_1373 -> m13_1374  [key=0, style=solid];
m13_1373 -> m13_11  [key=2, style=dotted];
m13_1374 -> m13_1375  [key=0, style=solid];
m13_1374 -> m13_1190  [key=2, style=dotted];
m13_1375 -> m13_1376  [key=0, style=solid];
m13_1375 -> m13_11  [key=2, style=dotted];
m13_1376 -> m13_1377  [key=0, style=solid];
m13_1376 -> m13_11  [key=2, style=dotted];
m13_1377 -> m13_1378  [key=0, style=solid];
m13_1379 -> m13_1380  [key=0, style=solid];
m13_1379 -> m13_10  [key=2, style=dotted];
m13_1379 -> m13_19  [key=2, style=dotted];
m13_1380 -> m13_1381  [key=0, style=solid];
m13_1380 -> m13_11  [key=2, style=dotted];
m13_1378 -> m13_1379  [key=0, style=solid];
m13_1378 -> m13_1348  [key=2, style=dotted];
m13_1378 -> m13_11  [key=2, style=dotted];
m13_1378 -> m13_1378  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_1381 -> m13_1366  [color=blue, key=0, style=bold];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_8  [key=2, style=dotted];
m13_64 -> m13_9  [key=2, style=dotted];
m13_64 -> m13_66  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_67  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_68  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_69  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_70  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_71  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_72  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_64 -> m13_73  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_10  [key=2, style=dotted];
m13_65 -> m13_19  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_11  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_57  [key=2, style=dotted];
m13_67 -> m13_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_57  [key=2, style=dotted];
m13_68 -> m13_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_57  [key=2, style=dotted];
m13_69 -> m13_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_57  [key=2, style=dotted];
m13_70 -> m13_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_10  [key=2, style=dotted];
m13_71 -> m13_19  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_11  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_10  [key=2, style=dotted];
m13_73 -> m13_43  [key=2, style=dotted];
m13_74 -> m13_62  [color=blue, key=0, style=bold];
m13_1571 -> m13_1572  [key=0, style=solid];
m13_1572 -> m13_1573  [key=0, style=solid];
m13_1573 -> m13_1574  [key=0, style=solid];
m13_1573 -> m13_8  [key=2, style=dotted];
m13_1573 -> m13_9  [key=2, style=dotted];
m13_1573 -> m13_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1573 -> m13_1576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1574 -> m13_1575  [key=0, style=solid];
m13_1574 -> m13_10  [key=2, style=dotted];
m13_1574 -> m13_19  [key=2, style=dotted];
m13_1575 -> m13_1576  [key=0, style=solid];
m13_1575 -> m13_10  [key=2, style=dotted];
m13_1575 -> m13_19  [key=2, style=dotted];
m13_1576 -> m13_1577  [key=0, style=solid];
m13_1576 -> m13_10  [key=2, style=dotted];
m13_1576 -> m13_43  [key=2, style=dotted];
m13_1577 -> m13_1571  [color=blue, key=0, style=bold];
m13_637 -> m13_638  [key=0, style=solid];
m13_638 -> m13_639  [key=0, style=solid];
m13_638 -> m13_8  [key=2, style=dotted];
m13_638 -> m13_9  [key=2, style=dotted];
m13_638 -> m13_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_639 -> m13_640  [key=0, style=solid];
m13_639 -> m13_57  [key=2, style=dotted];
m13_639 -> m13_641  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_640 -> m13_637  [color=blue, key=0, style=bold];
m13_176 -> m13_177  [key=0, style=solid];
m13_177 -> m13_178  [key=0, style=solid];
m13_178 -> m13_179  [key=0, style=solid];
m13_178 -> m13_8  [key=2, style=dotted];
m13_178 -> m13_9  [key=2, style=dotted];
m13_178 -> m13_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_178 -> m13_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_178 -> m13_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_178 -> m13_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_178 -> m13_178  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_179 -> m13_180  [key=0, style=solid];
m13_180 -> m13_181  [key=0, style=solid];
m13_180 -> m13_10  [key=2, style=dotted];
m13_180 -> m13_19  [key=2, style=dotted];
m13_181 -> m13_182  [key=0, style=solid];
m13_181 -> m13_11  [key=2, style=dotted];
m13_182 -> m13_183  [key=0, style=solid];
m13_182 -> m13_57  [key=2, style=dotted];
m13_182 -> m13_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_183 -> m13_176  [color=blue, key=0, style=bold];
m13_2107 -> m13_2108  [key=0, style=solid];
m13_2107 -> m13_2110  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_2108 -> m13_2109  [key=0, style=solid];
m13_2110 -> m13_2111  [key=0, style=solid];
m13_2109 -> m13_2110  [key=0, style=solid];
m13_2111 -> m13_2107  [color=blue, key=0, style=bold];
m13_519 -> m13_520  [key=0, style=solid];
m13_520 -> m13_521  [key=0, style=solid];
m13_521 -> m13_522  [key=0, style=solid];
m13_521 -> m13_8  [key=2, style=dotted];
m13_521 -> m13_244  [key=2, style=dotted];
m13_521 -> m13_282  [key=2, style=dotted];
m13_521 -> m13_283  [key=2, style=dotted];
m13_521 -> m13_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_521 -> m13_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_522 -> m13_523  [key=0, style=solid];
m13_522 -> m13_10  [key=2, style=dotted];
m13_522 -> m13_19  [key=2, style=dotted];
m13_523 -> m13_524  [key=0, style=solid];
m13_523 -> m13_11  [key=2, style=dotted];
m13_524 -> m13_525  [key=0, style=solid];
m13_524 -> m13_10  [key=2, style=dotted];
m13_524 -> m13_19  [key=2, style=dotted];
m13_525 -> m13_526  [key=0, style=solid];
m13_525 -> m13_11  [key=2, style=dotted];
m13_526 -> m13_527  [key=0, style=solid];
m13_526 -> m13_10  [key=2, style=dotted];
m13_526 -> m13_19  [key=2, style=dotted];
m13_527 -> m13_528  [key=0, style=solid];
m13_527 -> m13_11  [key=2, style=dotted];
m13_528 -> m13_529  [key=0, style=solid];
m13_528 -> m13_10  [key=2, style=dotted];
m13_528 -> m13_19  [key=2, style=dotted];
m13_529 -> m13_530  [key=0, style=solid];
m13_529 -> m13_11  [key=2, style=dotted];
m13_530 -> m13_531  [key=0, style=solid];
m13_530 -> m13_10  [key=2, style=dotted];
m13_530 -> m13_19  [key=2, style=dotted];
m13_531 -> m13_532  [key=0, style=solid];
m13_531 -> m13_11  [key=2, style=dotted];
m13_532 -> m13_533  [key=0, style=solid];
m13_532 -> m13_10  [key=2, style=dotted];
m13_532 -> m13_19  [key=2, style=dotted];
m13_533 -> m13_534  [key=0, style=solid];
m13_533 -> m13_11  [key=2, style=dotted];
m13_534 -> m13_535  [key=0, style=solid];
m13_534 -> m13_10  [key=2, style=dotted];
m13_534 -> m13_19  [key=2, style=dotted];
m13_535 -> m13_536  [key=0, style=solid];
m13_535 -> m13_11  [key=2, style=dotted];
m13_536 -> m13_537  [key=0, style=solid];
m13_536 -> m13_10  [key=2, style=dotted];
m13_536 -> m13_19  [key=2, style=dotted];
m13_537 -> m13_538  [key=0, style=solid];
m13_537 -> m13_11  [key=2, style=dotted];
m13_538 -> m13_539  [key=0, style=solid];
m13_538 -> m13_10  [key=2, style=dotted];
m13_538 -> m13_19  [key=2, style=dotted];
m13_539 -> m13_540  [key=0, style=solid];
m13_539 -> m13_11  [key=2, style=dotted];
m13_540 -> m13_541  [key=0, style=solid];
m13_540 -> m13_10  [key=2, style=dotted];
m13_540 -> m13_19  [key=2, style=dotted];
m13_541 -> m13_542  [key=0, style=solid];
m13_541 -> m13_11  [key=2, style=dotted];
m13_542 -> m13_543  [key=0, style=solid];
m13_542 -> m13_10  [key=2, style=dotted];
m13_542 -> m13_19  [key=2, style=dotted];
m13_543 -> m13_544  [key=0, style=solid];
m13_543 -> m13_11  [key=2, style=dotted];
m13_544 -> m13_545  [key=0, style=solid];
m13_544 -> m13_11  [key=2, style=dotted];
m13_545 -> m13_546  [key=0, style=solid];
m13_545 -> m13_10  [key=2, style=dotted];
m13_545 -> m13_19  [key=2, style=dotted];
m13_546 -> m13_547  [key=0, style=solid];
m13_546 -> m13_11  [key=2, style=dotted];
m13_547 -> m13_548  [key=0, style=solid];
m13_547 -> m13_11  [key=2, style=dotted];
m13_548 -> m13_549  [key=0, style=solid];
m13_548 -> m13_10  [key=2, style=dotted];
m13_548 -> m13_43  [key=2, style=dotted];
m13_549 -> m13_519  [color=blue, key=0, style=bold];
m13_134 -> m13_135  [key=0, style=solid];
m13_135 -> m13_136  [key=0, style=solid];
m13_136 -> m13_137  [key=0, style=solid];
m13_136 -> m13_8  [key=2, style=dotted];
m13_136 -> m13_9  [key=2, style=dotted];
m13_136 -> m13_138  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_139  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_140  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_141  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_142  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_136 -> m13_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_137 -> m13_138  [key=0, style=solid];
m13_137 -> m13_10  [key=2, style=dotted];
m13_137 -> m13_19  [key=2, style=dotted];
m13_138 -> m13_139  [key=0, style=solid];
m13_138 -> m13_11  [key=2, style=dotted];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_10  [key=2, style=dotted];
m13_139 -> m13_19  [key=2, style=dotted];
m13_140 -> m13_141  [key=0, style=solid];
m13_140 -> m13_11  [key=2, style=dotted];
m13_141 -> m13_142  [key=0, style=solid];
m13_141 -> m13_10  [key=2, style=dotted];
m13_141 -> m13_19  [key=2, style=dotted];
m13_142 -> m13_143  [key=0, style=solid];
m13_142 -> m13_11  [key=2, style=dotted];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_10  [key=2, style=dotted];
m13_143 -> m13_19  [key=2, style=dotted];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_11  [key=2, style=dotted];
m13_145 -> m13_146  [key=0, style=solid];
m13_145 -> m13_57  [key=2, style=dotted];
m13_145 -> m13_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_146 -> m13_134  [color=blue, key=0, style=bold];
m13_800 -> m13_801  [key=0, style=solid];
m13_801 -> m13_802  [key=0, style=solid];
m13_802 -> m13_803  [key=0, style=solid];
m13_802 -> m13_8  [key=2, style=dotted];
m13_802 -> m13_9  [key=2, style=dotted];
m13_803 -> m13_803  [key=0, style=solid];
m13_803 -> m13_804  [key=0, style=solid];
m13_803 -> m13_10  [key=2, style=dotted];
m13_804 -> m13_800  [color=blue, key=0, style=bold];
m13_1594 -> m13_1595  [key=0, style=solid];
m13_1595 -> m13_1596  [key=0, style=solid];
m13_1596 -> m13_1597  [key=0, style=solid];
m13_1596 -> m13_8  [key=2, style=dotted];
m13_1596 -> m13_9  [key=2, style=dotted];
m13_1596 -> m13_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1596 -> m13_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1596 -> m13_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1597 -> m13_1598  [key=0, style=solid];
m13_1597 -> m13_10  [key=2, style=dotted];
m13_1597 -> m13_19  [key=2, style=dotted];
m13_1598 -> m13_1599  [key=0, style=solid];
m13_1598 -> m13_10  [key=2, style=dotted];
m13_1598 -> m13_19  [key=2, style=dotted];
m13_1599 -> m13_1600  [key=0, style=solid];
m13_1599 -> m13_10  [key=2, style=dotted];
m13_1599 -> m13_19  [key=2, style=dotted];
m13_1600 -> m13_1601  [key=0, style=solid];
m13_1600 -> m13_10  [key=2, style=dotted];
m13_1600 -> m13_43  [key=2, style=dotted];
m13_1601 -> m13_1594  [color=blue, key=0, style=bold];
m13_1420 -> m13_1421  [key=0, style=solid];
m13_1421 -> m13_1422  [key=0, style=solid];
m13_1421 -> m13_8  [key=2, style=dotted];
m13_1421 -> m13_9  [key=2, style=dotted];
m13_1421 -> m13_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1422 -> m13_1423  [key=0, style=solid];
m13_1422 -> m13_57  [key=2, style=dotted];
m13_1422 -> m13_1424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1423 -> m13_1420  [color=blue, key=0, style=bold];
m13_472 -> m13_473  [key=0, style=solid];
m13_473 -> m13_474  [key=0, style=solid];
m13_473 -> m13_57  [key=2, style=dotted];
m13_473 -> m13_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_474 -> m13_472  [color=blue, key=0, style=bold];
m13_669 -> m13_670  [key=0, style=solid];
m13_670 -> m13_671  [key=0, style=solid];
m13_670 -> m13_8  [key=2, style=dotted];
m13_670 -> m13_9  [key=2, style=dotted];
m13_670 -> m13_672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_670 -> m13_673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_671 -> m13_672  [key=0, style=solid];
m13_671 -> m13_264  [key=2, style=dotted];
m13_671 -> m13_19  [key=2, style=dotted];
m13_672 -> m13_673  [key=0, style=solid];
m13_672 -> m13_658  [key=2, style=dotted];
m13_672 -> m13_675  [key=2, style=dotted];
m13_673 -> m13_674  [key=0, style=solid];
m13_673 -> m13_11  [key=2, style=dotted];
m13_674 -> m13_669  [color=blue, key=0, style=bold];
m13_310 -> m13_311  [key=0, style=solid];
m13_311 -> m13_312  [key=0, style=solid];
m13_312 -> m13_313  [key=0, style=solid];
m13_312 -> m13_8  [key=2, style=dotted];
m13_312 -> m13_9  [key=2, style=dotted];
m13_313 -> m13_313  [key=0, style=solid];
m13_313 -> m13_314  [key=0, style=solid];
m13_313 -> m13_10  [key=2, style=dotted];
m13_314 -> m13_310  [color=blue, key=0, style=bold];
m13_849 -> m13_850  [key=0, style=solid];
m13_850 -> m13_851  [key=0, style=solid];
m13_851 -> m13_852  [key=0, style=solid];
m13_851 -> m13_8  [key=2, style=dotted];
m13_851 -> m13_9  [key=2, style=dotted];
m13_852 -> m13_853  [key=0, style=solid];
m13_852 -> m13_130  [key=2, style=dotted];
m13_852 -> m13_11  [key=2, style=dotted];
m13_853 -> m13_854  [key=0, style=solid];
m13_853 -> m13_8  [key=2, style=dotted];
m13_853 -> m13_9  [key=2, style=dotted];
m13_854 -> m13_855  [key=0, style=solid];
m13_854 -> m13_130  [key=2, style=dotted];
m13_854 -> m13_11  [key=2, style=dotted];
m13_855 -> m13_856  [key=0, style=solid];
m13_855 -> m13_8  [key=2, style=dotted];
m13_855 -> m13_9  [key=2, style=dotted];
m13_856 -> m13_857  [key=0, style=solid];
m13_856 -> m13_130  [key=2, style=dotted];
m13_856 -> m13_11  [key=2, style=dotted];
m13_857 -> m13_858  [key=0, style=solid];
m13_857 -> m13_8  [key=2, style=dotted];
m13_857 -> m13_9  [key=2, style=dotted];
m13_858 -> m13_859  [key=0, style=solid];
m13_858 -> m13_130  [key=2, style=dotted];
m13_858 -> m13_11  [key=2, style=dotted];
m13_859 -> m13_860  [key=0, style=solid];
m13_859 -> m13_8  [key=2, style=dotted];
m13_859 -> m13_9  [key=2, style=dotted];
m13_859 -> m13_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_860 -> m13_861  [key=0, style=solid];
m13_860 -> m13_57  [key=2, style=dotted];
m13_860 -> m13_871  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_861 -> m13_862  [key=0, style=solid];
m13_861 -> m13_8  [key=2, style=dotted];
m13_861 -> m13_9  [key=2, style=dotted];
m13_861 -> m13_863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_861 -> m13_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_862 -> m13_863  [key=0, style=solid];
m13_863 -> m13_864  [key=0, style=solid];
m13_863 -> m13_57  [key=2, style=dotted];
m13_863 -> m13_874  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_864 -> m13_865  [key=0, style=solid];
m13_864 -> m13_8  [key=2, style=dotted];
m13_864 -> m13_9  [key=2, style=dotted];
m13_865 -> m13_866  [key=0, style=solid];
m13_865 -> m13_130  [key=2, style=dotted];
m13_865 -> m13_11  [key=2, style=dotted];
m13_866 -> m13_867  [key=0, style=solid];
m13_866 -> m13_8  [key=2, style=dotted];
m13_866 -> m13_9  [key=2, style=dotted];
m13_867 -> m13_868  [key=0, style=solid];
m13_867 -> m13_130  [key=2, style=dotted];
m13_867 -> m13_11  [key=2, style=dotted];
m13_868 -> m13_869  [key=0, style=solid];
m13_868 -> m13_8  [key=2, style=dotted];
m13_868 -> m13_9  [key=2, style=dotted];
m13_868 -> m13_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_869 -> m13_870  [key=0, style=solid];
m13_869 -> m13_57  [key=2, style=dotted];
m13_869 -> m13_877  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_870 -> m13_849  [color=blue, key=0, style=bold];
m13_323 -> m13_324  [key=0, style=solid];
m13_324 -> m13_325  [key=0, style=solid];
m13_325 -> m13_326  [key=0, style=solid];
m13_325 -> m13_9  [key=2, style=dotted];
m13_326 -> m13_327  [key=0, style=solid];
m13_326 -> m13_8  [key=2, style=dotted];
m13_326 -> m13_328  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_329  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_330  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_331  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_332  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_333  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_334  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_360  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_361  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_362  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_363  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_364  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_365  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_366  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_367  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_368  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_369  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_370  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_371  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_372  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_326 -> m13_373  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_327 -> m13_328  [key=0, style=solid];
m13_327 -> m13_11  [key=2, style=dotted];
m13_328 -> m13_329  [key=0, style=solid];
m13_328 -> m13_11  [key=2, style=dotted];
m13_329 -> m13_330  [key=0, style=solid];
m13_329 -> m13_11  [key=2, style=dotted];
m13_330 -> m13_331  [key=0, style=solid];
m13_330 -> m13_10  [key=2, style=dotted];
m13_331 -> m13_332  [key=0, style=solid];
m13_331 -> m13_11  [key=2, style=dotted];
m13_332 -> m13_333  [key=0, style=solid];
m13_332 -> m13_11  [key=2, style=dotted];
m13_333 -> m13_334  [key=0, style=solid];
m13_333 -> m13_11  [key=2, style=dotted];
m13_334 -> m13_335  [key=0, style=solid];
m13_334 -> m13_10  [key=2, style=dotted];
m13_335 -> m13_336  [key=0, style=solid];
m13_335 -> m13_11  [key=2, style=dotted];
m13_336 -> m13_337  [key=0, style=solid];
m13_336 -> m13_11  [key=2, style=dotted];
m13_337 -> m13_338  [key=0, style=solid];
m13_337 -> m13_11  [key=2, style=dotted];
m13_338 -> m13_339  [key=0, style=solid];
m13_338 -> m13_11  [key=2, style=dotted];
m13_339 -> m13_340  [key=0, style=solid];
m13_339 -> m13_10  [key=2, style=dotted];
m13_340 -> m13_341  [key=0, style=solid];
m13_340 -> m13_11  [key=2, style=dotted];
m13_340 -> m13_340  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m13_341 -> m13_342  [key=0, style=solid];
m13_341 -> m13_11  [key=2, style=dotted];
m13_342 -> m13_343  [key=0, style=solid];
m13_342 -> m13_11  [key=2, style=dotted];
m13_343 -> m13_344  [key=0, style=solid];
m13_343 -> m13_11  [key=2, style=dotted];
m13_344 -> m13_345  [key=0, style=solid];
m13_344 -> m13_10  [key=2, style=dotted];
m13_345 -> m13_346  [key=0, style=solid];
m13_345 -> m13_11  [key=2, style=dotted];
m13_346 -> m13_347  [key=0, style=solid];
m13_346 -> m13_11  [key=2, style=dotted];
m13_347 -> m13_348  [key=0, style=solid];
m13_347 -> m13_11  [key=2, style=dotted];
m13_348 -> m13_349  [key=0, style=solid];
m13_348 -> m13_11  [key=2, style=dotted];
m13_349 -> m13_350  [key=0, style=solid];
m13_349 -> m13_10  [key=2, style=dotted];
m13_350 -> m13_351  [key=0, style=solid];
m13_350 -> m13_11  [key=2, style=dotted];
m13_351 -> m13_352  [key=0, style=solid];
m13_351 -> m13_11  [key=2, style=dotted];
m13_352 -> m13_353  [key=0, style=solid];
m13_352 -> m13_11  [key=2, style=dotted];
m13_353 -> m13_354  [key=0, style=solid];
m13_353 -> m13_10  [key=2, style=dotted];
m13_354 -> m13_355  [key=0, style=solid];
m13_354 -> m13_11  [key=2, style=dotted];
m13_355 -> m13_356  [key=0, style=solid];
m13_355 -> m13_11  [key=2, style=dotted];
m13_356 -> m13_357  [key=0, style=solid];
m13_356 -> m13_11  [key=2, style=dotted];
m13_356 -> m13_356  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m13_357 -> m13_358  [key=0, style=solid];
m13_357 -> m13_11  [key=2, style=dotted];
m13_358 -> m13_359  [key=0, style=solid];
m13_358 -> m13_11  [key=2, style=dotted];
m13_359 -> m13_360  [key=0, style=solid];
m13_359 -> m13_10  [key=2, style=dotted];
m13_360 -> m13_361  [key=0, style=solid];
m13_360 -> m13_11  [key=2, style=dotted];
m13_361 -> m13_362  [key=0, style=solid];
m13_361 -> m13_11  [key=2, style=dotted];
m13_362 -> m13_363  [key=0, style=solid];
m13_362 -> m13_11  [key=2, style=dotted];
m13_363 -> m13_364  [key=0, style=solid];
m13_363 -> m13_11  [key=2, style=dotted];
m13_364 -> m13_365  [key=0, style=solid];
m13_364 -> m13_11  [key=2, style=dotted];
m13_365 -> m13_366  [key=0, style=solid];
m13_365 -> m13_10  [key=2, style=dotted];
m13_366 -> m13_367  [key=0, style=solid];
m13_366 -> m13_11  [key=2, style=dotted];
m13_367 -> m13_368  [key=0, style=solid];
m13_367 -> m13_11  [key=2, style=dotted];
m13_368 -> m13_369  [key=0, style=solid];
m13_368 -> m13_11  [key=2, style=dotted];
m13_369 -> m13_370  [key=0, style=solid];
m13_369 -> m13_10  [key=2, style=dotted];
m13_369 -> m13_369  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m13_370 -> m13_371  [key=0, style=solid];
m13_370 -> m13_11  [key=2, style=dotted];
m13_371 -> m13_372  [key=0, style=solid];
m13_371 -> m13_11  [key=2, style=dotted];
m13_372 -> m13_373  [key=0, style=solid];
m13_372 -> m13_11  [key=2, style=dotted];
m13_373 -> m13_374  [key=0, style=solid];
m13_373 -> m13_10  [key=2, style=dotted];
m13_373 -> m13_43  [key=2, style=dotted];
m13_374 -> m13_323  [color=blue, key=0, style=bold];
m13_284 -> m13_285  [key=0, style=solid];
m13_285 -> m13_286  [key=0, style=solid];
m13_286 -> m13_287  [key=0, style=solid];
m13_286 -> m13_8  [key=2, style=dotted];
m13_286 -> m13_9  [key=2, style=dotted];
m13_286 -> m13_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_286 -> m13_286  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m13_287 -> m13_288  [key=0, style=solid];
m13_287 -> m13_57  [key=2, style=dotted];
m13_287 -> m13_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_287 -> m13_287  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_288 -> m13_284  [color=blue, key=0, style=bold];
m13_1434 -> m13_1435  [key=0, style=solid];
m13_1435 -> m13_1436  [key=0, style=solid];
m13_1435 -> m13_8  [key=2, style=dotted];
m13_1435 -> m13_9  [key=2, style=dotted];
m13_1435 -> m13_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1436 -> m13_1437  [key=0, style=solid];
m13_1436 -> m13_57  [key=2, style=dotted];
m13_1436 -> m13_1438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1437 -> m13_1434  [color=blue, key=0, style=bold];
m13_1427 -> m13_1428  [key=0, style=solid];
m13_1428 -> m13_1429  [key=0, style=solid];
m13_1428 -> m13_8  [key=2, style=dotted];
m13_1428 -> m13_9  [key=2, style=dotted];
m13_1428 -> m13_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1429 -> m13_1430  [key=0, style=solid];
m13_1429 -> m13_57  [key=2, style=dotted];
m13_1429 -> m13_1431  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1430 -> m13_1427  [color=blue, key=0, style=bold];
m13_1455 -> m13_1456  [key=0, style=solid];
m13_1456 -> m13_1457  [key=0, style=solid];
m13_1457 -> m13_1458  [key=0, style=solid];
m13_1457 -> m13_8  [key=2, style=dotted];
m13_1457 -> m13_9  [key=2, style=dotted];
m13_1457 -> m13_1459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1457 -> m13_1468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1458 -> m13_1459  [key=0, style=solid];
m13_1458 -> m13_1365  [key=2, style=dotted];
m13_1459 -> m13_1460  [key=0, style=solid];
m13_1459 -> m13_10  [key=2, style=dotted];
m13_1459 -> m13_19  [key=2, style=dotted];
m13_1460 -> m13_1461  [key=0, style=solid];
m13_1460 -> m13_11  [key=2, style=dotted];
m13_1461 -> m13_1462  [key=0, style=solid];
m13_1461 -> m13_10  [key=2, style=dotted];
m13_1461 -> m13_19  [key=2, style=dotted];
m13_1462 -> m13_1463  [key=0, style=solid];
m13_1462 -> m13_11  [key=2, style=dotted];
m13_1463 -> m13_1464  [key=0, style=solid];
m13_1463 -> m13_130  [key=2, style=dotted];
m13_1463 -> m13_1466  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1464 -> m13_1465  [key=0, style=solid];
m13_1464 -> m13_11  [key=2, style=dotted];
m13_1465 -> m13_1466  [key=0, style=solid];
m13_1465 -> m13_11  [key=2, style=dotted];
m13_1467 -> m13_1468  [key=0, style=solid];
m13_1467 -> m13_10  [key=2, style=dotted];
m13_1467 -> m13_19  [key=2, style=dotted];
m13_1468 -> m13_1469  [key=0, style=solid];
m13_1468 -> m13_11  [key=2, style=dotted];
m13_1466 -> m13_1467  [key=0, style=solid];
m13_1466 -> m13_11  [key=2, style=dotted];
m13_1469 -> m13_1455  [color=blue, key=0, style=bold];
m13_1470 -> m13_1471  [key=0, style=solid];
m13_1471 -> m13_1472  [key=0, style=solid];
m13_1472 -> m13_1473  [key=0, style=solid];
m13_1472 -> m13_8  [key=2, style=dotted];
m13_1472 -> m13_9  [key=2, style=dotted];
m13_1472 -> m13_1475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1472 -> m13_1477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1472 -> m13_1478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1473 -> m13_1474  [key=0, style=solid];
m13_1473 -> m13_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1475 -> m13_1476  [key=0, style=solid];
m13_1475 -> m13_10  [key=2, style=dotted];
m13_1477 -> m13_1478  [key=0, style=solid];
m13_1477 -> m13_10  [key=2, style=dotted];
m13_1477 -> m13_19  [key=2, style=dotted];
m13_1478 -> m13_1479  [key=0, style=solid];
m13_1478 -> m13_1480  [key=2, style=dotted];
m13_1478 -> m13_11  [key=2, style=dotted];
m13_1474 -> m13_1475  [key=0, style=solid];
m13_1474 -> m13_1477  [key=0, style=solid];
m13_1476 -> m13_1474  [key=0, style=solid];
m13_1476 -> m13_1476  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1479 -> m13_1470  [color=blue, key=0, style=bold];
m13_1900 -> m13_1901  [key=0, style=solid];
m13_1901 -> m13_1902  [key=0, style=solid];
m13_1902 -> m13_1903  [key=0, style=solid];
m13_1902 -> m13_8  [key=2, style=dotted];
m13_1902 -> m13_9  [key=2, style=dotted];
m13_1902 -> m13_1904  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1905  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1906  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1907  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1908  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1909  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1911  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1912  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1914  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1915  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1916  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1917  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1918  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1919  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1920  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1921  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1922  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1923  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1924  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1925  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1926  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1902 -> m13_1927  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1903 -> m13_1904  [key=0, style=solid];
m13_1903 -> m13_10  [key=2, style=dotted];
m13_1903 -> m13_19  [key=2, style=dotted];
m13_1904 -> m13_1905  [key=0, style=solid];
m13_1904 -> m13_11  [key=2, style=dotted];
m13_1905 -> m13_1906  [key=0, style=solid];
m13_1905 -> m13_1638  [key=2, style=dotted];
m13_1905 -> m13_1929  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1906 -> m13_1907  [key=0, style=solid];
m13_1906 -> m13_11  [key=2, style=dotted];
m13_1907 -> m13_1908  [key=0, style=solid];
m13_1907 -> m13_10  [key=2, style=dotted];
m13_1907 -> m13_19  [key=2, style=dotted];
m13_1908 -> m13_1909  [key=0, style=solid];
m13_1908 -> m13_11  [key=2, style=dotted];
m13_1909 -> m13_1910  [key=0, style=solid];
m13_1909 -> m13_10  [key=2, style=dotted];
m13_1909 -> m13_19  [key=2, style=dotted];
m13_1910 -> m13_1911  [key=0, style=solid];
m13_1910 -> m13_11  [key=2, style=dotted];
m13_1911 -> m13_1912  [key=0, style=solid];
m13_1911 -> m13_10  [key=2, style=dotted];
m13_1911 -> m13_19  [key=2, style=dotted];
m13_1912 -> m13_1913  [key=0, style=solid];
m13_1912 -> m13_11  [key=2, style=dotted];
m13_1913 -> m13_1914  [key=0, style=solid];
m13_1913 -> m13_10  [key=2, style=dotted];
m13_1913 -> m13_19  [key=2, style=dotted];
m13_1914 -> m13_1915  [key=0, style=solid];
m13_1914 -> m13_11  [key=2, style=dotted];
m13_1915 -> m13_1916  [key=0, style=solid];
m13_1915 -> m13_10  [key=2, style=dotted];
m13_1915 -> m13_19  [key=2, style=dotted];
m13_1916 -> m13_1917  [key=0, style=solid];
m13_1916 -> m13_11  [key=2, style=dotted];
m13_1917 -> m13_1918  [key=0, style=solid];
m13_1917 -> m13_1638  [key=2, style=dotted];
m13_1917 -> m13_1932  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1918 -> m13_1919  [key=0, style=solid];
m13_1918 -> m13_11  [key=2, style=dotted];
m13_1919 -> m13_1920  [key=0, style=solid];
m13_1919 -> m13_10  [key=2, style=dotted];
m13_1919 -> m13_19  [key=2, style=dotted];
m13_1920 -> m13_1921  [key=0, style=solid];
m13_1920 -> m13_11  [key=2, style=dotted];
m13_1921 -> m13_1922  [key=0, style=solid];
m13_1921 -> m13_10  [key=2, style=dotted];
m13_1921 -> m13_19  [key=2, style=dotted];
m13_1922 -> m13_1923  [key=0, style=solid];
m13_1922 -> m13_11  [key=2, style=dotted];
m13_1923 -> m13_1924  [key=0, style=solid];
m13_1923 -> m13_10  [key=2, style=dotted];
m13_1923 -> m13_19  [key=2, style=dotted];
m13_1924 -> m13_1925  [key=0, style=solid];
m13_1924 -> m13_11  [key=2, style=dotted];
m13_1925 -> m13_1926  [key=0, style=solid];
m13_1925 -> m13_10  [key=2, style=dotted];
m13_1925 -> m13_19  [key=2, style=dotted];
m13_1926 -> m13_1927  [key=0, style=solid];
m13_1926 -> m13_11  [key=2, style=dotted];
m13_1927 -> m13_1928  [key=0, style=solid];
m13_1927 -> m13_10  [key=2, style=dotted];
m13_1927 -> m13_43  [key=2, style=dotted];
m13_1928 -> m13_1900  [color=blue, key=0, style=bold];
m13_115 -> m13_116  [key=0, style=solid];
m13_116 -> m13_117  [key=0, style=solid];
m13_116 -> m13_119  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_116 -> m13_121  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_117 -> m13_118  [key=0, style=solid];
m13_117 -> m13_8  [key=2, style=dotted];
m13_117 -> m13_9  [key=2, style=dotted];
m13_117 -> m13_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_119 -> m13_120  [key=0, style=solid];
m13_119 -> m13_8  [key=2, style=dotted];
m13_119 -> m13_9  [key=2, style=dotted];
m13_119 -> m13_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_121 -> m13_122  [key=0, style=solid];
m13_121 -> m13_8  [key=2, style=dotted];
m13_121 -> m13_9  [key=2, style=dotted];
m13_121 -> m13_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_118 -> m13_119  [key=0, style=solid];
m13_118 -> m13_57  [key=2, style=dotted];
m13_118 -> m13_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_120 -> m13_121  [key=0, style=solid];
m13_120 -> m13_57  [key=2, style=dotted];
m13_120 -> m13_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_122 -> m13_123  [key=0, style=solid];
m13_122 -> m13_57  [key=2, style=dotted];
m13_122 -> m13_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_123 -> m13_115  [color=blue, key=0, style=bold];
m13_1205 -> m13_1206  [key=0, style=solid];
m13_1206 -> m13_1207  [key=0, style=solid];
m13_1206 -> m13_8  [key=2, style=dotted];
m13_1206 -> m13_9  [key=2, style=dotted];
m13_1206 -> m13_1210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1207 -> m13_1208  [key=0, style=solid];
m13_1207 -> m13_57  [key=2, style=dotted];
m13_1207 -> m13_1209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1208 -> m13_1205  [color=blue, key=0, style=bold];
m13_235 -> m13_236  [key=0, style=solid];
m13_236 -> m13_237  [key=0, style=solid];
m13_236 -> m13_242  [key=2, style=dotted];
m13_236 -> m13_243  [key=2, style=dotted];
m13_237 -> m13_238  [key=0, style=solid];
m13_237 -> m13_8  [key=2, style=dotted];
m13_237 -> m13_244  [key=2, style=dotted];
m13_237 -> m13_239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_238 -> m13_239  [key=0, style=solid];
m13_238 -> m13_10  [key=2, style=dotted];
m13_239 -> m13_240  [key=0, style=solid];
m13_240 -> m13_241  [key=0, style=solid];
m13_241 -> m13_235  [color=blue, key=0, style=bold];
m13_1441 -> m13_1442  [key=0, style=solid];
m13_1442 -> m13_1443  [key=0, style=solid];
m13_1443 -> m13_1444  [key=0, style=solid];
m13_1443 -> m13_8  [key=2, style=dotted];
m13_1443 -> m13_9  [key=2, style=dotted];
m13_1443 -> m13_1445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1443 -> m13_1453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1444 -> m13_1445  [key=0, style=solid];
m13_1444 -> m13_10  [key=2, style=dotted];
m13_1444 -> m13_19  [key=2, style=dotted];
m13_1445 -> m13_1446  [key=0, style=solid];
m13_1445 -> m13_11  [key=2, style=dotted];
m13_1446 -> m13_1447  [key=0, style=solid];
m13_1446 -> m13_10  [key=2, style=dotted];
m13_1446 -> m13_19  [key=2, style=dotted];
m13_1447 -> m13_1448  [key=0, style=solid];
m13_1447 -> m13_11  [key=2, style=dotted];
m13_1448 -> m13_1449  [key=0, style=solid];
m13_1448 -> m13_130  [key=2, style=dotted];
m13_1448 -> m13_1451  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1449 -> m13_1450  [key=0, style=solid];
m13_1449 -> m13_11  [key=2, style=dotted];
m13_1450 -> m13_1451  [key=0, style=solid];
m13_1450 -> m13_11  [key=2, style=dotted];
m13_1452 -> m13_1453  [key=0, style=solid];
m13_1452 -> m13_10  [key=2, style=dotted];
m13_1452 -> m13_19  [key=2, style=dotted];
m13_1453 -> m13_1454  [key=0, style=solid];
m13_1453 -> m13_11  [key=2, style=dotted];
m13_1451 -> m13_1452  [key=0, style=solid];
m13_1451 -> m13_11  [key=2, style=dotted];
m13_1454 -> m13_1441  [color=blue, key=0, style=bold];
m13_915 -> m13_916  [key=0, style=solid];
m13_916 -> m13_917  [key=0, style=solid];
m13_916 -> m13_952  [key=2, style=dotted];
m13_916 -> m13_943  [color=darkseagreen4, key=1, label=sb, style=dashed];
m13_917 -> m13_918  [key=0, style=solid];
m13_917 -> m13_953  [key=2, style=dotted];
m13_943 -> m13_944  [key=0, style=solid];
m13_943 -> m13_963  [key=2, style=dotted];
m13_943 -> m13_945  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_943 -> m13_950  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_918 -> m13_919  [key=0, style=solid];
m13_918 -> m13_514  [key=2, style=dotted];
m13_918 -> m13_920  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_921  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_922  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_923  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_924  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_925  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_926  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_927  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_930  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_932  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_933  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_934  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_935  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_936  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_937  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_938  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_939  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_940  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_941  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_918 -> m13_942  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_919 -> m13_920  [key=0, style=solid];
m13_919 -> m13_954  [key=2, style=dotted];
m13_920 -> m13_921  [key=0, style=solid];
m13_920 -> m13_955  [key=2, style=dotted];
m13_921 -> m13_922  [key=0, style=solid];
m13_921 -> m13_956  [key=2, style=dotted];
m13_922 -> m13_923  [key=0, style=solid];
m13_922 -> m13_957  [key=2, style=dotted];
m13_923 -> m13_924  [key=0, style=solid];
m13_923 -> m13_958  [key=2, style=dotted];
m13_924 -> m13_925  [key=0, style=solid];
m13_924 -> m13_957  [key=2, style=dotted];
m13_925 -> m13_926  [key=0, style=solid];
m13_925 -> m13_959  [key=2, style=dotted];
m13_926 -> m13_927  [key=0, style=solid];
m13_926 -> m13_957  [key=2, style=dotted];
m13_927 -> m13_928  [key=0, style=solid];
m13_927 -> m13_954  [key=2, style=dotted];
m13_930 -> m13_931  [key=0, style=solid];
m13_930 -> m13_958  [key=2, style=dotted];
m13_932 -> m13_933  [key=0, style=solid];
m13_932 -> m13_956  [key=2, style=dotted];
m13_933 -> m13_934  [key=0, style=solid];
m13_933 -> m13_957  [key=2, style=dotted];
m13_934 -> m13_935  [key=0, style=solid];
m13_934 -> m13_960  [key=2, style=dotted];
m13_935 -> m13_936  [key=0, style=solid];
m13_935 -> m13_961  [key=2, style=dotted];
m13_936 -> m13_937  [key=0, style=solid];
m13_936 -> m13_958  [key=2, style=dotted];
m13_937 -> m13_938  [key=0, style=solid];
m13_937 -> m13_517  [key=2, style=dotted];
m13_938 -> m13_939  [key=0, style=solid];
m13_938 -> m13_961  [key=2, style=dotted];
m13_939 -> m13_940  [key=0, style=solid];
m13_939 -> m13_959  [key=2, style=dotted];
m13_940 -> m13_941  [key=0, style=solid];
m13_940 -> m13_962  [key=2, style=dotted];
m13_941 -> m13_942  [key=0, style=solid];
m13_941 -> m13_962  [key=2, style=dotted];
m13_942 -> m13_943  [key=0, style=solid];
m13_942 -> m13_517  [key=2, style=dotted];
m13_928 -> m13_929  [key=0, style=solid];
m13_928 -> m13_930  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_928 -> m13_931  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_929 -> m13_930  [key=0, style=solid];
m13_929 -> m13_932  [key=0, style=solid];
m13_931 -> m13_929  [key=0, style=solid];
m13_931 -> m13_931  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_944 -> m13_945  [key=0, style=solid];
m13_944 -> m13_964  [key=2, style=dotted];
m13_944 -> m13_949  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_945 -> m13_946  [key=0, style=solid];
m13_945 -> m13_8  [key=2, style=dotted];
m13_945 -> m13_9  [key=2, style=dotted];
m13_945 -> m13_965  [key=2, style=dotted];
m13_945 -> m13_949  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m13_950 -> m13_951  [key=0, style=solid];
m13_950 -> m13_963  [key=2, style=dotted];
m13_950 -> m13_11  [key=2, style=dotted];
m13_949 -> m13_950  [key=0, style=solid];
m13_949 -> m13_966  [key=2, style=dotted];
m13_946 -> m13_947  [key=0, style=solid];
m13_946 -> m13_952  [key=2, style=dotted];
m13_946 -> m13_950  [color=darkseagreen4, key=1, label=sb, style=dashed];
m13_947 -> m13_948  [key=0, style=solid];
m13_947 -> m13_953  [key=2, style=dotted];
m13_948 -> m13_949  [key=0, style=solid];
m13_948 -> m13_514  [key=2, style=dotted];
m13_951 -> m13_915  [color=blue, key=0, style=bold];
m13_1935 -> m13_1936  [key=0, style=solid];
m13_1936 -> m13_1937  [key=0, style=solid];
m13_1937 -> m13_1938  [key=0, style=solid];
m13_1937 -> m13_8  [key=2, style=dotted];
m13_1937 -> m13_244  [key=2, style=dotted];
m13_1937 -> m13_282  [key=2, style=dotted];
m13_1937 -> m13_283  [key=2, style=dotted];
m13_1937 -> m13_1939  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1940  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1941  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1942  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1943  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1944  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1945  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1946  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1947  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1948  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1949  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1951  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1953  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1954  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1955  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1956  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1963  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1964  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1969  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1972  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1937 -> m13_1974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1938 -> m13_1939  [key=0, style=solid];
m13_1938 -> m13_10  [key=2, style=dotted];
m13_1938 -> m13_19  [key=2, style=dotted];
m13_1939 -> m13_1940  [key=0, style=solid];
m13_1939 -> m13_10  [key=2, style=dotted];
m13_1939 -> m13_19  [key=2, style=dotted];
m13_1940 -> m13_1941  [key=0, style=solid];
m13_1940 -> m13_11  [key=2, style=dotted];
m13_1941 -> m13_1942  [key=0, style=solid];
m13_1941 -> m13_10  [key=2, style=dotted];
m13_1941 -> m13_19  [key=2, style=dotted];
m13_1942 -> m13_1943  [key=0, style=solid];
m13_1942 -> m13_11  [key=2, style=dotted];
m13_1943 -> m13_1944  [key=0, style=solid];
m13_1943 -> m13_11  [key=2, style=dotted];
m13_1944 -> m13_1945  [key=0, style=solid];
m13_1944 -> m13_10  [key=2, style=dotted];
m13_1944 -> m13_19  [key=2, style=dotted];
m13_1945 -> m13_1946  [key=0, style=solid];
m13_1945 -> m13_11  [key=2, style=dotted];
m13_1946 -> m13_1947  [key=0, style=solid];
m13_1946 -> m13_11  [key=2, style=dotted];
m13_1947 -> m13_1948  [key=0, style=solid];
m13_1947 -> m13_10  [key=2, style=dotted];
m13_1947 -> m13_19  [key=2, style=dotted];
m13_1948 -> m13_1949  [key=0, style=solid];
m13_1948 -> m13_11  [key=2, style=dotted];
m13_1949 -> m13_1950  [key=0, style=solid];
m13_1949 -> m13_11  [key=2, style=dotted];
m13_1950 -> m13_1951  [key=0, style=solid];
m13_1950 -> m13_10  [key=2, style=dotted];
m13_1950 -> m13_19  [key=2, style=dotted];
m13_1951 -> m13_1952  [key=0, style=solid];
m13_1951 -> m13_11  [key=2, style=dotted];
m13_1952 -> m13_1953  [key=0, style=solid];
m13_1952 -> m13_11  [key=2, style=dotted];
m13_1953 -> m13_1954  [key=0, style=solid];
m13_1953 -> m13_10  [key=2, style=dotted];
m13_1953 -> m13_19  [key=2, style=dotted];
m13_1954 -> m13_1955  [key=0, style=solid];
m13_1954 -> m13_11  [key=2, style=dotted];
m13_1955 -> m13_1956  [key=0, style=solid];
m13_1955 -> m13_11  [key=2, style=dotted];
m13_1956 -> m13_1957  [key=0, style=solid];
m13_1956 -> m13_10  [key=2, style=dotted];
m13_1956 -> m13_19  [key=2, style=dotted];
m13_1957 -> m13_1958  [key=0, style=solid];
m13_1957 -> m13_11  [key=2, style=dotted];
m13_1958 -> m13_1959  [key=0, style=solid];
m13_1958 -> m13_11  [key=2, style=dotted];
m13_1959 -> m13_1960  [key=0, style=solid];
m13_1959 -> m13_10  [key=2, style=dotted];
m13_1959 -> m13_19  [key=2, style=dotted];
m13_1960 -> m13_1961  [key=0, style=solid];
m13_1960 -> m13_11  [key=2, style=dotted];
m13_1961 -> m13_1962  [key=0, style=solid];
m13_1961 -> m13_11  [key=2, style=dotted];
m13_1962 -> m13_1963  [key=0, style=solid];
m13_1962 -> m13_10  [key=2, style=dotted];
m13_1962 -> m13_19  [key=2, style=dotted];
m13_1963 -> m13_1964  [key=0, style=solid];
m13_1963 -> m13_11  [key=2, style=dotted];
m13_1964 -> m13_1965  [key=0, style=solid];
m13_1964 -> m13_11  [key=2, style=dotted];
m13_1965 -> m13_1966  [key=0, style=solid];
m13_1965 -> m13_10  [key=2, style=dotted];
m13_1965 -> m13_19  [key=2, style=dotted];
m13_1966 -> m13_1967  [key=0, style=solid];
m13_1966 -> m13_11  [key=2, style=dotted];
m13_1967 -> m13_1968  [key=0, style=solid];
m13_1967 -> m13_11  [key=2, style=dotted];
m13_1968 -> m13_1969  [key=0, style=solid];
m13_1968 -> m13_10  [key=2, style=dotted];
m13_1968 -> m13_19  [key=2, style=dotted];
m13_1969 -> m13_1970  [key=0, style=solid];
m13_1969 -> m13_11  [key=2, style=dotted];
m13_1970 -> m13_1971  [key=0, style=solid];
m13_1970 -> m13_11  [key=2, style=dotted];
m13_1971 -> m13_1972  [key=0, style=solid];
m13_1971 -> m13_10  [key=2, style=dotted];
m13_1971 -> m13_19  [key=2, style=dotted];
m13_1972 -> m13_1973  [key=0, style=solid];
m13_1972 -> m13_11  [key=2, style=dotted];
m13_1973 -> m13_1974  [key=0, style=solid];
m13_1973 -> m13_11  [key=2, style=dotted];
m13_1974 -> m13_1975  [key=0, style=solid];
m13_1974 -> m13_10  [key=2, style=dotted];
m13_1974 -> m13_19  [key=2, style=dotted];
m13_1975 -> m13_1935  [color=blue, key=0, style=bold];
m13_1492 -> m13_1493  [key=0, style=solid];
m13_1493 -> m13_1494  [key=0, style=solid];
m13_1494 -> m13_1495  [key=0, style=solid];
m13_1494 -> m13_8  [key=2, style=dotted];
m13_1494 -> m13_9  [key=2, style=dotted];
m13_1494 -> m13_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1494 -> m13_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1494 -> m13_1498  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1494 -> m13_1499  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1495 -> m13_1496  [key=0, style=solid];
m13_1495 -> m13_10  [key=2, style=dotted];
m13_1495 -> m13_19  [key=2, style=dotted];
m13_1496 -> m13_1497  [key=0, style=solid];
m13_1496 -> m13_11  [key=2, style=dotted];
m13_1497 -> m13_1498  [key=0, style=solid];
m13_1497 -> m13_11  [key=2, style=dotted];
m13_1498 -> m13_1499  [key=0, style=solid];
m13_1498 -> m13_10  [key=2, style=dotted];
m13_1498 -> m13_19  [key=2, style=dotted];
m13_1499 -> m13_1500  [key=0, style=solid];
m13_1499 -> m13_11  [key=2, style=dotted];
m13_1500 -> m13_1492  [color=blue, key=0, style=bold];
m13_1413 -> m13_1414  [key=0, style=solid];
m13_1414 -> m13_1415  [key=0, style=solid];
m13_1414 -> m13_8  [key=2, style=dotted];
m13_1414 -> m13_9  [key=2, style=dotted];
m13_1414 -> m13_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1415 -> m13_1416  [key=0, style=solid];
m13_1415 -> m13_57  [key=2, style=dotted];
m13_1415 -> m13_1417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1416 -> m13_1413  [color=blue, key=0, style=bold];
m13_880 -> m13_881  [key=0, style=solid];
m13_881 -> m13_882  [key=0, style=solid];
m13_882 -> m13_883  [key=0, style=solid];
m13_882 -> m13_8  [key=2, style=dotted];
m13_882 -> m13_9  [key=2, style=dotted];
m13_882 -> m13_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_882 -> m13_885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_883 -> m13_884  [key=0, style=solid];
m13_883 -> m13_10  [key=2, style=dotted];
m13_883 -> m13_19  [key=2, style=dotted];
m13_884 -> m13_885  [key=0, style=solid];
m13_884 -> m13_11  [key=2, style=dotted];
m13_885 -> m13_886  [key=0, style=solid];
m13_885 -> m13_11  [key=2, style=dotted];
m13_886 -> m13_887  [key=0, style=solid];
m13_886 -> m13_8  [key=2, style=dotted];
m13_886 -> m13_9  [key=2, style=dotted];
m13_886 -> m13_888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_886 -> m13_889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_887 -> m13_888  [key=0, style=solid];
m13_887 -> m13_10  [key=2, style=dotted];
m13_887 -> m13_19  [key=2, style=dotted];
m13_888 -> m13_889  [key=0, style=solid];
m13_888 -> m13_11  [key=2, style=dotted];
m13_889 -> m13_890  [key=0, style=solid];
m13_889 -> m13_11  [key=2, style=dotted];
m13_890 -> m13_891  [key=0, style=solid];
m13_890 -> m13_8  [key=2, style=dotted];
m13_890 -> m13_9  [key=2, style=dotted];
m13_890 -> m13_892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_890 -> m13_893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_891 -> m13_892  [key=0, style=solid];
m13_891 -> m13_10  [key=2, style=dotted];
m13_891 -> m13_19  [key=2, style=dotted];
m13_892 -> m13_893  [key=0, style=solid];
m13_892 -> m13_11  [key=2, style=dotted];
m13_893 -> m13_894  [key=0, style=solid];
m13_893 -> m13_11  [key=2, style=dotted];
m13_894 -> m13_895  [key=0, style=solid];
m13_894 -> m13_8  [key=2, style=dotted];
m13_894 -> m13_9  [key=2, style=dotted];
m13_894 -> m13_896  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_894 -> m13_897  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_895 -> m13_896  [key=0, style=solid];
m13_895 -> m13_10  [key=2, style=dotted];
m13_895 -> m13_19  [key=2, style=dotted];
m13_896 -> m13_897  [key=0, style=solid];
m13_896 -> m13_11  [key=2, style=dotted];
m13_897 -> m13_898  [key=0, style=solid];
m13_897 -> m13_11  [key=2, style=dotted];
m13_898 -> m13_899  [key=0, style=solid];
m13_898 -> m13_8  [key=2, style=dotted];
m13_898 -> m13_9  [key=2, style=dotted];
m13_898 -> m13_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_899 -> m13_900  [key=0, style=solid];
m13_899 -> m13_57  [key=2, style=dotted];
m13_899 -> m13_909  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_900 -> m13_901  [key=0, style=solid];
m13_900 -> m13_8  [key=2, style=dotted];
m13_900 -> m13_9  [key=2, style=dotted];
m13_900 -> m13_902  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_900 -> m13_903  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_901 -> m13_902  [key=0, style=solid];
m13_901 -> m13_10  [key=2, style=dotted];
m13_901 -> m13_19  [key=2, style=dotted];
m13_902 -> m13_903  [key=0, style=solid];
m13_902 -> m13_11  [key=2, style=dotted];
m13_903 -> m13_904  [key=0, style=solid];
m13_903 -> m13_11  [key=2, style=dotted];
m13_904 -> m13_905  [key=0, style=solid];
m13_904 -> m13_8  [key=2, style=dotted];
m13_904 -> m13_9  [key=2, style=dotted];
m13_905 -> m13_906  [key=0, style=solid];
m13_905 -> m13_10  [key=2, style=dotted];
m13_905 -> m13_43  [key=2, style=dotted];
m13_906 -> m13_907  [key=0, style=solid];
m13_906 -> m13_8  [key=2, style=dotted];
m13_906 -> m13_9  [key=2, style=dotted];
m13_906 -> m13_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_907 -> m13_908  [key=0, style=solid];
m13_907 -> m13_57  [key=2, style=dotted];
m13_907 -> m13_912  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_908 -> m13_880  [color=blue, key=0, style=bold];
m13_632 -> m13_633  [key=0, style=solid];
m13_633 -> m13_634  [key=0, style=solid];
m13_633 -> m13_8  [key=2, style=dotted];
m13_633 -> m13_9  [key=2, style=dotted];
m13_633 -> m13_635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_634 -> m13_635  [key=0, style=solid];
m13_634 -> m13_264  [key=2, style=dotted];
m13_634 -> m13_19  [key=2, style=dotted];
m13_635 -> m13_636  [key=0, style=solid];
m13_635 -> m13_11  [key=2, style=dotted];
m13_636 -> m13_632  [color=blue, key=0, style=bold];
m13_292 -> m13_293  [key=0, style=solid];
m13_293 -> m13_294  [key=0, style=solid];
m13_294 -> m13_295  [key=0, style=solid];
m13_294 -> m13_8  [key=2, style=dotted];
m13_294 -> m13_9  [key=2, style=dotted];
m13_294 -> m13_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_294 -> m13_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_295 -> m13_296  [key=0, style=solid];
m13_295 -> m13_10  [key=2, style=dotted];
m13_296 -> m13_297  [key=0, style=solid];
m13_296 -> m13_11  [key=2, style=dotted];
m13_297 -> m13_298  [key=0, style=solid];
m13_297 -> m13_10  [key=2, style=dotted];
m13_298 -> m13_299  [key=0, style=solid];
m13_298 -> m13_11  [key=2, style=dotted];
m13_299 -> m13_300  [key=0, style=solid];
m13_299 -> m13_10  [key=2, style=dotted];
m13_300 -> m13_301  [key=0, style=solid];
m13_300 -> m13_11  [key=2, style=dotted];
m13_301 -> m13_302  [key=0, style=solid];
m13_301 -> m13_10  [key=2, style=dotted];
m13_302 -> m13_303  [key=0, style=solid];
m13_302 -> m13_11  [key=2, style=dotted];
m13_303 -> m13_304  [key=0, style=solid];
m13_303 -> m13_10  [key=2, style=dotted];
m13_304 -> m13_305  [key=0, style=solid];
m13_304 -> m13_11  [key=2, style=dotted];
m13_305 -> m13_306  [key=0, style=solid];
m13_305 -> m13_57  [key=2, style=dotted];
m13_305 -> m13_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_306 -> m13_292  [color=blue, key=0, style=bold];
m13_1000 -> m13_1001  [key=0, style=solid];
m13_1001 -> m13_1002  [key=0, style=solid];
m13_1002 -> m13_1003  [key=0, style=solid];
m13_1002 -> m13_8  [key=2, style=dotted];
m13_1002 -> m13_9  [key=2, style=dotted];
m13_1002 -> m13_1004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1008  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1009  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1002 -> m13_1010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1003 -> m13_1004  [key=0, style=solid];
m13_1003 -> m13_10  [key=2, style=dotted];
m13_1004 -> m13_1005  [key=0, style=solid];
m13_1004 -> m13_11  [key=2, style=dotted];
m13_1005 -> m13_1006  [key=0, style=solid];
m13_1005 -> m13_10  [key=2, style=dotted];
m13_1006 -> m13_1007  [key=0, style=solid];
m13_1006 -> m13_11  [key=2, style=dotted];
m13_1007 -> m13_1008  [key=0, style=solid];
m13_1007 -> m13_10  [key=2, style=dotted];
m13_1008 -> m13_1009  [key=0, style=solid];
m13_1008 -> m13_1012  [key=2, style=dotted];
m13_1008 -> m13_1013  [key=2, style=dotted];
m13_1008 -> m13_11  [key=2, style=dotted];
m13_1009 -> m13_1010  [key=0, style=solid];
m13_1009 -> m13_10  [key=2, style=dotted];
m13_1010 -> m13_1011  [key=0, style=solid];
m13_1010 -> m13_11  [key=2, style=dotted];
m13_1011 -> m13_1000  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_8  [key=2, style=dotted];
m13_2 -> m13_9  [key=2, style=dotted];
m13_2 -> m13_4  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2 -> m13_5  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2 -> m13_6  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_10  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_10  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_10  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_11  [key=2, style=dotted];
m13_7 -> m13_0  [color=blue, key=0, style=bold];
m13_45 -> m13_46  [key=0, style=solid];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_46  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_8  [key=2, style=dotted];
m13_47 -> m13_9  [key=2, style=dotted];
m13_47 -> m13_49  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_47 -> m13_50  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_47 -> m13_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_47 -> m13_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_47 -> m13_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_47 -> m13_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_47 -> m13_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_47 -> m13_55  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_10  [key=2, style=dotted];
m13_48 -> m13_19  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_11  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_10  [key=2, style=dotted];
m13_50 -> m13_19  [key=2, style=dotted];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_11  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_57  [key=2, style=dotted];
m13_52 -> m13_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_10  [key=2, style=dotted];
m13_53 -> m13_19  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_11  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_10  [key=2, style=dotted];
m13_55 -> m13_43  [key=2, style=dotted];
m13_56 -> m13_45  [color=blue, key=0, style=bold];
m13_375 -> m13_376  [key=0, style=solid];
m13_376 -> m13_377  [key=0, style=solid];
m13_377 -> m13_378  [key=0, style=solid];
m13_377 -> m13_9  [key=2, style=dotted];
m13_378 -> m13_379  [key=0, style=solid];
m13_378 -> m13_8  [key=2, style=dotted];
m13_378 -> m13_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_378 -> m13_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_379 -> m13_380  [key=0, style=solid];
m13_379 -> m13_11  [key=2, style=dotted];
m13_380 -> m13_381  [key=0, style=solid];
m13_380 -> m13_264  [key=2, style=dotted];
m13_381 -> m13_382  [key=0, style=solid];
m13_381 -> m13_11  [key=2, style=dotted];
m13_382 -> m13_383  [key=0, style=solid];
m13_382 -> m13_11  [key=2, style=dotted];
m13_383 -> m13_384  [key=0, style=solid];
m13_383 -> m13_11  [key=2, style=dotted];
m13_384 -> m13_385  [key=0, style=solid];
m13_384 -> m13_264  [key=2, style=dotted];
m13_385 -> m13_386  [key=0, style=solid];
m13_385 -> m13_11  [key=2, style=dotted];
m13_386 -> m13_387  [key=0, style=solid];
m13_386 -> m13_11  [key=2, style=dotted];
m13_387 -> m13_388  [key=0, style=solid];
m13_387 -> m13_11  [key=2, style=dotted];
m13_388 -> m13_389  [key=0, style=solid];
m13_388 -> m13_264  [key=2, style=dotted];
m13_389 -> m13_390  [key=0, style=solid];
m13_389 -> m13_11  [key=2, style=dotted];
m13_390 -> m13_391  [key=0, style=solid];
m13_390 -> m13_11  [key=2, style=dotted];
m13_391 -> m13_392  [key=0, style=solid];
m13_391 -> m13_11  [key=2, style=dotted];
m13_392 -> m13_393  [key=0, style=solid];
m13_392 -> m13_11  [key=2, style=dotted];
m13_393 -> m13_394  [key=0, style=solid];
m13_393 -> m13_11  [key=2, style=dotted];
m13_394 -> m13_395  [key=0, style=solid];
m13_394 -> m13_264  [key=2, style=dotted];
m13_395 -> m13_396  [key=0, style=solid];
m13_395 -> m13_11  [key=2, style=dotted];
m13_396 -> m13_397  [key=0, style=solid];
m13_396 -> m13_11  [key=2, style=dotted];
m13_397 -> m13_398  [key=0, style=solid];
m13_397 -> m13_11  [key=2, style=dotted];
m13_398 -> m13_399  [key=0, style=solid];
m13_398 -> m13_264  [key=2, style=dotted];
m13_399 -> m13_400  [key=0, style=solid];
m13_399 -> m13_11  [key=2, style=dotted];
m13_400 -> m13_401  [key=0, style=solid];
m13_400 -> m13_11  [key=2, style=dotted];
m13_401 -> m13_402  [key=0, style=solid];
m13_401 -> m13_11  [key=2, style=dotted];
m13_402 -> m13_403  [key=0, style=solid];
m13_402 -> m13_264  [key=2, style=dotted];
m13_403 -> m13_404  [key=0, style=solid];
m13_403 -> m13_11  [key=2, style=dotted];
m13_404 -> m13_405  [key=0, style=solid];
m13_404 -> m13_11  [key=2, style=dotted];
m13_405 -> m13_406  [key=0, style=solid];
m13_405 -> m13_11  [key=2, style=dotted];
m13_406 -> m13_407  [key=0, style=solid];
m13_406 -> m13_11  [key=2, style=dotted];
m13_407 -> m13_408  [key=0, style=solid];
m13_407 -> m13_264  [key=2, style=dotted];
m13_408 -> m13_409  [key=0, style=solid];
m13_408 -> m13_11  [key=2, style=dotted];
m13_409 -> m13_410  [key=0, style=solid];
m13_409 -> m13_11  [key=2, style=dotted];
m13_409 -> m13_369  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m13_410 -> m13_411  [key=0, style=solid];
m13_410 -> m13_11  [key=2, style=dotted];
m13_411 -> m13_412  [key=0, style=solid];
m13_411 -> m13_11  [key=2, style=dotted];
m13_412 -> m13_413  [key=0, style=solid];
m13_412 -> m13_264  [key=2, style=dotted];
m13_413 -> m13_414  [key=0, style=solid];
m13_413 -> m13_11  [key=2, style=dotted];
m13_414 -> m13_415  [key=0, style=solid];
m13_414 -> m13_11  [key=2, style=dotted];
m13_415 -> m13_416  [key=0, style=solid];
m13_415 -> m13_11  [key=2, style=dotted];
m13_416 -> m13_417  [key=0, style=solid];
m13_416 -> m13_11  [key=2, style=dotted];
m13_417 -> m13_418  [key=0, style=solid];
m13_417 -> m13_264  [key=2, style=dotted];
m13_418 -> m13_419  [key=0, style=solid];
m13_418 -> m13_11  [key=2, style=dotted];
m13_419 -> m13_420  [key=0, style=solid];
m13_419 -> m13_11  [key=2, style=dotted];
m13_420 -> m13_421  [key=0, style=solid];
m13_420 -> m13_11  [key=2, style=dotted];
m13_421 -> m13_422  [key=0, style=solid];
m13_421 -> m13_11  [key=2, style=dotted];
m13_422 -> m13_423  [key=0, style=solid];
m13_422 -> m13_264  [key=2, style=dotted];
m13_423 -> m13_424  [key=0, style=solid];
m13_423 -> m13_11  [key=2, style=dotted];
m13_424 -> m13_425  [key=0, style=solid];
m13_424 -> m13_11  [key=2, style=dotted];
m13_425 -> m13_426  [key=0, style=solid];
m13_425 -> m13_11  [key=2, style=dotted];
m13_426 -> m13_427  [key=0, style=solid];
m13_426 -> m13_11  [key=2, style=dotted];
m13_427 -> m13_428  [key=0, style=solid];
m13_427 -> m13_264  [key=2, style=dotted];
m13_428 -> m13_429  [key=0, style=solid];
m13_428 -> m13_11  [key=2, style=dotted];
m13_429 -> m13_430  [key=0, style=solid];
m13_429 -> m13_11  [key=2, style=dotted];
m13_430 -> m13_431  [key=0, style=solid];
m13_430 -> m13_11  [key=2, style=dotted];
m13_431 -> m13_432  [key=0, style=solid];
m13_431 -> m13_264  [key=2, style=dotted];
m13_432 -> m13_433  [key=0, style=solid];
m13_432 -> m13_11  [key=2, style=dotted];
m13_433 -> m13_434  [key=0, style=solid];
m13_433 -> m13_11  [key=2, style=dotted];
m13_434 -> m13_435  [key=0, style=solid];
m13_434 -> m13_11  [key=2, style=dotted];
m13_435 -> m13_436  [key=0, style=solid];
m13_435 -> m13_264  [key=2, style=dotted];
m13_436 -> m13_437  [key=0, style=solid];
m13_436 -> m13_11  [key=2, style=dotted];
m13_437 -> m13_438  [key=0, style=solid];
m13_437 -> m13_11  [key=2, style=dotted];
m13_438 -> m13_439  [key=0, style=solid];
m13_438 -> m13_11  [key=2, style=dotted];
m13_439 -> m13_440  [key=0, style=solid];
m13_439 -> m13_264  [key=2, style=dotted];
m13_440 -> m13_441  [key=0, style=solid];
m13_440 -> m13_11  [key=2, style=dotted];
m13_441 -> m13_442  [key=0, style=solid];
m13_441 -> m13_11  [key=2, style=dotted];
m13_442 -> m13_443  [key=0, style=solid];
m13_442 -> m13_11  [key=2, style=dotted];
m13_443 -> m13_444  [key=0, style=solid];
m13_443 -> m13_264  [key=2, style=dotted];
m13_444 -> m13_445  [key=0, style=solid];
m13_444 -> m13_11  [key=2, style=dotted];
m13_445 -> m13_446  [key=0, style=solid];
m13_445 -> m13_11  [key=2, style=dotted];
m13_446 -> m13_447  [key=0, style=solid];
m13_446 -> m13_11  [key=2, style=dotted];
m13_447 -> m13_448  [key=0, style=solid];
m13_447 -> m13_264  [key=2, style=dotted];
m13_448 -> m13_449  [key=0, style=solid];
m13_448 -> m13_11  [key=2, style=dotted];
m13_449 -> m13_450  [key=0, style=solid];
m13_449 -> m13_11  [key=2, style=dotted];
m13_450 -> m13_451  [key=0, style=solid];
m13_450 -> m13_11  [key=2, style=dotted];
m13_451 -> m13_452  [key=0, style=solid];
m13_451 -> m13_264  [key=2, style=dotted];
m13_452 -> m13_453  [key=0, style=solid];
m13_452 -> m13_11  [key=2, style=dotted];
m13_453 -> m13_454  [key=0, style=solid];
m13_453 -> m13_11  [key=2, style=dotted];
m13_454 -> m13_455  [key=0, style=solid];
m13_454 -> m13_11  [key=2, style=dotted];
m13_455 -> m13_456  [key=0, style=solid];
m13_455 -> m13_264  [key=2, style=dotted];
m13_456 -> m13_457  [key=0, style=solid];
m13_456 -> m13_11  [key=2, style=dotted];
m13_457 -> m13_458  [key=0, style=solid];
m13_457 -> m13_11  [key=2, style=dotted];
m13_457 -> m13_457  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m13_458 -> m13_459  [key=0, style=solid];
m13_458 -> m13_11  [key=2, style=dotted];
m13_459 -> m13_460  [key=0, style=solid];
m13_459 -> m13_264  [key=2, style=dotted];
m13_460 -> m13_461  [key=0, style=solid];
m13_460 -> m13_11  [key=2, style=dotted];
m13_461 -> m13_462  [key=0, style=solid];
m13_461 -> m13_11  [key=2, style=dotted];
m13_462 -> m13_463  [key=0, style=solid];
m13_462 -> m13_11  [key=2, style=dotted];
m13_463 -> m13_464  [key=0, style=solid];
m13_463 -> m13_264  [key=2, style=dotted];
m13_464 -> m13_465  [key=0, style=solid];
m13_464 -> m13_11  [key=2, style=dotted];
m13_465 -> m13_466  [key=0, style=solid];
m13_465 -> m13_11  [key=2, style=dotted];
m13_466 -> m13_467  [key=0, style=solid];
m13_466 -> m13_11  [key=2, style=dotted];
m13_467 -> m13_468  [key=0, style=solid];
m13_467 -> m13_264  [key=2, style=dotted];
m13_468 -> m13_469  [key=0, style=solid];
m13_468 -> m13_11  [key=2, style=dotted];
m13_469 -> m13_470  [key=0, style=solid];
m13_469 -> m13_11  [key=2, style=dotted];
m13_470 -> m13_471  [key=0, style=solid];
m13_470 -> m13_11  [key=2, style=dotted];
m13_471 -> m13_375  [color=blue, key=0, style=bold];
m13_659 -> m13_660  [key=0, style=solid];
m13_660 -> m13_661  [key=0, style=solid];
m13_661 -> m13_662  [key=0, style=solid];
m13_661 -> m13_243  [key=2, style=dotted];
m13_662 -> m13_663  [key=0, style=solid];
m13_662 -> m13_8  [key=2, style=dotted];
m13_662 -> m13_9  [key=2, style=dotted];
m13_662 -> m13_665  [key=2, style=dotted];
m13_662 -> m13_667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_663 -> m13_664  [key=0, style=solid];
m13_663 -> m13_57  [key=2, style=dotted];
m13_663 -> m13_666  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_664 -> m13_659  [color=blue, key=0, style=bold];
m13_1625 -> m13_1626  [key=0, style=solid];
m13_1626 -> m13_1627  [key=0, style=solid];
m13_1627 -> m13_1628  [key=0, style=solid];
m13_1627 -> m13_8  [key=2, style=dotted];
m13_1627 -> m13_9  [key=2, style=dotted];
m13_1627 -> m13_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1627 -> m13_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1627 -> m13_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1628 -> m13_1629  [key=0, style=solid];
m13_1628 -> m13_10  [key=2, style=dotted];
m13_1628 -> m13_19  [key=2, style=dotted];
m13_1629 -> m13_1630  [key=0, style=solid];
m13_1629 -> m13_11  [key=2, style=dotted];
m13_1630 -> m13_1631  [key=0, style=solid];
m13_1630 -> m13_10  [key=2, style=dotted];
m13_1630 -> m13_19  [key=2, style=dotted];
m13_1631 -> m13_1632  [key=0, style=solid];
m13_1631 -> m13_11  [key=2, style=dotted];
m13_1632 -> m13_1625  [color=blue, key=0, style=bold];
m13_592 -> m13_593  [key=0, style=solid];
m13_593 -> m13_594  [key=0, style=solid];
m13_593 -> m13_605  [key=2, style=dotted];
m13_593 -> m13_599  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_594 -> m13_595  [key=0, style=solid];
m13_594 -> m13_8  [key=2, style=dotted];
m13_594 -> m13_606  [key=2, style=dotted];
m13_594 -> m13_607  [key=2, style=dotted];
m13_594 -> m13_596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_599 -> m13_600  [key=0, style=solid];
m13_599 -> m13_599  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_595 -> m13_596  [key=0, style=solid];
m13_595 -> m13_10  [key=2, style=dotted];
m13_596 -> m13_597  [key=0, style=solid];
m13_596 -> m13_11  [key=2, style=dotted];
m13_597 -> m13_598  [key=0, style=solid];
m13_597 -> m13_599  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_597 -> m13_603  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_597 -> m13_17  [color=darkorchid, key=3, label="Local variable XmlNode node", style=bold];
m13_598 -> m13_599  [key=0, style=solid];
m13_598 -> m13_604  [key=0, style=solid];
m13_603 -> m13_598  [key=0, style=solid];
m13_603 -> m13_603  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_600 -> m13_601  [key=0, style=solid];
m13_600 -> m13_8  [key=2, style=dotted];
m13_600 -> m13_606  [key=2, style=dotted];
m13_600 -> m13_607  [key=2, style=dotted];
m13_600 -> m13_602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_601 -> m13_602  [key=0, style=solid];
m13_601 -> m13_10  [key=2, style=dotted];
m13_602 -> m13_603  [key=0, style=solid];
m13_602 -> m13_11  [key=2, style=dotted];
m13_604 -> m13_592  [color=blue, key=0, style=bold];
m13_1261 -> m13_1262  [key=0, style=solid];
m13_1262 -> m13_1263  [key=0, style=solid];
m13_1263 -> m13_1264  [key=0, style=solid];
m13_1263 -> m13_8  [key=2, style=dotted];
m13_1263 -> m13_9  [key=2, style=dotted];
m13_1263 -> m13_1265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1263 -> m13_1273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1264 -> m13_1265  [key=0, style=solid];
m13_1264 -> m13_10  [key=2, style=dotted];
m13_1264 -> m13_19  [key=2, style=dotted];
m13_1265 -> m13_1266  [key=0, style=solid];
m13_1265 -> m13_11  [key=2, style=dotted];
m13_1266 -> m13_1267  [key=0, style=solid];
m13_1266 -> m13_10  [key=2, style=dotted];
m13_1266 -> m13_19  [key=2, style=dotted];
m13_1267 -> m13_1268  [key=0, style=solid];
m13_1267 -> m13_11  [key=2, style=dotted];
m13_1268 -> m13_1269  [key=0, style=solid];
m13_1268 -> m13_1190  [key=2, style=dotted];
m13_1269 -> m13_1270  [key=0, style=solid];
m13_1269 -> m13_11  [key=2, style=dotted];
m13_1270 -> m13_1271  [key=0, style=solid];
m13_1270 -> m13_11  [key=2, style=dotted];
m13_1271 -> m13_1272  [key=0, style=solid];
m13_1271 -> m13_1275  [key=2, style=dotted];
m13_1271 -> m13_1276  [key=2, style=dotted];
m13_1271 -> m13_1277  [key=2, style=dotted];
m13_1271 -> m13_11  [key=2, style=dotted];
m13_1272 -> m13_1273  [key=0, style=solid];
m13_1272 -> m13_10  [key=2, style=dotted];
m13_1272 -> m13_19  [key=2, style=dotted];
m13_1273 -> m13_1274  [key=0, style=solid];
m13_1273 -> m13_11  [key=2, style=dotted];
m13_1274 -> m13_1261  [color=blue, key=0, style=bold];
m13_775 -> m13_776  [key=0, style=solid];
m13_776 -> m13_777  [key=0, style=solid];
m13_777 -> m13_778  [key=0, style=solid];
m13_777 -> m13_9  [key=2, style=dotted];
m13_778 -> m13_779  [key=0, style=solid];
m13_778 -> m13_8  [key=2, style=dotted];
m13_778 -> m13_780  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_781  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_782  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_783  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_784  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_785  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_786  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_787  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_788  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_789  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_790  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_791  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_792  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_778 -> m13_793  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_779 -> m13_780  [key=0, style=solid];
m13_779 -> m13_11  [key=2, style=dotted];
m13_780 -> m13_781  [key=0, style=solid];
m13_780 -> m13_264  [key=2, style=dotted];
m13_781 -> m13_782  [key=0, style=solid];
m13_781 -> m13_11  [key=2, style=dotted];
m13_782 -> m13_783  [key=0, style=solid];
m13_782 -> m13_11  [key=2, style=dotted];
m13_783 -> m13_784  [key=0, style=solid];
m13_783 -> m13_264  [key=2, style=dotted];
m13_784 -> m13_785  [key=0, style=solid];
m13_784 -> m13_11  [key=2, style=dotted];
m13_785 -> m13_786  [key=0, style=solid];
m13_785 -> m13_11  [key=2, style=dotted];
m13_786 -> m13_787  [key=0, style=solid];
m13_786 -> m13_264  [key=2, style=dotted];
m13_787 -> m13_788  [key=0, style=solid];
m13_787 -> m13_11  [key=2, style=dotted];
m13_788 -> m13_789  [key=0, style=solid];
m13_788 -> m13_11  [key=2, style=dotted];
m13_789 -> m13_790  [key=0, style=solid];
m13_789 -> m13_11  [key=2, style=dotted];
m13_790 -> m13_791  [key=0, style=solid];
m13_790 -> m13_11  [key=2, style=dotted];
m13_791 -> m13_792  [key=0, style=solid];
m13_791 -> m13_264  [key=2, style=dotted];
m13_792 -> m13_793  [key=0, style=solid];
m13_792 -> m13_11  [key=2, style=dotted];
m13_793 -> m13_794  [key=0, style=solid];
m13_793 -> m13_11  [key=2, style=dotted];
m13_794 -> m13_775  [color=blue, key=0, style=bold];
m13_1813 -> m13_1814  [key=0, style=solid];
m13_1814 -> m13_1815  [key=0, style=solid];
m13_1815 -> m13_1816  [key=0, style=solid];
m13_1815 -> m13_8  [key=2, style=dotted];
m13_1815 -> m13_9  [key=2, style=dotted];
m13_1815 -> m13_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1815 -> m13_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1816 -> m13_1817  [key=0, style=solid];
m13_1816 -> m13_130  [key=2, style=dotted];
m13_1817 -> m13_1818  [key=0, style=solid];
m13_1817 -> m13_11  [key=2, style=dotted];
m13_1818 -> m13_1819  [key=0, style=solid];
m13_1818 -> m13_11  [key=2, style=dotted];
m13_1819 -> m13_1813  [color=blue, key=0, style=bold];
m13_576 -> m13_577  [key=0, style=solid];
m13_577 -> m13_578  [key=0, style=solid];
m13_577 -> m13_581  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_577 -> m13_584  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_578 -> m13_579  [key=0, style=solid];
m13_578 -> m13_8  [key=2, style=dotted];
m13_578 -> m13_9  [key=2, style=dotted];
m13_578 -> m13_571  [key=2, style=dotted];
m13_578 -> m13_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_578 -> m13_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_578 -> m13_585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_581 -> m13_582  [key=0, style=solid];
m13_581 -> m13_11  [key=2, style=dotted];
m13_584 -> m13_585  [key=0, style=solid];
m13_584 -> m13_589  [color=darkseagreen4, key=1, label=total, style=dashed];
m13_579 -> m13_580  [key=0, style=solid];
m13_579 -> m13_10  [key=2, style=dotted];
m13_580 -> m13_581  [key=0, style=solid];
m13_580 -> m13_11  [key=2, style=dotted];
m13_585 -> m13_586  [key=0, style=solid];
m13_585 -> m13_57  [key=2, style=dotted];
m13_585 -> m13_588  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_582 -> m13_583  [key=0, style=solid];
m13_582 -> m13_584  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_582 -> m13_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_583 -> m13_584  [key=0, style=solid];
m13_583 -> m13_587  [key=0, style=solid];
m13_586 -> m13_583  [key=0, style=solid];
m13_586 -> m13_586  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_587 -> m13_576  [color=blue, key=0, style=bold];
m13_2100 -> m13_2101  [key=0, style=solid];
m13_2100 -> m13_2103  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m13_2101 -> m13_2102  [key=0, style=solid];
m13_2101 -> m13_2103  [key=0, style=solid];
m13_2103 -> m13_2104  [key=0, style=solid];
m13_2103 -> m13_2106  [key=2, style=dotted];
m13_2102 -> m13_2104  [key=0, style=solid];
m13_2102 -> m13_2105  [key=2, style=dotted];
m13_2104 -> m13_2100  [color=blue, key=0, style=bold];
m13_729 -> m13_730  [key=0, style=solid];
m13_730 -> m13_731  [key=0, style=solid];
m13_730 -> m13_8  [key=2, style=dotted];
m13_730 -> m13_9  [key=2, style=dotted];
m13_730 -> m13_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_730 -> m13_740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_731 -> m13_732  [key=0, style=solid];
m13_731 -> m13_264  [key=2, style=dotted];
m13_731 -> m13_19  [key=2, style=dotted];
m13_732 -> m13_733  [key=0, style=solid];
m13_732 -> m13_264  [key=2, style=dotted];
m13_732 -> m13_19  [key=2, style=dotted];
m13_733 -> m13_734  [key=0, style=solid];
m13_733 -> m13_11  [key=2, style=dotted];
m13_734 -> m13_735  [key=0, style=solid];
m13_734 -> m13_11  [key=2, style=dotted];
m13_735 -> m13_736  [key=0, style=solid];
m13_735 -> m13_264  [key=2, style=dotted];
m13_735 -> m13_19  [key=2, style=dotted];
m13_736 -> m13_737  [key=0, style=solid];
m13_736 -> m13_11  [key=2, style=dotted];
m13_737 -> m13_738  [key=0, style=solid];
m13_737 -> m13_11  [key=2, style=dotted];
m13_738 -> m13_739  [key=0, style=solid];
m13_738 -> m13_264  [key=2, style=dotted];
m13_738 -> m13_19  [key=2, style=dotted];
m13_739 -> m13_740  [key=0, style=solid];
m13_739 -> m13_11  [key=2, style=dotted];
m13_740 -> m13_741  [key=0, style=solid];
m13_740 -> m13_264  [key=2, style=dotted];
m13_740 -> m13_43  [key=2, style=dotted];
m13_741 -> m13_729  [color=blue, key=0, style=bold];
m13_1602 -> m13_1603  [key=0, style=solid];
m13_1603 -> m13_1604  [key=0, style=solid];
m13_1604 -> m13_1605  [key=0, style=solid];
m13_1604 -> m13_8  [key=2, style=dotted];
m13_1604 -> m13_9  [key=2, style=dotted];
m13_1604 -> m13_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1604 -> m13_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1604 -> m13_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1605 -> m13_1606  [key=0, style=solid];
m13_1605 -> m13_10  [key=2, style=dotted];
m13_1605 -> m13_19  [key=2, style=dotted];
m13_1606 -> m13_1607  [key=0, style=solid];
m13_1606 -> m13_11  [key=2, style=dotted];
m13_1607 -> m13_1608  [key=0, style=solid];
m13_1607 -> m13_10  [key=2, style=dotted];
m13_1607 -> m13_19  [key=2, style=dotted];
m13_1608 -> m13_1609  [key=0, style=solid];
m13_1608 -> m13_11  [key=2, style=dotted];
m13_1609 -> m13_1602  [color=blue, key=0, style=bold];
m13_1586 -> m13_1587  [key=0, style=solid];
m13_1587 -> m13_1588  [key=0, style=solid];
m13_1588 -> m13_1589  [key=0, style=solid];
m13_1588 -> m13_8  [key=2, style=dotted];
m13_1588 -> m13_9  [key=2, style=dotted];
m13_1588 -> m13_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1589 -> m13_1590  [key=0, style=solid];
m13_1589 -> m13_57  [key=2, style=dotted];
m13_1589 -> m13_1591  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1590 -> m13_1586  [color=blue, key=0, style=bold];
m13_282 -> m13_2112  [key=0, style=solid];
m13_2112 -> m13_282  [color=blue, key=0, style=bold];
m13_550 -> m13_551  [key=0, style=solid];
m13_551 -> m13_552  [key=0, style=solid];
m13_551 -> m13_551  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m13_552 -> m13_553  [key=0, style=solid];
m13_552 -> m13_8  [key=2, style=dotted];
m13_552 -> m13_9  [key=2, style=dotted];
m13_552 -> m13_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_552 -> m13_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_552 -> m13_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_553 -> m13_554  [key=0, style=solid];
m13_553 -> m13_556  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_555 -> m13_556  [key=0, style=solid];
m13_555 -> m13_10  [key=2, style=dotted];
m13_557 -> m13_558  [key=0, style=solid];
m13_557 -> m13_10  [key=2, style=dotted];
m13_558 -> m13_559  [key=0, style=solid];
m13_558 -> m13_11  [key=2, style=dotted];
m13_554 -> m13_555  [key=0, style=solid];
m13_554 -> m13_557  [key=0, style=solid];
m13_556 -> m13_554  [key=0, style=solid];
m13_556 -> m13_556  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_559 -> m13_550  [color=blue, key=0, style=bold];
m13_795 -> m13_796  [key=0, style=solid];
m13_796 -> m13_797  [key=0, style=solid];
m13_797 -> m13_798  [key=0, style=solid];
m13_797 -> m13_799  [key=2, style=dotted];
m13_798 -> m13_795  [color=blue, key=0, style=bold];
m13_1394 -> m13_1395  [key=0, style=solid];
m13_1395 -> m13_1396  [key=0, style=solid];
m13_1396 -> m13_1397  [key=0, style=solid];
m13_1396 -> m13_8  [key=2, style=dotted];
m13_1396 -> m13_9  [key=2, style=dotted];
m13_1396 -> m13_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1396 -> m13_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1397 -> m13_1398  [key=0, style=solid];
m13_1397 -> m13_10  [key=2, style=dotted];
m13_1397 -> m13_19  [key=2, style=dotted];
m13_1398 -> m13_1399  [key=0, style=solid];
m13_1398 -> m13_11  [key=2, style=dotted];
m13_1399 -> m13_1400  [key=0, style=solid];
m13_1399 -> m13_10  [key=2, style=dotted];
m13_1399 -> m13_19  [key=2, style=dotted];
m13_1400 -> m13_1401  [key=0, style=solid];
m13_1400 -> m13_11  [key=2, style=dotted];
m13_1401 -> m13_1402  [key=0, style=solid];
m13_1401 -> m13_57  [key=2, style=dotted];
m13_1401 -> m13_1403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1402 -> m13_1394  [color=blue, key=0, style=bold];
m13_1528 -> m13_1529  [key=0, style=solid];
m13_1529 -> m13_1530  [key=0, style=solid];
m13_1529 -> m13_8  [key=2, style=dotted];
m13_1529 -> m13_9  [key=2, style=dotted];
m13_1529 -> m13_1531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1529 -> m13_1569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1530 -> m13_1531  [key=0, style=solid];
m13_1531 -> m13_1532  [key=0, style=solid];
m13_1531 -> m13_10  [key=2, style=dotted];
m13_1531 -> m13_19  [key=2, style=dotted];
m13_1532 -> m13_1533  [key=0, style=solid];
m13_1532 -> m13_11  [key=2, style=dotted];
m13_1533 -> m13_1534  [key=0, style=solid];
m13_1533 -> m13_10  [key=2, style=dotted];
m13_1533 -> m13_19  [key=2, style=dotted];
m13_1534 -> m13_1535  [key=0, style=solid];
m13_1534 -> m13_11  [key=2, style=dotted];
m13_1535 -> m13_1536  [key=0, style=solid];
m13_1535 -> m13_10  [key=2, style=dotted];
m13_1535 -> m13_19  [key=2, style=dotted];
m13_1536 -> m13_1537  [key=0, style=solid];
m13_1536 -> m13_11  [key=2, style=dotted];
m13_1537 -> m13_1538  [key=0, style=solid];
m13_1537 -> m13_10  [key=2, style=dotted];
m13_1537 -> m13_19  [key=2, style=dotted];
m13_1538 -> m13_1539  [key=0, style=solid];
m13_1538 -> m13_11  [key=2, style=dotted];
m13_1539 -> m13_1540  [key=0, style=solid];
m13_1539 -> m13_10  [key=2, style=dotted];
m13_1539 -> m13_19  [key=2, style=dotted];
m13_1540 -> m13_1541  [key=0, style=solid];
m13_1540 -> m13_11  [key=2, style=dotted];
m13_1541 -> m13_1542  [key=0, style=solid];
m13_1541 -> m13_10  [key=2, style=dotted];
m13_1541 -> m13_19  [key=2, style=dotted];
m13_1542 -> m13_1543  [key=0, style=solid];
m13_1542 -> m13_11  [key=2, style=dotted];
m13_1543 -> m13_1544  [key=0, style=solid];
m13_1543 -> m13_10  [key=2, style=dotted];
m13_1543 -> m13_19  [key=2, style=dotted];
m13_1544 -> m13_1545  [key=0, style=solid];
m13_1544 -> m13_11  [key=2, style=dotted];
m13_1545 -> m13_1546  [key=0, style=solid];
m13_1545 -> m13_10  [key=2, style=dotted];
m13_1545 -> m13_19  [key=2, style=dotted];
m13_1546 -> m13_1547  [key=0, style=solid];
m13_1546 -> m13_11  [key=2, style=dotted];
m13_1547 -> m13_1548  [key=0, style=solid];
m13_1547 -> m13_10  [key=2, style=dotted];
m13_1547 -> m13_19  [key=2, style=dotted];
m13_1548 -> m13_1549  [key=0, style=solid];
m13_1548 -> m13_11  [key=2, style=dotted];
m13_1549 -> m13_1550  [key=0, style=solid];
m13_1549 -> m13_10  [key=2, style=dotted];
m13_1549 -> m13_19  [key=2, style=dotted];
m13_1550 -> m13_1551  [key=0, style=solid];
m13_1550 -> m13_11  [key=2, style=dotted];
m13_1551 -> m13_1552  [key=0, style=solid];
m13_1551 -> m13_10  [key=2, style=dotted];
m13_1551 -> m13_19  [key=2, style=dotted];
m13_1552 -> m13_1553  [key=0, style=solid];
m13_1552 -> m13_11  [key=2, style=dotted];
m13_1553 -> m13_1554  [key=0, style=solid];
m13_1553 -> m13_10  [key=2, style=dotted];
m13_1553 -> m13_19  [key=2, style=dotted];
m13_1554 -> m13_1555  [key=0, style=solid];
m13_1554 -> m13_11  [key=2, style=dotted];
m13_1555 -> m13_1556  [key=0, style=solid];
m13_1555 -> m13_10  [key=2, style=dotted];
m13_1555 -> m13_19  [key=2, style=dotted];
m13_1556 -> m13_1557  [key=0, style=solid];
m13_1556 -> m13_11  [key=2, style=dotted];
m13_1557 -> m13_1558  [key=0, style=solid];
m13_1557 -> m13_10  [key=2, style=dotted];
m13_1557 -> m13_19  [key=2, style=dotted];
m13_1558 -> m13_1559  [key=0, style=solid];
m13_1558 -> m13_11  [key=2, style=dotted];
m13_1559 -> m13_1560  [key=0, style=solid];
m13_1559 -> m13_10  [key=2, style=dotted];
m13_1559 -> m13_19  [key=2, style=dotted];
m13_1560 -> m13_1561  [key=0, style=solid];
m13_1560 -> m13_11  [key=2, style=dotted];
m13_1561 -> m13_1562  [key=0, style=solid];
m13_1561 -> m13_10  [key=2, style=dotted];
m13_1561 -> m13_19  [key=2, style=dotted];
m13_1562 -> m13_1563  [key=0, style=solid];
m13_1562 -> m13_11  [key=2, style=dotted];
m13_1563 -> m13_1564  [key=0, style=solid];
m13_1563 -> m13_10  [key=2, style=dotted];
m13_1563 -> m13_19  [key=2, style=dotted];
m13_1564 -> m13_1565  [key=0, style=solid];
m13_1564 -> m13_11  [key=2, style=dotted];
m13_1565 -> m13_1566  [key=0, style=solid];
m13_1565 -> m13_10  [key=2, style=dotted];
m13_1565 -> m13_19  [key=2, style=dotted];
m13_1566 -> m13_1567  [key=0, style=solid];
m13_1566 -> m13_11  [key=2, style=dotted];
m13_1567 -> m13_1568  [key=0, style=solid];
m13_1567 -> m13_10  [key=2, style=dotted];
m13_1567 -> m13_19  [key=2, style=dotted];
m13_1568 -> m13_1569  [key=0, style=solid];
m13_1568 -> m13_11  [key=2, style=dotted];
m13_1569 -> m13_1570  [key=0, style=solid];
m13_1569 -> m13_10  [key=2, style=dotted];
m13_1569 -> m13_43  [key=2, style=dotted];
m13_1570 -> m13_1528  [color=blue, key=0, style=bold];
m13_1790 -> m13_1791  [key=0, style=solid];
m13_1791 -> m13_1792  [key=0, style=solid];
m13_1792 -> m13_1793  [key=0, style=solid];
m13_1792 -> m13_8  [key=2, style=dotted];
m13_1792 -> m13_244  [key=2, style=dotted];
m13_1792 -> m13_282  [key=2, style=dotted];
m13_1792 -> m13_283  [key=2, style=dotted];
m13_1792 -> m13_1794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1792 -> m13_1795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1792 -> m13_1796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1793 -> m13_1794  [key=0, style=solid];
m13_1793 -> m13_10  [key=2, style=dotted];
m13_1793 -> m13_19  [key=2, style=dotted];
m13_1794 -> m13_1795  [key=0, style=solid];
m13_1794 -> m13_11  [key=2, style=dotted];
m13_1795 -> m13_1796  [key=0, style=solid];
m13_1795 -> m13_11  [key=2, style=dotted];
m13_1796 -> m13_1797  [key=0, style=solid];
m13_1796 -> m13_10  [key=2, style=dotted];
m13_1796 -> m13_43  [key=2, style=dotted];
m13_1797 -> m13_1790  [color=blue, key=0, style=bold];
m13_2125 -> m13_2126  [key=0, style=solid];
m13_2126 -> m13_2127  [key=0, style=solid];
m13_2126 -> m13_2128  [key=2, style=dotted];
m13_2127 -> m13_2125  [color=blue, key=0, style=bold];
m13_1806 -> m13_1807  [key=0, style=solid];
m13_1807 -> m13_1808  [key=0, style=solid];
m13_1808 -> m13_1809  [key=0, style=solid];
m13_1808 -> m13_8  [key=2, style=dotted];
m13_1808 -> m13_9  [key=2, style=dotted];
m13_1808 -> m13_1810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1808 -> m13_1811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1809 -> m13_1810  [key=0, style=solid];
m13_1809 -> m13_130  [key=2, style=dotted];
m13_1810 -> m13_1811  [key=0, style=solid];
m13_1810 -> m13_11  [key=2, style=dotted];
m13_1811 -> m13_1812  [key=0, style=solid];
m13_1811 -> m13_11  [key=2, style=dotted];
m13_1812 -> m13_1806  [color=blue, key=0, style=bold];
m13_1076 -> m13_1077  [key=0, style=solid];
m13_1077 -> m13_1078  [key=0, style=solid];
m13_1078 -> m13_1079  [key=0, style=solid];
m13_1078 -> m13_8  [key=2, style=dotted];
m13_1078 -> m13_9  [key=2, style=dotted];
m13_1078 -> m13_1080  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1082  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1083  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1084  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1078 -> m13_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1079 -> m13_1080  [key=0, style=solid];
m13_1079 -> m13_10  [key=2, style=dotted];
m13_1080 -> m13_1081  [key=0, style=solid];
m13_1080 -> m13_11  [key=2, style=dotted];
m13_1081 -> m13_1082  [key=0, style=solid];
m13_1081 -> m13_10  [key=2, style=dotted];
m13_1082 -> m13_1083  [key=0, style=solid];
m13_1082 -> m13_11  [key=2, style=dotted];
m13_1083 -> m13_1084  [key=0, style=solid];
m13_1083 -> m13_10  [key=2, style=dotted];
m13_1084 -> m13_1085  [key=0, style=solid];
m13_1084 -> m13_11  [key=2, style=dotted];
m13_1085 -> m13_1086  [key=0, style=solid];
m13_1085 -> m13_57  [key=2, style=dotted];
m13_1085 -> m13_1087  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1086 -> m13_1076  [color=blue, key=0, style=bold];
m13_1610 -> m13_1611  [key=0, style=solid];
m13_1611 -> m13_1612  [key=0, style=solid];
m13_1612 -> m13_1613  [key=0, style=solid];
m13_1612 -> m13_8  [key=2, style=dotted];
m13_1612 -> m13_9  [key=2, style=dotted];
m13_1612 -> m13_1614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1612 -> m13_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1612 -> m13_1616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1613 -> m13_1614  [key=0, style=solid];
m13_1613 -> m13_10  [key=2, style=dotted];
m13_1613 -> m13_19  [key=2, style=dotted];
m13_1614 -> m13_1615  [key=0, style=solid];
m13_1614 -> m13_11  [key=2, style=dotted];
m13_1615 -> m13_1616  [key=0, style=solid];
m13_1615 -> m13_10  [key=2, style=dotted];
m13_1615 -> m13_19  [key=2, style=dotted];
m13_1616 -> m13_1617  [key=0, style=solid];
m13_1616 -> m13_11  [key=2, style=dotted];
m13_1617 -> m13_1610  [color=blue, key=0, style=bold];
m13_1090 -> m13_1091  [key=0, style=solid];
m13_1091 -> m13_1092  [key=0, style=solid];
m13_1091 -> m13_9  [key=2, style=dotted];
m13_1092 -> m13_1093  [key=0, style=solid];
m13_1092 -> m13_8  [key=2, style=dotted];
m13_1093 -> m13_1094  [key=0, style=solid];
m13_1093 -> m13_100  [key=2, style=dotted];
m13_1093 -> m13_1095  [color=darkseagreen4, key=1, label=data, style=dashed];
m13_1094 -> m13_1095  [key=0, style=solid];
m13_1094 -> m13_1098  [key=2, style=dotted];
m13_1095 -> m13_1096  [key=0, style=solid];
m13_1095 -> m13_1099  [key=2, style=dotted];
m13_1096 -> m13_1097  [key=0, style=solid];
m13_1096 -> m13_11  [key=2, style=dotted];
m13_1097 -> m13_1090  [color=blue, key=0, style=bold];
m13_485 -> m13_486  [key=0, style=solid];
m13_486 -> m13_487  [key=0, style=solid];
m13_486 -> m13_491  [key=2, style=dotted];
m13_486 -> m13_489  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_487 -> m13_488  [key=0, style=solid];
m13_487 -> m13_8  [key=2, style=dotted];
m13_487 -> m13_9  [key=2, style=dotted];
m13_487 -> m13_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_489 -> m13_490  [key=0, style=solid];
m13_489 -> m13_11  [key=2, style=dotted];
m13_488 -> m13_489  [key=0, style=solid];
m13_488 -> m13_264  [key=2, style=dotted];
m13_488 -> m13_488  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m13_490 -> m13_485  [color=blue, key=0, style=bold];
m13_2129 -> m13_2130  [key=0, style=solid];
m13_2130 -> m13_2131  [key=0, style=solid];
m13_2130 -> m13_2128  [key=2, style=dotted];
m13_2131 -> m13_2129  [color=blue, key=0, style=bold];
m13_1178 -> m13_1179  [key=0, style=solid];
m13_1179 -> m13_1180  [key=0, style=solid];
m13_1179 -> m13_8  [key=2, style=dotted];
m13_1179 -> m13_9  [key=2, style=dotted];
m13_1179 -> m13_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1180 -> m13_1181  [key=0, style=solid];
m13_1180 -> m13_57  [key=2, style=dotted];
m13_1180 -> m13_1182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1181 -> m13_1178  [color=blue, key=0, style=bold];
m13_1618 -> m13_1619  [key=0, style=solid];
m13_1619 -> m13_1620  [key=0, style=solid];
m13_1619 -> m13_8  [key=2, style=dotted];
m13_1619 -> m13_9  [key=2, style=dotted];
m13_1619 -> m13_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1620 -> m13_1621  [key=0, style=solid];
m13_1620 -> m13_57  [key=2, style=dotted];
m13_1620 -> m13_1622  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1621 -> m13_1618  [color=blue, key=0, style=bold];
m13_742 -> m13_743  [key=0, style=solid];
m13_743 -> m13_744  [key=0, style=solid];
m13_744 -> m13_745  [key=0, style=solid];
m13_744 -> m13_243  [key=2, style=dotted];
m13_744 -> m13_751  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m13_745 -> m13_746  [key=0, style=solid];
m13_745 -> m13_8  [key=2, style=dotted];
m13_745 -> m13_9  [key=2, style=dotted];
m13_745 -> m13_665  [key=2, style=dotted];
m13_745 -> m13_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_745 -> m13_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_751 -> m13_752  [key=0, style=solid];
m13_751 -> m13_757  [key=2, style=dotted];
m13_746 -> m13_747  [key=0, style=solid];
m13_746 -> m13_264  [key=2, style=dotted];
m13_746 -> m13_19  [key=2, style=dotted];
m13_747 -> m13_748  [key=0, style=solid];
m13_747 -> m13_11  [key=2, style=dotted];
m13_748 -> m13_749  [key=0, style=solid];
m13_748 -> m13_264  [key=2, style=dotted];
m13_748 -> m13_19  [key=2, style=dotted];
m13_749 -> m13_750  [key=0, style=solid];
m13_749 -> m13_11  [key=2, style=dotted];
m13_750 -> m13_751  [key=0, style=solid];
m13_750 -> m13_658  [key=2, style=dotted];
m13_752 -> m13_753  [key=0, style=solid];
m13_752 -> m13_11  [key=2, style=dotted];
m13_753 -> m13_754  [key=0, style=solid];
m13_753 -> m13_264  [key=2, style=dotted];
m13_753 -> m13_19  [key=2, style=dotted];
m13_754 -> m13_755  [key=0, style=solid];
m13_754 -> m13_11  [key=2, style=dotted];
m13_755 -> m13_756  [key=0, style=solid];
m13_755 -> m13_264  [key=2, style=dotted];
m13_755 -> m13_43  [key=2, style=dotted];
m13_756 -> m13_742  [color=blue, key=0, style=bold];
m13_187 -> m13_188  [key=0, style=solid];
m13_188 -> m13_189  [key=0, style=solid];
m13_189 -> m13_190  [key=0, style=solid];
m13_189 -> m13_8  [key=2, style=dotted];
m13_189 -> m13_9  [key=2, style=dotted];
m13_189 -> m13_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_189 -> m13_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_190 -> m13_191  [key=0, style=solid];
m13_190 -> m13_10  [key=2, style=dotted];
m13_190 -> m13_19  [key=2, style=dotted];
m13_191 -> m13_192  [key=0, style=solid];
m13_191 -> m13_11  [key=2, style=dotted];
m13_192 -> m13_193  [key=0, style=solid];
m13_192 -> m13_10  [key=2, style=dotted];
m13_192 -> m13_19  [key=2, style=dotted];
m13_193 -> m13_194  [key=0, style=solid];
m13_193 -> m13_11  [key=2, style=dotted];
m13_194 -> m13_195  [key=0, style=solid];
m13_194 -> m13_10  [key=2, style=dotted];
m13_194 -> m13_19  [key=2, style=dotted];
m13_195 -> m13_196  [key=0, style=solid];
m13_195 -> m13_11  [key=2, style=dotted];
m13_196 -> m13_197  [key=0, style=solid];
m13_196 -> m13_10  [key=2, style=dotted];
m13_196 -> m13_19  [key=2, style=dotted];
m13_197 -> m13_198  [key=0, style=solid];
m13_197 -> m13_11  [key=2, style=dotted];
m13_198 -> m13_199  [key=0, style=solid];
m13_198 -> m13_10  [key=2, style=dotted];
m13_198 -> m13_19  [key=2, style=dotted];
m13_199 -> m13_200  [key=0, style=solid];
m13_199 -> m13_11  [key=2, style=dotted];
m13_200 -> m13_201  [key=0, style=solid];
m13_200 -> m13_10  [key=2, style=dotted];
m13_200 -> m13_19  [key=2, style=dotted];
m13_201 -> m13_202  [key=0, style=solid];
m13_201 -> m13_11  [key=2, style=dotted];
m13_202 -> m13_203  [key=0, style=solid];
m13_202 -> m13_11  [key=2, style=dotted];
m13_203 -> m13_204  [key=0, style=solid];
m13_203 -> m13_10  [key=2, style=dotted];
m13_203 -> m13_19  [key=2, style=dotted];
m13_204 -> m13_205  [key=0, style=solid];
m13_204 -> m13_11  [key=2, style=dotted];
m13_205 -> m13_206  [key=0, style=solid];
m13_205 -> m13_11  [key=2, style=dotted];
m13_206 -> m13_187  [color=blue, key=0, style=bold];
m13_2072 -> m13_2073  [key=0, style=solid];
m13_2073 -> m13_2074  [key=0, style=solid];
m13_2073 -> m13_513  [key=2, style=dotted];
m13_2073 -> m13_2079  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_2074 -> m13_2075  [key=0, style=solid];
m13_2074 -> m13_514  [key=2, style=dotted];
m13_2074 -> m13_2076  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_2074 -> m13_2077  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_2074 -> m13_2078  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_2079 -> m13_2080  [key=0, style=solid];
m13_2079 -> m13_518  [key=2, style=dotted];
m13_2075 -> m13_2076  [key=0, style=solid];
m13_2075 -> m13_515  [key=2, style=dotted];
m13_2076 -> m13_2077  [key=0, style=solid];
m13_2076 -> m13_2089  [key=2, style=dotted];
m13_2077 -> m13_2078  [key=0, style=solid];
m13_2077 -> m13_2089  [key=2, style=dotted];
m13_2078 -> m13_2079  [key=0, style=solid];
m13_2078 -> m13_517  [key=2, style=dotted];
m13_2080 -> m13_2081  [key=0, style=solid];
m13_2080 -> m13_9  [key=2, style=dotted];
m13_2081 -> m13_2082  [key=0, style=solid];
m13_2081 -> m13_8  [key=2, style=dotted];
m13_2081 -> m13_2083  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2081 -> m13_2085  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2081 -> m13_2087  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2082 -> m13_2083  [key=0, style=solid];
m13_2082 -> m13_10  [key=2, style=dotted];
m13_2082 -> m13_19  [key=2, style=dotted];
m13_2083 -> m13_2084  [key=0, style=solid];
m13_2083 -> m13_130  [key=2, style=dotted];
m13_2085 -> m13_2086  [key=0, style=solid];
m13_2085 -> m13_130  [key=2, style=dotted];
m13_2087 -> m13_2088  [key=0, style=solid];
m13_2087 -> m13_10  [key=2, style=dotted];
m13_2087 -> m13_19  [key=2, style=dotted];
m13_2084 -> m13_2085  [key=0, style=solid];
m13_2084 -> m13_11  [key=2, style=dotted];
m13_2086 -> m13_2087  [key=0, style=solid];
m13_2086 -> m13_11  [key=2, style=dotted];
m13_2088 -> m13_2072  [color=blue, key=0, style=bold];
m13_2094 -> m13_2095  [key=0, style=solid];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_61  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_60 -> m13_58  [color=blue, key=0, style=bold];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_61  [key=2, style=dotted];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_61  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_61  [key=2, style=dotted];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_61  [key=2, style=dotted];
m13_75 -> m13_76  [key=0, style=solid];
m13_78 -> m13_79  [key=0, style=solid];
m13_81 -> m13_82  [key=0, style=solid];
m13_84 -> m13_85  [key=0, style=solid];
m13_77 -> m13_75  [color=blue, key=0, style=bold];
m13_80 -> m13_78  [color=blue, key=0, style=bold];
m13_83 -> m13_81  [color=blue, key=0, style=bold];
m13_86 -> m13_84  [color=blue, key=0, style=bold];
m13_125 -> m13_126  [key=0, style=solid];
m13_125 -> m13_10  [key=2, style=dotted];
m13_124 -> m13_125  [key=0, style=solid];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_130  [key=2, style=dotted];
m13_127 -> m13_128  [key=0, style=solid];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_61  [key=2, style=dotted];
m13_131 -> m13_132  [key=0, style=solid];
m13_126 -> m13_124  [color=blue, key=0, style=bold];
m13_129 -> m13_127  [color=blue, key=0, style=bold];
m13_133 -> m13_131  [color=blue, key=0, style=bold];
m13_148 -> m13_149  [key=0, style=solid];
m13_148 -> m13_10  [key=2, style=dotted];
m13_147 -> m13_148  [key=0, style=solid];
m13_149 -> m13_147  [color=blue, key=0, style=bold];
m13_185 -> m13_186  [key=0, style=solid];
m13_185 -> m13_10  [key=2, style=dotted];
m13_184 -> m13_185  [key=0, style=solid];
m13_186 -> m13_184  [color=blue, key=0, style=bold];
m13_290 -> m13_290  [key=0, style=solid];
m13_290 -> m13_291  [key=0, style=solid];
m13_290 -> m13_10  [key=2, style=dotted];
m13_289 -> m13_290  [key=0, style=solid];
m13_291 -> m13_289  [color=blue, key=0, style=bold];
m13_308 -> m13_309  [key=0, style=solid];
m13_308 -> m13_10  [key=2, style=dotted];
m13_307 -> m13_308  [key=0, style=solid];
m13_309 -> m13_307  [color=blue, key=0, style=bold];
m13_321 -> m13_321  [key=0, style=solid];
m13_321 -> m13_322  [key=0, style=solid];
m13_321 -> m13_10  [key=2, style=dotted];
m13_320 -> m13_321  [key=0, style=solid];
m13_322 -> m13_320  [color=blue, key=0, style=bold];
m13_475 -> m13_476  [key=0, style=solid];
m13_476 -> m13_477  [key=0, style=solid];
m13_476 -> m13_8  [key=2, style=dotted];
m13_477 -> m13_475  [color=blue, key=0, style=bold];
m13_483 -> m13_484  [key=0, style=solid];
m13_483 -> m13_264  [key=2, style=dotted];
m13_482 -> m13_483  [key=0, style=solid];
m13_484 -> m13_482  [color=blue, key=0, style=bold];
m13_573 -> m13_574  [key=0, style=solid];
m13_573 -> m13_8  [key=2, style=dotted];
m13_573 -> m13_9  [key=2, style=dotted];
m13_573 -> m13_571  [key=2, style=dotted];
m13_572 -> m13_573  [key=0, style=solid];
m13_574 -> m13_575  [key=0, style=solid];
m13_574 -> m13_61  [key=2, style=dotted];
m13_575 -> m13_572  [color=blue, key=0, style=bold];
m13_589 -> m13_590  [key=0, style=solid];
m13_589 -> m13_8  [key=2, style=dotted];
m13_589 -> m13_9  [key=2, style=dotted];
m13_589 -> m13_571  [key=2, style=dotted];
m13_588 -> m13_589  [key=0, style=solid];
m13_590 -> m13_591  [key=0, style=solid];
m13_590 -> m13_61  [key=2, style=dotted];
m13_591 -> m13_588  [color=blue, key=0, style=bold];
m13_642 -> m13_643  [key=0, style=solid];
m13_642 -> m13_264  [key=2, style=dotted];
m13_641 -> m13_642  [key=0, style=solid];
m13_643 -> m13_641  [color=blue, key=0, style=bold];
m13_649 -> m13_650  [key=0, style=solid];
m13_649 -> m13_264  [key=2, style=dotted];
m13_648 -> m13_649  [key=0, style=solid];
m13_650 -> m13_648  [color=blue, key=0, style=bold];
m13_656 -> m13_657  [key=0, style=solid];
m13_656 -> m13_658  [key=2, style=dotted];
m13_655 -> m13_656  [key=0, style=solid];
m13_657 -> m13_655  [color=blue, key=0, style=bold];
m13_667 -> m13_668  [key=0, style=solid];
m13_667 -> m13_658  [key=2, style=dotted];
m13_666 -> m13_667  [key=0, style=solid];
m13_668 -> m13_666  [color=blue, key=0, style=bold];
m13_682 -> m13_683  [key=0, style=solid];
m13_682 -> m13_264  [key=2, style=dotted];
m13_681 -> m13_682  [key=0, style=solid];
m13_683 -> m13_681  [color=blue, key=0, style=bold];
m13_835 -> m13_836  [key=0, style=solid];
m13_835 -> m13_61  [key=2, style=dotted];
m13_834 -> m13_835  [key=0, style=solid];
m13_838 -> m13_839  [key=0, style=solid];
m13_838 -> m13_61  [key=2, style=dotted];
m13_837 -> m13_838  [key=0, style=solid];
m13_841 -> m13_842  [key=0, style=solid];
m13_841 -> m13_61  [key=2, style=dotted];
m13_840 -> m13_841  [key=0, style=solid];
m13_844 -> m13_845  [key=0, style=solid];
m13_844 -> m13_61  [key=2, style=dotted];
m13_843 -> m13_844  [key=0, style=solid];
m13_847 -> m13_848  [key=0, style=solid];
m13_847 -> m13_61  [key=2, style=dotted];
m13_846 -> m13_847  [key=0, style=solid];
m13_836 -> m13_834  [color=blue, key=0, style=bold];
m13_839 -> m13_837  [color=blue, key=0, style=bold];
m13_842 -> m13_840  [color=blue, key=0, style=bold];
m13_845 -> m13_843  [color=blue, key=0, style=bold];
m13_848 -> m13_846  [color=blue, key=0, style=bold];
m13_872 -> m13_873  [key=0, style=solid];
m13_872 -> m13_130  [key=2, style=dotted];
m13_871 -> m13_872  [key=0, style=solid];
m13_875 -> m13_876  [key=0, style=solid];
m13_875 -> m13_10  [key=2, style=dotted];
m13_874 -> m13_875  [key=0, style=solid];
m13_878 -> m13_879  [key=0, style=solid];
m13_878 -> m13_130  [key=2, style=dotted];
m13_877 -> m13_878  [key=0, style=solid];
m13_873 -> m13_871  [color=blue, key=0, style=bold];
m13_876 -> m13_874  [color=blue, key=0, style=bold];
m13_879 -> m13_877  [color=blue, key=0, style=bold];
m13_910 -> m13_911  [key=0, style=solid];
m13_910 -> m13_10  [key=2, style=dotted];
m13_909 -> m13_910  [key=0, style=solid];
m13_913 -> m13_914  [key=0, style=solid];
m13_913 -> m13_10  [key=2, style=dotted];
m13_912 -> m13_913  [key=0, style=solid];
m13_911 -> m13_909  [color=blue, key=0, style=bold];
m13_914 -> m13_912  [color=blue, key=0, style=bold];
m13_1088 -> m13_1089  [key=0, style=solid];
m13_1088 -> m13_10  [key=2, style=dotted];
m13_1087 -> m13_1088  [key=0, style=solid];
m13_1089 -> m13_1087  [color=blue, key=0, style=bold];
m13_1166 -> m13_1167  [key=0, style=solid];
m13_1166 -> m13_10  [key=2, style=dotted];
m13_1165 -> m13_1166  [key=0, style=solid];
m13_1167 -> m13_1165  [color=blue, key=0, style=bold];
m13_1183 -> m13_1184  [key=0, style=solid];
m13_1183 -> m13_100  [key=2, style=dotted];
m13_1182 -> m13_1183  [key=0, style=solid];
m13_1184 -> m13_1182  [color=blue, key=0, style=bold];
m13_1196 -> m13_1197  [key=0, style=solid];
m13_1196 -> m13_130  [key=2, style=dotted];
m13_1195 -> m13_1196  [key=0, style=solid];
m13_1197 -> m13_1195  [color=blue, key=0, style=bold];
m13_1203 -> m13_1204  [key=0, style=solid];
m13_1203 -> m13_100  [key=2, style=dotted];
m13_1202 -> m13_1203  [key=0, style=solid];
m13_1204 -> m13_1202  [color=blue, key=0, style=bold];
m13_1210 -> m13_1211  [key=0, style=solid];
m13_1210 -> m13_1190  [key=2, style=dotted];
m13_1209 -> m13_1210  [key=0, style=solid];
m13_1211 -> m13_1209  [color=blue, key=0, style=bold];
m13_1224 -> m13_1225  [key=0, style=solid];
m13_1224 -> m13_100  [key=2, style=dotted];
m13_1223 -> m13_1224  [key=0, style=solid];
m13_1225 -> m13_1223  [color=blue, key=0, style=bold];
m13_1231 -> m13_1232  [key=0, style=solid];
m13_1231 -> m13_100  [key=2, style=dotted];
m13_1230 -> m13_1231  [key=0, style=solid];
m13_1232 -> m13_1230  [color=blue, key=0, style=bold];
m13_1302 -> m13_1303  [key=0, style=solid];
m13_1302 -> m13_1190  [key=2, style=dotted];
m13_1301 -> m13_1302  [key=0, style=solid];
m13_1303 -> m13_1301  [color=blue, key=0, style=bold];
m13_1404 -> m13_1405  [key=0, style=solid];
m13_1404 -> m13_61  [key=2, style=dotted];
m13_1403 -> m13_1404  [key=0, style=solid];
m13_1405 -> m13_1403  [color=blue, key=0, style=bold];
m13_1411 -> m13_1412  [key=0, style=solid];
m13_1411 -> m13_10  [key=2, style=dotted];
m13_1410 -> m13_1411  [key=0, style=solid];
m13_1412 -> m13_1410  [color=blue, key=0, style=bold];
m13_1418 -> m13_1419  [key=0, style=solid];
m13_1418 -> m13_10  [key=2, style=dotted];
m13_1417 -> m13_1418  [key=0, style=solid];
m13_1419 -> m13_1417  [color=blue, key=0, style=bold];
m13_1425 -> m13_1426  [key=0, style=solid];
m13_1425 -> m13_10  [key=2, style=dotted];
m13_1424 -> m13_1425  [key=0, style=solid];
m13_1426 -> m13_1424  [color=blue, key=0, style=bold];
m13_1432 -> m13_1433  [key=0, style=solid];
m13_1432 -> m13_10  [key=2, style=dotted];
m13_1431 -> m13_1432  [key=0, style=solid];
m13_1433 -> m13_1431  [color=blue, key=0, style=bold];
m13_1439 -> m13_1440  [key=0, style=solid];
m13_1439 -> m13_10  [key=2, style=dotted];
m13_1438 -> m13_1439  [key=0, style=solid];
m13_1440 -> m13_1438  [color=blue, key=0, style=bold];
m13_1584 -> m13_1585  [key=0, style=solid];
m13_1584 -> m13_10  [key=2, style=dotted];
m13_1583 -> m13_1584  [key=0, style=solid];
m13_1585 -> m13_1583  [color=blue, key=0, style=bold];
m13_1592 -> m13_1593  [key=0, style=solid];
m13_1592 -> m13_10  [key=2, style=dotted];
m13_1591 -> m13_1592  [key=0, style=solid];
m13_1593 -> m13_1591  [color=blue, key=0, style=bold];
m13_1623 -> m13_1624  [key=0, style=solid];
m13_1623 -> m13_10  [key=2, style=dotted];
m13_1622 -> m13_1623  [key=0, style=solid];
m13_1624 -> m13_1622  [color=blue, key=0, style=bold];
m13_1640 -> m13_1641  [key=0, style=solid];
m13_1640 -> m13_10  [key=2, style=dotted];
m13_1640 -> m13_19  [key=2, style=dotted];
m13_1639 -> m13_1640  [key=0, style=solid];
m13_1641 -> m13_1639  [color=blue, key=0, style=bold];
m13_1804 -> m13_1805  [key=0, style=solid];
m13_1804 -> m13_10  [key=2, style=dotted];
m13_1803 -> m13_1804  [key=0, style=solid];
m13_1805 -> m13_1803  [color=blue, key=0, style=bold];
m13_1843 -> m13_1844  [key=0, style=solid];
m13_1843 -> m13_264  [key=2, style=dotted];
m13_1842 -> m13_1843  [key=0, style=solid];
m13_1844 -> m13_1842  [color=blue, key=0, style=bold];
m13_1898 -> m13_1899  [key=0, style=solid];
m13_1898 -> m13_10  [key=2, style=dotted];
m13_1898 -> m13_19  [key=2, style=dotted];
m13_1897 -> m13_1898  [key=0, style=solid];
m13_1899 -> m13_1897  [color=blue, key=0, style=bold];
m13_1930 -> m13_1931  [key=0, style=solid];
m13_1930 -> m13_10  [key=2, style=dotted];
m13_1930 -> m13_19  [key=2, style=dotted];
m13_1933 -> m13_1934  [key=0, style=solid];
m13_1933 -> m13_10  [key=2, style=dotted];
m13_1933 -> m13_19  [key=2, style=dotted];
m13_1929 -> m13_1930  [key=0, style=solid];
m13_1932 -> m13_1933  [key=0, style=solid];
m13_1931 -> m13_1929  [color=blue, key=0, style=bold];
m13_1934 -> m13_1932  [color=blue, key=0, style=bold];
m13_2055 -> m13_2056  [key=0, style=solid];
m13_2055 -> m13_10  [key=2, style=dotted];
m13_2058 -> m13_2059  [key=0, style=solid];
m13_2058 -> m13_10  [key=2, style=dotted];
m13_2061 -> m13_2062  [key=0, style=solid];
m13_2061 -> m13_10  [key=2, style=dotted];
m13_2064 -> m13_2065  [key=0, style=solid];
m13_2064 -> m13_10  [key=2, style=dotted];
m13_2067 -> m13_2068  [key=0, style=solid];
m13_2067 -> m13_10  [key=2, style=dotted];
m13_2070 -> m13_2071  [key=0, style=solid];
m13_2070 -> m13_10  [key=2, style=dotted];
m13_2054 -> m13_2055  [key=0, style=solid];
m13_2057 -> m13_2058  [key=0, style=solid];
m13_2060 -> m13_2061  [key=0, style=solid];
m13_2063 -> m13_2064  [key=0, style=solid];
m13_2066 -> m13_2067  [key=0, style=solid];
m13_2069 -> m13_2070  [key=0, style=solid];
m13_2056 -> m13_2054  [color=blue, key=0, style=bold];
m13_2059 -> m13_2057  [color=blue, key=0, style=bold];
m13_2062 -> m13_2060  [color=blue, key=0, style=bold];
m13_2065 -> m13_2063  [color=blue, key=0, style=bold];
m13_2068 -> m13_2066  [color=blue, key=0, style=bold];
m13_2071 -> m13_2069  [color=blue, key=0, style=bold];
m13_2095 -> m13_2096  [key=0, style=solid];
m13_2095 -> m13_8  [key=2, style=dotted];
m13_2095 -> m13_9  [key=2, style=dotted];
m13_2096 -> m13_2096  [key=0, style=solid];
m13_2096 -> m13_2097  [key=0, style=solid];
m13_2096 -> m13_10  [key=2, style=dotted];
m13_2097 -> m13_2094  [color=blue, key=0, style=bold];
m13_1481 -> m13_1482  [key=0, style=solid];
m13_1482 -> m13_1483  [key=0, style=solid];
m13_1483 -> m13_1484  [key=0, style=solid];
m13_1483 -> m13_8  [key=2, style=dotted];
m13_1483 -> m13_9  [key=2, style=dotted];
m13_1483 -> m13_1486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1483 -> m13_1488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1483 -> m13_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1483 -> m13_1490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1484 -> m13_1485  [key=0, style=solid];
m13_1484 -> m13_1487  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1486 -> m13_1487  [key=0, style=solid];
m13_1486 -> m13_10  [key=2, style=dotted];
m13_1486 -> m13_19  [key=2, style=dotted];
m13_1488 -> m13_1489  [key=0, style=solid];
m13_1488 -> m13_10  [key=2, style=dotted];
m13_1488 -> m13_19  [key=2, style=dotted];
m13_1489 -> m13_1490  [key=0, style=solid];
m13_1489 -> m13_11  [key=2, style=dotted];
m13_1490 -> m13_1491  [key=0, style=solid];
m13_1490 -> m13_10  [key=2, style=dotted];
m13_1490 -> m13_43  [key=2, style=dotted];
m13_1485 -> m13_1486  [key=0, style=solid];
m13_1485 -> m13_1488  [key=0, style=solid];
m13_1487 -> m13_1485  [key=0, style=solid];
m13_1487 -> m13_1487  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_1491 -> m13_1481  [color=blue, key=0, style=bold];
m13_1665 -> m13_1666  [key=0, style=solid];
m13_1666 -> m13_1667  [key=0, style=solid];
m13_1667 -> m13_1668  [key=0, style=solid];
m13_1667 -> m13_8  [key=2, style=dotted];
m13_1667 -> m13_244  [key=2, style=dotted];
m13_1667 -> m13_282  [key=2, style=dotted];
m13_1667 -> m13_283  [key=2, style=dotted];
m13_1667 -> m13_1669  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1671  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1672  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1678  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1679  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1680  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1681  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1685  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1686  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1687  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1688  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1689  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1667 -> m13_1702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1668 -> m13_1669  [key=0, style=solid];
m13_1668 -> m13_10  [key=2, style=dotted];
m13_1668 -> m13_19  [key=2, style=dotted];
m13_1669 -> m13_1670  [key=0, style=solid];
m13_1669 -> m13_11  [key=2, style=dotted];
m13_1670 -> m13_1671  [key=0, style=solid];
m13_1670 -> m13_10  [key=2, style=dotted];
m13_1670 -> m13_19  [key=2, style=dotted];
m13_1671 -> m13_1672  [key=0, style=solid];
m13_1671 -> m13_11  [key=2, style=dotted];
m13_1672 -> m13_1673  [key=0, style=solid];
m13_1672 -> m13_10  [key=2, style=dotted];
m13_1672 -> m13_19  [key=2, style=dotted];
m13_1673 -> m13_1674  [key=0, style=solid];
m13_1673 -> m13_11  [key=2, style=dotted];
m13_1674 -> m13_1675  [key=0, style=solid];
m13_1674 -> m13_10  [key=2, style=dotted];
m13_1674 -> m13_19  [key=2, style=dotted];
m13_1675 -> m13_1676  [key=0, style=solid];
m13_1675 -> m13_11  [key=2, style=dotted];
m13_1676 -> m13_1677  [key=0, style=solid];
m13_1676 -> m13_11  [key=2, style=dotted];
m13_1677 -> m13_1678  [key=0, style=solid];
m13_1677 -> m13_10  [key=2, style=dotted];
m13_1677 -> m13_19  [key=2, style=dotted];
m13_1678 -> m13_1679  [key=0, style=solid];
m13_1678 -> m13_11  [key=2, style=dotted];
m13_1679 -> m13_1680  [key=0, style=solid];
m13_1679 -> m13_10  [key=2, style=dotted];
m13_1679 -> m13_19  [key=2, style=dotted];
m13_1680 -> m13_1681  [key=0, style=solid];
m13_1680 -> m13_11  [key=2, style=dotted];
m13_1681 -> m13_1682  [key=0, style=solid];
m13_1681 -> m13_11  [key=2, style=dotted];
m13_1682 -> m13_1683  [key=0, style=solid];
m13_1682 -> m13_10  [key=2, style=dotted];
m13_1682 -> m13_19  [key=2, style=dotted];
m13_1683 -> m13_1684  [key=0, style=solid];
m13_1683 -> m13_11  [key=2, style=dotted];
m13_1684 -> m13_1685  [key=0, style=solid];
m13_1684 -> m13_10  [key=2, style=dotted];
m13_1684 -> m13_19  [key=2, style=dotted];
m13_1685 -> m13_1686  [key=0, style=solid];
m13_1685 -> m13_11  [key=2, style=dotted];
m13_1686 -> m13_1687  [key=0, style=solid];
m13_1686 -> m13_10  [key=2, style=dotted];
m13_1686 -> m13_19  [key=2, style=dotted];
m13_1687 -> m13_1688  [key=0, style=solid];
m13_1687 -> m13_11  [key=2, style=dotted];
m13_1688 -> m13_1689  [key=0, style=solid];
m13_1688 -> m13_11  [key=2, style=dotted];
m13_1689 -> m13_1690  [key=0, style=solid];
m13_1689 -> m13_10  [key=2, style=dotted];
m13_1689 -> m13_19  [key=2, style=dotted];
m13_1690 -> m13_1691  [key=0, style=solid];
m13_1690 -> m13_11  [key=2, style=dotted];
m13_1691 -> m13_1692  [key=0, style=solid];
m13_1691 -> m13_10  [key=2, style=dotted];
m13_1691 -> m13_19  [key=2, style=dotted];
m13_1692 -> m13_1693  [key=0, style=solid];
m13_1692 -> m13_11  [key=2, style=dotted];
m13_1693 -> m13_1694  [key=0, style=solid];
m13_1693 -> m13_11  [key=2, style=dotted];
m13_1694 -> m13_1695  [key=0, style=solid];
m13_1694 -> m13_11  [key=2, style=dotted];
m13_1695 -> m13_1696  [key=0, style=solid];
m13_1695 -> m13_10  [key=2, style=dotted];
m13_1695 -> m13_19  [key=2, style=dotted];
m13_1696 -> m13_1697  [key=0, style=solid];
m13_1696 -> m13_11  [key=2, style=dotted];
m13_1697 -> m13_1698  [key=0, style=solid];
m13_1697 -> m13_10  [key=2, style=dotted];
m13_1697 -> m13_19  [key=2, style=dotted];
m13_1698 -> m13_1699  [key=0, style=solid];
m13_1698 -> m13_11  [key=2, style=dotted];
m13_1699 -> m13_1700  [key=0, style=solid];
m13_1699 -> m13_10  [key=2, style=dotted];
m13_1699 -> m13_19  [key=2, style=dotted];
m13_1700 -> m13_1701  [key=0, style=solid];
m13_1700 -> m13_11  [key=2, style=dotted];
m13_1701 -> m13_1702  [key=0, style=solid];
m13_1701 -> m13_10  [key=2, style=dotted];
m13_1701 -> m13_19  [key=2, style=dotted];
m13_1702 -> m13_1703  [key=0, style=solid];
m13_1702 -> m13_11  [key=2, style=dotted];
m13_1703 -> m13_1665  [color=blue, key=0, style=bold];
m13_1219 -> m13_1220  [key=0, style=solid];
m13_1220 -> m13_1221  [key=0, style=solid];
m13_1220 -> m13_8  [key=2, style=dotted];
m13_1220 -> m13_9  [key=2, style=dotted];
m13_1220 -> m13_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1221 -> m13_1222  [key=0, style=solid];
m13_1221 -> m13_57  [key=2, style=dotted];
m13_1221 -> m13_1223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1222 -> m13_1219  [color=blue, key=0, style=bold];
m13_1845 -> m13_1846  [key=0, style=solid];
m13_1846 -> m13_1847  [key=0, style=solid];
m13_1847 -> m13_1848  [key=0, style=solid];
m13_1847 -> m13_1888  [key=2, style=dotted];
m13_1847 -> m13_1849  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1848 -> m13_1849  [key=0, style=solid];
m13_1848 -> m13_1365  [key=2, style=dotted];
m13_1848 -> m13_1889  [key=2, style=dotted];
m13_1848 -> m13_11  [key=2, style=dotted];
m13_1849 -> m13_1850  [key=0, style=solid];
m13_1849 -> m13_1890  [key=2, style=dotted];
m13_1849 -> m13_11  [key=2, style=dotted];
m13_1850 -> m13_1851  [key=0, style=solid];
m13_1850 -> m13_1869  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1851 -> m13_1852  [key=0, style=solid];
m13_1851 -> m13_8  [key=2, style=dotted];
m13_1851 -> m13_9  [key=2, style=dotted];
m13_1851 -> m13_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1855  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1865  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1866  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1851 -> m13_1868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1870  [key=0, style=solid];
m13_1869 -> m13_8  [key=2, style=dotted];
m13_1869 -> m13_9  [key=2, style=dotted];
m13_1869 -> m13_1871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1869 -> m13_1886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1852 -> m13_1853  [key=0, style=solid];
m13_1852 -> m13_10  [key=2, style=dotted];
m13_1853 -> m13_1854  [key=0, style=solid];
m13_1853 -> m13_10  [key=2, style=dotted];
m13_1854 -> m13_1855  [key=0, style=solid];
m13_1854 -> m13_11  [key=2, style=dotted];
m13_1855 -> m13_1856  [key=0, style=solid];
m13_1855 -> m13_11  [key=2, style=dotted];
m13_1856 -> m13_1857  [key=0, style=solid];
m13_1856 -> m13_10  [key=2, style=dotted];
m13_1857 -> m13_1858  [key=0, style=solid];
m13_1857 -> m13_11  [key=2, style=dotted];
m13_1858 -> m13_1859  [key=0, style=solid];
m13_1858 -> m13_11  [key=2, style=dotted];
m13_1859 -> m13_1860  [key=0, style=solid];
m13_1859 -> m13_10  [key=2, style=dotted];
m13_1860 -> m13_1861  [key=0, style=solid];
m13_1860 -> m13_11  [key=2, style=dotted];
m13_1861 -> m13_1862  [key=0, style=solid];
m13_1861 -> m13_11  [key=2, style=dotted];
m13_1862 -> m13_1863  [key=0, style=solid];
m13_1862 -> m13_10  [key=2, style=dotted];
m13_1863 -> m13_1864  [key=0, style=solid];
m13_1863 -> m13_11  [key=2, style=dotted];
m13_1864 -> m13_1865  [key=0, style=solid];
m13_1864 -> m13_11  [key=2, style=dotted];
m13_1865 -> m13_1866  [key=0, style=solid];
m13_1865 -> m13_10  [key=2, style=dotted];
m13_1866 -> m13_1867  [key=0, style=solid];
m13_1866 -> m13_11  [key=2, style=dotted];
m13_1867 -> m13_1868  [key=0, style=solid];
m13_1867 -> m13_11  [key=2, style=dotted];
m13_1868 -> m13_1869  [key=0, style=solid];
m13_1868 -> m13_10  [key=2, style=dotted];
m13_1870 -> m13_1871  [key=0, style=solid];
m13_1870 -> m13_10  [key=2, style=dotted];
m13_1871 -> m13_1872  [key=0, style=solid];
m13_1871 -> m13_130  [key=2, style=dotted];
m13_1872 -> m13_1873  [key=0, style=solid];
m13_1872 -> m13_11  [key=2, style=dotted];
m13_1873 -> m13_1874  [key=0, style=solid];
m13_1873 -> m13_11  [key=2, style=dotted];
m13_1874 -> m13_1875  [key=0, style=solid];
m13_1874 -> m13_130  [key=2, style=dotted];
m13_1875 -> m13_1876  [key=0, style=solid];
m13_1875 -> m13_11  [key=2, style=dotted];
m13_1876 -> m13_1877  [key=0, style=solid];
m13_1876 -> m13_11  [key=2, style=dotted];
m13_1877 -> m13_1878  [key=0, style=solid];
m13_1877 -> m13_130  [key=2, style=dotted];
m13_1878 -> m13_1879  [key=0, style=solid];
m13_1878 -> m13_11  [key=2, style=dotted];
m13_1879 -> m13_1880  [key=0, style=solid];
m13_1879 -> m13_11  [key=2, style=dotted];
m13_1880 -> m13_1881  [key=0, style=solid];
m13_1880 -> m13_130  [key=2, style=dotted];
m13_1881 -> m13_1882  [key=0, style=solid];
m13_1881 -> m13_11  [key=2, style=dotted];
m13_1882 -> m13_1883  [key=0, style=solid];
m13_1882 -> m13_11  [key=2, style=dotted];
m13_1883 -> m13_1884  [key=0, style=solid];
m13_1883 -> m13_130  [key=2, style=dotted];
m13_1884 -> m13_1885  [key=0, style=solid];
m13_1884 -> m13_11  [key=2, style=dotted];
m13_1885 -> m13_1886  [key=0, style=solid];
m13_1885 -> m13_11  [key=2, style=dotted];
m13_1886 -> m13_1887  [key=0, style=solid];
m13_1886 -> m13_10  [key=2, style=dotted];
m13_1887 -> m13_1845  [color=blue, key=0, style=bold];
m13_2132 -> m13_2133  [key=0, style=solid];
m13_2133 -> m13_2134  [key=0, style=solid];
m13_2133 -> m13_2128  [key=2, style=dotted];
m13_2134 -> m13_2132  [color=blue, key=0, style=bold];
m13_1160 -> m13_1161  [key=0, style=solid];
m13_1161 -> m13_1162  [key=0, style=solid];
m13_1161 -> m13_8  [key=2, style=dotted];
m13_1161 -> m13_9  [key=2, style=dotted];
m13_1161 -> m13_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1161 -> m13_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1162 -> m13_1163  [key=0, style=solid];
m13_1162 -> m13_10  [key=2, style=dotted];
m13_1163 -> m13_1164  [key=0, style=solid];
m13_1163 -> m13_57  [key=2, style=dotted];
m13_1163 -> m13_1165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1164 -> m13_1160  [color=blue, key=0, style=bold];
m13_1318 -> m13_1319  [key=0, style=solid];
m13_1319 -> m13_1320  [key=0, style=solid];
m13_1320 -> m13_1321  [key=0, style=solid];
m13_1320 -> m13_8  [key=2, style=dotted];
m13_1320 -> m13_9  [key=2, style=dotted];
m13_1320 -> m13_1322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1320 -> m13_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1321 -> m13_1322  [key=0, style=solid];
m13_1321 -> m13_10  [key=2, style=dotted];
m13_1321 -> m13_19  [key=2, style=dotted];
m13_1322 -> m13_1323  [key=0, style=solid];
m13_1322 -> m13_11  [key=2, style=dotted];
m13_1323 -> m13_1324  [key=0, style=solid];
m13_1323 -> m13_10  [key=2, style=dotted];
m13_1323 -> m13_19  [key=2, style=dotted];
m13_1324 -> m13_1325  [key=0, style=solid];
m13_1324 -> m13_11  [key=2, style=dotted];
m13_1325 -> m13_1326  [key=0, style=solid];
m13_1325 -> m13_1190  [key=2, style=dotted];
m13_1326 -> m13_1327  [key=0, style=solid];
m13_1326 -> m13_11  [key=2, style=dotted];
m13_1327 -> m13_1328  [key=0, style=solid];
m13_1327 -> m13_11  [key=2, style=dotted];
m13_1328 -> m13_1329  [key=0, style=solid];
m13_1328 -> m13_1275  [key=2, style=dotted];
m13_1328 -> m13_1276  [key=2, style=dotted];
m13_1328 -> m13_1277  [key=2, style=dotted];
m13_1328 -> m13_1332  [key=2, style=dotted];
m13_1328 -> m13_1333  [key=2, style=dotted];
m13_1328 -> m13_11  [key=2, style=dotted];
m13_1329 -> m13_1330  [key=0, style=solid];
m13_1329 -> m13_10  [key=2, style=dotted];
m13_1329 -> m13_19  [key=2, style=dotted];
m13_1330 -> m13_1331  [key=0, style=solid];
m13_1330 -> m13_11  [key=2, style=dotted];
m13_1331 -> m13_1318  [color=blue, key=0, style=bold];
m13_315 -> m13_316  [key=0, style=solid];
m13_316 -> m13_317  [key=0, style=solid];
m13_317 -> m13_318  [key=0, style=solid];
m13_317 -> m13_8  [key=2, style=dotted];
m13_317 -> m13_9  [key=2, style=dotted];
m13_317 -> m13_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_318 -> m13_319  [key=0, style=solid];
m13_318 -> m13_57  [key=2, style=dotted];
m13_318 -> m13_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_319 -> m13_315  [color=blue, key=0, style=bold];
m13_492 -> m13_493  [key=0, style=solid];
m13_493 -> m13_494  [key=0, style=solid];
m13_493 -> m13_498  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m13_493 -> m13_506  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m13_493 -> m13_493  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_494 -> m13_495  [key=0, style=solid];
m13_494 -> m13_513  [key=2, style=dotted];
m13_494 -> m13_502  [color=darkseagreen4, key=1, label=sw, style=dashed];
m13_498 -> m13_499  [key=0, style=solid];
m13_498 -> m13_501  [key=0, style=solid];
m13_506 -> m13_507  [key=0, style=solid];
m13_506 -> m13_510  [key=0, style=solid];
m13_495 -> m13_496  [key=0, style=solid];
m13_495 -> m13_514  [key=2, style=dotted];
m13_495 -> m13_499  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_495 -> m13_501  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_502 -> m13_503  [key=0, style=solid];
m13_502 -> m13_518  [key=2, style=dotted];
m13_496 -> m13_497  [key=0, style=solid];
m13_496 -> m13_515  [key=2, style=dotted];
m13_499 -> m13_500  [key=0, style=solid];
m13_499 -> m13_516  [key=2, style=dotted];
m13_501 -> m13_502  [key=0, style=solid];
m13_501 -> m13_517  [key=2, style=dotted];
m13_497 -> m13_498  [key=0, style=solid];
m13_497 -> m13_499  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_497 -> m13_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_500 -> m13_498  [key=0, style=solid];
m13_500 -> m13_500  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_503 -> m13_504  [key=0, style=solid];
m13_503 -> m13_8  [key=2, style=dotted];
m13_503 -> m13_9  [key=2, style=dotted];
m13_503 -> m13_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_503 -> m13_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_503 -> m13_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_503 -> m13_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_504 -> m13_505  [key=0, style=solid];
m13_504 -> m13_10  [key=2, style=dotted];
m13_504 -> m13_19  [key=2, style=dotted];
m13_507 -> m13_508  [key=0, style=solid];
m13_507 -> m13_10  [key=2, style=dotted];
m13_507 -> m13_19  [key=2, style=dotted];
m13_508 -> m13_509  [key=0, style=solid];
m13_508 -> m13_11  [key=2, style=dotted];
m13_510 -> m13_511  [key=0, style=solid];
m13_510 -> m13_10  [key=2, style=dotted];
m13_510 -> m13_19  [key=2, style=dotted];
m13_511 -> m13_512  [key=0, style=solid];
m13_511 -> m13_10  [key=2, style=dotted];
m13_511 -> m13_43  [key=2, style=dotted];
m13_511 -> m13_511  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m13_505 -> m13_506  [key=0, style=solid];
m13_505 -> m13_508  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_505 -> m13_509  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_509 -> m13_506  [key=0, style=solid];
m13_509 -> m13_509  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_512 -> m13_492  [color=blue, key=0, style=bold];
m13_1292 -> m13_1293  [key=0, style=solid];
m13_1293 -> m13_1294  [key=0, style=solid];
m13_1294 -> m13_1295  [key=0, style=solid];
m13_1294 -> m13_8  [key=2, style=dotted];
m13_1294 -> m13_9  [key=2, style=dotted];
m13_1294 -> m13_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1294 -> m13_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1295 -> m13_1296  [key=0, style=solid];
m13_1295 -> m13_10  [key=2, style=dotted];
m13_1295 -> m13_19  [key=2, style=dotted];
m13_1296 -> m13_1297  [key=0, style=solid];
m13_1296 -> m13_11  [key=2, style=dotted];
m13_1297 -> m13_1298  [key=0, style=solid];
m13_1297 -> m13_10  [key=2, style=dotted];
m13_1297 -> m13_19  [key=2, style=dotted];
m13_1298 -> m13_1299  [key=0, style=solid];
m13_1298 -> m13_11  [key=2, style=dotted];
m13_1299 -> m13_1300  [key=0, style=solid];
m13_1299 -> m13_57  [key=2, style=dotted];
m13_1299 -> m13_1301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1300 -> m13_1292  [color=blue, key=0, style=bold];
m13_1191 -> m13_1192  [key=0, style=solid];
m13_1192 -> m13_1193  [key=0, style=solid];
m13_1192 -> m13_8  [key=2, style=dotted];
m13_1192 -> m13_9  [key=2, style=dotted];
m13_1192 -> m13_1196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1193 -> m13_1194  [key=0, style=solid];
m13_1193 -> m13_57  [key=2, style=dotted];
m13_1193 -> m13_1195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1194 -> m13_1191  [color=blue, key=0, style=bold];
m13_245 -> m13_246  [key=0, style=solid];
m13_246 -> m13_247  [key=0, style=solid];
m13_246 -> m13_257  [key=2, style=dotted];
m13_246 -> m13_248  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_246 -> m13_250  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_247 -> m13_248  [key=0, style=solid];
m13_247 -> m13_8  [key=2, style=dotted];
m13_247 -> m13_244  [key=2, style=dotted];
m13_247 -> m13_249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_248 -> m13_249  [key=0, style=solid];
m13_248 -> m13_19  [key=2, style=dotted];
m13_250 -> m13_251  [key=0, style=solid];
m13_250 -> m13_43  [key=2, style=dotted];
m13_249 -> m13_250  [key=0, style=solid];
m13_249 -> m13_258  [key=2, style=dotted];
m13_249 -> m13_249  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m13_251 -> m13_252  [key=0, style=solid];
m13_251 -> m13_257  [key=2, style=dotted];
m13_251 -> m13_253  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_251 -> m13_255  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_252 -> m13_253  [key=0, style=solid];
m13_252 -> m13_8  [key=2, style=dotted];
m13_252 -> m13_244  [key=2, style=dotted];
m13_252 -> m13_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_253 -> m13_254  [key=0, style=solid];
m13_253 -> m13_19  [key=2, style=dotted];
m13_255 -> m13_256  [key=0, style=solid];
m13_255 -> m13_19  [key=2, style=dotted];
m13_254 -> m13_255  [key=0, style=solid];
m13_254 -> m13_258  [key=2, style=dotted];
m13_256 -> m13_245  [color=blue, key=0, style=bold];
m13_1248 -> m13_1249  [key=0, style=solid];
m13_1249 -> m13_1250  [key=0, style=solid];
m13_1250 -> m13_1251  [key=0, style=solid];
m13_1250 -> m13_8  [key=2, style=dotted];
m13_1250 -> m13_9  [key=2, style=dotted];
m13_1250 -> m13_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1250 -> m13_1259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1251 -> m13_1252  [key=0, style=solid];
m13_1251 -> m13_10  [key=2, style=dotted];
m13_1251 -> m13_19  [key=2, style=dotted];
m13_1252 -> m13_1253  [key=0, style=solid];
m13_1252 -> m13_11  [key=2, style=dotted];
m13_1253 -> m13_1254  [key=0, style=solid];
m13_1253 -> m13_10  [key=2, style=dotted];
m13_1253 -> m13_19  [key=2, style=dotted];
m13_1254 -> m13_1255  [key=0, style=solid];
m13_1254 -> m13_11  [key=2, style=dotted];
m13_1255 -> m13_1256  [key=0, style=solid];
m13_1255 -> m13_10  [key=2, style=dotted];
m13_1255 -> m13_19  [key=2, style=dotted];
m13_1256 -> m13_1257  [key=0, style=solid];
m13_1256 -> m13_11  [key=2, style=dotted];
m13_1257 -> m13_1258  [key=0, style=solid];
m13_1257 -> m13_11  [key=2, style=dotted];
m13_1258 -> m13_1259  [key=0, style=solid];
m13_1258 -> m13_10  [key=2, style=dotted];
m13_1258 -> m13_19  [key=2, style=dotted];
m13_1259 -> m13_1260  [key=0, style=solid];
m13_1259 -> m13_11  [key=2, style=dotted];
m13_1260 -> m13_1248  [color=blue, key=0, style=bold];
m13_1304 -> m13_1305  [key=0, style=solid];
m13_1305 -> m13_1306  [key=0, style=solid];
m13_1306 -> m13_1307  [key=0, style=solid];
m13_1306 -> m13_8  [key=2, style=dotted];
m13_1306 -> m13_9  [key=2, style=dotted];
m13_1306 -> m13_1308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1306 -> m13_1316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1307 -> m13_1308  [key=0, style=solid];
m13_1307 -> m13_10  [key=2, style=dotted];
m13_1307 -> m13_19  [key=2, style=dotted];
m13_1308 -> m13_1309  [key=0, style=solid];
m13_1308 -> m13_11  [key=2, style=dotted];
m13_1309 -> m13_1310  [key=0, style=solid];
m13_1309 -> m13_10  [key=2, style=dotted];
m13_1309 -> m13_19  [key=2, style=dotted];
m13_1310 -> m13_1311  [key=0, style=solid];
m13_1310 -> m13_11  [key=2, style=dotted];
m13_1311 -> m13_1312  [key=0, style=solid];
m13_1311 -> m13_1190  [key=2, style=dotted];
m13_1312 -> m13_1313  [key=0, style=solid];
m13_1312 -> m13_11  [key=2, style=dotted];
m13_1313 -> m13_1314  [key=0, style=solid];
m13_1313 -> m13_11  [key=2, style=dotted];
m13_1314 -> m13_1315  [key=0, style=solid];
m13_1314 -> m13_1275  [key=2, style=dotted];
m13_1314 -> m13_1276  [key=2, style=dotted];
m13_1314 -> m13_1277  [key=2, style=dotted];
m13_1314 -> m13_11  [key=2, style=dotted];
m13_1315 -> m13_1316  [key=0, style=solid];
m13_1315 -> m13_10  [key=2, style=dotted];
m13_1315 -> m13_19  [key=2, style=dotted];
m13_1316 -> m13_1317  [key=0, style=solid];
m13_1316 -> m13_11  [key=2, style=dotted];
m13_1317 -> m13_1304  [color=blue, key=0, style=bold];
m13_478 -> m13_479  [key=0, style=solid];
m13_479 -> m13_480  [key=0, style=solid];
m13_479 -> m13_8  [key=2, style=dotted];
m13_479 -> m13_9  [key=2, style=dotted];
m13_479 -> m13_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_480 -> m13_481  [key=0, style=solid];
m13_480 -> m13_57  [key=2, style=dotted];
m13_480 -> m13_482  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_481 -> m13_478  [color=blue, key=0, style=bold];
m13_1578 -> m13_1579  [key=0, style=solid];
m13_1579 -> m13_1580  [key=0, style=solid];
m13_1580 -> m13_1581  [key=0, style=solid];
m13_1580 -> m13_8  [key=2, style=dotted];
m13_1580 -> m13_9  [key=2, style=dotted];
m13_1580 -> m13_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1581 -> m13_1582  [key=0, style=solid];
m13_1581 -> m13_57  [key=2, style=dotted];
m13_1581 -> m13_1583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1582 -> m13_1578  [color=blue, key=0, style=bold];
m13_1976 -> m13_1977  [key=0, style=solid];
m13_1977 -> m13_1978  [key=0, style=solid];
m13_1977 -> m13_1988  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1977 -> m13_1998  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1977 -> m13_2008  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1977 -> m13_2018  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1978 -> m13_1979  [key=0, style=solid];
m13_1978 -> m13_8  [key=2, style=dotted];
m13_1978 -> m13_9  [key=2, style=dotted];
m13_1978 -> m13_1980  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1981  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1982  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1983  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1984  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1985  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1986  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1978 -> m13_1987  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1989  [key=0, style=solid];
m13_1988 -> m13_8  [key=2, style=dotted];
m13_1988 -> m13_9  [key=2, style=dotted];
m13_1988 -> m13_1990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1993  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1996  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1988 -> m13_1997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_1999  [key=0, style=solid];
m13_1998 -> m13_8  [key=2, style=dotted];
m13_1998 -> m13_9  [key=2, style=dotted];
m13_1998 -> m13_2000  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2001  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2002  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2003  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2004  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2005  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2006  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1998 -> m13_2007  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2009  [key=0, style=solid];
m13_2008 -> m13_8  [key=2, style=dotted];
m13_2008 -> m13_9  [key=2, style=dotted];
m13_2008 -> m13_2010  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2011  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2012  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2013  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2014  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2015  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2016  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2008 -> m13_2017  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2019  [key=0, style=solid];
m13_2018 -> m13_8  [key=2, style=dotted];
m13_2018 -> m13_9  [key=2, style=dotted];
m13_2018 -> m13_2020  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2021  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2022  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2023  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2024  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2025  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2026  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2018 -> m13_2027  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1979 -> m13_1980  [key=0, style=solid];
m13_1980 -> m13_1981  [key=0, style=solid];
m13_1980 -> m13_10  [key=2, style=dotted];
m13_1980 -> m13_19  [key=2, style=dotted];
m13_1981 -> m13_1982  [key=0, style=solid];
m13_1981 -> m13_10  [key=2, style=dotted];
m13_1981 -> m13_19  [key=2, style=dotted];
m13_1982 -> m13_1983  [key=0, style=solid];
m13_1982 -> m13_2029  [key=2, style=dotted];
m13_1982 -> m13_11  [key=2, style=dotted];
m13_1983 -> m13_1984  [key=0, style=solid];
m13_1983 -> m13_11  [key=2, style=dotted];
m13_1984 -> m13_1985  [key=0, style=solid];
m13_1984 -> m13_10  [key=2, style=dotted];
m13_1984 -> m13_19  [key=2, style=dotted];
m13_1985 -> m13_1986  [key=0, style=solid];
m13_1985 -> m13_2029  [key=2, style=dotted];
m13_1985 -> m13_11  [key=2, style=dotted];
m13_1986 -> m13_1987  [key=0, style=solid];
m13_1986 -> m13_11  [key=2, style=dotted];
m13_1987 -> m13_1988  [key=0, style=solid];
m13_1987 -> m13_10  [key=2, style=dotted];
m13_1987 -> m13_19  [key=2, style=dotted];
m13_1989 -> m13_1990  [key=0, style=solid];
m13_1990 -> m13_1991  [key=0, style=solid];
m13_1990 -> m13_10  [key=2, style=dotted];
m13_1990 -> m13_19  [key=2, style=dotted];
m13_1991 -> m13_1992  [key=0, style=solid];
m13_1991 -> m13_10  [key=2, style=dotted];
m13_1991 -> m13_19  [key=2, style=dotted];
m13_1992 -> m13_1993  [key=0, style=solid];
m13_1992 -> m13_2030  [key=2, style=dotted];
m13_1992 -> m13_11  [key=2, style=dotted];
m13_1993 -> m13_1994  [key=0, style=solid];
m13_1993 -> m13_11  [key=2, style=dotted];
m13_1994 -> m13_1995  [key=0, style=solid];
m13_1994 -> m13_10  [key=2, style=dotted];
m13_1994 -> m13_19  [key=2, style=dotted];
m13_1995 -> m13_1996  [key=0, style=solid];
m13_1995 -> m13_2030  [key=2, style=dotted];
m13_1995 -> m13_11  [key=2, style=dotted];
m13_1996 -> m13_1997  [key=0, style=solid];
m13_1996 -> m13_11  [key=2, style=dotted];
m13_1997 -> m13_1998  [key=0, style=solid];
m13_1997 -> m13_10  [key=2, style=dotted];
m13_1997 -> m13_19  [key=2, style=dotted];
m13_1999 -> m13_2000  [key=0, style=solid];
m13_2000 -> m13_2001  [key=0, style=solid];
m13_2000 -> m13_10  [key=2, style=dotted];
m13_2000 -> m13_19  [key=2, style=dotted];
m13_2001 -> m13_2002  [key=0, style=solid];
m13_2001 -> m13_10  [key=2, style=dotted];
m13_2001 -> m13_19  [key=2, style=dotted];
m13_2002 -> m13_2003  [key=0, style=solid];
m13_2002 -> m13_11  [key=2, style=dotted];
m13_2003 -> m13_2004  [key=0, style=solid];
m13_2003 -> m13_11  [key=2, style=dotted];
m13_2004 -> m13_2005  [key=0, style=solid];
m13_2004 -> m13_10  [key=2, style=dotted];
m13_2004 -> m13_19  [key=2, style=dotted];
m13_2005 -> m13_2006  [key=0, style=solid];
m13_2005 -> m13_11  [key=2, style=dotted];
m13_2006 -> m13_2007  [key=0, style=solid];
m13_2006 -> m13_11  [key=2, style=dotted];
m13_2007 -> m13_2008  [key=0, style=solid];
m13_2007 -> m13_10  [key=2, style=dotted];
m13_2007 -> m13_19  [key=2, style=dotted];
m13_2009 -> m13_2010  [key=0, style=solid];
m13_2010 -> m13_2011  [key=0, style=solid];
m13_2010 -> m13_10  [key=2, style=dotted];
m13_2010 -> m13_19  [key=2, style=dotted];
m13_2011 -> m13_2012  [key=0, style=solid];
m13_2011 -> m13_1190  [key=2, style=dotted];
m13_2012 -> m13_2013  [key=0, style=solid];
m13_2012 -> m13_2030  [key=2, style=dotted];
m13_2012 -> m13_11  [key=2, style=dotted];
m13_2013 -> m13_2014  [key=0, style=solid];
m13_2013 -> m13_11  [key=2, style=dotted];
m13_2014 -> m13_2015  [key=0, style=solid];
m13_2014 -> m13_1190  [key=2, style=dotted];
m13_2015 -> m13_2016  [key=0, style=solid];
m13_2015 -> m13_2030  [key=2, style=dotted];
m13_2015 -> m13_11  [key=2, style=dotted];
m13_2016 -> m13_2017  [key=0, style=solid];
m13_2016 -> m13_11  [key=2, style=dotted];
m13_2017 -> m13_2018  [key=0, style=solid];
m13_2017 -> m13_10  [key=2, style=dotted];
m13_2017 -> m13_19  [key=2, style=dotted];
m13_2019 -> m13_2020  [key=0, style=solid];
m13_2020 -> m13_2021  [key=0, style=solid];
m13_2020 -> m13_10  [key=2, style=dotted];
m13_2020 -> m13_19  [key=2, style=dotted];
m13_2021 -> m13_2022  [key=0, style=solid];
m13_2021 -> m13_2031  [key=2, style=dotted];
m13_2022 -> m13_2023  [key=0, style=solid];
m13_2022 -> m13_2029  [key=2, style=dotted];
m13_2022 -> m13_11  [key=2, style=dotted];
m13_2023 -> m13_2024  [key=0, style=solid];
m13_2023 -> m13_11  [key=2, style=dotted];
m13_2024 -> m13_2025  [key=0, style=solid];
m13_2024 -> m13_2031  [key=2, style=dotted];
m13_2025 -> m13_2026  [key=0, style=solid];
m13_2025 -> m13_2029  [key=2, style=dotted];
m13_2025 -> m13_11  [key=2, style=dotted];
m13_2026 -> m13_2027  [key=0, style=solid];
m13_2026 -> m13_11  [key=2, style=dotted];
m13_2027 -> m13_2028  [key=0, style=solid];
m13_2027 -> m13_10  [key=2, style=dotted];
m13_2027 -> m13_19  [key=2, style=dotted];
m13_2028 -> m13_1976  [color=blue, key=0, style=bold];
m13_221 -> m13_222  [key=0, style=solid];
m13_222 -> m13_223  [key=0, style=solid];
m13_222 -> m13_235  [key=2, style=dotted];
m13_222 -> m13_11  [key=2, style=dotted];
m13_223 -> m13_224  [key=0, style=solid];
m13_223 -> m13_235  [key=2, style=dotted];
m13_223 -> m13_11  [key=2, style=dotted];
m13_224 -> m13_225  [key=0, style=solid];
m13_224 -> m13_235  [key=2, style=dotted];
m13_224 -> m13_11  [key=2, style=dotted];
m13_225 -> m13_226  [key=0, style=solid];
m13_225 -> m13_235  [key=2, style=dotted];
m13_225 -> m13_11  [key=2, style=dotted];
m13_226 -> m13_227  [key=0, style=solid];
m13_226 -> m13_235  [key=2, style=dotted];
m13_226 -> m13_11  [key=2, style=dotted];
m13_227 -> m13_228  [key=0, style=solid];
m13_227 -> m13_235  [key=2, style=dotted];
m13_227 -> m13_11  [key=2, style=dotted];
m13_228 -> m13_229  [key=0, style=solid];
m13_228 -> m13_235  [key=2, style=dotted];
m13_228 -> m13_11  [key=2, style=dotted];
m13_229 -> m13_230  [key=0, style=solid];
m13_229 -> m13_235  [key=2, style=dotted];
m13_229 -> m13_11  [key=2, style=dotted];
m13_230 -> m13_231  [key=0, style=solid];
m13_230 -> m13_235  [key=2, style=dotted];
m13_230 -> m13_11  [key=2, style=dotted];
m13_231 -> m13_232  [key=0, style=solid];
m13_231 -> m13_235  [key=2, style=dotted];
m13_231 -> m13_11  [key=2, style=dotted];
m13_232 -> m13_233  [key=0, style=solid];
m13_232 -> m13_235  [key=2, style=dotted];
m13_232 -> m13_11  [key=2, style=dotted];
m13_233 -> m13_234  [key=0, style=solid];
m13_233 -> m13_235  [key=2, style=dotted];
m13_233 -> m13_11  [key=2, style=dotted];
m13_234 -> m13_221  [color=blue, key=0, style=bold];
m13_1185 -> m13_1186  [key=0, style=solid];
m13_1186 -> m13_1187  [key=0, style=solid];
m13_1186 -> m13_8  [key=2, style=dotted];
m13_1186 -> m13_9  [key=2, style=dotted];
m13_1186 -> m13_1188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1187 -> m13_1188  [key=0, style=solid];
m13_1187 -> m13_1190  [key=2, style=dotted];
m13_1187 -> m13_675  [key=2, style=dotted];
m13_1188 -> m13_1189  [key=0, style=solid];
m13_1188 -> m13_11  [key=2, style=dotted];
m13_1189 -> m13_1185  [color=blue, key=0, style=bold];
m13_2115 -> m13_2116  [key=0, style=solid];
m13_2115 -> m13_2119  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m13_2116 -> m13_2117  [key=0, style=solid];
m13_2116 -> m13_2123  [key=2, style=dotted];
m13_2119 -> m13_2120  [key=0, style=solid];
m13_2119 -> m13_2124  [key=2, style=dotted];
m13_2117 -> m13_2118  [key=0, style=solid];
m13_2117 -> m13_2123  [key=2, style=dotted];
m13_2117 -> m13_2117  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m13_2117 -> m13_2119  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m13_2117 -> m13_2120  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m13_2117 -> m13_2121  [color=darkseagreen4, key=1, label=toReturn, style=dashed];
m13_2118 -> m13_2119  [key=0, style=solid];
m13_2118 -> m13_2120  [key=0, style=solid];
m13_2120 -> m13_2121  [key=0, style=solid];
m13_2121 -> m13_2122  [key=0, style=solid];
m13_2122 -> m13_2115  [color=blue, key=0, style=bold];
m13_1820 -> m13_1821  [key=0, style=solid];
m13_1821 -> m13_1822  [key=0, style=solid];
m13_1822 -> m13_1823  [key=0, style=solid];
m13_1822 -> m13_8  [key=2, style=dotted];
m13_1822 -> m13_9  [key=2, style=dotted];
m13_1822 -> m13_1824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1826  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1827  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1822 -> m13_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1823 -> m13_1824  [key=0, style=solid];
m13_1823 -> m13_10  [key=2, style=dotted];
m13_1824 -> m13_1825  [key=0, style=solid];
m13_1824 -> m13_11  [key=2, style=dotted];
m13_1825 -> m13_1826  [key=0, style=solid];
m13_1825 -> m13_10  [key=2, style=dotted];
m13_1826 -> m13_1827  [key=0, style=solid];
m13_1826 -> m13_11  [key=2, style=dotted];
m13_1827 -> m13_1828  [key=0, style=solid];
m13_1827 -> m13_10  [key=2, style=dotted];
m13_1828 -> m13_1829  [key=0, style=solid];
m13_1828 -> m13_11  [key=2, style=dotted];
m13_1829 -> m13_1830  [key=0, style=solid];
m13_1829 -> m13_10  [key=2, style=dotted];
m13_1830 -> m13_1831  [key=0, style=solid];
m13_1830 -> m13_11  [key=2, style=dotted];
m13_1831 -> m13_1832  [key=0, style=solid];
m13_1831 -> m13_10  [key=2, style=dotted];
m13_1832 -> m13_1833  [key=0, style=solid];
m13_1832 -> m13_11  [key=2, style=dotted];
m13_1833 -> m13_1834  [key=0, style=solid];
m13_1833 -> m13_10  [key=2, style=dotted];
m13_1834 -> m13_1835  [key=0, style=solid];
m13_1834 -> m13_11  [key=2, style=dotted];
m13_1835 -> m13_1820  [color=blue, key=0, style=bold];
m13_150 -> m13_151  [key=0, style=solid];
m13_151 -> m13_152  [key=0, style=solid];
m13_152 -> m13_153  [key=0, style=solid];
m13_152 -> m13_8  [key=2, style=dotted];
m13_152 -> m13_9  [key=2, style=dotted];
m13_152 -> m13_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_152 -> m13_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_153 -> m13_154  [key=0, style=solid];
m13_154 -> m13_155  [key=0, style=solid];
m13_154 -> m13_10  [key=2, style=dotted];
m13_154 -> m13_19  [key=2, style=dotted];
m13_155 -> m13_156  [key=0, style=solid];
m13_155 -> m13_11  [key=2, style=dotted];
m13_156 -> m13_157  [key=0, style=solid];
m13_156 -> m13_10  [key=2, style=dotted];
m13_156 -> m13_19  [key=2, style=dotted];
m13_156 -> m13_156  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m13_157 -> m13_158  [key=0, style=solid];
m13_157 -> m13_11  [key=2, style=dotted];
m13_158 -> m13_159  [key=0, style=solid];
m13_158 -> m13_11  [key=2, style=dotted];
m13_159 -> m13_160  [key=0, style=solid];
m13_159 -> m13_11  [key=2, style=dotted];
m13_160 -> m13_161  [key=0, style=solid];
m13_160 -> m13_10  [key=2, style=dotted];
m13_160 -> m13_19  [key=2, style=dotted];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_11  [key=2, style=dotted];
m13_162 -> m13_163  [key=0, style=solid];
m13_162 -> m13_11  [key=2, style=dotted];
m13_163 -> m13_164  [key=0, style=solid];
m13_163 -> m13_11  [key=2, style=dotted];
m13_164 -> m13_165  [key=0, style=solid];
m13_164 -> m13_10  [key=2, style=dotted];
m13_164 -> m13_19  [key=2, style=dotted];
m13_165 -> m13_166  [key=0, style=solid];
m13_165 -> m13_11  [key=2, style=dotted];
m13_166 -> m13_167  [key=0, style=solid];
m13_166 -> m13_11  [key=2, style=dotted];
m13_167 -> m13_168  [key=0, style=solid];
m13_167 -> m13_11  [key=2, style=dotted];
m13_168 -> m13_169  [key=0, style=solid];
m13_168 -> m13_10  [key=2, style=dotted];
m13_168 -> m13_19  [key=2, style=dotted];
m13_169 -> m13_170  [key=0, style=solid];
m13_169 -> m13_175  [key=2, style=dotted];
m13_169 -> m13_11  [key=2, style=dotted];
m13_170 -> m13_171  [key=0, style=solid];
m13_170 -> m13_11  [key=2, style=dotted];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> m13_11  [key=2, style=dotted];
m13_172 -> m13_173  [key=0, style=solid];
m13_172 -> m13_10  [key=2, style=dotted];
m13_172 -> m13_19  [key=2, style=dotted];
m13_173 -> m13_174  [key=0, style=solid];
m13_173 -> m13_11  [key=2, style=dotted];
m13_174 -> m13_150  [color=blue, key=0, style=bold];
m13_1212 -> m13_1213  [key=0, style=solid];
m13_1213 -> m13_1214  [key=0, style=solid];
m13_1213 -> m13_8  [key=2, style=dotted];
m13_1213 -> m13_9  [key=2, style=dotted];
m13_1214 -> m13_1215  [key=0, style=solid];
m13_1214 -> m13_100  [key=2, style=dotted];
m13_1214 -> m13_1216  [color=darkseagreen4, key=1, label=data, style=dashed];
m13_1214 -> m13_1217  [color=darkseagreen4, key=1, label=data, style=dashed];
m13_1215 -> m13_1216  [key=0, style=solid];
m13_1215 -> m13_11  [key=2, style=dotted];
m13_1216 -> m13_1217  [key=0, style=solid];
m13_1216 -> m13_11  [key=2, style=dotted];
m13_1217 -> m13_1218  [key=0, style=solid];
m13_1217 -> m13_11  [key=2, style=dotted];
m13_1218 -> m13_1212  [color=blue, key=0, style=bold];
m13_1100 -> m13_1101  [key=0, style=solid];
m13_1101 -> m13_1102  [key=0, style=solid];
m13_1101 -> m13_9  [key=2, style=dotted];
m13_1102 -> m13_1103  [key=0, style=solid];
m13_1102 -> m13_8  [key=2, style=dotted];
m13_1102 -> m13_1104  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1105  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1106  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1107  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1108  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1102 -> m13_1116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_1103 -> m13_1104  [key=0, style=solid];
m13_1103 -> m13_10  [key=2, style=dotted];
m13_1103 -> m13_19  [key=2, style=dotted];
m13_1104 -> m13_1105  [key=0, style=solid];
m13_1104 -> m13_11  [key=2, style=dotted];
m13_1105 -> m13_1106  [key=0, style=solid];
m13_1105 -> m13_10  [key=2, style=dotted];
m13_1105 -> m13_19  [key=2, style=dotted];
m13_1106 -> m13_1107  [key=0, style=solid];
m13_1106 -> m13_11  [key=2, style=dotted];
m13_1107 -> m13_1108  [key=0, style=solid];
m13_1107 -> m13_11  [key=2, style=dotted];
m13_1108 -> m13_1109  [key=0, style=solid];
m13_1108 -> m13_10  [key=2, style=dotted];
m13_1108 -> m13_19  [key=2, style=dotted];
m13_1109 -> m13_1110  [key=0, style=solid];
m13_1109 -> m13_11  [key=2, style=dotted];
m13_1110 -> m13_1111  [key=0, style=solid];
m13_1110 -> m13_11  [key=2, style=dotted];
m13_1111 -> m13_1112  [key=0, style=solid];
m13_1111 -> m13_10  [key=2, style=dotted];
m13_1111 -> m13_19  [key=2, style=dotted];
m13_1112 -> m13_1113  [key=0, style=solid];
m13_1112 -> m13_11  [key=2, style=dotted];
m13_1113 -> m13_1114  [key=0, style=solid];
m13_1113 -> m13_11  [key=2, style=dotted];
m13_1114 -> m13_1115  [key=0, style=solid];
m13_1114 -> m13_10  [key=2, style=dotted];
m13_1114 -> m13_19  [key=2, style=dotted];
m13_1115 -> m13_1116  [key=0, style=solid];
m13_1115 -> m13_11  [key=2, style=dotted];
m13_1116 -> m13_1117  [key=0, style=solid];
m13_1116 -> m13_10  [key=2, style=dotted];
m13_1116 -> m13_43  [key=2, style=dotted];
m13_1117 -> m13_1100  [color=blue, key=0, style=bold];
m13_1501 -> m13_1502  [key=0, style=solid];
m13_1502 -> m13_1503  [key=0, style=solid];
m13_1503 -> m13_1504  [key=0, style=solid];
m13_1503 -> m13_8  [key=2, style=dotted];
m13_1503 -> m13_9  [key=2, style=dotted];
m13_1503 -> m13_1505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1503 -> m13_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1503 -> m13_1507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1503 -> m13_1508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1504 -> m13_1505  [key=0, style=solid];
m13_1504 -> m13_10  [key=2, style=dotted];
m13_1504 -> m13_19  [key=2, style=dotted];
m13_1505 -> m13_1506  [key=0, style=solid];
m13_1505 -> m13_11  [key=2, style=dotted];
m13_1506 -> m13_1507  [key=0, style=solid];
m13_1506 -> m13_11  [key=2, style=dotted];
m13_1507 -> m13_1508  [key=0, style=solid];
m13_1507 -> m13_10  [key=2, style=dotted];
m13_1507 -> m13_19  [key=2, style=dotted];
m13_1508 -> m13_1509  [key=0, style=solid];
m13_1508 -> m13_11  [key=2, style=dotted];
m13_1509 -> m13_1501  [color=blue, key=0, style=bold];
m13_758 -> m13_759  [key=0, style=solid];
m13_759 -> m13_760  [key=0, style=solid];
m13_760 -> m13_761  [key=0, style=solid];
m13_760 -> m13_243  [key=2, style=dotted];
m13_760 -> m13_769  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m13_761 -> m13_762  [key=0, style=solid];
m13_761 -> m13_8  [key=2, style=dotted];
m13_761 -> m13_9  [key=2, style=dotted];
m13_761 -> m13_665  [key=2, style=dotted];
m13_761 -> m13_763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_761 -> m13_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_769 -> m13_770  [key=0, style=solid];
m13_769 -> m13_757  [key=2, style=dotted];
m13_762 -> m13_763  [key=0, style=solid];
m13_762 -> m13_264  [key=2, style=dotted];
m13_762 -> m13_19  [key=2, style=dotted];
m13_763 -> m13_764  [key=0, style=solid];
m13_763 -> m13_11  [key=2, style=dotted];
m13_764 -> m13_765  [key=0, style=solid];
m13_764 -> m13_264  [key=2, style=dotted];
m13_764 -> m13_19  [key=2, style=dotted];
m13_765 -> m13_766  [key=0, style=solid];
m13_765 -> m13_264  [key=2, style=dotted];
m13_765 -> m13_19  [key=2, style=dotted];
m13_766 -> m13_767  [key=0, style=solid];
m13_766 -> m13_11  [key=2, style=dotted];
m13_767 -> m13_768  [key=0, style=solid];
m13_767 -> m13_264  [key=2, style=dotted];
m13_767 -> m13_19  [key=2, style=dotted];
m13_768 -> m13_769  [key=0, style=solid];
m13_768 -> m13_658  [key=2, style=dotted];
m13_770 -> m13_771  [key=0, style=solid];
m13_770 -> m13_11  [key=2, style=dotted];
m13_771 -> m13_772  [key=0, style=solid];
m13_771 -> m13_264  [key=2, style=dotted];
m13_771 -> m13_19  [key=2, style=dotted];
m13_772 -> m13_773  [key=0, style=solid];
m13_772 -> m13_11  [key=2, style=dotted];
m13_773 -> m13_774  [key=0, style=solid];
m13_773 -> m13_264  [key=2, style=dotted];
m13_773 -> m13_43  [key=2, style=dotted];
m13_774 -> m13_758  [color=blue, key=0, style=bold];
m13_608 -> m13_609  [key=0, style=solid];
m13_609 -> m13_610  [key=0, style=solid];
m13_609 -> m13_605  [key=2, style=dotted];
m13_609 -> m13_615  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_610 -> m13_611  [key=0, style=solid];
m13_610 -> m13_8  [key=2, style=dotted];
m13_610 -> m13_606  [key=2, style=dotted];
m13_610 -> m13_607  [key=2, style=dotted];
m13_610 -> m13_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_615 -> m13_616  [key=0, style=solid];
m13_611 -> m13_612  [key=0, style=solid];
m13_611 -> m13_10  [key=2, style=dotted];
m13_612 -> m13_613  [key=0, style=solid];
m13_612 -> m13_11  [key=2, style=dotted];
m13_613 -> m13_614  [key=0, style=solid];
m13_613 -> m13_615  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_613 -> m13_619  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_614 -> m13_615  [key=0, style=solid];
m13_614 -> m13_620  [key=0, style=solid];
m13_619 -> m13_614  [key=0, style=solid];
m13_619 -> m13_619  [color=darkseagreen4, key=1, label=j, style=dashed];
m13_616 -> m13_617  [key=0, style=solid];
m13_616 -> m13_8  [key=2, style=dotted];
m13_616 -> m13_606  [key=2, style=dotted];
m13_616 -> m13_607  [key=2, style=dotted];
m13_616 -> m13_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_617 -> m13_618  [key=0, style=solid];
m13_617 -> m13_10  [key=2, style=dotted];
m13_618 -> m13_619  [key=0, style=solid];
m13_618 -> m13_11  [key=2, style=dotted];
m13_620 -> m13_608  [color=blue, key=0, style=bold];
m13_1173 -> m13_1174  [key=0, style=solid];
m13_1174 -> m13_1175  [key=0, style=solid];
m13_1174 -> m13_8  [key=2, style=dotted];
m13_1174 -> m13_9  [key=2, style=dotted];
m13_1174 -> m13_1176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1175 -> m13_1176  [key=0, style=solid];
m13_1175 -> m13_100  [key=2, style=dotted];
m13_1175 -> m13_675  [key=2, style=dotted];
m13_1176 -> m13_1177  [key=0, style=solid];
m13_1176 -> m13_11  [key=2, style=dotted];
m13_1177 -> m13_1173  [color=blue, key=0, style=bold];
m13_1510 -> m13_1511  [key=0, style=solid];
m13_1511 -> m13_1512  [key=0, style=solid];
m13_1512 -> m13_1513  [key=0, style=solid];
m13_1512 -> m13_8  [key=2, style=dotted];
m13_1512 -> m13_9  [key=2, style=dotted];
m13_1512 -> m13_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1512 -> m13_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1513 -> m13_1514  [key=0, style=solid];
m13_1513 -> m13_10  [key=2, style=dotted];
m13_1513 -> m13_19  [key=2, style=dotted];
m13_1514 -> m13_1515  [key=0, style=solid];
m13_1514 -> m13_11  [key=2, style=dotted];
m13_1515 -> m13_1516  [key=0, style=solid];
m13_1515 -> m13_10  [key=2, style=dotted];
m13_1515 -> m13_19  [key=2, style=dotted];
m13_1516 -> m13_1517  [key=0, style=solid];
m13_1516 -> m13_11  [key=2, style=dotted];
m13_1517 -> m13_1518  [key=0, style=solid];
m13_1517 -> m13_10  [key=2, style=dotted];
m13_1517 -> m13_19  [key=2, style=dotted];
m13_1518 -> m13_1519  [key=0, style=solid];
m13_1518 -> m13_11  [key=2, style=dotted];
m13_1519 -> m13_1520  [key=0, style=solid];
m13_1519 -> m13_10  [key=2, style=dotted];
m13_1519 -> m13_19  [key=2, style=dotted];
m13_1520 -> m13_1521  [key=0, style=solid];
m13_1520 -> m13_11  [key=2, style=dotted];
m13_1521 -> m13_1522  [key=0, style=solid];
m13_1521 -> m13_10  [key=2, style=dotted];
m13_1521 -> m13_19  [key=2, style=dotted];
m13_1522 -> m13_1523  [key=0, style=solid];
m13_1522 -> m13_11  [key=2, style=dotted];
m13_1523 -> m13_1524  [key=0, style=solid];
m13_1523 -> m13_10  [key=2, style=dotted];
m13_1523 -> m13_19  [key=2, style=dotted];
m13_1524 -> m13_1525  [key=0, style=solid];
m13_1524 -> m13_11  [key=2, style=dotted];
m13_1525 -> m13_1526  [key=0, style=solid];
m13_1525 -> m13_10  [key=2, style=dotted];
m13_1525 -> m13_19  [key=2, style=dotted];
m13_1526 -> m13_1527  [key=0, style=solid];
m13_1526 -> m13_11  [key=2, style=dotted];
m13_1527 -> m13_1510  [color=blue, key=0, style=bold];
m13_1798 -> m13_1799  [key=0, style=solid];
m13_1799 -> m13_1800  [key=0, style=solid];
m13_1800 -> m13_1801  [key=0, style=solid];
m13_1800 -> m13_8  [key=2, style=dotted];
m13_1800 -> m13_244  [key=2, style=dotted];
m13_1800 -> m13_282  [key=2, style=dotted];
m13_1800 -> m13_283  [key=2, style=dotted];
m13_1800 -> m13_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1801 -> m13_1802  [key=0, style=solid];
m13_1801 -> m13_57  [key=2, style=dotted];
m13_1801 -> m13_1803  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1802 -> m13_1798  [color=blue, key=0, style=bold];
m13_1704 -> m13_1705  [key=0, style=solid];
m13_1705 -> m13_1706  [key=0, style=solid];
m13_1706 -> m13_1707  [key=0, style=solid];
m13_1706 -> m13_8  [key=2, style=dotted];
m13_1706 -> m13_244  [key=2, style=dotted];
m13_1706 -> m13_282  [key=2, style=dotted];
m13_1706 -> m13_283  [key=2, style=dotted];
m13_1706 -> m13_1708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1715  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1753  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1754  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1756  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1757  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1758  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1759  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1760  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1768  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1706 -> m13_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1707 -> m13_1708  [key=0, style=solid];
m13_1707 -> m13_10  [key=2, style=dotted];
m13_1707 -> m13_19  [key=2, style=dotted];
m13_1708 -> m13_1709  [key=0, style=solid];
m13_1708 -> m13_11  [key=2, style=dotted];
m13_1709 -> m13_1710  [key=0, style=solid];
m13_1709 -> m13_11  [key=2, style=dotted];
m13_1710 -> m13_1711  [key=0, style=solid];
m13_1710 -> m13_11  [key=2, style=dotted];
m13_1711 -> m13_1712  [key=0, style=solid];
m13_1711 -> m13_10  [key=2, style=dotted];
m13_1711 -> m13_19  [key=2, style=dotted];
m13_1712 -> m13_1713  [key=0, style=solid];
m13_1712 -> m13_11  [key=2, style=dotted];
m13_1713 -> m13_1714  [key=0, style=solid];
m13_1713 -> m13_11  [key=2, style=dotted];
m13_1714 -> m13_1715  [key=0, style=solid];
m13_1714 -> m13_10  [key=2, style=dotted];
m13_1714 -> m13_19  [key=2, style=dotted];
m13_1715 -> m13_1716  [key=0, style=solid];
m13_1715 -> m13_11  [key=2, style=dotted];
m13_1716 -> m13_1717  [key=0, style=solid];
m13_1716 -> m13_11  [key=2, style=dotted];
m13_1717 -> m13_1718  [key=0, style=solid];
m13_1717 -> m13_10  [key=2, style=dotted];
m13_1717 -> m13_19  [key=2, style=dotted];
m13_1718 -> m13_1719  [key=0, style=solid];
m13_1718 -> m13_11  [key=2, style=dotted];
m13_1719 -> m13_1720  [key=0, style=solid];
m13_1719 -> m13_11  [key=2, style=dotted];
m13_1720 -> m13_1721  [key=0, style=solid];
m13_1720 -> m13_11  [key=2, style=dotted];
m13_1721 -> m13_1722  [key=0, style=solid];
m13_1721 -> m13_10  [key=2, style=dotted];
m13_1721 -> m13_19  [key=2, style=dotted];
m13_1722 -> m13_1723  [key=0, style=solid];
m13_1722 -> m13_11  [key=2, style=dotted];
m13_1723 -> m13_1724  [key=0, style=solid];
m13_1723 -> m13_11  [key=2, style=dotted];
m13_1724 -> m13_1725  [key=0, style=solid];
m13_1724 -> m13_10  [key=2, style=dotted];
m13_1724 -> m13_19  [key=2, style=dotted];
m13_1725 -> m13_1726  [key=0, style=solid];
m13_1725 -> m13_11  [key=2, style=dotted];
m13_1726 -> m13_1727  [key=0, style=solid];
m13_1726 -> m13_11  [key=2, style=dotted];
m13_1727 -> m13_1728  [key=0, style=solid];
m13_1727 -> m13_11  [key=2, style=dotted];
m13_1728 -> m13_1729  [key=0, style=solid];
m13_1728 -> m13_10  [key=2, style=dotted];
m13_1728 -> m13_19  [key=2, style=dotted];
m13_1729 -> m13_1730  [key=0, style=solid];
m13_1729 -> m13_11  [key=2, style=dotted];
m13_1730 -> m13_1731  [key=0, style=solid];
m13_1730 -> m13_11  [key=2, style=dotted];
m13_1731 -> m13_1732  [key=0, style=solid];
m13_1731 -> m13_11  [key=2, style=dotted];
m13_1732 -> m13_1733  [key=0, style=solid];
m13_1732 -> m13_10  [key=2, style=dotted];
m13_1732 -> m13_19  [key=2, style=dotted];
m13_1733 -> m13_1734  [key=0, style=solid];
m13_1733 -> m13_11  [key=2, style=dotted];
m13_1734 -> m13_1735  [key=0, style=solid];
m13_1734 -> m13_11  [key=2, style=dotted];
m13_1735 -> m13_1736  [key=0, style=solid];
m13_1735 -> m13_11  [key=2, style=dotted];
m13_1736 -> m13_1737  [key=0, style=solid];
m13_1736 -> m13_10  [key=2, style=dotted];
m13_1736 -> m13_19  [key=2, style=dotted];
m13_1737 -> m13_1738  [key=0, style=solid];
m13_1737 -> m13_11  [key=2, style=dotted];
m13_1738 -> m13_1739  [key=0, style=solid];
m13_1738 -> m13_11  [key=2, style=dotted];
m13_1739 -> m13_1740  [key=0, style=solid];
m13_1739 -> m13_11  [key=2, style=dotted];
m13_1740 -> m13_1741  [key=0, style=solid];
m13_1740 -> m13_10  [key=2, style=dotted];
m13_1740 -> m13_19  [key=2, style=dotted];
m13_1741 -> m13_1742  [key=0, style=solid];
m13_1741 -> m13_11  [key=2, style=dotted];
m13_1742 -> m13_1743  [key=0, style=solid];
m13_1742 -> m13_11  [key=2, style=dotted];
m13_1743 -> m13_1744  [key=0, style=solid];
m13_1743 -> m13_10  [key=2, style=dotted];
m13_1743 -> m13_19  [key=2, style=dotted];
m13_1744 -> m13_1745  [key=0, style=solid];
m13_1744 -> m13_11  [key=2, style=dotted];
m13_1745 -> m13_1746  [key=0, style=solid];
m13_1745 -> m13_11  [key=2, style=dotted];
m13_1746 -> m13_1747  [key=0, style=solid];
m13_1746 -> m13_11  [key=2, style=dotted];
m13_1747 -> m13_1748  [key=0, style=solid];
m13_1747 -> m13_10  [key=2, style=dotted];
m13_1747 -> m13_19  [key=2, style=dotted];
m13_1748 -> m13_1749  [key=0, style=solid];
m13_1748 -> m13_11  [key=2, style=dotted];
m13_1749 -> m13_1750  [key=0, style=solid];
m13_1749 -> m13_10  [key=2, style=dotted];
m13_1749 -> m13_19  [key=2, style=dotted];
m13_1750 -> m13_1751  [key=0, style=solid];
m13_1750 -> m13_11  [key=2, style=dotted];
m13_1751 -> m13_1752  [key=0, style=solid];
m13_1751 -> m13_11  [key=2, style=dotted];
m13_1752 -> m13_1753  [key=0, style=solid];
m13_1752 -> m13_10  [key=2, style=dotted];
m13_1752 -> m13_19  [key=2, style=dotted];
m13_1753 -> m13_1754  [key=0, style=solid];
m13_1753 -> m13_11  [key=2, style=dotted];
m13_1754 -> m13_1755  [key=0, style=solid];
m13_1754 -> m13_11  [key=2, style=dotted];
m13_1755 -> m13_1756  [key=0, style=solid];
m13_1755 -> m13_10  [key=2, style=dotted];
m13_1755 -> m13_19  [key=2, style=dotted];
m13_1756 -> m13_1757  [key=0, style=solid];
m13_1756 -> m13_11  [key=2, style=dotted];
m13_1757 -> m13_1758  [key=0, style=solid];
m13_1757 -> m13_11  [key=2, style=dotted];
m13_1758 -> m13_1759  [key=0, style=solid];
m13_1758 -> m13_10  [key=2, style=dotted];
m13_1758 -> m13_19  [key=2, style=dotted];
m13_1759 -> m13_1760  [key=0, style=solid];
m13_1759 -> m13_11  [key=2, style=dotted];
m13_1760 -> m13_1761  [key=0, style=solid];
m13_1760 -> m13_11  [key=2, style=dotted];
m13_1761 -> m13_1762  [key=0, style=solid];
m13_1761 -> m13_10  [key=2, style=dotted];
m13_1761 -> m13_19  [key=2, style=dotted];
m13_1762 -> m13_1763  [key=0, style=solid];
m13_1762 -> m13_11  [key=2, style=dotted];
m13_1763 -> m13_1764  [key=0, style=solid];
m13_1763 -> m13_10  [key=2, style=dotted];
m13_1763 -> m13_19  [key=2, style=dotted];
m13_1764 -> m13_1765  [key=0, style=solid];
m13_1764 -> m13_11  [key=2, style=dotted];
m13_1765 -> m13_1766  [key=0, style=solid];
m13_1765 -> m13_11  [key=2, style=dotted];
m13_1766 -> m13_1767  [key=0, style=solid];
m13_1766 -> m13_10  [key=2, style=dotted];
m13_1766 -> m13_19  [key=2, style=dotted];
m13_1767 -> m13_1768  [key=0, style=solid];
m13_1767 -> m13_11  [key=2, style=dotted];
m13_1768 -> m13_1769  [key=0, style=solid];
m13_1768 -> m13_10  [key=2, style=dotted];
m13_1768 -> m13_19  [key=2, style=dotted];
m13_1769 -> m13_1770  [key=0, style=solid];
m13_1769 -> m13_11  [key=2, style=dotted];
m13_1770 -> m13_1771  [key=0, style=solid];
m13_1770 -> m13_10  [key=2, style=dotted];
m13_1770 -> m13_19  [key=2, style=dotted];
m13_1771 -> m13_1772  [key=0, style=solid];
m13_1771 -> m13_11  [key=2, style=dotted];
m13_1772 -> m13_1773  [key=0, style=solid];
m13_1772 -> m13_10  [key=2, style=dotted];
m13_1772 -> m13_19  [key=2, style=dotted];
m13_1773 -> m13_1774  [key=0, style=solid];
m13_1773 -> m13_11  [key=2, style=dotted];
m13_1774 -> m13_1775  [key=0, style=solid];
m13_1774 -> m13_10  [key=2, style=dotted];
m13_1774 -> m13_19  [key=2, style=dotted];
m13_1775 -> m13_1776  [key=0, style=solid];
m13_1775 -> m13_11  [key=2, style=dotted];
m13_1776 -> m13_1777  [key=0, style=solid];
m13_1776 -> m13_10  [key=2, style=dotted];
m13_1776 -> m13_19  [key=2, style=dotted];
m13_1777 -> m13_1778  [key=0, style=solid];
m13_1777 -> m13_11  [key=2, style=dotted];
m13_1778 -> m13_1779  [key=0, style=solid];
m13_1778 -> m13_10  [key=2, style=dotted];
m13_1778 -> m13_19  [key=2, style=dotted];
m13_1779 -> m13_1780  [key=0, style=solid];
m13_1779 -> m13_11  [key=2, style=dotted];
m13_1780 -> m13_1781  [key=0, style=solid];
m13_1780 -> m13_10  [key=2, style=dotted];
m13_1780 -> m13_19  [key=2, style=dotted];
m13_1781 -> m13_1782  [key=0, style=solid];
m13_1781 -> m13_11  [key=2, style=dotted];
m13_1782 -> m13_1783  [key=0, style=solid];
m13_1782 -> m13_10  [key=2, style=dotted];
m13_1782 -> m13_19  [key=2, style=dotted];
m13_1783 -> m13_1784  [key=0, style=solid];
m13_1783 -> m13_11  [key=2, style=dotted];
m13_1784 -> m13_1785  [key=0, style=solid];
m13_1784 -> m13_11  [key=2, style=dotted];
m13_1785 -> m13_1786  [key=0, style=solid];
m13_1785 -> m13_10  [key=2, style=dotted];
m13_1785 -> m13_19  [key=2, style=dotted];
m13_1786 -> m13_1787  [key=0, style=solid];
m13_1786 -> m13_11  [key=2, style=dotted];
m13_1787 -> m13_1788  [key=0, style=solid];
m13_1787 -> m13_11  [key=2, style=dotted];
m13_1788 -> m13_1789  [key=0, style=solid];
m13_1788 -> m13_10  [key=2, style=dotted];
m13_1788 -> m13_43  [key=2, style=dotted];
m13_1789 -> m13_1704  [color=blue, key=0, style=bold];
m13_1349 -> m13_1350  [key=0, style=solid];
m13_1350 -> m13_1351  [key=0, style=solid];
m13_1351 -> m13_1352  [key=0, style=solid];
m13_1351 -> m13_8  [key=2, style=dotted];
m13_1351 -> m13_9  [key=2, style=dotted];
m13_1351 -> m13_1353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1351 -> m13_1363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1352 -> m13_1353  [key=0, style=solid];
m13_1352 -> m13_1365  [key=2, style=dotted];
m13_1353 -> m13_1354  [key=0, style=solid];
m13_1353 -> m13_10  [key=2, style=dotted];
m13_1353 -> m13_19  [key=2, style=dotted];
m13_1354 -> m13_1355  [key=0, style=solid];
m13_1354 -> m13_11  [key=2, style=dotted];
m13_1355 -> m13_1356  [key=0, style=solid];
m13_1355 -> m13_10  [key=2, style=dotted];
m13_1355 -> m13_19  [key=2, style=dotted];
m13_1356 -> m13_1357  [key=0, style=solid];
m13_1356 -> m13_11  [key=2, style=dotted];
m13_1357 -> m13_1358  [key=0, style=solid];
m13_1357 -> m13_1190  [key=2, style=dotted];
m13_1358 -> m13_1359  [key=0, style=solid];
m13_1358 -> m13_11  [key=2, style=dotted];
m13_1359 -> m13_1360  [key=0, style=solid];
m13_1359 -> m13_11  [key=2, style=dotted];
m13_1360 -> m13_1361  [key=0, style=solid];
m13_1362 -> m13_1363  [key=0, style=solid];
m13_1362 -> m13_10  [key=2, style=dotted];
m13_1362 -> m13_19  [key=2, style=dotted];
m13_1363 -> m13_1364  [key=0, style=solid];
m13_1363 -> m13_11  [key=2, style=dotted];
m13_1361 -> m13_1362  [key=0, style=solid];
m13_1361 -> m13_1348  [key=2, style=dotted];
m13_1361 -> m13_11  [key=2, style=dotted];
m13_1361 -> m13_1361  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_1364 -> m13_1349  [color=blue, key=0, style=bold];
m13_12 -> m13_13  [key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_8  [key=2, style=dotted];
m13_14 -> m13_9  [key=2, style=dotted];
m13_14 -> m13_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_14 -> m13_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_10  [key=2, style=dotted];
m13_15 -> m13_19  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_11  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_11  [key=2, style=dotted];
m13_17 -> m13_585  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m13_17 -> m13_16  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m13_17 -> m13_597  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m13_17 -> m13_21  [color=darkorchid, key=3, label="method methodReturn XmlNode DeserializeXmlNode", style=bold];
m13_18 -> m13_12  [color=blue, key=0, style=bold];
m13_2113 -> m13_2114  [key=0, style=solid];
m13_2114 -> m13_2113  [color=blue, key=0, style=bold];
m13_87 -> m13_88  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_88  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_8  [key=2, style=dotted];
m13_89 -> m13_9  [key=2, style=dotted];
m13_89 -> m13_91  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_92  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_93  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_94  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_96  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_97  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_89 -> m13_98  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_10  [key=2, style=dotted];
m13_90 -> m13_19  [key=2, style=dotted];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_11  [key=2, style=dotted];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_10  [key=2, style=dotted];
m13_92 -> m13_19  [key=2, style=dotted];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_11  [key=2, style=dotted];
m13_94 -> m13_95  [key=0, style=solid];
m13_94 -> m13_96  [key=0, style=solid];
m13_94 -> m13_100  [key=2, style=dotted];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_10  [key=2, style=dotted];
m13_96 -> m13_19  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_11  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_10  [key=2, style=dotted];
m13_98 -> m13_43  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_99 -> m13_87  [color=blue, key=0, style=bold];
m13_1198 -> m13_1199  [key=0, style=solid];
m13_1199 -> m13_1200  [key=0, style=solid];
m13_1199 -> m13_8  [key=2, style=dotted];
m13_1199 -> m13_9  [key=2, style=dotted];
m13_1199 -> m13_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1200 -> m13_1201  [key=0, style=solid];
m13_1200 -> m13_57  [key=2, style=dotted];
m13_1200 -> m13_1202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1201 -> m13_1198  [color=blue, key=0, style=bold];
m13_1278 -> m13_1279  [key=0, style=solid];
m13_1279 -> m13_1280  [key=0, style=solid];
m13_1280 -> m13_1281  [key=0, style=solid];
m13_1280 -> m13_8  [key=2, style=dotted];
m13_1280 -> m13_9  [key=2, style=dotted];
m13_1280 -> m13_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1280 -> m13_1290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1281 -> m13_1282  [key=0, style=solid];
m13_1281 -> m13_10  [key=2, style=dotted];
m13_1281 -> m13_19  [key=2, style=dotted];
m13_1282 -> m13_1283  [key=0, style=solid];
m13_1282 -> m13_11  [key=2, style=dotted];
m13_1283 -> m13_1284  [key=0, style=solid];
m13_1283 -> m13_10  [key=2, style=dotted];
m13_1283 -> m13_19  [key=2, style=dotted];
m13_1284 -> m13_1285  [key=0, style=solid];
m13_1284 -> m13_11  [key=2, style=dotted];
m13_1285 -> m13_1286  [key=0, style=solid];
m13_1285 -> m13_1190  [key=2, style=dotted];
m13_1286 -> m13_1287  [key=0, style=solid];
m13_1286 -> m13_11  [key=2, style=dotted];
m13_1287 -> m13_1288  [key=0, style=solid];
m13_1287 -> m13_11  [key=2, style=dotted];
m13_1288 -> m13_1289  [key=0, style=solid];
m13_1288 -> m13_1275  [key=2, style=dotted];
m13_1288 -> m13_1276  [key=2, style=dotted];
m13_1288 -> m13_1277  [key=2, style=dotted];
m13_1288 -> m13_11  [key=2, style=dotted];
m13_1289 -> m13_1290  [key=0, style=solid];
m13_1289 -> m13_10  [key=2, style=dotted];
m13_1289 -> m13_19  [key=2, style=dotted];
m13_1290 -> m13_1291  [key=0, style=solid];
m13_1290 -> m13_11  [key=2, style=dotted];
m13_1291 -> m13_1278  [color=blue, key=0, style=bold];
m13_1406 -> m13_1407  [key=0, style=solid];
m13_1407 -> m13_1408  [key=0, style=solid];
m13_1407 -> m13_8  [key=2, style=dotted];
m13_1407 -> m13_9  [key=2, style=dotted];
m13_1407 -> m13_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1408 -> m13_1409  [key=0, style=solid];
m13_1408 -> m13_57  [key=2, style=dotted];
m13_1408 -> m13_1410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1409 -> m13_1406  [color=blue, key=0, style=bold];
m13_1233 -> m13_1234  [key=0, style=solid];
m13_1234 -> m13_1235  [key=0, style=solid];
m13_1235 -> m13_1236  [key=0, style=solid];
m13_1235 -> m13_8  [key=2, style=dotted];
m13_1235 -> m13_9  [key=2, style=dotted];
m13_1235 -> m13_1237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1239  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1243  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1235 -> m13_1246  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_1236 -> m13_1237  [key=0, style=solid];
m13_1236 -> m13_10  [key=2, style=dotted];
m13_1236 -> m13_19  [key=2, style=dotted];
m13_1237 -> m13_1238  [key=0, style=solid];
m13_1237 -> m13_11  [key=2, style=dotted];
m13_1238 -> m13_1239  [key=0, style=solid];
m13_1238 -> m13_10  [key=2, style=dotted];
m13_1238 -> m13_19  [key=2, style=dotted];
m13_1239 -> m13_1240  [key=0, style=solid];
m13_1239 -> m13_11  [key=2, style=dotted];
m13_1240 -> m13_1241  [key=0, style=solid];
m13_1240 -> m13_11  [key=2, style=dotted];
m13_1241 -> m13_1242  [key=0, style=solid];
m13_1241 -> m13_10  [key=2, style=dotted];
m13_1241 -> m13_19  [key=2, style=dotted];
m13_1242 -> m13_1243  [key=0, style=solid];
m13_1242 -> m13_11  [key=2, style=dotted];
m13_1243 -> m13_1244  [key=0, style=solid];
m13_1243 -> m13_11  [key=2, style=dotted];
m13_1244 -> m13_1245  [key=0, style=solid];
m13_1244 -> m13_10  [key=2, style=dotted];
m13_1244 -> m13_19  [key=2, style=dotted];
m13_1245 -> m13_1246  [key=0, style=solid];
m13_1245 -> m13_11  [key=2, style=dotted];
m13_1246 -> m13_1247  [key=0, style=solid];
m13_1246 -> m13_10  [key=2, style=dotted];
m13_1246 -> m13_43  [key=2, style=dotted];
m13_1247 -> m13_1233  [color=blue, key=0, style=bold];
m13_2135 -> m13_59  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_76  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_79  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_82  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2136 -> m13_85  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2137 -> m13_125  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2137 -> m13_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2137 -> m13_132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2138 -> m13_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2139 -> m13_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2140 -> m13_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2140 -> m13_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m13_2141 -> m13_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2142 -> m13_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2143 -> m13_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2144 -> m13_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2145 -> m13_573  [color=darkseagreen4, key=1, label=total, style=dashed];
m13_2146 -> m13_589  [color=darkseagreen4, key=1, label=total, style=dashed];
m13_2147 -> m13_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2148 -> m13_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2149 -> m13_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2150 -> m13_667  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2151 -> m13_682  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2152 -> m13_847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2153 -> m13_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2153 -> m13_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2153 -> m13_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2154 -> m13_910  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2154 -> m13_913  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2155 -> m13_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2156 -> m13_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2157 -> m13_1183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2158 -> m13_1196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2159 -> m13_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2160 -> m13_1210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2161 -> m13_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2162 -> m13_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2163 -> m13_1302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2164 -> m13_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2165 -> m13_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2166 -> m13_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2167 -> m13_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2168 -> m13_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2169 -> m13_1439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2170 -> m13_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2171 -> m13_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2172 -> m13_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2173 -> m13_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2174 -> m13_1804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2175 -> m13_1843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2176 -> m13_1898  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2177 -> m13_1930  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2177 -> m13_1933  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_2178 -> m13_2055  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2058  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2061  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2064  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2067  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2178 -> m13_2070  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m13_2179 -> m13_2095  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2180 -> m13_2098  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m13_2180 -> m13_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m13_2180 -> m13_2103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m13_2181 -> m13_2108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m13_2181 -> m13_2109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m13_2181 -> m13_2110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m13_2181 -> m13_2116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m13_2181 -> m13_2117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m13_2181 -> m13_2119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
m13_2181 -> m13_2120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.SlowStream", style=dashed];
}
