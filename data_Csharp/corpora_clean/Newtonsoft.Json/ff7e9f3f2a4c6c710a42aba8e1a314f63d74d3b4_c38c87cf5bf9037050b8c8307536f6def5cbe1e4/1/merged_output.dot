digraph  {
n146 [label="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject", span=""];
n147 [label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", span=""];
n0 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", span="57-57"];
n1 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="TestDynamicObject dynamicObject = new TestDynamicObject()", span="59-59"];
n2 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="dynamicObject.Explicit = true", span="60-60"];
n27 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", span="354-354"];
n3 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="dynamic d = dynamicObject", span="62-62"];
n9 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="JsonDynamicContract dynamicContract = (JsonDynamicContract)c.ResolveContract(dynamicObject.GetType())", span="70-70"];
n10 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="dynamicObject.GetDynamicMemberNames()", span="72-72"];
n12 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="dynamicContract.TryGetMember(dynamicObject, memberName, out value)", span="75-75"];
n17 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="string json = JsonConvert.SerializeObject(dynamicObject, Formatting.Indented)", span="84-84"];
n24 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(dynamicObject.ChildObject.Integer, d.ChildObject.Integer)", span="102-102"];
n25 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(dynamicObject.ChildObject.Text, d.ChildObject.Text)", span="103-103"];
n4 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="d.Int = 1", span="63-63"];
n5 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="d.Decimal = 99.9d", span="64-64"];
n6 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="d.ChildObject = new DynamicChildObject()", span="65-65"];
n14 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(d.Int, values[''Int''])", span="80-80"];
n15 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(d.Decimal, values[''Decimal''])", span="81-81"];
n16 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(d.ChildObject, values[''ChildObject''])", span="82-82"];
n7 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Dictionary<string, object> values = new Dictionary<string, object>()", span="67-67"];
n28 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicChildObject.DynamicChildObject()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicChildObject.DynamicChildObject()", span="332-332"];
n8 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="IContractResolver c = DefaultContractResolver.Instance", span="69-69"];
n29 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n13 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="values.Add(memberName, value)", span="77-77"];
n30 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n31 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
n11 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="object value", span="74-74"];
n32 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", span="359-359"];
n33 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85"];
n34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n35 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n18 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="StringAssert.AreEqual(@''{\r\n  ''''Explicit'''': true,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Int'''': 1,\r\n  ''''ChildObject'''': {\r\n    ''''Text'''': null,\r\n    ''''Integer'''': 0\r\n  }\r\n}'', json)", span="85-93"];
n36 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
n19 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="TestDynamicObject newDynamicObject = JsonConvert.DeserializeObject<TestDynamicObject>(json)", span="95-95"];
n37 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327"];
n20 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(true, newDynamicObject.Explicit)", span="96-96"];
n38 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
n21 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="d = newDynamicObject", span="98-98"];
n22 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(99.9, d.Decimal)", span="100-100"];
n23 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Assert.AreEqual(1, d.Int)", span="101-101"];
n26 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObject()", span="57-57"];
n39 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", span="108-108"];
n40 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="dynamic o = new ExpandoObject()", span="110-110"];
n41 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="o.Text = ''Text!''", span="111-111"];
n57 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
n42 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="o.Integer = int.MaxValue", span="112-112"];
n43 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="o.DynamicChildObject = new DynamicChildObject\r\n            {\r\n                Integer = int.MinValue,\r\n                Text = ''Child text!''\r\n            }", span="113-117"];
n44 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="119-123"];
n45 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", color=red, community=0, label="2: StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Dynamic.ExpandoObject, System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n  ''''Text'''': ''''Text!'''',\r\n  ''''Integer'''': 2147483647,\r\n  ''''DynamicChildObject'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.DynamicChildObject, Newtonsoft.Json.Tests, Version=7.0.0.0, Culture=neutral, PublicKeyToken=null'''',\r\n    ''''Text'''': ''''Child text!'''',\r\n    ''''Integer'''': -2147483648\r\n  }\r\n}'', json)", span="125-134"];
n58 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
n59 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
n48 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''''' + expandoObjectTypeName + @'''''',\r\n  ''''Text'''': ''''Text!'''',\r\n  ''''Integer'''': 2147483647,\r\n  ''''DynamicChildObject'''': {\r\n    ''''$type'''': '''''' + dynamicChildObjectTypeName + @'''''',\r\n    ''''Text'''': ''''Child text!'''',\r\n    ''''Integer'''': -2147483648\r\n  }\r\n}'', json)", span="139-148"];
n49 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="dynamic n = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n            })", span="150-154"];
n46 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="string dynamicChildObjectTypeName = ReflectionUtils.GetTypeName(typeof(DynamicChildObject), FormatterAssemblyStyle.Full, null)", span="136-136"];
n47 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="string expandoObjectTypeName = ReflectionUtils.GetTypeName(typeof(ExpandoObject), FormatterAssemblyStyle.Full, null)", span="137-137"];
n60 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="141-141"];
n50 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), n)", span="156-156"];
n61 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="833-833"];
n51 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="Assert.AreEqual(''Text!'', n.Text)", span="157-157"];
n52 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="Assert.AreEqual(int.MaxValue, n.Integer)", span="158-158"];
n53 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="CustomAssert.IsInstanceOfType(typeof(DynamicChildObject), n.DynamicChildObject)", span="160-160"];
n54 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="Assert.AreEqual(''Child text!'', n.DynamicChildObject.Text)", span="161-161"];
n55 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="Assert.AreEqual(int.MinValue, n.DynamicChildObject.Integer)", span="162-162"];
n62 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="297-297"];
n56 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithObjectTracking()", span="108-108"];
n63 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", span="167-167"];
n64 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                var settings = new JsonSerializerSettings();\r\n                settings.NullValueHandling = NullValueHandling.Ignore;\r\n                var json = @''{\r\n  ''''contributors'''': null\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<DynamicObject>(json, settings);\r\n            }, ''Unable to find a default constructor to use for type System.Dynamic.DynamicObject. Path 'contributors', line 2, position 18.'')", span="169-178"];
n65 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.NoPublicDefaultConstructor()", span="167-167"];
n66 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354"];
n67 [cluster="lambda expression", label="Entry lambda expression", span="169-178"];
n68 [cluster="lambda expression", label="var settings = new JsonSerializerSettings()", span="171-171"];
n69 [cluster="lambda expression", label="settings.NullValueHandling = NullValueHandling.Ignore", span="172-172"];
n71 [cluster="lambda expression", label="JsonConvert.DeserializeObject<DynamicObject>(json, settings)", span="177-177"];
n70 [cluster="lambda expression", label="var json = @''{\r\n  ''''contributors'''': null\r\n}''", span="173-175"];
n72 [cluster="lambda expression", label="Exit lambda expression", span="169-178"];
n73 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
n74 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", span="185-185"];
n75 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", label="Values = new Dictionary<string, object>()", span="187-187"];
n76 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.DictionaryDynamicObject()", span="185-185"];
n77 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="190-190"];
n78 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Values[binder.Name] = value", span="192-192"];
n79 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="return true;", span="193-193"];
n80 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="190-190"];
n81 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", span="198-198"];
n82 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", label="var settings = new JsonSerializerSettings()", span="200-200"];
n83 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="201-201"];
n85 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", label="DictionaryDynamicObject foo = JsonConvert.DeserializeObject<DictionaryDynamicObject>(json, settings)", span="260-260"];
n84 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", label="var json = @''{\r\n  ''''contributors'''': null,\r\n  ''''retweeted'''': false,\r\n  ''''text'''': ''''Guys SX4 diesel is launched.what are your plans?catch us at #facebook http://bit.ly/dV3H1a #auto #car #maruti #india #delhi'''',\r\n  ''''in_reply_to_user_id_str'''': null,\r\n  ''''retweet_count'''': 0,\r\n  ''''geo'''': null,\r\n  ''''id_str'''': ''''40678260320768000'''',\r\n  ''''in_reply_to_status_id'''': null,\r\n  ''''source'''': ''''<a href=\''''http://www.tweetdeck.com\'''' rel=\''''nofollow\''''>TweetDeck</a>'''',\r\n  ''''created_at'''': ''''Thu Feb 24 07:43:47 +0000 2011'''',\r\n  ''''place'''': null,\r\n  ''''coordinates'''': null,\r\n  ''''truncated'''': false,\r\n  ''''favorited'''': false,\r\n  ''''user'''': {\r\n    ''''profile_background_image_url'''': ''''http://a1.twimg.com/profile_background_images/206944715/twitter_bg.jpg'''',\r\n    ''''url'''': ''''http://bit.ly/dcFwWC'''',\r\n    ''''screen_name'''': ''''marutisuzukisx4'''',\r\n    ''''verified'''': false,\r\n    ''''friends_count'''': 45,\r\n    ''''description'''': ''''This is the Official Maruti Suzuki SX4 Twitter ID! Men are Back - mail us on social (at) sx4bymaruti (dot) com'''',\r\n    ''''follow_request_sent'''': null,\r\n    ''''time_zone'''': ''''Chennai'''',\r\n    ''''profile_text_color'''': ''''333333'''',\r\n    ''''location'''': ''''India'''',\r\n    ''''notifications'''': null,\r\n    ''''profile_sidebar_fill_color'''': ''''efefef'''',\r\n    ''''id_str'''': ''''196143889'''',\r\n    ''''contributors_enabled'''': false,\r\n    ''''lang'''': ''''en'''',\r\n    ''''profile_background_tile'''': false,\r\n    ''''created_at'''': ''''Tue Sep 28 12:55:15 +0000 2010'''',\r\n    ''''followers_count'''': 117,\r\n    ''''show_all_inline_media'''': true,\r\n    ''''listed_count'''': 1,\r\n    ''''geo_enabled'''': true,\r\n    ''''profile_link_color'''': ''''009999'''',\r\n    ''''profile_sidebar_border_color'''': ''''eeeeee'''',\r\n    ''''protected'''': false,\r\n    ''''name'''': ''''Maruti Suzuki SX4'''',\r\n    ''''statuses_count'''': 637,\r\n    ''''following'''': null,\r\n    ''''profile_use_background_image'''': true,\r\n    ''''profile_image_url'''': ''''http://a3.twimg.com/profile_images/1170694644/Slide1_normal.JPG'''',\r\n    ''''id'''': 196143889,\r\n    ''''is_translator'''': false,\r\n    ''''utc_offset'''': 19800,\r\n    ''''favourites_count'''': 0,\r\n    ''''profile_background_color'''': ''''131516''''\r\n  },\r\n  ''''in_reply_to_screen_name'''': null,\r\n  ''''id'''': 40678260320768000,\r\n  ''''in_reply_to_status_id_str'''': null,\r\n  ''''in_reply_to_user_id'''': null\r\n}''", span="203-258"];
n86 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", label="Assert.AreEqual(false, foo.Values[''retweeted''])", span="262-262"];
n87 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.AllowNonPublicDefaultConstructor()", span="198-198"];
n88 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", span="266-266"];
n89 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="dynamic o = new TestDynamicObject()", span="268-268"];
n90 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="o.Text = ''Text!''", span="269-269"];
n91 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="o.Int = int.MaxValue", span="270-270"];
n92 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="o.ChildObject = null", span="271-271"];
n93 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="o.DynamicChildObject = null", span="272-272"];
n94 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n            })", span="274-277"];
n95 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="StringAssert.AreEqual(@''{\r\n  ''''Explicit'''': false,\r\n  ''''Text'''': ''''Text!'''',\r\n  ''''Int'''': 2147483647\r\n}'', json)", span="279-283"];
n96 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingIgnore()", span="266-266"];
n97 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", span="287-287"];
n98 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="dynamic o = new TestDynamicObject()", span="289-289"];
n99 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="o.Text = ''Text!''", span="290-290"];
n100 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="o.Int = int.MaxValue", span="291-291"];
n101 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="o.ChildObject = null", span="292-292"];
n102 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="o.DynamicChildObject = null", span="293-293"];
n103 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Include,\r\n            })", span="295-298"];
n104 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="StringAssert.AreEqual(@''{\r\n  ''''Explicit'''': false,\r\n  ''''Text'''': ''''Text!'''',\r\n  ''''DynamicChildObject'''': null,\r\n  ''''Int'''': 2147483647,\r\n  ''''ChildObject'''': null\r\n}'', json)", span="300-306"];
n105 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithNullValueHandlingInclude()", span="287-287"];
n106 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="Entry Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", span="310-310"];
n107 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="dynamic o = new TestDynamicObject()", span="312-312"];
n108 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="o.Text = ''Text!''", span="313-313"];
n109 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="o.Int = int.MaxValue", span="314-314"];
n110 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="o.IntDefault = 0", span="315-315"];
n111 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="o.NUllableIntDefault = default(int?)", span="316-316"];
n112 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="o.ChildObject = null", span="317-317"];
n113 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="o.DynamicChildObject = null", span="318-318"];
n114 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n            })", span="320-323"];
n115 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="StringAssert.AreEqual(@''{\r\n  ''''Text'''': ''''Text!'''',\r\n  ''''Int'''': 2147483647\r\n}'', json)", span="325-328"];
n116 [cluster="Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", label="Exit Newtonsoft.Json.Tests.Serialization.DynamicTests.SerializeDynamicObjectWithDefaultValueHandlingIgnore()", span="310-310"];
n117 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", label="_members = new Dictionary<string, object>()", span="356-356"];
n118 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TestDynamicObject()", span="354-354"];
n119 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", label="return _members.Keys.Union(new[] { ''Int'', ''ChildObject'' });", span="361-361"];
n120 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.GetDynamicMemberNames()", span="359-359"];
n121 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n122 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", span="364-364"];
n123 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="Type targetType = binder.Type", span="366-366"];
n127 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="return base.TryConvert(binder, out result);", span="376-376"];
n124 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="targetType == typeof(IDictionary<string, object>) ||\r\n                targetType == typeof(IDictionary)", span="368-369"];
n125 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="result = new Dictionary<string, object>(_members)", span="371-371"];
n126 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="return true;", span="372-372"];
n129 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
n128 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", span="364-364"];
n130 [cluster="System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", label="Entry System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder, out object)", span="0-0"];
n131 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", span="380-380"];
n132 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", label="return _members.Remove(binder.Name);", span="382-382"];
n133 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)", span="380-380"];
n134 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
n135 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="385-385"];
n136 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="return _members.TryGetValue(binder.Name, out result);", span="387-387"];
n137 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="385-385"];
n138 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n139 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Entry Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="390-390"];
n140 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="_members[binder.Name] = value", span="392-392"];
n141 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="return true;", span="393-393"];
n142 [cluster="Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Exit Newtonsoft.Json.Tests.Serialization.TestDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="390-390"];
n143 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Entry Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="399-399"];
n144 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="return false;", span="401-401"];
n145 [cluster="Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Exit Newtonsoft.Json.Tests.Serialization.ErrorSettingDynamicObject.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="399-399"];
n146 -> n75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject", style=dashed];
n146 -> n78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DynamicTests.DictionaryDynamicObject", style=dashed];
n147 -> n117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
n147 -> n119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
n147 -> n125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
n147 -> n127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
n147 -> n132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
n147 -> n136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
n147 -> n140  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TestDynamicObject", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n27  [key=2, style=dotted];
n1 -> n3  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
n1 -> n9  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
n1 -> n10  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
n1 -> n12  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
n1 -> n17  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
n1 -> n24  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
n1 -> n25  [color=darkseagreen4, key=1, label=dynamicObject, style=dashed];
n2 -> n3  [key=0, style=solid];
n27 -> n117  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [color=darkseagreen4, key=1, label=d, style=dashed];
n3 -> n6  [color=darkseagreen4, key=1, label=d, style=dashed];
n3 -> n14  [color=darkseagreen4, key=1, label=d, style=dashed];
n3 -> n15  [color=darkseagreen4, key=1, label=d, style=dashed];
n3 -> n16  [color=darkseagreen4, key=1, label=d, style=dashed];
n3 -> n1  [color=darkorchid, key=3, label="Local variable dynamic d", style=bold];
n3 -> n19  [color=darkorchid, key=3, label="Local variable dynamic d", style=bold];
n9 -> n10  [key=0, style=solid];
n9 -> n30  [key=2, style=dotted];
n9 -> n31  [key=2, style=dotted];
n9 -> n12  [color=darkseagreen4, key=1, label=dynamicContract, style=dashed];
n10 -> n11  [key=0, style=solid];
n10 -> n14  [key=0, style=solid];
n10 -> n32  [key=2, style=dotted];
n10 -> n12  [color=darkseagreen4, key=1, label=memberName, style=dashed];
n10 -> n13  [color=darkseagreen4, key=1, label=memberName, style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n33  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n36  [key=2, style=dotted];
n17 -> n19  [color=darkseagreen4, key=1, label=json, style=dashed];
n24 -> n25  [key=0, style=solid];
n24 -> n35  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n35  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n28  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n35  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n35  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n35  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n29  [key=2, style=dotted];
n7 -> n13  [color=darkseagreen4, key=1, label=values, style=dashed];
n7 -> n14  [color=darkseagreen4, key=1, label=values, style=dashed];
n7 -> n15  [color=darkseagreen4, key=1, label=values, style=dashed];
n7 -> n16  [color=darkseagreen4, key=1, label=values, style=dashed];
n8 -> n9  [key=0, style=solid];
n13 -> n10  [key=0, style=solid];
n13 -> n34  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n32 -> n119  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n37  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n38  [key=2, style=dotted];
n19 -> n21  [color=darkseagreen4, key=1, label=newDynamicObject, style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n35  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [color=darkseagreen4, key=1, label=d, style=dashed];
n21 -> n24  [color=darkseagreen4, key=1, label=d, style=dashed];
n21 -> n25  [color=darkseagreen4, key=1, label=d, style=dashed];
n22 -> n23  [key=0, style=solid];
n22 -> n35  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n35  [key=2, style=dotted];
n26 -> n0  [color=blue, key=0, style=bold];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n57  [key=2, style=dotted];
n40 -> n42  [color=darkseagreen4, key=1, label=o, style=dashed];
n40 -> n43  [color=darkseagreen4, key=1, label=o, style=dashed];
n40 -> n44  [color=darkseagreen4, key=1, label=o, style=dashed];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n28  [key=2, style=dotted];
n44 -> n45  [color=red, key=0, style=solid];
n44 -> n58  [key=2, style=dotted];
n44 -> n59  [key=2, style=dotted];
n44 -> n48  [color=darkseagreen4, key=1, label=json, style=dashed];
n44 -> n49  [color=darkseagreen4, key=1, label=json, style=dashed];
n44 -> n46  [color=green, key=0, style=solid];
n45 -> n46  [color=red, key=0, style=solid];
n45 -> n37  [color=red, key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n37  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n58  [key=2, style=dotted];
n49 -> n61  [key=2, style=dotted];
n49 -> n51  [color=darkseagreen4, key=1, label=n, style=dashed];
n49 -> n52  [color=darkseagreen4, key=1, label=n, style=dashed];
n49 -> n53  [color=darkseagreen4, key=1, label=n, style=dashed];
n49 -> n54  [color=darkseagreen4, key=1, label=n, style=dashed];
n49 -> n55  [color=darkseagreen4, key=1, label=n, style=dashed];
n46 -> n47  [key=0, style=solid];
n46 -> n60  [key=2, style=dotted];
n46 -> n48  [color=darkseagreen4, key=1, label=dynamicChildObjectTypeName, style=dashed];
n47 -> n48  [key=0, style=solid];
n47 -> n60  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n62  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n35  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n35  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n62  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n35  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n35  [key=2, style=dotted];
n56 -> n39  [color=blue, key=0, style=bold];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n66  [key=2, style=dotted];
n64 -> n67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n64 -> n64  [color=darkorchid, key=3, label="Local variable string json", style=bold];
n65 -> n63  [color=blue, key=0, style=bold];
n67 -> n68  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n58  [key=2, style=dotted];
n68 -> n71  [color=darkseagreen4, key=1, label=settings, style=dashed];
n69 -> n70  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n72 -> n67  [color=blue, key=0, style=bold];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n29  [key=2, style=dotted];
n76 -> n74  [color=blue, key=0, style=bold];
n77 -> n78  [key=0, style=solid];
n77 -> n79  [color=darkorchid, key=3, label="method methodReturn bool TrySetMember", style=bold];
n78 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n80 -> n77  [color=blue, key=0, style=bold];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n58  [key=2, style=dotted];
n82 -> n85  [color=darkseagreen4, key=1, label=settings, style=dashed];
n83 -> n84  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n73  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n84  [color=darkorchid, key=3, label="Local variable string json", style=bold];
n86 -> n87  [key=0, style=solid];
n86 -> n35  [key=2, style=dotted];
n87 -> n81  [color=blue, key=0, style=bold];
n88 -> n89  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n89 -> n27  [key=2, style=dotted];
n89 -> n91  [color=darkseagreen4, key=1, label=o, style=dashed];
n89 -> n92  [color=darkseagreen4, key=1, label=o, style=dashed];
n89 -> n93  [color=darkseagreen4, key=1, label=o, style=dashed];
n89 -> n94  [color=darkseagreen4, key=1, label=o, style=dashed];
n90 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n94 -> n58  [key=2, style=dotted];
n94 -> n59  [key=2, style=dotted];
n95 -> n96  [key=0, style=solid];
n95 -> n37  [key=2, style=dotted];
n96 -> n88  [color=blue, key=0, style=bold];
n97 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n27  [key=2, style=dotted];
n98 -> n100  [color=darkseagreen4, key=1, label=o, style=dashed];
n98 -> n101  [color=darkseagreen4, key=1, label=o, style=dashed];
n98 -> n102  [color=darkseagreen4, key=1, label=o, style=dashed];
n98 -> n103  [color=darkseagreen4, key=1, label=o, style=dashed];
n99 -> n100  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n103 -> n58  [key=2, style=dotted];
n103 -> n59  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n104 -> n37  [key=2, style=dotted];
n105 -> n97  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n27  [key=2, style=dotted];
n107 -> n109  [color=darkseagreen4, key=1, label=o, style=dashed];
n107 -> n110  [color=darkseagreen4, key=1, label=o, style=dashed];
n107 -> n111  [color=darkseagreen4, key=1, label=o, style=dashed];
n107 -> n112  [color=darkseagreen4, key=1, label=o, style=dashed];
n107 -> n113  [color=darkseagreen4, key=1, label=o, style=dashed];
n107 -> n114  [color=darkseagreen4, key=1, label=o, style=dashed];
n108 -> n109  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n58  [key=2, style=dotted];
n114 -> n59  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n37  [key=2, style=dotted];
n116 -> n106  [color=blue, key=0, style=bold];
n117 -> n118  [key=0, style=solid];
n117 -> n29  [key=2, style=dotted];
n118 -> n27  [color=blue, key=0, style=bold];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [key=2, style=dotted];
n120 -> n32  [color=blue, key=0, style=bold];
n122 -> n123  [key=0, style=solid];
n122 -> n127  [color=darkseagreen4, key=1, label="System.Dynamic.ConvertBinder", style=dashed];
n122 -> n79  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
n123 -> n124  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n130  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n124 -> n127  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n125 -> n129  [key=2, style=dotted];
n125 -> n128  [color=darkseagreen4, key=1, label="out object", style=dashed];
n126 -> n128  [key=0, style=solid];
n128 -> n122  [color=blue, key=0, style=bold];
n131 -> n132  [key=0, style=solid];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [key=2, style=dotted];
n133 -> n131  [color=blue, key=0, style=bold];
n135 -> n136  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n138  [key=2, style=dotted];
n137 -> n135  [color=blue, key=0, style=bold];
n139 -> n140  [key=0, style=solid];
n139 -> n79  [color=darkorchid, key=3, label="method methodReturn bool TrySetMember", style=bold];
n140 -> n141  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n142 -> n139  [color=blue, key=0, style=bold];
n143 -> n144  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n145 -> n143  [color=blue, key=0, style=bold];
}
