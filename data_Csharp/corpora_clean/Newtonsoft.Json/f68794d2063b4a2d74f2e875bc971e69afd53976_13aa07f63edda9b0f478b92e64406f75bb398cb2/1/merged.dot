digraph  {
m0_154 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", span="372-372", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForDirectoryInfo()", file="CustomerDataSet.cs"];
m0_10 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="50-50", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="CustomerDataSet.cs"];
m0_124 [label="CustomerDataSet ds = new CustomerDataSet()", span="251-251", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_158 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="CustomerDataSet.cs"];
m0_125 [label="global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType()", span="252-252", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_126 [label="global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence()", span="253-253", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_127 [label="global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny()", span="254-254", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_128 [label="any.Namespace = ds.Namespace", span="255-255", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_129 [label="sequence.Items.Add(any)", span="256-256", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_130 [label="type.Particle = sequence", span="257-257", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_90 [label="Assert.AreEqual(schema, schema.Properties[''Child''])", span="295-295", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_92 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", span="299-299", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="CustomerDataSet.cs"];
m0_91 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", span="286-286", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_93 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="301-301", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="CustomerDataSet.cs"];
m0_94 [label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="302-302", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="CustomerDataSet.cs"];
m0_95 [label="JsonSchema schema = generator.Generate(typeof(Type))", span="304-304", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForType()", file="CustomerDataSet.cs"];
m0_295 [label="Entry global::System.Xml.Schema.XmlSchemaAttribute.cstr", span="", cluster="global::System.Xml.Schema.XmlSchemaAttribute.cstr", file="CustomerDataSet.cs"];
m0_192 [label="Assert.AreEqual(2, version.Minor)", span="591-591", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaSerializable()", file="CustomerDataSet.cs"];
m0_19 [label="string strSchema = ((string)(info.GetValue(''XmlSchema'', typeof(string))))", span="47-47", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs"];
m0_199 [label="return cln;", span="431-431", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="CustomerDataSet.cs"];
m0_17 [label="this.Relations.CollectionChanged += schemaChangedHandler1", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs"];
m0_175 [label="this.Prefix = table.Prefix", span="344-344", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", file="CustomerDataSet.cs"];
m0_176 [label="this.MinimumCapacity = table.MinimumCapacity", span="345-345", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", file="CustomerDataSet.cs"];
m0_177 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", span="329-329", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", file="CustomerDataSet.cs"];
m0_178 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="CustomerDataSet.cs"];
m0_179 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="350-350", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs"];
m0_180 [label="this.InitVars()", span="353-353", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs"];
m0_187 [label="object[] columnValuesArray = new object[] {\r\n                        CustomerID}", span="411-412", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs"];
m0_181 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="350-350", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs"];
m0_182 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="401-401", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs"];
m0_183 [label="this.Rows.Add(row)", span="403-403", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs"];
m0_185 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs"];
m0_189 [label="this.Rows.Add(rowCustomersRow)", span="414-414", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs"];
m0_190 [label="return rowCustomersRow;", span="415-415", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs"];
m0_184 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="401-401", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs"];
m0_186 [label="CustomersRow rowCustomersRow = ((CustomersRow)(this.NewRow()))", span="410-410", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs"];
m0_188 [label="rowCustomersRow.ItemArray = columnValuesArray", span="413-413", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs"];
m0_191 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", span="408-408", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.AddCustomersRow(string)", file="CustomerDataSet.cs"];
m0_193 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", span="420-420", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="CustomerDataSet.cs"];
m0_194 [label="return this.Rows.GetEnumerator();", span="422-422", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="CustomerDataSet.cs"];
m0_195 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", span="420-420", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetEnumerator()", file="CustomerDataSet.cs"];
m0_174 [label="this.Namespace = table.Namespace", span="342-342", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable(System.Data.DataTable)", file="CustomerDataSet.cs"];
m0_225 [label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="676-676", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="CustomerDataSet.cs"];
m0_209 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", span="634-634", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="CustomerDataSet.cs"];
m0_51 [label="JsonSchema productArraySchema = schema.Properties[''product'']", span="238-238", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="CustomerDataSet.cs"];
m0_47 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", span="231-231", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="CustomerDataSet.cs"];
m0_18 [label="return;", span="45-45", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs"];
m0_119 [label="objectType == typeof(DirectoryInfo)", span="352-352", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="CustomerDataSet.cs"];
m0_121 [label="return base.CreateContract(objectType);", span="357-357", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="CustomerDataSet.cs"];
m0_120 [label="return base.CreateObjectContract(objectType);", span="354-354", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="CustomerDataSet.cs"];
m0_122 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", span="350-350", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="CustomerDataSet.cs"];
m0_196 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", span="427-427", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="CustomerDataSet.cs"];
m0_49 [label="JsonSchema schema = generator.Generate(typeof(Store))", span="234-234", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="CustomerDataSet.cs"];
m0_210 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", span="458-458", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="CustomerDataSet.cs"];
m0_211 [label="return ((CustomersRow)(this.NewRow()));", span="460-460", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="CustomerDataSet.cs"];
m0_213 [label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(type)", span="640-640", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="CustomerDataSet.cs"];
m0_212 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", span="458-458", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.NewCustomersRow()", file="CustomerDataSet.cs"];
m0_214 [label="Assert.IsNotNull(jsonSchema)", span="643-643", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="CustomerDataSet.cs"];
m0_215 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", span="634-634", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularCollectionReferences()", file="CustomerDataSet.cs"];
m0_228 [label="string json = jsonSchema.ToString()", span="680-680", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="CustomerDataSet.cs"];
m0_229 [label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues'''',\r\n  ''''required'''': true,\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''properties'''': {\r\n    ''''DefaultValueHandlingIgnoreProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''DefaultValueHandlingIncludeProperty'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''DefaultValueHandlingPopulateProperty'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''DefaultValueHandlingIgnoreAndPopulateProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''Default!''''\r\n    },\r\n    ''''NullValueHandlingIgnoreProperty'''': {\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''NullValueHandlingIncludeProperty'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''ReferenceLoopHandlingErrorProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    },\r\n    ''''ReferenceLoopHandlingIgnoreProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    },\r\n    ''''ReferenceLoopHandlingSerializeProperty'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues''''\r\n    }\r\n  }\r\n}'', json)", span="682-743", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="CustomerDataSet.cs"];
m0_230 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", span="674-674", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="CustomerDataSet.cs"];
m0_231 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", span="747-747", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="CustomerDataSet.cs"];
m0_232 [label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="749-749", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateForNullableInt32()", file="CustomerDataSet.cs"];
m0_133 [label="global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream()", span="261-261", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_96 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="CustomerDataSet.cs"];
m0_99 [label="Entry Unk.Read", span="", cluster="Unk.Read", file="CustomerDataSet.cs"];
m0_97 [label="Entry global::System.Xml.XmlTextWriter.cstr", span="", cluster="global::System.Xml.XmlTextWriter.cstr", file="CustomerDataSet.cs"];
m0_98 [label="Entry Unk.WriteXmlSchema", span="", cluster="Unk.WriteXmlSchema", file="CustomerDataSet.cs"];
m0_100 [label="this.InitVars(true)", span="201-201", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="CustomerDataSet.cs"];
m0_48 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="233-233", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Store()", file="CustomerDataSet.cs"];
m0_138 [label="schemas.MoveNext()", span="267-267", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_139 [label="schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current))", span="269-269", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_140 [label="s2.SetLength(0)", span="270-270", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_141 [label="schema.Write(s2)", span="271-271", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_142 [label="(s1.Length == s2.Length)", span="272-272", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_143 [label="s1.Position = 0", span="274-274", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_152 [label="Entry global::System.Xml.Schema.XmlSchemaSequence.cstr", span="", cluster="global::System.Xml.Schema.XmlSchemaSequence.cstr", file="CustomerDataSet.cs"];
m0_144 [label="s2.Position = 0", span="275-275", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_145 [label="((s1.Position != s1.Length)\r\n                          && (s1.ReadByte() == s2.ReadByte()))", span="276-277", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_146 [label="(s1.Position == s1.Length)", span="281-281", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_150 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", span="249-249", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_147 [label="return type;", span="283-283", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_148 [label="xs.Add(dsSchema)", span="300-300", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_149 [label="return type;", span="301-301", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_151 [label="Entry global::System.Xml.Schema.XmlSchemaComplexType.cstr", span="", cluster="global::System.Xml.Schema.XmlSchemaComplexType.cstr", file="CustomerDataSet.cs"];
m0_153 [label="Entry global::System.Xml.Schema.XmlSchemaAny.cstr", span="", cluster="global::System.Xml.Schema.XmlSchemaAny.cstr", file="CustomerDataSet.cs"];
m0_110 [label="this.EnforceConstraints = true", span="224-224", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_111 [label="this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema", span="225-225", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_112 [label="this.tableCustomers = new CustomersDataTable()", span="226-226", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_113 [label="base.Tables.Add(this.tableCustomers)", span="227-227", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_114 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", span="220-220", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_115 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", span="319-319", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CustomersDataTable()", file="CustomerDataSet.cs"];
m0_11 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="130-130", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="CustomerDataSet.cs"];
m0_123 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", span="249-249", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_203 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", span="436-436", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="CustomerDataSet.cs"];
m0_204 [label="this.columnCustomerID = base.Columns[''CustomerID'']", span="445-445", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", file="CustomerDataSet.cs"];
m0_205 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", span="443-443", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitVars()", file="CustomerDataSet.cs"];
m0_206 [label="this.columnCustomerID = new global::System.Data.DataColumn(''CustomerID'', typeof(string), null, global::System.Data.MappingType.Element)", span="452-452", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="CustomerDataSet.cs"];
m0_207 [label="base.Columns.Add(this.columnCustomerID)", span="453-453", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="CustomerDataSet.cs"];
m0_208 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", span="450-450", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.InitClass()", file="CustomerDataSet.cs"];
m0_67 [label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                JsonSchemaGenerator generator = new JsonSchemaGenerator();\r\n                generator.Generate(typeof(CircularReferenceClass));\r\n            }, @''Unresolved circular reference for type 'Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass'. Explicitly define an Id for the type using a JsonObject/JsonArray attribute or automatically generate a type Id using the UndefinedSchemaIdHandling property.'')", span="264-268", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="CustomerDataSet.cs"];
m0_68 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", span="262-262", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceError()", file="CustomerDataSet.cs"];
m0_69 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="357-357", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="CustomerDataSet.cs"];
m0_88 [label="Assert.AreEqual(''MyExplicitId'', schema.Id)", span="293-293", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_50 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", span="199-199", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="CustomerDataSet.cs"];
m0_52 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", span="127-127", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="CustomerDataSet.cs"];
m0_53 [label="this.BeginInit()", span="129-129", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="CustomerDataSet.cs"];
m0_54 [label="this.InitClass()", span="130-130", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="CustomerDataSet.cs"];
m0_43 [label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''LastName''].Type)", span="226-226", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="CustomerDataSet.cs"];
m0_63 [label="schema = generator.Generate(typeof(Store))", span="257-257", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_12 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CustomerDataSet.cs"];
m0_44 [label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''BirthDate''].Type)", span="227-227", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="CustomerDataSet.cs"];
m0_41 [label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''FirstName''].Type)", span="224-224", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="CustomerDataSet.cs"];
m0_107 [label="Assert.AreEqual(true, schema.AllowAdditionalProperties)", span="324-324", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaForISerializable()", file="CustomerDataSet.cs"];
m0_131 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1311-1311", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="CustomerDataSet.cs"];
m0_132 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="CustomerDataSet.cs"];
m0_137 [label="Exit lambda expression", span="365-365", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_136 [label="m.PropertyName != ''Root''", span="365-365", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_134 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="CustomerDataSet.cs"];
m0_135 [label="Entry lambda expression", span="365-365", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_13 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="CustomerDataSet.cs"];
m0_14 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CustomerDataSet.cs"];
m0_15 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="CustomerDataSet.cs"];
m0_16 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="CustomerDataSet.cs"];
m0_20 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", span="97-97", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="CustomerDataSet.cs"];
m0_24 [label="StringAssert.AreEqual(@''{\r\n  ''''description'''': ''''DefaultValueAttributeTestClass description!'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''TestField1'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer'''',\r\n      ''''default'''': 21\r\n    },\r\n    ''''TestProperty1'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ],\r\n      ''''default'''': ''''TestProperty1Value''''\r\n    }\r\n  }\r\n}'', json)", span="104-123", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="CustomerDataSet.cs"];
m0_25 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", span="97-97", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="CustomerDataSet.cs"];
m0_26 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", span="128-128", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="CustomerDataSet.cs"];
m0_27 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="130-130", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="CustomerDataSet.cs"];
m0_28 [label="JsonSchema schema = generator.Generate(typeof(Person))", span="131-131", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="CustomerDataSet.cs"];
m0_29 [label="string json = schema.ToString()", span="133-133", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="CustomerDataSet.cs"];
m0_30 [label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''Person'''',\r\n  ''''title'''': ''''Title!'''',\r\n  ''''description'''': ''''JsonObjectAttribute description!'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''BirthDate'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''LastModified'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    }\r\n  }\r\n}'', json)", span="135-157", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="CustomerDataSet.cs"];
m0_31 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", span="128-128", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_Person()", file="CustomerDataSet.cs"];
m0_32 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", span="161-161", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="CustomerDataSet.cs"];
m0_33 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="163-163", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="CustomerDataSet.cs"];
m0_34 [label="JsonSchema schema = generator.Generate(typeof(UserNullable))", span="164-164", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="CustomerDataSet.cs"];
m0_35 [label="string json = schema.ToString()", span="166-166", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="CustomerDataSet.cs"];
m0_36 [label="StringAssert.AreEqual(@''{\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''': {\r\n    ''''Id'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''FName'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''LName'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''string'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''RoleId'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''NullableRoleId'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''integer'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''NullRoleId'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''integer'''',\r\n        ''''null''''\r\n      ]\r\n    },\r\n    ''''Active'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': [\r\n        ''''boolean'''',\r\n        ''''null''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="168-215", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="CustomerDataSet.cs"];
m0_37 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", span="161-161", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_UserNullable()", file="CustomerDataSet.cs"];
m0_21 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="99-99", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="CustomerDataSet.cs"];
m0_23 [label="string json = schema.ToString()", span="102-102", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="CustomerDataSet.cs"];
m0_22 [label="JsonSchema schema = generator.Generate(typeof(DefaultValueAttributeTestClass))", span="100-100", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_DefaultValueAttributeTestClass()", file="CustomerDataSet.cs"];
m0_38 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", span="219-219", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="CustomerDataSet.cs"];
m0_233 [label="Entry Unk.OnRowChanging", span="", cluster="Unk.OnRowChanging", file="CustomerDataSet.cs"];
m0_234 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", span="501-501", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_235 [label="base.OnRowDeleted(e)", span="503-503", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_236 [label="(this.CustomersRowDeleted != null)", span="504-504", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_167 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="478-478", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_168 [label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="479-479", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_170 [label="JsonSchema schema = generator.Generate(typeof(Version), true)", span="487-487", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_172 [label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''System.Version'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''additionalProperties'''': false,\r\n  ''''properties'''': {\r\n    ''''major'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''minor'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''build'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''revision'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''majorRevision'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    },\r\n    ''''minorRevision'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''integer''''\r\n    }\r\n  }\r\n}'', json)", span="491-524", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_169 [label="generator.ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n            }", span="480-485", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_171 [label="string json = schema.ToString()", span="489-489", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_173 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", span="476-476", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_42 [label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''MiddleName''].Type)", span="225-225", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="CustomerDataSet.cs"];
m0_102 [label="this.tableCustomers = ((CustomersDataTable)(base.Tables[''Customers'']))", span="208-208", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs"];
m0_103 [label="(initTable == true)", span="209-209", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs"];
m0_104 [label="(this.tableCustomers != null)", span="211-211", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs"];
m0_105 [label="this.tableCustomers.InitVars()", span="213-213", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs"];
m0_106 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", span="206-206", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs"];
m0_108 [label="this.DataSetName = ''CustomerDataSet''", span="222-222", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_109 [label="this.Prefix = ''''", span="223-223", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_160 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="CustomerDataSet.cs"];
m0_116 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", span="343-343", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", file="CustomerDataSet.cs"];
m0_117 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", span="343-343", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CustomDirectoryInfoMapper()", file="CustomerDataSet.cs"];
m0_118 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", span="350-350", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper.CreateContract(System.Type)", file="CustomerDataSet.cs"];
m0_237 [label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper", span="", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_238 [label=errors, span="", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="24-24", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs"];
m0_1 [label="this.BeginInit()", span="26-26", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs", color=green, community=0];
m0_2 [label="this.InitClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs"];
m0_3 [label="global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged)", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs"];
m0_8 [label="Entry Unk.BeginInit", span="", cluster="Unk.BeginInit", file="CustomerDataSet.cs"];
m0_4 [label="base.Tables.CollectionChanged += schemaChangedHandler", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs"];
m0_5 [label="base.Relations.CollectionChanged += schemaChangedHandler", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs"];
m0_6 [label="this.EndInit()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs"];
m0_7 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", span="24-24", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomerDataSet()", file="CustomerDataSet.cs"];
m0_9 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", span="220-220", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitClass()", file="CustomerDataSet.cs"];
m0_220 [label="JsonSchema jsonSchema = jsonSchemaGenerator.Generate(typeof(CircularReferenceClass))", span="652-652", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="CustomerDataSet.cs"];
m0_221 [label="string json = jsonSchema.ToString()", span="653-653", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="CustomerDataSet.cs"];
m0_222 [label="StringAssert.AreEqual(@''{\r\n  ''''id'''': ''''Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass'''',\r\n  ''''type'''': [\r\n    ''''object'''',\r\n    ''''null''''\r\n  ],\r\n  ''''properties'''': {\r\n    ''''Name'''': {\r\n      ''''required'''': true,\r\n      ''''type'''': ''''string''''\r\n    },\r\n    ''''Child'''': {\r\n      ''''$ref'''': ''''Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass''''\r\n    }\r\n  }\r\n}'', json)", span="655-670", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="CustomerDataSet.cs"];
m0_223 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", span="647-647", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="CustomerDataSet.cs"];
m0_224 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", span="674-674", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.JsonPropertyWithHandlingValues()", file="CustomerDataSet.cs"];
m0_46 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CustomerDataSet.cs"];
m0_66 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeTables()", span="146-146", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ShouldSerializeTables()", file="CustomerDataSet.cs"];
m0_89 [label="Assert.AreEqual(JsonSchemaType.Object | JsonSchemaType.Null, schema.Properties[''Child''].Type)", span="294-294", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_250 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", span="530-530", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_253 [label="CustomerDataSet ds = new CustomerDataSet()", span="534-534", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_252 [label="global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence()", span="533-533", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_254 [label="global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny()", span="535-535", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_267 [label="attribute1.FixedValue = ds.Namespace", span="548-548", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_274 [label="global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable()", span="555-555", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_291 [label="xs.Add(dsSchema)", span="597-597", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_268 [label="type.Attributes.Add(attribute1)", span="549-549", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_272 [label="type.Attributes.Add(attribute2)", span="553-553", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_259 [label="sequence.Items.Add(any1)", span="540-540", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_264 [label="sequence.Items.Add(any2)", span="545-545", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_251 [label="global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType()", span="532-532", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_273 [label="type.Particle = sequence", span="554-554", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_255 [label="any1.Namespace = ''http://www.w3.org/2001/XMLSchema''", span="536-536", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_266 [label="attribute1.Name = ''namespace''", span="547-547", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_275 [label="xs.Contains(dsSchema.TargetNamespace)", span="556-556", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_279 [label="dsSchema.Write(s1)", span="563-563", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_280 [label="global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator()", span="564-564", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_290 [label="return type;", span="580-580", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_281 [label="schemas.MoveNext()", span="564-564", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_292 [label="return type;", span="598-598", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_269 [label="global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute()", span="550-550", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_271 [label="attribute2.FixedValue = ''CustomersDataTable''", span="552-552", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_258 [label="any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax", span="539-539", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_260 [label="global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny()", span="541-541", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_263 [label="any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax", span="544-544", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_265 [label="global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute()", span="546-546", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_276 [label="global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream()", span="558-558", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_277 [label="global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream()", span="559-559", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_256 [label="any1.MinOccurs = new decimal(0)", span="537-537", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_278 [label="global::System.Xml.Schema.XmlSchema schema = null", span="562-562", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_282 [label="schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current))", span="566-566", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_289 [label="(s1.Position == s1.Length)", span="578-578", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_285 [label="(s1.Length == s2.Length)", span="569-569", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_270 [label="attribute2.Name = ''tableTypeName''", span="551-551", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_257 [label="any1.MaxOccurs = decimal.MaxValue", span="538-538", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_261 [label="any2.Namespace = ''urn:schemas-microsoft-com:xml-diffgram-v1''", span="542-542", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_262 [label="any2.MinOccurs = new decimal(1)", span="543-543", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_286 [label="s1.Position = 0", span="571-571", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_288 [label="((s1.Position != s1.Length)\r\n                            && (s1.ReadByte() == s2.ReadByte()))", span="573-574", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_283 [label="s2.SetLength(0)", span="567-567", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_284 [label="schema.Write(s2)", span="568-568", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_287 [label="s2.Position = 0", span="572-572", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_293 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", span="530-530", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet)", file="CustomerDataSet.cs"];
m0_245 [label="Entry Unk.OnRowDeleting", span="", cluster="Unk.OnRowDeleting", file="CustomerDataSet.cs"];
m0_294 [label="Entry decimal.Decimal(int)", span="0-0", cluster="decimal.Decimal(int)", file="CustomerDataSet.cs"];
m0_162 [label="Entry lambda expression", span="469-469", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_161 [label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="117-117", cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="CustomerDataSet.cs"];
m0_163 [label="errors.Add(args.Message)", span="469-469", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_164 [label="Exit lambda expression", span="469-469", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_165 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CustomerDataSet.cs"];
m0_198 [label="cln.InitVars()", span="430-430", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="CustomerDataSet.cs"];
m0_83 [label="this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add)", span="177-177", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.ReadXmlSerializable(System.Xml.XmlReader)", file="CustomerDataSet.cs"];
m0_226 [label="Entry CustomersRowChangeEvent.cstr", span="", cluster="CustomersRowChangeEvent.cstr", file="CustomerDataSet.cs"];
m0_227 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEventHandler.Invoke(object, Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent)", span="305-305", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEventHandler.Invoke(object, Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRowChangeEvent)", file="CustomerDataSet.cs"];
m0_57 [label="JsonSchema schema = generator.Generate(typeof(Store))", span="249-249", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_58 [label="Assert.AreEqual(null, schema.Id)", span="250-250", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_60 [label="schema = generator.Generate(typeof(Store))", span="253-253", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_59 [label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="252-252", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_61 [label="Assert.AreEqual(typeof(Store).FullName, schema.Id)", span="254-254", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_62 [label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseAssemblyQualifiedName", span="256-256", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_39 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="221-221", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.Generate_RequiredMembersClass()", file="CustomerDataSet.cs"];
m0_240 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", span="512-512", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_241 [label="base.OnRowDeleting(e)", span="514-514", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_242 [label="(this.CustomersRowDeleting != null)", span="515-515", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_243 [label="this.CustomersRowDeleting(this, new CustomersRowChangeEvent(((CustomersRow)(e.Row)), e.Action))", span="517-517", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_244 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", span="512-512", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)", file="CustomerDataSet.cs"];
m0_157 [label="Entry Unk.GetEnumerator", span="", cluster="Unk.GetEnumerator", file="CustomerDataSet.cs"];
m0_101 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", span="199-199", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars()", file="CustomerDataSet.cs"];
m0_159 [label="Entry System.IO.MemoryStream.SetLength(long)", span="0-0", cluster="System.IO.MemoryStream.SetLength(long)", file="CustomerDataSet.cs"];
m0_64 [label="Assert.AreEqual(typeof(Store).AssemblyQualifiedName, schema.Id)", span="258-258", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_65 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", span="245-245", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.MissingSchemaIdHandlingTest()", file="CustomerDataSet.cs"];
m0_239 [label=errors, span="", cluster="Unk.OnRowDeleted", file="CustomerDataSet.cs"];
m0_216 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="CustomerDataSet.cs"];
m0_70 [label="Entry lambda expression", span="264-268", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_71 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="266-266", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_72 [label="generator.Generate(typeof(CircularReferenceClass))", span="267-267", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_76 [label="generator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="275-275", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_77 [label="JsonSchema schema = generator.Generate(typeof(CircularReferenceClass), true)", span="277-277", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_78 [label="Assert.AreEqual(JsonSchemaType.String, schema.Properties[''Name''].Type)", span="279-279", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_79 [label="Assert.AreEqual(typeof(CircularReferenceClass).FullName, schema.Id)", span="280-280", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_80 [label="Assert.AreEqual(JsonSchemaType.Object | JsonSchemaType.Null, schema.Properties[''Child''].Type)", span="281-281", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_81 [label="Assert.AreEqual(schema, schema.Properties[''Child''])", span="282-282", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_82 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", span="272-272", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_84 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", span="286-286", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_85 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="288-288", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_86 [label="JsonSchema schema = generator.Generate(typeof(CircularReferenceWithIdClass))", span="290-290", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_73 [label="Exit lambda expression", span="264-268", cluster="lambda expression", file="CustomerDataSet.cs"];
m0_75 [label="JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="274-274", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_74 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", span="272-272", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithTypeNameId()", file="CustomerDataSet.cs"];
m0_87 [label="Assert.AreEqual(JsonSchemaType.String | JsonSchemaType.Null, schema.Properties[''Name''].Type)", span="292-292", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithExplicitId()", file="CustomerDataSet.cs"];
m0_55 [label="this.EndInit()", span="131-131", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="CustomerDataSet.cs"];
m0_56 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", span="127-127", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitializeDerivedDataSet()", file="CustomerDataSet.cs"];
m0_166 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", span="476-476", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.GenerateSchemaCamelCase()", file="CustomerDataSet.cs"];
m0_200 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", span="427-427", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="CustomerDataSet.cs"];
m0_201 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", span="436-436", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="CustomerDataSet.cs"];
m0_202 [label="return new CustomersDataTable();", span="438-438", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.CreateInstance()", file="CustomerDataSet.cs"];
m0_40 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", span="206-206", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.InitVars(bool)", file="CustomerDataSet.cs"];
m0_45 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="CustomerDataSet.cs"];
m0_217 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", span="647-647", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="CustomerDataSet.cs"];
m0_218 [label="JsonSchemaGenerator jsonSchemaGenerator = new JsonSchemaGenerator()", span="649-649", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="CustomerDataSet.cs"];
m0_219 [label="jsonSchemaGenerator.UndefinedSchemaIdHandling = UndefinedSchemaIdHandling.UseTypeName", span="651-651", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CircularReferenceWithMixedRequires()", file="CustomerDataSet.cs"];
m0_197 [label="CustomersDataTable cln = ((CustomersDataTable)(base.Clone()))", span="429-429", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.Clone()", file="CustomerDataSet.cs"];
m0_155 [label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0", cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="CustomerDataSet.cs"];
m0_156 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="CustomerDataSet.cs"];
m0_249 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="CustomerDataSet.cs"];
m0_246 [label="Entry Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="523-523", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs"];
m0_247 [label="this.Rows.Remove(row)", span="525-525", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs"];
m0_248 [label="Exit Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", span="523-523", cluster="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable.RemoveCustomersRow(Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersRow)", file="CustomerDataSet.cs"];
m0_309 [label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span="", file="CustomerDataSet.cs"];
m0_310 [label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span="", file="CustomerDataSet.cs"];
m0_311 [label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span="", file="CustomerDataSet.cs"];
m0_312 [label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet", span="", file="CustomerDataSet.cs"];
m0_313 [label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", span="", file="CustomerDataSet.cs"];
m0_314 [label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", span="", file="CustomerDataSet.cs"];
m0_315 [label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable", span="", file="CustomerDataSet.cs"];
m1_414 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(Newtonsoft.Json.Linq.JToken)", span="932-932", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_415 [label="return ContainsItem(item);", span="934-934", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_416 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(Newtonsoft.Json.Linq.JToken)", span="932-932", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_437 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Contains(object)", span="980-980", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Contains(object)", file="DefaultSerializationBinder.cs"];
m1_438 [label="return ContainsItem(EnsureValue(value));", span="982-982", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Contains(object)", file="DefaultSerializationBinder.cs"];
m1_439 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Contains(object)", span="980-980", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Contains(object)", file="DefaultSerializationBinder.cs"];
m1_66 [label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="289-289", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="DefaultSerializationBinder.cs"];
m1_67 [label="return GetDescendants(false);", span="291-291", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="DefaultSerializationBinder.cs"];
m1_68 [label="Exit Newtonsoft.Json.Linq.JContainer.Descendants()", span="289-289", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="DefaultSerializationBinder.cs"];
m1_399 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(Newtonsoft.Json.Linq.JToken)", span="899-899", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_400 [label="return IndexOfItem(item);", span="901-901", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_401 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(Newtonsoft.Json.Linq.JToken)", span="899-899", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_57 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_82 [label="Entry Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", span="324-324", cluster="Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", file="DefaultSerializationBinder.cs"];
m1_83 [label="return (content is IEnumerable && !(content is string) && !(content is JToken) && !(content is byte[]));", span="326-326", cluster="Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", file="DefaultSerializationBinder.cs"];
m1_84 [label="Exit Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", span="324-324", cluster="Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", file="DefaultSerializationBinder.cs"];
m1_277 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="707-707", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="DefaultSerializationBinder.cs"];
m1_278 [label="ClearItems()", span="709-709", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="DefaultSerializationBinder.cs"];
m1_279 [label="Exit Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="707-707", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="DefaultSerializationBinder.cs"];
m1_43 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", span="205-205", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_44 [label="container == this", span="207-207", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_47 [label="IList<JToken> t2 = container.ChildrenTokens", span="213-213", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_45 [label="return true;", span="209-209", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_46 [label="IList<JToken> t1 = ChildrenTokens", span="212-212", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_48 [label="t1.Count != t2.Count", span="215-215", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_51 [label="i < t1.Count", span="220-220", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_52 [label="!t1[i].DeepEquals(t2[i])", span="222-222", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_49 [label="return false;", span="217-217", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_50 [label="int i = 0", span="220-220", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_54 [label="i++", span="220-220", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_55 [label="return true;", span="228-228", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_53 [label="return false;", span="224-224", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_56 [label="Exit Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", span="205-205", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_269 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="689-689", cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="DefaultSerializationBinder.cs"];
m1_270 [label="return new JTokenWriter(this);", span="691-691", cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="DefaultSerializationBinder.cs"];
m1_271 [label="Exit Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="689-689", cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="DefaultSerializationBinder.cs"];
m1_98 [label="Entry Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="355-355", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_99 [label="IList<JToken> children = ChildrenTokens", span="357-357", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_100 [label="index > children.Count", span="359-359", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_101 [label="throw new ArgumentOutOfRangeException(nameof(index), ''Index must be within the bounds of the List.'');", span="361-361", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_103 [label="item = EnsureParentToken(item, skipParentCheck)", span="366-366", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_104 [label="JToken previous = (index == 0) ? null : children[index - 1]", span="368-368", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_105 [label="JToken next = (index == children.Count) ? null : children[index]", span="370-370", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_114 [label="children.Insert(index, item)", span="388-388", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_116 [label="OnListChanged(new ListChangedEventArgs(ListChangedType.ItemAdded, index))", span="393-393", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_118 [label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, item, index))", span="399-399", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_102 [label="CheckReentrancy()", span="364-364", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_106 [label="ValidateToken(item, null)", span="372-372", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_107 [label="item.Parent = this", span="374-374", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_108 [label="item.Previous = previous", span="376-376", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_110 [label="previous.Next = item", span="379-379", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_111 [label="item.Next = next", span="382-382", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_113 [label="next.Previous = item", span="385-385", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_109 [label="previous != null", span="377-377", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_112 [label="next != null", span="383-383", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_115 [label="_listChanged != null", span="391-391", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_117 [label="_collectionChanged != null", span="397-397", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_119 [label="Exit Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="355-355", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_468 [label="Entry System.ComponentModel.AddingNewEventArgs.AddingNewEventArgs()", span="0-0", cluster="System.ComponentModel.AddingNewEventArgs.AddingNewEventArgs()", file="DefaultSerializationBinder.cs"];
m1_272 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", span="74-74", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_376 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="DefaultSerializationBinder.cs"];
m1_382 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="870-870", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="DefaultSerializationBinder.cs"];
m1_383 [label="int hashCode = 0", span="872-872", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="DefaultSerializationBinder.cs"];
m1_384 [label=ChildrenTokens, span="873-873", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="DefaultSerializationBinder.cs"];
m1_385 [label="hashCode ^= item.GetDeepHashCode()", span="875-875", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="DefaultSerializationBinder.cs"];
m1_386 [label="return hashCode;", span="877-877", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="DefaultSerializationBinder.cs"];
m1_387 [label="Exit Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="870-870", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="DefaultSerializationBinder.cs"];
m1_206 [label="Entry Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="561-561", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_207 [label="existing == null || existing.Parent != this", span="563-563", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_209 [label="int index = IndexOfItem(existing)", span="568-568", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_210 [label="SetItem(index, replacement)", span="569-569", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_208 [label="return;", span="565-565", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_211 [label="Exit Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="561-561", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_191 [label="Entry Newtonsoft.Json.Linq.JContainer.ClearItems()", span="532-532", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_192 [label="CheckReentrancy()", span="534-534", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_193 [label="IList<JToken> children = ChildrenTokens", span="536-536", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_194 [label=children, span="538-538", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_198 [label="children.Clear()", span="545-545", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_195 [label="item.Parent = null", span="540-540", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_196 [label="item.Previous = null", span="541-541", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_197 [label="item.Next = null", span="542-542", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_199 [label="_listChanged != null", span="548-548", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_200 [label="OnListChanged(new ListChangedEventArgs(ListChangedType.Reset, -1))", span="550-550", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_201 [label="_collectionChanged != null", span="554-554", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_202 [label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset))", span="556-556", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_203 [label="Exit Newtonsoft.Json.Linq.JContainer.ClearItems()", span="532-532", cluster="Newtonsoft.Json.Linq.JContainer.ClearItems()", file="DefaultSerializationBinder.cs"];
m1_62 [label="Entry Newtonsoft.Json.Linq.JContainer.Values<T>()", span="280-280", cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="DefaultSerializationBinder.cs"];
m1_63 [label="return ChildrenTokens.Convert<JToken, T>();", span="282-282", cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="DefaultSerializationBinder.cs"];
m1_64 [label="Exit Newtonsoft.Json.Linq.JContainer.Values<T>()", span="280-280", cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="DefaultSerializationBinder.cs"];
m1_19 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateChildrenCollection()", span="129-129", cluster="Newtonsoft.Json.Linq.JContainer.CreateChildrenCollection()", file="DefaultSerializationBinder.cs"];
m1_20 [label="return new List<JToken>();", span="131-131", cluster="Newtonsoft.Json.Linq.JContainer.CreateChildrenCollection()", file="DefaultSerializationBinder.cs"];
m1_21 [label="Exit Newtonsoft.Json.Linq.JContainer.CreateChildrenCollection()", span="129-129", cluster="Newtonsoft.Json.Linq.JContainer.CreateChildrenCollection()", file="DefaultSerializationBinder.cs"];
m1_282 [label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object)", span="718-718", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object)", file="DefaultSerializationBinder.cs"];
m1_283 [label="MergeItem(content, new JsonMergeSettings())", span="720-720", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object)", file="DefaultSerializationBinder.cs"];
m1_284 [label="Exit Newtonsoft.Json.Linq.JContainer.Merge(object)", span="718-718", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object)", file="DefaultSerializationBinder.cs"];
m1_204 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()", file="DefaultSerializationBinder.cs"];
m1_29 [label="Entry Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", span="152-152", cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_30 [label="ListChangedEventHandler handler = _listChanged", span="154-154", cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_33 [label="handler(this, e)", span="161-161", cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_31 [label="handler != null", span="156-156", cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_32 [label="_busy = true", span="158-158", cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_34 [label="Exit Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", span="152-152", cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_455 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", span="1058-1058", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", file="DefaultSerializationBinder.cs"];
m1_456 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", span="1058-1058", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", file="DefaultSerializationBinder.cs"];
m1_446 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Remove(object)", span="1005-1005", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Remove(object)", file="DefaultSerializationBinder.cs"];
m1_447 [label="RemoveItem(EnsureValue(value))", span="1007-1007", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Remove(object)", file="DefaultSerializationBinder.cs"];
m1_448 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Remove(object)", span="1005-1005", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Remove(object)", file="DefaultSerializationBinder.cs"];
m1_10 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="DefaultSerializationBinder.cs"];
m1_280 [label="Entry Newtonsoft.Json.Linq.JContainer.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="712-712", cluster="Newtonsoft.Json.Linq.JContainer.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_281 [label="Exit Newtonsoft.Json.Linq.JContainer.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="712-712", cluster="Newtonsoft.Json.Linq.JContainer.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_23 [label="Entry Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)", span="139-139", cluster="Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)", file="DefaultSerializationBinder.cs"];
m1_24 [label="AddingNewEventHandler handler = _addingNew", span="141-141", cluster="Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)", file="DefaultSerializationBinder.cs"];
m1_26 [label="handler(this, e)", span="144-144", cluster="Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)", file="DefaultSerializationBinder.cs"];
m1_25 [label="handler != null", span="142-142", cluster="Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)", file="DefaultSerializationBinder.cs"];
m1_27 [label="Exit Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)", span="139-139", cluster="Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)", file="DefaultSerializationBinder.cs"];
m1_95 [label="Entry Newtonsoft.Json.Linq.JToken.CloneToken()", span="132-132", cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="DefaultSerializationBinder.cs"];
m1_244 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultSerializationBinder.cs"];
m1_374 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="DefaultSerializationBinder.cs"];
m1_229 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultSerializationBinder.cs"];
m1_273 [label="Entry Newtonsoft.Json.Linq.JContainer.ReplaceAll(object)", span="698-698", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceAll(object)", file="DefaultSerializationBinder.cs"];
m1_274 [label="ClearItems()", span="700-700", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceAll(object)", file="DefaultSerializationBinder.cs"];
m1_275 [label="Add(content)", span="701-701", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceAll(object)", file="DefaultSerializationBinder.cs"];
m1_276 [label="Exit Newtonsoft.Json.Linq.JContainer.ReplaceAll(object)", span="698-698", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceAll(object)", file="DefaultSerializationBinder.cs"];
m1_122 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="DefaultSerializationBinder.cs"];
m1_123 [label="Entry System.ComponentModel.ListChangedEventArgs.ListChangedEventArgs(System.ComponentModel.ListChangedType, int)", span="0-0", cluster="System.ComponentModel.ListChangedEventArgs.ListChangedEventArgs(System.ComponentModel.ListChangedType, int)", file="DefaultSerializationBinder.cs"];
m1_149 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="452-452", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_150 [label="int index = IndexOfItem(item)", span="454-454", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_151 [label="index >= 0", span="455-455", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_152 [label="RemoveItemAt(index)", span="457-457", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_154 [label="return false;", span="461-461", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_153 [label="return true;", span="458-458", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_155 [label="Exit Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="452-452", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_434 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Clear()", span="975-975", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Clear()", file="DefaultSerializationBinder.cs"];
m1_435 [label="ClearItems()", span="977-977", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Clear()", file="DefaultSerializationBinder.cs"];
m1_436 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Clear()", span="975-975", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Clear()", file="DefaultSerializationBinder.cs"];
m1_479 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveSort()", span="1117-1117", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveSort()", file="DefaultSerializationBinder.cs"];
m1_480 [label="throw new NotSupportedException();", span="1119-1119", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveSort()", file="DefaultSerializationBinder.cs"];
m1_481 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveSort()", span="1117-1117", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveSort()", file="DefaultSerializationBinder.cs"];
m1_373 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2217-2217", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_9 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="DefaultSerializationBinder.cs"];
m1_379 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="303-303", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="DefaultSerializationBinder.cs"];
m1_440 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.IList.IndexOf(object)", span="985-985", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.IndexOf(object)", file="DefaultSerializationBinder.cs"];
m1_441 [label="return IndexOfItem(EnsureValue(value));", span="987-987", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.IndexOf(object)", file="DefaultSerializationBinder.cs"];
m1_442 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.IList.IndexOf(object)", span="985-985", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.IndexOf(object)", file="DefaultSerializationBinder.cs"];
m1_0 [label="Entry Newtonsoft.Json.Linq.JContainer.JContainer()", span="102-102", cluster="Newtonsoft.Json.Linq.JContainer.JContainer()", file="DefaultSerializationBinder.cs"];
m1_1 [label="Exit Newtonsoft.Json.Linq.JContainer.JContainer()", span="102-102", cluster="Newtonsoft.Json.Linq.JContainer.JContainer()", file="DefaultSerializationBinder.cs"];
m1_423 [label="Entry Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", span="953-953", cluster="Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", file="DefaultSerializationBinder.cs"];
m1_424 [label="value == null", span="955-955", cluster="Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", file="DefaultSerializationBinder.cs"];
m1_426 [label="value is JToken", span="960-960", cluster="Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", file="DefaultSerializationBinder.cs"];
m1_427 [label="return (JToken)value;", span="962-962", cluster="Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", file="DefaultSerializationBinder.cs"];
m1_425 [label="return null;", span="957-957", cluster="Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", file="DefaultSerializationBinder.cs"];
m1_428 [label="throw new ArgumentException(''Argument is not a JToken.'');", span="965-965", cluster="Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", file="DefaultSerializationBinder.cs"];
m1_429 [label="Exit Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", span="953-953", cluster="Newtonsoft.Json.Linq.JContainer.EnsureValue(object)", file="DefaultSerializationBinder.cs"];
m1_28 [label="Entry System.ComponentModel.AddingNewEventHandler.Invoke(object, System.ComponentModel.AddingNewEventArgs)", span="0-0", cluster="System.ComponentModel.AddingNewEventHandler.Invoke(object, System.ComponentModel.AddingNewEventArgs)", file="DefaultSerializationBinder.cs"];
m1_430 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Add(object)", span="969-969", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Add(object)", file="DefaultSerializationBinder.cs"];
m1_431 [label="Add(EnsureValue(value))", span="971-971", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Add(object)", file="DefaultSerializationBinder.cs"];
m1_432 [label="return Count - 1;", span="972-972", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Add(object)", file="DefaultSerializationBinder.cs"];
m1_433 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Add(object)", span="969-969", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Add(object)", file="DefaultSerializationBinder.cs"];
m1_300 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="752-752", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_301 [label="ValidationUtils.ArgumentNotNull(r, nameof(r))", span="754-754", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_302 [label="IJsonLineInfo lineInfo = r as IJsonLineInfo", span="755-755", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_308 [label="r.TokenType", span="771-771", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_312 [label="a.SetLineInfo(lineInfo, settings)", span="778-778", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_321 [label="o.SetLineInfo(lineInfo, settings)", span="793-793", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_329 [label="JConstructor constructor = new JConstructor(r.Value.ToString())", span="806-806", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_330 [label="constructor.SetLineInfo(lineInfo, settings)", span="807-807", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_343 [label="JValue v = new JValue(r.Value)", span="825-825", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_344 [label="v.SetLineInfo(lineInfo, settings)", span="826-826", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_347 [label="settings != null && settings.CommentHandling == CommentHandling.Load", span="830-830", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_348 [label="v = JValue.CreateComment(r.Value.ToString())", span="832-832", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_349 [label="v.SetLineInfo(lineInfo, settings)", span="833-833", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_353 [label="v.SetLineInfo(lineInfo, settings)", span="839-839", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_357 [label="v.SetLineInfo(lineInfo, settings)", span="844-844", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_360 [label="string propertyName = r.Value.ToString()", span="848-848", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_362 [label="property.SetLineInfo(lineInfo, settings)", span="850-850", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_369 [label="throw new InvalidOperationException(''The JsonReader should not be on a token of type {0}.''.FormatWith(CultureInfo.InvariantCulture, r.TokenType));", span="865-865", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_370 [label="r.Read()", span="867-867", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_303 [label="JContainer parent = this", span="757-757", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_304 [label="parent is JProperty && ((JProperty)parent).Value != null", span="761-761", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_305 [label="parent == this", span="763-763", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_307 [label="parent = parent.Parent", span="768-768", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_313 [label="parent.Add(a)", span="779-779", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_306 [label="return;", span="765-765", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_309 [label="JsonToken.None", span="773-773", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_310 [label="JsonToken.StartArray", span="776-776", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_315 [label="JsonToken.EndArray", span="783-783", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_319 [label="JsonToken.StartObject", span="791-791", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_324 [label="JsonToken.EndObject", span="797-797", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_328 [label="JsonToken.StartConstructor", span="805-805", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_333 [label="JsonToken.EndConstructor", span="811-811", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_337 [label="JsonToken.String", span="819-819", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_346 [label="JsonToken.Comment", span="829-829", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_351 [label="JsonToken.Null", span="837-837", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_355 [label="JsonToken.Undefined", span="842-842", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_359 [label="JsonToken.PropertyName", span="847-847", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_311 [label="JArray a = new JArray()", span="777-777", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_314 [label="parent = a", span="780-780", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_316 [label="parent == this", span="784-784", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_317 [label="return;", span="786-786", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_318 [label="parent = parent.Parent", span="789-789", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_320 [label="JObject o = new JObject()", span="792-792", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_322 [label="parent.Add(o)", span="794-794", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_323 [label="parent = o", span="795-795", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_325 [label="parent == this", span="798-798", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_326 [label="return;", span="800-800", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_327 [label="parent = parent.Parent", span="803-803", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_331 [label="parent.Add(constructor)", span="808-808", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_332 [label="parent = constructor", span="809-809", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_334 [label="parent == this", span="812-812", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_335 [label="return;", span="814-814", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_336 [label="parent = parent.Parent", span="817-817", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_338 [label="JsonToken.Integer", span="820-820", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_339 [label="JsonToken.Float", span="821-821", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_340 [label="JsonToken.Date", span="822-822", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_341 [label="JsonToken.Boolean", span="823-823", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_342 [label="JsonToken.Bytes", span="824-824", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_345 [label="parent.Add(v)", span="827-827", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_350 [label="parent.Add(v)", span="834-834", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_352 [label="v = JValue.CreateNull()", span="838-838", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_354 [label="parent.Add(v)", span="840-840", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_356 [label="v = JValue.CreateUndefined()", span="843-843", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_358 [label="parent.Add(v)", span="845-845", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_361 [label="JProperty property = new JProperty(propertyName)", span="849-849", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_364 [label="JProperty existingPropertyWithName = parentObject.Property(propertyName)", span="853-853", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_366 [label="parent.Add(property)", span="856-856", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_367 [label="existingPropertyWithName.Replace(property)", span="860-860", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_368 [label="parent = property", span="862-862", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_363 [label="JObject parentObject = (JObject)parent", span="851-851", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_365 [label="existingPropertyWithName == null", span="854-854", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_371 [label="Exit Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="752-752", cluster="Newtonsoft.Json.Linq.JContainer.ReadContentFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_159 [label="Entry Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="469-469", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_160 [label="IList<JToken> children = ChildrenTokens", span="471-471", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_161 [label="index < 0", span="473-473", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_162 [label="throw new ArgumentOutOfRangeException(nameof(index), ''Index is less than 0.'');", span="475-475", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_163 [label="index >= children.Count", span="477-477", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_164 [label="throw new ArgumentOutOfRangeException(nameof(index), ''Index is equal to or greater than Count.'');", span="479-479", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_165 [label="JToken existing = children[index]", span="482-482", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_166 [label="IsTokenUnchanged(existing, item)", span="484-484", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_169 [label="item = EnsureParentToken(item, false)", span="491-491", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_171 [label="JToken previous = (index == 0) ? null : children[index - 1]", span="495-495", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_172 [label="JToken next = (index == children.Count - 1) ? null : children[index + 1]", span="496-496", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_180 [label="children[index] = item", span="512-512", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_185 [label="OnListChanged(new ListChangedEventArgs(ListChangedType.ItemChanged, index))", span="521-521", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_187 [label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace, item, existing, index))", span="527-527", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_170 [label="ValidateToken(item, existing)", span="493-493", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_181 [label="existing.Parent = null", span="514-514", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_182 [label="existing.Previous = null", span="515-515", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_183 [label="existing.Next = null", span="516-516", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_167 [label="return;", span="486-486", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_168 [label="CheckReentrancy()", span="489-489", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_173 [label="item.Parent = this", span="498-498", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_174 [label="item.Previous = previous", span="500-500", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_176 [label="previous.Next = item", span="503-503", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_177 [label="item.Next = next", span="506-506", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_179 [label="next.Previous = item", span="509-509", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_175 [label="previous != null", span="501-501", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_178 [label="next != null", span="507-507", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_184 [label="_listChanged != null", span="519-519", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_186 [label="_collectionChanged != null", span="525-525", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_188 [label="Exit Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="469-469", cluster="Newtonsoft.Json.Linq.JContainer.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_36 [label="Entry Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="175-175", cluster="Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_37 [label="NotifyCollectionChangedEventHandler handler = _collectionChanged", span="177-177", cluster="Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_40 [label="handler(this, e)", span="184-184", cluster="Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_38 [label="handler != null", span="179-179", cluster="Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_39 [label="_busy = true", span="181-181", cluster="Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_41 [label="Exit Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="175-175", cluster="Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_452 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.ICollection.CopyTo(System.Array, int)", span="1023-1023", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.ICollection.CopyTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_453 [label="CopyItemsTo(array, index)", span="1025-1025", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.ICollection.CopyTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_454 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.ICollection.CopyTo(System.Array, int)", span="1023-1023", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.ICollection.CopyTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_18 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="DefaultSerializationBinder.cs"];
m1_212 [label="Entry Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="572-572", cluster="Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_213 [label="return (IndexOfItem(item) != -1);", span="574-574", cluster="Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_214 [label="Exit Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="572-572", cluster="Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_375 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="131-131", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="DefaultSerializationBinder.cs"];
m1_35 [label="Entry System.ComponentModel.ListChangedEventHandler.Invoke(object, System.ComponentModel.ListChangedEventArgs)", span="0-0", cluster="System.ComponentModel.ListChangedEventHandler.Invoke(object, System.ComponentModel.ListChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_85 [label="Entry Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", span="329-329", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_86 [label="item == null", span="331-331", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_88 [label=skipParentCheck, span="336-336", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_89 [label="return item;", span="338-338", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_90 [label="item.Parent != null || item == this || (item.HasValues && Root == item)", span="345-345", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_91 [label="item = item.CloneToken()", span="347-347", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_92 [label="return item;", span="350-350", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_87 [label="return JValue.CreateNull();", span="333-333", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_93 [label="Exit Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", span="329-329", cluster="Newtonsoft.Json.Linq.JContainer.EnsureParentToken(Newtonsoft.Json.Linq.JToken, bool)", file="DefaultSerializationBinder.cs"];
m1_268 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="DefaultSerializationBinder.cs"];
m1_2 [label="Entry Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", span="106-106", cluster="Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_3 [label="ValidationUtils.ArgumentNotNull(other, nameof(other))", span="109-109", cluster="Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_5 [label=other, span="112-112", cluster="Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_4 [label="int i = 0", span="111-111", cluster="Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_6 [label="AddInternal(i, child, false)", span="114-114", cluster="Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_7 [label="i++", span="115-115", cluster="Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_8 [label="Exit Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", span="106-106", cluster="Newtonsoft.Json.Linq.JContainer.JContainer(Newtonsoft.Json.Linq.JContainer)", file="DefaultSerializationBinder.cs"];
m1_298 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410", cluster="Newtonsoft.Json.JsonReader.Read()", file="DefaultSerializationBinder.cs"];
m1_408 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(Newtonsoft.Json.Linq.JToken)", span="922-922", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_409 [label="Add(item)", span="924-924", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_410 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(Newtonsoft.Json.Linq.JToken)", span="922-922", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_449 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.IList.RemoveAt(int)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.RemoveAt(int)", file="DefaultSerializationBinder.cs"];
m1_450 [label="RemoveItemAt(index)", span="1012-1012", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.RemoveAt(int)", file="DefaultSerializationBinder.cs"];
m1_451 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.IList.RemoveAt(int)", span="1010-1010", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.RemoveAt(int)", file="DefaultSerializationBinder.cs"];
m1_96 [label="Entry Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="353-353", cluster="Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_97 [label="Exit Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="353-353", cluster="Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_230 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="DefaultSerializationBinder.cs"];
m1_443 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Insert(int, object)", span="990-990", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Insert(int, object)", file="DefaultSerializationBinder.cs"];
m1_444 [label="InsertItem(index, EnsureValue(value), false)", span="992-992", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Insert(int, object)", file="DefaultSerializationBinder.cs"];
m1_445 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Insert(int, object)", span="990-990", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.IList.Insert(int, object)", file="DefaultSerializationBinder.cs"];
m1_388 [label="Entry Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", span="1864-1864", cluster="Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", file="DefaultSerializationBinder.cs"];
m1_120 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="DefaultSerializationBinder.cs"];
m1_289 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="733-733", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_290 [label="int startDepth = reader.Depth", span="735-735", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_291 [label="!reader.Read()", span="737-737", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_292 [label="throw JsonReaderException.Create(reader, ''Error reading {0} from JsonReader.''.FormatWith(CultureInfo.InvariantCulture, GetType().Name));", span="739-739", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_293 [label="ReadContentFrom(reader, options)", span="742-742", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_294 [label="int endDepth = reader.Depth", span="744-744", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_296 [label="throw JsonReaderException.Create(reader, ''Unexpected end of content while loading {0}.''.FormatWith(CultureInfo.InvariantCulture, GetType().Name));", span="748-748", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_295 [label="endDepth > startDepth", span="746-746", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_297 [label="Exit Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="733-733", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="DefaultSerializationBinder.cs"];
m1_473 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="DefaultSerializationBinder.cs"];
m1_285 [label="Entry Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", span="7-7", cluster="Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", file="DefaultSerializationBinder.cs"];
m1_125 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", span="404-404", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_126 [label="IList<JToken> children = ChildrenTokens", span="406-406", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_127 [label="index < 0", span="408-408", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_128 [label="throw new ArgumentOutOfRangeException(nameof(index), ''Index is less than 0.'');", span="410-410", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_129 [label="index >= children.Count", span="412-412", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_130 [label="throw new ArgumentOutOfRangeException(nameof(index), ''Index is equal to or greater than Count.'');", span="414-414", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_132 [label="JToken item = children[index]", span="419-419", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_133 [label="JToken previous = (index == 0) ? null : children[index - 1]", span="420-420", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_134 [label="JToken next = (index == children.Count - 1) ? null : children[index + 1]", span="421-421", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_142 [label="children.RemoveAt(index)", span="436-436", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_144 [label="OnListChanged(new ListChangedEventArgs(ListChangedType.ItemDeleted, index))", span="441-441", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_146 [label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, item, index))", span="447-447", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_131 [label="CheckReentrancy()", span="417-417", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_139 [label="item.Parent = null", span="432-432", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_140 [label="item.Previous = null", span="433-433", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_141 [label="item.Next = null", span="434-434", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_135 [label="previous != null", span="423-423", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_136 [label="previous.Next = next", span="425-425", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_138 [label="next.Previous = previous", span="429-429", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_137 [label="next != null", span="427-427", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_143 [label="_listChanged != null", span="439-439", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_145 [label="_collectionChanged != null", span="445-445", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_147 [label="Exit Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", span="404-404", cluster="Newtonsoft.Json.Linq.JContainer.RemoveItemAt(int)", file="DefaultSerializationBinder.cs"];
m1_70 [label="Entry Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", span="298-298", cluster="Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", file="DefaultSerializationBinder.cs"];
m1_71 [label="return GetDescendants(true);", span="300-300", cluster="Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", file="DefaultSerializationBinder.cs"];
m1_72 [label="Exit Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", span="298-298", cluster="Newtonsoft.Json.Linq.JContainer.DescendantsAndSelf()", file="DefaultSerializationBinder.cs"];
m1_12 [label="Entry Newtonsoft.Json.Linq.JContainer.CheckReentrancy()", span="119-119", cluster="Newtonsoft.Json.Linq.JContainer.CheckReentrancy()", file="DefaultSerializationBinder.cs"];
m1_13 [label=_busy, span="122-122", cluster="Newtonsoft.Json.Linq.JContainer.CheckReentrancy()", file="DefaultSerializationBinder.cs"];
m1_14 [label="throw new InvalidOperationException(''Cannot change {0} during a collection change event.''.FormatWith(CultureInfo.InvariantCulture, GetType()));", span="124-124", cluster="Newtonsoft.Json.Linq.JContainer.CheckReentrancy()", file="DefaultSerializationBinder.cs"];
m1_15 [label="Exit Newtonsoft.Json.Linq.JContainer.CheckReentrancy()", span="119-119", cluster="Newtonsoft.Json.Linq.JContainer.CheckReentrancy()", file="DefaultSerializationBinder.cs"];
m1_121 [label="Entry Newtonsoft.Json.Linq.JContainer.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="621-621", cluster="Newtonsoft.Json.Linq.JContainer.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_240 [label="ValidationUtils.ArgumentNotNull(o, nameof(o))", span="623-623", cluster="Newtonsoft.Json.Linq.JContainer.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_241 [label="o.Type == JTokenType.Property", span="625-625", cluster="Newtonsoft.Json.Linq.JContainer.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_242 [label="throw new ArgumentException(''Can not add {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, o.GetType(), GetType()));", span="627-627", cluster="Newtonsoft.Json.Linq.JContainer.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_243 [label="Exit Newtonsoft.Json.Linq.JContainer.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="621-621", cluster="Newtonsoft.Json.Linq.JContainer.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_420 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(Newtonsoft.Json.Linq.JToken)", span="947-947", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_421 [label="return RemoveItem(item);", span="949-949", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_422 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(Newtonsoft.Json.Linq.JToken)", span="947-947", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_470 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", span="1098-1098", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", file="DefaultSerializationBinder.cs"];
m1_471 [label="throw new NotSupportedException();", span="1100-1100", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", file="DefaultSerializationBinder.cs"];
m1_472 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", span="1098-1098", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", file="DefaultSerializationBinder.cs"];
m1_411 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()", span="927-927", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()", file="DefaultSerializationBinder.cs"];
m1_412 [label="ClearItems()", span="929-929", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()", file="DefaultSerializationBinder.cs"];
m1_413 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()", span="927-927", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()", file="DefaultSerializationBinder.cs"];
m1_215 [label="Entry Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", span="577-577", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_216 [label="array == null", span="579-579", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_217 [label="throw new ArgumentNullException(nameof(array));", span="581-581", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_218 [label="arrayIndex < 0", span="583-583", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_219 [label="throw new ArgumentOutOfRangeException(nameof(arrayIndex), ''arrayIndex is less than 0.'');", span="585-585", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_220 [label="arrayIndex >= array.Length && arrayIndex != 0", span="587-587", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_222 [label="Count > array.Length - arrayIndex", span="591-591", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_226 [label="array.SetValue(token, arrayIndex + index)", span="599-599", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_221 [label="throw new ArgumentException(''arrayIndex is equal to or greater than the length of array.'');", span="589-589", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_223 [label="throw new ArgumentException(''The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.'');", span="593-593", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_224 [label="int index = 0", span="596-596", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_225 [label=ChildrenTokens, span="597-597", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_227 [label="index++", span="600-600", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_228 [label="Exit Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", span="577-577", cluster="Newtonsoft.Json.Linq.JContainer.CopyItemsTo(System.Array, int)", file="DefaultSerializationBinder.cs"];
m1_42 [label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0", cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="DefaultSerializationBinder.cs"];
m1_402 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int, Newtonsoft.Json.Linq.JToken)", span="904-904", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_403 [label="InsertItem(index, item, false)", span="906-906", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_404 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int, Newtonsoft.Json.Linq.JToken)", span="904-904", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_65 [label="Entry System.Collections.Generic.IEnumerable<T>.Convert<T, U>()", span="243-243", cluster="System.Collections.Generic.IEnumerable<T>.Convert<T, U>()", file="DefaultSerializationBinder.cs"];
m1_148 [label="Entry System.Collections.Generic.IList<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.IList<T>.RemoveAt(int)", file="DefaultSerializationBinder.cs"];
m1_299 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="DefaultSerializationBinder.cs"];
m1_58 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="DefaultSerializationBinder.cs"];
m1_59 [label="return new JEnumerable<JToken>(ChildrenTokens);", span="270-270", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="DefaultSerializationBinder.cs"];
m1_60 [label="Exit Newtonsoft.Json.Linq.JContainer.Children()", span="268-268", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="DefaultSerializationBinder.cs"];
m1_477 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", span="1113-1113", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", file="DefaultSerializationBinder.cs"];
m1_478 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", span="1113-1113", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", file="DefaultSerializationBinder.cs"];
m1_17 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DefaultSerializationBinder.cs"];
m1_69 [label="Entry Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", span="303-303", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_73 [label=self, span="305-305", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_74 [label="yield return this;", span="307-307", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_76 [label="yield return o;", span="312-312", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_80 [label="yield return d;", span="318-318", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_75 [label=ChildrenTokens, span="310-310", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_77 [label="JContainer c = o as JContainer", span="313-313", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_78 [label="c != null", span="314-314", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_79 [label="c.Descendants()", span="316-316", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_81 [label="Exit Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", span="303-303", cluster="Newtonsoft.Json.Linq.JContainer.GetDescendants(bool)", file="DefaultSerializationBinder.cs"];
m1_372 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="DefaultSerializationBinder.cs"];
m1_389 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", span="881-881", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_390 [label="return string.Empty;", span="883-883", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_391 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", span="881-881", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_231 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)", file="DefaultSerializationBinder.cs"];
m1_512 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)", file="DefaultSerializationBinder.cs"];
m1_190 [label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object, object, int)", span="0-0", cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object, object, int)", file="DefaultSerializationBinder.cs"];
m1_286 [label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="728-728", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_287 [label="MergeItem(content, settings)", span="730-730", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_288 [label="Exit Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="728-728", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_381 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="399-399", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_124 [label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object, int)", span="0-0", cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object, int)", file="DefaultSerializationBinder.cs"];
m1_469 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DefaultSerializationBinder.cs"];
m1_22 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DefaultSerializationBinder.cs"];
m1_380 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="263-263", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="DefaultSerializationBinder.cs"];
m1_189 [label="Entry Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="604-604", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_232 [label="JValue v1 = currentValue as JValue", span="606-606", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_234 [label="v1.Type == JTokenType.Null && newValue == null", span="610-610", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_236 [label="return v1.Equals(newValue);", span="615-615", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_233 [label="v1 != null", span="607-607", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_237 [label="return false;", span="618-618", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_235 [label="return true;", span="612-612", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_238 [label="Exit Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="604-604", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_11 [label="Entry Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", span="654-654", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_254 [label="IsMultiContent(content)", span="656-656", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_255 [label="IEnumerable enumerable = (IEnumerable)content", span="658-658", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_256 [label="int multiIndex = index", span="660-660", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_258 [label="AddInternal(multiIndex, c, skipParentCheck)", span="663-663", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_260 [label="JToken item = CreateFromContent(content)", span="669-669", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_261 [label="InsertItem(index, item, skipParentCheck)", span="671-671", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_257 [label=enumerable, span="661-661", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_259 [label="multiIndex++", span="664-664", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_262 [label="Exit Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", span="654-654", cluster="Newtonsoft.Json.Linq.JContainer.AddInternal(int, object, bool)", file="DefaultSerializationBinder.cs"];
m1_263 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", span="675-675", cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="DefaultSerializationBinder.cs"];
m1_264 [label="content is JToken", span="677-677", cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="DefaultSerializationBinder.cs"];
m1_265 [label="return (JToken)content;", span="679-679", cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="DefaultSerializationBinder.cs"];
m1_266 [label="return new JValue(content);", span="682-682", cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="DefaultSerializationBinder.cs"];
m1_267 [label="Exit Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", span="675-675", cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="DefaultSerializationBinder.cs"];
m1_205 [label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction)", span="0-0", cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction)", file="DefaultSerializationBinder.cs"];
m1_377 [label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="576-576", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="DefaultSerializationBinder.cs"];
m1_16 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DefaultSerializationBinder.cs"];
m1_457 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", span="1062-1062", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_458 [label="AddingNewEventArgs args = new AddingNewEventArgs()", span="1064-1064", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_459 [label="OnAddingNew(args)", span="1065-1065", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_460 [label="args.NewObject == null", span="1067-1067", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_462 [label="!(args.NewObject is JToken)", span="1072-1072", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_464 [label="JToken newItem = (JToken)args.NewObject", span="1077-1077", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_461 [label="throw new JsonException(''Could not determine new value to add to '{0}'.''.FormatWith(CultureInfo.InvariantCulture, GetType()));", span="1069-1069", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_463 [label="throw new JsonException(''New item to be added to collection must be compatible with {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JToken)));", span="1074-1074", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_465 [label="Add(newItem)", span="1078-1078", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_466 [label="return newItem;", span="1080-1080", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_467 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", span="1062-1062", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.AddNew()", file="DefaultSerializationBinder.cs"];
m1_248 [label="Entry Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken)", span="640-640", cluster="Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_249 [label="AddInternal(ChildrenTokens.Count, token, true)", span="642-642", cluster="Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_250 [label="Exit Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken)", span="640-640", cluster="Newtonsoft.Json.Linq.JContainer.AddAndSkipParentCheck(Newtonsoft.Json.Linq.JToken)", file="DefaultSerializationBinder.cs"];
m1_482 [label="Entry Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", span="1149-1149", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_483 [label="settings.MergeArrayHandling", span="1151-1151", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_485 [label=content, span="1154-1154", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_486 [label="target.Add(item)", span="1156-1156", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_488 [label="HashSet<JToken> items = new HashSet<JToken>(target, EqualityComparer)", span="1161-1161", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_489 [label=content, span="1163-1163", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_491 [label="target.Add(item)", span="1167-1167", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_493 [label="target.ClearItems()", span="1188-1188", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_494 [label=content, span="1189-1189", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_495 [label="target.Add(item)", span="1191-1191", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_498 [label=content, span="1196-1196", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_499 [label="i < target.Count", span="1198-1198", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_500 [label="JToken sourceItem = target[i]", span="1200-1200", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_503 [label="existingContainer.Merge(targetItem, settings)", span="1205-1205", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_507 [label="target[i] = contentValue", span="1214-1214", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_508 [label="target.Add(targetItem)", span="1221-1221", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_510 [label="throw new ArgumentOutOfRangeException(nameof(settings), ''Unexpected merge array handling when merging JSON.'');", span="1228-1228", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_484 [label="MergeArrayHandling.Concat", span="1153-1153", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_487 [label="MergeArrayHandling.Union", span="1159-1159", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_492 [label="MergeArrayHandling.Replace", span="1187-1187", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_496 [label="MergeArrayHandling.Merge", span="1194-1194", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_490 [label="items.Add(item)", span="1165-1165", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_497 [label="int i = 0", span="1195-1195", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_509 [label="i++", span="1224-1224", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_504 [label="targetItem != null", span="1209-1209", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_505 [label="JToken contentValue = CreateFromContent(targetItem)", span="1211-1211", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_501 [label="JContainer existingContainer = sourceItem as JContainer", span="1202-1202", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_502 [label="existingContainer != null", span="1203-1203", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_506 [label="contentValue.Type != JTokenType.Null", span="1212-1212", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_511 [label="Exit Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", span="1149-1149", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="DefaultSerializationBinder.cs"];
m1_405 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int)", span="909-909", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int)", file="DefaultSerializationBinder.cs"];
m1_406 [label="RemoveItemAt(index)", span="911-911", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int)", file="DefaultSerializationBinder.cs"];
m1_407 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int)", span="909-909", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int)", file="DefaultSerializationBinder.cs"];
m1_245 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="635-635", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="DefaultSerializationBinder.cs"];
m1_246 [label="AddInternal(ChildrenTokens.Count, content, false)", span="637-637", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="DefaultSerializationBinder.cs"];
m1_247 [label="Exit Newtonsoft.Json.Linq.JContainer.Add(object)", span="635-635", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="DefaultSerializationBinder.cs"];
m1_398 [label="Entry System.ComponentModel.ICustomTypeDescriptor.GetProperties()", span="0-0", cluster="System.ComponentModel.ICustomTypeDescriptor.GetProperties()", file="DefaultSerializationBinder.cs"];
m1_417 [label="Entry Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="937-937", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="DefaultSerializationBinder.cs"];
m1_418 [label="CopyItemsTo(array, arrayIndex)", span="939-939", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="DefaultSerializationBinder.cs"];
m1_419 [label="Exit Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="937-937", cluster="Newtonsoft.Json.Linq.JContainer.System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="DefaultSerializationBinder.cs"];
m1_513 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="DefaultSerializationBinder.cs"];
m1_61 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", span="54-54", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="DefaultSerializationBinder.cs"];
m1_94 [label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="DefaultSerializationBinder.cs"];
m1_251 [label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="649-649", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="DefaultSerializationBinder.cs"];
m1_252 [label="AddInternal(0, content, false)", span="651-651", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="DefaultSerializationBinder.cs"];
m1_253 [label="Exit Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="649-649", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="DefaultSerializationBinder.cs"];
m1_239 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="872-872", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="DefaultSerializationBinder.cs"];
m1_392 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", span="886-886", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_393 [label="ICustomTypeDescriptor d = First as ICustomTypeDescriptor", span="888-888", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_394 [label="d != null", span="889-889", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_395 [label="return d.GetProperties();", span="891-891", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_396 [label="return null;", span="894-894", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_397 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", span="886-886", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="DefaultSerializationBinder.cs"];
m1_378 [label="Entry Newtonsoft.Json.Linq.JValue.CreateUndefined()", span="604-604", cluster="Newtonsoft.Json.Linq.JValue.CreateUndefined()", file="DefaultSerializationBinder.cs"];
m1_474 [label="Entry Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", span="1103-1103", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", file="DefaultSerializationBinder.cs"];
m1_475 [label="throw new NotSupportedException();", span="1105-1105", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", file="DefaultSerializationBinder.cs"];
m1_476 [label="Exit Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", span="1103-1103", cluster="Newtonsoft.Json.Linq.JContainer.System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", file="DefaultSerializationBinder.cs"];
m1_156 [label="Entry Newtonsoft.Json.Linq.JContainer.GetItem(int)", span="464-464", cluster="Newtonsoft.Json.Linq.JContainer.GetItem(int)", file="DefaultSerializationBinder.cs"];
m1_157 [label="return ChildrenTokens[index];", span="466-466", cluster="Newtonsoft.Json.Linq.JContainer.GetItem(int)", file="DefaultSerializationBinder.cs"];
m1_158 [label="Exit Newtonsoft.Json.Linq.JContainer.GetItem(int)", span="464-464", cluster="Newtonsoft.Json.Linq.JContainer.GetItem(int)", file="DefaultSerializationBinder.cs"];
m1_514 [label="Newtonsoft.Json.Linq.JContainer", span="", file="DefaultSerializationBinder.cs"];
m2_2173 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonConvert.cs"];
m2_1283 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonConvert.cs"];
m2_204 [label="Assert.AreEqual(true, childClass.IsTransient)", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonConvert.cs"];
m2_3642 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonConvert.cs"];
m2_484 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", span="1070-1070", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultValue(System.Type)", file="JsonConvert.cs"];
m2_485 [label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerProperty != null) ? containerProperty.ItemTypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="988-992", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs", color=red, community=0];
m2_486 [label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="994-994", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_487 [label="return true;", span="996-996", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_488 [label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="1000-1000", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_489 [label="member != null", span="1002-1002", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_490 [label="contract.UnderlyingType != member.PropertyContract.CreatedType", span="1004-1004", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_1931 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4329-4329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_1932 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4331-4331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_1933 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4329-4329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_558 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonConvert.cs"];
m2_564 [label="writer.WriteEnd()", span="1157-1157", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonConvert.cs"];
m2_565 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1146-1146", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonConvert.cs"];
m2_560 [label="ClearErrorContext()", span="1148-1148", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonConvert.cs"];
m2_563 [label="writer.Top > initialDepth", span="1155-1155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonConvert.cs"];
m2_566 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonConvert.cs"];
m2_559 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonConvert.cs"];
m2_561 [label="writer.WriteState == WriteState.Property", span="1150-1150", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonConvert.cs"];
m2_562 [label="writer.WriteNull()", span="1152-1152", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonConvert.cs"];
m2_567 [label="property.ShouldSerialize == null", span="1163-1163", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonConvert.cs"];
m2_53 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="466-466", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonConvert.cs"];
m2_57 [label="writer.WriteNull()", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_58 [label="return;", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_62 [label="return;", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_61 [label="SerializeConvertable(writer, converter, value, valueContract, containerContract, containerProperty)", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_54 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1449-1449", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonConvert.cs"];
m2_56 [label="value == null", span="149-149", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_59 [label="JsonConverter converter =\r\n                ((member != null) ? member.Converter : null) ??\r\n                ((containerProperty != null) ? containerProperty.ItemConverter : null) ??\r\n                ((containerContract != null) ? containerContract.ItemConverter : null) ??\r\n                valueContract.Converter ??\r\n                Serializer.GetMatchingConverter(valueContract.UnderlyingType) ??\r\n                valueContract.InternalConverter", span="155-161", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_60 [label="converter != null && converter.CanWrite", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_55 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonConvert.cs"];
m2_63 [label="valueContract.ContractType", span="169-169", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1223-1223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonConvert.cs"];
m2_1446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3100-3100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonConvert.cs"];
m2_1447 [label="_name = name", span="3102-3102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonConvert.cs"];
m2_1448 [label="Age = age", span="3103-3103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonConvert.cs"];
m2_1449 [label="Rank = rank", span="3104-3104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonConvert.cs"];
m2_1450 [label="Title = title", span="3105-3105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonConvert.cs"];
m2_1451 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3100-3100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonConvert.cs"];
m2_1889 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4184-4184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonConvert.cs"];
m2_951 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonConvert.cs"];
m2_3123 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonConvert.cs"];
m2_2174 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonConvert.cs"];
m2_642 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="662-662", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonConvert.cs"];
m2_345 [label="WriteReference(writer, value)", span="687-687", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3632 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonConvert.cs"];
m2_634 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="473-473", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs"];
m2_2018 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonConvert.cs"];
m2_599 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_601 [label="var json = JsonConvert.SerializeObject(original)", span="1279-1279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_603 [label="Assert.AreEqual(expectedJson, json)", span="1281-1281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_600 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_602 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_604 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_1089 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonConvert.cs"];
m2_1533 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3334-3334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonConvert.cs"];
m2_1536 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3340-3340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonConvert.cs"];
m2_1537 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonConvert.cs"];
m2_1538 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3342-3342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonConvert.cs"];
m2_1535 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3338-3338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonConvert.cs"];
m2_1534 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3336-3336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonConvert.cs"];
m2_1539 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3334-3334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonConvert.cs"];
m2_272 [label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="539-539", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_313 [label="serializer.Formatting = Formatting.Indented", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_1036 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2230-2230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonConvert.cs"];
m2_1038 [label="string json = JsonConvert.SerializeObject(date)", span="2234-2234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonConvert.cs"];
m2_1039 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2235-2235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonConvert.cs"];
m2_1037 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2232-2232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonConvert.cs"];
m2_1040 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2230-2230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonConvert.cs"];
m2_719 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonConvert.cs"];
m2_346 [label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="691-691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_755 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonConvert.cs"];
m2_1836 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4011-4011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonConvert.cs"];
m2_1838 [label="Add(pair.Key, pair.Value)", span="4015-4015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonConvert.cs"];
m2_1837 [label=initial, span="4013-4013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonConvert.cs"];
m2_1839 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4011-4011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonConvert.cs"];
m2_2228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5011-5011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonConvert.cs"];
m2_2229 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'')", span="5013-5028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonConvert.cs"];
m2_2230 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5011-5011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonConvert.cs"];
m2_692 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonConvert.cs"];
m2_519 [label="WriteReference(writer, value)", span="1069-1069", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_530 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1030-1030", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_531 [label="string propertyName", span="1105-1105", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_532 [label="contract.ContractType == JsonContractType.Primitive", span="1107-1107", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_533 [label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="1109-1109", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_534 [label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTime || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeNullable", span="1110-1110", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_535 [label="DateTime dt = DateTimeUtils.EnsureDateTime((DateTime)name, writer.DateTimeZoneHandling)", span="1112-1112", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_536 [label="escape = false", span="1114-1114", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_537 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="1115-1115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_538 [label="DateTimeUtils.WriteDateTimeString(sw, dt, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="1116-1116", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_529 [label="OnSerialized(writer, contract, underlyingDictionary)", span="1100-1100", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_524 [label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="1085-1085", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_527 [label="writer.WriteEndObject()", span="1096-1096", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_528 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="1098-1098", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_526 [label="throw;", span="1091-1091", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_520 [label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="1073-1073", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_521 [label="writer.WritePropertyName(propertyName, escape)", span="1078-1078", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_523 [label=Exception, span="1083-1083", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_525 [label="HandleError(writer, initialDepth)", span="1087-1087", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_522 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="1080-1080", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_539 [label="return sw.ToString();", span="1117-1117", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonConvert.cs"];
m2_940 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs"];
m2_1668 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="191-191", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonConvert.cs"];
m2_1128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2387-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1134 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2400-2400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1135 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2401-2401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1132 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1133 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2398-2398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1129 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1131 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2392-2395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1130 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2390-2390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2387-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonConvert.cs"];
m2_1572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonConvert.cs"];
m2_1574 [label="Assert.AreEqual(3, l.Count)", span="3400-3400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonConvert.cs"];
m2_1575 [label="Assert.AreEqual(3.3m, l[0])", span="3402-3402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonConvert.cs"];
m2_1576 [label="Assert.AreEqual(null, l[1])", span="3403-3403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonConvert.cs"];
m2_1577 [label="Assert.AreEqual(1.1m, l[2])", span="3404-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonConvert.cs"];
m2_1573 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3399-3399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonConvert.cs"];
m2_1578 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonConvert.cs"];
m2_2856 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6541-6541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonConvert.cs"];
m2_2858 [label="string json = JsonConvert.SerializeObject(d1)", span="6545-6545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonConvert.cs"];
m2_2860 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6549-6549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonConvert.cs"];
m2_2861 [label="Assert.AreEqual(d1[0], d2[0])", span="6550-6550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonConvert.cs"];
m2_2859 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6547-6547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonConvert.cs"];
m2_2857 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6543-6543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonConvert.cs"];
m2_2862 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6541-6541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonConvert.cs"];
m2_1513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3266-3266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonConvert.cs"];
m2_1515 [label="string json = JsonConvert.SerializeObject(value)", span="3273-3273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonConvert.cs"];
m2_1516 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3275-3275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonConvert.cs"];
m2_1514 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3268-3271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonConvert.cs"];
m2_1517 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3266-3266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonConvert.cs"];
m2_2379 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5338-5338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonConvert.cs"];
m2_2381 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5341-5341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonConvert.cs"];
m2_2380 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5340-5340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonConvert.cs"];
m2_2382 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5338-5338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonConvert.cs"];
m2_1284 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2685-2685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1293 [label="string after = JsonConvert.SerializeObject(aa)", span="2698-2698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1294 [label="Assert.AreEqual(json, after)", span="2700-2700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1287 [label="Assert.AreEqual(''Before!'', aa.Before)", span="2691-2691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1288 [label="Assert.AreEqual(''After!'', aa.After)", span="2692-2692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1289 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2693-2693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1290 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2694-2694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1291 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2695-2695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1292 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2696-2696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1286 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2689-2689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1285 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2687-2687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2685-2685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonConvert.cs"];
m2_1552 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3369-3369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonConvert.cs"];
m2_1553 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3371-3371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonConvert.cs"];
m2_1554 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3373-3373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonConvert.cs"];
m2_1555 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3369-3369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonConvert.cs"];
m2_3094 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7026-7026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonConvert.cs"];
m2_3851 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="8885-8885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonConvert.cs"];
m2_2972 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonConvert.cs"];
m2_247 [label="string propertyName = GetPropertyName(writer, e.Key, keyContract, out escape)", span="496-496", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_1153 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonConvert.cs"];
m2_1511 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonConvert.cs"];
m2_2453 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5469-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonConvert.cs"];
m2_2019 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonConvert.cs"];
m2_843 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonConvert.cs"];
m2_2548 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5718-5718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonConvert.cs"];
m2_2551 [label="Assert.AreEqual(40, p.Age)", span="5728-5728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonConvert.cs"];
m2_2552 [label="Assert.AreEqual(44.4, p.Height)", span="5729-5729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonConvert.cs"];
m2_2553 [label="Assert.AreEqual(4m, p.Price)", span="5730-5730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonConvert.cs"];
m2_2550 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5727-5727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonConvert.cs"];
m2_2549 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5720-5725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonConvert.cs"];
m2_2554 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5718-5718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonConvert.cs"];
m2_2242 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5032-5032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2251 [label="string json = JsonConvert.SerializeObject(child)", span="5044-5044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2252 [label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5046-5046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2254 [label="Assert.AreEqual(3, result.Count)", span="5050-5050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2255 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5051-5051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2256 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5052-5052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2253 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5048-5048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2250 [label="child.Add(''Father'', reference)", span="5042-5042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2247 [label="var child = new Dictionary<string, object>()", span="5039-5039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2243 [label="var reference = new Dictionary<string, object>()", span="5034-5034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2249 [label="child.Add(''Name'', ''Isabell'')", span="5041-5041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2246 [label="reference.Add(''blah'', ''blah!'')", span="5037-5037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2248 [label="child.Add(''_id'', 2)", span="5040-5040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2244 [label="reference.Add(''$ref'', null)", span="5035-5035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2245 [label="reference.Add(''$id'', null)", span="5036-5036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_2257 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5032-5032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonConvert.cs"];
m2_425 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_95 [label="type == typeof(Version)", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonConvert.cs"];
m2_415 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_417 [label="serializerProxy.Binder = customBinder", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_418 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="952-952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_419 [label="serializerProxy.CheckAdditionalContent = true", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_420 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_421 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_422 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_423 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_426 [label="serializerProxy.ContractResolver = resolver", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_427 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_428 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="969-969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_429 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_430 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="972-972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_431 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_432 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_434 [label="serializerProxy.DateFormatString = ''yyyy''", span="978-978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_416 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="950-950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_424 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", color=red, community=0, file="JsonConvert.cs"];
m2_433 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_435 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="979-979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonConvert.cs"];
m2_958 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2084-2084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonConvert.cs"];
m2_959 [label="string json = JsonConvert.SerializeObject(null)", span="2086-2086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonConvert.cs"];
m2_960 [label="Assert.AreEqual(''null'', json)", span="2087-2087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonConvert.cs"];
m2_961 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2084-2084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonConvert.cs"];
m2_3703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8551-8551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonConvert.cs"];
m2_3706 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8555-8558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonConvert.cs"];
m2_3705 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8554-8554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonConvert.cs"];
m2_3704 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8553-8553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonConvert.cs"];
m2_3707 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8551-8551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonConvert.cs"];
m2_3079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6968-6968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3085 [label="string json = JsonConvert.SerializeObject(product)", span="6976-6976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3080 [label="Product product = new Product()", span="6970-6970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3084 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6974-6974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3086 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6984-6989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3089 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7009-7014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3082 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6972-6972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3081 [label="product.Name = ''Apple''", span="6971-6971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3083 [label="product.Price = 3.99M", span="6973-6973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3087 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6990-6999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3088 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7007-7007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3090 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7016-7023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_3091 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6968-6968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonConvert.cs"];
m2_1275 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2672-2672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_1280 [label="string json = JsonConvert.SerializeObject(aa)", span="2679-2679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_1281 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2681-2681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_1276 [label="JaggedArray aa = new JaggedArray()", span="2674-2674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_1279 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2677-2677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_1277 [label="aa.Before = ''Before!''", span="2675-2675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_1278 [label="aa.After = ''After!''", span="2676-2676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_1282 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2672-2672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonConvert.cs"];
m2_3710 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8563-8563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonConvert.cs"];
m2_3711 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}'';\r\n                JsonConvert.DeserializeObject<JObject>(content);\r\n            }, ''Can not add property time to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'')", span="8565-8569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonConvert.cs"];
m2_3712 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8563-8563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonConvert.cs"];
m2_2282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5114-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2289 [label="Assert.AreEqual(2, newDictionary.Count)", span="5131-5131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2288 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5128-5129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2286 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5121-5121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2287 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5123-5126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2283 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5116-5116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2285 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5119-5119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2284 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5118-5118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_2290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5114-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonConvert.cs"];
m2_570 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1170-1170", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonConvert.cs"];
m2_2777 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonConvert.cs"];
m2_1821 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3985-3985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1824 [label="Assert.AreEqual(3, dic.Count)", span="3991-3991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1825 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="3992-3992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1826 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="3993-3993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1827 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="3994-3994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1823 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3989-3989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1822 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3987-3987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1828 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3985-3985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonConvert.cs"];
m2_1154 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonConvert.cs"];
m2_2787 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6391-6391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonConvert.cs"];
m2_2790 [label="string json = JsonConvert.SerializeObject(uri)", span="6395-6395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonConvert.cs"];
m2_2792 [label="Assert.AreEqual(uri, output)", span="6398-6398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonConvert.cs"];
m2_2791 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6396-6396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonConvert.cs"];
m2_2789 [label="Uri uri = new Uri(input)", span="6394-6394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonConvert.cs"];
m2_2788 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6393-6393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonConvert.cs"];
m2_2793 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6391-6391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonConvert.cs"];
m2_192 [label="converter != null\r\n                && !(converter is ComponentConverter)\r\n                && converter.GetType() != typeof(TypeConverter)", span="385-387", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_1035 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JsonConvert.cs"];
m2_292 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_2700 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6183-6183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonConvert.cs"];
m2_2701 [label="return _readonlyString;", span="6185-6185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonConvert.cs"];
m2_2702 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6183-6183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonConvert.cs"];
m2_1939 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonConvert.cs"];
m2_1940 [label="return _innerDictionary.TryGetValue(key, out value);", span="4341-4341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonConvert.cs"];
m2_1941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonConvert.cs"];
m2_2022 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonConvert.cs"];
m2_75 [label="JsonContractType.Dictionary", span="191-191", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_76 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)valueContract", span="192-192", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_77 [label="SerializeDictionary(writer, (value is IDictionary) ? (IDictionary)value : dictionaryContract.CreateWrapper(value), dictionaryContract, member, containerContract, containerProperty)", span="193-193", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3927 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="JsonConvert.cs"];
m2_2870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6567-6567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonConvert.cs"];
m2_2872 [label="string json = JsonConvert.SerializeObject(d1)", span="6571-6571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonConvert.cs"];
m2_2874 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6575-6575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonConvert.cs"];
m2_2875 [label="Assert.AreEqual(d1[0], d2[0])", span="6576-6576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonConvert.cs"];
m2_2873 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6573-6573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonConvert.cs"];
m2_2871 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6569-6569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonConvert.cs"];
m2_2876 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6567-6567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonConvert.cs"];
m2_3813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8810-8810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonConvert.cs"];
m2_3817 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="8820-8820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonConvert.cs"];
m2_3815 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="8814-8814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonConvert.cs"];
m2_3816 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="8816-8818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonConvert.cs"];
m2_3814 [label="ConstantTestClass c1 = new ConstantTestClass()", span="8812-8812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonConvert.cs"];
m2_3818 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8810-8810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonConvert.cs"];
m2_3454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7942-7942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_3456 [label="string json = JsonConvert.SerializeObject(tuple)", span="7945-7945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_3457 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="7946-7946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_3459 [label="Assert.AreEqual(500, tuple2.Item1)", span="7949-7949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_3460 [label="Assert.AreEqual(20, tuple2.Item2)", span="7950-7950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_3458 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="7948-7948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_3455 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="7944-7944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_3461 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7942-7942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonConvert.cs"];
m2_1794 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3896-3896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonConvert.cs"];
m2_1795 [label="_dict1.Add(item.Key, item)", span="3898-3898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonConvert.cs"];
m2_1796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3896-3896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonConvert.cs"];
m2_2409 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonConvert.cs"];
m2_2517 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5657-5657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonConvert.cs"];
m2_2519 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5660-5660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonConvert.cs"];
m2_2518 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5659-5659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonConvert.cs"];
m2_2520 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5657-5657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonConvert.cs"];
m2_633 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonConvert.cs"];
m2_3413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7784-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonConvert.cs"];
m2_3414 [label="IgnoreSerializableAttribute = false", span="7786-7786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonConvert.cs"];
m2_3415 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7784-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonConvert.cs"];
m2_1865 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4147-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonConvert.cs"];
m2_1867 [label="C2 = c2", span="4149-4149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonConvert.cs"];
m2_1868 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4147-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonConvert.cs"];
m2_181 [label="JsonSerializer serializer = new JsonSerializer()", span="550-550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonConvert.cs"];
m2_184 [label="serializer.Populate(reader, l)", span="554-554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonConvert.cs"];
m2_187 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonConvert.cs"];
m2_185 [label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="556-556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonConvert.cs"];
m2_186 [label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="557-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonConvert.cs"];
m2_188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="545-545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonConvert.cs"];
m2_155 [label="ReferenceLoopHandling.Error", span="328-328", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_158 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="331-331", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_159 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Skipping serializing self referenced value.''), null)", span="333-333", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_160 [label="return false;", span="336-336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_156 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, message, null);", span="329-329", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_157 [label="ReferenceLoopHandling.Ignore", span="330-330", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_161 [label="ReferenceLoopHandling.Serialize", span="337-337", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_162 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="338-338", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_100 [label="property != null", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_18 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="142-144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonConvert.cs"];
m2_1518 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonConvert.cs"];
m2_2591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5850-5850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonConvert.cs"];
m2_2592 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5852-5852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonConvert.cs"];
m2_2593 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5853-5853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonConvert.cs"];
m2_2594 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5850-5850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonConvert.cs"];
m2_2352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2353 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5291-5294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2354 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5296-5296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2359 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5305-5305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2360 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5306-5306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2355 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5298-5298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2358 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5303-5303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2357 [label="JsonSerializer serializer = new JsonSerializer()", span="5301-5301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2356 [label="reader.DateParseHandling = DateParseHandling.None", span="5299-5299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2361 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonConvert.cs"];
m2_2419 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5424-5424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_2425 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5433-5433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_2424 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5432-5432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_2423 [label="JsonSerializer serializer = new JsonSerializer()", span="5430-5430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_2421 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5427-5427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_2422 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5428-5428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_2420 [label="string json = ''{Amount:123456789876543.21}''", span="5426-5426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_2426 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5424-5424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonConvert.cs"];
m2_662 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_668 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1477-1477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_663 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1464-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_667 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1475-1475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_669 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1479-1486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_664 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1472-1472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_665 [label="baseWith.Virtual = ''Virtual2!''", span="1473-1473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_666 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1474-1474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_2454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5457-5457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonConvert.cs"];
m2_3488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8012-8012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonConvert.cs"];
m2_3491 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8018-8018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonConvert.cs"];
m2_3490 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8016-8016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonConvert.cs"];
m2_3492 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8020-8020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonConvert.cs"];
m2_3489 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8014-8014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonConvert.cs"];
m2_3493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8012-8012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonConvert.cs"];
m2_578 [label="bool isSpecified = property.GetIsSpecified(target)", span="1185-1185", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonConvert.cs"];
m2_414 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="803-803", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_438 [label="Entry System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="0-0", cluster="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", color=green, community=0, file="JsonConvert.cs"];
m2_437 [label="Entry System.Runtime.Serialization.FormatterConverter.FormatterConverter()", span="0-0", cluster="System.Runtime.Serialization.FormatterConverter.FormatterConverter()", file="JsonConvert.cs"];
m2_439 [label="OnSerializing(writer, contract, value)", span="884-884", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_446 [label="property.HasMemberAttribute", span="896-896", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, file="JsonConvert.cs"];
m2_445 [label="JsonProperty property = contract.Properties[index]", span="893-893", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_447 [label="object memberValue", span="900-900", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_441 [label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="887-887", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs", color=red, community=0];
m2_443 [label="int index = 0", span="891-891", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_449 [label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="903-903", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_451 [label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="909-909", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_453 [label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="913-913", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_455 [label="throw;", span="919-919", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_457 [label="value.GetDynamicMemberNames()", span="925-925", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_459 [label="contract.TryGetMember(value, memberName, out memberValue)", span="928-928", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_462 [label="CheckForCircularReference(writer, memberValue, null, valueContract, contract, member)", span="939-939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_464 [label="writer.WritePropertyName(resolvedPropertyName)", span="945-945", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_467 [label="IsErrorHandled(value, contract, memberName, null, writer.ContainerPath, ex)", span="951-951", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_469 [label="throw;", span="957-957", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_471 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="965-965", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_465 [label="SerializeValue(writer, memberValue, valueContract, null, contract, member)", span="946-946", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_436 [label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonConvert.cs"];
m2_440 [label="_serializeStack.Add(value)", span="885-885", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_442 [label="int initialDepth = writer.Top", span="889-889", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_444 [label="index < contract.Properties.Count", span="891-891", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_448 [label="JsonContract memberContract", span="901-901", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_450 [label="property.WritePropertyName(writer)", span="908-908", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_452 [label=Exception, span="911-911", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs", color=red, community=0];
m2_454 [label="HandleError(writer, initialDepth)", span="915-915", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_456 [label="index++", span="891-891", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_458 [label="object memberValue", span="927-927", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_461 [label="!ShouldWriteDynamicProperty(memberValue)", span="934-934", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_463 [label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n                                ? contract.PropertyNameResolver(memberName)\r\n                                : memberName", span="941-943", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_466 [label=Exception, span="949-949", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_468 [label="HandleError(writer, initialDepth)", span="953-953", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs", color=red, community=0];
m2_470 [label="writer.WriteEndObject()", span="963-963", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_460 [label="JsonContract valueContract = GetContractSafe(memberValue)", span="932-932", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_472 [label="OnSerialized(writer, contract, value)", span="966-966", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2895 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonConvert.cs"];
m2_2898 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6629-6633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonConvert.cs"];
m2_2897 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonConvert.cs"];
m2_2896 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="6620-6625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonConvert.cs"];
m2_2899 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonConvert.cs"];
m2_1006 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonConvert.cs"];
m2_2915 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonConvert.cs"];
m2_2565 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5748-5748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonConvert.cs"];
m2_2568 [label="Assert.AreEqual(@''{}'', json)", span="5754-5754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonConvert.cs"];
m2_2567 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5752-5752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonConvert.cs"];
m2_2566 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5750-5750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonConvert.cs"];
m2_2569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5748-5748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonConvert.cs"];
m2_1892 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1896 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4246-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1895 [label=dictionary, span="4244-4244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1893 [label="dictionary == null", span="4239-4239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1894 [label="throw new ArgumentNullException(''dictionary'');", span="4241-4241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1897 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_135 [label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_314 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_315 [label="serializer.MaxDepth = 9001", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_139 [label="value == null || contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="291-291", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3501 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8045-8045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3503 [label="string json = JsonConvert.SerializeObject(p)", span="8049-8049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3504 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8051-8051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3508 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8062-8062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3502 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8047-8047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3505 [label="DefaultContractResolver r = new DefaultContractResolver()", span="8054-8054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3507 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8057-8060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3506 [label="r.IgnoreSerializableAttribute = false", span="8055-8055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_3509 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8045-8045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonConvert.cs"];
m2_1245 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2599-2599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonConvert.cs"];
m2_1248 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2610-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonConvert.cs"];
m2_1249 [label="Assert.AreEqual(null, c.MiddleName)", span="2611-2611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonConvert.cs"];
m2_1250 [label="Assert.AreEqual(null, c.LastName)", span="2612-2612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonConvert.cs"];
m2_1247 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2608-2608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonConvert.cs"];
m2_1246 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2601-2606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonConvert.cs"];
m2_1251 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2599-2599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonConvert.cs"];
m2_3203 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7225-7225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3208 [label="Assert.AreEqual(2, dic2.Count)", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3209 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7243-7243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3210 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7244-7244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3207 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7240-7240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3205 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3206 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7235-7238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3204 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7227-7231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3211 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7225-7225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonConvert.cs"];
m2_3102 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonConvert.cs"];
m2_263 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs", color=green, community=0];
m2_543 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonConvert.cs"];
m2_546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonConvert.cs"];
m2_547 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="297-297", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonConvert.cs"];
m2_551 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1184-1184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonConvert.cs"];
m2_540 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonConvert.cs"];
m2_541 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs"];
m2_545 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1176-1176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonConvert.cs"];
m2_542 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonConvert.cs"];
m2_544 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonConvert.cs"];
m2_548 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonConvert.cs"];
m2_550 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1182-1182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonConvert.cs"];
m2_549 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1180-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonConvert.cs"];
m2_552 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1186-1186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonConvert.cs"];
m2_3355 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonConvert.cs"];
m2_3356 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7612-7616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonConvert.cs"];
m2_3357 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7618-7621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonConvert.cs"];
m2_3358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonConvert.cs"];
m2_3335 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonConvert.cs"];
m2_1730 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonConvert.cs"];
m2_1260 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonConvert.cs"];
m2_127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonConvert.cs"];
m2_128 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonConvert.cs"];
m2_130 [label="FaqItem c = new FaqItem()", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_131 [label="c.FaqId = 1", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_132 [label="c.Sections.Add(new FaqSection())", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_133 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="426-426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_3272 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonConvert.cs"];
m2_1607 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3451-3451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonConvert.cs"];
m2_1608 [label="string json = @''[]''", span="3453-3453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonConvert.cs"];
m2_1609 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3455-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonConvert.cs"];
m2_1610 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3451-3451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonConvert.cs"];
m2_1097 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonConvert.cs"];
m2_682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1429-1429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonConvert.cs"];
m2_1908 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonConvert.cs"];
m2_1956 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonConvert.cs"];
m2_1961 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4393-4393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonConvert.cs"];
m2_1960 [label="_personValue = personValue", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonConvert.cs"];
m2_1957 [label="_stringValue = stringValue", span="4389-4389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonConvert.cs"];
m2_1958 [label="_intValue = intValue", span="4390-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonConvert.cs"];
m2_1959 [label="_dateTimeOffsetValue = dateTimeOffset", span="4391-4391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonConvert.cs"];
m2_1962 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonConvert.cs"];
m2_592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_596 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1272-1272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_594 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_595 [label="Assert.IsNotNull(deserialized.foo)", span="1271-1271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_593 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1269-1269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_597 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_721 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonConvert.cs"];
m2_2269 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5082-5082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonConvert.cs"];
m2_2272 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5092-5092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonConvert.cs"];
m2_2273 [label="Assert.AreEqual(9.9m, dic[''value''])", span="5093-5093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonConvert.cs"];
m2_2271 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5086-5090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonConvert.cs"];
m2_2270 [label="string json = @''{'value':9.9}''", span="5084-5084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonConvert.cs"];
m2_2274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5082-5082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonConvert.cs"];
m2_2411 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5410-5410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonConvert.cs"];
m2_2413 [label="Assert.AreEqual(123456789876543.21m, d)", span="5413-5413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonConvert.cs"];
m2_2412 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5412-5412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonConvert.cs"];
m2_2414 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5410-5410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonConvert.cs"];
m2_2617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5925-5925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonConvert.cs"];
m2_1899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4281-4281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_1900 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4283-4283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_1901 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4281-4281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_15 [label="throw;", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_123 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonConvert.cs"];
m2_316 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="810-810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", color=red, community=0, file="JsonConvert.cs"];
m2_317 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="812-812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_2146 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4863-4863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2154 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4885-4885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2155 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4886-4886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2153 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4884-4884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2147 [label="XNodeTestObject testObject = new XNodeTestObject()", span="4865-4865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2156 [label="Assert.IsNull(newTestObject.Element.Parent)", span="4888-4888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2150 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4869-4869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2152 [label="StringAssert.AreEqual(expected, json)", span="4882-4882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2148 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4866-4866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2149 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4867-4867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2151 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4870-4881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_2157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4863-4863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonConvert.cs"];
m2_801 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1731-1731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonConvert.cs"];
m2_804 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1737-1737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonConvert.cs"];
m2_803 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1735-1735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonConvert.cs"];
m2_805 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1738-1740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonConvert.cs"];
m2_802 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1733-1733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonConvert.cs"];
m2_806 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1731-1731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonConvert.cs"];
m2_1905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4291-4291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonConvert.cs"];
m2_1906 [label="_innerDictionary.Clear()", span="4293-4293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonConvert.cs"];
m2_1907 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4291-4291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonConvert.cs"];
m2_605 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1228-1228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonConvert.cs"];
m2_792 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonConvert.cs"];
m2_2570 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5757-5757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonConvert.cs"];
m2_94 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonConvert.cs"];
m2_473 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonConvert.cs"];
m2_2610 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonConvert.cs"];
m2_1155 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2439-2439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1160 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1162 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2450-2450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1163 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2451-2451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1159 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2445-2445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1161 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2448-2448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1156 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2441-2441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1158 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1157 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2442-2442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_1164 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2439-2439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonConvert.cs"];
m2_3124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7083-7083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3134 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7100-7100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3133 [label="JValue v = (JValue)a[0]", span="7098-7098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3135 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7101-7103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3132 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7097-7097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3125 [label="MemoryStream ms = new MemoryStream()", span="7085-7085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3131 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7092-7095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3130 [label="byte[] data = ms.ToArray()", span="7091-7091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3126 [label="BsonWriter writer = new BsonWriter(ms)", span="7086-7086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3129 [label="writer.WriteEndArray()", span="7089-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3127 [label="writer.WriteStartArray()", span="7087-7087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3128 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7088-7088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_3136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7083-7083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonConvert.cs"];
m2_1669 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3554-3554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonConvert.cs"];
m2_1670 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3556-3567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonConvert.cs"];
m2_1671 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3554-3554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonConvert.cs"];
m2_2088 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4830-4830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2135 [label="BB_field1 = g", span="4833-4833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2136 [label="BB_field2 = g", span="4834-4834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2137 [label="BB_property1 = g", span="4835-4835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2138 [label="BB_property2 = g", span="4836-4836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2139 [label="BB_property3 = g", span="4837-4837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2140 [label="BB_property4 = g", span="4838-4838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2141 [label="BB_property5 = g", span="4839-4839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2142 [label="BB_property6 = g", span="4840-4840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2143 [label="BB_property7 = g", span="4841-4841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2144 [label="BB_property8 = g", span="4842-4842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_2145 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4830-4830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonConvert.cs"];
m2_650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonConvert.cs"];
m2_652 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1340-1340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonConvert.cs"];
m2_651 [label="var strings = dictionaryKey.Split(' ')", span="1339-1339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonConvert.cs"];
m2_653 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonConvert.cs"];
m2_1179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonConvert.cs"];
m2_1181 [label="json = JsonConvert.SerializeObject((int?)null)", span="2476-2476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonConvert.cs"];
m2_1183 [label="json = JsonConvert.SerializeObject((int?)1)", span="2479-2479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonConvert.cs"];
m2_1182 [label="Assert.AreEqual(''null'', json)", span="2477-2477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonConvert.cs"];
m2_1184 [label="Assert.AreEqual(''1'', json)", span="2480-2480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonConvert.cs"];
m2_1180 [label="string json", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonConvert.cs"];
m2_1185 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonConvert.cs"];
m2_1519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3279-3279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1520 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3281-3289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1522 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3293-3305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1521 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3291-3291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3279-3279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3890-3890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonConvert.cs"];
m2_1988 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonConvert.cs"];
m2_3567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8222-8222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonConvert.cs"];
m2_3570 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonConvert.cs"];
m2_3569 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8225-8225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonConvert.cs"];
m2_3568 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8224-8224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonConvert.cs"];
m2_3571 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8222-8222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonConvert.cs"];
m2_2027 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4522-4522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2042 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4569-4569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2040 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4567-4567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2041 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4568-4568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2043 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4570-4570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2044 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4571-4571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2045 [label="Assert.AreEqual(null, o2._nullableInt)", span="4572-4572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2039 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4566-4566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2033 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4530-4530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2038 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4541-4564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2037 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4540-4540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2029 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4525-4525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2032 [label="person.Name = ''Name!''", span="4528-4528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2034 [label="string dateTimeOffsetText", span="4531-4531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2036 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4538-4538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2035 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4533-4533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2028 [label="Person person = new Person()", span="4524-4524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2030 [label="person.LastModified = person.BirthDate", span="4526-4526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2031 [label="person.Department = ''Department!''", span="4527-4527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2046 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4522-4522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonConvert.cs"];
m2_2877 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2882 [label="string json = JsonConvert.SerializeObject(b)", span="6587-6587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2883 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6589-6589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2885 [label="Assert.AreEqual(true, b2.no)", span="6593-6593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2884 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6591-6591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2878 [label="Bb b = new Bb()", span="6582-6582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2881 [label="a.no = int.MaxValue", span="6585-6585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2879 [label="b.no = true", span="6583-6583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2880 [label="Aa a = b", span="6584-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_2886 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonConvert.cs"];
m2_25 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonConvert.cs"];
m2_1236 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2573-2573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1241 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2594-2594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1242 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1240 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1238 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2583-2583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1239 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2585-2590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1237 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2575-2581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1243 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2573-2573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonConvert.cs"];
m2_2630 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6002-6002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonConvert.cs"];
m2_2632 [label="Categories = new List<string>()", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonConvert.cs"];
m2_2631 [label="Title = title", span="6004-6004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonConvert.cs"];
m2_2633 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6002-6002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonConvert.cs"];
m2_717 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonConvert.cs"];
m2_1178 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonConvert.cs"];
m2_2778 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonConvert.cs"];
m2_3138 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonConvert.cs"];
m2_229 [label="JsonProperty property = contract.Properties[index]", span="458-458", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_1840 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonConvert.cs"];
m2_1843 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4060-4065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonConvert.cs"];
m2_1842 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4058-4058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonConvert.cs"];
m2_1841 [label="B value = new B()", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonConvert.cs"];
m2_1844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonConvert.cs"];
m2_1411 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonConvert.cs"];
m2_1413 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3004-3010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonConvert.cs"];
m2_1412 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3002-3002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonConvert.cs"];
m2_1414 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonConvert.cs"];
m2_1252 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1257 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2632-2632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1254 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2627-2627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1256 [label=JsonSerializationException, span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1253 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2620-2625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1255 [label="Assert.Fail()", span="2628-2628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1258 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_2183 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="4945-4945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonConvert.cs"];
m2_3432 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7868-7868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonConvert.cs"];
m2_3434 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ'')\r\n            })", span="7876-7880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonConvert.cs"];
m2_3433 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7870-7874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonConvert.cs"];
m2_3435 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7882-7885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonConvert.cs"];
m2_3436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7868-7868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonConvert.cs"];
m2_142 [label="property != null", span="298-298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_222 [label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="654-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonConvert.cs"];
m2_1902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4286-4286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonConvert.cs"];
m2_1903 [label="_innerDictionary.Add(key, value)", span="4288-4288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonConvert.cs"];
m2_1904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4286-4286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonConvert.cs"];
m2_410 [label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="824-824", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_636 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonConvert.cs"];
m2_647 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1332-1332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonConvert.cs"];
m2_648 [label="return _name + '' '' + _number;", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonConvert.cs"];
m2_649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1332-1332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonConvert.cs"];
m2_1942 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonConvert.cs"];
m2_1716 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3660-3660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1724 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1725 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3678-3678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1726 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3679-3679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1727 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1723 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3676-3676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1721 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3667-3667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1722 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3668-3674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1717 [label="Foo f = new Foo()", span="3662-3662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1720 [label="f.Bars.Add(new Bar { Id = 2 })", span="3665-3665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1718 [label="f.Bars.Add(new Bar { Id = 0 })", span="3663-3663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1719 [label="f.Bars.Add(new Bar { Id = 1 })", span="3664-3664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3660-3660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonConvert.cs"];
m2_1995 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4419-4419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1996 [label="info.AddValue(''stringValue'', _stringValue)", span="4421-4421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1998 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4423-4423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1999 [label="info.AddValue(''personValue'', _personValue)", span="4424-4424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2000 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4425-4425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2001 [label="info.AddValue(''nullableInt'', null)", span="4426-4426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1997 [label="info.AddValue(''intValue'', _intValue)", span="4422-4422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2002 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4428-4428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2003 [label="info.AddValue(''byteValue'', _byteValue)", span="4429-4429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2004 [label="info.AddValue(''charValue'', _charValue)", span="4430-4430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2005 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4431-4431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2006 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4432-4432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2007 [label="info.AddValue(''shortValue'', _shortValue)", span="4433-4433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2008 [label="info.AddValue(''longValue'', _longValue)", span="4434-4434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2009 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4435-4435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2010 [label="info.AddValue(''floatValue'', _floatValue)", span="4436-4436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2011 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4437-4437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2012 [label="info.AddValue(''uintValue'', _uintValue)", span="4438-4438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2013 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4439-4439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2014 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4419-4419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_261 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="729-729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_2724 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonConvert.cs"];
m2_2725 [label="Exceptions = new List<Exception>()", span="6281-6281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonConvert.cs"];
m2_2726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonConvert.cs"];
m2_1221 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2551-2551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1224 [label="string json = JsonConvert.SerializeObject(typeClass)", span="2556-2556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1230 [label="json = JsonConvert.SerializeObject(typeClass)", span="2565-2565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1225 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2557-2557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1227 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1231 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2566-2566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1233 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2569-2569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1226 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2559-2559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1232 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2568-2568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1223 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2554-2554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1229 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1222 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2553-2553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1228 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2562-2562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_1234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2551-2551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonConvert.cs"];
m2_3141 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonConvert.cs"];
m2_3691 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8523-8523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3692 [label="throw new InvalidCastException();", span="8525-8525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8523-8523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3442 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7909-7909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3449 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7929-7929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3450 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7930-7930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3445 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7918-7918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3448 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7928-7928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3451 [label="string json = sw.ToString()", span="7932-7932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3446 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ''),\r\n                Formatting = Formatting.Indented\r\n            })", span="7920-7925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3443 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7911-7915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3444 [label="StringWriter sw = new StringWriter()", span="7917-7917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3447 [label="serializer.Serialize(jsonWriter, dates)", span="7926-7926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3452 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7934-7937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_3453 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7909-7909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonConvert.cs"];
m2_1586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonConvert.cs"];
m2_1587 [label="string json = @''[]''", span="3420-3420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonConvert.cs"];
m2_1588 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3422-3424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonConvert.cs"];
m2_1589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonConvert.cs"];
m2_112 [label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="245-245", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_340 [label="int initialDepth = writer.Top", span="675-675", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6045-6045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2657 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6061-6061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2658 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6062-6062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2659 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="6063-6063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2660 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="6064-6064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2656 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6060-6060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2651 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6047-6047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2654 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6051-6051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2655 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6052-6058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2652 [label="c1.Categories.Add(''one'', 1)", span="6048-6048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2653 [label="c1.Categories.Add(''two'', 2)", span="6049-6049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_2661 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6045-6045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonConvert.cs"];
m2_359 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_31 [label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="147-147", cluster="lambda expression", file="JsonConvert.cs"];
m2_347 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="693-693", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_641 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonConvert.cs"];
m2_113 [label="return false;", span="247-247", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2089 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4693-4693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2091 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4707-4707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2092 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4708-4708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2093 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4709-4709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2094 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4710-4710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2095 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4711-4711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2096 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4712-4712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2097 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4713-4713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2098 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4714-4714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2100 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2101 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4739-4739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2102 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4740-4740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2103 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4741-4741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2104 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4742-4742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2105 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4743-4743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2106 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4744-4744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2107 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4745-4745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2108 [label="Assert.AreEqual(4, myB.BB_field1)", span="4747-4747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2109 [label="Assert.AreEqual(4, myB.BB_field2)", span="4748-4748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2110 [label="Assert.AreEqual(3, myB.BB_property1)", span="4749-4749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2111 [label="Assert.AreEqual(3, myB.BB_property2)", span="4750-4750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2112 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4751-4751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2113 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4752-4752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2114 [label="Assert.AreEqual(0, myB.BB_property5)", span="4753-4753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2115 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4754-4754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2116 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4755-4755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2117 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4756-4756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2090 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4695-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2099 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4716-4736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2118 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4693-4693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_141 [label="ReferenceLoopHandling? referenceLoopHandling = null", span="296-296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3093 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonConvert.cs"];
m2_3679 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8503-8503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3680 [label="return Value;", span="8505-8505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8503-8503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1341 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2838-2838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1345 [label="Assert.AreEqual(''firstName'', o.firstName)", span="2850-2850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1346 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2851-2851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1347 [label="Assert.AreEqual(''LastName'', o.LastName)", span="2852-2852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1348 [label="Assert.AreEqual(''lastName'', o.lastName)", span="2853-2853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1343 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1344 [label="Assert.IsNotNull(o)", span="2848-2848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1342 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2840-2845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1349 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2838-2838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonConvert.cs"];
m2_1146 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonConvert.cs"];
m2_982 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_987 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2128-2128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_988 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="2130-2130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_986 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2126-2126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_984 [label="JsonSerializer s = new JsonSerializer()", span="2123-2123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_983 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2121-2121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_985 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2124-2124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_989 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonConvert.cs"];
m2_1391 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2959-2959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1399 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="2978-2978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1392 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2961-2961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1398 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="2969-2976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1400 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="2980-2984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1397 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2967-2967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1393 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="2962-2962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1394 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="2963-2963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1395 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="2964-2964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1396 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="2965-2965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1401 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2959-2959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_2021 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonConvert.cs"];
m2_1098 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs"];
m2_125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonConvert.cs"];
m2_3599 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8336-8336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3602 [label="Assert.AreEqual(2, people.Count)", span="8362-8362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3605 [label="Assert.AreEqual(john, jane.Spouse)", span="8367-8367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3606 [label="Assert.AreEqual(jane, john.Spouse)", span="8368-8368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3601 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8355-8360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3603 [label="PersonReference john = people[0]", span="8364-8364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3604 [label="PersonReference jane = people[1]", span="8365-8365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3600 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8338-8353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_3607 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8336-8336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonConvert.cs"];
m2_904 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvert.cs"];
m2_220 [label="contract.InvokeOnSerialized(value, Serializer._context)", span="443-443", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_927 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_929 [label="string json = JsonConvert.SerializeObject(anonymous)", span="2039-2039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_930 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_932 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2043-2043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_933 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2044-2044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_934 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2045-2045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_935 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2046-2046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_936 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2047-2047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_937 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2048-2048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_938 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2049-2049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_928 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2029-2037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_931 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2042-2042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_939 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonConvert.cs"];
m2_2262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5071-5071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonConvert.cs"];
m2_2265 [label="Assert.AreEqual(''First'', cc.First)", span="5076-5076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonConvert.cs"];
m2_2266 [label="Assert.AreEqual(2, cc.Second)", span="5077-5077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonConvert.cs"];
m2_2267 [label="Assert.AreEqual(null, cc.Ignored)", span="5078-5078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonConvert.cs"];
m2_2264 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5075-5075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonConvert.cs"];
m2_2263 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5073-5073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonConvert.cs"];
m2_2268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5071-5071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonConvert.cs"];
m2_3322 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7548-7548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3324 [label="Assert.AreEqual(1, uris.Count)", span="7551-7551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3325 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7552-7552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3330 [label="Assert.AreEqual(i1, i2)", span="7559-7559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3333 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7563-7563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3323 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7550-7550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3326 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7554-7554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3331 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7561-7561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3328 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7557-7557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3329 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7558-7558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3332 [label="Assert.IsNotNull(uri)", span="7562-7562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3327 [label="Assert.IsNotNull(uri)", span="7555-7555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_3334 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7548-7548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonConvert.cs"];
m2_640 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonConvert.cs"];
m2_2727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2732 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="6298-6298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2734 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6300-6300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2737 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6305-6305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2733 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6299-6299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2736 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6304-6304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2728 [label="ClassWithException classWithException = new ClassWithException()", span="6289-6289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2729 [label="throw new Exception(''Test Exception'');", span="6292-6292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2731 [label="classWithException.Exceptions.Add(ex)", span="6296-6296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2735 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6302-6302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2730 [label=Exception, span="6294-6294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_2738 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonConvert.cs"];
m2_17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonConvert.cs"];
m2_19 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonConvert.cs"];
m2_20 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_21 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_22 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_23 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonConvert.cs"];
m2_24 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="1146-1146", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="JsonConvert.cs"];
m2_2718 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6257-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonConvert.cs"];
m2_2721 [label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6262-6271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonConvert.cs"];
m2_2720 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6260-6260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonConvert.cs"];
m2_2719 [label="DerivedType d = new DerivedType()", span="6259-6259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonConvert.cs"];
m2_2722 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6257-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonConvert.cs"];
m2_3462 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonConvert.cs"];
m2_37 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="155-155", cluster="lambda expression", file="JsonConvert.cs"];
m2_3273 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonConvert.cs"];
m2_2184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="4968-4968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonConvert.cs"];
m2_2339 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5215-5215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonConvert.cs"];
m2_111 [label="return false;", span="243-243", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4894-4894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2170 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4910-4910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2169 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4909-4909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2162 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="4896-4896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2166 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4901-4901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2168 [label="StringAssert.AreEqual(expected, json)", span="4907-4907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2163 [label="XmlDocument document = new XmlDocument()", span="4897-4897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2165 [label="testObject.Document = document", span="4899-4899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2167 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4902-4906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2164 [label="document.LoadXml(''<root>hehe, root</root>'')", span="4898-4898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_2171 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4894-4894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonConvert.cs"];
m2_1921 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4311-4311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonConvert.cs"];
m2_1922 [label="return _innerDictionary.GetEnumerator();", span="4313-4313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonConvert.cs"];
m2_1923 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4311-4311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonConvert.cs"];
m2_3250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7341-7341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonConvert.cs"];
m2_3251 [label="var json = Serialize(obj)", span="7344-7344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonConvert.cs"];
m2_3252 [label="return Deserialize<T>(json);", span="7345-7345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonConvert.cs"];
m2_3253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7341-7341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonConvert.cs"];
m2_2444 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2447 [label="string str = JsonConvert.SerializeObject(obj)", span="5480-5480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2449 [label="Assert.AreEqual(1, obj.Position.X)", span="5484-5484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2450 [label="Assert.AreEqual(2, obj.Position.Y)", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2451 [label="Assert.AreEqual(3, obj.Position.Z)", span="5486-5486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2448 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5482-5482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2445 [label="VectorParent obj = new VectorParent()", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2446 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5478-5478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_2452 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonConvert.cs"];
m2_358 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="864-864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs", color=green, community=0];
m2_400 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_401 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="930-930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_402 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="932-932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_405 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_407 [label="settings.TypeNameHandling = TypeNameHandling.All", span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_409 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="848-848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_411 [label="Entry lambda expression", span="926-926", cluster="lambda expression", file="JsonConvert.cs"];
m2_412 [label=referenceResolver, span="926-926", cluster="lambda expression", color=red, community=0, file="JsonConvert.cs"];
m2_403 [label="settings.TraceWriter = traceWriter", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_406 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="938-938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_408 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="942-942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_404 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="934-934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_413 [label="Exit lambda expression", span="926-926", cluster="lambda expression", file="JsonConvert.cs"];
m2_1455 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3130-3130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_1461 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3144-3144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_1460 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3143-3143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_1458 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_1459 [label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3136-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_1456 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3132-3132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_1457 [label="c.NotIncluded = ''Hi''", span="3133-3133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_1462 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3130-3130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonConvert.cs"];
m2_3004 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonConvert.cs"];
m2_3005 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="6841-6841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonConvert.cs"];
m2_3006 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonConvert.cs"];
m2_1048 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonConvert.cs"];
m2_3056 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonConvert.cs"];
m2_2692 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6162-6162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonConvert.cs"];
m2_2693 [label="_privateString = privateString", span="6164-6164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonConvert.cs"];
m2_2694 [label="_readonlyString = readonlyString", span="6165-6165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonConvert.cs"];
m2_2695 [label="_internalString = internalString", span="6166-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonConvert.cs"];
m2_2696 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6162-6162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonConvert.cs"];
m2_2601 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5867-5867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonConvert.cs"];
m2_137 [label="Assert.AreEqual(1, c2.Sections.Count)", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_1846 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4077-4077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonConvert.cs"];
m2_1850 [label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4095-4095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonConvert.cs"];
m2_1848 [label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4082-4089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonConvert.cs"];
m2_1849 [label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4090-4093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonConvert.cs"];
m2_1847 [label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4079-4080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonConvert.cs"];
m2_1851 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4077-4077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonConvert.cs"];
m2_3416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7816-7816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_3421 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7826-7826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_3422 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7827-7827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_3420 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_3418 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_3419 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7822-7822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_3417 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7818-7818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_3423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7816-7816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonConvert.cs"];
m2_2831 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9229-9229", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonConvert.cs"];
m2_1027 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonConvert.cs"];
m2_655 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="JsonConvert.cs"];
m2_1082 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2307-2307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonConvert.cs"];
m2_1084 [label="string json = JsonConvert.SerializeObject(c1)", span="2311-2311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonConvert.cs"];
m2_1085 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2312-2312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonConvert.cs"];
m2_1087 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2316-2316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonConvert.cs"];
m2_1086 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2314-2314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonConvert.cs"];
m2_1083 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2309-2309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonConvert.cs"];
m2_1088 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2307-2307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonConvert.cs"];
m2_96 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonConvert.cs"];
m2_97 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs"];
m2_98 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_274 [label="WriteReference(writer, memberValue)", span="542-542", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_1403 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1406 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="2993-2993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1407 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="2994-2994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1408 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1409 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="2996-2996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1405 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="2992-2992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1404 [label="string json = ''{}''", span="2990-2990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_1410 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_3057 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonConvert.cs"];
m2_737 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonConvert.cs"];
m2_3078 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonConvert.cs"];
m2_3254 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7348-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonConvert.cs"];
m2_3257 [label="var serializer = new JsonSerializer()", span="7352-7352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonConvert.cs"];
m2_3256 [label="var stringWriter = new StringWriter()", span="7351-7351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonConvert.cs"];
m2_3258 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7353-7356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonConvert.cs"];
m2_3259 [label="serializer.Serialize(stringWriter, obj)", span="7357-7357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonConvert.cs"];
m2_3260 [label="return stringWriter.ToString();", span="7359-7359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonConvert.cs"];
m2_3261 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7348-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonConvert.cs"];
m2_2507 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5623-5623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonConvert.cs"];
m2_2945 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6712-6712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2950 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6740-6740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2951 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6741-6741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2949 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6738-6738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2952 [label="byte[] bytes = (byte[])actual.Payload", span="6742-6742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2947 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6724-6724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2948 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6726-6736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2946 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6714-6722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2953 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6743-6743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_2954 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6712-6712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonConvert.cs"];
m2_212 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="436-436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_213 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="428-428", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", color=green, community=0, file="JsonConvert.cs"];
m2_214 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="430-430", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_216 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="426-426", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_217 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="326-326", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_218 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="438-438", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_215 [label="contract.InvokeOnSerializing(value, Serializer._context)", span="433-433", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_219 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Finished serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="440-440", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_3289 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7475-7475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3295 [label="Assert.AreEqual(1, o[''one''])", span="7484-7484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3293 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7481-7481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3294 [label="Assert.IsNotNull(o)", span="7483-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3296 [label="settings.CheckAdditionalContent = true", span="7486-7486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3291 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7479-7479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3290 [label="string json = ''{one:1}{}''", span="7477-7477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3292 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="7480-7480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3297 [label="s = JsonSerializer.Create(settings)", span="7487-7487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3298 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="7488-7488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_3299 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7475-7475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonConvert.cs"];
m2_2079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4660-4660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2082 [label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4664-4670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2085 [label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4674-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2081 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4663-4663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2084 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4673-4673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2083 [label="BB myB = new BB(3, 4)", span="4672-4672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2080 [label="AA myA = new AA(2)", span="4662-4662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_2086 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4660-4660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonConvert.cs"];
m2_3556 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="45-45", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonConvert.cs"];
m2_88 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="JsonConvert.cs"];
m2_223 [label="var json = JsonConvert.SerializeObject(input)", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonConvert.cs"];
m2_224 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="662-662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonConvert.cs"];
m2_225 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonConvert.cs"];
m2_226 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonConvert.cs"];
m2_228 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="652-652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonConvert.cs"];
m2_232 [label="var json = JsonConvert.SerializeObject(input)", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs", color=green, community=0];
m2_233 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs"];
m2_234 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs"];
m2_236 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs"];
m2_237 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="670-670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs"];
m2_240 [label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="690-695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_241 [label="var json = JsonConvert.SerializeObject(input)", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_248 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonConvert.cs"];
m2_249 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_250 [label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="708-717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_251 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="718-718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_252 [label="Assert.AreEqual(3, o.Count)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_253 [label="Assert.AreEqual(true, (bool)o[''A''])", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_254 [label="Assert.AreEqual(false, (bool)o[''B''])", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_256 [label="Assert.AreEqual(JTokenType.Comment, o[''C''][0].Type)", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", color=red, community=0, file="JsonConvert.cs"];
m2_227 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonConvert.cs"];
m2_239 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_230 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="670-670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs"];
m2_231 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="672-677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs"];
m2_235 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="683-683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonConvert.cs"];
m2_238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonConvert.cs"];
m2_242 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_243 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_244 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="701-701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_245 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="702-702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_246 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonConvert.cs"];
m2_255 [label="Assert.AreEqual(3, o[''C''].Count())", span="722-722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_257 [label="Assert.AreEqual(1, (int)o[''C''][1])", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_800 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonConvert.cs"];
m2_3673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8493-8493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3674 [label="throw new InvalidCastException();", span="8495-8495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3675 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8493-8493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonConvert.cs"];
m2_590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1235-1235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonConvert.cs"];
m2_2662 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonConvert.cs"];
m2_189 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonConvert.cs"];
m2_2497 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5611-5611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonConvert.cs"];
m2_2498 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="5613-5619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonConvert.cs"];
m2_2499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5611-5611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonConvert.cs"];
m2_3016 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6851-6851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonConvert.cs"];
m2_3017 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="6853-6853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonConvert.cs"];
m2_3018 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6851-6851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonConvert.cs"];
m2_504 [label="_serializeStack.Add(underlyingDictionary)", span="1036-1036", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_1296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2704-2704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonConvert.cs"];
m2_1298 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2743-2743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonConvert.cs"];
m2_1297 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2706-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonConvert.cs"];
m2_1299 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2704-2704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonConvert.cs"];
m2_1782 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3860-3860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1786 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3866-3866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1787 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3867-3867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1788 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1789 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3869-3869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1790 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3870-3870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1791 [label="Assert.AreEqual(1, d.List.Count)", span="3871-3871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1792 [label="Assert.AreEqual(''existing'', d.List[0])", span="3872-3872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1783 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3862-3862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1785 [label="Assert.IsNotNull(d.Dictionary)", span="3865-3865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1784 [label="Assert.IsNotNull(d)", span="3864-3864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_1793 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3860-3860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonConvert.cs"];
m2_2026 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonConvert.cs"];
m2_262 [label="Assert.AreEqual(0, o.Count)", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonConvert.cs"];
m2_764 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonConvert.cs"];
m2_260 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="525-525", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_264 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonConvert.cs"];
m2_258 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonConvert.cs"];
m2_266 [label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="527-527", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_267 [label="property.PropertyContract == null", span="529-529", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_259 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="574-574", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteObjectStart(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_265 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonConvert.cs"];
m2_268 [label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="531-531", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_269 [label="memberValue = property.ValueProvider.GetValue(value)", span="534-534", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_1614 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3464-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonConvert.cs"];
m2_1615 [label="string json = @''[]''", span="3466-3466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonConvert.cs"];
m2_1616 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3468-3474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonConvert.cs"];
m2_1617 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3464-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonConvert.cs"];
m2_2508 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonConvert.cs"];
m2_3137 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonConvert.cs"];
m2_740 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1615-1615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_746 [label="string output = JsonConvert.SerializeObject(product)", span="1624-1624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_748 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1638-1638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_749 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_750 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1640-1640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_751 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_752 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1642-1642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_753 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1643-1643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_741 [label="Product product = new Product()", span="1617-1617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_745 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_747 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="1636-1636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_742 [label="product.Name = ''Apple''", span="1619-1619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_743 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="1620-1620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_744 [label="product.Price = 3.99M", span="1621-1621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_754 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1615-1615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonConvert.cs"];
m2_3646 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8447-8447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3654 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="8463-8463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3653 [label="conversionType == typeof(string)", span="8461-8461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3648 [label="return this;", span="8451-8451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3650 [label="return (int)Value;", span="8455-8455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3652 [label="return (long)Value;", span="8459-8459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3651 [label="conversionType == typeof(long)", span="8457-8457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3655 [label="throw new InvalidCastException();", span="8465-8465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3647 [label="conversionType == typeof(object)", span="8449-8449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3649 [label="conversionType == typeof(int)", span="8453-8453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_3656 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8447-8447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonConvert.cs"];
m2_2388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5371-5371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2399 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5393-5393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2401 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5396-5396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2405 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5402-5402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2407 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2397 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5390-5390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2389 [label="dynamic expando = new ExpandoObject()", span="5373-5373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2398 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5392-5392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2400 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2402 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5398-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2403 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5399-5399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2404 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5401-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2406 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5404-5404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2395 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5380-5380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2396 [label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5381-5388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2394 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5378-5378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2390 [label="expando.Int = 1", span="5374-5374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2391 [label="expando.Decimal = 99.9d", span="5375-5375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2392 [label="expando.Complex = new ExpandoObject()", span="5376-5376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2393 [label="expando.Complex.String = ''I am a string''", span="5377-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_2408 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5371-5371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonConvert.cs"];
m2_491 [label="return true;", span="1006-1006", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_492 [label="containerContract != null", span="1009-1009", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, file="JsonConvert.cs"];
m2_493 [label="containerContract.ItemContract == null || contract.UnderlyingType != containerContract.ItemContract.CreatedType", span="1011-1011", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3661 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8473-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3662 [label="throw new InvalidCastException();", span="8475-8475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3663 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8473-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1193 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonConvert.cs"];
m2_1657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonConvert.cs"];
m2_1660 [label="Assert.AreEqual('''', p.Name)", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonConvert.cs"];
m2_1659 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3532-3532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonConvert.cs"];
m2_1658 [label="string json = @''{''''Name'''':''''''''}''", span="3530-3530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonConvert.cs"];
m2_1661 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonConvert.cs"];
m2_3288 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonConvert.cs"];
m2_182 [label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonConvert.cs"];
m2_3709 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="8438-8438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonConvert.cs"];
m2_89 [label="JsonConvert.SerializeObject(c1)", span="244-244", cluster="lambda expression", file="JsonConvert.cs"];
m2_334 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="836-836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_335 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="839-839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_336 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_338 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="844-844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_339 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_342 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonConvert.cs"];
m2_343 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonConvert.cs"];
m2_344 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonConvert.cs"];
m2_349 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="850-850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_350 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="852-852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs", color=green, community=0];
m2_352 [label="Assert.AreEqual(customBinder, settings.Binder)", span="854-854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_354 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="857-857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_356 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="860-860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_337 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="843-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_353 [label="settings.CheckAdditionalContent = true", span="856-856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_341 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonConvert.cs"];
m2_348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="848-848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_351 [label="settings.Binder = customBinder", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_355 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_357 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonConvert.cs"];
m2_2541 [label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="9203-9203", cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonConvert.cs"];
m2_7 [label="JsonContract contract = GetContractSafe(value)", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_10 [label="SerializeValue(jsonWriter, value, contract, null, null, null)", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_9 [label="WriteReference(jsonWriter, value)", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_8 [label="ShouldWriteReference(value, null, contract, null, null)", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_11 [label=Exception, span="82-82", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_99 [label="bool? isReference = null", span="213-213", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7530-7530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonConvert.cs"];
m2_3311 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="7532-7544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonConvert.cs"];
m2_3312 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7530-7530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonConvert.cs"];
m2_3249 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonConvert.cs"];
m2_3772 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8695-8695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3779 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8717-8717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3773 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8697-8697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3778 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8715-8715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3775 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8699-8704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3776 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8706-8709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3774 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8698-8698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3777 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8711-8713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_3780 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8695-8695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonConvert.cs"];
m2_1705 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3633-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1710 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3653-3653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1711 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3654-3654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1712 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3655-3655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1713 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1709 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3652-3652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1706 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3635-3641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1707 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3643-3643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1708 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3645-3650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_1714 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3633-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonConvert.cs"];
m2_2923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6672-6672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonConvert.cs"];
m2_2924 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'')", span="6674-6682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonConvert.cs"];
m2_2925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6672-6672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonConvert.cs"];
m2_52 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="603-603", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="JsonConvert.cs"];
m2_516 [label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="1064-1064", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2496 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5543-5543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonConvert.cs"];
m2_3631 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="83-83", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonConvert.cs"];
m2_1912 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonConvert.cs"];
m2_3287 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonConvert.cs"];
m2_3913 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonConvert.cs"];
m2_1992 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonConvert.cs"];
m2_884 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonConvert.cs"];
m2_3790 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8747-8747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3797 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8769-8769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3791 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8749-8749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3796 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8767-8767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3793 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8751-8756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3794 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8758-8761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3792 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8750-8750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3795 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8763-8765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_3798 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8747-8747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonConvert.cs"];
m2_886 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1947-1947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonConvert.cs"];
m2_887 [label="string json = @''[''''vvv\jvvv'''']''", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonConvert.cs"];
m2_888 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="1951-1951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonConvert.cs"];
m2_889 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1947-1947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonConvert.cs"];
m2_2979 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonConvert.cs"];
m2_518 [label="writer.WritePropertyName(propertyName, escape)", span="1068-1068", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_1109 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonConvert.cs"];
m2_1372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2919-2919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1375 [label="string json = JsonConvert.SerializeObject(i)", span="2924-2924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1378 [label="string newJson = JsonConvert.SerializeObject(ii)", span="2929-2929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1376 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1379 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1377 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="2927-2927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1373 [label="SubKlass i = new SubKlass(''my subprop'')", span="2921-2921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1374 [label="i.SuperProp = ''overrided superprop''", span="2922-2922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_1380 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2919-2919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonConvert.cs"];
m2_3230 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7298-7298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3235 [label="Assert.AreEqual(2, dic2.Count)", span="7318-7318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3236 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7319-7319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3237 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7320-7320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3234 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7316-7316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3232 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7306-7309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3233 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7311-7314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3231 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7300-7304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_3238 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7298-7298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonConvert.cs"];
m2_307 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="797-797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_309 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_310 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_311 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_308 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_312 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_584 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_586 [label="var json = JsonConvert.SerializeObject(original)", span="1261-1261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_588 [label="Assert.AreEqual(expectedJson, json)", span="1263-1263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_585 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_587 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1262-1262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonConvert.cs"];
m2_911 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonConvert.cs"];
m2_2740 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6310-6310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2745 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6324-6324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2746 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6325-6325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2747 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6326-6326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2748 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6327-6327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2749 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6328-6328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2744 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6323-6323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2741 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6312-6312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2742 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6313-6313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2743 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6315-6321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_2750 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6310-6310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonConvert.cs"];
m2_3590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8298-8298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3593 [label="Assert.AreEqual(2, people.Count)", span="8326-8326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3596 [label="Assert.AreEqual(john, jane.Spouse)", span="8331-8331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3597 [label="Assert.AreEqual(jane, john.Spouse)", span="8332-8332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3592 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8317-8324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3594 [label="PersonReference john = people[0]", span="8328-8328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3595 [label="PersonReference jane = people[1]", span="8329-8329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3591 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8300-8315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8298-8298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_38 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="JsonConvert.cs"];
m2_39 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="JsonConvert.cs"];
m2_40 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="159-159", cluster="lambda expression", file="JsonConvert.cs"];
m2_42 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="JsonConvert.cs"];
m2_43 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="163-163", cluster="lambda expression", file="JsonConvert.cs"];
m2_44 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="JsonConvert.cs"];
m2_45 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonConvert.cs"];
m2_46 [label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonConvert.cs"];
m2_48 [label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonConvert.cs"];
m2_41 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="JsonConvert.cs"];
m2_47 [label="Assert.AreEqual(EnumA.ValueA, e1)", span="183-183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonConvert.cs"];
m2_49 [label="Assert.AreEqual(EnumA.ValueA, e2)", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonConvert.cs"];
m2_1593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3429-3429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonConvert.cs"];
m2_1594 [label="string json = @''[]''", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonConvert.cs"];
m2_1595 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3433-3435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonConvert.cs"];
m2_1596 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3429-3429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonConvert.cs"];
m2_813 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonConvert.cs"];
m2_203 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonConvert.cs"];
m2_3386 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7708-7708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonConvert.cs"];
m2_3389 [label="Assert.AreEqual(1, l[0])", span="7717-7717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonConvert.cs"];
m2_3390 [label="Assert.AreEqual(null, l[1])", span="7718-7718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonConvert.cs"];
m2_3388 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonConvert.cs"];
m2_3387 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7710-7713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonConvert.cs"];
m2_3391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7708-7708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonConvert.cs"];
m2_3884 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9001-9001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3885 [label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9003-9003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3886 [label="messageJObject == null", span="9004-9004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3888 [label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9009-9009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3891 [label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9013-9014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3887 [label="return null;", span="9006-9006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3889 [label="JToken displayNameToken", span="9011-9011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3892 [label="return new System.Net.Mail.MailAddress(address, displayName);", span="9016-9016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3893 [label="return new System.Net.Mail.MailAddress(address);", span="9019-9019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3890 [label="string displayName", span="9012-9012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3894 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9001-9001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_1635 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3494-3494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonConvert.cs"];
m2_1640 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3505-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonConvert.cs"];
m2_1637 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3500-3500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonConvert.cs"];
m2_1639 [label=JsonSerializationException, span="3503-3503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonConvert.cs"];
m2_1636 [label="string json = @''{}''", span="3496-3496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonConvert.cs"];
m2_1638 [label="Assert.Fail()", span="3501-3501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonConvert.cs"];
m2_1641 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3494-3494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonConvert.cs"];
m2_361 [label="OnSerializing(writer, contract, values)", span="728-728", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs", color=red, community=0];
m2_363 [label="bool hasWrittenMetadataObject = WriteStartArray(writer, values, contract, member, collectionContract, containerProperty)", span="732-732", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_365 [label=hasWrittenMetadataObject, span="736-736", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_367 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="741-741", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_369 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="726-726", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_371 [label="int dimension = indices.Length", span="748-748", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs", color=red, community=0];
m2_373 [label="int i = 0", span="750-750", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_375 [label="newIndices[i] = indices[i]", span="752-752", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_377 [label="writer.WriteStartArray()", span="755-755", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_379 [label="i <= values.GetUpperBound(dimension)", span="757-757", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_381 [label="bool isTopLevel = (newIndices.Length == values.Rank)", span="760-760", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs", color=red, community=0];
m2_383 [label="object value = values.GetValue(newIndices)", span="764-764", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_385 [label="ShouldWriteReference(value, null, valueContract, contract, member)", span="770-770", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_387 [label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="776-776", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_389 [label=Exception, span="782-782", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_391 [label="HandleError(writer, initialDepth + 1)", span="786-786", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_393 [label="SerializeMultidimensionalArray(writer, values, contract, member, initialDepth + 1, newIndices)", span="796-796", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_396 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="746-746", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_397 [label="Entry System.Array.GetLowerBound(int)", span="0-0", cluster="System.Array.GetLowerBound(int)", file="JsonConvert.cs"];
m2_399 [label="Entry System.Array.GetValue(params int[])", span="0-0", cluster="System.Array.GetValue(params int[])", file="JsonConvert.cs"];
m2_360 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonConvert.cs"];
m2_362 [label="_serializeStack.Add(values)", span="730-730", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_364 [label="SerializeMultidimensionalArray(writer, values, contract, member, writer.Top, new int[0])", span="734-734", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_366 [label="writer.WriteEndObject()", span="738-738", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_368 [label="OnSerialized(writer, contract, values)", span="743-743", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_370 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", span="746-746", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_372 [label="int[] newIndices = new int[dimension + 1]", span="749-749", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_374 [label="i < dimension", span="750-750", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_376 [label="i++", span="750-750", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_378 [label="int i = values.GetLowerBound(dimension)", span="757-757", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_380 [label="newIndices[dimension] = i", span="759-759", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_382 [label=isTopLevel, span="762-762", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_384 [label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="768-768", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_386 [label="WriteReference(writer, value)", span="772-772", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_388 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="778-778", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_390 [label="IsErrorHandled(values, contract, i, null, writer.ContainerPath, ex)", span="784-784", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_392 [label="throw;", span="790-790", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_395 [label="writer.WriteEndArray()", span="800-800", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_398 [label="Entry System.Array.GetUpperBound(int)", span="0-0", cluster="System.Array.GetUpperBound(int)", file="JsonConvert.cs"];
m2_394 [label="i++", span="757-757", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="JsonConvert.cs"];
m2_631 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1326-1326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonConvert.cs"];
m2_644 [label="_name = name", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonConvert.cs"];
m2_645 [label="_number = number", span="1329-1329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonConvert.cs"];
m2_646 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1326-1326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonConvert.cs"];
m2_2465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5523-5523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_2470 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5537-5537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_2471 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_2469 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5535-5535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_2467 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5527-5531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_2468 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5533-5533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_2466 [label="var derived = new Derived(''meh'', ''woo'')", span="5525-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_2472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5523-5523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonConvert.cs"];
m2_1621 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3478-3478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonConvert.cs"];
m2_1622 [label="string json = @''new Constructor(123)''", span="3480-3480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonConvert.cs"];
m2_1623 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3482-3482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonConvert.cs"];
m2_1624 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3478-3478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonConvert.cs"];
m2_1993 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonConvert.cs"];
m2_221 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="436-436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerialized(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_1165 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonConvert.cs"];
m2_3912 [label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0", cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonConvert.cs"];
m2_635 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonConvert.cs"];
m2_3562 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8212-8212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonConvert.cs"];
m2_3564 [label="throw new ArgumentNullException(''bar'');", span="8215-8215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonConvert.cs"];
m2_3563 [label="bar == null", span="8214-8214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonConvert.cs"];
m2_3565 [label="Bar = bar", span="8217-8217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonConvert.cs"];
m2_3566 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8212-8212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonConvert.cs"];
m2_3667 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8483-8483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3668 [label="throw new InvalidCastException();", span="8485-8485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3669 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8483-8483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7629-7629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonConvert.cs"];
m2_3361 [label="m_Item1 = item1", span="7631-7631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonConvert.cs"];
m2_3362 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7629-7629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonConvert.cs"];
m2_2691 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6082-6082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonConvert.cs"];
m2_2646 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6037-6037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonConvert.cs"];
m2_2648 [label="Categories = new Dictionary<string, int>()", span="6040-6040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonConvert.cs"];
m2_2647 [label="Title = title", span="6039-6039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonConvert.cs"];
m2_2649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6037-6037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonConvert.cs"];
m2_3431 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="7830-7830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonConvert.cs"];
m2_2432 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5445-5445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2438 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2437 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5453-5453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2436 [label="JsonSerializer serializer = new JsonSerializer()", span="5451-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2434 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5448-5448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2435 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5449-5449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2433 [label="string json = ''{'Value':123456789876543.21}''", span="5447-5447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5445-5445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonConvert.cs"];
m2_2697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6169-6169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonConvert.cs"];
m2_2698 [label="_readonlyString = ''default!''", span="6171-6171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonConvert.cs"];
m2_2699 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6169-6169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonConvert.cs"];
m2_639 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonConvert.cs"];
m2_1986 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonConvert.cs"];
m2_861 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonConvert.cs"];
m2_1056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2266-2266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonConvert.cs"];
m2_1061 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="2276-2276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonConvert.cs"];
m2_1060 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonConvert.cs"];
m2_1057 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2268-2268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonConvert.cs"];
m2_1058 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2270-2270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonConvert.cs"];
m2_1059 [label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2271-2273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonConvert.cs"];
m2_1062 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2266-2266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonConvert.cs"];
m2_556 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonConvert.cs"];
m2_3392 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7723-7723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3394 [label="var json = JsonConvert.SerializeObject(tuple)", span="7726-7726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3395 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7727-7727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3399 [label="Assert.AreEqual(500, obj.Item1)", span="7735-7735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3393 [label="var tuple = new MyTuple<int>(500)", span="7725-7725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3397 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="7731-7731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3396 [label="MyTuple<int> obj = null", span="7729-7729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3398 [label="doStuff()", span="7734-7734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3400 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7723-7723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_1963 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1964 [label="_stringValue = info.GetString(''stringValue'')", span="4398-4398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1965 [label="_intValue = info.GetInt32(''intValue'')", span="4399-4399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1966 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4400-4400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1967 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1968 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4402-4402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1969 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4403-4403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1970 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4405-4405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1971 [label="_byteValue = info.GetByte(''byteValue'')", span="4406-4406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1972 [label="_charValue = info.GetChar(''charValue'')", span="4407-4407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1973 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4408-4408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1974 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4409-4409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1975 [label="_shortValue = info.GetInt16(''shortValue'')", span="4410-4410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1976 [label="_longValue = info.GetInt64(''longValue'')", span="4411-4411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1977 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4412-4412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1978 [label="_floatValue = info.GetSingle(''floatValue'')", span="4413-4413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1979 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4414-4414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1980 [label="_uintValue = info.GetUInt32(''uintValue'')", span="4415-4415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1981 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4416-4416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1982 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_167 [label="Assert.AreEqual(0, l.ChildId)", span="528-528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonConvert.cs"];
m2_475 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="JsonConvert.cs"];
m2_477 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JsonConvert.cs"];
m2_480 [label="HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Ignore) &&\r\n                (memberValue == null || MiscellaneousUtils.ValueEquals(memberValue, ReflectionUtils.GetDefaultValue(memberValue.GetType())))", span="977-978", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonConvert.cs", color=red, community=0];
m2_478 [label="Serializer._nullValueHandling == NullValueHandling.Ignore && memberValue == null", span="972-972", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonConvert.cs"];
m2_481 [label="return false;", span="980-980", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonConvert.cs"];
m2_479 [label="return false;", span="974-974", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonConvert.cs"];
m2_476 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="970-970", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonConvert.cs"];
m2_482 [label="return true;", span="983-983", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonConvert.cs"];
m2_2956 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6747-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonConvert.cs"];
m2_2959 [label="Assert.AreEqual('''', dict[''k1''])", span="6752-6752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonConvert.cs"];
m2_2960 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="6753-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonConvert.cs"];
m2_2958 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6750-6750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonConvert.cs"];
m2_2957 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6749-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonConvert.cs"];
m2_2961 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6747-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonConvert.cs"];
m2_202 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonConvert.cs"];
m2_3239 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7324-7324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonConvert.cs"];
m2_3241 [label="Assert.AreEqual('''', s)", span="7327-7327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonConvert.cs"];
m2_3240 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7326-7326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonConvert.cs"];
m2_3242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7324-7324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonConvert.cs"];
m2_3350 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7598-7598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonConvert.cs"];
m2_3352 [label="Assert.AreEqual(123, result.Key)", span="7605-7605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonConvert.cs"];
m2_3353 [label="Assert.AreEqual(''test value'', result.Value)", span="7606-7606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonConvert.cs"];
m2_3351 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="7600-7603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonConvert.cs"];
m2_3354 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7598-7598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonConvert.cs"];
m2_1026 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonConvert.cs"];
m2_14 [label="ClearErrorContext()", span="93-93", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_26 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="JsonConvert.cs"];
m2_27 [label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="143-143", cluster="lambda expression", file="JsonConvert.cs"];
m2_28 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="JsonConvert.cs"];
m2_29 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs"];
m2_30 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="JsonConvert.cs"];
m2_1890 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4233-4233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonConvert.cs"];
m2_1891 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4233-4233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonConvert.cs"];
m2_2763 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonConvert.cs"];
m2_757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1665-1665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonConvert.cs"];
m2_760 [label="Assert.AreEqual(''Orange'', p.Name)", span="1671-1671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonConvert.cs"];
m2_761 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1672-1672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonConvert.cs"];
m2_762 [label="Assert.AreEqual(3.99m, p.Price)", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonConvert.cs"];
m2_759 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonConvert.cs"];
m2_758 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonConvert.cs"];
m2_763 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1665-1665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonConvert.cs"];
m2_1311 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2756-2756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonConvert.cs"];
m2_1312 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="2758-2764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonConvert.cs"];
m2_1313 [label="return person;", span="2765-2765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonConvert.cs"];
m2_1314 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2756-2756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonConvert.cs"];
m2_571 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="1172-1172", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonConvert.cs"];
m2_819 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonConvert.cs"];
m2_3588 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="JsonConvert.cs"];
m2_1365 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2903-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1370 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="2914-2914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1367 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="2908-2908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1369 [label=JsonSerializationException, span="2912-2912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1366 [label="string json = ''{ 'testProperty1': 'value' }''", span="2907-2907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1368 [label="Assert.Fail()", span="2910-2910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2903-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonConvert.cs"];
m2_2811 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_1268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2654-2654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonConvert.cs"];
m2_1273 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2667-2667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonConvert.cs"];
m2_1270 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2662-2662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonConvert.cs"];
m2_1272 [label=JsonSerializationException, span="2665-2665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonConvert.cs"];
m2_1269 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2658-2660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonConvert.cs"];
m2_1271 [label="Assert.Fail()", span="2663-2663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonConvert.cs"];
m2_1274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2654-2654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonConvert.cs"];
m2_3895 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="433-433", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonConvert.cs"];
m2_1261 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1262 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="2639-2650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_1263 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonConvert.cs"];
m2_568 [label="return true;", span="1165-1165", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonConvert.cs"];
m2_2476 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5559-5559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2477 [label="info.AddValue(''Name'', _name)", span="5561-5561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2478 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5559-5559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_3697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8533-8533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3698 [label="throw new InvalidCastException();", span="8535-8535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3699 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8533-8533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1695 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonConvert.cs"];
m2_2181 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="4933-4933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonConvert.cs"];
m2_739 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonConvert.cs"];
m2_3401 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JsonConvert.cs"];
m2_3657 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="JsonConvert.cs"];
m2_3070 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6953-6953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_3074 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6959-6959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_3076 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6962-6962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_3075 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6960-6960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_3071 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6955-6955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_3073 [label="person.Age = 25", span="6957-6957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_3072 [label="person.Name = ''John Doe''", span="6956-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_3077 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6953-6953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonConvert.cs"];
m2_1485 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3205-3205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1488 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3220-3220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1489 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3221-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1490 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3222-3222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1491 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3223-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1492 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3224-3224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1493 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3225-3225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1487 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3218-3218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1486 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3207-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_1494 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3205-3205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonConvert.cs"];
m2_729 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1600-1600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_731 [label="string jsonText = JsonConvert.SerializeObject(store)", span="1604-1604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_733 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1608-1608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_734 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="1609-1609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_730 [label="Store store = new Store()", span="1602-1602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_732 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1606-1606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_735 [label="Console.WriteLine(jsonText)", span="1611-1611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_736 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1600-1600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonConvert.cs"];
m2_2160 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonConvert.cs"];
m2_3267 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7377-7377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonConvert.cs"];
m2_3268 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7379-7389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonConvert.cs"];
m2_3270 [label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7402-7416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonConvert.cs"];
m2_3269 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7391-7391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonConvert.cs"];
m2_3271 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7377-7377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonConvert.cs"];
m2_2526 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5672-5672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonConvert.cs"];
m2_2528 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5675-5675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonConvert.cs"];
m2_2529 [label="Assert.AreEqual(''value!'', c.Value)", span="5676-5676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonConvert.cs"];
m2_2530 [label="Assert.AreEqual(1, c.Age)", span="5677-5677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonConvert.cs"];
m2_2527 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5674-5674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonConvert.cs"];
m2_2531 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5672-5672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonConvert.cs"];
m2_990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_996 [label="string json = JsonConvert.SerializeObject(wibble)", span="2141-2141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_998 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_999 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2146-2146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_1000 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2147-2147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_1001 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2148-2148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_1002 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_1003 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2150-2150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_1004 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_997 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2143-2143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_991 [label="ClassWithArray wibble = new ClassWithArray()", span="2136-2136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_995 [label="wibble.Bar.Add(3)", span="2140-2140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_992 [label="wibble.Foo = ''hello''", span="2137-2137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_993 [label="wibble.Bar.Add(1)", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_994 [label="wibble.Bar.Add(2)", span="2139-2139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_1005 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonConvert.cs"];
m2_2047 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4576-4576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2062 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4626-4626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2060 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4624-4624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2061 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4625-4625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2063 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4627-4627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2064 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4628-4628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2065 [label="Assert.AreEqual(null, o2._nullableInt)", span="4629-4629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2059 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4623-4623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2053 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4584-4584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2058 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4598-4621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2057 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4594-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2049 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4579-4579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2052 [label="person.Name = ''Name!''", span="4582-4582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2054 [label="string dateTimeOffsetText", span="4585-4585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2056 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4592-4592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2055 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4587-4587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2048 [label="Person person = new Person()", span="4578-4578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2050 [label="person.LastModified = person.BirthDate", span="4580-4580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2051 [label="person.Department = ''Department!''", span="4581-4581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_2066 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4576-4576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonConvert.cs"];
m2_3426 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7841-7841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonConvert.cs"];
m2_3428 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="7852-7855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonConvert.cs"];
m2_3427 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="7843-7850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonConvert.cs"];
m2_3429 [label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7857-7864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonConvert.cs"];
m2_3430 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7841-7841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonConvert.cs"];
m2_1137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1143 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2415-2415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1144 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2416-2416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1141 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2411-2411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1138 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2407-2407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1142 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2413-2413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1140 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2410-2410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1139 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2408-2408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1145 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_2937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6698-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_2940 [label="Assert.AreEqual(null, c.Id)", span="6703-6703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_2943 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6708-6708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_2939 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6701-6701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_2942 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_2941 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6705-6705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_2938 [label="string json = @''{''''Id'''':null}''", span="6700-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_2944 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6698-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonConvert.cs"];
m2_290 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_569 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonConvert.cs"];
m2_572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonConvert.cs"];
m2_573 [label="var original = new Foo1 { foo = ''value'' }", span="1243-1243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonConvert.cs"];
m2_1381 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonConvert.cs"];
m2_2775 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonConvert.cs"];
m2_1525 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1528 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3327-3327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1529 [label="Assert.AreEqual(2, content.Children.Count)", span="3328-3328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1530 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3329-3329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1531 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3330-3330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1527 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3325-3325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1526 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3311-3323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_1532 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonConvert.cs"];
m2_722 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonConvert.cs"];
m2_716 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonConvert.cs"];
m2_1797 [label="Entry lambda expression", span="3909-3909", cluster="lambda expression", file="JsonConvert.cs"];
m2_67 [label="JsonArrayContract arrayContract = (JsonArrayContract)valueContract", span="175-175", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_859 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="1906-1906", cluster="lambda expression", file="JsonConvert.cs"];
m2_1171 [label="JsonConvert.SerializeObject(c)", span="2460-2460", cluster="lambda expression", file="JsonConvert.cs"];
m2_1266 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2649-2649", cluster="lambda expression", file="JsonConvert.cs"];
m2_3849 [label="JsonConvert.SerializeObject(new ErroringTestClass())", span="8892-8892", cluster="lambda expression", file="JsonConvert.cs"];
m2_34 [label="return Serializer._contractResolver.ResolveContract(value.GetType());", span="122-122", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonConvert.cs"];
m2_70 [label="SerializeMultidimensionalArray(writer, (Array)value, arrayContract, member, containerContract, containerProperty)", span="182-182", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_73 [label="JsonContractType.String", span="188-188", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_92 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonConvert.cs"];
m2_891 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="1951-1951", cluster="lambda expression", file="JsonConvert.cs"];
m2_1557 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3373-3373", cluster="lambda expression", file="JsonConvert.cs"];
m2_1584 [label="JsonConvert.DeserializeObject<Person>(json)", span="3412-3412", cluster="lambda expression", file="JsonConvert.cs"];
m2_1591 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3422-3422", cluster="lambda expression", file="JsonConvert.cs"];
m2_1598 [label="JsonConvert.DeserializeObject<Exception>(json)", span="3433-3433", cluster="lambda expression", file="JsonConvert.cs"];
m2_1605 [label="JsonConvert.DeserializeObject<double>(json)", span="3444-3444", cluster="lambda expression", file="JsonConvert.cs"];
m2_1612 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3456-3456", cluster="lambda expression", file="JsonConvert.cs"];
m2_1619 [label="JsonConvert.DeserializeObject<JObject>(json)", span="3469-3469", cluster="lambda expression", file="JsonConvert.cs"];
m2_1626 [label="JsonConvert.DeserializeObject<Person>(json)", span="3482-3482", cluster="lambda expression", file="JsonConvert.cs"];
m2_1633 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3490-3490", cluster="lambda expression", file="JsonConvert.cs"];
m2_2226 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5007-5007", cluster="lambda expression", file="JsonConvert.cs"];
m2_2240 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5027-5027", cluster="lambda expression", file="JsonConvert.cs"];
m2_2342 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5249-5249", cluster="lambda expression", file="JsonConvert.cs"];
m2_2893 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6606-6606", cluster="lambda expression", file="JsonConvert.cs"];
m2_2907 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6645-6645", cluster="lambda expression", file="JsonConvert.cs"];
m2_2928 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6681-6681", cluster="lambda expression", file="JsonConvert.cs"];
m2_2935 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6693-6693", cluster="lambda expression", file="JsonConvert.cs"];
m2_3008 [label="JsonConvert.DeserializeObject<double>('''')", span="6841-6841", cluster="lambda expression", file="JsonConvert.cs"];
m2_3014 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6847-6847", cluster="lambda expression", file="JsonConvert.cs"];
m2_3020 [label="JsonConvert.DeserializeObject<int>('''')", span="6853-6853", cluster="lambda expression", file="JsonConvert.cs"];
m2_3030 [label="JsonConvert.DeserializeObject<double>(null)", span="6867-6867", cluster="lambda expression", file="JsonConvert.cs"];
m2_3403 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7731-7731", cluster="lambda expression", file="JsonConvert.cs"];
m2_3478 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="7991-7991", cluster="lambda expression", file="JsonConvert.cs"];
m2_3486 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8006-8006", cluster="lambda expression", file="JsonConvert.cs"];
m2_3495 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8020-8020", cluster="lambda expression", file="JsonConvert.cs"];
m2_3715 [label="JsonConvert.DeserializeObject<JObject>(content)", span="8568-8568", cluster="lambda expression", file="JsonConvert.cs"];
m2_3856 [label="JsonConvert.DeserializeObject<string>(''020474068'')", span="8898-8898", cluster="lambda expression", file="JsonConvert.cs"];
m2_66 [label="JsonContractType.Array", span="174-174", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_68 [label="!arrayContract.IsMultidimensionalArray", span="176-176", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_90 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="726-726", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_858 [label="Entry lambda expression", span="1906-1906", cluster="lambda expression", file="JsonConvert.cs"];
m2_860 [label="Exit lambda expression", span="1906-1906", cluster="lambda expression", file="JsonConvert.cs"];
m2_1170 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2459-2459", cluster="lambda expression", file="JsonConvert.cs"];
m2_1172 [label="Exit lambda expression", span="2457-2461", cluster="lambda expression", file="JsonConvert.cs"];
m2_1265 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="2641-2647", cluster="lambda expression", file="JsonConvert.cs"];
m2_1267 [label="Exit lambda expression", span="2639-2650", cluster="lambda expression", file="JsonConvert.cs"];
m2_1309 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="2753-2753", cluster="lambda expression", file="JsonConvert.cs"];
m2_3848 [label="Entry lambda expression", span="8892-8892", cluster="lambda expression", file="JsonConvert.cs"];
m2_3850 [label="Exit lambda expression", span="8892-8892", cluster="lambda expression", file="JsonConvert.cs"];
m2_3036 [label="JsonConvert.DeserializeObject(null)", span="6878-6878", cluster="lambda expression", file="JsonConvert.cs"];
m2_32 [label="value == null", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonConvert.cs"];
m2_33 [label="return null;", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonConvert.cs"];
m2_35 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="JsonConvert.cs"];
m2_36 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonConvert.cs"];
m2_69 [label="SerializeList(writer, (IEnumerable)value, arrayContract, member, containerContract, containerProperty)", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_71 [label="JsonContractType.Primitive", span="185-185", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_72 [label="SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, containerContract, containerProperty)", span="186-186", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_74 [label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="189-189", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_91 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="415-415", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonConvert.cs"];
m2_93 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1030-1030", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_890 [label="Entry lambda expression", span="1951-1951", cluster="lambda expression", file="JsonConvert.cs"];
m2_892 [label="Exit lambda expression", span="1951-1951", cluster="lambda expression", file="JsonConvert.cs"];
m2_1556 [label="Entry lambda expression", span="3373-3373", cluster="lambda expression", file="JsonConvert.cs"];
m2_1558 [label="Exit lambda expression", span="3373-3373", cluster="lambda expression", file="JsonConvert.cs"];
m2_1583 [label="Entry lambda expression", span="3412-3412", cluster="lambda expression", file="JsonConvert.cs"];
m2_1585 [label="Exit lambda expression", span="3412-3412", cluster="lambda expression", file="JsonConvert.cs"];
m2_1590 [label="Entry lambda expression", span="3422-3422", cluster="lambda expression", file="JsonConvert.cs"];
m2_1592 [label="Exit lambda expression", span="3422-3422", cluster="lambda expression", file="JsonConvert.cs"];
m2_1597 [label="Entry lambda expression", span="3433-3433", cluster="lambda expression", file="JsonConvert.cs"];
m2_1599 [label="Exit lambda expression", span="3433-3433", cluster="lambda expression", file="JsonConvert.cs"];
m2_1604 [label="Entry lambda expression", span="3444-3444", cluster="lambda expression", file="JsonConvert.cs"];
m2_1606 [label="Exit lambda expression", span="3444-3444", cluster="lambda expression", file="JsonConvert.cs"];
m2_1611 [label="Entry lambda expression", span="3456-3456", cluster="lambda expression", file="JsonConvert.cs"];
m2_1613 [label="Exit lambda expression", span="3456-3456", cluster="lambda expression", file="JsonConvert.cs"];
m2_1618 [label="Entry lambda expression", span="3469-3469", cluster="lambda expression", file="JsonConvert.cs"];
m2_1620 [label="Exit lambda expression", span="3469-3469", cluster="lambda expression", file="JsonConvert.cs"];
m2_1625 [label="Entry lambda expression", span="3482-3482", cluster="lambda expression", file="JsonConvert.cs"];
m2_1627 [label="Exit lambda expression", span="3482-3482", cluster="lambda expression", file="JsonConvert.cs"];
m2_1632 [label="Entry lambda expression", span="3490-3490", cluster="lambda expression", file="JsonConvert.cs"];
m2_1634 [label="Exit lambda expression", span="3490-3490", cluster="lambda expression", file="JsonConvert.cs"];
m2_2225 [label="Entry lambda expression", span="5007-5007", cluster="lambda expression", file="JsonConvert.cs"];
m2_2227 [label="Exit lambda expression", span="5007-5007", cluster="lambda expression", file="JsonConvert.cs"];
m2_2239 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5026-5026", cluster="lambda expression", file="JsonConvert.cs"];
m2_2241 [label="Exit lambda expression", span="5013-5028", cluster="lambda expression", file="JsonConvert.cs"];
m2_2341 [label="Entry lambda expression", span="5249-5249", cluster="lambda expression", file="JsonConvert.cs"];
m2_2343 [label="Exit lambda expression", span="5249-5249", cluster="lambda expression", file="JsonConvert.cs"];
m2_2892 [label="Entry lambda expression", span="6606-6606", cluster="lambda expression", file="JsonConvert.cs"];
m2_2894 [label="Exit lambda expression", span="6606-6606", cluster="lambda expression", file="JsonConvert.cs"];
m2_2906 [label="Entry lambda expression", span="6645-6645", cluster="lambda expression", file="JsonConvert.cs"];
m2_2908 [label="Exit lambda expression", span="6645-6645", cluster="lambda expression", file="JsonConvert.cs"];
m2_2927 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6676-6679", cluster="lambda expression", file="JsonConvert.cs"];
m2_2929 [label="Exit lambda expression", span="6674-6682", cluster="lambda expression", file="JsonConvert.cs"];
m2_2934 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6690-6691", cluster="lambda expression", file="JsonConvert.cs"];
m2_2936 [label="Exit lambda expression", span="6688-6694", cluster="lambda expression", file="JsonConvert.cs"];
m2_3007 [label="Entry lambda expression", span="6841-6841", cluster="lambda expression", file="JsonConvert.cs"];
m2_3009 [label="Exit lambda expression", span="6841-6841", cluster="lambda expression", file="JsonConvert.cs"];
m2_3013 [label="Entry lambda expression", span="6847-6847", cluster="lambda expression", file="JsonConvert.cs"];
m2_3015 [label="Exit lambda expression", span="6847-6847", cluster="lambda expression", file="JsonConvert.cs"];
m2_3019 [label="Entry lambda expression", span="6853-6853", cluster="lambda expression", file="JsonConvert.cs"];
m2_3021 [label="Exit lambda expression", span="6853-6853", cluster="lambda expression", file="JsonConvert.cs"];
m2_3029 [label="Entry lambda expression", span="6867-6867", cluster="lambda expression", file="JsonConvert.cs"];
m2_3031 [label="Exit lambda expression", span="6867-6867", cluster="lambda expression", file="JsonConvert.cs"];
m2_3402 [label="Entry lambda expression", span="7731-7731", cluster="lambda expression", file="JsonConvert.cs"];
m2_3404 [label="Exit lambda expression", span="7731-7731", cluster="lambda expression", file="JsonConvert.cs"];
m2_3477 [label="Entry lambda expression", span="7991-7991", cluster="lambda expression", file="JsonConvert.cs"];
m2_3479 [label="Exit lambda expression", span="7991-7991", cluster="lambda expression", file="JsonConvert.cs"];
m2_3485 [label="Entry lambda expression", span="8006-8006", cluster="lambda expression", file="JsonConvert.cs"];
m2_3487 [label="Exit lambda expression", span="8006-8006", cluster="lambda expression", file="JsonConvert.cs"];
m2_3494 [label="Entry lambda expression", span="8020-8020", cluster="lambda expression", file="JsonConvert.cs"];
m2_3496 [label="Exit lambda expression", span="8020-8020", cluster="lambda expression", file="JsonConvert.cs"];
m2_3714 [label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="8567-8567", cluster="lambda expression", file="JsonConvert.cs"];
m2_3716 [label="Exit lambda expression", span="8565-8569", cluster="lambda expression", file="JsonConvert.cs"];
m2_3855 [label="Entry lambda expression", span="8898-8898", cluster="lambda expression", file="JsonConvert.cs"];
m2_3857 [label="Exit lambda expression", span="8898-8898", cluster="lambda expression", file="JsonConvert.cs"];
m2_3315 [label="JsonSerializer serializer = new JsonSerializer()", span="7536-7536", cluster="lambda expression", file="JsonConvert.cs"];
m2_1418 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3009-3009", cluster="lambda expression", file="JsonConvert.cs"];
m2_1666 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3541-3549", cluster="lambda expression", file="JsonConvert.cs"];
m2_1673 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3558-3566", cluster="lambda expression", file="JsonConvert.cs"];
m2_1679 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3575-3583", cluster="lambda expression", file="JsonConvert.cs"];
m2_1685 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3592-3600", cluster="lambda expression", file="JsonConvert.cs"];
m2_1834 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4002-4006", cluster="lambda expression", file="JsonConvert.cs"];
m2_723 [label="Entry lambda expression", span="1580-1580", cluster="lambda expression", file="JsonConvert.cs"];
m2_726 [label="Entry lambda expression", span="1583-1583", cluster="lambda expression", file="JsonConvert.cs"];
m2_1169 [label="Entry lambda expression", span="2457-2461", cluster="lambda expression", file="JsonConvert.cs"];
m2_1264 [label="Entry lambda expression", span="2639-2650", cluster="lambda expression", file="JsonConvert.cs"];
m2_1308 [label="Entry lambda expression", span="2753-2753", cluster="lambda expression", file="JsonConvert.cs"];
m2_1310 [label="Exit lambda expression", span="2753-2753", cluster="lambda expression", file="JsonConvert.cs"];
m2_2232 [label="var reference = new Dictionary<string, object>()", span="5017-5017", cluster="lambda expression", file="JsonConvert.cs"];
m2_2235 [label="var child = new Dictionary<string, object>()", span="5021-5021", cluster="lambda expression", file="JsonConvert.cs"];
m2_170 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonConvert.cs"];
m2_3156 [label="errors.Add(e.ErrorContext.Error.Message)", span="7114-7114", cluster="lambda expression", file="JsonConvert.cs"];
m2_3171 [label="errors.Add(e.ErrorContext.Error.Message)", span="7139-7139", cluster="lambda expression", file="JsonConvert.cs"];
m2_3186 [label="errors.Add(e.ErrorContext.Error.Message)", span="7162-7162", cluster="lambda expression", file="JsonConvert.cs"];
m2_3035 [label="Entry lambda expression", span="6878-6878", cluster="lambda expression", file="JsonConvert.cs"];
m2_3037 [label="Exit lambda expression", span="6878-6878", cluster="lambda expression", file="JsonConvert.cs"];
m2_2238 [label="child.Add(''Father'', reference)", span="5024-5024", cluster="lambda expression", file="JsonConvert.cs"];
m2_2231 [label="Entry lambda expression", span="5013-5028", cluster="lambda expression", file="JsonConvert.cs"];
m2_2926 [label="Entry lambda expression", span="6674-6682", cluster="lambda expression", file="JsonConvert.cs"];
m2_2933 [label="Entry lambda expression", span="6688-6694", cluster="lambda expression", file="JsonConvert.cs"];
m2_3713 [label="Entry lambda expression", span="8565-8569", cluster="lambda expression", file="JsonConvert.cs"];
m2_3314 [label="string json = ''[{},1]''", span="7534-7534", cluster="lambda expression", file="JsonConvert.cs"];
m2_3316 [label="serializer.CheckAdditionalContent = true", span="7537-7537", cluster="lambda expression", file="JsonConvert.cs"];
m2_3320 [label="serializer.Deserialize(reader, typeof(MyType))", span="7543-7543", cluster="lambda expression", file="JsonConvert.cs"];
m2_1416 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3006-3006", cluster="lambda expression", file="JsonConvert.cs"];
m2_1417 [label="o.ReferenceLoopHandlingErrorProperty = o", span="3007-3007", cluster="lambda expression", file="JsonConvert.cs"];
m2_1419 [label="Exit lambda expression", span="3004-3010", cluster="lambda expression", file="JsonConvert.cs"];
m2_1665 [label="Entry lambda expression", span="3539-3550", cluster="lambda expression", file="JsonConvert.cs"];
m2_1667 [label="Exit lambda expression", span="3539-3550", cluster="lambda expression", file="JsonConvert.cs"];
m2_1672 [label="Entry lambda expression", span="3556-3567", cluster="lambda expression", file="JsonConvert.cs"];
m2_1674 [label="Exit lambda expression", span="3556-3567", cluster="lambda expression", file="JsonConvert.cs"];
m2_1678 [label="Entry lambda expression", span="3573-3584", cluster="lambda expression", file="JsonConvert.cs"];
m2_1680 [label="Exit lambda expression", span="3573-3584", cluster="lambda expression", file="JsonConvert.cs"];
m2_1684 [label="Entry lambda expression", span="3590-3601", cluster="lambda expression", file="JsonConvert.cs"];
m2_1686 [label="Exit lambda expression", span="3590-3601", cluster="lambda expression", file="JsonConvert.cs"];
m2_1833 [label="Entry lambda expression", span="4002-4006", cluster="lambda expression", file="JsonConvert.cs"];
m2_1835 [label="Exit lambda expression", span="4002-4006", cluster="lambda expression", file="JsonConvert.cs"];
m2_725 [label="Exit lambda expression", span="1580-1580", cluster="lambda expression", file="JsonConvert.cs"];
m2_724 [label="p.Name", span="1580-1580", cluster="lambda expression", file="JsonConvert.cs"];
m2_728 [label="Exit lambda expression", span="1583-1583", cluster="lambda expression", file="JsonConvert.cs"];
m2_727 [label="p.Name", span="1583-1583", cluster="lambda expression", file="JsonConvert.cs"];
m2_2559 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5736-5736", cluster="lambda expression", file="JsonConvert.cs"];
m2_1655 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="3524-3524", cluster="lambda expression", file="JsonConvert.cs"];
m2_2233 [label="reference.Add(''$ref'', 1)", span="5018-5018", cluster="lambda expression", file="JsonConvert.cs"];
m2_2234 [label="reference.Add(''$id'', 1)", span="5019-5019", cluster="lambda expression", file="JsonConvert.cs"];
m2_2236 [label="child.Add(''_id'', 2)", span="5022-5022", cluster="lambda expression", file="JsonConvert.cs"];
m2_2237 [label="child.Add(''Name'', ''Isabell'')", span="5023-5023", cluster="lambda expression", file="JsonConvert.cs"];
m2_3301 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7488-7488", cluster="lambda expression", file="JsonConvert.cs"];
m2_3317 [label="var reader = new JsonTextReader(new StringReader(json))", span="7539-7539", cluster="lambda expression", file="JsonConvert.cs"];
m2_3876 [label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="8985-8989", cluster="lambda expression", file="JsonConvert.cs"];
m2_169 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonConvert.cs"];
m2_171 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonConvert.cs"];
m2_3609 [label="new IdReferenceResolver()", span="8357-8357", cluster="lambda expression", file="JsonConvert.cs"];
m2_3318 [label="reader.Read()", span="7540-7540", cluster="lambda expression", file="JsonConvert.cs"];
m2_3319 [label="reader.Read()", span="7541-7541", cluster="lambda expression", file="JsonConvert.cs"];
m2_3157 [label="e.ErrorContext.Handled = true", span="7115-7115", cluster="lambda expression", file="JsonConvert.cs"];
m2_3155 [label="Entry lambda expression", span="7112-7116", cluster="lambda expression", file="JsonConvert.cs"];
m2_3172 [label="e.ErrorContext.Handled = true", span="7140-7140", cluster="lambda expression", file="JsonConvert.cs"];
m2_3170 [label="Entry lambda expression", span="7137-7141", cluster="lambda expression", file="JsonConvert.cs"];
m2_3187 [label="e.ErrorContext.Handled = true", span="7163-7163", cluster="lambda expression", file="JsonConvert.cs"];
m2_3185 [label="Entry lambda expression", span="7160-7164", cluster="lambda expression", file="JsonConvert.cs"];
m2_3313 [label="Entry lambda expression", span="7532-7544", cluster="lambda expression", file="JsonConvert.cs"];
m2_3321 [label="Exit lambda expression", span="7532-7544", cluster="lambda expression", file="JsonConvert.cs"];
m2_1415 [label="Entry lambda expression", span="3004-3010", cluster="lambda expression", file="JsonConvert.cs"];
m2_2558 [label="Entry lambda expression", span="5736-5736", cluster="lambda expression", file="JsonConvert.cs"];
m2_2560 [label="Exit lambda expression", span="5736-5736", cluster="lambda expression", file="JsonConvert.cs"];
m2_1654 [label="Entry lambda expression", span="3524-3524", cluster="lambda expression", file="JsonConvert.cs"];
m2_1656 [label="Exit lambda expression", span="3524-3524", cluster="lambda expression", file="JsonConvert.cs"];
m2_1646 [label="Entry lambda expression", span="3516-3516", cluster="lambda expression", file="JsonConvert.cs"];
m2_3300 [label="Entry lambda expression", span="7488-7488", cluster="lambda expression", file="JsonConvert.cs"];
m2_3875 [label="Entry lambda expression", span="8983-8990", cluster="lambda expression", file="JsonConvert.cs"];
m2_3302 [label="Exit lambda expression", span="7488-7488", cluster="lambda expression", file="JsonConvert.cs"];
m2_3877 [label="Exit lambda expression", span="8983-8990", cluster="lambda expression", file="JsonConvert.cs"];
m2_3608 [label="Entry lambda expression", span="8357-8357", cluster="lambda expression", file="JsonConvert.cs"];
m2_3610 [label="Exit lambda expression", span="8357-8357", cluster="lambda expression", file="JsonConvert.cs"];
m2_1647 [label="JsonConvert.PopulateObject(json, new Person())", span="3516-3516", cluster="lambda expression", file="JsonConvert.cs"];
m2_3158 [label="Exit lambda expression", span="7112-7116", cluster="lambda expression", file="JsonConvert.cs"];
m2_3173 [label="Exit lambda expression", span="7137-7141", cluster="lambda expression", file="JsonConvert.cs"];
m2_3188 [label="Exit lambda expression", span="7160-7164", cluster="lambda expression", file="JsonConvert.cs"];
m2_1798 [label="x.Id == id", span="3909-3909", cluster="lambda expression", file="JsonConvert.cs"];
m2_1648 [label="Exit lambda expression", span="3516-3516", cluster="lambda expression", file="JsonConvert.cs"];
m2_1799 [label="Exit lambda expression", span="3909-3909", cluster="lambda expression", file="JsonConvert.cs"];
m2_193 [label="converter.CanConvertTo(typeof(string))", span="389-389", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_3366 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7657-7657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3369 [label="json = JsonConvert.SerializeObject(d)", span="7662-7662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3372 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7671-7671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3368 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7660-7660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3370 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7665-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3371 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7668-7668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3367 [label="string json", span="7659-7659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3373 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7657-7657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonConvert.cs"];
m2_3717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8573-8573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonConvert.cs"];
m2_3720 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="8579-8579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonConvert.cs"];
m2_3722 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="8583-8583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonConvert.cs"];
m2_3721 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="8581-8581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonConvert.cs"];
m2_3719 [label="Uri uriWithPlus = new Uri(originalUri)", span="8577-8577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonConvert.cs"];
m2_3718 [label="string originalUri = ''https://test.com?m=a%2bb''", span="8575-8575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonConvert.cs"];
m2_3723 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8573-8573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonConvert.cs"];
m2_3482 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8004-8004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonConvert.cs"];
m2_3483 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8006-8006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonConvert.cs"];
m2_3484 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8004-8004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonConvert.cs"];
m2_1147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2420-2420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonConvert.cs"];
m2_1149 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2424-2428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonConvert.cs"];
m2_1151 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2432-2435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonConvert.cs"];
m2_1150 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2430-2430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonConvert.cs"];
m2_1148 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonConvert.cs"];
m2_1152 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2420-2420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonConvert.cs"];
m2_51 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonConvert.cs"];
m2_1675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3571-3571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonConvert.cs"];
m2_1676 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3573-3584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonConvert.cs"];
m2_1677 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3571-3571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonConvert.cs"];
m2_553 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1188-1188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonConvert.cs"];
m2_164 [label="return true;", span="343-343", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_166 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="289-289", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_165 [label="return true;", span="347-347", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_168 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="JsonConvert.cs"];
m2_172 [label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25", cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonConvert.cs"];
m2_174 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="354-354", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_175 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="356-356", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_176 [label="writer.WriteStartObject()", span="359-359", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_173 [label="string reference = GetReference(writer, value)", span="352-352", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_177 [label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="360-360", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_1752 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3733-3733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1760 [label="Assert.AreEqual(2, searchResults.Count)", span="3808-3808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1761 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3809-3809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1762 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3810-3810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1754 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="3787-3787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1758 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="3796-3796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1756 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="3793-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1757 [label=results, span="3794-3794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1753 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3735-3785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1755 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="3790-3790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1759 [label="searchResults.Add(searchResult)", span="3797-3797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_1763 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3733-3733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonConvert.cs"];
m2_2071 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_2073 [label="Assert.AreEqual(2, kvPairs.Count)", span="4652-4652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_2074 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4653-4653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_2075 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4654-4654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_2076 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4655-4655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_2077 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4656-4656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_2072 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4648-4650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_2078 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonConvert.cs"];
m2_3346 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7591-7591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonConvert.cs"];
m2_3348 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7594-7594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonConvert.cs"];
m2_3347 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7593-7593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonConvert.cs"];
m2_3349 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7591-7591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonConvert.cs"];
m2_1300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2747-2747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonConvert.cs"];
m2_1303 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2751-2751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonConvert.cs"];
m2_1301 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2749-2749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonConvert.cs"];
m2_1302 [label="testClass.co = new Co()", span="2750-2750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonConvert.cs"];
m2_1304 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="2753-2753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonConvert.cs"];
m2_1305 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2747-2747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonConvert.cs"];
m2_614 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_620 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1305-1305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_615 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1300-1300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_617 [label="i < 800", span="1301-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_621 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="1306-1306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_622 [label="var ms = new MemoryStream()", span="1307-1307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_618 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_616 [label="var i = 0", span="1301-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_624 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_628 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1316-1316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_619 [label="i++", span="1301-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_623 [label="var streamWriter = new StreamWriter(ms)", span="1309-1309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_626 [label="ms.Seek(0, SeekOrigin.Begin)", span="1313-1313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_625 [label="streamWriter.Flush()", span="1311-1311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_627 [label="var stopWatch = Stopwatch.StartNew()", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_629 [label="stopWatch.Stop()", span="1317-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonConvert.cs"];
m2_1920 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonConvert.cs"];
m2_3676 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8498-8498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3677 [label="return (short)Value;", span="8500-8500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3678 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8498-8498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1866 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4158-4158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonConvert.cs"];
m2_1869 [label="C1 = c1", span="4160-4160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonConvert.cs"];
m2_1870 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4158-4158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonConvert.cs"];
m2_557 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="752-752", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonConvert.cs"];
m2_3026 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6864-6864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonConvert.cs"];
m2_3027 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6866-6871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonConvert.cs"];
m2_3028 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6864-6864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonConvert.cs"];
m2_1738 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3698-3698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1739 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3700-3700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1740 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3701-3701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1741 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3702-3702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1742 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3704-3704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1743 [label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3706-3709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3698-3698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1729 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonConvert.cs"];
m2_474 [label="Entry System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", span="141-141", cluster="System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", file="JsonConvert.cs"];
m2_2025 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonConvert.cs"];
m2_275 [label="return false;", span="543-543", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_278 [label="memberValue == null", span="551-551", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", color=green, community=0, file="JsonConvert.cs"];
m2_277 [label="return false;", span="548-548", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_279 [label="JsonObjectContract objectContract = contract as JsonObjectContract", span="553-553", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_276 [label="!CheckForCircularReference(writer, memberValue, property, memberContract, contract, member)", span="546-546", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs", color=red, community=0];
m2_280 [label="Required resolvedRequired = property._required ?? ((objectContract != null) ? objectContract.ItemRequired : null) ?? Required.Default", span="554-554", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_1050 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonConvert.cs"];
m2_1051 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2253-2253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonConvert.cs"];
m2_1052 [label="Assert.AreEqual(@''1'', json)", span="2254-2254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonConvert.cs"];
m2_1054 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2257-2257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonConvert.cs"];
m2_1053 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2256-2256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonConvert.cs"];
m2_1055 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonConvert.cs"];
m2_2988 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6809-6809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2989 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6811-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2991 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="6814-6814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2993 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="6817-6817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2995 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6820-6820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2997 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6823-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2999 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6826-6826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_3001 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6829-6829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2990 [label="Assert.IsNull(v)", span="6812-6812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2992 [label="Assert.IsNull(v)", span="6815-6815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2994 [label="Assert.IsNull(v)", span="6818-6818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2996 [label="Assert.IsNull(v)", span="6821-6821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_2998 [label="Assert.IsNull(v)", span="6824-6824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_3000 [label="Assert.IsNull(v)", span="6827-6827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_3002 [label="Assert.IsNull(v)", span="6830-6830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_3003 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6809-6809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonConvert.cs"];
m2_1704 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonConvert.cs"];
m2_318 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_319 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_320 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_3527 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8121-8121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3529 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8131-8131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3528 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8123-8129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3530 [label="Assert.IsNull(c2.MyNullableBool)", span="8132-8132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3531 [label="Assert.IsNull(c2.MyNullableInteger)", span="8133-8133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3532 [label="Assert.IsNull(c2.MyNullableDateTime)", span="8134-8134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3533 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8135-8135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3534 [label="Assert.IsNull(c2.MyNullableDecimal)", span="8136-8136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_3535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8121-8121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonConvert.cs"];
m2_2909 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6650-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2911 [label="string json = JsonConvert.SerializeObject(widget)", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2912 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6656-6656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2910 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6652-6652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6650-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_1018 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2206-2206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_1023 [label="string json = JsonConvert.SerializeObject(s)", span="2213-2213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_1024 [label="Assert.AreEqual(''[3,2,1]'', json)", span="2214-2214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_1019 [label="Stack<object> s = new Stack<object>()", span="2208-2208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_1022 [label="s.Push(3)", span="2211-2211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_1020 [label="s.Push(1)", span="2209-2209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_1021 [label="s.Push(2)", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_1025 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2206-2206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonConvert.cs"];
m2_893 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_902 [label="Assert.AreEqual(expected, result)", span="1976-1976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_901 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1975-1975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_900 [label="string expected = sr.ReadToEnd()", span="1973-1973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_894 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="1957-1965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_899 [label="StreamReader sr = new StreamReader(ms)", span="1971-1971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_895 [label="MemoryStream ms = new MemoryStream()", span="1967-1967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_897 [label="s.WriteObject(ms, testDates)", span="1969-1969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_898 [label="ms.Seek(0, SeekOrigin.Begin)", span="1970-1970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_896 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="1968-1968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_903 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonConvert.cs"];
m2_1244 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonConvert.cs"];
m2_1452 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3123-3123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonConvert.cs"];
m2_1453 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3125-3125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonConvert.cs"];
m2_1454 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3123-3123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonConvert.cs"];
m2_555 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1180-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonConvert.cs"];
m2_2794 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2807 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6425-6425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2806 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6423-6423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2808 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6426-6426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2796 [label="JsonSerializer serializer = new JsonSerializer()", span="6406-6406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2805 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6420-6420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2795 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6404-6404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2797 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6407-6407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2801 [label="serializer.Serialize(bsonWriter, test)", span="6413-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2799 [label="MemoryStream bsonStream = new MemoryStream()", span="6410-6410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2804 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2803 [label="objectBytes = bsonStream.ToArray()", span="6416-6416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2800 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6411-6411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2798 [label="byte[] objectBytes", span="6409-6409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2802 [label="bsonWriter.Flush()", span="6414-6414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_2809 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonConvert.cs"];
m2_872 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonConvert.cs"];
m2_1307 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonConvert.cs"];
m2_2158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="4847-4847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonConvert.cs"];
m2_1909 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4296-4296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_1910 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4298-4298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_1911 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4296-4296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonConvert.cs"];
m2_814 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1756-1756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonConvert.cs"];
m2_815 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="1758-1758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonConvert.cs"];
m2_817 [label="Assert.AreEqual(c.Field, ''Field'')", span="1762-1762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonConvert.cs"];
m2_816 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonConvert.cs"];
m2_818 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1756-1756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonConvert.cs"];
m2_1814 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="3883-3883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonConvert.cs"];
m2_78 [label="JsonContractType.Dynamic", span="196-196", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_82 [label="JsonContractType.Linq", span="205-205", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_83 [label="((JToken)value).WriteTo(writer, Serializer.Converters.ToArray())", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_86 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1103-1103", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonConvert.cs"];
m2_85 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonConvert.cs"];
m2_79 [label="SerializeDynamic(writer, (IDynamicMetaObjectProvider)value, (JsonDynamicContract)valueContract, member, containerContract, containerProperty)", span="197-197", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_81 [label="SerializeISerializable(writer, (ISerializable)value, (JsonISerializableContract)valueContract, member, containerContract, containerProperty)", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_84 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="147-147", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_80 [label="JsonContractType.Serializable", span="201-201", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_87 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="631-631", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3143 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7107-7107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3149 [label="Assert.AreEqual(4, errors.Count)", span="7124-7124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3150 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7125-7125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3151 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7126-7126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3152 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7127-7127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3153 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7128-7128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3145 [label="IList<string> errors = new List<string>()", span="7110-7110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3148 [label="Assert.IsNotNull(o)", span="7123-7123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3147 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7118-7121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3144 [label="string json = ''{}''", span="7109-7109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3146 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7112-7116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3154 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7107-7107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonConvert.cs"];
m2_3633 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="119-119", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonConvert.cs"];
m2_2832 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6476-6476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2840 [label="Assert.AreEqual(-1, c2.x)", span="6507-6507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2841 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6508-6508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2842 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6509-6509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2839 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6497-6505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2837 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6486-6489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2833 [label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6478-6478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2838 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6491-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2834 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6480-6483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2836 [label="StaticTestClass.z = 3", span="6485-6485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2835 [label="StaticTestClass.y = 2", span="6484-6484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_2843 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6476-6476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonConvert.cs"];
m2_3870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="8929-8929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonConvert.cs"];
m2_2980 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonConvert.cs"];
m2_3092 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonConvert.cs"];
m2_3708 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="8544-8544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonConvert.cs"];
m2_1201 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="792-792", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonConvert.cs"];
m2_1325 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonConvert.cs"];
m2_211 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="426-426", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonConvert.cs"];
m2_1119 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1123 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2375-2375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1125 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2382-2382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1126 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2383-2383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1122 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2371-2374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1124 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2377-2380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1121 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1120 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2368-2368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_1127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonConvert.cs"];
m2_671 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonConvert.cs"];
m2_3510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8067-8067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3513 [label="Assert.AreEqual(float.NaN, floats[0])", span="8076-8076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3514 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8077-8077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3515 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8078-8078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3517 [label="Assert.AreEqual(float.NaN, doubles[0])", span="8081-8081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3518 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8082-8082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3519 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8083-8083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3512 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8075-8075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3516 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8080-8080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3511 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8069-8073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_3520 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8067-8067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonConvert.cs"];
m2_1935 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4334-4334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonConvert.cs"];
m2_1936 [label="return _innerDictionary.Remove(key);", span="4336-4336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonConvert.cs"];
m2_1937 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4334-4334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonConvert.cs"];
m2_273 [label="property.WritePropertyName(writer)", span="541-541", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_2542 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5706-5706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonConvert.cs"];
m2_2545 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5712-5714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonConvert.cs"];
m2_2544 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5710-5710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonConvert.cs"];
m2_2543 [label="ComplexItem i = new ComplexItem()", span="5708-5708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonConvert.cs"];
m2_2546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5706-5706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonConvert.cs"];
m2_1600 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonConvert.cs"];
m2_1601 [label="string json = @''[]''", span="3442-3442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonConvert.cs"];
m2_1602 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3444-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonConvert.cs"];
m2_1603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonConvert.cs"];
m2_3058 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6927-6927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3060 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6937-6937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3061 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6938-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3062 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6939-6939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3063 [label="Assert.AreEqual(''Post'', c.PostField)", span="6940-6940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3065 [label="Assert.AreEqual(null, c2.DateTimeField)", span="6946-6946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3066 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6947-6947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3067 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6948-6948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3068 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6949-6949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3064 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6942-6944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3059 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6929-6935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_3069 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6927-6927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonConvert.cs"];
m2_638 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="JsonConvert.cs"];
m2_178 [label="writer.WriteValue(reference)", span="361-361", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_180 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="350-350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_179 [label="writer.WriteEndObject()", span="362-362", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="JsonConvert.cs"];
m2_183 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonConvert.cs"];
m2_827 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonConvert.cs"];
m2_1887 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4195-4195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonConvert.cs"];
m2_3845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8890-8890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonConvert.cs"];
m2_3846 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="8892-8892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonConvert.cs"];
m2_3847 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8890-8890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonConvert.cs"];
m2_163 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, message + ''. Serializing self referenced value.''), null)", span="340-340", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2955 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonConvert.cs"];
m2_1099 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1102 [label="string json = JsonConvert.SerializeObject(m1)", span="2338-2338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1105 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2343-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1106 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2344-2344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1103 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1104 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2341-2341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1101 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2336-2336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1100 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_1107 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonConvert.cs"];
m2_3700 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8538-8538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3701 [label="throw new InvalidCastException();", span="8540-8540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3702 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8538-8538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1913 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4301-4301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonConvert.cs"];
m2_1914 [label="return _innerDictionary.ContainsKey(key);", span="4303-4303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonConvert.cs"];
m2_1915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4301-4301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonConvert.cs"];
m2_483 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", span="970-970", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteDynamicProperty(object)", file="JsonConvert.cs"];
m2_2900 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6610-6610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonConvert.cs"];
m2_136 [label="Assert.AreEqual(1, c2.FaqId)", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_3106 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonConvert.cs"];
m2_2901 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1559-1559", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonConvert.cs"];
m2_1579 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3408-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonConvert.cs"];
m2_1580 [label="string json = @''[]''", span="3410-3410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonConvert.cs"];
m2_1581 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3412-3414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonConvert.cs"];
m2_1582 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3408-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonConvert.cs"];
m2_3159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7132-7132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3165 [label="Assert.AreEqual(3, errors.Count)", span="7149-7149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3166 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7150-7150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3167 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7151-7151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3168 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7152-7152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3161 [label="IList<string> errors = new List<string>()", span="7135-7135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3164 [label="Assert.IsNotNull(o)", span="7148-7148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3163 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7143-7146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3160 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7134-7134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3162 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7137-7141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_3169 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7132-7132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonConvert.cs"];
m2_195 [label="return true;", span="392-392", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_196 [label="value is Type", span="405-405", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", color=green, community=0, file="JsonConvert.cs"];
m2_197 [label="s = ((Type)value).AssemblyQualifiedName", span="407-407", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_198 [label="return true;", span="408-408", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_199 [label="s = null", span="411-411", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_2340 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonConvert.cs"];
m2_905 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonConvert.cs"];
m2_503 [label="OnSerializing(writer, contract, underlyingDictionary)", span="1035-1035", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7332-7332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonConvert.cs"];
m2_3246 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7337-7337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonConvert.cs"];
m2_3247 [label="Assert.AreEqual(0, objDeserialized.Age)", span="7338-7338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonConvert.cs"];
m2_3244 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7334-7334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonConvert.cs"];
m2_3245 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7335-7335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonConvert.cs"];
m2_3248 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7332-7332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonConvert.cs"];
m2_1778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3846-3846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonConvert.cs"];
m2_1779 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="3848-3851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonConvert.cs"];
m2_1780 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="3852-3855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonConvert.cs"];
m2_1781 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3846-3846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonConvert.cs"];
m2_1567 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonConvert.cs"];
m2_2532 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5681-5681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2537 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5700-5700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2538 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5701-5701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2539 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5702-5702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2536 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5698-5698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2534 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5688-5688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2535 [label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5690-5696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2533 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5683-5686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2540 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5681-5681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonConvert.cs"];
m2_2916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2919 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6666-6666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2920 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6667-6667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2921 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6668-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2918 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6664-6664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2917 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6662-6662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonConvert.cs"];
m2_2887 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonConvert.cs"];
m2_2779 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonConvert.cs"];
m2_1110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1116 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2361-2361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1117 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1114 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1115 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1111 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2350-2350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1113 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2353-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1112 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2351-2351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_1118 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonConvert.cs"];
m2_2981 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6797-6797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonConvert.cs"];
m2_2986 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6805-6805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonConvert.cs"];
m2_2983 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6800-6800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonConvert.cs"];
m2_2985 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6803-6803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonConvert.cs"];
m2_2982 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6799-6799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonConvert.cs"];
m2_2984 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonConvert.cs"];
m2_2987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6797-6797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonConvert.cs"];
m2_2281 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5098-5098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonConvert.cs"];
m2_720 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonConvert.cs"];
m2_672 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_709 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_711 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1589-1589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_707 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_713 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1592-1592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_708 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1580-1580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_710 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1583-1583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_712 [label=dataContractJson, span="1590-1590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_706 [label="var data = ms.ToArray()", span="1578-1578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_703 [label="MemoryStream ms = new MemoryStream()", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_704 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_705 [label="s.WriteObject(ms, o)", span="1576-1576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_714 [label="return jsonNetJson.ToString();", span="1595-1595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_715 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonConvert.cs"];
m2_3781 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8722-8722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3788 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8743-8743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3782 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8724-8724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3787 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8741-8741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3784 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8726-8730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3785 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8732-8735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3783 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8725-8725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3786 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8737-8739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_3789 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8722-8722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonConvert.cs"];
m2_0 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_1 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", span="54-54", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.JsonSerializerInternalWriter(Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3174 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7156-7156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3179 [label="Assert.AreEqual(3, errors.Count)", span="7177-7177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3180 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7178-7178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3181 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7179-7179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3182 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7180-7180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3175 [label="IList<string> errors = new List<string>()", span="7158-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3178 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7172-7175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3177 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7166-7170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3176 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7160-7164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_3183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7156-7156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonConvert.cs"];
m2_962 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2091-2091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_965 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2095-2095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_966 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2097-2097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_967 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_968 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_969 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2100-2100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_970 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2101-2101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_964 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2094-2094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_963 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2093-2093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_971 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2091-2091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonConvert.cs"];
m2_2326 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonConvert.cs"];
m2_126 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="56-56", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", file="JsonConvert.cs"];
m2_65 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs"];
m2_64 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonConvert.cs"];
m2_1173 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonConvert.cs"];
m2_643 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonConvert.cs"];
m2_3412 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonConvert.cs"];
m2_2023 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonConvert.cs"];
m2_200 [label="return false;", span="412-412", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_13 [label="HandleError(jsonWriter, 0)", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_1985 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonConvert.cs"];
m2_918 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_922 [label="string json = JsonConvert.SerializeObject(values)", span="2017-2017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_925 [label="CollectionAssert.AreEqual(values, newValues)", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_923 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2019-2019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_924 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2021-2021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_919 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_921 [label="values.Add(int.MinValue, int.MaxValue)", span="2015-2015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_920 [label="values.Add(-5, 6)", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_926 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonConvert.cs"];
m2_2311 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonConvert.cs"];
m2_3278 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7420-7420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonConvert.cs"];
m2_3611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8373-8373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3615 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8389-8389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3617 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8392-8392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3623 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="8407-8407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3629 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="8422-8422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3614 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8388-8388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3616 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8391-8391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3618 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="8398-8398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3622 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="8406-8406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3624 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="8413-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3628 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="8421-8421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3613 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8378-8382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3612 [label="var consoleWriter = new ConsoleWriter()", span="8375-8375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3619 [label="dict2.Add(consoleWriter, ''Console'')", span="8399-8399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3620 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8401-8401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3621 [label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8402-8404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3625 [label="dict3.Add(''Console'', consoleWriter)", span="8414-8414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3626 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="8416-8416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3627 [label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="8417-8419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_3630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8373-8373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonConvert.cs"];
m2_1764 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3814-3814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1775 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3838-3838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1774 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3837-3837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1766 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3817-3817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1772 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3825-3825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1773 [label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="3826-3835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1767 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1770 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3822-3822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1765 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3816-3816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1768 [label="wagePerson.Department = ''McDees''", span="3820-3820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1769 [label="wagePerson.HourlyWage = 12.50m", span="3821-3821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1771 [label="wagePerson.Name = ''Jim Bob''", span="3823-3823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_1776 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3814-3814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonConvert.cs"];
m2_554 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1189-1189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonConvert.cs"];
m2_1339 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2455-2455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonConvert.cs"];
m2_1167 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2457-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonConvert.cs"];
m2_1168 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2455-2455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonConvert.cs"];
m2_1829 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3998-3998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonConvert.cs"];
m2_1830 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4000-4000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonConvert.cs"];
m2_1831 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4002-4006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonConvert.cs"];
m2_1832 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3998-3998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonConvert.cs"];
m2_834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_837 [label="Assert.AreEqual(4, o.Children().Count())", span="1879-1879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_840 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="1883-1883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_836 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="1878-1878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_838 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_839 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_835 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="1867-1876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_841 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonConvert.cs"];
m2_3424 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs"];
m2_321 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_322 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", color=red, community=0, file="JsonConvert.cs"];
m2_323 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_325 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="824-824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_327 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="827-827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", color=red, community=0, file="JsonConvert.cs"];
m2_328 [label="serializer.ReferenceResolver = referenceResolver", span="828-828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_330 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="831-831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_324 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_326 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="825-825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_329 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_331 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="832-832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_332 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs", color=green, community=0];
m2_293 [label="serializer.ContractResolver = resolver", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", color=red, community=0, file="JsonConvert.cs"];
m2_294 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_295 [label="serializer.Converters.Add(new StringEnumConverter())", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_296 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_297 [label="serializer.Culture = new CultureInfo(''en-nz'')", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_298 [label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="783-783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_299 [label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonConvert.cs"];
m2_1938 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonConvert.cs"];
m2_2516 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9112-9112", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonConvert.cs"];
m2_3933 [label="Value = val", span="9114-9114", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonConvert.cs"];
m2_3934 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9112-9112", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonConvert.cs"];
m2_1382 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2934-2934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1386 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2944-2944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1389 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2955-2955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1385 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2939-2942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1387 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2946-2949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1388 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2951-2954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1383 [label="SubKlass i = new SubKlass(''my subprop'')", span="2936-2936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1384 [label="i.SuperProp = ''overrided superprop''", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_1390 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2934-2934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonConvert.cs"];
m2_3374 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7677-7677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonConvert.cs"];
m2_3378 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7688-7688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonConvert.cs"];
m2_3376 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7683-7683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonConvert.cs"];
m2_3377 [label="BigInteger nineQuindecillion = l[0]", span="7685-7685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonConvert.cs"];
m2_3375 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7679-7681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonConvert.cs"];
m2_3379 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7677-7677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonConvert.cs"];
m2_1989 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonConvert.cs"];
m2_3038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6886-6886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonConvert.cs"];
m2_3041 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6892-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonConvert.cs"];
m2_3040 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6891-6891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonConvert.cs"];
m2_3039 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6888-6889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonConvert.cs"];
m2_3042 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6886-6886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonConvert.cs"];
m2_3184 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonConvert.cs"];
m2_281 [label="resolvedRequired == Required.Always", span="555-555", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_305 [label="writer.WriteValue(reference)", span="600-600", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", color=green, community=0, file="JsonConvert.cs"];
m2_282 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="557-557", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_304 [label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName, false)", span="599-599", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonConvert.cs"];
m2_306 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="590-590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonConvert.cs"];
m2_333 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_285 [label="return true;", span="565-565", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_287 [label="memberValue = null", span="570-570", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_289 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="525-525", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_291 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="1178-1178", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonConvert.cs"];
m2_300 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", span="590-590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonConvert.cs"];
m2_302 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="594-594", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonConvert.cs"];
m2_283 [label="resolvedRequired == Required.DisallowNull", span="559-559", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_284 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, ''Cannot write a null value for property '{0}'. Property requires a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName), null);", span="561-561", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_286 [label="memberContract = null", span="569-569", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_288 [label="return false;", span="571-571", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_301 [label="string reference = GetReference(writer, value)", span="592-592", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonConvert.cs"];
m2_303 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, type)), null)", span="596-596", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReferenceIdProperty(Newtonsoft.Json.JsonWriter, System.Type, object)", file="JsonConvert.cs"];
m2_2500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5630-5630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonConvert.cs"];
m2_2504 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5642-5642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonConvert.cs"];
m2_2505 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonConvert.cs"];
m2_2503 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5640-5640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonConvert.cs"];
m2_2501 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="5632-5636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonConvert.cs"];
m2_2502 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5638-5638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonConvert.cs"];
m2_2506 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5630-5630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonConvert.cs"];
m2_502 [label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="1033-1033", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2547 [label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="9215-9215", cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonConvert.cs"];
m2_2473 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2474 [label="_name = info.GetString(''Name'')", span="5549-5549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_2475 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1745 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3713-3713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1750 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="3728-3728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1747 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3723-3723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1749 [label=JsonSerializationException, span="3726-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1746 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3717-3721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1748 [label="Assert.Fail()", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_1751 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3713-3713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonConvert.cs"];
m2_3437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonConvert.cs"];
m2_3439 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="7897-7900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonConvert.cs"];
m2_3438 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7891-7895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonConvert.cs"];
m2_3440 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7902-7905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonConvert.cs"];
m2_3441 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonConvert.cs"];
m2_2521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonConvert.cs"];
m2_2523 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5667-5667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonConvert.cs"];
m2_2524 [label="Assert.AreEqual(''value!'', c.Value)", span="5668-5668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonConvert.cs"];
m2_2522 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5666-5666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonConvert.cs"];
m2_2525 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonConvert.cs"];
m2_3670 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8488-8488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3671 [label="throw new InvalidCastException();", span="8490-8490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8488-8488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3852 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8896-8896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonConvert.cs"];
m2_3853 [label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="8898-8898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonConvert.cs"];
m2_3854 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8896-8896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonConvert.cs"];
m2_862 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1911-1911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_868 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1921-1921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_867 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_866 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_865 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_863 [label="string json = @''[''''PRE\u003cPOST'''']''", span="1913-1913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_864 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1915-1915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_869 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1911-1911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonConvert.cs"];
m2_957 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonConvert.cs"];
m2_1991 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonConvert.cs"];
m2_2624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5981-5981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonConvert.cs"];
m2_2625 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="5983-5987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonConvert.cs"];
m2_2627 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5991-5994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonConvert.cs"];
m2_2626 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5989-5989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonConvert.cs"];
m2_2628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5981-5981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonConvert.cs"];
m2_2819 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6439-6439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2827 [label="Assert.AreEqual(-1, c2.x)", span="6470-6470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2828 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6471-6471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2829 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6472-6472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2826 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6460-6468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2824 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6449-6452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2820 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6441-6441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2825 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6454-6458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2821 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6443-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2823 [label="StaticTestClass.z = 3", span="6448-6448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2822 [label="StaticTestClass.y = 2", span="6447-6447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_2830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6439-6439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonConvert.cs"];
m2_656 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonConvert.cs"];
m2_658 [label="string result = JsonConvert.SerializeObject(cc)", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonConvert.cs"];
m2_659 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonConvert.cs"];
m2_657 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1369-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonConvert.cs"];
m2_660 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonConvert.cs"];
m2_765 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_769 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_777 [label="Assert.AreEqual(dateValue, deserializedDate)", span="1697-1697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_767 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1680-1680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_768 [label="testDictionary[''date''] = dateValue", span="1681-1681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_770 [label="MemoryStream ms = new MemoryStream()", span="1686-1686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_775 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1694-1694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_766 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1679-1679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_776 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_772 [label="serializer.WriteObject(ms, testDictionary)", span="1688-1688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_771 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1687-1687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_773 [label="byte[] data = ms.ToArray()", span="1690-1690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_774 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1691-1691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_778 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonConvert.cs"];
m2_1924 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonConvert.cs"];
m2_794 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="307-307", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonConvert.cs"];
m2_793 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonConvert.cs"];
m2_1943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonConvert.cs"];
m2_1944 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4346-4346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonConvert.cs"];
m2_1945 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonConvert.cs"];
m2_3820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8825-8825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_3825 [label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="8834-8834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_3826 [label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="8835-8835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_3824 [label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="8832-8832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_3822 [label="var serializerSettings = new JsonSerializerSettings()", span="8829-8829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_3823 [label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="8830-8830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_3821 [label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="8827-8827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_3827 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8825-8825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonConvert.cs"];
m2_517 [label="ShouldWriteReference(value, null, valueContract, contract, member)", span="1066-1066", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_1470 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3168-3168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1473 [label="Assert.AreEqual(''Name!'', c.Name)", span="3192-3192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1474 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="3193-3193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1475 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1476 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3195-3195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1477 [label="Assert.AreEqual(4, c.Collection.Count)", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1478 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1479 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3198-3198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1480 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3199-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1481 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3200-3200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1472 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3189-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1482 [label="Assert.IsNotNull(c.Random)", span="3201-3201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1471 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3170-3187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3168-3168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonConvert.cs"];
m2_1186 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2484-2484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonConvert.cs"];
m2_1189 [label="json = JsonConvert.SerializeObject(personRaw)", span="2495-2495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonConvert.cs"];
m2_1190 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonConvert.cs"];
m2_1187 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2486-2491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonConvert.cs"];
m2_1188 [label="string json", span="2493-2493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonConvert.cs"];
m2_1191 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2484-2484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonConvert.cs"];
m2_885 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonConvert.cs"];
m2_2015 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonConvert.cs"];
m2_693 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1546-1546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_699 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_694 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1548-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_698 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1559-1559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_700 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1563-1569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_695 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_696 [label="baseWith.Virtual = ''Virtual2!''", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_697 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1558-1558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_701 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1546-1546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_1917 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4306-4306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonConvert.cs"];
m2_1918 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4308-4308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonConvert.cs"];
m2_1919 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4306-4306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonConvert.cs"];
m2_3896 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonConvert.cs"];
m2_1402 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonConvert.cs"];
m2_3279 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7436-7436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3282 [label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7453-7456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3285 [label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7467-7470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3281 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7452-7452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3284 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7466-7466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3283 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7458-7464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3280 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7438-7444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3286 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7436-7436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonConvert.cs"];
m2_3921 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9070-9070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3922 [label="var encodingName = serializer.Deserialize<string>(reader)", span="9072-9072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3923 [label="encodingName == null", span="9073-9073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3925 [label="return Encoding.GetEncoding(encodingName);", span="9076-9076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3924 [label="return null;", span="9074-9074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3926 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9070-9070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_683 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1516-1516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_689 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1531-1531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_684 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1518-1524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_688 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1529-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_690 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1533-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_685 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_686 [label="baseWith.Virtual = ''Virtual2!''", span="1527-1527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_687 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_691 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1516-1516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonConvert.cs"];
m2_576 [label="Assert.AreEqual(expectedJson, json)", span="1246-1246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonConvert.cs"];
m2_580 [label="var json = @''{''''foo'''':''''value''''}''", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonConvert.cs"];
m2_577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonConvert.cs"];
m2_579 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1250-1250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonConvert.cs"];
m2_581 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonConvert.cs"];
m2_582 [label="Assert.AreEqual(''value'', deserialized.foo)", span="1254-1254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonConvert.cs"];
m2_2365 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonConvert.cs"];
m2_2367 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5313-5313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonConvert.cs"];
m2_2366 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5312-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonConvert.cs"];
m2_2368 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonConvert.cs"];
m2_2571 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5784-5784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonConvert.cs"];
m2_2574 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5799-5799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonConvert.cs"];
m2_2575 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5800-5800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonConvert.cs"];
m2_2576 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5801-5801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonConvert.cs"];
m2_2573 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5797-5797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonConvert.cs"];
m2_2572 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5786-5795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonConvert.cs"];
m2_2577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5784-5784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonConvert.cs"];
m2_2776 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonConvert.cs"];
m2_1547 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3359-3359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonConvert.cs"];
m2_1550 [label="Assert.AreEqual(null, c.DateTimeField)", span="3364-3364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonConvert.cs"];
m2_1549 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3363-3363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonConvert.cs"];
m2_1548 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="3361-3361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonConvert.cs"];
m2_1551 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3359-3359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonConvert.cs"];
m2_501 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_505 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1087-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_506 [label="_serializationInfo == null", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_507 [label="return;", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_508 [label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1092-1092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_509 [label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_510 [label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1094-1094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_511 [label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1095-1095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_513 [label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_514 [label="_serializationInfo = null", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_512 [label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1096-1096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", color=red, community=0, file="JsonConvert.cs"];
m2_515 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1087-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_906 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonConvert.cs"];
m2_908 [label="string result = JsonConvert.SerializeObject(testDates)", span="1990-1990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonConvert.cs"];
m2_909 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="1991-1991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonConvert.cs"];
m2_907 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1982-1988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonConvert.cs"];
m2_910 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonConvert.cs"];
m2_12 [label="IsErrorHandled(null, contract, null, null, jsonWriter.Path, ex)", span="84-84", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_3010 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonConvert.cs"];
m2_3011 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="6847-6847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonConvert.cs"];
m2_3012 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonConvert.cs"];
m2_3255 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7362-7362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonConvert.cs"];
m2_3263 [label="var serializer = new JsonSerializer()", span="7366-7366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonConvert.cs"];
m2_3262 [label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7365-7365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonConvert.cs"];
m2_3264 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7367-7370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonConvert.cs"];
m2_3265 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7372-7372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonConvert.cs"];
m2_3266 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7362-7362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonConvert.cs"];
m2_16 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_2962 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2963 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="6759-6763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2967 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="6771-6775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2964 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2966 [label="Assert.AreEqual(null, e.NullableEnum)", span="6769-6769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2968 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6777-6777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2970 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6781-6781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2965 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6767-6767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2969 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6779-6779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_2971 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonConvert.cs"];
m2_913 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1995-1995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonConvert.cs"];
m2_916 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2006-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonConvert.cs"];
m2_915 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2005-2005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonConvert.cs"];
m2_914 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1997-2003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonConvert.cs"];
m2_917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1995-1995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonConvert.cs"];
m2_3635 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8427-8427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonConvert.cs"];
m2_3638 [label="string json = JsonConvert.SerializeObject(product)", span="8431-8431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonConvert.cs"];
m2_3639 [label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="8433-8433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonConvert.cs"];
m2_3640 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="8434-8434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonConvert.cs"];
m2_3636 [label="ParticipantEntity product = new ParticipantEntity()", span="8429-8429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonConvert.cs"];
m2_3637 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="8430-8430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonConvert.cs"];
m2_3641 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8427-8427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonConvert.cs"];
m2_2814 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonConvert.cs"];
m2_2121 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonConvert.cs"];
m2_598 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonConvert.cs"];
m2_1028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonConvert.cs"];
m2_1030 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2222-2222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonConvert.cs"];
m2_1029 [label="var obj = new { Formatting = ''test'' }", span="2220-2220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonConvert.cs"];
m2_1031 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2223-2223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonConvert.cs"];
m2_1032 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2225-2225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonConvert.cs"];
m2_1033 [label="Assert.AreNotEqual(indented, none)", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonConvert.cs"];
m2_1034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonConvert.cs"];
m2_3140 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonConvert.cs"];
m2_3552 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8171-8171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonConvert.cs"];
m2_3553 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8173-8180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonConvert.cs"];
m2_3554 [label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8182-8189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonConvert.cs"];
m2_3555 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8171-8171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonConvert.cs"];
m2_140 [label="return true;", span="293-293", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_854 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonConvert.cs"];
m2_2930 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6686-6686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonConvert.cs"];
m2_2931 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="6688-6694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonConvert.cs"];
m2_2932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6686-6686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonConvert.cs"];
m2_2555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonConvert.cs"];
m2_2556 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="5736-5736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonConvert.cs"];
m2_2557 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonConvert.cs"];
m2_1947 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1950 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4356-4356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1951 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4358-4358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1953 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4361-4361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1954 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4362-4362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1952 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4360-4360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1948 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4353-4353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1949 [label="modelStateDictionary.Add(''key'', ''value'')", span="4354-4354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_1955 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonConvert.cs"];
m2_3828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8840-8840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonConvert.cs"];
m2_3829 [label="DerivedProperty = derivedProperty", span="8843-8843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonConvert.cs"];
m2_3830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8840-8840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonConvert.cs"];
m2_2120 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="473-473", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonConvert.cs"];
m2_3142 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonConvert.cs"];
m2_2602 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_2608 [label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="5911-5911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_2607 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5909-5909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_2606 [label="serializer.WriteObject(ms, cc)", span="5907-5907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_2605 [label="MemoryStream ms = new MemoryStream()", span="5906-5906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_2603 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5898-5902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_2604 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5904-5904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_2609 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonConvert.cs"];
m2_1064 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2260-2260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonConvert.cs"];
m2_2611 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonConvert.cs"];
m2_2612 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5938-5938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonConvert.cs"];
m2_2614 [label="string result = JsonConvert.SerializeObject(cc)", span="5946-5946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonConvert.cs"];
m2_2615 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5947-5947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonConvert.cs"];
m2_2613 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5940-5944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonConvert.cs"];
m2_2616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5938-5938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonConvert.cs"];
m2_1063 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonConvert.cs"];
m2_3743 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8626-8626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3751 [label="Assert.AreEqual(dt, dt1)", span="8644-8644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3756 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8655-8655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3749 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="8640-8640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3754 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8653-8653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3755 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8654-8654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3759 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8664-8664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3760 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8665-8665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3761 [label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="8666-8666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3745 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8630-8630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3750 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8642-8642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3752 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8646-8650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3753 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8651-8651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3757 [label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8657-8661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3748 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8638-8638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3758 [label="v = (JValue)JToken.ReadFrom(reader)", span="8662-8662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3747 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8632-8636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3744 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="8628-8628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3746 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8631-8631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3762 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8626-8626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonConvert.cs"];
m2_3871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8941-8941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonConvert.cs"];
m2_3873 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 15.'')", span="8983-8991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonConvert.cs"];
m2_3872 [label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="8943-8981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonConvert.cs"];
m2_3874 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8941-8941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonConvert.cs"];
m2_1687 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3605-3605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1692 [label="string json = JsonConvert.SerializeObject(strings)", span="3613-3613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1693 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3614-3614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1688 [label="List<String> strings = new List<String>()", span="3607-3607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1691 [label="strings.Add(''str_3'')", span="3611-3611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1689 [label="strings.Add(''str_1'')", span="3609-3609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1690 [label="strings.Add(''str_2'')", span="3610-3610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1694 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3605-3605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonConvert.cs"];
m2_1696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3618-3618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_1701 [label="Assert.AreEqual(''String!'', c2.A)", span="3628-3628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_1702 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="3629-3629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_1700 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_1698 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_1699 [label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3622-3625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_1697 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3620-3620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_1703 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3618-3618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonConvert.cs"];
m2_2973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6785-6785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonConvert.cs"];
m2_2974 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6787-6787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonConvert.cs"];
m2_2975 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6789-6789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonConvert.cs"];
m2_2977 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6793-6793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonConvert.cs"];
m2_2976 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6791-6791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonConvert.cs"];
m2_2978 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6785-6785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonConvert.cs"];
m2_3189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7184-7184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3193 [label="Assert.AreEqual(2, c2.Data.Count)", span="7200-7200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3194 [label="Assert.AreEqual(''one'', c2.Data[0])", span="7201-7201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3195 [label="Assert.AreEqual(''two'', c2.Data[1])", span="7202-7202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3191 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7197-7197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3192 [label="Assert.IsNotNull(c2)", span="7199-7199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3190 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7186-7195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3196 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7184-7184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_190 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="379-379", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="JsonConvert.cs"];
m2_154 [label="referenceLoopHandling.GetValueOrDefault(Serializer._referenceLoopHandling)", span="326-326", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_3043 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3045 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6907-6907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3046 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3047 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6909-6909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3048 [label="Assert.AreEqual(''Post'', c.PostField)", span="6910-6910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3050 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6920-6920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3051 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6921-6921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3052 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6922-6922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3053 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6923-6923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3044 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6899-6905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3049 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6912-6918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_3054 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonConvert.cs"];
m2_2363 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonConvert.cs"];
m2_1065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonConvert.cs"];
m2_1066 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2282-2282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonConvert.cs"];
m2_1067 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2284-2284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonConvert.cs"];
m2_1069 [label="Assert.AreEqual(0, c.IgnoredField)", span="2288-2288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonConvert.cs"];
m2_1070 [label="Assert.AreEqual(99, c.Field)", span="2289-2289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonConvert.cs"];
m2_1068 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2286-2286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonConvert.cs"];
m2_1071 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonConvert.cs"];
m2_2684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonConvert.cs"];
m2_2686 [label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6143-6146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonConvert.cs"];
m2_2688 [label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6154-6157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonConvert.cs"];
m2_2685 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6136-6141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonConvert.cs"];
m2_2687 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6148-6152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonConvert.cs"];
m2_2689 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonConvert.cs"];
m2_110 [label="value == null", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_574 [label="var json = JsonConvert.SerializeObject(original)", span="1244-1244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonConvert.cs"];
m2_1642 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3512-3512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonConvert.cs"];
m2_1644 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3516-3516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonConvert.cs"];
m2_1643 [label="string json = @''[]''", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonConvert.cs"];
m2_1645 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3512-3512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonConvert.cs"];
m2_124 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JsonConvert.cs"];
m2_115 [label="isReference == null", span="252-252", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_118 [label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="260-260", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_119 [label="!isReference.GetValueOrDefault()", span="264-264", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_121 [label="return Serializer.GetReferenceResolver().IsReferenced(this, value);", span="269-269", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_120 [label="return false;", span="266-266", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_116 [label="valueContract.ContractType == JsonContractType.Array", span="254-254", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_117 [label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="256-256", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_122 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_2017 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonConvert.cs"];
m2_3221 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7275-7275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3226 [label="Assert.AreEqual(2, dic2.Count)", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3227 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7293-7293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3228 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3225 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7290-7290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3223 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7283-7283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3224 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7285-7288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3222 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7277-7281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_3229 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7275-7275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonConvert.cs"];
m2_114 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs"];
m2_1540 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonConvert.cs"];
m2_1543 [label="Assert.AreEqual(2, values.Count)", span="3352-3352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonConvert.cs"];
m2_1544 [label="Assert.AreEqual(''value1'', values[''key1''])", span="3353-3353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonConvert.cs"];
m2_1545 [label="Assert.AreEqual(''value2'', values[''key2''])", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonConvert.cs"];
m2_1542 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3350-3350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonConvert.cs"];
m2_1541 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3348-3348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonConvert.cs"];
m2_1546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonConvert.cs"];
m2_1800 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3921-3921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonConvert.cs"];
m2_1801 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="3923-3923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonConvert.cs"];
m2_1802 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3921-3921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonConvert.cs"];
m2_2774 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonConvert.cs"];
m2_3724 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8587-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3731 [label="Assert.AreEqual(dt, dt1)", span="8602-8602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3736 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8612-8612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3729 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8598-8598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3734 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8610-8610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3735 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8611-8611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3739 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8620-8620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3740 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8621-8621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3741 [label="Assert.AreEqual(''abc'', v.Value)", span="8622-8622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3725 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8589-8589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3730 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8600-8600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3732 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8604-8607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3733 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8608-8608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3737 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8614-8617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3728 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8596-8596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3738 [label="v = (JValue)JToken.ReadFrom(reader)", span="8618-8618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3727 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8591-8594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3726 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8590-8590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_3742 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8587-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonConvert.cs"];
m2_2427 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5437-5437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonConvert.cs"];
m2_2430 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="5441-5441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonConvert.cs"];
m2_2429 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5440-5440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonConvert.cs"];
m2_2428 [label="string json = ''[123456789876543.21]''", span="5439-5439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonConvert.cs"];
m2_2431 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5437-5437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonConvert.cs"];
m2_1568 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3389-3389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonConvert.cs"];
m2_1570 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3393-3393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonConvert.cs"];
m2_1569 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3391-3391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonConvert.cs"];
m2_1571 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3389-3389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonConvert.cs"];
m2_1777 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonConvert.cs"];
m2_1090 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2320-2320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1093 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2325-2325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1095 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2329-2329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1092 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2324-2324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1094 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2327-2327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1091 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2322-2322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_1096 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2320-2320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonConvert.cs"];
m2_3405 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3408 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7773-7773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3410 [label="Assert.AreEqual(500, obj.Item1)", span="7779-7779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3407 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7769-7772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3409 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7775-7778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3406 [label="var tuple = Tuple.Create(500)", span="7768-7768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_3411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonConvert.cs"];
m2_2024 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonConvert.cs"];
m2_1202 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2513-2513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1204 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="2526-2526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1205 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2528-2528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1207 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2532-2532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1208 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2533-2533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1209 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1210 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2535-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1211 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2536-2536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1212 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2537-2537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1213 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2538-2538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1206 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2530-2530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1203 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2515-2524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1214 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2513-2513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonConvert.cs"];
m2_1072 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonConvert.cs"];
m2_1681 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3588-3588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonConvert.cs"];
m2_1682 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3590-3601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonConvert.cs"];
m2_1683 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3588-3588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonConvert.cs"];
m2_2703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6190-6190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonConvert.cs"];
m2_2708 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6202-6202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonConvert.cs"];
m2_2707 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6201-6201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonConvert.cs"];
m2_2705 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonConvert.cs"];
m2_2706 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6195-6199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonConvert.cs"];
m2_2704 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonConvert.cs"];
m2_2709 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6190-6190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonConvert.cs"];
m2_3463 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7960-7960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3468 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="7972-7972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3465 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7963-7963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3467 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="7970-7970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3469 [label="string json = sw.ToString()", span="7974-7974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3466 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="7965-7969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3464 [label="StringWriter sw = new StringWriter()", span="7962-7962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3470 [label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="7976-7978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_3471 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7960-7960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonConvert.cs"];
m2_2387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5351-5351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonConvert.cs"];
m2_2020 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonConvert.cs"];
m2_1628 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonConvert.cs"];
m2_1629 [label="string json = @''[new Constructor(123)]''", span="3488-3488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonConvert.cs"];
m2_1630 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3490-3490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonConvert.cs"];
m2_1631 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonConvert.cs"];
m2_3055 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvert.cs"];
m2_1715 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonConvert.cs"];
m2_1431 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1439 [label="Assert.AreEqual(26, newOptInClass.Age)", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1440 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3087-3087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1441 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3088-3088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1438 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3081-3085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1437 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3076-3079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1436 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3074-3074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1432 [label="OptInClass optInClass = new OptInClass()", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1435 [label="optInClass.NotIncluded = ''Poor me :(''", span="3072-3072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1433 [label="optInClass.Age = 26", span="3070-3070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1434 [label="optInClass.Name = ''James NK''", span="3071-3071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_1442 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonConvert.cs"];
m2_871 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonConvert.cs"];
m2_1316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2769-2769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1318 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="2777-2777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1321 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="2786-2786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1322 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="2787-2787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1323 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="2788-2788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1317 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="2771-2775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1319 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="2780-2780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1320 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="2783-2783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_1324 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2769-2769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonConvert.cs"];
m2_779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1701-1701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_784 [label="string output = JsonConvert.SerializeObject(executorObject)", span="1708-1708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_787 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1713-1713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_788 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1714-1714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_790 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1716-1716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_780 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1703-1703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_783 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1706-1706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_785 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_786 [label="Assert.AreNotSame(executorObject, executorObject2)", span="1712-1712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_789 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1715-1715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_781 [label="executorObject.serverClassName = ''BanSubs''", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_782 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_791 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1701-1701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonConvert.cs"];
m2_1017 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonConvert.cs"];
m2_2690 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6074-6074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonConvert.cs"];
m2_1987 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonConvert.cs"];
m2_583 [label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonConvert.cs"];
m2_718 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonConvert.cs"];
m2_3095 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7028-7028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3098 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7033-7033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3097 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7031-7031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3096 [label="Color color = (Color)value", span="7030-7030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3099 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7028-7028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_2751 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonConvert.cs"];
m2_3694 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8528-8528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3695 [label="throw new InvalidCastException();", span="8530-8530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3696 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8528-8528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonConvert.cs"];
m2_2344 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5264-5264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonConvert.cs"];
m2_2349 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5279-5279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonConvert.cs"];
m2_2348 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5277-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonConvert.cs"];
m2_2346 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5271-5271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonConvert.cs"];
m2_2347 [label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5273-5275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonConvert.cs"];
m2_2345 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5266-5269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonConvert.cs"];
m2_2350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5264-5264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonConvert.cs"];
m2_1994 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonConvert.cs"];
m2_138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_143 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_144 [label="FaqItemProxy c = new FaqItemProxy()", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_145 [label="c.FaqId = 1", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_146 [label="c.Sections.Add(new FaqSection())", span="448-448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_147 [label="c.IsProxy = true", span="449-449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_148 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="451-451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_151 [label="Assert.AreEqual(1, c2.FaqId)", span="465-465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_152 [label="Assert.AreEqual(1, c2.Sections.Count)", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_153 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_149 [label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="453-461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_150 [label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="463-463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonConvert.cs"];
m2_1353 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2870-2870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1356 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2878-2878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1357 [label="Assert.AreEqual(21, c.TestProperty2)", span="2879-2879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1359 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1360 [label="Assert.AreEqual(21, c.TestProperty2)", span="2886-2886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1355 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="2874-2877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1358 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="2881-2884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1354 [label="string json = ''{ 'testProperty1': 'value' }''", span="2872-2872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_1361 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2870-2870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonConvert.cs"];
m2_738 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="728-728", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs"];
m2_1315 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonConvert.cs"];
m2_3589 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonConvert.cs"];
m2_2172 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonConvert.cs"];
m2_191 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonConvert.cs"];
m2_194 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonConvert.cs"];
m2_201 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonConvert.cs"];
m2_2509 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="129-129", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonConvert.cs"];
m2_2561 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5740-5740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonConvert.cs"];
m2_2562 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5742-5742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonConvert.cs"];
m2_2563 [label="Assert.IsNull(dateTime)", span="5744-5744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonConvert.cs"];
m2_2564 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5740-5740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonConvert.cs"];
m2_3274 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7427-7427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonConvert.cs"];
m2_3276 [label="Assert.AreEqual(@''{}'', json)", span="7430-7430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonConvert.cs"];
m2_3275 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7429-7429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonConvert.cs"];
m2_3277 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7427-7427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonConvert.cs"];
m2_2863 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6554-6554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonConvert.cs"];
m2_2865 [label="string json = JsonConvert.SerializeObject(d1)", span="6558-6558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonConvert.cs"];
m2_2867 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6562-6562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonConvert.cs"];
m2_2868 [label="Assert.AreEqual(d1[0], d2[0])", span="6563-6563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonConvert.cs"];
m2_2866 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6560-6560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonConvert.cs"];
m2_2864 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6556-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonConvert.cs"];
m2_2869 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6554-6554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonConvert.cs"];
m2_3474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7989-7989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonConvert.cs"];
m2_3475 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="7991-7991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonConvert.cs"];
m2_3476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7989-7989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonConvert.cs"];
m2_1990 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonConvert.cs"];
m2_3380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7693-7693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonConvert.cs"];
m2_3384 [label="Assert.AreEqual(900, i)", span="7704-7704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonConvert.cs"];
m2_3382 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7699-7699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonConvert.cs"];
m2_3383 [label="int i = l[0]", span="7701-7701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonConvert.cs"];
m2_3381 [label="string json = @''[\r\n        900\r\n      ]''", span="7695-7697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonConvert.cs"];
m2_3385 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7693-7693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonConvert.cs"];
m2_575 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonConvert.cs"];
m2_205 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonConvert.cs"];
m2_207 [label="TryConvertToString(value, contract.UnderlyingType, out s)", span="420-420", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonConvert.cs"];
m2_208 [label="writer.WriteValue(s)", span="421-421", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonConvert.cs"];
m2_209 [label="OnSerialized(writer, contract, value)", span="423-423", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonConvert.cs"];
m2_206 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonConvert.cs"];
m2_210 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="415-415", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="JsonConvert.cs"];
m2_2369 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5317-5317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2371 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5324-5324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2376 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5333-5333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2377 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2370 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5319-5322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2372 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5326-5326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2375 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5331-5331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2373 [label="JsonSerializer serializer = new JsonSerializer()", span="5328-5328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2374 [label="serializer.DateParseHandling = DateParseHandling.None", span="5329-5329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_2378 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5317-5317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonConvert.cs"];
m2_1194 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonConvert.cs"];
m2_1197 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2506-2506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonConvert.cs"];
m2_1198 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2507-2507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonConvert.cs"];
m2_1199 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2508-2508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonConvert.cs"];
m2_1196 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2504-2504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonConvert.cs"];
m2_1195 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2502-2502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonConvert.cs"];
m2_1200 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonConvert.cs"];
m2_2410 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonConvert.cs"];
m2_2087 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4786-4786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2124 [label="AA_field1 = f", span="4788-4788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2125 [label="AA_field2 = f", span="4789-4789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2126 [label="AA_property1 = f", span="4790-4790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2127 [label="AA_property2 = f", span="4791-4791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2128 [label="AA_property3 = f", span="4792-4792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2129 [label="AA_property4 = f", span="4793-4793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2130 [label="AA_property5 = f", span="4794-4794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2131 [label="AA_property6 = f", span="4795-4795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2132 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4786-4786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonConvert.cs"];
m2_2291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5135-5135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonConvert.cs"];
m2_2293 [label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5139-5143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonConvert.cs"];
m2_2292 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5137-5137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonConvert.cs"];
m2_2294 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5135-5135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonConvert.cs"];
m2_1916 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonConvert.cs"];
m2_3197 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonConvert.cs"];
m2_1073 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_1075 [label="string json = JsonConvert.SerializeObject(c)", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_1077 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_1078 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_1079 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2303-2303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_1076 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_1074 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_1080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonConvert.cs"];
m2_134 [label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="428-435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonConvert.cs"];
m2_1852 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4100-4100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1860 [label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4136-4136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1861 [label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4137-4137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1862 [label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4138-4138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1863 [label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4139-4139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1859 [label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4128-4134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1858 [label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4121-4126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1857 [label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4115-4119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1853 [label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4102-4105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1856 [label="c2.C1 = c1", span="4113-4113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1854 [label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4107-4110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1855 [label="c1.C2 = c2", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_1864 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4100-4100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonConvert.cs"];
m2_2327 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2333 [label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5242-5242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2334 [label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5243-5243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2335 [label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5244-5244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2336 [label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5245-5245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2332 [label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5240-5240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2330 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5235-5235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2331 [label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5238-5238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2337 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'')", span="5249-5249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2329 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5225-5233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2328 [label="string classRef = typeof(StringDictionary).FullName", span="5223-5223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_2338 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonConvert.cs"];
m2_1041 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2239-2239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonConvert.cs"];
m2_1043 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonConvert.cs"];
m2_1046 [label="Assert.AreEqual(guid, c.GuidField)", span="2247-2247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonConvert.cs"];
m2_1044 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2244-2244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonConvert.cs"];
m2_1045 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2246-2246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonConvert.cs"];
m2_1042 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2241-2241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonConvert.cs"];
m2_1047 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2239-2239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonConvert.cs"];
m2_3880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="9063-9063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonConvert.cs"];
m2_2457 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5499-5499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonConvert.cs"];
m2_2458 [label="IDoWork = doWork", span="5502-5502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonConvert.cs"];
m2_2459 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5499-5499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonConvert.cs"];
m2_2914 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonConvert.cs"];
m2_2623 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5931-5931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonConvert.cs"];
m2_3032 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6875-6875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonConvert.cs"];
m2_3033 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6877-6882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonConvert.cs"];
m2_3034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6875-6875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonConvert.cs"];
m2_953 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2077-2077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonConvert.cs"];
m2_954 [label="string json = JsonConvert.SerializeObject(new object())", span="2079-2079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonConvert.cs"];
m2_955 [label="Assert.AreEqual(''{}'', json)", span="2080-2080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonConvert.cs"];
m2_956 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2077-2077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonConvert.cs"];
m2_2159 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonConvert.cs"];
m2_1443 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3047-3047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonConvert.cs"];
m2_1108 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonConvert.cs"];
m2_2278 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5107-5107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonConvert.cs"];
m2_2279 [label="return new DictionaryKey() { Value = value };", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonConvert.cs"];
m2_2280 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5107-5107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonConvert.cs"];
m2_2596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5874-5874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonConvert.cs"];
m2_2599 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="5889-5892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonConvert.cs"];
m2_2598 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5882-5882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonConvert.cs"];
m2_2597 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5876-5880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonConvert.cs"];
m2_2600 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5874-5874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonConvert.cs"];
m2_2 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_3 [label="jsonWriter == null", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_4 [label="throw new ArgumentNullException(nameof(jsonWriter));", span="63-63", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_5 [label="_rootType = objectType", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_6 [label="_rootLevel = _serializeStack.Count + 1", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs"];
m2_2595 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5837-5837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonConvert.cs"];
m2_2812 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonConvert.cs"];
m2_50 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonConvert.cs"];
m2_497 [label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_499 [label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_495 [label="info.AddValue(''stringValue'', _stringValue)", span="1078-1078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_496 [label="info.AddValue(''intValue'', _intValue)", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_498 [label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_500 [label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1083-1083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonConvert.cs"];
m2_1524 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonConvert.cs"];
m2_1888 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonConvert.cs"];
m2_2119 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonConvert.cs"];
m2_3139 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonConvert.cs"];
m2_1007 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2155-2155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1013 [label="Assert.AreEqual(''string'', c.String)", span="2198-2198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1014 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="2199-2199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1015 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1012 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2197-2197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1008 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2157-2157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1011 [label="StringAssert.AreEqual(expected, json)", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1009 [label="string expected = null", span="2159-2159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1010 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2161-2176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_1016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2155-2155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonConvert.cs"];
m2_2315 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5198-5198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2322 [label="Assert.AreEqual(2, z.Length)", span="5209-5209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2323 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5210-5210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2324 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5211-5211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2321 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5208-5208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2316 [label="JsonSerializer serializer1 = new JsonSerializer()", span="5200-5200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2320 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5206-5206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2317 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5201-5201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2318 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5202-5202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2319 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5204-5204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_2325 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5198-5198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonConvert.cs"];
m2_1495 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3229-3229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1500 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1501 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3249-3249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1502 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3250-3250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1497 [label="JObject o = JObject.Parse(json)", span="3243-3243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1498 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3245-3245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1499 [label="Assert.IsNotNull(s)", span="3246-3246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1496 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3231-3241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_1503 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3229-3229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonConvert.cs"];
m2_2845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6514-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2852 [label="Assert.AreEqual(1.5m, c.Quantity)", span="6529-6529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2853 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6530-6530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2851 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6527-6527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2850 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6525-6525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2849 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6523-6523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2846 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6516-6516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2847 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6520-6520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2848 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="6522-6522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2854 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6514-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonConvert.cs"];
m2_2780 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonConvert.cs"];
m2_2783 [label="string json = JsonConvert.SerializeObject(uri)", span="6384-6384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonConvert.cs"];
m2_2785 [label="Assert.AreEqual(uri, output)", span="6387-6387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonConvert.cs"];
m2_2784 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6385-6385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonConvert.cs"];
m2_2782 [label="Uri uri = new Uri(input)", span="6383-6383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonConvert.cs"];
m2_2781 [label="string input = ''http://test.com/%22foo+bar%22''", span="6382-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonConvert.cs"];
m2_2786 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonConvert.cs"];
m2_1326 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2791-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1335 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="2832-2832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1336 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="2833-2833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1337 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="2834-2834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1332 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="2811-2827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1333 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="2829-2829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1327 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="2793-2793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1334 [label="Assert.IsNotNull(deserializedObject)", span="2830-2830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1331 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1328 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="2794-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1329 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="2800-2803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1330 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="2804-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_1338 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2791-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonConvert.cs"];
m2_3879 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9028-9028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonConvert.cs"];
m2_3682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3683 [label="return (long)Value;", span="8510-8510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonConvert.cs"];
m2_2182 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="4939-4939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonConvert.cs"];
m2_1420 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3014-3014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1423 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3035-3035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1425 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3038-3038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1426 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3039-3039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1427 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="3040-3040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1428 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3041-3041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1429 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3042-3042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1422 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3034-3034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1424 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3037-3037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1421 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3016-3032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_1430 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3014-3014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonConvert.cs"];
m2_2479 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5587-5587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2486 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5598-5598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2490 [label="s = JsonConvert.SerializeObject(barWithNull)", span="5604-5604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2488 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5600-5600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2489 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5601-5601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2492 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5606-5606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2493 [label="Assert.AreEqual(deserialized.Foo2, null)", span="5607-5607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2480 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5589-5589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2485 [label="barWithNull.Foo2 = null", span="5595-5595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2487 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="5599-5599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2483 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5593-5593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2491 [label="deserialized = deserialize(s)", span="5605-5605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2481 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5590-5590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2482 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5591-5591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2484 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5594-5594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_2494 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5587-5587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonConvert.cs"];
m2_3581 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonConvert.cs"];
m2_3582 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8284-8286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonConvert.cs"];
m2_3583 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8288-8288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonConvert.cs"];
m2_3585 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8292-8292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonConvert.cs"];
m2_3586 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8293-8293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonConvert.cs"];
m2_3584 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8290-8290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonConvert.cs"];
m2_3587 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonConvert.cs"];
m2_1235 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonConvert.cs"];
m2_1216 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2542-2542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonConvert.cs"];
m2_1219 [label="Assert.AreEqual(1, c.Height)", span="2547-2547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonConvert.cs"];
m2_1218 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonConvert.cs"];
m2_1217 [label="string json = @''{''''Height'''':1}''", span="2544-2544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonConvert.cs"];
m2_1220 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2542-2542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonConvert.cs"];
m2_270 [label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="535-535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="JsonConvert.cs"];
m2_271 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonConvert.cs"];
m2_3858 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8902-8902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonConvert.cs"];
m2_3861 [label="Assert.AreEqual(''base'', d.BaseProperty)", span="8911-8911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonConvert.cs"];
m2_3862 [label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="8912-8912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonConvert.cs"];
m2_3860 [label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="8909-8909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonConvert.cs"];
m2_3859 [label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="8904-8907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonConvert.cs"];
m2_3863 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8902-8902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonConvert.cs"];
m2_2510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5647-5647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonConvert.cs"];
m2_2512 [label="var json = JsonConvert.SerializeObject(data)", span="5650-5650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonConvert.cs"];
m2_2514 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5653-5653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonConvert.cs"];
m2_2511 [label="var data = new DecimalTest(decimal.MinValue)", span="5649-5649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonConvert.cs"];
m2_2513 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="5651-5651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonConvert.cs"];
m2_2515 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5647-5647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonConvert.cs"];
m2_2175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4915-4915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonConvert.cs"];
m2_2178 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4924-4924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonConvert.cs"];
m2_2177 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4923-4923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonConvert.cs"];
m2_2176 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="4917-4921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonConvert.cs"];
m2_2179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4915-4915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonConvert.cs"];
m2_1898 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonConvert.cs"];
m2_2764 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6361-6361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2772 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6375-6375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2771 [label="string result = sw.ToString()", span="6374-6374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2767 [label="var sw = new StringWriter()", span="6368-6368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2770 [label="jw.Flush()", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2766 [label="var json = JObject.FromObject(o)", span="6366-6366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2768 [label="var jw = new JsonTextWriter(sw)", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2769 [label="jw.WriteToken(json.CreateReader())", span="6371-6371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2765 [label="object o = new { p = 1 }", span="6364-6364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_2773 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6361-6361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonConvert.cs"];
m2_3100 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonConvert.cs"];
m2_2180 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="4927-4927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonConvert.cs"];
m2_1340 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonConvert.cs"];
m2_3878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="8994-8994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonConvert.cs"];
m2_3819 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="8803-8803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonConvert.cs"];
m2_1983 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonConvert.cs"];
m2_3900 [label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonConvert.cs"];
m2_661 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1357-1357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonConvert.cs"];
m2_1934 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonConvert.cs"];
m2_1925 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4316-4316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1929 [label="this[entry.Key] = entry.Value", span="4325-4325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1928 [label=dictionary, span="4323-4323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1926 [label="dictionary == null", span="4318-4318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1927 [label="return;", span="4320-4320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_1930 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4316-4316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonConvert.cs"];
m2_2383 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5360-5360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonConvert.cs"];
m2_2385 [label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5364-5366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonConvert.cs"];
m2_2384 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5362-5362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonConvert.cs"];
m2_2386 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5360-5360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonConvert.cs"];
m2_1649 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvert.cs"];
m2_3897 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonConvert.cs"];
m2_972 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2105-2105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_975 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2109-2109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_976 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2111-2111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_977 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_978 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2113-2113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_979 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_980 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2115-2115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_974 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2108-2108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_973 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2107-2107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_981 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2105-2105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonConvert.cs"];
m2_820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonConvert.cs"];
m2_821 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonConvert.cs"];
m2_822 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="1770-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonConvert.cs"];
m2_824 [label="Assert.AreEqual(0, c.IgnoredField)", span="1774-1774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonConvert.cs"];
m2_825 [label="Assert.AreEqual(99, c.Field)", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonConvert.cs"];
m2_823 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="1772-1772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonConvert.cs"];
m2_826 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonConvert.cs"];
m2_101 [label="isReference = property.IsReference", span="218-218", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_105 [label="isReference = collectionContract.ItemIsReference", span="228-228", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_108 [label="return isReference;", span="236-236", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_104 [label="isReference == null && collectionContract != null", span="226-226", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_106 [label="isReference == null", span="231-231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_107 [label="isReference = contract.IsReference", span="233-233", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_103 [label="isReference = containerProperty.ItemIsReference", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_102 [label="isReference == null && containerProperty != null", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_109 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ResolveIsReference(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonConvert.cs"];
m2_1512 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonConvert.cs"];
m2_2295 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5147-5147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonConvert.cs"];
m2_2297 [label="Assert.AreEqual(3, d.Length)", span="5155-5155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonConvert.cs"];
m2_2298 [label="Assert.AreEqual(2.4, d[0])", span="5156-5156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonConvert.cs"];
m2_2299 [label="Assert.AreEqual(4.3, d[1])", span="5157-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonConvert.cs"];
m2_2300 [label="Assert.AreEqual(null, d[2])", span="5158-5158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonConvert.cs"];
m2_2296 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5149-5153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonConvert.cs"];
m2_2301 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5147-5147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonConvert.cs"];
m2_606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1285-1285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_610 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_612 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_608 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_609 [label="Assert.IsNotNull(deserialized.foo2)", span="1289-1289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_611 [label="Assert.IsNotNull(deserialized.foo)", span="1291-1291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_607 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1287-1287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_613 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1285-1285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonConvert.cs"];
m2_873 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1925-1925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_882 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="1942-1942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_881 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1940-1940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_880 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_879 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_876 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="1931-1931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_878 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1935-1935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_874 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="1927-1927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_875 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="1930-1930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_877 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1934-1934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_883 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1925-1925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonConvert.cs"];
m2_2351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5255-5255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonConvert.cs"];
m2_1484 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonConvert.cs"];
m2_2495 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5566-5566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonConvert.cs"];
m2_2364 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonConvert.cs"];
m2_3688 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8518-8518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3689 [label="throw new InvalidCastException();", span="8520-8520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3690 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8518-8518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1259 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonConvert.cs"];
m2_855 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_856 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="1906-1906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_857 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_1081 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonConvert.cs"];
m2_1049 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonConvert.cs"];
m2_637 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonConvert.cs"];
m2_3103 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7036-7036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3104 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7038-7038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7036-7036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_680 [label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1507-1512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_679 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_674 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1492-1498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_678 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1503-1503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_675 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_676 [label="baseWith.Virtual = ''Virtual2!''", span="1501-1501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_677 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonConvert.cs"];
m2_3799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8773-8773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3806 [label="Assert.AreEqual(dt, dt1)", span="8788-8788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3811 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="8799-8799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3804 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8784-8784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3809 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8797-8797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3810 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="8798-8798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3800 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="8775-8775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3805 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="8786-8786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3807 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="8790-8794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3808 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8795-8795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3803 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8782-8782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3802 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8777-8780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3801 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8776-8776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_3812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8773-8773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonConvert.cs"];
m2_2810 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonConvert.cs"];
m2_3497 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8030-8030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonConvert.cs"];
m2_3498 [label="this.First = first", span="8033-8033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonConvert.cs"];
m2_3499 [label="this.Second = second", span="8034-8034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonConvert.cs"];
m2_3500 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8030-8030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonConvert.cs"];
m2_3907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9035-9035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3909 [label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9039-9044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3908 [label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9037-9037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3910 [label="return attachment;", span="9045-9045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_3911 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9035-9035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs"];
m2_2752 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6332-6332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2757 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6353-6353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2758 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6354-6354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2759 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6355-6355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2760 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6356-6356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2761 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6357-6357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2756 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6352-6352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2753 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6334-6341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2754 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6342-6342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2755 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6344-6350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_2762 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6332-6332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonConvert.cs"];
m2_1984 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonConvert.cs"];
m2_632 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonConvert.cs"];
m2_2634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6010-6010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2641 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6026-6026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2642 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6027-6027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2643 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="6028-6028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2644 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="6029-6029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2640 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6025-6025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2635 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6012-6012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2638 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6016-6016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2639 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6017-6023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2636 [label="c1.Categories.Add(''one'')", span="6013-6013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2637 [label="c1.Categories.Add(''two'')", span="6014-6014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2645 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6010-6010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonConvert.cs"];
m2_2739 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonConvert.cs"];
m2_1463 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3149-3149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonConvert.cs"];
m2_1466 [label="Assert.AreEqual(''Name!'', c.Name)", span="3162-3162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonConvert.cs"];
m2_1467 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="3163-3163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonConvert.cs"];
m2_1468 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3164-3164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonConvert.cs"];
m2_1465 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3158-3160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonConvert.cs"];
m2_1464 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3151-3156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonConvert.cs"];
m2_1469 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3149-3149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonConvert.cs"];
m2_1559 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3377-3377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_1563 [label="Assert.AreEqual(5, a.Count)", span="3383-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_1564 [label="Assert.AreEqual(1, (int)a[0])", span="3384-3384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_1565 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3385-3385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_1561 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3381-3381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_1562 [label="JArray a = (JArray)setOnly.GetValue()", span="3382-3382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_1560 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3379-3379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_1566 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3377-3377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonConvert.cs"];
m2_3572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8230-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3578 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8253-8260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3573 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8232-8236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3574 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8238-8242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3577 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8247-8251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3579 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8262-8277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3575 [label="john.Spouse = jane", span="8244-8244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3576 [label="jane.Spouse = john", span="8245-8245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_3580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8230-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonConvert.cs"];
m2_1871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4171-4171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonConvert.cs"];
m2_1874 [label="Assert.AreEqual(123L, item.Value)", span="4176-4176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonConvert.cs"];
m2_1873 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4174-4174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonConvert.cs"];
m2_1872 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="4173-4173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonConvert.cs"];
m2_1875 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4171-4171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonConvert.cs"];
m2_3544 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonConvert.cs"];
m2_1650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonConvert.cs"];
m2_1652 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3524-3524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonConvert.cs"];
m2_1651 [label="string json = @''{}''", span="3522-3522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonConvert.cs"];
m2_1653 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonConvert.cs"];
m2_3864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8917-8917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonConvert.cs"];
m2_3866 [label="string output = JsonConvert.SerializeObject(instance)", span="8923-8923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonConvert.cs"];
m2_3868 [label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="8926-8926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonConvert.cs"];
m2_3867 [label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="8924-8924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonConvert.cs"];
m2_3865 [label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="8919-8922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonConvert.cs"];
m2_3869 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8917-8917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonConvert.cs"];
m2_2855 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonConvert.cs"];
m2_654 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JsonConvert.cs"];
m2_3425 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8468-8468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3659 [label="throw new InvalidCastException();", span="8470-8470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3660 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8468-8468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1879 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1885 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4217-4217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1881 [label="MemoryStream ms = new MemoryStream()", span="4210-4210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1877 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4205-4205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1878 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4206-4206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1880 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4208-4208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1884 [label="byte[] jsonBytes = ms.ToArray()", span="4216-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1882 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4211-4213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1883 [label="serializer.WriteObject(ms, c)", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_1886 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonConvert.cs"];
m2_3545 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8159-8159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonConvert.cs"];
m2_3550 [label="Assert.AreEqual(1234567890.123456m, d)", span="8166-8166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonConvert.cs"];
m2_3549 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8164-8164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonConvert.cs"];
m2_3547 [label="var settings = new JsonSerializerSettings()", span="8162-8162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonConvert.cs"];
m2_3546 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8161-8161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonConvert.cs"];
m2_3548 [label="var serialiser = JsonSerializer.Create(settings)", span="8163-8163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonConvert.cs"];
m2_3551 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8159-8159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonConvert.cs"];
m2_756 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonConvert.cs"];
m2_2723 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonConvert.cs"];
m2_795 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonConvert.cs"];
m2_798 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1727-1727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonConvert.cs"];
m2_797 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonConvert.cs"];
m2_796 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1723-1723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonConvert.cs"];
m2_799 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonConvert.cs"];
m2_1731 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3684-3684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonConvert.cs"];
m2_1732 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3686-3686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonConvert.cs"];
m2_1733 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonConvert.cs"];
m2_1734 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3688-3688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonConvert.cs"];
m2_1735 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3690-3690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonConvert.cs"];
m2_1736 [label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3691-3694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonConvert.cs"];
m2_1737 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3684-3684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonConvert.cs"];
m2_2415 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5417-5417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonConvert.cs"];
m2_2417 [label="Assert.AreEqual(123456789876543.21m, d)", span="5420-5420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonConvert.cs"];
m2_2416 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5419-5419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonConvert.cs"];
m2_2418 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5417-5417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonConvert.cs"];
m2_3763 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8670-8670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3770 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8691-8691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3764 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8672-8672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3769 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8689-8689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3766 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8674-8678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3767 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8680-8683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3765 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8673-8673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3768 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8685-8687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_3771 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8670-8670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonConvert.cs"];
m2_2016 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonConvert.cs"];
m2_2302 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5163-5163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2306 [label="Assert.AreEqual(3, d.Count)", span="5180-5180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2307 [label="Assert.IsTrue(d.Contains(''One''))", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2308 [label="Assert.IsTrue(d.Contains(''2''))", span="5182-5182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2309 [label="Assert.IsTrue(d.Contains(''III''))", span="5183-5183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2305 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5178-5178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2303 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5165-5170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2304 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5172-5176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_2310 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5163-5163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonConvert.cs"];
m2_952 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="775-775", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs"];
m2_842 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="251-251", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonConvert.cs"];
m2_1504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3254-3254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonConvert.cs"];
m2_1506 [label="string json = JsonConvert.SerializeObject(uri)", span="3257-3257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonConvert.cs"];
m2_1507 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3259-3259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonConvert.cs"];
m2_1509 [label="Assert.AreEqual(uri, newUri)", span="3262-3262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonConvert.cs"];
m2_1508 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3261-3261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonConvert.cs"];
m2_1505 [label="Uri uri = new Uri(''http://codeplex.com'')", span="3256-3256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonConvert.cs"];
m2_1510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3254-3254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonConvert.cs"];
m2_2214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4992-4992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2222 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5005-5005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2215 [label="var reference = new Dictionary<string, object>()", span="4996-4996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2218 [label="var child = new Dictionary<string, object>()", span="5000-5000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2221 [label="child.Add(''Father'', reference)", span="5003-5003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2223 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'')", span="5007-5007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2216 [label="reference.Add(''$ref'', ''Persons'')", span="4997-4997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2217 [label="reference.Add(''$id'', 1)", span="4998-4998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2219 [label="child.Add(''_id'', 2)", span="5001-5001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2220 [label="child.Add(''Name'', ''Isabell'')", span="5002-5002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_2224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4992-4992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonConvert.cs"];
m2_3898 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonConvert.cs"];
m2_3198 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7206-7206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3200 [label="string json = JsonConvert.SerializeObject(c)", span="7218-7218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3201 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7220-7220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3199 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7208-7216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_3202 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7206-7206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonConvert.cs"];
m2_2888 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6597-6597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonConvert.cs"];
m2_2889 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6599-6604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonConvert.cs"];
m2_2890 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'')", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonConvert.cs"];
m2_2891 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6597-6597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonConvert.cs"];
m2_3664 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8478-8478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3665 [label="throw new InvalidCastException();", span="8480-8480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3666 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8478-8478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonConvert.cs"];
m2_1215 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonConvert.cs"];
m2_1306 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonConvert.cs"];
m2_3536 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8142-8142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_3538 [label="string json = JsonConvert.SerializeObject(s1)", span="8146-8146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_3540 [label="Assert.AreEqual(s1.Count, s2.Count)", span="8150-8150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_3542 [label="Assert.IsTrue(s2.Contains(s))", span="8153-8153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_3539 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8148-8148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_3537 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8144-8144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_3541 [label=s1, span="8151-8151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_3543 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8142-8142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonConvert.cs"];
m2_1845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4037-4037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonConvert.cs"];
m2_912 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonConvert.cs"];
m2_828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1779-1779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonConvert.cs"];
m2_830 [label="object o = JsonConvert.DeserializeObject(json)", span="1859-1859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonConvert.cs"];
m2_829 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="1781-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonConvert.cs"];
m2_831 [label="string s = string.Empty", span="1860-1860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonConvert.cs"];
m2_832 [label="s += s", span="1861-1861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonConvert.cs"];
m2_833 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1779-1779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonConvert.cs"];
m2_3685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8513-8513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3686 [label="throw new InvalidCastException();", span="8515-8515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonConvert.cs"];
m2_3687 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8513-8513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonConvert.cs"];
m2_2362 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5282-5282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonConvert.cs"];
m2_3101 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonConvert.cs"];
m2_2844 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6430-6430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonConvert.cs"];
m2_1815 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3975-3975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonConvert.cs"];
m2_1817 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="3978-3978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonConvert.cs"];
m2_1819 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="3981-3981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonConvert.cs"];
m2_1816 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="3977-3977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonConvert.cs"];
m2_1818 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="3980-3980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonConvert.cs"];
m2_1820 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3975-3975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonConvert.cs"];
m2_3521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8087-8087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonConvert.cs"];
m2_3525 [label="Assert.AreEqual(expected, actual)", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonConvert.cs"];
m2_3523 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8099-8099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonConvert.cs"];
m2_3524 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8101-8104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonConvert.cs"];
m2_3522 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8089-8097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonConvert.cs"];
m2_3526 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8087-8087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonConvert.cs"];
m2_3212 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7248-7248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3217 [label="Assert.AreEqual(2, dic2.Count)", span="7268-7268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3218 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7269-7269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3219 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7270-7270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3216 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7266-7266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3214 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7256-7259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3215 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7261-7264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3213 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7250-7254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_3220 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7248-7248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonConvert.cs"];
m2_2629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonConvert.cs"];
m2_3110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7054-7054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3119 [label="Assert.AreEqual(2, values.Count)", span="7072-7072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3120 [label="Assert.AreEqual(''bar'', values[0].Name)", span="7073-7073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3121 [label="Assert.AreEqual(''baz'', values[1].Name)", span="7074-7074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3111 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7056-7056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3115 [label="!reader.Read()", span="7063-7063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3114 [label=true, span="7061-7061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3116 [label="JsonSerializer serializer = new JsonSerializer()", span="7066-7066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3112 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7058-7058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3118 [label="values.Add(foo)", span="7069-7069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3113 [label="reader.SupportMultipleContent = true", span="7059-7059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3117 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7067-7067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_3122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7054-7054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonConvert.cs"];
m2_2813 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonConvert.cs"];
m2_807 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonConvert.cs"];
m2_808 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1747-1747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonConvert.cs"];
m2_810 [label="Assert.AreEqual(c.Field, ''Field'')", span="1751-1751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonConvert.cs"];
m2_811 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="1752-1752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonConvert.cs"];
m2_809 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1749-1749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonConvert.cs"];
m2_812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonConvert.cs"];
m2_941 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2053-2053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_949 [label="Assert.AreEqual(d, anonymous.DateValue)", span="2073-2073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_947 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2070-2070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_942 [label="DateTime d = new DateTime(2000, 1, 1)", span="2055-2055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_948 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2072-2072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_946 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2069-2069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_944 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2063-2063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_943 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2057-2061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_945 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2064-2067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2053-2053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonConvert.cs"];
m2_2585 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5828-5828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonConvert.cs"];
m2_2589 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5834-5834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonConvert.cs"];
m2_2587 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5832-5832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonConvert.cs"];
m2_2588 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5833-5833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonConvert.cs"];
m2_2586 [label="string json = @''{A:''''Test''''}''", span="5830-5830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonConvert.cs"];
m2_2590 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5828-5828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonConvert.cs"];
m2_702 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1454-1454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonConvert.cs"];
m2_3303 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7493-7493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonConvert.cs"];
m2_3308 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7525-7525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonConvert.cs"];
m2_3305 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7521-7521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonConvert.cs"];
m2_3307 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7523-7523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonConvert.cs"];
m2_3304 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7495-7519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonConvert.cs"];
m2_3306 [label="Assert.IsNotNull(exception)", span="7522-7522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonConvert.cs"];
m2_3309 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7493-7493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonConvert.cs"];
m2_3359 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonConvert.cs"];
m2_1192 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonConvert.cs"];
m2_1803 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1811 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="3966-3966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1810 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="3965-3965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1808 [label="string json = g.ToJson()", span="3947-3947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1809 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="3949-3963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1804 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="3940-3940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1807 [label="g.MyProperty = ''some value''", span="3945-3945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1805 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="3942-3942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1806 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="3943-3943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_1812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonConvert.cs"];
m2_3899 [label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonConvert.cs"];
m2_1174 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2465-2465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonConvert.cs"];
m2_1175 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2467-2467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonConvert.cs"];
m2_1176 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonConvert.cs"];
m2_1177 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2465-2465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonConvert.cs"];
m2_3557 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8195-8195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonConvert.cs"];
m2_3558 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8197-8197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonConvert.cs"];
m2_3560 [label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8201-8203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonConvert.cs"];
m2_3559 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8199-8199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonConvert.cs"];
m2_3561 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8195-8195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonConvert.cs"];
m2_1662 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3537-3537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonConvert.cs"];
m2_1663 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3539-3550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonConvert.cs"];
m2_1664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3537-3537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonConvert.cs"];
m2_1946 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonConvert.cs"];
m2_844 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1887-1887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_848 [label="string jsonText = JsonConvert.SerializeObject(test)", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_851 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="1899-1899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_852 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="1900-1900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_849 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="1895-1895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_850 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_845 [label="JsonPropertyClass test = new JsonPropertyClass()", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_847 [label="test.SweetCakesCount = int.MaxValue", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_846 [label="test.Pie = ''Delicious''", span="1890-1890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1887-1887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonConvert.cs"];
m2_3022 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6857-6857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonConvert.cs"];
m2_3023 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6859-6859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonConvert.cs"];
m2_3024 [label="Assert.IsNull(b)", span="6860-6860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonConvert.cs"];
m2_3025 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6857-6857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonConvert.cs"];
m2_2618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5951-5951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonConvert.cs"];
m2_2620 [label="string result = JsonConvert.SerializeObject(cc)", span="5959-5959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonConvert.cs"];
m2_2621 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5960-5960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonConvert.cs"];
m2_2619 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5953-5957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonConvert.cs"];
m2_2622 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5951-5951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonConvert.cs"];
m2_2902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6637-6637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonConvert.cs"];
m2_2903 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6639-6643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonConvert.cs"];
m2_2904 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'')", span="6645-6645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonConvert.cs"];
m2_2905 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6637-6637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonConvert.cs"];
m2_870 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonConvert.cs"];
m2_3634 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonConvert.cs"];
m2_2710 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6212-6212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_2712 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_2713 [label="Assert.AreEqual(3, r.Departures.Count())", span="6217-6217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_2711 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6214-6214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_2714 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6218-6218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_2715 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6219-6219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_2716 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="6220-6220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_2717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6212-6212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonConvert.cs"];
m2_3968 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span="", file="JsonConvert.cs"];
m2_3961 [label=c1, span="", file="JsonConvert.cs"];
m2_3963 [label=c1, span="", file="JsonConvert.cs"];
m2_3971 [label=json, span="", file="JsonConvert.cs"];
m2_3976 [label=json, span="", file="JsonConvert.cs"];
m2_3977 [label=json, span="", file="JsonConvert.cs"];
m2_3978 [label=json, span="", file="JsonConvert.cs"];
m2_3979 [label=json, span="", file="JsonConvert.cs"];
m2_3980 [label=json, span="", file="JsonConvert.cs"];
m2_3981 [label=json, span="", file="JsonConvert.cs"];
m2_3982 [label=json, span="", file="JsonConvert.cs"];
m2_3983 [label=json, span="", file="JsonConvert.cs"];
m2_3984 [label=json, span="", file="JsonConvert.cs"];
m2_3998 [label=json, span="", file="JsonConvert.cs"];
m2_4002 [label=json, span="", file="JsonConvert.cs"];
m2_4014 [label=json, span="", file="JsonConvert.cs"];
m2_4015 [label=json, span="", file="JsonConvert.cs"];
m2_4023 [label=json, span="", file="JsonConvert.cs"];
m2_4025 [label=json, span="", file="JsonConvert.cs"];
m2_3972 [label=strFromTest, span="", file="JsonConvert.cs"];
m2_3970 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonConvert.cs"];
m2_3989 [label=json, span="", file="JsonConvert.cs"];
m2_3987 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonConvert.cs"];
m2_4011 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonConvert.cs"];
m2_3967 [label=referenceResolver, span="", file="JsonConvert.cs"];
m2_3975 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonConvert.cs"];
m2_4012 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonConvert.cs"];
m2_4016 [label=errors, span="", file="JsonConvert.cs"];
m2_4017 [label=errors, span="", file="JsonConvert.cs"];
m2_4018 [label=errors, span="", file="JsonConvert.cs"];
m2_3993 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonConvert.cs"];
m2_3994 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonConvert.cs"];
m2_4007 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonConvert.cs"];
m2_4006 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonConvert.cs"];
m2_3962 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span="", file="JsonConvert.cs"];
m2_3986 [label=json, span="", file="JsonConvert.cs"];
m2_4010 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonConvert.cs"];
m2_4013 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonConvert.cs"];
m2_3988 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonConvert.cs"];
m2_3990 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonConvert.cs"];
m2_4019 [label=json, span="", file="JsonConvert.cs"];
m2_4020 [label=s, span="", file="JsonConvert.cs"];
m2_4031 [label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span="", file="JsonConvert.cs"];
m2_4021 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonConvert.cs"];
m2_4030 [label=JsonMessage, span="", file="JsonConvert.cs"];
m2_4024 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="JsonConvert.cs"];
m2_3965 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span="", file="JsonConvert.cs"];
m2_3985 [label=json, span="", file="JsonConvert.cs"];
m2_3991 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span="", file="JsonConvert.cs"];
m2_4004 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonConvert.cs"];
m2_4028 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span="", file="JsonConvert.cs"];
m2_3969 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="JsonConvert.cs"];
m2_4027 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="JsonConvert.cs"];
m2_3964 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span="", file="JsonConvert.cs"];
m2_3992 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span="", file="JsonConvert.cs"];
m2_3997 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonConvert.cs"];
m2_3996 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonConvert.cs"];
m2_4026 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span="", file="JsonConvert.cs"];
m3_457 [label="Assert.IsTrue(await reader.ReadAsync())", span="801-801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_178 [label="Assert.AreEqual(''array'', reader.Path)", span="331-331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_420 [label="Assert.AreEqual(4, reader.LineNumber)", span="751-751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_510 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="879-879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_272 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="527-530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_273 [label="await jsonWriter.WriteStartArrayAsync()", span="532-532", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_274 [label="await jsonWriter.WriteValueAsync(true)", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_275 [label="await jsonWriter.WriteStartObjectAsync()", span="535-535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_276 [label="await jsonWriter.WritePropertyNameAsync(''integer'')", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_277 [label="await jsonWriter.WriteValueAsync(99)", span="537-537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_278 [label="await jsonWriter.WritePropertyNameAsync(''string'')", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_279 [label="await jsonWriter.WriteValueAsync(''how now brown cow?'')", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_280 [label="await jsonWriter.WritePropertyNameAsync(''array'')", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_281 [label="await jsonWriter.WriteStartArrayAsync()", span="542-542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_282 [label="int i = 0", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_283 [label="i < 5", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_284 [label="await jsonWriter.WriteValueAsync(i)", span="545-545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_285 [label="i++", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_286 [label="await jsonWriter.WriteStartObjectAsync()", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_287 [label="await jsonWriter.WritePropertyNameAsync(''decimal'')", span="549-549", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_576 [label="Assert.IsTrue(await r.ReadAsync())", span="971-971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_310 [label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000local, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="560-560", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_20 [label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="80-80", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_21 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="82-82", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_22 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="83-83", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_23 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="84-84", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_24 [label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="85-85", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_27 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="89-89", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_101 [label="Assert.AreEqual(''ABC \ufffd'', await ReadStringAsync(''ABC \\ud800''))", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairReplacementAsync()", file="JsonConvertTest.cs"];
m3_534 [label="taskVersion.Wait()", span="888-888", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_242 [label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="457-465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_243 [label="FakeArrayPool arrayPool = new FakeArrayPool()", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_244 [label="int i = 0", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_245 [label="i < 1000", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_246 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="471-471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_247 [label="reader.ArrayPool = arrayPool", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_248 [label="await reader.ReadAsync()", span="475-475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_249 [label="(i + 1) % 100 == 0", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_250 [label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="482-482", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_251 [label="i++", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_252 [label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_253 [label="Assert.AreEqual(6, arrayPool.FreeArrays.Count)", span="487-487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_80 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", span="128-128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_232 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="439-439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_233 [label="int i = 0", span="444-444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_234 [label="i < 14", span="444-444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_556 [label="string json1 = ''{'a':'bc'}''", span="941-941", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_557 [label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="943-943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_558 [label="Assert.IsTrue(await r.ReadAsync())", span="945-945", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_559 [label="Assert.AreEqual(1, r.LineNumber)", span="946-946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_59 [label="new JsonSerializerSettings\r\n        {\r\n          Formatting = Formatting.Indented\r\n        }", span="136-139", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_95 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", span="241-241", cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs"];
m3_96 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", span="248-248", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs"];
m3_97 [label="object result = JsonConvert.DeserializeObject(string.Empty)", span="250-250", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs"];
m3_98 [label="Assert.IsNull(result)", span="251-251", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs"];
m3_99 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", span="248-248", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs"];
m3_100 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="670-670", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvertTest.cs"];
m3_102 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", span="255-255", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs"];
m3_103 [label="object result = JsonConvert.DeserializeObject(''1'')", span="257-257", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs"];
m3_104 [label="Assert.AreEqual(1L, result)", span="258-258", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs"];
m3_105 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", span="255-255", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs"];
m3_106 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", span="262-262", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs"];
m3_107 [label="int? value = JsonConvert.DeserializeObject<int?>('''')", span="264-264", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs"];
m3_108 [label="Assert.IsNull(value)", span="265-265", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs"];
m3_532 [label="Assert.AreEqual(5, taskInt.Result)", span="882-882", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_171 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_480 [label="Console.WriteLine(converter.GetType().Name + '': '' + date)", span="790-790", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs"];
m3_349 [label="DateTime year2000Utc = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="606-606", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_84 [label="Assert.IsTrue(await reader.ReadAsync())", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="JsonConvertTest.cs"];
m3_85 [label="Assert.IsTrue(await reader.ReadAsync())", span="167-167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="JsonConvertTest.cs"];
m3_86 [label="Assert.IsTrue(await reader.ReadAsync())", span="169-169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="JsonConvertTest.cs"];
m3_87 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="170-170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SurrogatePairValidAsync()", file="JsonConvertTest.cs"];
m3_459 [label="Assert.IsTrue(await reader.ReadAsync())", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_294 [label="await jsonWriter.WriteNullAsync()", span="559-559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_93 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", span="241-241", cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs"];
m3_256 [label="Assert.AreEqual(''1.1'', JsonConvert.ToString(1.1))", span="495-495", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_479 [label="string date = Write(value, converter)", span="788-788", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs"];
m3_533 [label="var taskVersion = JsonConvert.DeserializeObjectAsync<Version>('''2.0''', new JsonSerializerSettings\r\n        {\r\n          Converters = {new VersionConverter()}\r\n        })", span="884-887", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_309 [label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000local, DateFormatHandling.IsoDateFormat), result.IsoDateRoundtrip)", span="559-559", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_544 [label="StringReader sr = new StringReader(json)", span="923-923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_509 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="878-878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_228 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="418-418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="JsonConvertTest.cs"];
m3_164 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_165 [label="await reader.ReadAsync()", span="316-316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_166 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="317-317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_560 [label="Assert.AreEqual(1, r.LinePosition)", span="947-947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_561 [label="Assert.IsTrue(await r.ReadAsync())", span="949-949", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_562 [label="Assert.AreEqual(1, r.LineNumber)", span="950-950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_565 [label="Assert.AreEqual(1, r.LineNumber)", span="954-954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_567 [label="Assert.IsTrue(await r.ReadAsync())", span="957-957", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_570 [label="Assert.IsFalse(await r.ReadAsync())", span="961-961", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_572 [label="r = new JsonTextReader(new StringReader(json2))", span="965-965", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_563 [label="Assert.AreEqual(5, r.LinePosition)", span="951-951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_564 [label="Assert.IsTrue(await r.ReadAsync())", span="953-953", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_569 [label="Assert.AreEqual(10, r.LinePosition)", span="959-959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_566 [label="Assert.AreEqual(9, r.LinePosition)", span="955-955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_568 [label="Assert.AreEqual(1, r.LineNumber)", span="958-958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_571 [label="string json2 = ''\n{'a':'bc'}''", span="963-963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_573 [label="Assert.IsTrue(await r.ReadAsync())", span="967-967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_574 [label="Assert.AreEqual(2, r.LineNumber)", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_575 [label="Assert.AreEqual(1, r.LinePosition)", span="969-969", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_554 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="4252-4252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="JsonConvertTest.cs"];
m3_55 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", span="51-51", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_545 [label="JsonTextReader reader = new JsonTextReader(sr)", span="924-924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_288 [label="await jsonWriter.WriteValueAsync(990.00990099m)", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_184 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_173 [label="Assert.AreEqual(2, reader.Depth)", span="325-325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_174 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_175 [label="await reader.ReadAsync()", span="328-328", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_176 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="329-329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_177 [label="Assert.AreEqual(1, reader.Depth)", span="330-330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_77 [label="Assert.IsTrue(await reader.ReadAsync())", span="153-153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_78 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="154-154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_229 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", span="386-386", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNullAsync()", file="JsonConvertTest.cs"];
m3_81 [label="Entry lambda expression", span="182-185", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_89 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="236-236", cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs"];
m3_91 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="236-236", cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs"];
m3_83 [label="Exit lambda expression", span="182-185", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_88 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="804-804", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonConvertTest.cs"];
m3_90 [label="throw new NotImplementedException();", span="238-238", cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs"];
m3_82 [label="new JsonSerializerSettings\r\n        {\r\n          Formatting = Formatting.Indented\r\n        }", span="182-185", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_92 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="JsonConvertTest.cs"];
m3_10 [label="Assert.AreEqual(2, jsonTextReader.LinePosition)", span="66-66", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_421 [label="Assert.IsTrue(await reader.ReadAsync())", span="753-753", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_416 [label="Assert.AreEqual(4, reader.LineNumber)", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_555 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", span="939-939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_115 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonConvertTest.cs"];
m3_116 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonConvertTest.cs"];
m3_117 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonConvertTest.cs"];
m3_118 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", span="225-225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", file="JsonConvertTest.cs"];
m3_179 [label="await reader.ReadAsync()", span="333-333", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_478 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", span="697-697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_307 [label="string localToUtcDate = year2000local.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="556-556", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_254 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", span="455-455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.BufferTestAsync()", file="JsonConvertTest.cs"];
m3_61 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", span="128-128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_62 [label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="130-130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_63 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="132-132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_64 [label="Assert.IsTrue(await reader.ReadAsync())", span="134-134", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_66 [label="Assert.IsTrue(await reader.ReadAsync())", span="137-137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_70 [label="Assert.IsTrue(await reader.ReadAsync())", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_74 [label="Assert.IsTrue(await reader.ReadAsync())", span="149-149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_65 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="135-135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_67 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="138-138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_69 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="141-141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_68 [label="Assert.IsTrue(await reader.ReadAsync())", span="140-140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_71 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="144-144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_72 [label="Assert.IsTrue(await reader.ReadAsync())", span="146-146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_73 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_75 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="150-150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_76 [label="Assert.AreEqual(''recipe_text'', reader.Value)", span="151-151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.UnescapeDoubleQuotesAsync()", file="JsonConvertTest.cs"];
m3_172 [label="Assert.AreEqual(null, reader.Value)", span="324-324", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.DepthAsync()", file="JsonConvertTest.cs"];
m3_335 [label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="589-589", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_451 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="792-792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_481 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", span="834-834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_482 [label="string json = @''//comment''", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_484 [label="Assert.IsTrue(await reader.ReadAsync())", span="840-840", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_485 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_483 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="838-838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_486 [label="Assert.AreEqual(''comment'', reader.Value)", span="842-842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_487 [label="Assert.IsFalse(await reader.ReadAsync())", span="844-844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_488 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", span="834-834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.JustSinglelineCommentAsync()", file="JsonConvertTest.cs"];
m3_449 [label="Assert.AreEqual(''Price'', reader.Value)", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_450 [label="Assert.IsTrue(await reader.ReadAsync())", span="791-791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_461 [label="Assert.IsTrue(await reader.ReadAsync())", span="807-807", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_462 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="808-808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_463 [label="Assert.IsTrue(await reader.ReadAsync())", span="810-810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_464 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_465 [label="Assert.IsTrue(await reader.ReadAsync())", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_466 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_468 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="817-817", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_470 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="820-820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_467 [label="Assert.IsTrue(await reader.ReadAsync())", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_474 [label="Assert.IsTrue(await reader.ReadAsync())", span="826-826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_471 [label="Assert.IsTrue(await reader.ReadAsync())", span="822-822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_469 [label="Assert.IsTrue(await reader.ReadAsync())", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_472 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_473 [label="Assert.AreEqual(''comment '', reader.Value)", span="824-824", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_475 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="827-827", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_57 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonConvertTest.cs"];
m3_220 [label="Assert.AreEqual(''null'', JsonConvert.ToString(value))", span="441-441", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_225 [label="value = 'c'", span="450-450", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_227 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", span="385-385", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_222 [label="Assert.AreEqual(@''''''I am a string'''''', JsonConvert.ToString(value))", span="445-445", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_224 [label="Assert.AreEqual(''true'', JsonConvert.ToString(value))", span="448-448", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_226 [label="Assert.AreEqual(@''''''c'''''', JsonConvert.ToString(value))", span="451-451", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_221 [label="value = ''I am a string''", span="444-444", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_223 [label="value = true", span="447-447", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_454 [label="Assert.AreEqual(''Sizes'', reader.Value)", span="796-796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SingleLineCommentsAsync()", file="JsonConvertTest.cs"];
m3_123 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now 'brown' cow?'', '''', true)", span="290-290", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_127 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''How \r\nnow brown cow?'', '''', true)", span="296-297", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_129 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'', '''', true)", span="300-300", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_130 [label="Assert.AreEqual(@''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'''''', result)", span="301-301", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_131 [label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'', '''', true)", span="303-304", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_133 [label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(\r\n          ''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '', '''', true)", span="307-309", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_134 [label="Assert.AreEqual(@''''''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '''''', result)", span="310-310", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_135 [label="result =\r\n        JavaScriptUtils.ToEscapedJavaScriptString(\r\n          ''!\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'', '''', true)", span="312-314", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_137 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''^_`abcdefghijklmnopqrstuvwxyz{|}~'', '''', true)", span="317-317", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_138 [label="Assert.AreEqual(@''''''^_`abcdefghijklmnopqrstuvwxyz{|}~'''''', result)", span="318-318", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_139 [label="string data =\r\n        ''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''", span="320-321", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_140 [label="string expected =\r\n        @''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''''''", span="322-323", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_141 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(data, '''', true)", span="325-325", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_143 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''Fred's cat.'', '\'', true)", span="328-328", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_144 [label="Assert.AreEqual(result, @'''Fred\'s cat.''')", span="329-329", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_145 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are you gentlemen?'''' said Cats.'', '''', true)", span="331-331", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_147 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are' you gentlemen?'''' said Cats.'', '''', true)", span="334-334", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_148 [label="Assert.AreEqual(result, @''''''\''''How are' you gentlemen?\'''' said Cats.'''''')", span="335-335", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_149 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''Fred's ''''cat''''.'', '\'', true)", span="337-337", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_151 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u001farray\u003caddress'', '''', true)", span="340-340", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_152 [label="Assert.AreEqual(result, @''''''\u001farray<address'''''')", span="341-341", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_153 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", span="283-283", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_154 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="210-210", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JsonConvertTest.cs"];
m3_156 [label="string result", span="347-347", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_157 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u0085' + ''after'', '''', true)", span="349-349", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_158 [label="Assert.AreEqual(@''''''before\u0085after'''''', result)", span="350-350", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_159 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2028' + ''after'', '''', true)", span="352-352", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_161 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2029' + ''after'', '''', true)", span="355-355", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_162 [label="Assert.AreEqual(@''''''before\u2029after'''''', result)", span="356-356", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_163 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="345-345", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_167 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="176-176", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonConvertTest.cs"];
m3_168 [label="Entry lambda expression", span="363-366", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_169 [label="JsonConvert.ToString(new Version(1, 0))", span="365-365", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_180 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", span="378-378", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs"];
m3_181 [label="string json = JsonConvert.ToString(StringComparison.CurrentCultureIgnoreCase)", span="380-380", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs"];
m3_182 [label="Assert.AreEqual(''1'', json)", span="381-381", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs"];
m3_185 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", span="385-385", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_186 [label="object value", span="387-387", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_188 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="390-390", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_189 [label="value = 1.1", span="392-392", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_190 [label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="393-393", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_192 [label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="396-396", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_193 [label="value = (float)1.1", span="398-398", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_194 [label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="399-399", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_196 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="402-402", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_197 [label="value = (long)1", span="404-404", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_198 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="405-405", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_200 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="408-408", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_201 [label="value = (uint)1", span="410-410", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_202 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="411-411", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_204 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="414-414", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_205 [label="value = (sbyte)1", span="416-416", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_206 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="417-417", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_208 [label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="420-420", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_209 [label="value = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="422-422", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_210 [label="Assert.AreEqual(@''''''1970-01-01T00:00:00Z'''''', JsonConvert.ToString(value))", span="423-423", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_212 [label="Assert.AreEqual(@''''''\/Date(0)\/'''''', JsonConvert.ToString((DateTime)value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.RoundtripKind))", span="426-426", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_213 [label="value = new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero)", span="429-429", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_214 [label="Assert.AreEqual(@''''''1970-01-01T00:00:00+00:00'''''', JsonConvert.ToString(value))", span="430-430", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_216 [label="Assert.AreEqual(@''''''\/Date(0+0000)\/'''''', JsonConvert.ToString((DateTimeOffset)value, DateFormatHandling.MicrosoftDateFormat))", span="433-433", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_217 [label="value = null", span="436-436", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_218 [label="Assert.AreEqual(''null'', JsonConvert.ToString(value))", span="437-437", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_128 [label="Assert.AreEqual(@''''''How \r\nnow brown cow?'''''', result)", span="298-298", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_132 [label="Assert.AreEqual(@''''''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'''''', result)", span="305-305", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_136 [label="Assert.AreEqual(@''''''!\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'''''', result)", span="315-315", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_142 [label="Assert.AreEqual(expected, result)", span="326-326", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_146 [label="Assert.AreEqual(result, @''''''\''''How are you gentlemen?\'''' said Cats.'''''')", span="332-332", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_150 [label="Assert.AreEqual(result, @'''Fred\'s ''''cat''''.''')", span="338-338", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_155 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="345-345", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_160 [label="Assert.AreEqual(@''''''before\u2028after'''''', result)", span="353-353", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs"];
m3_170 [label="Exit lambda expression", span="363-366", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_183 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", span="378-378", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs"];
m3_187 [label="value = 1", span="389-389", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_191 [label="value = 1.1m", span="395-395", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_195 [label="value = (short)1", span="401-401", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_199 [label="value = (byte)1", span="407-407", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_203 [label="value = (ushort)1", span="413-413", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_207 [label="value = (ulong)1", span="419-419", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_211 [label="value = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="425-425", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_215 [label="value = new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero)", span="432-432", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_126 [label="Assert.AreEqual(@''''''How now <brown> cow?'''''', result)", span="294-294", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_125 [label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now <brown> cow?'', '''', true)", span="293-293", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_124 [label="Assert.AreEqual(@''''''How now 'brown' cow?'''''', result)", span="291-291", cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs"];
m3_219 [label="value = DBNull.Value", span="440-440", cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs"];
m3_579 [label="Assert.IsTrue(await r.ReadAsync())", span="975-975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_489 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", span="848-848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_494 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="857-857", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_496 [label="await reader.ReadAsync()", span="861-861", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_495 [label="await reader.ReadAsync()", span="859-859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_498 [label="Assert.AreEqual(0d, reader.Value)", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_497 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_499 [label="await reader.ReadAsync()", span="865-865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_393 [label="Assert.AreEqual(''2000-01-01T01:01:01+01:00'', result.IsoDateRoundtrip)", span="658-658", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_397 [label="Assert.AreEqual(@''\/Date(946683061000+0130)\/'', result.MsDateRoundtrip)", span="663-663", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_398 [label="result = TestDateTime(''DateTimeOffset TimeSpan 13 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)))", span="665-665", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_399 [label="Assert.AreEqual(''2000-01-01T01:01:01+13:00'', result.IsoDateRoundtrip)", span="666-666", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_401 [label="result = TestDateTime(''DateTimeOffset TimeSpan with ticks'', new DateTimeOffset(634663873826822481, TimeSpan.Zero))", span="669-669", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_402 [label="Assert.AreEqual(''2012-03-03T16:03:02.6822481+00:00'', result.IsoDateRoundtrip)", span="670-670", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_404 [label="result = TestDateTime(''DateTimeOffset Min'', DateTimeOffset.MinValue)", span="673-673", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_405 [label="Assert.AreEqual(''0001-01-01T00:00:00+00:00'', result.IsoDateRoundtrip)", span="674-674", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_407 [label="result = TestDateTime(''DateTimeOffset Max'', DateTimeOffset.MaxValue)", span="677-677", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_408 [label="Assert.AreEqual(''9999-12-31T23:59:59.9999999+00:00'', result.IsoDateRoundtrip)", span="678-678", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_409 [label="Assert.AreEqual(@''\/Date(253402300799999+0000)\/'', result.MsDateRoundtrip)", span="679-679", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_411 [label="Assert.AreEqual(''0001-01-01T00:00:00+00:00'', result.IsoDateRoundtrip)", span="682-682", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_412 [label="Assert.AreEqual(@''\/Date(-62135596800000+0000)\/'', result.MsDateRoundtrip)", span="683-683", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_414 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="700-700", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_415 [label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="69-69", cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonConvertTest.cs"];
m3_418 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="164-164", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvertTest.cs"];
m3_419 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvertTest.cs"];
m3_422 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonConvertTest.cs"];
m3_423 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonConvertTest.cs"];
m3_424 [label="Console.WriteLine(name)", span="702-702", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_426 [label="result.IsoDateRoundtrip = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.RoundtripKind)", span="706-706", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_427 [label="value is DateTime", span="707-707", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_428 [label="result.IsoDateLocal = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Local)", span="709-709", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_430 [label="result.IsoDateUtc = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Utc)", span="711-711", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_431 [label="result.MsDateRoundtrip = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.RoundtripKind)", span="714-714", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_433 [label="result.MsDateLocal = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Local)", span="717-717", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_434 [label="result.MsDateUnspecified = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Unspecified)", span="718-718", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_435 [label="result.MsDateUtc = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Utc)", span="719-719", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_437 [label="value is DateTime", span="725-725", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_439 [label="Console.WriteLine(XmlConvert.ToString((DateTimeOffset)(object)value))", span="731-731", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_440 [label="MemoryStream ms = new MemoryStream()", span="736-736", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_442 [label="s.WriteObject(ms, value)", span="738-738", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_443 [label="string json = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="739-739", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_445 [label="Console.WriteLine()", span="743-743", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_446 [label="return result;", span="745-745", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_448 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonConvertTest.cs"];
m3_453 [label="Entry Unk.WriteLine", span="", cluster="Unk.WriteLine", file="JsonConvertTest.cs"];
m3_456 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonConvertTest.cs"];
m3_458 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonConvertTest.cs"];
m3_460 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="JsonConvertTest.cs"];
m3_476 [label="Entry System.Enum.ToString(string)", span="0-0", cluster="System.Enum.ToString(string)", file="JsonConvertTest.cs"];
m3_396 [label="Assert.AreEqual(''2000-01-01T01:01:01+01:30'', result.IsoDateRoundtrip)", span="662-662", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_400 [label="Assert.AreEqual(@''\/Date(946641661000+1300)\/'', result.MsDateRoundtrip)", span="667-667", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_403 [label="Assert.AreEqual(@''\/Date(1330790582682+0000)\/'', result.MsDateRoundtrip)", span="671-671", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_406 [label="Assert.AreEqual(@''\/Date(-62135596800000+0000)\/'', result.MsDateRoundtrip)", span="675-675", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_410 [label="result = TestDateTime(''DateTimeOffset Default'', default(DateTimeOffset))", span="681-681", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_413 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", span="541-541", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_417 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="JsonConvertTest.cs"];
m3_425 [label="DateTimeResult result = new DateTimeResult()", span="704-704", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_429 [label="result.IsoDateUnspecified = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Unspecified)", span="710-710", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_432 [label="value is DateTime", span="715-715", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_436 [label="TestDateTimeFormat(value, new IsoDateTimeConverter())", span="722-722", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_438 [label="Console.WriteLine(XmlConvert.ToString((DateTime)(object)value, XmlDateTimeSerializationMode.RoundtripKind))", span="727-727", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_441 [label="DataContractSerializer s = new DataContractSerializer(typeof(T))", span="737-737", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_444 [label="Console.WriteLine(json)", span="740-740", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_447 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="700-700", cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs"];
m3_452 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonConvertTest.cs"];
m3_455 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonConvertTest.cs"];
m3_477 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", span="810-810", cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs"];
m3_395 [label="result = TestDateTime(''DateTimeOffset TimeSpan 1.5 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(1.5)))", span="661-661", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_394 [label="Assert.AreEqual(@''\/Date(946684861000+0100)\/'', result.MsDateRoundtrip)", span="659-659", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_295 [label="await jsonWriter.WriteNullAsync()", span="560-560", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_296 [label="await jsonWriter.WriteEndArrayAsync()", span="561-561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_297 [label="string json = sb.ToString()", span="564-564", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_298 [label="JsonSerializer serializer = new JsonSerializer()", span="566-566", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_299 [label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="568-568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_300 [label="sb = new StringBuilder()", span="570-570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_301 [label="sw = new StringWriter(sb)", span="571-571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_302 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="573-576", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_303 [label="serializer.Serialize(jsonWriter, jsonObject)", span="578-578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_304 [label="Assert.AreEqual(json, sb.ToString())", span="581-581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_305 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", span="522-522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_306 [label="DateTime year2000local = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local)", span="555-555", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_308 [label="result = TestDateTime(''DateTime Local'', year2000local)", span="558-558", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_313 [label="Entry Unk.WriteEndObjectAsync", span="", cluster="Unk.WriteEndObjectAsync", file="JsonConvertTest.cs"];
m3_314 [label="Entry Unk.WriteEndArrayAsync", span="", cluster="Unk.WriteEndArrayAsync", file="JsonConvertTest.cs"];
m3_315 [label="Entry Unk.WriteNullAsync", span="", cluster="Unk.WriteNullAsync", file="JsonConvertTest.cs"];
m3_316 [label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + @'')\/'', result.MsDateUtc)", span="566-566", cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs"];
m3_312 [label="Entry Unk.WritePropertyNameAsync", span="", cluster="Unk.WritePropertyNameAsync", file="JsonConvertTest.cs"];
m3_311 [label="Entry Unk.WriteStartObjectAsync", span="", cluster="Unk.WriteStartObjectAsync", file="JsonConvertTest.cs"];
m3_317 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonConvertTest.cs"];
m3_318 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonConvertTest.cs"];
m3_319 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonConvertTest.cs"];
m3_320 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_321 [label="int length = 20000", span="587-587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_324 [label="await reader.ReadAsync()", span="592-592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_325 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="593-593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_326 [label="await reader.ReadAsync()", span="595-595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_327 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="596-596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_323 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="590-590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_322 [label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="588-588", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_328 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_329 [label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="598-598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_330 [label="Assert.IsTrue(await reader.ReadAsync())", span="600-600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_331 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="601-601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_332 [label="Assert.IsFalse(await reader.ReadAsync())", span="603-603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_336 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", span="608-608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_337 [label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="610-610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_338 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_334 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_333 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="604-604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LongStringTestAsync()", file="JsonConvertTest.cs"];
m3_339 [label="await reader.ReadAsync()", span="617-617", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_340 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="618-618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_342 [label="Assert.AreEqual(''<'', reader.Value)", span="621-621", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_345 [label="await reader.ReadAsync()", span="626-626", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_346 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="627-627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_347 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", span="608-608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_348 [label="Entry System.Convert.ToChar(string)", span="0-0", cluster="System.Convert.ToChar(string)", file="JsonConvertTest.cs"];
m3_341 [label="await reader.ReadAsync()", span="620-620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_343 [label="await reader.ReadAsync()", span="623-623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_344 [label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="624-624", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.EscapedUnicodeTextAsync()", file="JsonConvertTest.cs"];
m3_350 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", span="631-631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_351 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="633-633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_353 [label="Assert.IsTrue(await reader.ReadAsync())", span="636-636", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_357 [label="Assert.IsTrue(await reader.ReadAsync())", span="642-642", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_358 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="643-643", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_352 [label="reader.SupportMultipleContent = true", span="634-634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_354 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="637-637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_355 [label="Assert.IsTrue(await reader.ReadAsync())", span="639-639", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_356 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_359 [label="Assert.IsTrue(await reader.ReadAsync())", span="645-645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_360 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="646-646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_361 [label="Assert.IsTrue(await reader.ReadAsync())", span="648-648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_362 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="649-649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_364 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_368 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="658-658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_369 [label="Assert.IsTrue(await reader.ReadAsync())", span="660-660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_363 [label="Assert.IsTrue(await reader.ReadAsync())", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_365 [label="Assert.IsTrue(await reader.ReadAsync())", span="654-654", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_366 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="655-655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_367 [label="Assert.IsTrue(await reader.ReadAsync())", span="657-657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_370 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="661-661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_371 [label="Assert.IsTrue(await reader.ReadAsync())", span="663-663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_372 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="664-664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_373 [label="Assert.IsTrue(await reader.ReadAsync())", span="666-666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_374 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="667-667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_375 [label="Assert.IsTrue(await reader.ReadAsync())", span="669-669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_376 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="670-670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_377 [label="Assert.IsTrue(await reader.ReadAsync())", span="672-672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_378 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_379 [label="Assert.IsTrue(await reader.ReadAsync())", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_380 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="676-676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_381 [label="Assert.IsTrue(await reader.ReadAsync())", span="678-678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_382 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="679-679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_383 [label="Assert.IsTrue(await reader.ReadAsync())", span="681-681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_384 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="682-682", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_385 [label="Assert.IsTrue(await reader.ReadAsync())", span="684-684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_386 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="685-685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_387 [label="Assert.IsTrue(await reader.ReadAsync())", span="687-687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_388 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="688-688", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_389 [label="Assert.IsTrue(await reader.ReadAsync())", span="690-690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_390 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="691-691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_391 [label="Assert.IsFalse(await reader.ReadAsync())", span="693-693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_392 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", span="631-631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.SupportMultipleContentAsync()", file="JsonConvertTest.cs"];
m3_268 [label="Assert.AreEqual(JsonConvert.NegativeInfinity, JsonConvert.ToString(Double.NegativeInfinity))", span="507-507", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_550 [label="Assert.AreEqual(decimal.MinValue, min)", span="932-932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_54 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="124-124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_56 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="427-427", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonConvertTest.cs"];
m3_507 [label="Assert.AreEqual(3000000000d, reader.Value)", span="875-875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_577 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="JsonConvertTest.cs"];
m3_578 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonConvertTest.cs"];
m3_580 [label="Newtonsoft.Json.Tests.JsonConvertTest", span="", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_581 [label="Assert.AreEqual(9, r.LinePosition)", span="977-977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_583 [label="Assert.AreEqual(2, r.LineNumber)", span="980-980", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_584 [label="Assert.AreEqual(10, r.LinePosition)", span="981-981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_582 [label="Assert.IsTrue(await r.ReadAsync())", span="979-979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_585 [label="Assert.IsFalse(await r.ReadAsync())", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_586 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", span="939-939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LinePositionOnNewLineAsync()", file="JsonConvertTest.cs"];
m3_553 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonConvertTest.cs"];
m3_11 [label="json = ''\n{\''a\'':\''bc\''}''", span="68-68", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_12 [label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="70-70", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_13 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="72-72", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_14 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="73-73", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_15 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="74-74", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_16 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_58 [label="Entry lambda expression", span="136-139", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_594 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonConvertTest.cs"];
m3_543 [label="string json = sw.ToString()", span="921-921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_94 [label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0", cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonConvertTest.cs"];
m3_501 [label="Assert.AreEqual(0d, reader.Value)", span="867-867", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ScientificNotationAsync()", file="JsonConvertTest.cs"];
m3_542 [label="await writer.WriteEndArrayAsync()", span="919-919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_53 [label="Assert.AreEqual(4, jsonTextReader.LineNumber)", span="123-123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_491 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", span="825-825", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs"];
m3_492 [label="return (value is DateTime) ? ((DateTime)value).Ticks : ((DateTimeOffset)value).Ticks;", span="812-812", cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs"];
m3_500 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonConvertTest.cs"];
m3_503 [label="JsonTextReader reader = new JsonTextReader(new StringReader(text))", span="827-827", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs"];
m3_504 [label="reader.ReadAsString()", span="828-828", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs"];
m3_506 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", span="825-825", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs"];
m3_515 [label="Assert.AreEqual(''42'', task.Result)", span="842-842", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_516 [label="task = JsonConvert.SerializeObjectAsync(new[] {1, 2, 3, 4, 5}, Formatting.Indented)", span="844-844", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_518 [label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5\r\n]'', task.Result)", span="847-853", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_519 [label="task = JsonConvert.SerializeObjectAsync(DateTime.MaxValue, Formatting.None, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="855-858", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_521 [label="Assert.AreEqual(@''''''\/Date(253402300799999)\/'''''', task.Result)", span="861-861", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_522 [label="var taskObject = JsonConvert.DeserializeObjectAsync(''[]'')", span="863-863", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_524 [label="CollectionAssert.AreEquivalent(new JArray(), (JArray)taskObject.Result)", span="866-866", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_525 [label="Task<object> taskVersionArray = JsonConvert.DeserializeObjectAsync(''['2.0']'', typeof(Version[]), new JsonSerializerSettings\r\n        {\r\n          Converters = {new VersionConverter()}\r\n        })", span="868-871", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_527 [label="Version[] versionArray = (Version[])taskVersionArray.Result", span="874-874", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_528 [label="Assert.AreEqual(1, versionArray.Length)", span="876-876", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_502 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonConvertTest.cs"];
m3_505 [label="return (T)converter.ReadJson(reader, typeof(T), null, null);", span="830-830", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs"];
m3_508 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonConvertTest.cs"];
m3_511 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Async()", span="835-835", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_513 [label="task = JsonConvert.SerializeObjectAsync(42)", span="839-839", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_529 [label="Assert.AreEqual(2, versionArray[0].Major)", span="877-877", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_512 [label="Task<string> task = null", span="837-837", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_490 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonConvertTest.cs"];
m3_493 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", span="810-810", cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs"];
m3_514 [label="task.Wait()", span="840-840", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_517 [label="task.Wait()", span="845-845", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_520 [label="task.Wait()", span="859-859", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_523 [label="taskObject.Wait()", span="864-864", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_526 [label="taskVersionArray.Wait()", span="872-872", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_530 [label="Task<int> taskInt = JsonConvert.DeserializeObjectAsync<int>(''5'')", span="879-879", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_531 [label="taskInt.Wait()", span="880-880", cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs"];
m3_551 [label="Assert.IsTrue(await reader.ReadAsync())", span="934-934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_257 [label="Assert.AreEqual(''1.11'', JsonConvert.ToString(1.11))", span="496-496", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_549 [label="decimal? min = await reader.ReadAsDecimalAsync()", span="931-931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_60 [label="Exit lambda expression", span="136-139", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_6 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="60-60", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_31 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="96-96", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_32 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="97-97", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_33 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="98-98", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_34 [label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="99-99", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_36 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="102-102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_40 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="107-107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_44 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="112-112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_48 [label="Assert.AreEqual(JsonToken.Boolean, jsonTextReader.TokenType)", span="117-117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_35 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="101-101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_37 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_39 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="106-106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_38 [label="Assert.AreEqual(5, jsonTextReader.LinePosition)", span="104-104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_41 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="108-108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_42 [label="Assert.AreEqual(4, jsonTextReader.LinePosition)", span="109-109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_43 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="111-111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_45 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="113-113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_46 [label="Assert.AreEqual(9, jsonTextReader.LinePosition)", span="114-114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_47 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_49 [label="Assert.AreEqual(3, jsonTextReader.LineNumber)", span="118-118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_50 [label="Assert.AreEqual(13, jsonTextReader.LinePosition)", span="119-119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_548 [label="Assert.AreEqual(decimal.MaxValue, max)", span="929-929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_231 [label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="424-437", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_119 [label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="227-246", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", file="JsonConvertTest.cs"];
m3_120 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="248-248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", file="JsonConvertTest.cs"];
m3_121 [label="await jsonReader.ReadAsync()", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", file="JsonConvertTest.cs"];
m3_122 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", span="225-225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.YahooFinanceAsync()", file="JsonConvertTest.cs"];
m3_109 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="JsonConvertTest.cs"];
m3_271 [label="StringWriter sw = new StringWriter(sb)", span="525-525", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_595 [label="Entry lambda expression", span="996-996", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_7 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="62-62", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_8 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="64-64", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_9 [label="Assert.AreEqual(1, jsonTextReader.LineNumber)", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_17 [label="Assert.IsTrue(await jsonTextReader.ReadAsync())", span="77-77", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_18 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="78-78", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs"];
m3_19 [label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="79-79", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_28 [label="Assert.AreEqual(10, jsonTextReader.LinePosition)", span="90-90", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_29 [label="json = ''\n{\''a\'':\n\''bc\'',\''d\'':true\n}''", span="92-92", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_30 [label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="94-94", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.LineInfoAndNewLinesAsync()", file="JsonConvertTest.cs", color=green, community=0];
m3_235 [label="Assert.IsTrue(await reader.ReadAsync())", span="446-446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_236 [label="i++", span="444-444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_237 [label="Assert.IsTrue(await reader.ReadAsync())", span="449-449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_238 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="450-450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_239 [label="Assert.AreEqual(''type'', reader.Value)", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_240 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", span="422-422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_596 [label="await r.ReadAsync()", span="996-996", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_597 [label="Exit lambda expression", span="996-996", cluster="lambda expression", file="JsonConvertTest.cs"];
m3_230 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", span="422-422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.AppendCharsWhileReadingNewLineAsync()", file="JsonConvertTest.cs"];
m3_547 [label="decimal? max = await reader.ReadAsDecimalAsync()", span="928-928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_289 [label="await jsonWriter.WriteEndObjectAsync()", span="551-551", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_290 [label="await jsonWriter.WriteValueAsync(5)", span="553-553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_291 [label="await jsonWriter.WriteEndArrayAsync()", span="554-554", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_292 [label="await jsonWriter.WriteEndObjectAsync()", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_293 [label="await jsonWriter.WriteValueAsync(''This is a string.'')", span="558-558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_546 [label="Assert.IsTrue(await reader.ReadAsync())", span="926-926", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", span="53-53", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs"];
m3_25 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", color=green, community=0, file="JsonConvertTest.cs"];
m3_26 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", color=green, community=0, file="JsonConvertTest.cs"];
m3_51 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonConvertTest.cs"];
m3_52 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonConvertTest.cs"];
m3_4 [label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", span="53-53", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs"];
m3_5 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="516-516", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvertTest.cs"];
m3_3 [label="Assert.AreEqual(@''{\r\n  ''''test'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ]\r\n}'', json)", span="64-70", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs"];
m3_2 [label="string json = JsonConvert.SerializeObject(new { test = new[] { 1, 2, 3 } })", span="62-62", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs"];
m3_1 [label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n        {\r\n          Formatting = Formatting.Indented\r\n        }", span="57-60", cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs"];
m3_241 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="JsonConvertTest.cs"];
m3_111 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="218-218", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="JsonConvertTest.cs"];
m3_112 [label="await reader.ReadAsync()", span="219-219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="JsonConvertTest.cs"];
m3_113 [label="return (string)reader.Value;", span="221-221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="JsonConvertTest.cs"];
m3_114 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.ReadStringAsync(string)", file="JsonConvertTest.cs"];
m3_535 [label="Entry Unk.ReadAsDecimalAsync", span="", cluster="Unk.ReadAsDecimalAsync", file="JsonConvertTest.cs"];
m3_536 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_537 [label="StringWriter sw = new StringWriter()", span="913-913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_538 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="914-914", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_540 [label="await writer.WriteValueAsync(decimal.MaxValue)", span="917-917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_539 [label="await writer.WriteStartArrayAsync()", span="916-916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_541 [label="await writer.WriteValueAsync(decimal.MinValue)", span="918-918", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_258 [label="Assert.AreEqual(''1.111'', JsonConvert.ToString(1.111))", span="497-497", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_265 [label="Assert.AreEqual(''1.01'', JsonConvert.ToString(1.01))", span="504-504", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_266 [label="Assert.AreEqual(''1.001'', JsonConvert.ToString(1.001))", span="505-505", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_263 [label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1d))", span="502-502", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_261 [label="Assert.AreEqual(''1.111111'', JsonConvert.ToString(1.111111))", span="500-500", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_260 [label="Assert.AreEqual(''1.11111'', JsonConvert.ToString(1.11111))", span="499-499", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_264 [label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1d))", span="503-503", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_262 [label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1.0))", span="501-501", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_259 [label="Assert.AreEqual(''1.1111'', JsonConvert.ToString(1.1111))", span="498-498", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_267 [label="Assert.AreEqual(JsonConvert.PositiveInfinity, JsonConvert.ToString(Double.PositiveInfinity))", span="506-506", cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs"];
m3_79 [label="Entry System.Collections.ObjectModel.Collection<T>.Clear()", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Clear()", file="JsonConvertTest.cs"];
m3_110 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="706-706", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvertTest.cs"];
m3_255 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonConvertTest.cs"];
m3_269 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", span="522-522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_270 [label="StringBuilder sb = new StringBuilder()", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadWriteAsync()", file="JsonConvertTest.cs"];
m3_552 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.WriteReadBoundaryDecimalsAsync()", file="JsonConvertTest.cs"];
m3_587 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", file="JsonConvertTest.cs"];
m3_590 [label="Assert.IsTrue(await r.ReadAsync())", span="993-993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", file="JsonConvertTest.cs"];
m3_591 [label="Assert.IsTrue(await r.ReadAsync())", span="994-994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", file="JsonConvertTest.cs"];
m3_589 [label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="991-991", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", file="JsonConvertTest.cs"];
m3_592 [label="await ExceptionAssert.ThrowsAsync<JsonReaderException>(async () => { await r.ReadAsync(); }, @''Invalid Unicode escape sequence: \u123!. Path 'prop', line 1, position 11.'')", span="996-996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", file="JsonConvertTest.cs"];
m3_588 [label="string json1 = @''{'prop':'\u123!'}''", span="989-989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", file="JsonConvertTest.cs"];
m3_593 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests.InvalidUnicodeSequence()", file="JsonConvertTest.cs"];
m3_598 [label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests", span="", file="JsonConvertTest.cs"];
m3_599 [label=r, span="", file="JsonConvertTest.cs"];
m4_1706 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonSerializerTest.cs"];
m4_3662 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_3506 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", span="8380-8380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.NewEmployee()", file="JsonSerializerTest.cs"];
m4_807 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs"];
m4_1458 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_1459 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="3433-3433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_1460 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_1925 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="4434-4434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1926 [label="Employee joe = new Employee()", span="4436-4436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1927 [label="joe.Name = ''Joe Employee''", span="4437-4437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1930 [label="joe.Manager = mike", span="4441-4441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1932 [label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="4444-4444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1928 [label="Employee mike = new Employee()", span="4438-4438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1929 [label="mike.Name = ''Mike Manager''", span="4439-4439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1931 [label="mike.Manager = mike", span="4442-4442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1933 [label="Console.WriteLine(json)", span="4457-4457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_1934 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="4434-4434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonSerializerTest.cs"];
m4_42 [label="Assert.AreEqual(xmlText, linqXmlText)", span="125-125", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_1986 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="JsonSerializerTest.cs"];
m4_1416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="3281-3281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs"];
m4_950 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2126-2126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m4_951 [label="_name = name", span="2128-2128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m4_952 [label="Age = age", span="2129-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m4_953 [label="Rank = rank", span="2130-2130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m4_954 [label="Title = title", span="2131-2131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m4_955 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2126-2126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m4_573 [label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1327-1327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m4_443 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1292-1292", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonSerializerTest.cs"];
m4_3071 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="300-300", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs"];
m4_3575 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="8582-8582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3576 [label="return _dictionary.GetEnumerator();", span="8584-8584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="8582-8582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_583 [label="name.pNumbers.Add(p1)", span="1344-1344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs"];
m4_100 [label="NonGenericClass foo3 = new NonGenericClass()", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs"];
m4_1707 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonSerializerTest.cs"];
m4_501 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m4_1550 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs"];
m4_1725 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="783-783", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs"];
m4_630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="1412-1412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m4_2721 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="466-466", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs"];
m4_611 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-8''''?>\r\n<root>\r\n  <A>\r\n    <B name=''''sample'''' />\r\n    <C></C>\r\n    <C></C>\r\n  </A>\r\n</root>'', ToStringWithDeclaration(d2, true))", span="1958-1965", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_1037 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m4_1038 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m4_1039 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="2364-2364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m4_1040 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m4_1041 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="2367-2367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m4_1042 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="2368-2368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m4_1043 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m4_472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m4_180 [label="var equals = XElement.DeepEquals(xmlBack, xml)", span="417-417", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="JsonSerializerTest.cs"];
m4_3664 [label="Entry Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="8994-8994", cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="JsonSerializerTest.cs"];
m4_3665 [label="Exit Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", span="8994-8994", cluster="Newtonsoft.Json.Tests.Serialization.TestComponent.TestComponent()", file="JsonSerializerTest.cs"];
m4_179 [label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="415-415", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="JsonSerializerTest.cs"];
m4_1799 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JsonSerializerTest.cs"];
m4_571 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs"];
m4_216 [label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="537-537", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_1385 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3204-3204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m4_1386 [label=initial, span="3206-3206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m4_1387 [label="Add(pair.Key, pair.Value)", span="3208-3208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m4_1388 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3204-3204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m4_1862 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4312-4312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m4_1863 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'',\r\n        () =>\r\n        {\r\n          //Additional text found in JSON string after finishing deserializing object.\r\n          //Test 1\r\n          var reference = new Dictionary<string, object>();\r\n          reference.Add(''$ref'', 1);\r\n          reference.Add(''$id'', 1);\r\n\r\n          var child = new Dictionary<string, object>();\r\n          child.Add(''_id'', 2);\r\n          child.Add(''Name'', ''Isabell'');\r\n          child.Add(''Father'', reference);\r\n\r\n          var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="4314-4331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m4_1864 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4312-4312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m4_3117 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="7250-7250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3118 [label="return GetEnumerator();", span="7252-7252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="7250-7250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="585-585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_709 [label="Assert.AreEqual(''1'', json)", span="1564-1564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m4_711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1568-1568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_710 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m4_712 [label="PersonRaw personRaw = new PersonRaw\r\n        {\r\n          FirstName = ''FirstNameValue'',\r\n          RawContent = new JRaw(''[1,2,3,4,5]''),\r\n          LastName = ''LastNameValue''\r\n        }", span="1570-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_714 [label="json = JsonConvert.SerializeObject(personRaw)", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_713 [label="string json", span="1577-1577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_715 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="1580-1580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_716 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="1568-1568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_1762 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="4121-4121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1763 [label="GenericListTestClass c = new GenericListTestClass()", span="4123-4123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1764 [label="c.GenericList.Add(''1'')", span="4124-4124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1765 [label="c.GenericList.Add(''2'')", span="4125-4125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1766 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4127-4127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1767 [label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="4129-4129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1768 [label="Assert.AreEqual(2, newValue.GenericList.Count)", span="4130-4130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1769 [label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="4131-4131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_1770 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="4121-4121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonSerializerTest.cs"];
m4_432 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'', true)", span="1246-1246", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonSerializerTest.cs"];
m4_1216 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs"];
m4_653 [label="XmlWriter writer = XmlWriter.Create(xml)", span="2028-2028", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonSerializerTest.cs"];
m4_654 [label="doc.Save(writer)", span="2030-2030", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonSerializerTest.cs"];
m4_655 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="2016-2016", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonSerializerTest.cs"];
m4_659 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2037-2037", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_660 [label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2039-2070", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_656 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs"];
m4_657 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs"];
m4_658 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerTest.cs"];
m4_661 [label="string json = JsonConvert.SerializeXNode(XDocument.Parse(xaml), Formatting.Indented)", span="2072-2072", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_3381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="7943-7943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs"];
m4_3382 [label="Event e1 = new Event\r\n        {\r\n          EventName = ''EventName!''\r\n        }", span="7945-7948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs"];
m4_3383 [label="Event[,] array1 = new [,] { { e1, e1 }, { e1, e1 } }", span="7949-7949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs"];
m4_3384 [label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="7950-7954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs"];
m4_3385 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n          Formatting = Formatting.Indented\r\n        })", span="7956-7960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs"];
m4_3386 [label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$id'''': ''''3'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          },\r\n          {\r\n            ''''$ref'''': ''''3''''\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$ref'''': ''''2''''\r\n    }\r\n  ]\r\n}'', json)", span="7962-7993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs"];
m4_3387 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", span="7943-7943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReferenceTracked3DArray()", file="JsonSerializerTest.cs"];
m4_1120 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m4_1121 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="2552-2552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m4_1122 [label="Assert.AreEqual(3, l.Count)", span="2553-2553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m4_1123 [label="Assert.AreEqual(3.3m, l[0])", span="2555-2555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m4_1124 [label="Assert.AreEqual(null, l[1])", span="2556-2556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m4_1125 [label="Assert.AreEqual(1.1m, l[2])", span="2557-2557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m4_1126 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m4_2615 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6150-6150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m4_2616 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6152-6152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m4_2617 [label="string json = JsonConvert.SerializeObject(d1)", span="6154-6154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m4_2619 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6158-6158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m4_2620 [label="Assert.AreEqual(d1[0], d2[0])", span="6159-6159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m4_2618 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6156-6156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m4_2621 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6150-6150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m4_1017 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2292-2292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m4_1018 [label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="2294-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m4_1019 [label="string json = JsonConvert.SerializeObject(value)", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m4_1020 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m4_1021 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="2292-2292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m4_2079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4820-4820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m4_2080 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="4822-4822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m4_2081 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4823-4823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m4_2082 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="4820-4820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m4_808 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_809 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_810 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1770-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_818 [label="Assert.AreEqual(json, after)", span="1781-1781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_811 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1772-1772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_812 [label="Assert.AreEqual(''After!'', aa.After)", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_813 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1774-1774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_814 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_815 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1776-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_816 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1777-1777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_817 [label="string after = JsonConvert.SerializeObject(aa)", span="1779-1779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_1100 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2517-2517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m4_1101 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="2519-2519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m4_1102 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<TestObjects.Event>(json);\r\n        })", span="2521-2526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m4_1103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="2517-2517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m4_2855 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6664-6664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs"];
m4_327 [label="Article a1 = new Article(''a1'')", span="902-902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_108 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="JsonSerializerTest.cs"];
m4_678 [label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings\r\n            {\r\n                Indent = true,\r\n                OmitXmlDeclaration = true\r\n            })", span="2477-2481", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_1015 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs"];
m4_1551 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs"];
m4_1841 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="4274-4274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1842 [label="Movie p = new Movie()", span="4276-4276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1843 [label="p.Name = ''Existing,''", span="4277-4277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1844 [label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n        })", span="4279-4282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1845 [label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="4284-4284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1846 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="4274-4274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_306 [label="StringAssert.AreEqual(expected, jsonText)", span="850-850", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_2147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="4941-4941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs"];
m4_2269 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5293-5293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m4_2270 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5295-5300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m4_2271 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5302-5302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m4_2272 [label="Assert.AreEqual(40, p.Age)", span="5303-5303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m4_2273 [label="Assert.AreEqual(44.4, p.Height)", span="5304-5304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m4_2274 [label="Assert.AreEqual(4m, p.Price)", span="5305-5305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m4_2275 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5293-5293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m4_1876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1877 [label="var reference = new Dictionary<string, object>()", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1878 [label="reference.Add(''$ref'', null)", span="4338-4338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1879 [label="reference.Add(''$id'', null)", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1880 [label="reference.Add(''blah'', ''blah!'')", span="4340-4340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1884 [label="child.Add(''Father'', reference)", span="4345-4345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1881 [label="var child = new Dictionary<string, object>()", span="4342-4342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1882 [label="child.Add(''_id'', 2)", span="4343-4343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1883 [label="child.Add(''Name'', ''Isabell'')", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1885 [label="var json = JsonConvert.SerializeObject(child)", span="4347-4347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1886 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1887 [label="Assert.AreEqual(3, result.Count)", span="4350-4350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1888 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1889 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4352-4352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_1890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m4_3137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs"];
m4_3138 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="7296-7300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs"];
m4_3139 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+EnumerableClassFailure`1[System.String]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json))", span="7302-7304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs"];
m4_3140 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor_Failure()", file="JsonSerializerTest.cs"];
m4_469 [label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1403-1403", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonSerializerTest.cs"];
m4_470 [label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1405-1405", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonSerializerTest.cs"];
m4_471 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1340-1340", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonSerializerTest.cs"];
m4_2840 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2841 [label="Product product = new Product()", span="6608-6608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2842 [label="product.Name = ''Apple''", span="6609-6609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2843 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6610-6610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2844 [label="product.Price = 3.99M", span="6611-6611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2845 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6612-6612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2846 [label="string json = JsonConvert.SerializeObject(product)", span="6614-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2847 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n        {\r\n          ContractResolver = new MetroPropertyNameResolver(),\r\n          Converters = { new MetroStringConverter() },\r\n          Formatting = Formatting.Indented\r\n        })", span="6622-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2848 [label="Assert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6628-6637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2849 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6645-6645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2850 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new MetroPropertyNameResolver(),\r\n        Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n        Formatting = Formatting.Indented\r\n      })", span="6647-6652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2851 [label="Assert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6654-6661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_2852 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m4_799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1753-1753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_800 [label="JaggedArray aa = new JaggedArray()", span="1755-1755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_801 [label="aa.Before = ''Before!''", span="1756-1756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_802 [label="aa.After = ''After!''", span="1757-1757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_803 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1758-1758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_804 [label="string json = JsonConvert.SerializeObject(aa)", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_805 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1762-1762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_806 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1753-1753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m4_2714 [label="Entry Newtonsoft.Json.Tests.Serialization.Item.Item()", span="8890-8890", cluster="Newtonsoft.Json.Tests.Serialization.Item.Item()", file="JsonSerializerTest.cs"];
m4_2741 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", span="8850-8850", cluster="Newtonsoft.Json.Tests.Serialization.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs"];
m4_1994 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4618-4618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_1995 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4620-4620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_1996 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4622-4622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_1997 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4623-4623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_1998 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4625-4625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_1999 [label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4627-4630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_2000 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n        JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4632-4633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_2001 [label="Assert.AreEqual(2, newDictionary.Count)", span="4635-4635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_2002 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4618-4618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m4_62 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs"];
m4_2518 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="432-432", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m4_544 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m4_550 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="1284-1284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m4_548 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs"];
m4_547 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs"];
m4_545 [label="Assert.AreEqual(guid, c.GuidField)", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m4_549 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m4_546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m4_551 [label="Assert.AreEqual(@''1'', json)", span="1285-1285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m4_679 [label="node.WriteTo(writer)", span="2482-2482", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_1370 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3181-3181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_1371 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3183-3183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_1372 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3185-3185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_1373 [label="Assert.AreEqual(3, dic.Count)", span="3187-3187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_1374 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="3188-3188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_1375 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="3189-3189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_1376 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_1377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3181-3181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_337 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="934-934", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JsonSerializerTest.cs"];
m4_2575 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6082-6082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m4_2576 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6084-6084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m4_2577 [label="Uri uri = new Uri(input)", span="6085-6085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m4_2578 [label="string json = JsonConvert.SerializeObject(uri)", span="6086-6086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m4_2580 [label="Assert.AreEqual(uri, output)", span="6089-6089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m4_2579 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6087-6087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m4_2581 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6082-6082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m4_1466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3441-3441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m4_1467 [label="return _innerDictionary.TryGetValue(key, out value);", span="3443-3443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m4_1468 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="3441-3441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m4_2422 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5760-5760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m4_2423 [label="return _readonlyString;", span="5762-5762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m4_2424 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5760-5760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m4_1828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", span="4205-4205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", file="JsonSerializerTest.cs"];
m4_2839 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="8829-8829", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs"];
m4_3639 [label="return new PersonWithPrivateConstructor();", span="8831-8831", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs"];
m4_3640 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", span="8829-8829", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs"];
m4_1554 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs"];
m4_3238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7621-7621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_3239 [label="Array3D aa = new Array3D()", span="7623-7623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_3240 [label="aa.Before = ''Before!''", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_3241 [label="aa.After = ''After!''", span="7625-7625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_3242 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7626-7626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_3243 [label="string json = JsonConvert.SerializeObject(aa)", span="7628-7628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_3244 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="7630-7630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_3245 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", span="7621-7621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3D()", file="JsonSerializerTest.cs"];
m4_157 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs"];
m4_340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m4_338 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerTest.cs"];
m4_339 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs"];
m4_341 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m4_344 [label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="926-926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m4_342 [label="string jsonText = JsonConvert.SerializeObject(r1)", span="922-922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m4_343 [label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m4_345 [label="CollectionAssert.AreEqual(r1, r2)", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m4_2629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6176-6176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m4_2630 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6178-6178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m4_2631 [label="string json = JsonConvert.SerializeObject(d1)", span="6180-6180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m4_2633 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m4_2634 [label="Assert.AreEqual(d1[0], d2[0])", span="6185-6185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m4_2632 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6182-6182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m4_2635 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6176-6176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m4_594 [label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerTest.cs"];
m4_3037 [label="Entry Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="9081-9081", cluster="Newtonsoft.Json.Tests.Serialization.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m4_1343 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3092-3092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m4_1344 [label="this._dict1.Add(item.Key, item)", span="3094-3094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m4_1345 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3092-3092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m4_2868 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6679-6679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_2869 [label="return objectType == typeof(Color);", span="6681-6681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_2870 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6679-6679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_2109 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs"];
m4_418 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1170-1170", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_2222 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5168-5168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2223 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5170-5170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2224 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2225 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5168-5168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_3197 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7472-7472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m4_3198 [label="IgnoreSerializableAttribute = false", span="7474-7474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m4_3199 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7472-7472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m4_1966 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonSerializerTest.cs"];
m4_511 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="1198-1198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m4_1022 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs"];
m4_1985 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", span="4557-4557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", file="JsonSerializerTest.cs"];
m4_2119 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4906-4906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m4_2120 [label="string json = ''{Amount:123456789876543.21}''", span="4908-4908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m4_2121 [label="Invoice i = JsonConvert.DeserializeObject<Invoice>(json)", span="4909-4909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m4_2122 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="4910-4910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m4_2123 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="4906-4906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m4_2059 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4785-4785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m4_2060 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n        {\r\n          Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n        })", span="4787-4790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m4_2061 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="4792-4792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m4_2062 [label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4793-4793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m4_2063 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4794-4794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m4_2064 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4795-4795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m4_2065 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="4785-4785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m4_2312 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5431-5431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m4_2313 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5433-5433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m4_2314 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5434-5434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m4_2315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5431-5431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m4_3328 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="7858-7858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3329 [label="Array3D aa = new Array3D()", span="7860-7860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3330 [label="aa.Before = ''Before!''", span="7861-7861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3331 [label="aa.After = ''After!''", span="7862-7862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3332 [label="aa.Coordinates = new int[0, 0, 0]", span="7863-7863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3333 [label="string json = JsonConvert.SerializeObject(aa)", span="7865-7865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3334 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="7867-7867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", span="7858-7858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_115 [label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonSerializerTest.cs"];
m4_116 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Country'''': ''''6''''\r\n  },\r\n  {\r\n    ''''FinancialTransactionApprovalRequestUID'''': ''''79''''\r\n  },\r\n  {\r\n    ''''TransactionStatus'''': ''''Approved''''\r\n  },\r\n  {\r\n    ''''StatusChangeComment'''': ''''''''\r\n  },\r\n  {\r\n    ''''RequestedBy'''': ''''Someone''''\r\n  }\r\n]'', json)", span="284-300", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonSerializerTest.cs"];
m4_117 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonSerializerTest.cs"];
m4_118 [label="Entry Unk.Nodes", span="", cluster="Unk.Nodes", file="JsonSerializerTest.cs"];
m4_119 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="309-309", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonSerializerTest.cs"];
m4_120 [label="decimal d = (decimal)Math.PI + 1000000000m", span="311-311", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonSerializerTest.cs"];
m4_121 [label="var x = new DecimalContainer { Number = d }", span="312-312", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonSerializerTest.cs"];
m4_122 [label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="314-314", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonSerializerTest.cs"];
m4_123 [label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="316-320", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonSerializerTest.cs"];
m4_2148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="4929-4929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs"];
m4_3361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="7909-7909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3362 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="7911-7911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3363 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7913-7913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3368 [label="Assert.AreEqual(json, after)", span="7921-7921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3364 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7915-7915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3365 [label="Assert.AreEqual(''After!'', aa.After)", span="7916-7916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3366 [label="Assert.AreEqual(null, aa.Coordinates)", span="7917-7917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3367 [label="string after = JsonConvert.SerializeObject(aa)", span="7919-7919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_3369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", span="7909-7909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNull3DArray()", file="JsonSerializerTest.cs"];
m4_318 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_319 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new BadJsonPropertyClass());\r\n        })", span="891-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_323 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="895-895", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_321 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="176-176", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonSerializerTest.cs"];
m4_324 [label="Exit lambda expression", span="893-896", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_320 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_322 [label="Entry lambda expression", span="893-896", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_325 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs"];
m4_16 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m4_3578 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="8587-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3579 [label="return _dictionary.GetEnumerator();", span="8589-8589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="8587-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8270-8270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m4_3447 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m4_3448 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8274-8274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m4_3450 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'',\r\n        () => JsonConvert.DeserializeObject<IList<long>>(json))", span="8278-8280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m4_3449 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8276-8276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m4_3451 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8270-8270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m4_2654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2655 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n      {\r\n        Integer = new ConvertibleInt(1),\r\n        NullableInteger1 = new ConvertibleInt(2),\r\n        NullableInteger2 = null\r\n      }", span="6234-6239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2656 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6241-6241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2657 [label="Assert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6243-6247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2658 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m4_559 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="1306-1306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m4_567 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="1317-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m4_569 [label="Assert.AreEqual(99, c.Field)", span="1320-1320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m4_568 [label="Assert.AreEqual(0, c.IgnoredField)", span="1319-1319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m4_566 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m4_565 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="1313-1313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m4_560 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="1307-1307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m4_564 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1311-1311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m4_561 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m4_562 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs"];
m4_563 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="1291-1291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs"];
m4_570 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="1311-1311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m4_3287 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="7798-7798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_3288 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7800-7800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_3289 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="7802-7804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_3290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", span="7798-7798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_518 [label="Console.WriteLine(newJson)", span="1600-1600", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonSerializerTest.cs"];
m4_48 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_249 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_20 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m4_2286 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5328-5328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m4_2287 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5330-5330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m4_2288 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5332-5332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m4_2289 [label="Assert.AreEqual(@''{}'', json)", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m4_2290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5328-5328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="63-63", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_1 [label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="65-65", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_2 [label="XmlNodeReader reader = new XmlNodeReader(node)", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_1419 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3339-3339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1420 [label="dictionary == null", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1422 [label=dictionary, span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1421 [label="throw new ArgumentNullException(''dictionary'');", span="3343-3343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1423 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="3348-3348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1424 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3339-3339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_75 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", span="155-155", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Foo.Foo()", file="JsonSerializerTest.cs"];
m4_76 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs"];
m4_77 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs"];
m4_78 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonSerializerTest.cs"];
m4_79 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", span="173-173", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="JsonSerializerTest.cs"];
m4_80 [label="string xml = @''<result xp_0:end=''''2014-08-15 13:12:11.9184'''' xp_0:start=''''2014-08-15 13:11:49.3140'''' xp_0:time_diff=''''22604.3836'''' xmlns:xp_0=''''Test1'''' p2:end=''''2014-08-15 13:13:49.5522'''' p2:start=''''2014-08-15 13:13:49.0268'''' p2:time_diff=''''525.4646'''' xmlns:p2=''''Test2'''' />''", span="175-175", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="JsonSerializerTest.cs"];
m4_81 [label="XDocument d = XDocument.Parse(xml)", span="177-177", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXDocument()", file="JsonSerializerTest.cs"];
m4_2391 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5676-5676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m4_2392 [label="throw new NotImplementedException();", span="5678-5678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m4_2393 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5676-5676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m4_2534 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2535 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="6023-6023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2536 [label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="6025-6025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2537 [label="Assert.AreEqual(2, values.Count)", span="6027-6027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2538 [label="Assert.AreEqual(''aaa'', values[0].Key)", span="6028-6028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2539 [label="Assert.AreEqual(2, values[0].Value.Count)", span="6029-6029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2540 [label="Assert.AreEqual(''1'', values[0].Value[0])", span="6030-6030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2541 [label="Assert.AreEqual(''2'', values[0].Value[1])", span="6031-6031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2542 [label="Assert.AreEqual(''bbb'', values[1].Key)", span="6032-6032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2543 [label="Assert.AreEqual(2, values[1].Value.Count)", span="6033-6033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2544 [label="Assert.AreEqual(''3'', values[1].Value[0])", span="6034-6034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2545 [label="Assert.AreEqual(''4'', values[1].Value[1])", span="6035-6035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_3294 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="7808-7808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3295 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3296 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7812-7812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3305 [label="Assert.AreEqual(json, after)", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3297 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7814-7814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3298 [label="Assert.AreEqual(''After!'', aa.After)", span="7815-7815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3299 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7816-7816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3300 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7817-7817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3301 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="7818-7818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3302 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="7819-7819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3303 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3304 [label="string after = JsonConvert.SerializeObject(aa)", span="7822-7822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_3306 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", span="7808-7808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D()", file="JsonSerializerTest.cs"];
m4_770 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m4_771 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1685-1690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m4_772 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m4_773 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1694-1694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m4_774 [label="Assert.AreEqual(null, c.MiddleName)", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m4_775 [label="Assert.AreEqual(null, c.LastName)", span="1696-1696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m4_776 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m4_2951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6830-6830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2952 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="6832-6836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2953 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6838-6838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2954 [label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="6840-6843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2955 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2956 [label="Assert.AreEqual(2, dic2.Count)", span="6847-6847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2957 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6848-6848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2958 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6849-6849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="6830-6830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m4_2863 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonSerializerTest.cs"];
m4_329 [label="ArticleCollection articles1 = new ArticleCollection()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_332 [label="string jsonText = JsonConvert.SerializeObject(articles1)", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_330 [label="articles1.Add(a1)", span="906-906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_331 [label="articles1.Add(a2)", span="907-907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_333 [label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="911-911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_335 [label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="914-914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_334 [label="Assert.AreEqual(articles1.Count, articles2.Count)", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_336 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs"];
m4_3105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7222-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m4_3106 [label="string json =\r\n        JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n          })", span="7224-7228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m4_3107 [label="Assert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7230-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m4_3108 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7222-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m4_1742 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4083-4083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1743 [label="throw new NotImplementedException();", span="4085-4085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4083-4083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1278 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs"];
m4_3085 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs"];
m4_1759 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="4114-4114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs"];
m4_1760 [label="GenericList = new List<string>()", span="4116-4116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs"];
m4_1761 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="4114-4114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonSerializerTest.cs"];
m4_462 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs"];
m4_465 [label="string json = JsonConvert.SerializeObject(new object())", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m4_463 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="659-659", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs"];
m4_464 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m4_466 [label="Assert.AreEqual(''{}'', json)", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m4_467 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m4_468 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonSerializerTest.cs"];
m4_474 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m4_476 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m4_475 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1146-1146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m4_477 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m4_478 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1150-1150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m4_1155 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2624-2624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m4_1156 [label="string json = @''[]''", span="2626-2626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m4_1157 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<DynamicDictionary>(json);\r\n        })", span="2628-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m4_1158 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="2624-2624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m4_3683 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="9057-9057", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m4_3684 [label="return '':::'' + propertyName.ToUpper(CultureInfo.InvariantCulture) + '':::'';", span="9060-9060", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m4_3685 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", span="9057-9057", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m4_438 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="1096-1096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_619 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1969-1969", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonSerializerTest.cs"];
m4_136 [label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="343-343", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="JsonSerializerTest.cs"];
m4_3247 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7634-7634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3248 [label="Array3DWithConverter aa = new Array3DWithConverter()", span="7636-7636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3249 [label="aa.Before = ''Before!''", span="7637-7637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3250 [label="aa.After = ''After!''", span="7638-7638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3251 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="7639-7639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3252 [label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="7641-7641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3253 [label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="7643-7696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3254 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", span="7634-7634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_82 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="JsonSerializerTest.cs"];
m4_83 [label="var c = JsonConvert.DeserializeObject<ExtensionDataAttributesInheritanceTestClass>(''{'first':1,'second':2}'')", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="JsonSerializerTest.cs"];
m4_84 [label="Assert.AreEqual(null, c.ExtensionData1)", span="310-310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="JsonSerializerTest.cs"];
m4_85 [label="Assert.AreEqual(null, c.ExtensionData2)", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="JsonSerializerTest.cs"];
m4_86 [label="Assert.AreEqual(2, c.ExtensionData0.Count)", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="JsonSerializerTest.cs"];
m4_133 [label="Console.WriteLine(json)", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_140 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="511-511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m4_137 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs"];
m4_139 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="503-509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m4_141 [label="baseWith.Virtual = ''Virtual2!''", span="512-512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m4_138 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m4_142 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="513-513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m4_135 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_134 [label="Assert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="492-497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_143 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="514-514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m4_21 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="171-171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m4_1435 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs"];
m4_1483 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3489-3489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m4_1484 [label="_stringValue = stringValue", span="3491-3491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m4_1485 [label="_intValue = intValue", span="3492-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m4_1486 [label="_dateTimeOffsetValue = dateTimeOffset", span="3493-3493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m4_1487 [label="_personValue = personValue", span="3494-3494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m4_1488 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="3495-3495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m4_1489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="3489-3489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m4_1426 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3383-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_1427 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="3385-3385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_1428 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="3383-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_182 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="404-404", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="JsonSerializerTest.cs"];
m4_1902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m4_1903 [label="string json = @''{'value':9.9}''", span="4384-4384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m4_1904 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n        json, new JsonSerializerSettings\r\n                {\r\n                  FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4386-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m4_1905 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m4_1906 [label="Assert.AreEqual(9.9m, dic[''value''])", span="4393-4393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m4_1907 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m4_2111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4892-4892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m4_2112 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="4894-4894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m4_2113 [label="Assert.AreEqual(123456789876543.21m, d)", span="4895-4895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m4_2114 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="4892-4892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m4_2338 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs"];
m4_1908 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="4397-4397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1909 [label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="4399-4399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1910 [label="c.Name = ''James''", span="4400-4400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1911 [label="c.Age = 27", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1912 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4403-4403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1914 [label="c._shouldSerializeName = true", span="4409-4409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1915 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4410-4410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1913 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="4405-4407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1916 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="4412-4415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1917 [label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="4417-4417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1918 [label="Assert.AreEqual(''James'', deserialized.Name)", span="4418-4418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1919 [label="Assert.AreEqual(27, deserialized.Age)", span="4419-4419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_1920 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="4397-4397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonSerializerTest.cs"];
m4_3671 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonSerializerTest.cs"];
m4_3131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="7282-7282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3132 [label="return _values.GetEnumerator();", span="7284-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", span="7282-7282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_502 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1186-1186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m4_906 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="585-585", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_28 [label="JsonTextReader reader", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_29 [label="reader = new JsonTextReader(new StringReader(json))", span="102-102", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_30 [label="reader.Read()", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_31 [label="XmlNodeConverter converter = new XmlNodeConverter()", span="104-104", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_32 [label="deserializeRootElementName != null", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_33 [label="converter.DeserializeRootElementName = deserializeRootElementName", span="107-107", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_34 [label="XmlNode node = (XmlNode)converter.ReadJson(reader, typeof(XmlDocument), null, new JsonSerializer())", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_35 [label="string xmlText = node.OuterXml", span="113-113", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_36 [label="reader = new JsonTextReader(new StringReader(json))", span="115-115", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_37 [label="reader.Read()", span="116-116", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_38 [label="XDocument d = (XDocument)converter.ReadJson(reader, typeof(XDocument), null, new JsonSerializer())", span="117-117", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_39 [label="string linqXmlText = d.ToString(SaveOptions.DisableFormatting)", span="119-119", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_40 [label="d.Declaration != null", span="120-120", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_41 [label="linqXmlText = d.Declaration + linqXmlText", span="122-122", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonSerializerTest.cs"];
m4_1678 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3966-3966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1679 [label="XNodeTestObject testObject = new XNodeTestObject()", span="3968-3968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1680 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="3969-3969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1681 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="3970-3970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1682 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="3972-3972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1686 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="3988-3988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1687 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="3989-3989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1683 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="3973-3984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1684 [label="Assert.AreEqual(expected, json)", span="3985-3985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1685 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="3987-3987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1688 [label="Assert.IsNull(newTestObject.Element.Parent)", span="3991-3991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_1689 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="3966-3966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m4_17 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m4_3370 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="7925-7925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3371 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="7927-7927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3372 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7929-7929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3379 [label="Assert.AreEqual(json, after)", span="7939-7939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3373 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7931-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3374 [label="Assert.AreEqual(''After!'', aa.After)", span="7932-7932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3375 [label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="7933-7933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3376 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="7934-7934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3377 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="7935-7935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3378 [label="string after = JsonConvert.SerializeObject(aa)", span="7937-7937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3380 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", span="7925-7925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSemiEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_262 [label="Assert.AreEqual(expected, jsonText)", span="635-635", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonSerializerTest.cs"];
m4_263 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="623-623", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonSerializerTest.cs"];
m4_264 [label="Entry Unk.CreateDocumentFragment", span="", cluster="Unk.CreateDocumentFragment", file="JsonSerializerTest.cs"];
m4_265 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="639-639", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_266 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8''''?><!DOCTYPE STOCKQUOTE PUBLIC ''''-//W3C//DTD StockQuote 1.5//EN'''' ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''><STOCKQUOTE ROWCOUNT=''''2''''><RESULT><ROW><ASK>0</ASK><BID>0</BID><CHANGE>-16.310</CHANGE><COMPANYNAME>Dow Jones</COMPANYNAME><DATETIME>2014-04-17 15:50:37</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>16460.490</HIGH><LASTDATETIME>2014-04-17 15:50:37</LASTDATETIME><LASTPRICE>16408.540</LASTPRICE><LOW>16368.140</LOW><OPEN>16424.140</OPEN><PCHANGE>-0.099</PCHANGE><PE>0</PE><PREVIOUSCLOSE>16424.850</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>DJII</TICKER><TRADES>0</TRADES><VOLUME>136188700</VOLUME><YEARHIGH>11309.000</YEARHIGH><YEARLOW>9302.280</YEARLOW><YIELD>0</YIELD></ROW><ROW><ASK>0</ASK><BID>0</BID><CHANGE>9.290</CHANGE><COMPANYNAME>NASDAQ</COMPANYNAME><DATETIME>2014-04-17 15:40:01</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>4110.460</HIGH><LASTDATETIME>2014-04-17 15:40:01</LASTDATETIME><LASTPRICE>4095.520</LASTPRICE><LOW>4064.700</LOW><OPEN>4080.300</OPEN><PCHANGE>0.227</PCHANGE><PE>0</PE><PREVIOUSCLOSE>4086.230</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>COMP</TICKER><TRADES>0</TRADES><VOLUME>1784210100</VOLUME><YEARHIGH>4371.710</YEARHIGH><YEARLOW>3154.960</YEARLOW><YIELD>0</YIELD></ROW></RESULT><STATUS>Couldn't find ticker: SPIC?</STATUS><STATUSCODE>2</STATUSCODE></STOCKQUOTE>''", span="641-641", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_267 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''!DOCTYPE'''': {\r\n    ''''@name'''': ''''STOCKQUOTE'''',\r\n    ''''@public'''': ''''-//W3C//DTD StockQuote 1.5//EN'''',\r\n    ''''@system'''': ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''\r\n  },\r\n  ''''STOCKQUOTE'''': {\r\n    ''''@ROWCOUNT'''': ''''2'''',\r\n    ''''RESULT'''': {\r\n      ''''ROW'''': [\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''-16.310'''',\r\n          ''''COMPANYNAME'''': ''''Dow Jones'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''16460.490'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''LASTPRICE'''': ''''16408.540'''',\r\n          ''''LOW'''': ''''16368.140'''',\r\n          ''''OPEN'''': ''''16424.140'''',\r\n          ''''PCHANGE'''': ''''-0.099'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''16424.850'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''DJII'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''136188700'''',\r\n          ''''YEARHIGH'''': ''''11309.000'''',\r\n          ''''YEARLOW'''': ''''9302.280'''',\r\n          ''''YIELD'''': ''''0''''\r\n        },\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''9.290'''',\r\n          ''''COMPANYNAME'''': ''''NASDAQ'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''4110.460'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''LASTPRICE'''': ''''4095.520'''',\r\n          ''''LOW'''': ''''4064.700'''',\r\n          ''''OPEN'''': ''''4080.300'''',\r\n          ''''PCHANGE'''': ''''0.227'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''4086.230'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''COMP'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''1784210100'''',\r\n          ''''YEARHIGH'''': ''''4371.710'''',\r\n          ''''YEARLOW'''': ''''3154.960'''',\r\n          ''''YIELD'''': ''''0''''\r\n        }\r\n      ]\r\n    },\r\n    ''''STATUS'''': ''''Couldn't find ticker: SPIC?'''',\r\n    ''''STATUSCODE'''': ''''2''''\r\n  }\r\n}''", span="643-712", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_1432 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3393-3393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m4_1433 [label="_innerDictionary.Clear()", span="3395-3395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m4_1434 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="3393-3393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m4_253 [label="string json = SerializeXmlNode(node)", span="609-609", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="JsonSerializerTest.cs"];
m4_2291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5337-5337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs"];
m4_2331 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs"];
m4_3604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8665-8665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs"];
m4_3605 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+PrivateDefaultCtorList`1[System.Int32]. Path '', line 1, position 1.'',\r\n        () => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')\r\n        )", span="8667-8670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs"];
m4_3606 [label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\r\n        {\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        })", span="8672-8675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs"];
m4_3607 [label="Assert.AreEqual(2, list.Count)", span="8677-8677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs"];
m4_3608 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", span="8665-8665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListCtor()", file="JsonSerializerTest.cs"];
m4_680 [label="writer.Flush()", span="2483-2483", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_681 [label="string xaml2 = sw.ToString()", span="2485-2485", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_682 [label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2487-2518", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_683 [label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2520-2520", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_684 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_685 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2524-2524", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonSerializerTest.cs"];
m4_686 [label="string json = @''{''''item'''': {''''@action'''': ''''update'''', ''''@itemid'''': ''''1'''', ''''elements'''': [{''''@action'''': ''''none'''', ''''@id'''': ''''2''''},{''''@action'''': ''''none'''', ''''@id'''': ''''3''''}],''''@description'''': ''''temp''''}}''", span="2526-2526", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonSerializerTest.cs"];
m4_687 [label="XmlDocument xmldoc = JsonConvert.DeserializeXmlNode(json)", span="2528-2528", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonSerializerTest.cs"];
m4_688 [label="Assert.AreEqual(@''<item action=''''update'''' itemid=''''1'''' description=''''temp''''><elements action=''''none'''' id=''''2'''' /><elements action=''''none'''' id=''''3'''' /></item>'', xmldoc.InnerXml)", span="2530-2530", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonSerializerTest.cs"];
m4_689 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2524-2524", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonSerializerTest.cs"];
m4_1217 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m4_1218 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2750-2763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m4_1219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m4_2154 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4984-4984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs"];
m4_2155 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="4984-4984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs"];
m4_1620 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3933-3933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1667 [label="BB_field1 = g", span="3936-3936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1668 [label="BB_field2 = g", span="3937-3937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1669 [label="BB_property1 = g", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1670 [label="BB_property2 = g", span="3939-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1671 [label="BB_property3 = g", span="3940-3940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1672 [label="BB_property4 = g", span="3941-3941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1673 [label="BB_property5 = g", span="3942-3942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1674 [label="BB_property6 = g", span="3943-3943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1675 [label="BB_property7 = g", span="3944-3944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1676 [label="BB_property8 = g", span="3945-3945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_1677 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="3933-3933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m4_2871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6692-6692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2872 [label="MemoryStream ms = new MemoryStream()", span="6694-6694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2873 [label="BsonWriter writer = new BsonWriter(ms)", span="6695-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2877 [label="byte[] data = ms.ToArray()", span="6700-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2874 [label="writer.WriteStartArray()", span="6696-6696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2875 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6697-6697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2876 [label="writer.WriteEndArray()", span="6698-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2878 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n        {\r\n          ReadRootValueAsArray = true\r\n        }", span="6701-6704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2879 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2880 [label="JValue v = (JValue)a[0]", span="6707-6707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2882 [label="Console.WriteLine(a.ToString())", span="6709-6709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2881 [label="Console.WriteLine(v.Value.GetType())", span="6708-6708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_2883 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6692-6692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m4_407 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="1033-1033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_410 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_412 [label="values.Add(int.MinValue, int.MaxValue)", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1038-1038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_411 [label="values.Add(-5, 6)", span="1041-1041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_408 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1022-1022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_413 [label="string json = JsonConvert.SerializeObject(values)", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_704 [label="Assert.AreEqual(xml.Name, w2.Name)", span="2574-2574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonSerializerTest.cs"];
m4_705 [label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2575-2575", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonSerializerTest.cs"];
m4_706 [label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2576-2576", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonSerializerTest.cs"];
m4_707 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2568-2568", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonSerializerTest.cs"];
m4_708 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", span="2560-2560", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", file="JsonSerializerTest.cs"];
m4_1023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2305-2305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1024 [label="Content content = new Content\r\n        {\r\n          Text = ''Blah, blah, blah'',\r\n          Children = new List<Content>\r\n            {\r\n              new Content {Text = ''First''},\r\n              new Content {Text = ''Second''}\r\n            }\r\n        }", span="2307-2315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1025 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="2317-2317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1026 [label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="2319-2331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1027 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="2305-2305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_2023 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs"];
m4_1362 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs"];
m4_1967 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4567-4567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1968 [label="FamilyDetails joe = new FamilyDetails()", span="4569-4569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1969 [label="joe.Name = ''Joe Family Details''", span="4570-4570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1970 [label="joe.NumberOfChildren = 4", span="4571-4571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1971 [label="joe.NumberOfChildrenSpecified = true", span="4572-4572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1976 [label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="4579-4579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1972 [label="FamilyDetails martha = new FamilyDetails()", span="4574-4574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1973 [label="martha.Name = ''Martha Family Details''", span="4575-4575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1974 [label="martha.NumberOfChildren = 3", span="4576-4576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1975 [label="martha.NumberOfChildrenSpecified = false", span="4577-4577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1977 [label="Console.WriteLine(json)", span="4589-4589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1978 [label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="4591-4591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1979 [label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="4592-4592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1980 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4594-4594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1981 [label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="4596-4596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1982 [label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1983 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="4599-4599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_1984 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="4567-4567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonSerializerTest.cs"];
m4_2137 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="JsonSerializerTest.cs"];
m4_2303 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5399-5399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m4_2304 [label="B = 2", span="5401-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m4_2305 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5399-5399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m4_579 [label="StringAssert.AreEqual(@''<test>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>'', IndentXml(xmlProduct.InnerXml))", span="1842-1850", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_580 [label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented, true)", span="1852-1852", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_581 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Hi'''',\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output2)", span="1854-1864", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_584 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m4_585 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1867-1867", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_582 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1827-1827", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_586 [label="XmlReader reader = XmlReader.Create(new StringReader(xml))", span="1869-1869", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_587 [label="StringWriter sw = new StringWriter()", span="1871-1871", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_588 [label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true, OmitXmlDeclaration = true })", span="1872-1872", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_589 [label="reader.Read()", span="1874-1874", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_590 [label="writer.WriteNode(reader, false)", span="1876-1876", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_591 [label="writer.Flush()", span="1879-1879", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_592 [label="return sw.ToString();", span="1881-1881", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_1518 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs"];
m4_158 [label="MemoryStream ms = new MemoryStream()", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_160 [label="s.WriteObject(ms, o)", span="561-561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_164 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="567-567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_159 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="560-560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_161 [label="var data = ms.ToArray()", span="563-563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_163 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_165 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="568-568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_167 [label="Console.WriteLine(''DataContractJsonSerializer: '' + dataContractJson)", span="571-571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_170 [label=dataContractJson, span="575-575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_162 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="564-564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_166 [label="Console.WriteLine(''Results for '' + o.GetType().Name)", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_168 [label="Console.WriteLine(''JsonDotNetSerializer      : '' + jsonNetJson)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_169 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_171 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_172 [label="return jsonNetJson.ToString();", span="580-580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_173 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="557-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_1559 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1560 [label="Person person = new Person()", span="3629-3629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1561 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3630-3630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1562 [label="person.LastModified = person.BirthDate", span="3631-3631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1563 [label="person.Department = ''Department!''", span="3632-3632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1564 [label="person.Name = ''Name!''", span="3633-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1568 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3643-3643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1565 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3635-3635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1566 [label="string dateTimeOffsetText", span="3636-3636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1574 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3674-3674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1567 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="3638-3638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1570 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3646-3669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1569 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3645-3645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1571 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3671-3671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1572 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3672-3672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1573 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1575 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3675-3675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1576 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3676-3676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1577 [label="Assert.AreEqual(null, o2._nullableInt)", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_1578 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m4_2674 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", span="8911-8911", cluster="Newtonsoft.Json.Tests.Serialization.WidgetId.WidgetId()", file="JsonSerializerTest.cs"];
m4_3634 [label="Entry Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", span="8722-8722", cluster="Newtonsoft.Json.Tests.Serialization.SelectListItem.SelectListItem()", file="JsonSerializerTest.cs"];
m4_2636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2637 [label="Bb b = new Bb()", span="6191-6191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2638 [label="b.no = true", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2639 [label="Aa a = b", span="6193-6193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2641 [label="string json = JsonConvert.SerializeObject(b)", span="6196-6196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2640 [label="a.no = int.MaxValue", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2642 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6198-6198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2643 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2644 [label="Assert.AreEqual(true, b2.no)", span="6202-6202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_2645 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m4_761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1657-1657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_762 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n        {\r\n          BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n          FirstName = ''Bob'',\r\n          LastName = ''Smith'',\r\n          MiddleName = ''Cosmo''\r\n        }", span="1659-1665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_763 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_764 [label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="1669-1674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_765 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1676-1676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_766 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1678-1678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_767 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1679-1679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_768 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="1657-1657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_177 [label="var xml = XElement.Parse(xmlString)", span="412-412", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="JsonSerializerTest.cs"];
m4_2352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5581-5581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m4_2353 [label="Title = title", span="5583-5583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m4_2354 [label="Categories = new List<string>()", span="5584-5584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m4_2355 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5581-5581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m4_2740 [label="Entry Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", span="8844-8844", cluster="Newtonsoft.Json.Tests.Serialization.Widget1.Widget1()", file="JsonSerializerTest.cs"];
m4_703 [label="var w2 = JsonConvert.DeserializeObject<NullableXml>(json)", span="2573-2573", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonSerializerTest.cs"];
m4_2206 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="5130-5130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m4_2207 [label="Value = val", span="5132-5132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m4_2208 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", span="5130-5130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m4_2519 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs"];
m4_2885 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs"];
m4_1800 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1801 [label="writer.WriteValue(value)", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1802 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1389 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m4_1390 [label="B value = new B()", span="3250-3250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m4_1391 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="3251-3251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m4_1392 [label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="3253-3258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m4_1393 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m4_915 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2024-2024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m4_916 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="2026-2026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m4_917 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'',\r\n        () =>\r\n        {\r\n          JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n          o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n          JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n        })", span="2028-2036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m4_918 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2024-2024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m4_2268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", span="5267-5267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs"];
m4_3492 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="8384-8384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="JsonSerializerTest.cs"];
m4_3493 [label="return false;", span="8386-8386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="JsonSerializerTest.cs"];
m4_3494 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", span="8384-8384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewEmployee.ShouldSerializeName()", file="JsonSerializerTest.cs"];
m4_2462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5881-5881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs"];
m4_2463 [label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="5883-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs"];
m4_2464 [label="Assert.AreEqual(1, dictionary.Count)", span="5884-5884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs"];
m4_2465 [label="Assert.AreEqual(''value!'', dictionary[''name''])", span="5885-5885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs"];
m4_2466 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", span="5881-5881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIDictionary()", file="JsonSerializerTest.cs"];
m4_3680 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="9049-9049", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3681 [label="return objectType == typeof(string);", span="9051-9051", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3682 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", span="9049-9049", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_777 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m4_778 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'FirstName' expects a value but got null. Path '', line 6, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1702-1714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m4_779 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m4_3655 [label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="8924-8924", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="JsonSerializerTest.cs"];
m4_3656 [label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", span="8924-8924", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject()", file="JsonSerializerTest.cs"];
m4_1716 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="4048-4048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs"];
m4_3414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8174-8174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m4_3415 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8176-8180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m4_3416 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ'')\r\n        })", span="8182-8186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m4_3417 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8188-8191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m4_3418 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8174-8174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m4_89 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataAttributesInheritanceTest()", file="JsonSerializerTest.cs"];
m4_1741 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonSerializerTest.cs"];
m4_1429 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3388-3388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m4_1430 [label="_innerDictionary.Add(key, value)", span="3390-3390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m4_1431 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="3388-3388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m4_3698 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="9141-9141", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="JsonSerializerTest.cs"];
m4_3699 [label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", span="9141-9141", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeAge()", file="JsonSerializerTest.cs"];
m4_27 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m4_43 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="148-148", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m4_44 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonSerializerTest.cs"];
m4_2599 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m4_246 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_1469 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m4_1264 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2860-2860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1265 [label="Foo f = new Foo()", span="2862-2862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1266 [label="f.Bars.Add(new Bar { Id = 0 })", span="2863-2863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1267 [label="f.Bars.Add(new Bar { Id = 1 })", span="2864-2864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1268 [label="f.Bars.Add(new Bar { Id = 2 })", span="2865-2865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1269 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="2867-2867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1270 [label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="2868-2874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1271 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="2876-2876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1272 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="2877-2877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1273 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="2878-2878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1274 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="2879-2879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1275 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="2880-2880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1276 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="2860-2860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m4_1525 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3521-3521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1526 [label="info.AddValue(''stringValue'', _stringValue)", span="3523-3523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1527 [label="info.AddValue(''intValue'', _intValue)", span="3524-3524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1528 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="3525-3525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1529 [label="info.AddValue(''personValue'', _personValue)", span="3526-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1530 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="3527-3527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1531 [label="info.AddValue(''nullableInt'', null)", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1532 [label="info.AddValue(''booleanValue'', _booleanValue)", span="3530-3530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1533 [label="info.AddValue(''byteValue'', _byteValue)", span="3531-3531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1534 [label="info.AddValue(''charValue'', _charValue)", span="3532-3532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1535 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1536 [label="info.AddValue(''decimalValue'', _decimalValue)", span="3534-3534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1537 [label="info.AddValue(''shortValue'', _shortValue)", span="3535-3535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1538 [label="info.AddValue(''longValue'', _longValue)", span="3536-3536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1539 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="3537-3537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1540 [label="info.AddValue(''floatValue'', _floatValue)", span="3538-3538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1541 [label="info.AddValue(''ushortValue'', _ushortValue)", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1542 [label="info.AddValue(''uintValue'', _uintValue)", span="3540-3540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1543 [label="info.AddValue(''ulongValue'', _ulongValue)", span="3541-3541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1544 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3521-3521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_326 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs"];
m4_328 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs"];
m4_3134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="7287-7287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3135 [label="return GetEnumerator();", span="7289-7289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="7287-7287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_439 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_442 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_444 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="742-742", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_441 [label="Assert.AreEqual(d, anonymous.DateValue)", span="1100-1100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_440 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_445 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="1104-1104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs"];
m4_2446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5851-5851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m4_2447 [label="Exceptions = new List<Exception>()", span="5853-5853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m4_2448 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="5851-5851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m4_746 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2662-2662", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonSerializerTest.cs"];
m4_747 [label="string xmlString = @''<myemptynode />''", span="2664-2664", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonSerializerTest.cs"];
m4_748 [label="var xml = XElement.Parse(xmlString)", span="2666-2666", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonSerializerTest.cs"];
m4_750 [label="Assert.AreEqual(''null'', json)", span="2670-2670", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonSerializerTest.cs"];
m4_749 [label="string json = JsonConvert.SerializeXNode(xml, Formatting.Indented, true)", span="2668-2668", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonSerializerTest.cs"];
m4_751 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2662-2662", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonSerializerTest.cs"];
m4_752 [label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_753 [label=json, span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_754 [label=json, span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_756 [label=json, span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_755 [label=json, span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_757 [label=json, span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_758 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="1653-1653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_759 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="1635-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m4_2888 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="124-124", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs"];
m4_3267 [label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)", file="JsonSerializerTest.cs"];
m4_3590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8625-8625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3591 [label="return _values.GetEnumerator();", span="8627-8627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", span="8625-8625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8215-8215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3426 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8217-8221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3427 [label="StringWriter sw = new StringWriter()", span="8223-8223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3430 [label="serializer.Serialize(jsonWriter, dates)", span="8232-8232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3428 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8224-8224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3434 [label="string json = sw.ToString()", span="8238-8238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3429 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n        {\r\n          DateFormatString = ''yyyy tt'',\r\n          Culture = new CultureInfo(''en-NZ''),\r\n          Formatting = Formatting.Indented\r\n        })", span="8226-8231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3431 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="8234-8234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3432 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8235-8235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3433 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8236-8236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3435 [label="Assert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8240-8243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_3436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8215-8215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m4_2646 [label="Entry Newtonsoft.Json.Tests.Serialization.Bb.Bb()", span="8953-8953", cluster="Newtonsoft.Json.Tests.Serialization.Bb.Bb()", file="JsonSerializerTest.cs"];
m4_1134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m4_1135 [label="string json = @''[]''", span="2578-2578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m4_1136 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, string>>(json);\r\n        })", span="2580-2587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m4_1137 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m4_3 [label="XObject xNode", span="69-69", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_2372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5624-5624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2373 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5626-5626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2374 [label="c1.Categories.Add(''one'', 1)", span="5627-5627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2375 [label="c1.Categories.Add(''two'', 2)", span="5628-5628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2376 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5630-5630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2379 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5640-5640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2380 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5641-5641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2377 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5631-5637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2378 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5639-5639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2381 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="5642-5642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2382 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_2383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5624-5624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m4_392 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_1935 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", span="4422-4422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", file="JsonSerializerTest.cs"];
m4_1621 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1622 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n        @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="3800-3810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1623 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3812-3812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1624 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3813-3813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1625 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3814-3814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1626 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3815-3815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1627 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3816-3816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1628 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3817-3817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1629 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3818-3818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1630 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1631 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n        @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="3821-3841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1632 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3843-3843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1633 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3844-3844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1634 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3845-3845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1635 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3846-3846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1636 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3847-3847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1637 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3848-3848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1638 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3849-3849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1639 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3850-3850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1640 [label="Assert.AreEqual(4, myB.BB_field1)", span="3852-3852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1641 [label="Assert.AreEqual(4, myB.BB_field2)", span="3853-3853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1642 [label="Assert.AreEqual(3, myB.BB_property1)", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1643 [label="Assert.AreEqual(3, myB.BB_property2)", span="3855-3855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1644 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3856-3856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1645 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="3857-3857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1646 [label="Assert.AreEqual(0, myB.BB_property5)", span="3858-3858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1647 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3859-3859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1648 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3860-3860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1649 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="3861-3861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1650 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_2149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4967-4967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs"];
m4_2150 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="4967-4967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs"];
m4_156 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="531-531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_244 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_3654 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="JsonSerializerTest.cs"];
m4_126 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="557-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m4_127 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n      {\r\n        JustAProperty = ''JustAProperty!'',\r\n        Virtual = ''Virtual!'',\r\n        VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n        WithDataMember = ''WithDataMember!''\r\n      }", span="475-481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs"];
m4_128 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_129 [label="baseWith.Virtual = ''Virtual2!''", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_131 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_24 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="93-93", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="JsonSerializerTest.cs"];
m4_3581 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8594-8594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3582 [label="IDictionary<string, int> d = new Dictionary<string, int>\r\n                                     {\r\n                                       {''one'', 1},\r\n                                       {''two'', 2}\r\n                                     }", span="8596-8600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3583 [label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="8602-8602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3584 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="8604-8604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3585 [label="Assert.AreEqual(@''{\r\n  ''''one'''': 1,\r\n  ''''two'''': 2\r\n}'', json)", span="8605-8608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3586 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", span="8594-8594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_866 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_867 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1926-1931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_868 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1933-1933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_869 [label="Assert.IsNotNull(o)", span="1934-1934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_870 [label="Assert.AreEqual(''firstName'', o.firstName)", span="1936-1936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_871 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_872 [label="Assert.AreEqual(''LastName'', o.LastName)", span="1938-1938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_873 [label="Assert.AreEqual(''lastName'', o.lastName)", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_874 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m4_671 [label="XmlDocument document = new XmlDocument()", span="2310-2310", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_493 [label="string xml = GetIndentedInnerXml(node)", span="1514-1514", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_494 [label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1515-1521", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_495 [label="StringAssert.AreEqual(expected, xml)", span="1523-1523", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_497 [label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1526-1537", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_496 [label="string xmlJson = SerializeXmlNode(node)", span="1525-1525", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_498 [label="StringAssert.AreEqual(expectedXmlJson, xmlJson)", span="1539-1539", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_499 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1493-1493", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_500 [label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="JsonSerializerTest.cs"];
m4_894 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1983-1983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_895 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1985-1985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_896 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1986-1986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_897 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1987-1987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_898 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="1988-1988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_899 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="1989-1989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_900 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1991-1991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_902 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="2002-2002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_901 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1993-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_903 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="2004-2008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="1983-1983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_1553 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs"];
m4_1803 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1198-1198", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonSerializerTest.cs"];
m4_574 [label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m4_620 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1990-1990", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="1325-1325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs"];
m4_390 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': ''''Admin1''''\r\n    }\r\n  }\r\n}''", span="1100-1109", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_3072 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7160-7160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3073 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7162-7162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3074 [label="Assert.AreEqual(1, uris.Count)", span="7163-7163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3075 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7164-7164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3076 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7166-7166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3077 [label="Assert.IsNotNull(uri)", span="7167-7167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3078 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7169-7169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3079 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7170-7170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3080 [label="Assert.AreEqual(i1, i2)", span="7171-7171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3081 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7173-7173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3082 [label="Assert.IsNotNull(uri)", span="7174-7174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3083 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7175-7175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_3084 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7160-7160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m4_419 [label="string xml = IndentXml(newDoc.InnerXml)", span="1172-1172", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_420 [label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1174-1186", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_421 [label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1189-1189", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_423 [label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented)", span="1206-1206", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_422 [label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1191-1203", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_424 [label="Console.WriteLine(newJson)", span="1207-1207", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_425 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1152-1152", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonSerializerTest.cs"];
m4_426 [label="Entry Unk.IndentXml", span="", cluster="Unk.IndentXml", file="JsonSerializerTest.cs"];
m4_427 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs"];
m4_428 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="1211-1211", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonSerializerTest.cs"];
m4_429 [label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1213-1227", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonSerializerTest.cs"];
m4_430 [label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'', true)", span="1229-1229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonSerializerTest.cs"];
m4_431 [label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1231-1243", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonSerializerTest.cs"];
m4_1895 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4371-4371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m4_1896 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="4373-4373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m4_1897 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="4375-4375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m4_1898 [label="Assert.AreEqual(''First'', cc.First)", span="4376-4376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m4_1899 [label="Assert.AreEqual(2, cc.Second)", span="4377-4377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m4_1900 [label="Assert.AreEqual(null, cc.Ignored)", span="4378-4378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m4_1901 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4371-4371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m4_739 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1597-1597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_742 [label="string json = @''{''''Height'''':1}''", span="1628-1628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m4_740 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs"];
m4_741 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1626-1626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m4_743 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1630-1630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m4_744 [label="Assert.AreEqual(1, c.Height)", span="1631-1631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m4_745 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1626-1626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m4_185 [label="Entry lambda expression", span="565-565", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_187 [label="Exit lambda expression", span="565-565", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_189 [label="p.Name", span="568-568", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_186 [label="p.Name", span="565-565", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_188 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_190 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2449 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5859-5859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2450 [label="ClassWithException classWithException = new ClassWithException()", span="5861-5861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2451 [label="throw new Exception(''Test Exception'');", span="5864-5864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2453 [label="classWithException.Exceptions.Add(ex)", span="5868-5868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2454 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2457 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="5874-5874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2452 [label=Exception, span="5866-5866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2455 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5871-5871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2456 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5872-5872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2458 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="5876-5876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2459 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="5877-5877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2460 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="5859-5859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m4_2440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5829-5829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m4_2441 [label="DerivedType d = new DerivedType()", span="5831-5831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m4_2442 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="5832-5832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m4_2443 [label="Assert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="5834-5843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m4_2444 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="5829-5829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m4_593 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1867-1867", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonSerializerTest.cs"];
m4_393 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs"];
m4_395 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_394 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs"];
m4_396 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m4_3022 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="183-183", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs"];
m4_1717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="4071-4071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs"];
m4_2046 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="4719-4719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs"];
m4_1694 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3997-3997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1695 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="3999-3999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1696 [label="XmlDocument document = new XmlDocument()", span="4000-4000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1698 [label="testObject.Document = document", span="4002-4002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1699 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4004-4004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1703 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4013-4013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1697 [label="document.LoadXml(''<root>hehe, root</root>'')", span="4001-4001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1700 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4005-4009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1701 [label="Assert.AreEqual(expected, json)", span="4010-4010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1702 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4012-4012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_1704 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="3997-3997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m4_196 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="594-594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_1448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3413-3413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_1449 [label="return _innerDictionary.GetEnumerator();", span="3415-3415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_1450 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="3413-3413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_2998 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6946-6946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m4_2999 [label="var json = Serialize(obj)", span="6949-6949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3000 [label="return Deserialize<T>(json);", span="6950-6950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3001 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="6946-6946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m4_2138 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4947-4947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2139 [label="VectorParent obj = new VectorParent()", span="4949-4949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2140 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="4950-4950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2141 [label="string str = JsonConvert.SerializeObject(obj)", span="4952-4952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2142 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="4954-4954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2143 [label="Assert.AreEqual(1, obj.Position.X)", span="4956-4956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2144 [label="Assert.AreEqual(2, obj.Position.Y)", span="4957-4957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2145 [label="Assert.AreEqual(3, obj.Position.Z)", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_2146 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="4947-4947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m4_959 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2156-2156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_960 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_961 [label="c.NotIncluded = ''Hi''", span="2159-2159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_962 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2160-2160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_963 [label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="2162-2167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_964 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="2169-2169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_965 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="2170-2170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_966 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2156-2156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_732 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1616-1616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_736 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1620-1620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_737 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1621-1621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_735 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1619-1619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_734 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1618-1618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_733 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1617-1617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_738 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_2765 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6459-6459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2766 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>('''');\r\n        })", span="6461-6466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6459-6459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2817 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs"];
m4_2414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5741-5741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m4_2415 [label="_privateString = privateString", span="5743-5743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m4_2416 [label="_readonlyString = readonlyString", span="5744-5744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m4_2417 [label="_internalString = internalString", span="5745-5745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m4_2418 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5741-5741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m4_643 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m4_646 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1454-1454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m4_647 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n       ''Could not convert string to DateTime: /Date(0)/. Path 'DefaultConverter', line 1, position 33.'',\r\n       () =>\r\n       {\r\n         JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         });\r\n       })", span="1456-1464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m4_648 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m4_649 [label="Entry lambda expression", span="1458-1464", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_650 [label="JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n         {\r\n           DateParseHandling = DateParseHandling.None\r\n         })", span="1460-1463", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_651 [label="Exit lambda expression", span="1458-1464", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_652 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="769-769", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_290 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="766-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m4_2322 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5448-5448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs"];
m4_3399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8122-8122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_3400 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8124-8124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_3401 [label="var jsonSerializerSettings = new JsonSerializerSettings() {DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind}", span="8126-8126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_3402 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8128-8128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_3403 [label="var dateTimeOffset = (DateTimeOffset)((JValue) obj[''startDateTime'']).Value", span="8130-8130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_3404 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8132-8132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_3405 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8133-8133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_3406 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8122-8122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_539 [label="string xml = GetIndentedInnerXml(node)", span="1665-1665", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonSerializerTest.cs"];
m4_3695 [label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="9128-9128", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3696 [label="return objectType == typeof (int);", span="9130-9130", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3697 [label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", span="9128-9128", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_2262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", span="5230-5230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs"];
m4_604 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1920-1920", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_605 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n<A>\r\n<B name=''''sample'''' json:Array=''''true''''/>\r\n<C></C>\r\n<C></C>\r\n</A>\r\n</root>''", span="1922-1929", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_606 [label="XmlDocument d = new XmlDocument()", span="1931-1931", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_607 [label="d.LoadXml(xml)", span="1932-1932", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_608 [label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1934-1934", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_609 [label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''root'''': {\r\n    ''''A'''': {\r\n      ''''B'''': [\r\n        {\r\n          ''''@name'''': ''''sample''''\r\n        }\r\n      ],\r\n      ''''C'''': [\r\n        '''''''',\r\n        ''''''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="1936-1954", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_610 [label="XmlDocument d2 = JsonConvert.DeserializeXmlNode(json)", span="1956-1956", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonSerializerTest.cs"];
m4_184 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="393-393", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs"];
m4_199 [label="Exit lambda expression", span="453-453", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2012-2012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_908 [label="string json = ''{}''", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_909 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_910 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="2017-2017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_911 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="2018-2018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_912 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="2019-2019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_913 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="2020-2020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_914 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2012-2012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_2818 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m4_3002 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6953-6953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3004 [label="var stringWriter = new StringWriter()", span="6956-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3007 [label="serializer.Serialize(stringWriter, obj)", span="6962-6962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3005 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6957-6957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3008 [label="return stringWriter.ToString();", span="6964-6964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3006 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n        {\r\n          IgnoreSerializableAttribute = false\r\n        }", span="6958-6961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m4_3009 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="6953-6953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m4_2201 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5095-5095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs"];
m4_2704 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6332-6332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2705 [label="Item expected = new Item()\r\n        {\r\n          SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n          BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n          Latitude = 33.657145,\r\n          Longitude = -117.766684,\r\n          TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n          Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n        }", span="6334-6342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2706 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6344-6344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2707 [label="Assert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6346-6356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2708 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6358-6358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2709 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6360-6360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2710 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6361-6361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2711 [label="byte[] bytes = (byte[])actual.Payload", span="6362-6362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2712 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_2713 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6332-6332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m4_3530 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="8485-8485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs"];
m4_3531 [label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="8487-8487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs"];
m4_3532 [label="Assert.AreEqual(3, list.Count)", span="8489-8489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs"];
m4_3533 [label="Assert.AreEqual(1, list[0])", span="8490-8490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs"];
m4_3534 [label="Assert.AreEqual(2, list[1])", span="8491-8491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs"];
m4_3535 [label="Assert.AreEqual(3, list[2])", span="8492-8492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs"];
m4_3536 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", span="8485-8485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListInterface()", file="JsonSerializerTest.cs"];
m4_3038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7080-7080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3039 [label="string json = ''{one:1}{}''", span="7082-7082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3040 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7084-7084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3042 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7086-7086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3047 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'',\r\n        () =>\r\n          {\r\n            s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)));\r\n          })", span="7093-7098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3041 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="7085-7085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3045 [label="settings.CheckAdditionalContent = true", span="7091-7091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3046 [label="s = JsonSerializer.Create(settings)", span="7092-7092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3043 [label="Assert.IsNotNull(o)", span="7088-7088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3044 [label="Assert.AreEqual(1, o[''one''])", span="7089-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_3048 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7080-7080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3765-3765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1612 [label="AA myA = new AA(2)", span="3767-3767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1613 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="3768-3768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1614 [label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="3769-3775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1615 [label="BB myB = new BB(3, 4)", span="3777-3777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1616 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="3778-3778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1617 [label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="3779-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_1618 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="3765-3765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m4_200 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="695-695", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs"];
m4_203 [label="product.Name = ''Apple''", span="604-604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_201 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_202 [label="Product product = new Product()", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_204 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="605-605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_205 [label="product.Price = 3.99M", span="606-606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_206 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="607-607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_207 [label="string output = JsonConvert.SerializeObject(product)", span="609-609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m4_1936 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4461-4461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1937 [label="SpecifiedTestClass c = new SpecifiedTestClass()", span="4463-4463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1938 [label="c.Name = ''James''", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1939 [label="c.Age = 27", span="4465-4465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1940 [label="c.NameSpecified = false", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1941 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4468-4468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1950 [label="c.NameSpecified = true", span="4482-4482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1951 [label="c.WeightSpecified = true", span="4483-4483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1952 [label="c.HeightSpecified = true", span="4484-4484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1953 [label="c.FavoriteNumber = 23", span="4485-4485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1954 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="4486-4486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1942 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="4470-4472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1943 [label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4474-4474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1944 [label="Assert.IsNull(deserialized.Name)", span="4475-4475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1945 [label="Assert.IsFalse(deserialized.NameSpecified)", span="4476-4476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1946 [label="Assert.IsFalse(deserialized.WeightSpecified)", span="4477-4477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1947 [label="Assert.IsFalse(deserialized.HeightSpecified)", span="4478-4478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1948 [label="Assert.IsFalse(deserialized.FavoriteNumberSpecified)", span="4479-4479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1949 [label="Assert.AreEqual(27, deserialized.Age)", span="4480-4480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1955 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0,\r\n  ''''Height'''': 0,\r\n  ''''FavoriteNumber'''': 23\r\n}'', json)", span="4488-4494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1956 [label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="4496-4496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1957 [label="Assert.AreEqual(''James'', deserialized.Name)", span="4497-4497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1958 [label="Assert.IsTrue(deserialized.NameSpecified)", span="4498-4498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1959 [label="Assert.IsTrue(deserialized.WeightSpecified)", span="4499-4499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1960 [label="Assert.IsTrue(deserialized.HeightSpecified)", span="4500-4500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1961 [label="Assert.IsTrue(deserialized.FavoriteNumberSpecified)", span="4501-4501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1962 [label="Assert.AreEqual(27, deserialized.Age)", span="4502-4502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1963 [label="Assert.AreEqual(23, deserialized.FavoriteNumber)", span="4503-4503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_1964 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="4461-4461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonSerializerTest.cs"];
m4_261 [label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="633-633", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonSerializerTest.cs"];
m4_2384 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m4_2191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5083-5083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m4_2192 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n        serStr,\r\n        new JsonSerializerSettings\r\n          {\r\n            NullValueHandling = NullValueHandling.Ignore,\r\n            MissingMemberHandling = MissingMemberHandling.Ignore\r\n          });", span="5085-5091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m4_2193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5083-5083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m4_2777 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m4_2778 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<int>('''');\r\n        })", span="6483-6488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m4_2779 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m4_820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m4_821 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1787-1822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m4_822 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1824-1824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m4_823 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m4_2385 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5666-5666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m4_2386 [label="throw new NotImplementedException();", span="5668-5668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m4_2387 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="5666-5666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m4_1331 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3056-3056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1332 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3058-3058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1333 [label="Assert.IsNotNull(d)", span="3060-3060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1334 [label="Assert.IsNotNull(d.Dictionary)", span="3061-3061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1335 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3062-3062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1336 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1337 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="3064-3064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1338 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3065-3065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1339 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3066-3066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1340 [label="Assert.AreEqual(1, d.List.Count)", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1341 [label="Assert.AreEqual(''existing'', d.List[0])", span="3068-3068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1342 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3056-3056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m4_1558 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs"];
m4_225 [label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="558-558", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_1162 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m4_1163 [label="string json = @''[]''", span="2642-2642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m4_1164 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n        @''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<JObject>(json);\r\n        })", span="2644-2649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m4_1165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m4_2202 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs"];
m4_1814 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_2884 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m4_3574 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m4_293 [label="s += s", span="846-846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m4_3641 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="8857-8857", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3642 [label="return objectType == typeof(WidgetId1) || objectType == typeof(WidgetId1?);", span="8859-8859", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3643 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", span="8857-8857", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_208 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="516-516", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_209 [label="XmlDocument doc = new XmlDocument()", span="518-518", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_210 [label="string jsonText", span="519-519", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_211 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n	</xs:element>\r\n</xs:schema>''", span="521-528", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_212 [label="XmlDocument document = new XmlDocument()", span="530-530", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_213 [label="document.LoadXml(xml)", span="531-531", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_214 [label="XmlAttribute attribute = document.DocumentElement.ChildNodes[0].Attributes[''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata'']", span="534-534", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_215 [label="attribute.Value = ''true''", span="535-535", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_2088 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4853-4853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2089 [label="dynamic expando = new ExpandoObject()", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2090 [label="expando.Int = 1", span="4856-4856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2091 [label="expando.Decimal = 99.9d", span="4857-4857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2092 [label="expando.Complex = new ExpandoObject()", span="4858-4858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2093 [label="expando.Complex.String = ''I am a string''", span="4859-4859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2094 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="4860-4860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2095 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="4862-4862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2099 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="4875-4875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2101 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="4878-4878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2105 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="4884-4884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2107 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="4887-4887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2096 [label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="4863-4870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2097 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="4872-4872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2098 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="4874-4874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2100 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="4877-4877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2102 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="4880-4880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2103 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="4881-4881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2104 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="4883-4883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2106 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="4886-4886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2108 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="4853-4853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m4_2598 [label="Entry Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="8929-8929", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs"];
m4_3657 [label="Name = name", span="8931-8931", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs"];
m4_3658 [label="Data = data", span="8932-8932", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs"];
m4_3659 [label="Exit Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", span="8929-8929", cluster="Newtonsoft.Json.Tests.Serialization.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs"];
m4_718 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2603-2607", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonSerializerTest.cs"];
m4_1804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1805 [label="List<string> existingStrings = (List<string>)existingValue", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1807 [label="reader.Read()", span="4217-4217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1808 [label="reader.TokenType != JsonToken.EndArray", span="4219-4219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1809 [label="string s = (string)reader.Value", span="4221-4221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1811 [label="reader.Read()", span="4224-4224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1806 [label="List<string> newStrings = new List<string>(existingStrings)", span="4215-4215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1810 [label="newStrings.Add(s)", span="4222-4222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1812 [label="return newStrings;", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1813 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m4_1206 [label="string json = @''{''''Name'''':''''''''}''", span="2722-2722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m4_1207 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="2724-2724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m4_1208 [label="Assert.AreEqual('''', p.Name)", span="2725-2725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m4_1209 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m4_3059 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7140-7140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m4_3060 [label="ExceptionAssert.Throws<JsonException>(\r\n       ''Additional text found in JSON string after finishing deserializing object.'',\r\n       () =>\r\n         {\r\n           string json = ''[{},1]'';\r\n\r\n           JsonSerializer serializer = new JsonSerializer();\r\n           serializer.CheckAdditionalContent = true;\r\n\r\n           var reader = new JsonTextReader(new StringReader(json));\r\n           reader.Read();\r\n           reader.Read();\r\n\r\n           serializer.Deserialize(reader, typeof (MyType));\r\n         })", span="7142-7156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m4_3061 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7140-7140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m4_1413 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs"];
m4_65 [label="string json = JsonConvert.SerializeObject(c)", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="JsonSerializerTest.cs"];
m4_1252 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2833-2833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1253 [label="StructTest structTest = new StructTest\r\n        {\r\n          StringProperty = ''StringProperty!'',\r\n          StringField = ''StringField'',\r\n          IntProperty = 5,\r\n          IntField = 10\r\n        }", span="2835-2841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1254 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="2843-2843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1258 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="2853-2853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1255 [label="Console.WriteLine(json)", span="2844-2844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1256 [label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="2845-2850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1257 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="2852-2852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1259 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="2854-2854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1260 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="2855-2855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1261 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="2856-2856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_1262 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="2833-2833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m4_2682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6288-6288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m4_2683 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n        ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="6290-6300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m4_2684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6288-6288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m4_621 [label="var dict = new Dictionary<string, object> { { ''Int16'', (short)1 }, { ''Float'', 2f }, { ''Int32'', 3 } }", span="1992-1992", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_455 [label="doc.LoadXml(xml)", span="1318-1318", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonSerializerTest.cs"];
m4_446 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonSerializerTest.cs"];
m4_447 [label="XmlDocument doc = new XmlDocument()", span="1301-1301", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonSerializerTest.cs"];
m4_450 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''O\''''Connor''''\r\n}'', json)", span="1306-1308", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonSerializerTest.cs"];
m4_453 [label="string xml = @''<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! -->\r\n</span>''", span="1314-1316", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonSerializerTest.cs"];
m4_448 [label="doc.LoadXml(@''<name>O''''Connor</name>'')", span="1303-1303", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonSerializerTest.cs"];
m4_452 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1312-1312", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonSerializerTest.cs"];
m4_449 [label="string json = SerializeXmlNode(doc)", span="1305-1305", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonSerializerTest.cs"];
m4_451 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonSerializerTest.cs"];
m4_454 [label="XmlDocument doc = new XmlDocument()", span="1317-1317", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonSerializerTest.cs"];
m4_1510 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs"];
m4_49 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs"];
m4_1439 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs"];
m4_1522 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs"];
m4_2190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5015-5015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs"];
m4_370 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1017-1026", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JsonSerializerTest.cs"];
m4_358 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonSerializerTest.cs"];
m4_359 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_360 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="949-949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_242 [label="executorObject.serverClassName = ''BanSubs''", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_372 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1006-1006", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JsonSerializerTest.cs"];
m4_373 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_374 [label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="1034-1040", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_375 [label="XmlDocument arrayDoc = new XmlDocument()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_1512 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs"];
m4_632 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs"];
m4_875 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1943-1943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_876 [label="SubKlass i = new SubKlass(''my subprop'')", span="1945-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_877 [label="i.SuperProp = ''overrided superprop''", span="1946-1946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_878 [label="string json = JsonConvert.SerializeObject(i)", span="1948-1948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_879 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_880 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1951-1951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_881 [label="string newJson = JsonConvert.SerializeObject(ii)", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_882 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1954-1954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_883 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1943-1943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_2978 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6903-6903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2979 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="6905-6909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2980 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n      })", span="6911-6914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2981 [label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="6916-6919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2982 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6921-6921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2983 [label="Assert.AreEqual(2, dic2.Count)", span="6923-6923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2984 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6924-6924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2985 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6925-6925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_2986 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="6903-6903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m4_22 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m4_401 [label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1127-1127", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JsonSerializerTest.cs"];
m4_2471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5894-5894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2472 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2473 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5897-5897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2476 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5908-5908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2477 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5909-5909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2478 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5910-5910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2479 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5911-5911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2480 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5912-5912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2474 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="5899-5905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2475 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5907-5907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_2481 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="5894-5894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m4_1141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m4_1142 [label="string json = @''[]''", span="2594-2594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m4_1143 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Exception>(json);\r\n        })", span="2596-2603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m4_1144 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m4_274 [label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc11))", span="724-724", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_25 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="706-706", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs"];
m4_26 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs"];
m4_3170 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7391-7391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m4_3171 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7393-7396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m4_3172 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7398-7398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m4_3173 [label="Assert.AreEqual(1, l[0])", span="7400-7400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m4_3174 [label="Assert.AreEqual(null, l[1])", span="7401-7401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m4_3175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7391-7391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m4_3691 [label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9123-9123", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3692 [label="return Convert.ToInt32(reader.Value);", span="9125-9125", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3693 [label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9123-9123", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2226 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="5179-5179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m4_2227 [label="Constructor = ''NonPublic''", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m4_2228 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="5179-5179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m4_1183 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2679-2679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_1184 [label="string json = @''{}''", span="2681-2681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_1185 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\nPath '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2683-2690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_1186 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="2679-2679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_2159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4995-4995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_2160 [label="var derived = new Derived(''meh'', ''woo'')", span="4997-4997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_2161 [label="var settings = new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n        }", span="4999-5003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_2162 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5005-5005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_2163 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5007-5007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_2164 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5009-5009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_2165 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5010-5010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_2166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="4995-4995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m4_1169 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2653-2653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m4_1170 [label="string json = @''new Constructor(123)''", span="2655-2655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m4_1171 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2657-2662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m4_1172 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="2653-2653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m4_1523 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs"];
m4_690 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2534-2534", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_2134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4935-4935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m4_2135 [label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="4937-4937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m4_2136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="4935-4935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m4_1816 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1817 [label="return (objectType == typeof(List<string>));", span="4232-4232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1818 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_642 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m4_174 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="JsonSerializerTest.cs"];
m4_3144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7312-7312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m4_3145 [label="m_Item1 = item1", span="7314-7314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m4_3146 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7312-7312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m4_2413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5661-5661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs"];
m4_2368 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5616-5616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m4_2369 [label="Title = title", span="5618-5618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m4_2370 [label="Categories = new Dictionary<string, int>()", span="5619-5619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m4_2371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5616-5616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m4_3413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8136-8136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs"];
m4_1922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="4427-4427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs"];
m4_1923 [label="return (Manager != this);", span="4429-4429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs"];
m4_1924 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", span="4427-4427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.ShouldSerializeManager()", file="JsonSerializerTest.cs"];
m4_2129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4922-4922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m4_2130 [label="string json = ''{'Value':123456789876543.21}''", span="4924-4924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m4_2131 [label="IDictionary<string, decimal> d = JsonConvert.DeserializeObject<IDictionary<string, decimal>>(json)", span="4925-4925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m4_2132 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="4926-4926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m4_2133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="4922-4922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m4_2419 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5748-5748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m4_2420 [label="_readonlyString = ''default!''", span="5750-5750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m4_2421 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5748-5748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m4_391 [label="StringAssert.AreEqual(expected, arrayJsonText)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_1516 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs"];
m4_3630 [label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m4_555 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1699-1699", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonSerializerTest.cs"];
m4_556 [label="Entry lambda expression", span="1781-1781", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_557 [label="DeserializeXmlNode(json)", span="1781-1781", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_558 [label="Exit lambda expression", span="1781-1781", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_669 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="1497-1497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m4_672 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1501-1501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m4_670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="1486-1486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m4_673 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="1503-1503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m4_674 [label="MemberConverterClass c = new MemberConverterClass\r\n        {\r\n          DefaultConverter = date,\r\n          MemberConverter = date\r\n        }", span="1505-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m4_675 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m4_676 [label="Console.WriteLine(json)", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m4_677 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="1501-1501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m4_23 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m4_3176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7406-7406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3177 [label="var tuple = new MyTuple<int>(500)", span="7408-7408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3178 [label="var json = JsonConvert.SerializeObject(tuple)", span="7409-7409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3179 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7410-7410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3181 [label="Action doStuff = () =>\r\n      {\r\n        obj = JsonConvert.DeserializeObject<MyTuple<int>>(json);\r\n      }", span="7414-7417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3180 [label="MyTuple<int> obj = null", span="7412-7412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3182 [label="doStuff()", span="7420-7420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3183 [label="Assert.AreEqual(500, obj.Item1)", span="7421-7421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3184 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7406-7406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_1490 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3498-3498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1491 [label="_stringValue = info.GetString(''stringValue'')", span="3500-3500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1492 [label="_intValue = info.GetInt32(''intValue'')", span="3501-3501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1493 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="3502-3502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1494 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="3503-3503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1495 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="3504-3504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1496 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="3505-3505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1497 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="3507-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1498 [label="_byteValue = info.GetByte(''byteValue'')", span="3508-3508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1499 [label="_charValue = info.GetChar(''charValue'')", span="3509-3509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1500 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="3510-3510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1501 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="3511-3511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1502 [label="_shortValue = info.GetInt16(''shortValue'')", span="3512-3512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1503 [label="_longValue = info.GetInt64(''longValue'')", span="3513-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1504 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1505 [label="_floatValue = info.GetSingle(''floatValue'')", span="3515-3515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1506 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="3516-3516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1507 [label="_uintValue = info.GetUInt32(''uintValue'')", span="3517-3517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1508 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="3518-3518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1509 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3498-3498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_2715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m4_2716 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m4_2717 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6370-6370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m4_2718 [label="Assert.AreEqual('''', dict[''k1''])", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m4_2719 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="6373-6373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m4_2720 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m4_2397 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5696-5696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m4_2398 [label="throw new NotImplementedException();", span="5698-5698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m4_2399 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="5696-5696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m4_2987 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6929-6929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m4_2988 [label="string s = (string) new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m4_2989 [label="Assert.AreEqual('''', s)", span="6932-6932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m4_2990 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="6929-6929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m4_15 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", file="JsonSerializerTest.cs"];
m4_538 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1664-1664", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonSerializerTest.cs"];
m4_3100 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7210-7210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m4_3101 [label="KeyValuePair<int, string> result =\r\n        JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n          ''{key: 123, \''VALUE\'': \''test value\''}''\r\n          )", span="7212-7215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m4_3102 [label="Assert.AreEqual(123, result.Key)", span="7217-7217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m4_3103 [label="Assert.AreEqual(''test value'', result.Value)", span="7218-7218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m4_3104 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7210-7210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m4_346 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs"];
m4_348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m4_347 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs"];
m4_350 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m4_349 [label="string json = @''[''''PRE\u003cPOST'''']''", span="935-935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m4_351 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="938-938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m4_400 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m4_402 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m4_403 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs"];
m4_1417 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3335-3335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m4_1418 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="3335-3335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m4_2494 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs"];
m4_218 [label="XDocument d = XDocument.Parse(xml)", span="542-542", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_219 [label="XAttribute a = d.Root.Element(''{http://www.w3.org/2001/XMLSchema}element'').Attribute(''{urn:schemas-microsoft-com:xml-msdata}IsDataSet'')", span="543-543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_220 [label="jsonText = JsonConvert.SerializeXNode(a)", span="545-545", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_221 [label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="547-547", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_222 [label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="551-551", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_223 [label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="553-553", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_224 [label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="555-555", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1842-1842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m4_836 [label="Person person = new Person\r\n        {\r\n          Name = ''Mike Manager'',\r\n          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n          Department = ''IT'',\r\n          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n        }", span="1844-1850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m4_837 [label="return person;", span="1851-1851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m4_838 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1842-1842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m4_473 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1143-1143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m4_3314 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="7838-7838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs"];
m4_3315 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="7840-7840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs"];
m4_3316 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7842-7844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs"];
m4_3317 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", span="7838-7838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithBadItems()", file="JsonSerializerTest.cs"];
m4_280 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="639-639", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_2600 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="771-771", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs"];
m4_3495 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="8391-8391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3496 [label="NewEmployee joe = new NewEmployee()", span="8393-8393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3497 [label="joe.Name = ''Joe Employee''", span="8394-8394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3498 [label="joe.Age = 100", span="8395-8395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3502 [label="joe.Manager = mike", span="8401-8401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3503 [label="string json = JsonConvert.SerializeObject(joe, Formatting.Indented)", span="8413-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3499 [label="Employee mike = new Employee()", span="8397-8397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3500 [label="mike.Name = ''Mike Manager''", span="8398-8398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3501 [label="mike.Manager = mike", span="8399-8399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3504 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 100,\r\n  ''''Name'''': ''''Joe Employee'''',\r\n  ''''Manager'''': {\r\n    ''''Name'''': ''''Mike Manager''''\r\n  }\r\n}'', json)", span="8415-8421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", span="8391-8391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeInheritedClassTest()", file="JsonSerializerTest.cs"];
m4_3678 [label="Entry string.ToLower(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToLower(System.Globalization.CultureInfo)", file="JsonSerializerTest.cs"];
m4_792 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1738-1738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m4_793 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Required property 'LastName' not found in JSON. Path '', line 3, position 2.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}'';\r\n\r\n          JsonConvert.DeserializeObject<RequiredMembersClass>(json);\r\n        })", span="1740-1749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m4_794 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1738-1738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m4_2215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="5155-5155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m4_2216 [label="Constructor = ''NonPublic''", span="5157-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m4_2217 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="5155-5155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m4_784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1718-1718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m4_785 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'',\r\n        () =>\r\n        {\r\n          RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            };\r\n\r\n          string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n          Console.WriteLine(json);\r\n        })", span="1720-1734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m4_786 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1718-1718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m4_3093 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7190-7190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3094 [label="return true;", span="7192-7192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3095 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7190-7190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_2170 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5031-5031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_2171 [label="info.AddValue(''Name'', _name)", span="5033-5033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_2172 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5031-5031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_1714 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="4036-4036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs"];
m4_1833 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4259-4259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1834 [label="string existingString = (string)existingValue", span="4261-4261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1835 [label="string newString = existingString + (string)reader.Value", span="4262-4262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1836 [label="return newString;", span="4264-4264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1837 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4259-4259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3185 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JsonSerializerTest.cs"];
m4_291 [label="object o = JsonConvert.DeserializeObject(json)", span="844-844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m4_2831 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6591-6591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_2832 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6593-6593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_2833 [label="person.Name = ''John Doe''", span="6594-6594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_2834 [label="person.Age = 25", span="6595-6595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_2835 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6597-6597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_2837 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6600-6600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_2836 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6598-6598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_2838 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6591-6591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m4_4 [label="node is XmlDocument", span="70-70", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_5 [label="xNode = XDocument.Load(reader)", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_7 [label="XmlAttribute attribute = (XmlAttribute)node", span="76-76", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_8 [label="xNode = new XAttribute(XName.Get(attribute.LocalName, attribute.NamespaceURI), attribute.Value)", span="77-77", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_6 [label="node is XmlAttribute", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_9 [label="reader.MoveToContent()", span="81-81", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonSerializerTest.cs"];
m4_989 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2231-2231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_990 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2233-2242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_991 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="2244-2244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_992 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2246-2246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_993 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="2247-2247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_994 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2248-2248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_995 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2249-2249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_996 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2250-2250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_997 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_998 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2231-2231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m4_3354 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="7899-7899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs"];
m4_3355 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="7901-7901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs"];
m4_3356 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0]', line 1, position 48.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7903-7905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs"];
m4_3357 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", span="7899-7899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncompleteNotTopLevel3DArray()", file="JsonSerializerTest.cs"];
m4_192 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="435-435", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonSerializerTest.cs"];
m4_193 [label="string json = @''{\r\n    ''''Id'''': 1,\r\n     ''''Email'''': ''''james@example.com'''',\r\n     ''''Active'''': true,\r\n     ''''CreatedDate'''': ''''2013-01-20T00:00:00Z'''',\r\n     ''''Roles'''': [\r\n       ''''User'''',\r\n       ''''Admin''''\r\n     ],\r\n    ''''Team'''': {\r\n        ''''Id'''': 2,\r\n        ''''Name'''': ''''Software Developers'''',\r\n        ''''Description'''': ''''Creators of fine software products and services.''''\r\n    }\r\n}''", span="437-451", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonSerializerTest.cs"];
m4_195 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="435-435", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonSerializerTest.cs"];
m4_194 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName. Path 'Email', line 3, position 13.'')", span="452-454", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonSerializerTest.cs"];
m4_197 [label="Entry lambda expression", span="453-453", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_198 [label="JsonConvert.DeserializeXmlNode(json)", span="453-453", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_51 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="516-516", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs"];
m4_1692 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonSerializerTest.cs"];
m4_3016 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6982-6982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m4_3017 [label="Event e = new Event\r\n        {\r\n          EventName = ''Blackadder III'',\r\n          Venue = ''Gryphon Theatre'',\r\n          Performances = new List<DateTime>\r\n            {\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n              DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n            }\r\n        }", span="6984-6994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m4_3018 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6996-6996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m4_3019 [label="Assert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7007-7021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m4_3020 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="6982-6982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m4_2247 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5222-5222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2248 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5224-5224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2249 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5225-5225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2250 [label="Assert.AreEqual(''value!'', c.Value)", span="5226-5226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2251 [label="Assert.AreEqual(1, c.Age)", span="5227-5227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2252 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5222-5222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_503 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1543-1543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_504 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1545-1554", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_505 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1556-1556", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_506 [label="string xml = GetIndentedInnerXml(node)", span="1557-1557", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_507 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1559-1566", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_508 [label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1568-1568", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_509 [label="StringAssert.AreEqual(json, newJson)", span="1570-1570", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_510 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1543-1543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonSerializerTest.cs"];
m4_512 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", span="1574-1574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonSerializerTest.cs"];
m4_513 [label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1576-1584", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonSerializerTest.cs"];
m4_514 [label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1586-1586", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonSerializerTest.cs"];
m4_515 [label="string xml = GetIndentedInnerXml(node)", span="1587-1587", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonSerializerTest.cs"];
m4_516 [label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1589-1596", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonSerializerTest.cs"];
m4_517 [label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1598-1598", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonSerializerTest.cs"];
m4_1579 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3681-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1580 [label="Person person = new Person()", span="3683-3683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1581 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="3684-3684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1582 [label="person.LastModified = person.BirthDate", span="3685-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1583 [label="person.Department = ''Department!''", span="3686-3686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1584 [label="person.Name = ''Name!''", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1588 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="3697-3697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1585 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="3689-3689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1586 [label="string dateTimeOffsetText", span="3690-3690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1594 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="3731-3731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1587 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="3692-3692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1590 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="3703-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1589 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="3699-3702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1591 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="3728-3728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1592 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="3729-3729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1593 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1595 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="3732-3732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1596 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="3733-3733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1597 [label="Assert.AreEqual(null, o2._nullableInt)", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_1598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="3681-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m4_3408 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8147-8147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m4_3409 [label="NullableFloats floats = new NullableFloats\r\n        {\r\n          Object = double.NaN,\r\n          ObjectNull = null,\r\n          Float = float.NaN,\r\n          NullableDouble = double.NaN,\r\n          NullableFloat = null\r\n        }", span="8149-8156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m4_3410 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n        })", span="8158-8161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m4_3411 [label="Assert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8163-8170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m4_3412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8147-8147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m4_662 [label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="2074-2229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_663 [label="StringAssert.AreEqual(expectedJson, json)", span="2231-2231", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_664 [label="XNode node = JsonConvert.DeserializeXNode(json)", span="2233-2233", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_668 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2037-2037", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_665 [label="string xaml2 = node.ToString()", span="2235-2235", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_666 [label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2237-2268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_667 [label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2270-2270", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonSerializerTest.cs"];
m4_2533 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="JsonSerializerTest.cs"];
m4_2696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6318-6318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_2697 [label="string json = @''{''''Id'''':null}''", span="6320-6320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_2698 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6321-6321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_2699 [label="Assert.AreEqual(null, c.Id)", span="6323-6323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_2700 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6325-6325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_2701 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6326-6326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_2702 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6328-6328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_2703 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6318-6318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m4_884 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs"];
m4_2516 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m4_1029 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1030 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="2337-2349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1031 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="2351-2351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1032 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1033 [label="Assert.AreEqual(2, content.Children.Count)", span="2354-2354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1034 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="2355-2355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1035 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="2356-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_1036 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m4_183 [label="Entry Unk.DeepEquals", span="", cluster="Unk.DeepEquals", file="JsonSerializerTest.cs"];
m4_414 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="1046-1046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_175 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", span="404-404", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="JsonSerializerTest.cs"];
m4_533 [label="s.Push(2)", span="1262-1262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m4_377 [label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="1045-1045", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_376 [label="arrayDoc.LoadXml(arrayXml)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_378 [label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1046-1057", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_694 [label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json1)", span="2547-2547", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_695 [label="var xml1 = new XmlDocument()", span="2550-2550", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_696 [label="xml1.LoadXml(xmlString)", span="2551-2551", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_697 [label="var json2 = JsonConvert.SerializeObject(xml1)", span="2553-2553", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_780 [label="Entry lambda expression", span="1704-1714", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_781 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1706-1711", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_782 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1713-1713", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_783 [label="Exit lambda expression", span="1704-1714", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_787 [label="Entry lambda expression", span="1722-1734", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_788 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n            {\r\n              FirstName = null,\r\n              BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n              LastName = null,\r\n              MiddleName = null\r\n            }", span="1724-1730", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_789 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="1732-1732", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_790 [label="Console.WriteLine(json)", span="1733-1733", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_791 [label="Exit lambda expression", span="1722-1734", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_795 [label="Entry lambda expression", span="1742-1749", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_796 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1744-1746", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_797 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1748-1748", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_798 [label="Exit lambda expression", span="1742-1749", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_833 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="1838-1838", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_832 [label="Entry lambda expression", span="1836-1839", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_834 [label="Exit lambda expression", span="1836-1839", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_919 [label="Entry lambda expression", span="2030-2036", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_920 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2032-2032", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_921 [label="o.ReferenceLoopHandlingErrorProperty = o", span="2033-2033", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_922 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="2035-2035", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_923 [label="Exit lambda expression", span="2030-2036", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1105 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="2525-2525", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1104 [label="Entry lambda expression", span="2523-2526", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1106 [label="Exit lambda expression", span="2523-2526", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1132 [label="JsonConvert.DeserializeObject<Person>(json)", span="2571-2571", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1131 [label="Entry lambda expression", span="2569-2572", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1133 [label="Exit lambda expression", span="2569-2572", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1139 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2586-2586", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1138 [label="Entry lambda expression", span="2584-2587", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1140 [label="Exit lambda expression", span="2584-2587", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1146 [label="JsonConvert.DeserializeObject<Exception>(json)", span="2602-2602", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1145 [label="Entry lambda expression", span="2600-2603", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1147 [label="Exit lambda expression", span="2600-2603", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1153 [label="JsonConvert.DeserializeObject<double>(json)", span="2618-2618", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1152 [label="Entry lambda expression", span="2616-2619", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1154 [label="Exit lambda expression", span="2616-2619", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1160 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="2634-2634", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1159 [label="Entry lambda expression", span="2632-2635", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1161 [label="Exit lambda expression", span="2632-2635", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1167 [label="JsonConvert.DeserializeObject<JObject>(json)", span="2648-2648", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1166 [label="Entry lambda expression", span="2646-2649", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1168 [label="Exit lambda expression", span="2646-2649", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1174 [label="JsonConvert.DeserializeObject<Person>(json)", span="2661-2661", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1173 [label="Entry lambda expression", span="2659-2662", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1175 [label="Exit lambda expression", span="2659-2662", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1181 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2674-2674", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1180 [label="Entry lambda expression", span="2672-2675", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1182 [label="Exit lambda expression", span="2672-2675", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1188 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="2689-2689", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1187 [label="Entry lambda expression", span="2687-2690", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1189 [label="Exit lambda expression", span="2687-2690", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1195 [label="JsonConvert.PopulateObject(json, new Person())", span="2702-2702", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1194 [label="Entry lambda expression", span="2700-2703", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1196 [label="Exit lambda expression", span="2700-2703", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1203 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="2715-2715", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1202 [label="Entry lambda expression", span="2713-2716", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1204 [label="Exit lambda expression", span="2713-2716", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1213 [label="Entry lambda expression", span="2733-2744", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1214 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2735-2743", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1215 [label="Exit lambda expression", span="2733-2744", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1220 [label="Entry lambda expression", span="2752-2763", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1221 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2754-2762", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1222 [label="Exit lambda expression", span="2752-2763", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1226 [label="Entry lambda expression", span="2771-2782", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1227 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n              {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="2773-2781", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1228 [label="Exit lambda expression", span="2771-2782", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1232 [label="Entry lambda expression", span="2790-2801", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1233 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          })", span="2792-2800", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1234 [label="Exit lambda expression", span="2790-2801", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1296 [label="Entry lambda expression", span="2916-2925", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1297 [label="string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="2918-2922", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1298 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="2924-2924", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1299 [label="Exit lambda expression", span="2916-2925", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1346 [label="Entry lambda expression", span="3105-3105", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1347 [label="x.Id == id", span="3105-3105", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1348 [label="Exit lambda expression", span="3105-3105", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1383 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="3199-3199", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1382 [label="Entry lambda expression", span="3199-3199", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1384 [label="Exit lambda expression", span="3199-3199", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1860 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4307-4307", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1859 [label="Entry lambda expression", span="4305-4308", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1861 [label="Exit lambda expression", span="4305-4308", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1865 [label="Entry lambda expression", span="4316-4331", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1866 [label="var reference = new Dictionary<string, object>()", span="4320-4320", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1867 [label="reference.Add(''$ref'', 1)", span="4321-4321", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1868 [label="reference.Add(''$id'', 1)", span="4322-4322", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1872 [label="child.Add(''Father'', reference)", span="4327-4327", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1869 [label="var child = new Dictionary<string, object>()", span="4324-4324", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1870 [label="child.Add(''_id'', 2)", span="4325-4325", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1871 [label="child.Add(''Name'', ''Isabell'')", span="4326-4326", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1873 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4329-4329", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1874 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4330-4330", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_1875 [label="Exit lambda expression", span="4316-4331", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2049 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="4745-4745", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2048 [label="Entry lambda expression", span="4743-4746", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2050 [label="Exit lambda expression", span="4743-4746", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2279 [label="Entry lambda expression", span="5313-5316", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2280 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5315-5315", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2281 [label="Exit lambda expression", span="5313-5316", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2566 [label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="6066-6066", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2565 [label="Entry lambda expression", span="6064-6067", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2567 [label="Exit lambda expression", span="6064-6067", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2652 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6219-6219", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2651 [label="Entry lambda expression", span="6217-6220", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2653 [label="Exit lambda expression", span="6217-6220", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2666 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6261-6261", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2665 [label="Entry lambda expression", span="6261-6261", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2667 [label="Exit lambda expression", span="6261-6261", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2685 [label="Entry lambda expression", span="6292-6300", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2686 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6294-6297", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2687 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6299-6299", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2688 [label="Exit lambda expression", span="6292-6300", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2692 [label="Entry lambda expression", span="6308-6314", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2693 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6310-6311", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2694 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6313-6313", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2695 [label="Exit lambda expression", span="6308-6314", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2768 [label="Entry lambda expression", span="6463-6466", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2769 [label="JsonConvert.DeserializeObject<double>('''')", span="6465-6465", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2770 [label="Exit lambda expression", span="6463-6466", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2774 [label="Entry lambda expression", span="6474-6477", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2775 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6476-6476", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2776 [label="Exit lambda expression", span="6474-6477", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2780 [label="Entry lambda expression", span="6485-6488", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2781 [label="JsonConvert.DeserializeObject<int>('''')", span="6487-6487", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2782 [label="Exit lambda expression", span="6485-6488", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2790 [label="Entry lambda expression", span="6504-6507", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2791 [label="JsonConvert.DeserializeObject<double>(null)", span="6506-6506", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2792 [label="Exit lambda expression", span="6504-6507", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2796 [label="Entry lambda expression", span="6516-6519", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2797 [label="JsonConvert.DeserializeObject(null)", span="6518-6518", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2798 [label="Exit lambda expression", span="6516-6519", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2904 [label="errors.Add(e.ErrorContext.Error.Message)", span="6720-6720", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2905 [label="e.ErrorContext.Handled = true", span="6721-6721", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2903 [label="Entry lambda expression", span="6718-6722", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2906 [label="Exit lambda expression", span="6718-6722", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2919 [label="errors.Add(e.ErrorContext.Error.Message)", span="6745-6745", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2920 [label="e.ErrorContext.Handled = true", span="6746-6746", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2918 [label="Entry lambda expression", span="6743-6747", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2921 [label="Exit lambda expression", span="6743-6747", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2934 [label="errors.Add(e.ErrorContext.Error.Message)", span="6768-6768", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2935 [label="e.ErrorContext.Handled = true", span="6769-6769", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2933 [label="Entry lambda expression", span="6766-6770", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_2936 [label="Exit lambda expression", span="6766-6770", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3050 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7097-7097", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3049 [label="Entry lambda expression", span="7095-7098", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3051 [label="Exit lambda expression", span="7095-7098", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3062 [label="Entry lambda expression", span="7144-7156", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3063 [label="string json = ''[{},1]''", span="7146-7146", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3064 [label="JsonSerializer serializer = new JsonSerializer()", span="7148-7148", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3066 [label="var reader = new JsonTextReader(new StringReader(json))", span="7151-7151", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3065 [label="serializer.CheckAdditionalContent = true", span="7149-7149", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3069 [label="serializer.Deserialize(reader, typeof (MyType))", span="7155-7155", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3067 [label="reader.Read()", span="7152-7152", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3068 [label="reader.Read()", span="7153-7153", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3070 [label="Exit lambda expression", span="7144-7156", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3142 [label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="7304-7304", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3141 [label="Entry lambda expression", span="7304-7304", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3143 [label="Exit lambda expression", span="7304-7304", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3187 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7416-7416", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3186 [label="Entry lambda expression", span="7414-7417", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3188 [label="Exit lambda expression", span="7414-7417", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3285 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="7794-7794", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3284 [label="Entry lambda expression", span="7794-7794", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3286 [label="Exit lambda expression", span="7794-7794", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3292 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="7804-7804", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3291 [label="Entry lambda expression", span="7804-7804", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3293 [label="Exit lambda expression", span="7804-7804", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3312 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7834-7834", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3311 [label="Entry lambda expression", span="7834-7834", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3313 [label="Exit lambda expression", span="7834-7834", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3319 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7844-7844", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3318 [label="Entry lambda expression", span="7844-7844", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3320 [label="Exit lambda expression", span="7844-7844", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3326 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7854-7854", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3325 [label="Entry lambda expression", span="7854-7854", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3327 [label="Exit lambda expression", span="7854-7854", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3352 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7895-7895", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3351 [label="Entry lambda expression", span="7895-7895", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3353 [label="Exit lambda expression", span="7895-7895", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3359 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="7905-7905", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3358 [label="Entry lambda expression", span="7905-7905", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3360 [label="Exit lambda expression", span="7905-7905", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3453 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8280-8280", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3452 [label="Entry lambda expression", span="8280-8280", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3454 [label="Exit lambda expression", span="8280-8280", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3609 [label="Entry lambda expression", span="8669-8669", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3610 [label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="8669-8669", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_3611 [label="Exit lambda expression", span="8669-8669", cluster="lambda expression", file="JsonSerializerTest.cs"];
m4_355 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m4_361 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="952-952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_357 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs"];
m4_356 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs"];
m4_363 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_362 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_398 [label="string result = JsonConvert.SerializeObject(testDates)", span="1017-1017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m4_405 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="1024-1030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_397 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n        {\r\n          new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n          new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n        }", span="1009-1015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m4_399 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m4_534 [label="s.Push(3)", span="1263-1263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m4_404 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1022-1022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_406 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_535 [label="string json = JsonConvert.SerializeObject(s)", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m4_176 [label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'/>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="406-410", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlWithNamespaceInChildrenAndNoValueInChildren()", file="JsonSerializerTest.cs"];
m4_1748 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="4095-4095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1749 [label="string s = @''host\user''", span="4097-4097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1750 [label="string serialized = JsonConvert.SerializeObject(s)", span="4098-4098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1753 [label="d1.Add(5, s)", span="4102-4102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1756 [label="d2.Add(s, 5)", span="4106-4106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1751 [label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="4099-4099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1752 [label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="4101-4101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1754 [label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="4103-4103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1755 [label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="4105-4105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1757 [label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="4107-4107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_1758 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="4095-4095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonSerializerTest.cs"];
m4_3150 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7340-7340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3151 [label="string json", span="7342-7342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3152 [label="IList<double> d = new List<double> {1.1, double.NaN, double.PositiveInfinity}", span="7343-7343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3153 [label="json = JsonConvert.SerializeObject(d)", span="7345-7345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3154 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7348-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3155 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings {FloatFormatHandling = FloatFormatHandling.DefaultValue})", span="7351-7351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3156 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7354-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7340-7340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m4_3518 [label="Entry Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="8739-8739", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs"];
m4_3631 [label="this.answerValues = (from answer in Enum.GetNames(typeof(Antworten))\r\n                           select new SelectListItem { Text = answer, Value = answer, Selected = false })\r\n                           .ToList()", span="8741-8743", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs"];
m4_3632 [label="Exit Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", span="8739-8739", cluster="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs"];
m4_3113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="7245-7245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3114 [label="return _values.GetEnumerator();", span="7247-7247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3115 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", span="7245-7245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3545 [label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="8510-8510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3546 [label="Assert.AreEqual(3, list.Count)", span="8512-8512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3547 [label="Assert.AreEqual(1, list[0])", span="8514-8514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3548 [label="Assert.AreEqual(2, list[1])", span="8515-8515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3549 [label="Assert.AreEqual(3, list[2])", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3550 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3255 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="9108-9108", cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", file="JsonSerializerTest.cs"];
m4_1223 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2767-2767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m4_1224 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n            {\r\n              ContractResolver = new DefaultContractResolver\r\n              {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n                IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            });\r\n        })", span="2769-2782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m4_1225 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="2767-2767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m4_1312 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs"];
m4_3021 [label="Entry Newtonsoft.Json.Tests.Serialization.Event.Event()", span="8809-8809", cluster="Newtonsoft.Json.Tests.Serialization.Event.Event()", file="JsonSerializerTest.cs"];
m4_3666 [label="Entry Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="9006-9006", cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="JsonSerializerTest.cs"];
m4_3667 [label="Exit Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="9006-9006", cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="JsonSerializerTest.cs"];
m4_1603 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1604 [label="List<KVPair<string, string>> kvPairs =\r\n        JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n          ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="3753-3755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1605 [label="Assert.AreEqual(2, kvPairs.Count)", span="3757-3757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1606 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="3758-3758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1607 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="3759-3759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1608 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="3760-3760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1609 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="3761-3761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1610 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m4_1300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2929-2929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1301 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="2931-2981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1302 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="2983-2983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1303 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="2986-2986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1304 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="2989-2989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1305 [label=results, span="2990-2990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1307 [label="searchResults.Add(searchResult)", span="2993-2993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1308 [label="Assert.AreEqual(2, searchResults.Count)", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1309 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3005-3005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1310 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3006-3006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1306 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="2992-2992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_1311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2929-2929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m4_3096 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7203-7203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m4_3097 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7205-7205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m4_3098 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7206-7206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m4_3099 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7203-7203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m4_1447 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs"];
m4_824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1828-1828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m4_825 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="1830-1830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m4_826 [label="testClass.co = new Co()", span="1831-1831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m4_827 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1832-1832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m4_828 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'',\r\n        () =>\r\n        {\r\n          InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n        })", span="1834-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m4_829 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1828-1828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m4_364 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_371 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonSerializerTest.cs"];
m4_369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_366 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_365 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_368 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_367 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m4_725 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_729 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="1610-1610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_728 [label="UserNullable userNullablle = new UserNullable\r\n        {\r\n          Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n          FName = ''FirstValue'',\r\n          LName = ''LastValue'',\r\n          RoleId = 5,\r\n          NullableRoleId = 6,\r\n          NullRoleId = null,\r\n          Active = true\r\n        }", span="1599-1608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_730 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1612-1612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="1597-1597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_726 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="752-752", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs"];
m4_731 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1614-1614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m4_2787 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6499-6499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m4_2788 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(null);\r\n        })", span="6501-6507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m4_2789 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6499-6499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m4_1277 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs"];
m4_1286 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2898-2898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1287 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="2900-2900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1288 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="2901-2901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1289 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="2902-2902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1290 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2904-2904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1291 [label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="2906-2909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1292 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2898-2898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1557 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs"];
m4_2209 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="5140-5140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs"];
m4_2210 [label="var data = new DecimalTest(decimal.MinValue)", span="5142-5142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs"];
m4_2211 [label="var json = JsonConvert.SerializeObject(data)", span="5143-5143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs"];
m4_2212 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json)", span="5144-5144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs"];
m4_2213 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5146-5146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs"];
m4_2214 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", span="5140-5140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OnError()", file="JsonSerializerTest.cs"];
m4_552 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1699-1699", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonSerializerTest.cs"];
m4_553 [label="string json = @''{\r\n  ''''8452309520V2'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Exp. Date 1''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Issue Date 1''''\r\n        }\r\n      }\r\n    },\r\n    ''''457463534534'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS0'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}{\r\n  ''''34534634535345'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_NUMBER_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''S'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''WALK_IN'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Walk in''''\r\n        },\r\n        ''''PERSONAL_MEETING'''': {\r\n          ''''VALUE'''': ''''PM1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Met Client in Person''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''PHOTO_ID'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_TYPE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        }\r\n      }\r\n    },\r\n    ''''45635624523'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1701-1778", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonSerializerTest.cs"];
m4_554 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { DeserializeXmlNode(json); },\r\n                ''XmlNodeConverter cannot convert JSON with an empty property name to XML. Path '8452309520V2.', line 3, position 9.'')", span="1780-1782", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonSerializerTest.cs"];
m4_2749 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6429-6429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2750 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6431-6431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2751 [label="Assert.IsNull(v)", span="6432-6432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2752 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="6434-6434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2753 [label="Assert.IsNull(v)", span="6435-6435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2754 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="6437-6437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2755 [label="Assert.IsNull(v)", span="6438-6438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2756 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6440-6440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2757 [label="Assert.IsNull(v)", span="6441-6441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2758 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6443-6443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2759 [label="Assert.IsNull(v)", span="6444-6444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2760 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6446-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2761 [label="Assert.IsNull(v)", span="6447-6447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2762 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6449-6449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2763 [label="Assert.IsNull(v)", span="6450-6450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_2764 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6429-6429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m4_1251 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs"];
m4_3474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8343-8343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3475 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8345-8351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3476 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8353-8353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3477 [label="Assert.IsNull(c2.MyNullableBool)", span="8354-8354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3478 [label="Assert.IsNull(c2.MyNullableInteger)", span="8355-8355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3479 [label="Assert.IsNull(c2.MyNullableDateTime)", span="8356-8356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3480 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8357-8357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3481 [label="Assert.IsNull(c2.MyNullableDecimal)", span="8358-8358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_3482 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8343-8343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m4_2668 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6266-6266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2669 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6268-6268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2670 [label="string json = JsonConvert.SerializeObject(widget)", span="6270-6270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2671 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6272-6272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6266-6266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_530 [label="string json = @''{\r\n  ''''$id'''': []\r\n}''", span="1648-1650", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonSerializerTest.cs"];
m4_531 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json, ''root''); },\r\n                ''Unexpected JsonToken: StartArray. Path '$id', line 2, position 10.'')", span="1652-1654", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonSerializerTest.cs"];
m4_532 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1646-1646", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonSerializerTest.cs"];
m4_536 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonSerializerTest.cs"];
m4_537 [label="string json = @''{\r\n  ''''$id'''': null\r\n}''", span="1660-1662", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonSerializerTest.cs"];
m4_379 [label="StringAssert.AreEqual(expected, arrayJsonText)", span="1058-1058", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_380 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="1060-1067", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_381 [label="arrayDoc = new XmlDocument()", span="1069-1069", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_383 [label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1072-1072", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_387 [label="arrayDoc = new XmlDocument()", span="1096-1096", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_382 [label="arrayDoc.LoadXml(arrayXml)", span="1070-1070", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_384 [label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1073-1085", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_385 [label="StringAssert.AreEqual(expected, arrayJsonText)", span="1086-1086", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_386 [label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="1088-1094", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_388 [label="arrayDoc.LoadXml(arrayXml)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_389 [label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonSerializerTest.cs"];
m4_769 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m4_956 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m4_957 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m4_958 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m4_2582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6093-6093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2583 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6095-6095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2584 [label="JsonSerializer serializer = new JsonSerializer()", span="6097-6097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2589 [label="serializer.Serialize(bsonWriter, test)", span="6104-6104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2585 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6098-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2594 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2586 [label="byte[] objectBytes", span="6100-6100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2587 [label="MemoryStream bsonStream = new MemoryStream()", span="6101-6101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2588 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6102-6102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2591 [label="objectBytes = bsonStream.ToArray()", span="6107-6107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2590 [label="bsonWriter.Flush()", span="6105-6105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2592 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6110-6110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2593 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6111-6111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2595 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6116-6116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2596 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6117-6117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_2597 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6093-6093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m4_831 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs"];
m4_1690 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs"];
m4_1436 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3398-3398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_1437 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="3400-3400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_1438 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="3398-3398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m4_63 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="JsonSerializerTest.cs"];
m4_275 [label="XDocument doc2 = XDocument.Parse(xml)", span="727-727", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_276 [label="string json2 = JsonConvert.SerializeXNode(doc2, Formatting.Indented)", span="729-729", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_277 [label="StringAssert.AreEqual(expected, json2)", span="731-731", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_278 [label="XDocument doc22 = JsonConvert.DeserializeXNode(json2)", span="733-733", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_279 [label="StringAssert.AreEqual(xml, ToStringWithDeclaration(doc22))", span="735-735", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonSerializerTest.cs"];
m4_1363 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="3079-3079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs"];
m4_2891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6713-6713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2892 [label="string json = ''{}''", span="6715-6715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2893 [label="IList<string> errors = new List<string>()", span="6716-6716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2895 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n        {\r\n          Error = error\r\n        })", span="6724-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2894 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n        {\r\n          errors.Add(e.ErrorContext.Error.Message);\r\n          e.ErrorContext.Handled = true;\r\n        }", span="6718-6722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2897 [label="Assert.AreEqual(4, errors.Count)", span="6730-6730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2898 [label="Assert.AreEqual(''Required property 'NonAttributeProperty' not found in JSON. Path '', line 1, position 2.'', errors[0])", span="6731-6731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2899 [label="Assert.AreEqual(''Required property 'UnsetProperty' not found in JSON. Path '', line 1, position 2.'', errors[1])", span="6732-6732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2900 [label="Assert.AreEqual(''Required property 'AllowNullProperty' not found in JSON. Path '', line 1, position 2.'', errors[2])", span="6733-6733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2901 [label="Assert.AreEqual(''Required property 'AlwaysProperty' not found in JSON. Path '', line 1, position 2.'', errors[3])", span="6734-6734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2896 [label="Assert.IsNotNull(o)", span="6729-6729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2902 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6713-6713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m4_2403 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5706-5706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_2404 [label="throw new NotImplementedException();", span="5708-5708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_2405 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="5706-5706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_597 [label="string json = JsonConvert.SerializeObject(c)", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m4_600 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="1381-1381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m4_598 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="1378-1378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m4_599 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="1380-1380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m4_601 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="1382-1382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m4_602 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m4_603 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs"];
m4_310 [label="test.SweetCakesCount = int.MaxValue", span="876-876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_315 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_312 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="880-880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_314 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="884-884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_311 [label="string jsonText = JsonConvert.SerializeObject(test)", span="878-878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_313 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="882-882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_316 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m4_849 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs"];
m4_644 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs"];
m4_645 [label="Entry System.Text.Encoding.GetString(byte[])", span="0-0", cluster="System.Text.Encoding.GetString(byte[])", file="JsonSerializerTest.cs"];
m4_3455 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8285-8285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3456 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8287-8291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3457 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8293-8293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3461 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8298-8298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3458 [label="Assert.AreEqual(float.NaN, floats[0])", span="8294-8294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3459 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8295-8295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3460 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8296-8296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3462 [label="Assert.AreEqual(float.NaN, doubles[0])", span="8299-8299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3463 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8300-8300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3464 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8301-8301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_3465 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8285-8285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m4_1462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3436-3436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m4_1463 [label="return _innerDictionary.Remove(key);", span="3438-3438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m4_1464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="3436-3436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m4_2263 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5273-5273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m4_2264 [label="ComplexItem i = new ComplexItem()", span="5275-5275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m4_2265 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5277-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m4_2266 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5279-5281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m4_2267 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5273-5273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m4_1148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2608-2608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m4_1149 [label="string json = @''[]''", span="2610-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m4_1150 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<double>(json);\r\n        })", span="2612-2619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m4_1151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="2608-2608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m4_2819 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6565-6565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2820 [label="NullableDateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6567-6573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2821 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6575-6575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2822 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6576-6576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2823 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6577-6577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2824 [label="Assert.AreEqual(''Post'', c.PostField)", span="6578-6578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2825 [label="NullableDateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6580-6582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2826 [label="Assert.AreEqual(null, c2.DateTimeField)", span="6584-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2827 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6585-6585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2828 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6586-6586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2829 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6587-6587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6565-6565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m4_3668 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9027-9027", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3669 [label="writer.WriteValue('':::'' + value.ToString().ToUpper(CultureInfo.InvariantCulture) + '':::'')", span="9030-9030", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3670 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9027-9027", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1086 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1087 [label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="2476-2489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1088 [label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="2491-2491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1089 [label="Console.WriteLine(products.Count)", span="2493-2493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1090 [label="Product p1 = products[0]", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1092 [label="Assert.AreEqual(2, products.Count)", span="2501-2501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1093 [label="Assert.AreEqual(''Product 1'', products[0].Name)", span="2502-2502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1091 [label="Console.WriteLine(p1.Name)", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_1094 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonSerializerTest.cs"];
m4_416 [label="CollectionAssert.AreEqual(values, newValues)", span="1050-1050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_417 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1038-1038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_317 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs"];
m4_3388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="7997-7997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3389 [label="Event e1 = new Event\r\n      {\r\n        EventName = ''EventName!''\r\n      }", span="7999-8002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3390 [label="Event[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="8003-8003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3391 [label="IList<Event[,]> values1 = new List<Event[,]>\r\n        {\r\n          array1,\r\n          array1\r\n        }", span="8004-8008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3392 [label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.All,\r\n        Formatting = Formatting.Indented\r\n      })", span="8010-8014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3393 [label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests]], mscorlib'''',\r\n  ''''$values'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event[,], Newtonsoft.Json.Tests'''',\r\n      ''''$values'''': [\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          },\r\n          {\r\n            ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.Event, Newtonsoft.Json.Tests'''',\r\n            ''''EventName'''': ''''EventName!'''',\r\n            ''''Venue'''': null,\r\n            ''''Performances'''': null\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="8016-8086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3394 [label="IList<Event[,]> values2 = (IList<Event[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All\r\n        })", span="8088-8091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3395 [label="Assert.AreEqual(2, values2.Count)", span="8093-8093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3396 [label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="8094-8094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_3397 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", span="7997-7997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeName3DArray()", file="JsonSerializerTest.cs"];
m4_288 [label="return builder.ToString();", span="759-759", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="JsonSerializerTest.cs"];
m4_3036 [label="Entry Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="9069-9069", cluster="Newtonsoft.Json.Tests.Serialization.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m4_1727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4060-4060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1728 [label="throw new NotImplementedException();", span="4062-4062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1729 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4060-4060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="3292-3292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs"];
m4_415 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="1048-1048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m4_3602 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="8659-8659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerTest.cs"];
m4_3603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="8659-8659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", file="JsonSerializerTest.cs"];
m4_146 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m4_1693 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonSerializerTest.cs"];
m4_3307 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="7828-7828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_3308 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7830-7830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_3309 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7832-7834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_3310 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", span="7828-7828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_622 [label="var obj = JObject.FromObject(dict)", span="1993-1993", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_623 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings { Converters = { new XmlNodeConverter() { DeserializeRootElementName = ''root'' } } })", span="1994-1994", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_624 [label="var reader = obj.CreateReader()", span="1995-1995", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_628 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs"];
m4_629 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="435-435", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs"];
m4_625 [label="var value = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="1997-1997", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_626 [label="Assert.AreEqual(@''<root><Int16>1</Int16><Float>2</Float><Int32>3</Int32></root>'', value.InnerXml)", span="1999-1999", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_627 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1990-1990", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonSerializerTest.cs"];
m4_1440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3403-3403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m4_1441 [label="return _innerDictionary.ContainsKey(key);", span="3405-3405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m4_1442 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="3403-3403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m4_3419 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs"];
m4_1718 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4050-4050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1719 [label="Pos p = (Pos)value", span="4052-4052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1721 [label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1722 [label="writer.WriteNull()", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1720 [label="p != null", span="4054-4054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1723 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4050-4050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_66 [label="Assert.AreEqual(''{}'', json)", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="JsonSerializerTest.cs"];
m4_2659 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6224-6224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs"];
m4_2867 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs"];
m4_2660 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1405-1405", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs"];
m4_3109 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs"];
m4_3010 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="189-189", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="JsonSerializerTest.cs"];
m4_1127 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2561-2561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_1128 [label="string json = @''[]''", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_1129 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Person>(json);\r\n        })", span="2565-2572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_1130 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="2561-2561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_2047 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs"];
m4_2907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6738-6738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2908 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6740-6740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2909 [label="IList<string> errors = new List<string>()", span="6741-6741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2911 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n      {\r\n        Error = error\r\n      })", span="6749-6752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2910 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6743-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2913 [label="Assert.AreEqual(3, errors.Count)", span="6755-6755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2914 [label="Assert.AreEqual(''Required property 'NonAttributeProperty' expects a value but got null. Path '', line 1, position 97.'', errors[0])", span="6756-6756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2915 [label="Assert.AreEqual(''Required property 'UnsetProperty' expects a value but got null. Path '', line 1, position 97.'', errors[1])", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2916 [label="Assert.AreEqual(''Required property 'AlwaysProperty' expects a value but got null. Path '', line 1, position 97.'', errors[2])", span="6758-6758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2912 [label="Assert.IsNotNull(o)", span="6754-6754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_2917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6738-6738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m4_633 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m4_638 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m4_637 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="1436-1436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m4_635 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="1430-1430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m4_636 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="1432-1435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m4_634 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="1429-1429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m4_639 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="1440-1440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m4_1546 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs"];
m4_45 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs"];
m4_46 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs"];
m4_47 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_2991 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6937-6937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m4_2992 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="6939-6939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m4_2993 [label="var objDeserialized = this.SerializeAndDeserialize<PersonSerializable>(testObj)", span="6940-6940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m4_2994 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="6942-6942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m4_2995 [label="Assert.AreEqual(0, objDeserialized.Age)", span="6943-6943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m4_2996 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="6937-6937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m4_178 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs"];
m4_181 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs"];
m4_1115 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs"];
m4_1327 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3042-3042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m4_1328 [label="Dictionary = new Dictionary<string, string>\r\n          {\r\n            {''existing'', ''yup''}\r\n          }", span="3044-3047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m4_1329 [label="List = new List<string>\r\n          {\r\n            ''existing''\r\n          }", span="3048-3051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m4_1330 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3042-3042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m4_247 [label="Assert.AreNotSame(executorObject, executorObject2)", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_3237 [label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="9094-9094", cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", file="JsonSerializerTest.cs"];
m4_2253 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5236-5236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2254 [label="EnumerableClass c = new EnumerableClass\r\n        {\r\n          Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n        }", span="5238-5241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2255 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5243-5243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2256 [label="Assert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5245-5251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2257 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5253-5253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2258 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5255-5255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2259 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5256-5256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2260 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5257-5257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_2261 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5236-5236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m4_1599 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m4_1600 [label="Key = k", span="3745-3745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m4_1601 [label="Value = v", span="3746-3746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m4_1602 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m4_2675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6276-6276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2676 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6278-6278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2677 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6280-6280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2678 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6282-6282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2679 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6283-6283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2680 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6284-6284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_2681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6276-6276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m4_3637 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="8826-8826", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="JsonSerializerTest.cs"];
m4_3638 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", span="8826-8826", cluster="Newtonsoft.Json.Tests.Serialization.PersonWithPrivateConstructor.PersonWithPrivateConstructor()", file="JsonSerializerTest.cs"];
m4_87 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonSerializerTest.cs"];
m4_88 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonSerializerTest.cs"];
m4_2520 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs"];
m4_640 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs"];
m4_641 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs"];
m4_3213 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", span="7517-7517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3214 [label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="7519-7519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3215 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="7521-7521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3216 [label="Assert.AreEqual(@''{\r\n  ''''NonReadOnlyList'''': [\r\n    1\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 2\r\n  },\r\n  ''''Array'''': [\r\n    3\r\n  ],\r\n  ''''List'''': [\r\n    4\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 5\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    6\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    7\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    8\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 9\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 10\r\n  }\r\n}'', json)", span="7523-7554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3217 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", span="7517-7517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3321 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="7848-7848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_3322 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="7850-7850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_3323 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7852-7854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_3324 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", span="7848-7848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3D_WithTooFewItems()", file="JsonSerializerTest.cs"];
m4_2742 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6417-6417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m4_2743 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m4_2744 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6420-6420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m4_2746 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6423-6423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m4_2745 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6422-6422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m4_2747 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6425-6425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m4_2748 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6417-6417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m4_1993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4602-4602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs"];
m4_248 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_2922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2923 [label="IList<string> errors = new List<string>()", span="6764-6764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2924 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n      {\r\n        errors.Add(e.ErrorContext.Error.Message);\r\n        e.ErrorContext.Handled = true;\r\n      }", span="6766-6770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2927 [label="Assert.AreEqual(3, errors.Count)", span="6783-6783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2928 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6784-6784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2929 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6785-6785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2930 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6786-6786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2925 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n      {\r\n        Error = error,\r\n        Formatting = Formatting.Indented\r\n      })", span="6772-6776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2926 [label="Assert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6778-6781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_2931 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m4_479 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1449-1449", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonSerializerTest.cs"];
m4_480 [label="string json = @''{\r\n              ''''root!'''': {\r\n                ''''person!'''': [\r\n                  {\r\n                    ''''@id!'''': ''''1'''',\r\n                    ''''name!'''': ''''Alan'''',\r\n                    ''''url!'''': ''''http://www.google.com''''\r\n                  },\r\n                  {\r\n                    ''''@id!'''': ''''2'''',\r\n                    ''''name!'''': ''''Louis'''',\r\n                    ''''url!'''': ''''http://www.yahoo.com''''\r\n                  }\r\n                ]\r\n              }\r\n            }''", span="1451-1466", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonSerializerTest.cs"];
m4_481 [label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1468-1468", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonSerializerTest.cs"];
m4_482 [label="Assert.AreEqual(@''<root_x0021_><person_x0021_ id_x0021_=''''1''''><name_x0021_>Alan</name_x0021_><url_x0021_>http://www.google.com</url_x0021_></person_x0021_><person_x0021_ id_x0021_=''''2''''><name_x0021_>Louis</name_x0021_><url_x0021_>http://www.yahoo.com</url_x0021_></person_x0021_></root_x0021_>'', doc.InnerXml)", span="1470-1470", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonSerializerTest.cs"];
m4_2547 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="6039-6039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2548 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="6041-6041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2549 [label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(json)", span="6043-6043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2550 [label="Assert.AreEqual(3, values.Count)", span="6045-6045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2551 [label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="6046-6046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2552 [label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="6047-6047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2553 [label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="6048-6048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2554 [label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="6049-6049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2555 [label="Assert.AreEqual(null, values[1])", span="6050-6050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2556 [label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="6051-6051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2557 [label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="6052-6052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2558 [label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="6053-6053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2559 [label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="6054-6054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2560 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", span="6039-6039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_612 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="1399-1399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m4_3551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="8520-8520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_3552 [label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="8522-8522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_3553 [label="Assert.AreEqual(2, dic.Count)", span="8524-8524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_3554 [label="Assert.AreEqual(1, dic[''one''])", span="8526-8526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_3555 [label="Assert.AreEqual(2, dic[''two''])", span="8527-8527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_3556 [label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="8529-8529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_3557 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", span="8520-8520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_698 [label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json2)", span="2555-2555", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_2495 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5944-5944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2496 [label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\r\n        {\r\n          {''First'', 1},\r\n          {''Second'', null},\r\n          {''Third'', 3}\r\n        }", span="5946-5951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2497 [label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="5953-5953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2498 [label="Assert.AreEqual(@''{\r\n  ''''First'''': 1,\r\n  ''''Second'''': null,\r\n  ''''Third'''': 3\r\n}'', json)", span="5955-5959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2499 [label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="5961-5961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2500 [label="Assert.AreEqual(3, v2.Count)", span="5962-5962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2501 [label="Assert.AreEqual(1, v2[''First''])", span="5963-5963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2502 [label="Assert.AreEqual(null, v2[''Second''])", span="5964-5964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2503 [label="Assert.AreEqual(3, v2[''Third''])", span="5965-5965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2504 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", span="5944-5944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableValueGenericDictionary()", file="JsonSerializerTest.cs"];
m4_2218 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="5160-5160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2219 [label="Value = value", span="5162-5162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2220 [label="Constructor = ''Public Paramatized''", span="5163-5163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2221 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="5160-5160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_1555 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs"];
m4_3196 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs"];
m4_3212 [label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs"];
m4_64 [label="FieldExtensionDataAttributeTestClass c = new FieldExtensionDataAttributeTestClass\r\n        {\r\n          ExtensionData = new Dictionary<object, object>()\r\n        }", span="274-277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTest_Serialize()", file="JsonSerializerTest.cs"];
m4_1515 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs"];
m4_1745 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="4088-4088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1746 [label="return objectType.IsAssignableFrom(typeof(PosDouble));", span="4090-4090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1747 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="4088-4088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_2024 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs"];
m4_3027 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7025-7025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs"];
m4_1313 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3010-3010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1314 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3012-3012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1315 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3013-3013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1321 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3021-3021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1316 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3015-3015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1317 [label="wagePerson.Department = ''McDees''", span="3016-3016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1318 [label="wagePerson.HourlyWage = 12.50m", span="3017-3017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1319 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3018-3018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1320 [label="wagePerson.Name = ''Jim Bob''", span="3019-3019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1324 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3034-3034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1322 [label="Assert.AreEqual(\r\n        @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n        json)", span="3022-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1323 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3033-3033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_1325 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3010-3010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m4_863 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_691 [label="var xmlString = @''<root xmlns=''''http://www.example.com/ns''''>\r\n  <a/>\r\n  <bns:b xmlns:bns=''''http://www.example.com/ns''''/>\r\n  <c/>\r\n</root>''", span="2536-2540", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_692 [label="var xml = XElement.Parse(xmlString)", span="2543-2543", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_693 [label="var json1 = JsonConvert.SerializeObject(xml)", span="2545-2545", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonSerializerTest.cs"];
m4_3679 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="JsonSerializerTest.cs"];
m4_1829 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="895-895", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_1378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m4_1379 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m4_1380 [label="ExceptionAssert.Throws<JsonSerializationException>(''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'',\r\n        () => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All }))", span="3198-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m4_1381 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m4_296 [label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="766-766", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="JsonSerializerTest.cs"];
m4_297 [label="doc.Save(writer)", span="768-768", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="JsonSerializerTest.cs"];
m4_298 [label="return builder.ToString();", span="770-770", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="JsonSerializerTest.cs"];
m4_299 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", span="763-763", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="JsonSerializerTest.cs"];
m4_300 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="774-774", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_301 [label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="776-798", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_302 [label="XmlDocument doc = new XmlDocument()", span="800-800", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_303 [label="doc.LoadXml(xml)", span="801-801", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_1044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="2372-2372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1045 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="2374-2374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1046 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="2376-2376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1047 [label="Assert.AreEqual(''Router'', o.Action)", span="2378-2378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1048 [label="Assert.AreEqual(''Navigate'', o.Method)", span="2379-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1049 [label="Assert.AreEqual(2, o.Data.Length)", span="2380-2380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1050 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="2381-2381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1051 [label="Assert.AreEqual(null, o.Data[1])", span="2382-2382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1052 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="2372-2372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_283 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m4_284 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="757-757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m4_1838 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="4267-4267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1839 [label="return (objectType == typeof(string));", span="4269-4269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", span="4267-4267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_3398 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="684-684", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_3672 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9036-9036", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3673 [label="string s = (string)reader.Value", span="9038-9038", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3674 [label="s == null", span="9039-9039", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3676 [label="return s.ToLower(CultureInfo.InvariantCulture).Trim(new[] { ':' });", span="9043-9043", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3675 [label="return null;", span="9040-9040", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3677 [label="Exit Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9036-9036", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_110 [label="var cc = new ChildDataContractWithHidden\r\n      {\r\n        VirtualMember = ''VirtualMember!'',\r\n        NonVirtualMember = ''NonVirtualMember!'',\r\n        NewMember = ''NewMember!''\r\n      }", span="365-370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m4_1465 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs"];
m4_90 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_91 [label="string xml = @''<result xp_0:end=''''2014-08-15 13:12:11.9184'''' xp_0:start=''''2014-08-15 13:11:49.3140'''' xp_0:time_diff=''''22604.3836'''' xmlns:xp_0=''''Test1'''' p2:end=''''2014-08-15 13:13:49.5522'''' p2:start=''''2014-08-15 13:13:49.0268'''' p2:time_diff=''''525.4646'''' xmlns:p2=''''Test2'''' />''", span="203-203", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_92 [label="XmlDocument d = new XmlDocument()", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_93 [label="d.LoadXml(xml)", span="206-206", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_94 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_95 [label="StringAssert.AreEqual(@''{\r\n  ''''result'''': {\r\n    ''''@xp_0:end'''': ''''2014-08-15 13:12:11.9184'''',\r\n    ''''@xp_0:start'''': ''''2014-08-15 13:11:49.3140'''',\r\n    ''''@xp_0:time_diff'''': ''''22604.3836'''',\r\n    ''''@xmlns:xp_0'''': ''''Test1'''',\r\n    ''''@p2:end'''': ''''2014-08-15 13:13:49.5522'''',\r\n    ''''@p2:start'''': ''''2014-08-15 13:13:49.0268'''',\r\n    ''''@p2:time_diff'''': ''''525.4646'''',\r\n    ''''@xmlns:p2'''': ''''Test2''''\r\n  }\r\n}'', json)", span="210-221", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_96 [label="XmlDocument doc = JsonConvert.DeserializeObject<XmlDocument>(json)", span="223-223", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_97 [label="StringAssert.AreEqual(xml, doc.OuterXml)", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_98 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNamespacesXmlDocument()", file="JsonSerializerTest.cs"];
m4_99 [label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="332-332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericCollectionInheritance()", file="JsonSerializerTest.cs"];
m4_101 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="JsonSerializerTest.cs"];
m4_102 [label="string xml = @''<payload>\r\n    <Country>6</Country>\r\n    <FinancialTransactionApprovalRequestUID>79</FinancialTransactionApprovalRequestUID>\r\n    <TransactionStatus>Approved</TransactionStatus>\r\n    <StatusChangeComment></StatusChangeComment>\r\n    <RequestedBy>Someone</RequestedBy>\r\n</payload>''", span="231-237", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="JsonSerializerTest.cs", color=green, community=0];
m4_103 [label="var xmlDocument = new XmlDocument()", span="239-239", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="JsonSerializerTest.cs", color=green, community=0];
m4_104 [label="xmlDocument.LoadXml(xml)", span="241-241", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="JsonSerializerTest.cs", color=green, community=0];
m4_885 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1958-1958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_886 [label="SubKlass i = new SubKlass(''my subprop'')", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_887 [label="i.SuperProp = ''overrided superprop''", span="1961-1961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_888 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1963-1966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_889 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1968-1968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_890 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1970-1973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_891 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n      })", span="1975-1978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_892 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_893 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="1958-1958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m4_1519 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs"];
m4_3158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7360-7360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m4_3159 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7362-7364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m4_3160 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7366-7366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m4_3161 [label="BigInteger nineQuindecillion = l[0]", span="7368-7368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m4_3162 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7371-7371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m4_3163 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7360-7360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m4_67 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="JsonSerializerTest.cs"];
m4_2799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6524-6524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m4_2800 [label="string jsonIsoText =\r\n        @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6526-6527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m4_2801 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6529-6529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m4_2802 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6530-6530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m4_2803 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6524-6524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m4_3280 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="7788-7788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_3281 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7790-7790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_3282 [label="ExceptionAssert.Throws<Exception>(\r\n        ''Cannot deserialize non-cubical array as multidimensional array.'',\r\n        () => JsonConvert.DeserializeObject<Array2D>(json))", span="7792-7794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_3283 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", span="7788-7788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D_WithTooManyItems()", file="JsonSerializerTest.cs"];
m4_575 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1827-1827", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_576 [label="TestComplexArrayClass o = new TestComplexArrayClass\r\n            {\r\n                Name = ''Hi'',\r\n                Products = new List<Product>\r\n                {\r\n                    new Product { Name = ''First'' }\r\n                }\r\n            }", span="1829-1836", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_577 [label="string output = JsonConvert.SerializeObject(o, new IsoDateTimeConverter())", span="1838-1838", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_578 [label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''test'', true)", span="1840-1840", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonSerializerTest.cs"];
m4_1545 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs"];
m4_2194 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5102-5102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m4_2195 [label="Response response = new Response\r\n        {\r\n          Name = ''Success'',\r\n          Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n        }", span="5104-5108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m4_2196 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5110-5110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m4_2199 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5115-5115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m4_2197 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5112-5112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m4_2198 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5114-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m4_2200 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5102-5102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m4_107 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Country'''': ''''6''''\r\n  },\r\n  {\r\n    ''''FinancialTransactionApprovalRequestUID'''': ''''79''''\r\n  },\r\n  {\r\n    ''''TransactionStatus'''': ''''Approved''''\r\n  },\r\n  {\r\n    ''''StatusChangeComment'''': ''''''''\r\n  },\r\n  {\r\n    ''''RequestedBy'''': ''''Someone''''\r\n  }\r\n]'', json)", span="247-263", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="JsonSerializerTest.cs"];
m4_540 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m4_542 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m4_541 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="1272-1272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m4_543 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="1275-1275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m4_2167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5019-5019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_2168 [label="_name = info.GetString(''Name'')", span="5021-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_2169 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5019-5019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m4_3612 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="8682-8682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerTest.cs"];
m4_3613 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="8682-8682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", file="JsonSerializerTest.cs"];
m4_1293 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2913-2913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1294 [label="ExceptionAssert.Throws<JsonSerializationException>(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path 'Newtonsoft.Json.Tests.TestObjects.Person', line 2, position 46.'',\r\n      () =>\r\n      {\r\n        string json =\r\n          @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'';\r\n\r\n        JsonConvert.DeserializeObject<Dictionary<Person, int>>(json);\r\n      })", span="2915-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2913-2913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_3420 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8195-8195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m4_3421 [label="IList<object> dates = new List<object>\r\n        {\r\n          new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n        }", span="8197-8201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m4_3422 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n      })", span="8203-8206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m4_3423 [label="Assert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8208-8211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m4_3424 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8195-8195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m4_281 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m4_295 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="670-670", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs"];
m4_2233 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5193-5193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2234 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5195-5195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2235 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5196-5196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2236 [label="Assert.AreEqual(''value!'', c.Value)", span="5197-5197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_2237 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5193-5193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m4_3596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8637-8637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3597 [label="IList<int> l = new List<int>\r\n                       {\r\n                         1,\r\n                         2,\r\n                         3\r\n                       }", span="8639-8644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3598 [label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="8646-8646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3599 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="8648-8648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3600 [label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="8649-8653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_3601 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", span="8637-8637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReadOnlyCollection()", file="JsonSerializerTest.cs"];
m4_352 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="992-992", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JsonSerializerTest.cs"];
m4_354 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="992-992", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JsonSerializerTest.cs"];
m4_353 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]''); }, ''XmlNodeConverter can only convert JSON that begins with an object.'')", span="994-994", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JsonSerializerTest.cs"];
m4_1521 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs"];
m4_1726 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="757-757", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs"];
m4_2346 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5560-5560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m4_2347 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n        {\r\n          InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n          NewMember = ''NewMember!''\r\n        }", span="5562-5566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m4_2348 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5568-5568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m4_2349 [label="Assert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5570-5573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m4_2350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5560-5560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m4_3086 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7180-7180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3087 [label="writer.WriteValue(''X'')", span="7182-7182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3088 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7180-7180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_461 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1312-1312", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonSerializerTest.cs"];
m4_435 [label="var anonymous =\r\n        new\r\n        {\r\n          DateValue = d\r\n        }", span="1084-1088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_434 [label="DateTime d = new DateTime(2000, 1, 1)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_436 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_109 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonSerializerTest.cs"];
m4_111 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonSerializerTest.cs"];
m4_112 [label="string xml = @''<payload>\r\n    <Country>6</Country>\r\n    <FinancialTransactionApprovalRequestUID>79</FinancialTransactionApprovalRequestUID>\r\n    <TransactionStatus>Approved</TransactionStatus>\r\n    <StatusChangeComment></StatusChangeComment>\r\n    <RequestedBy>Someone</RequestedBy>\r\n</payload>''", span="270-276", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonSerializerTest.cs"];
m4_113 [label="var xmlDocument = XDocument.Parse(xml)", span="278-278", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonSerializerTest.cs"];
m4_226 [label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="560-560", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_227 [label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="562-562", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_228 [label="XmlElement element = doc.CreateElement(''xs'', ''Choice'', ''http://www.w3.org/2001/XMLSchema'')", span="565-565", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_229 [label="element.SetAttributeNode(doc.CreateAttribute(''msdata'', ''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata''))", span="566-566", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_238 [label="doc.AppendChild(element)", span="579-579", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_230 [label="XmlAttribute aa = doc.CreateAttribute(@''xmlns'', ''xs'', ''http://www.w3.org/2000/xmlns/'')", span="568-568", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_233 [label="aa = doc.CreateAttribute(@''xmlns'', ''msdata'', ''http://www.w3.org/2000/xmlns/'')", span="572-572", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_231 [label="aa.Value = ''http://www.w3.org/2001/XMLSchema''", span="569-569", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_236 [label="element.AppendChild(instruction)", span="576-576", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_232 [label="element.SetAttributeNode(aa)", span="570-570", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_234 [label="aa.Value = ''urn:schemas-microsoft-com:xml-msdata''", span="573-573", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_235 [label="element.SetAttributeNode(aa)", span="574-574", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_237 [label="element.AppendChild(cDataSection)", span="577-577", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_239 [label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="581-581", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonSerializerTest.cs"];
m4_2932 [label="Entry Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", span="9012-9012", cluster="Newtonsoft.Json.Tests.Serialization.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs"];
m4_1921 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="9134-9134", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="JsonSerializerTest.cs"];
m4_1451 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_2394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5681-5681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m4_2395 [label="throw new NotImplementedException();", span="5683-5683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m4_2396 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="5681-5681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m4_255 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="595-595", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="JsonSerializerTest.cs"];
m4_254 [label="StringAssert.AreEqual(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', json)", span="611-619", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="JsonSerializerTest.cs"];
m4_1470 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_1471 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="3448-3448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_1472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_1511 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs"];
m4_974 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2194-2194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_975 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2196-2213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_976 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                                                                                           new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2215-2216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_977 [label="Assert.AreEqual(''Name!'', c.Name)", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_978 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="2219-2219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_979 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2220-2220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_980 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_981 [label="Assert.AreEqual(4, c.Collection.Count)", span="2222-2222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_982 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="2223-2223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_983 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="2224-2224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_984 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="2225-2225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_985 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_986 [label="Assert.IsNotNull(c.Random)", span="2227-2227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2194-2194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m4_1547 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs"];
m4_240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_217 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs"];
m4_241 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_3147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m4_3148 [label="m_Item1 = item1", span="7330-7330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m4_3149 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m4_148 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", span="332-332", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", file="JsonSerializerTest.cs"];
m4_149 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="362-362", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonSerializerTest.cs"];
m4_150 [label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="364-364", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonSerializerTest.cs"];
m4_151 [label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="366-366", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonSerializerTest.cs"];
m4_152 [label="Assert.AreEqual(@''{''''root'''':{''''p'''':{''''#text'''':[''''Text1'''','''' Text2''''],''''span'''':[''''Span1'''',''''Span2'''']}}}'', json)", span="368-368", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonSerializerTest.cs"];
m4_153 [label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="370-370", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonSerializerTest.cs"];
m4_154 [label="StringAssert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="372-374", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonSerializerTest.cs"];
m4_155 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="362-362", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonSerializerTest.cs"];
m4_1735 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4073-4073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1736 [label="PosDouble p = (PosDouble)value", span="4075-4075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1738 [label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="4078-4078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1739 [label="writer.WriteNull()", span="4080-4080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1737 [label="p != null", span="4077-4077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1740 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4073-4073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1444 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3408-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m4_1445 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="3410-3410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m4_1446 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="3408-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m4_3200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="7497-7497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3201 [label="NonReadOnlyList = new List<int> { 1 }", span="7499-7499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3202 [label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="7500-7500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3203 [label="Array = new[] {3}", span="7502-7502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3204 [label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="7504-7504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3205 [label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="7505-7505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3206 [label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3207 [label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="7508-7508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3208 [label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="7509-7509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3209 [label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="7511-7511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3210 [label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="7512-7512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_3211 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="7497-7497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="JsonSerializerTest.cs"];
m4_2561 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="6058-6058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2562 [label="string json = @''[ null ]''", span="6060-6060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2563 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json);\r\n        })", span="6062-6067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_2564 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", span="6058-6058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToNonNullableKeyValuePairArray()", file="JsonSerializerTest.cs"];
m4_69 [label="Foo foo = new Foo { Bar = null }", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonSerializerTest.cs"];
m4_70 [label="string json = JsonConvert.SerializeObject(foo)", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonSerializerTest.cs"];
m4_71 [label="Assert.AreEqual(@''{''''Bar'''':null}'', json)", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonSerializerTest.cs"];
m4_72 [label="Foo foo2 = JsonConvert.DeserializeObject<Foo>(json)", span="167-167", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonSerializerTest.cs"];
m4_73 [label="Assert.IsNull(foo2.Bar)", span="169-169", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonSerializerTest.cs"];
m4_74 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonSerializerTest.cs"];
m4_905 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m4_3028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7041-7041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_3029 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n        {\r\n          NoAttribute = ''Value!'',\r\n          IgnoreDataMemberAttribute = ''Value!'',\r\n          DataMemberAttribute = ''Value!'',\r\n          IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n        }", span="7043-7049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_3030 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7057-7057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_3031 [label="Assert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7058-7061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_3032 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n      {\r\n        NoAttribute = ''Value!'',\r\n        IgnoreDataMemberAttribute = ''Value!'',\r\n        DataMemberAttribute = ''Value!'',\r\n        IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n      }", span="7063-7069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_3033 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7071-7071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_3034 [label="Assert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7072-7075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_3035 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7041-7041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m4_144 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m4_145 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs"];
m4_1815 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="332-332", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerTest.cs"];
m4_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs"];
m4_1987 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4606-4606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m4_1988 [label="return Value;", span="4608-4608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m4_1989 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="4606-4606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m4_2068 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4799-4799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m4_2069 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="4801-4801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m4_2070 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="4802-4802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m4_2071 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="4799-4799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m4_2292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5365-5365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m4_2293 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5367-5376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m4_2294 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5378-5378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m4_2295 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5380-5380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m4_2296 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5381-5381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m4_2297 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5382-5382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m4_2298 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5365-5365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m4_1654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs"];
m4_1655 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs"];
m4_1095 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2507-2507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m4_1096 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="2509-2509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m4_1097 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="2511-2511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m4_1098 [label="Assert.AreEqual(null, c.DateTimeField)", span="2512-2512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m4_1099 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="2507-2507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m4_2515 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="342-342", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs"];
m4_631 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m4_2517 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1547-1547", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs"];
m4_2039 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs"];
m4_3089 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="795-795", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerTest.cs"];
m4_2771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6470-6470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2772 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringComparison>('''');\r\n        })", span="6472-6477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2773 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6470-6470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m4_114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs"];
m4_3003 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6967-6967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m4_3011 [label="var jsonReader = new Newtonsoft.Json.JsonTextReader(new StringReader(json))", span="6970-6970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m4_3012 [label="var serializer = new Newtonsoft.Json.JsonSerializer()", span="6971-6971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m4_3014 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="6977-6977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m4_3013 [label="serializer.ContractResolver = new DefaultContractResolver(false)\r\n      {\r\n        IgnoreSerializableAttribute = false\r\n      }", span="6972-6975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m4_3015 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="6967-6967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m4_2723 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2724 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = null\r\n        })", span="6379-6383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2725 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6385-6385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2726 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6387-6387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2727 [label="Assert.AreEqual(null, e.NullableEnum)", span="6389-6389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2728 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n        {\r\n          Id = 7,\r\n          NullableEnum = MyEnum.Value2\r\n        })", span="6391-6395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2729 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6397-6397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2730 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6399-6399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2731 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6401-6401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2732 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m4_2204 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="5126-5126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs"];
m4_2205 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", span="5126-5126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs"];
m4_3537 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="8496-8496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs"];
m4_3538 [label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="8498-8498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs"];
m4_3539 [label="Assert.AreEqual(3, list.Count)", span="8500-8500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs"];
m4_3540 [label="Assert.AreEqual(1, list.ElementAt(0))", span="8502-8502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs"];
m4_3541 [label="Assert.AreEqual(2, list.ElementAt(1))", span="8503-8503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs"];
m4_3542 [label="Assert.AreEqual(3, list.ElementAt(2))", span="8504-8504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs"];
m4_3543 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", span="8496-8496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyCollectionInterface()", file="JsonSerializerTest.cs"];
m4_68 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", file="JsonSerializerTest.cs"];
m4_2603 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs"];
m4_1653 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m4_864 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSerializerTest.cs"];
m4_2887 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs"];
m4_3514 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8437-8437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m4_3515 [label="string json =\r\n        JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n              {\r\n                IgnoreSerializableAttribute = false\r\n              }\r\n          })", span="8439-8446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m4_3516 [label="Assert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8448-8455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m4_3517 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8437-8437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m4_106 [label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="245-245", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlElement()", file="JsonSerializerTest.cs"];
m4_700 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m4_701 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="1552-1552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m4_702 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m4_2689 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6304-6304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m4_2690 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when setting PreProperty's value. Path 'PreProperty', line 2, position 18.'',\r\n        () =>\r\n        {\r\n          string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n          JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n        })", span="6306-6314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m4_2691 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6304-6304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m4_2276 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5309-5309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m4_2277 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(''null'', typeof(DateTime));\r\n        })", span="5311-5316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m4_2278 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5309-5309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m4_1474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3453-3453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1475 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="3455-3455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1476 [label="modelStateDictionary.Add(''key'', ''value'')", span="3456-3456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1477 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="3458-3458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1478 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="3460-3460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1479 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="3462-3462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1480 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="3463-3463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1481 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="3464-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_1482 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="3453-3453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m4_12 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_11 [label="return GetEnumerator();", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_13 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", file="JsonSerializerTest.cs"];
m4_10 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_14 [label="Ints = new List<int> { 0 }", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass.ExtensionDataTestClass()", file="JsonSerializerTest.cs"];
m4_3617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8694-8694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs"];
m4_3618 [label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="8696-8696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs"];
m4_3619 [label="Assert.AreEqual(3, list.Count)", span="8698-8698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs"];
m4_3620 [label="Assert.AreEqual(1, list[0])", span="8699-8699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs"];
m4_3621 [label="Assert.AreEqual(2, list[1])", span="8700-8700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs"];
m4_3622 [label="Assert.AreEqual(0, list[2])", span="8701-8701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs"];
m4_3623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", span="8694-8694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePrivateListConstructor()", file="JsonSerializerTest.cs"];
m4_1734 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs"];
m4_2467 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5888-5888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs"];
m4_2468 [label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="5890-5890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs"];
m4_2469 [label="Assert.AreEqual(3, list.Count)", span="5891-5891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs"];
m4_2470 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", span="5888-5888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIList()", file="JsonSerializerTest.cs"];
m4_1785 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="4154-4154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1786 [label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="4156-4156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1787 [label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="4158-4158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1788 [label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department1'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 1\r\n        }))", span="4159-4165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1789 [label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n        {\r\n          BirthDate = dateTime,\r\n          Department = ''Department2'',\r\n          LastModified = dateTime,\r\n          HourlyWage = 2\r\n        }))", span="4166-4172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1790 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="4174-4174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1791 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="4176-4195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1792 [label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="4197-4197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1793 [label="Assert.AreEqual(2, result.Count)", span="4198-4198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1794 [label="Assert.AreEqual(''key1'', result[0].Key)", span="4199-4199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1795 [label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="4200-4200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1796 [label="Assert.AreEqual(''key2'', result[1].Key)", span="4201-4201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1797 [label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="4202-4202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1798 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="4154-4154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonSerializerTest.cs"];
m4_3268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="7769-7769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3269 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="7771-7771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3270 [label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="7773-7773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3278 [label="Assert.AreEqual(json, after)", span="7784-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3271 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3272 [label="Assert.AreEqual(''After!'', aa.After)", span="7776-7776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3273 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7777-7777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3274 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7778-7778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3275 [label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="7779-7779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3276 [label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="7780-7780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3277 [label="string after = JsonConvert.SerializeObject(aa)", span="7782-7782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3279 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", span="7769-7769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray2D()", file="JsonSerializerTest.cs"];
m4_3624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", span="8705-8705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerTest.cs"];
m4_3625 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(@''{''''04/28/2013 00:00:00'''':''''test''''}'')", span="8707-8707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerTest.cs"];
m4_3626 [label="Assert.AreEqual(1, d.Count)", span="8709-8709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerTest.cs"];
m4_3628 [label="Assert.AreEqual(''test'', d[key])", span="8712-8712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerTest.cs"];
m4_3627 [label="DateTime key = DateTime.Parse(''04/28/2013 00:00:00'', CultureInfo.InvariantCulture)", span="8711-8711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerTest.cs"];
m4_3629 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", span="8705-8705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonIsoDateDictionaryKey()", file="JsonSerializerTest.cs"];
m4_1652 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="475-475", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs"];
m4_3128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="7277-7277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerTest.cs"];
m4_3129 [label="_values = new List<T>()", span="7279-7279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerTest.cs"];
m4_3130 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", span="7277-7277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>.EnumerableClassFailure()", file="JsonSerializerTest.cs"];
m4_2889 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1730-1730", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m4_3090 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7185-7185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3091 [label="return ''X'';", span="7187-7187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3092 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7185-7185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2323 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5474-5474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2324 [label="ChildDataContract cc = new ChildDataContract\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5476-5480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2325 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5482-5482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2327 [label="serializer.WriteObject(ms, cc)", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2326 [label="MemoryStream ms = new MemoryStream()", span="5484-5484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2328 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5487-5487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2329 [label="Console.WriteLine(xml)", span="5489-5489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2330 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5474-5474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m4_2332 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs"];
m4_3519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="8460-8460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs"];
m4_3520 [label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="8462-8462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs"];
m4_3521 [label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs"];
m4_3522 [label="Assert.AreEqual(1, l.Count)", span="8465-8465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs"];
m4_3523 [label="Assert.AreEqual(''string!'', l[0])", span="8466-8466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs"];
m4_3524 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", span="8460-8460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNonGenericList()", file="JsonSerializerTest.cs"];
m4_2333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5516-5516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m4_2334 [label="ChildObject cc = new ChildObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5518-5522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m4_2335 [label="string result = JsonConvert.SerializeObject(cc)", span="5524-5524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m4_2336 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5525-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m4_2337 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5516-5516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m4_1066 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="151-151", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs"];
m4_1235 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1236 [label="List<String> strings = new List<String>()", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1237 [label="strings.Add(''str_1'')", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1238 [label="strings.Add(''str_2'')", span="2810-2810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1239 [label="strings.Add(''str_3'')", span="2811-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1240 [label="string json = JsonConvert.SerializeObject(strings)", span="2813-2813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1241 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="2814-2814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m4_1243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2818-2818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_1244 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="2820-2820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_1245 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_1246 [label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="2822-2825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_1247 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="2827-2827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_1248 [label="Assert.AreEqual(''String!'', c2.A)", span="2828-2828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_1249 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="2829-2829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_1250 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="2818-2818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m4_2734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6405-6405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m4_2735 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6407-6407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m4_2736 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6409-6409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m4_2737 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6411-6411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m4_2738 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6413-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m4_2739 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6405-6405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m4_2937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6790-6790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2938 [label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data =\r\n            new[]{\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6792-6800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2939 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2940 [label="Assert.IsNotNull(c2)", span="6804-6804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2941 [label="Assert.AreEqual(2, c2.Data.Count)", span="6805-6805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2942 [label="Assert.AreEqual(''one'', c2.Data[0])", span="6806-6806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2943 [label="Assert.AreEqual(''two'', c2.Data[1])", span="6807-6807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2944 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6790-6790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2890 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="JsonSerializerTest.cs"];
m4_2804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6535-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2805 [label="DateTimeTestClass c =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6537-6543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2806 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6545-6545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2807 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6546-6546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2808 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6547-6547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2809 [label="Assert.AreEqual(''Post'', c.PostField)", span="6548-6548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2810 [label="DateTimeTestClass c2 =\r\n        JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n          @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n          new JsonSerializerSettings\r\n          {\r\n            DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n          })", span="6550-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2811 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6558-6558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2812 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6559-6559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2813 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6560-6560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2814 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6561-6561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2815 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6535-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m4_2067 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs"];
m4_2406 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5713-5713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m4_2407 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          DerivedClassValue = ''DerivedClassValue!'',\r\n          NonSerialized = ''NonSerialized!''\r\n        }, Formatting.Indented)", span="5715-5720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m4_2408 [label="Assert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5722-5725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m4_2409 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n        {\r\n          BaseClassValue = ''BaseClassValue!'',\r\n          CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n        }, Formatting.Indented)", span="5727-5731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m4_2410 [label="Assert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5733-5736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m4_2411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5713-5713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m4_2299 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5387-5387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m4_2300 [label="this.A = A", span="5389-5389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m4_2301 [label="B = 2", span="5390-5390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m4_2302 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5387-5387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m4_2229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5185-5185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2230 [label="Value = value", span="5187-5187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2231 [label="Constructor = ''Public Paramatized''", span="5188-5188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2232 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="5185-5185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_1190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2694-2694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_1191 [label="string json = @''[]''", span="2696-2696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_1192 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new Person());\r\n        })", span="2698-2703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_1193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="2694-2694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m4_3256 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7700-7700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3257 [label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Coordinates'''': [\r\n    [\r\n      [\r\n        1.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        1.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        1.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        1.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        1.0,\r\n        2.0\r\n      ]\r\n    ],\r\n    [\r\n      [\r\n        2.0,\r\n        2.0,\r\n        1.0\r\n      ],\r\n      [\r\n        2.0,\r\n        2.0,\r\n        2.0\r\n      ]\r\n    ]\r\n  ],\r\n  ''''After'''': ''''After!''''\r\n}''", span="7702-7755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3258 [label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="7757-7757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3259 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7759-7759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3260 [label="Assert.AreEqual(''After!'', aa.After)", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3261 [label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="7761-7761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3262 [label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="7762-7762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3263 [label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="7763-7763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3264 [label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="7764-7764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3265 [label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="7765-7765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3266 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", span="7700-7700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeArray3DWithConverter()", file="JsonSerializerTest.cs"];
m4_3593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8630-8630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3594 [label="return _values.GetEnumerator();", span="8632-8632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3595 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="8630-8630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_1549 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs"];
m4_2673 [label="Entry Newtonsoft.Json.Tests.Serialization.Widget.Widget()", span="8906-8906", cluster="Newtonsoft.Json.Tests.Serialization.Widget.Widget()", file="JsonSerializerTest.cs"];
m4_2969 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6880-6880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2970 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n        {\r\n          {new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1},\r\n          {new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2}\r\n        }", span="6882-6886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2971 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="6888-6888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2972 [label="Assert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="6890-6893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2973 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="6895-6895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2974 [label="Assert.AreEqual(2, dic2.Count)", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2975 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6898-6898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2976 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="6899-6899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_2977 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="6880-6880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m4_717 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs"];
m4_720 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="1586-1586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_719 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_721 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="1588-1588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_722 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="1590-1590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_723 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="1591-1591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_724 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="1592-1592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m4_1067 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2404-2404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1068 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="2406-2406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1069 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="2408-2408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1070 [label="Console.WriteLine(values.Count)", span="2410-2410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1071 [label="Console.WriteLine(values[''key1''])", span="2413-2413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1072 [label="Assert.AreEqual(2, values.Count)", span="2416-2416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1073 [label="Assert.AreEqual(''value1'', values[''key1''])", span="2417-2417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1074 [label="Assert.AreEqual(''value2'', values[''key2''])", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1075 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="2404-2404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m4_1349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3117-3117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m4_1350 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="3119-3119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m4_1351 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3117-3117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m4_457 [label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/''''/* Hi */,\r\n      ''''span'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="1322-1331", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonSerializerTest.cs"];
m4_245 [label="string output = JsonConvert.SerializeObject(executorObject)", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m4_2997 [label="Entry Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="8789-8789", cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs"];
m4_3636 [label="Exit Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", span="8789-8789", cluster="Newtonsoft.Json.Tests.Serialization.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs"];
m4_256 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m4_260 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m4_259 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="712-712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m4_258 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m4_257 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m4_2124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4914-4914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m4_2125 [label="string json = ''[123456789876543.21]''", span="4916-4916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m4_2126 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="4917-4917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m4_2127 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="4918-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m4_2128 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="4914-4914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m4_2531 [label="Entry Newtonsoft.Json.Tests.Serialization.Component.Component()", span="8983-8983", cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="JsonSerializerTest.cs"];
m4_3663 [label="Exit Newtonsoft.Json.Tests.Serialization.Component.Component()", span="8983-8983", cluster="Newtonsoft.Json.Tests.Serialization.Component.Component()", file="JsonSerializerTest.cs"];
m4_1116 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2542-2542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m4_1117 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="2544-2544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m4_1118 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m4_1119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="2542-2542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m4_1326 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs"];
m4_2521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5989-5989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2522 [label="IDictionary<string, Component> components = new Dictionary<string, Component>\r\n        {\r\n          {''Key!'', new Component()}\r\n        }", span="5991-5994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2523 [label="GameObject go = new GameObject\r\n        {\r\n          Components = new ConcurrentDictionary<string, Component>(components),\r\n          Id = ''Id!'',\r\n          Name = ''Name!''\r\n        }", span="5995-6000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2524 [label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="6002-6002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2525 [label="Assert.AreEqual(@''{\r\n  ''''Components'''': {\r\n    ''''Key!'''': {}\r\n  },\r\n  ''''Id'''': ''''Id!'''',\r\n  ''''Name'''': ''''Name!''''\r\n}'', originalJson)", span="6004-6010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2526 [label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="6012-6012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2527 [label="Assert.AreEqual(1, newObject.Components.Count)", span="6014-6014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2528 [label="Assert.AreEqual(''Id!'', newObject.Id)", span="6015-6015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2529 [label="Assert.AreEqual(''Name!'', newObject.Name)", span="6016-6016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_2530 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", span="5989-5989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConcurrentDictionary()", file="JsonSerializerTest.cs"];
m4_613 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1969-1969", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonSerializerTest.cs"];
m4_614 [label="string xml = @''<root>\r\n<Reports d1p1:Array=''''true'''' xmlns:d1p1=''''http://james.newtonking.com/projects/json'''' />\r\n</root>''", span="1971-1973", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonSerializerTest.cs"];
m4_615 [label="XmlDocument d = new XmlDocument()", span="1975-1975", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonSerializerTest.cs"];
m4_616 [label="d.LoadXml(xml)", span="1976-1976", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonSerializerTest.cs"];
m4_617 [label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1978-1978", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonSerializerTest.cs"];
m4_618 [label="StringAssert.AreEqual(@''{\r\n  ''''root'''': {\r\n    ''''Reports'''': [\r\n      {}\r\n    ]\r\n  }\r\n}'', json)", span="1980-1986", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonSerializerTest.cs"];
m4_3189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7454-7454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3190 [label="var tuple = Tuple.Create(500)", span="7456-7456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3191 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="7457-7460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3192 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7461-7461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3193 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n      {\r\n        ContractResolver = new SerializableContractResolver()\r\n      })", span="7463-7466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3194 [label="Assert.AreEqual(500, obj.Item1)", span="7467-7467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_3195 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7454-7454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m4_1556 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs"];
m4_1229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2786-2786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m4_1230 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2788-2801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m4_1231 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="2786-2786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m4_2425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5767-5767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m4_2426 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="5769-5769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m4_2427 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5771-5771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m4_2428 [label="Assert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="5772-5776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m4_2429 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="5778-5778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m4_2430 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="5779-5779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m4_2431 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5767-5767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m4_3437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8247-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3438 [label="StringWriter sw = new StringWriter()", span="8249-8249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3439 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8250-8250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3443 [label="string json = sw.ToString()", span="8261-8261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3440 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n      {\r\n        StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n        Formatting = Formatting.Indented\r\n      })", span="8252-8256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3441 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8257-8257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3442 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8259-8259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3444 [label="Assert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8263-8265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_3445 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8247-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m4_1552 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs"];
m4_2087 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="4833-4833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs"];
m4_1176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2666-2666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m4_1177 [label="string json = @''[new Constructor(123)]''", span="2668-2668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m4_1178 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<List<Person>>(json);\r\n        })", span="2670-2675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m4_1179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="2666-2666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m4_1263 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs"];
m4_2816 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m4_18 [label="Entry XAttribute.cstr", span="", cluster="XAttribute.cstr", file="JsonSerializerTest.cs"];
m4_19 [label="Entry Unk.Get", span="", cluster="Unk.Get", file="JsonSerializerTest.cs"];
m4_935 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2093-2093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_936 [label="OptInClass optInClass = new OptInClass()", span="2095-2095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_937 [label="optInClass.Age = 26", span="2096-2096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_938 [label="optInClass.Name = ''James NK''", span="2097-2097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_939 [label="optInClass.NotIncluded = ''Poor me :(''", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_940 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="2100-2100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_941 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="2102-2105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_942 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="2107-2111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_943 [label="Assert.AreEqual(26, newOptInClass.Age)", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_944 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="2113-2113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_945 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_946 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2093-2093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m4_521 [label="string expected = null", span="1211-1211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_525 [label="Assert.AreEqual(''string'', c.String)", span="1250-1250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_527 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_524 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="1249-1249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_526 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="1251-1251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_523 [label="Assert.AreEqual(expected, json)", span="1247-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_522 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="1213-1228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_528 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1207-1207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_841 [label="LogEntry entry = new LogEntry\r\n        {\r\n          LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n          Details = ''Application started.''\r\n        }", span="1857-1861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_840 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_842 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_843 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1866-1866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_844 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1869-1869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_845 [label="Console.WriteLine(defaultJson)", span="1872-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_846 [label="Console.WriteLine(isoJson)", span="1873-1873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_847 [label="Console.WriteLine(javascriptJson)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_848 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m4_529 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1646-1646", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonSerializerTest.cs"];
m4_243 [label="Entry Unk.Attribute", span="", cluster="Unk.Attribute", file="JsonSerializerTest.cs"];
m4_250 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", span="595-595", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="JsonSerializerTest.cs"];
m4_251 [label="XmlNode node = DeserializeXmlNode(@''{\r\n  ''''xs!:Choice!'''': {\r\n    ''''@msdata:IsDataSet!'''': '''''''',\r\n    ''''@xmlns:xs!'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'')", span="597-605", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="JsonSerializerTest.cs"];
m4_252 [label="Assert.AreEqual(@''<xs_x0021_:Choice_x0021_ msdata:IsDataSet_x0021_='''''''' xmlns:xs_x0021_=''''http://www.w3.org/2001/XMLSchema'''' xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''><?xml-stylesheet href=''''classic.xsl'''' type=''''text/xml''''?><![CDATA[<Kiwi>true</Kiwi>]]></xs_x0021_:Choice_x0021_>'', node.InnerXml)", span="607-607", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes_Encoding()", file="JsonSerializerTest.cs"];
m4_1517 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs"];
m4_2412 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5653-5653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs"];
m4_2856 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6666-6666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2857 [label="Color color = (Color)value", span="6668-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2859 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6671-6671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2858 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6669-6669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2860 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6666-6666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1524 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs"];
m4_2051 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4760-4760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m4_2052 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n        {\r\n          MyInt = int.MaxValue\r\n        }", span="4762-4765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m4_2053 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="4767-4767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m4_2054 [label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="4769-4771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m4_2055 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="4773-4773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m4_2056 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="4775-4775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m4_2057 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="4760-4760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m4_839 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs"];
m4_1705 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="3958-3958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs"];
m4_52 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_60 [label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''HAI'', true } }, o))", span="268-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_57 [label="Assert.AreEqual(''NoMatch!'', (string)(JValue)c.ExtensionData[''NoMatch''])", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_56 [label="Assert.AreEqual(2, c.ExtensionData.Count)", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_59 [label="Assert.AreEqual(1, o.Count)", span="267-267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_58 [label="var o = (JObject)c.ExtensionData[''ExtensionData'']", span="266-266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_55 [label="Assert.AreEqual(''Name!'', c.Name)", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_53 [label="string json = @''{\r\n  'Name':'Name!',\r\n  'NoMatch':'NoMatch!',\r\n  'ExtensionData':{'HAI':true}\r\n}''", span="251-255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_54 [label="var c = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json)", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_61 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePublicExtensionData()", file="JsonSerializerTest.cs"];
m4_2203 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="126-126", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m4_2282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5320-5320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m4_2283 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5322-5322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m4_2284 [label="Assert.IsNull(dateTime)", span="5324-5324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m4_2285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5320-5320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m4_3023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7032-7032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m4_3024 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7034-7034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m4_3025 [label="Assert.AreEqual(@''{}'', json)", span="7035-7035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m4_3026 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7032-7032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m4_2622 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6163-6163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_2623 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6165-6165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_2624 [label="string json = JsonConvert.SerializeObject(d1)", span="6167-6167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_2626 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6171-6171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_2627 [label="Assert.AreEqual(d1[0], d2[0])", span="6172-6172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_2625 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6169-6169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_2628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6163-6163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m4_105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericItem<T>.GenericItem()", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericItem<T>.GenericItem()", color=green, community=0, file="JsonSerializerTest.cs"];
m4_519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1207-1207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_520 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="1209-1209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m4_1520 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs"];
m4_3164 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7376-7376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m4_3165 [label="string json = @''[\r\n        900\r\n      ]''", span="7378-7380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m4_3166 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7382-7382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m4_3167 [label="int i = l[0]", span="7384-7384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m4_3168 [label="Assert.AreEqual(900, i)", span="7387-7387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m4_3169 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7376-7376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m4_2072 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4806-4806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_2073 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n      {\r\n        Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n      }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="4808-4811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_2074 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="4813-4813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_2075 [label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="4814-4814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_2076 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="4815-4815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_2077 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_2078 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="4806-4806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m4_3635 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JsonSerializerTest.cs"];
m4_1443 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m4_1619 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3890-3890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1656 [label="AA_field1 = f", span="3892-3892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1657 [label="AA_field2 = f", span="3893-3893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1658 [label="AA_property1 = f", span="3894-3894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1659 [label="AA_property2 = f", span="3895-3895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1660 [label="AA_property3 = f", span="3896-3896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1661 [label="AA_property4 = f", span="3897-3897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1662 [label="AA_property5 = f", span="3898-3898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1663 [label="AA_property6 = f", span="3899-3899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_1664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="3890-3890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m4_2110 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonSerializerTest.cs"];
m4_2003 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4639-4639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2004 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2005 [label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4643-4647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2006 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4639-4639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m4_3336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="7871-7871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3337 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3338 [label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="7875-7875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3345 [label="Assert.AreEqual(json, after)", span="7885-7885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3339 [label="Assert.AreEqual(''Before!'', aa.Before)", span="7877-7877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3340 [label="Assert.AreEqual(''After!'', aa.After)", span="7878-7878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3341 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="7879-7879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3342 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="7880-7880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3343 [label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="7881-7881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3344 [label="string after = JsonConvert.SerializeObject(aa)", span="7883-7883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_3346 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", span="7871-7871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmpty3DArray()", file="JsonSerializerTest.cs"];
m4_595 [label="Entry Unk.WriteNode", span="", cluster="Unk.WriteNode", file="JsonSerializerTest.cs"];
m4_596 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="JsonSerializerTest.cs"];
m4_1076 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="JsonSerializerTest.cs"];
m4_2040 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4725-4725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m4_2041 [label="string classRef = typeof(StringDictionary).FullName", span="4727-4727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m4_2042 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n        {\r\n          StringDictionaryProperty = new StringDictionary()\r\n            {\r\n              {''1'', ''One''},\r\n              {''2'', ''II''},\r\n              {''3'', ''3''}\r\n            }\r\n        }", span="4729-4737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m4_2044 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<StringDictionaryTestClass>(json);\r\n        })", span="4741-4746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m4_2043 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="4739-4739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m4_2045 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="4725-4725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m4_437 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n        {\r\n          DateTimeFormat = ''yyyy''\r\n        })", span="1091-1094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m4_2151 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4971-4971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m4_2152 [label="IDoWork = doWork", span="4974-4974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m4_2153 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="4971-4971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m4_2793 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6511-6511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m4_2794 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n        @''Value cannot be null.\r\nParameter name: value'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject(null);\r\n        })", span="6513-6519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m4_2795 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6511-6511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m4_2345 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5509-5509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs"];
m4_947 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="2073-2073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs"];
m4_1691 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonSerializerTest.cs"];
m4_3567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="8552-8552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m4_3568 [label="return _dictionary.ContainsKey(key);", span="8554-8554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m4_3569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="8552-8552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m4_1990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4611-4611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m4_1991 [label="return new DictionaryKey() { Value = value };", span="4613-4613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m4_1992 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4611-4611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m4_2317 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5455-5455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m4_2318 [label="ChildDataContract cc = new ChildDataContract\r\n      {\r\n        VirtualMember = ''VirtualMember!'',\r\n        NonVirtualMember = ''NonVirtualMember!''\r\n      }", span="5457-5461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m4_2319 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5463-5463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m4_2320 [label="Console.WriteLine(result)", span="5470-5470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m4_2321 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5455-5455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m4_2316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5418-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs"];
m4_2238 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5206-5206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2239 [label="Value = value", span="5208-5208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2240 [label="Constructor = ''Public Paramatized 1''", span="5209-5209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2241 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="5206-5206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m4_2601 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="342-342", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs"];
m4_456 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="427-427", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs"];
m4_458 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="728-728", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs"];
m4_459 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerTest.cs"];
m4_460 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs"];
m4_1028 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs"];
m4_1415 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs"];
m4_1651 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m4_2886 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs"];
m4_2028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4702-4702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2029 [label="JsonSerializer serializer1 = new JsonSerializer()", span="4704-4704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2030 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="4705-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2031 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="4706-4706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2034 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="4712-4712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2032 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="4708-4708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2033 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="4710-4710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2035 [label="Assert.AreEqual(2, z.Length)", span="4713-4713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2036 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="4714-4714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2037 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="4715-4715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_2038 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="4702-4702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m4_999 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2255-2255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1000 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="2257-2267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1001 [label="JObject o = JObject.Parse(json)", span="2269-2269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1002 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1003 [label="Assert.IsNotNull(s)", span="2272-2272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1004 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="2274-2274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1005 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1006 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="2276-2276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_1007 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="2255-2255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m4_2853 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="9055-9055", cluster="Newtonsoft.Json.Tests.Serialization.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs"];
m4_2604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6123-6123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2605 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6125-6125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2606 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6129-6129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2607 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="6131-6131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2608 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6132-6132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2609 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2610 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6136-6136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2611 [label="Assert.AreEqual(1.5m, c.Quantity)", span="6138-6138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2612 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6139-6139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_2613 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6123-6123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m4_850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_851 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1879-1879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_852 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n        {\r\n          {''one'', 1},\r\n          {''two'', 2},\r\n          {''three'', 3}\r\n        }", span="1880-1885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_853 [label="o.IListProperty = new List<int>\r\n        {\r\n          1, 2, 3\r\n        }", span="1886-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_854 [label="o.IEnumerableProperty = new List<int>\r\n        {\r\n          4, 5, 6\r\n        }", span="1890-1893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_855 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1895-1895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_859 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_860 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_861 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_856 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1897-1913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_857 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1915-1915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_858 [label="Assert.IsNotNull(deserializedObject)", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_862 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m4_2568 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6071-6071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m4_2569 [label="string input = ''http://test.com/%22foo+bar%22''", span="6073-6073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m4_2570 [label="Uri uri = new Uri(input)", span="6074-6074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m4_2571 [label="string json = JsonConvert.SerializeObject(uri)", span="6075-6075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m4_2573 [label="Assert.AreEqual(uri, output)", span="6078-6078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m4_2572 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6076-6076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m4_2574 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6071-6071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m4_1715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="4042-4042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs"];
m4_924 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_925 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="2042-2058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_926 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="2060-2060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_928 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="2063-2063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_927 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="2061-2061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_929 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="2064-2064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_930 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="2065-2065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_931 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="2066-2066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_932 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="2067-2067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_933 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="2068-2068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_934 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m4_2854 [label="Entry Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", span="9025-9025", cluster="Newtonsoft.Json.Tests.Serialization.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs"];
m4_1847 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="4252-4252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="JsonSerializerTest.cs"];
m4_2173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5059-5059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2174 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5061-5061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2175 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5062-5062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2176 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5063-5063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2180 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5070-5070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2177 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5065-5065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2178 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5066-5066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2179 [label="barWithNull.Foo2 = null", span="5067-5067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2184 [label="s = JsonConvert.SerializeObject(barWithNull)", span="5076-5076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2181 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="5071-5071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2182 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5072-5072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2183 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5073-5073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2185 [label="deserialized = deserialize(s)", span="5077-5077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2186 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5078-5078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2187 [label="Assert.AreEqual(deserialized.Foo2, null)", span="5079-5079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_2188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5059-5059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m4_760 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs"];
m4_1771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="4135-4135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1772 [label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="4137-4137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1773 [label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="4138-4138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1774 [label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="4139-4139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1775 [label="string json = JsonConvert.SerializeObject(list)", span="4141-4141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1776 [label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="4143-4143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1777 [label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1778 [label="Assert.AreEqual(2, result.Count)", span="4146-4146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1779 [label="Assert.AreEqual(''key1'', result[0].Key)", span="4147-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1780 [label="Assert.AreEqual(''value1'', result[0].Value)", span="4148-4148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1781 [label="Assert.AreEqual(''key2'', result[1].Key)", span="4149-4149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1782 [label="Assert.AreEqual(''value2'', result[1].Value)", span="4150-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_1783 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="4135-4135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonSerializerTest.cs"];
m4_3700 [label="Entry Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="9146-9146", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs"];
m4_3701 [label="return _shouldSerializeName;", span="9148-9148", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs"];
m4_3702 [label="Exit Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", span="9146-9146", cluster="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass.ShouldSerializeName()", file="JsonSerializerTest.cs"];
m4_305 [label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="805-848", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_1708 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4018-4018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m4_1709 [label="ClientMap source = new ClientMap()\r\n        {\r\n          position = new Pos() { X = 100, Y = 200 },\r\n          center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n        }", span="4020-4024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m4_1710 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4026-4026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m4_1711 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4027-4027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m4_1712 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4018-4018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m4_2400 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5701-5701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_2401 [label="throw new NotImplementedException();", span="5703-5703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_2402 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="5701-5701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_1425 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs"];
m4_1830 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4254-4254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1831 [label="writer.WriteValue(value)", span="4256-4256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1832 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="4254-4254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2505 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5969-5969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2506 [label="object o = new { p = 1 }", span="5972-5972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2507 [label="var json = JObject.FromObject(o)", span="5974-5974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2508 [label="var sw = new StringWriter()", span="5976-5976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2510 [label="jw.WriteToken(json.CreateReader())", span="5979-5979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2509 [label="var jw = new JsonTextWriter(sw)", span="5977-5977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2512 [label="string result = sw.ToString()", span="5982-5982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2511 [label="jw.Flush()", span="5980-5980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2513 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="5983-5983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2514 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="5969-5969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m4_2861 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs"];
m4_1713 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="4030-4030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs"];
m4_130 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m4_865 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs"];
m4_2025 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4695-4695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m4_2026 [label="Prop1 = new byte[0]", span="4697-4697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m4_2027 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="4695-4695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m4_2242 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5213-5213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m4_2243 [label="Value = value", span="5215-5215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m4_2244 [label="Age = age", span="5216-5216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m4_2245 [label="Constructor = ''Public Paramatized 2''", span="5217-5217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m4_2246 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="5213-5213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m4_948 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="2122-2122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_949 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="2122-2122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m4_1513 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs"];
m4_1461 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs"];
m4_270 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="734-734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_269 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="732-732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_271 [label="Assert.AreEqual(c.Field, ''Field'')", span="736-736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_272 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_273 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1452 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1453 [label="dictionary == null", span="3420-3420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1455 [label=dictionary, span="3425-3425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1454 [label="return;", span="3422-3422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1456 [label="this[entry.Key] = entry.Value", span="3427-3427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_1457 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m4_2083 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4842-4842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m4_2084 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="4844-4844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m4_2085 [label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="4846-4848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m4_2086 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="4842-4842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m4_2482 [label="Entry Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="8939-8939", cluster="Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs"];
m4_1197 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="881-881", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs"];
m4_483 [label="string json2 = SerializeXmlNode(doc)", span="1472-1472", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonSerializerTest.cs"];
m4_484 [label="StringAssert.AreEqual(@''{\r\n  ''''root!'''': {\r\n    ''''person!'''': [\r\n      {\r\n        ''''@id!'''': ''''1'''',\r\n        ''''name!'''': ''''Alan'''',\r\n        ''''url!'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id!'''': ''''2'''',\r\n        ''''name!'''': ''''Louis'''',\r\n        ''''url!'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json2)", span="1474-1489", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonSerializerTest.cs"];
m4_485 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1449-1449", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonSerializerTest.cs"];
m4_486 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1493-1493", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_487 [label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1495-1495", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_488 [label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1496-1496", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_489 [label="circularDictionary.Add(''self'', circularDictionary)", span="1497-1497", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_490 [label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1499-1500", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_491 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1502-1511", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_492 [label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1513-1513", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonSerializerTest.cs"];
m4_282 [label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="752-752", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="JsonSerializerTest.cs"];
m4_285 [label="StringBuilder builder = new StringBuilder()", span="754-754", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="JsonSerializerTest.cs"];
m4_286 [label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="755-755", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="JsonSerializerTest.cs"];
m4_287 [label="doc.Save(writer)", span="757-757", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="JsonSerializerTest.cs"];
m4_1016 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonSerializerTest.cs"];
m4_2007 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2008 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4653-4657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2009 [label="Assert.AreEqual(3, d.Length)", span="4659-4659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2010 [label="Assert.AreEqual(2.4, d[0])", span="4660-4660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2011 [label="Assert.AreEqual(4.3, d[1])", span="4661-4661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2012 [label="Assert.AreEqual(null, d[2])", span="4662-4662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2013 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m4_2058 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="4751-4751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs"];
m4_988 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs"];
m4_2189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5038-5038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs"];
m4_2722 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="647-647", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m4_2864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6674-6674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2865 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6676-6676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_2866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6674-6674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_132 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m4_1827 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonSerializerTest.cs"];
m4_2156 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4988-4988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m4_2157 [label="IDontWork = dontWork", span="4990-4990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m4_2158 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="4988-4988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m4_3229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7608-7608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3230 [label="Array2D aa = new Array2D()", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3231 [label="aa.Before = ''Before!''", span="7611-7611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3232 [label="aa.After = ''After!''", span="7612-7612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3233 [label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="7613-7613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3234 [label="string json = JsonConvert.SerializeObject(aa)", span="7615-7615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3235 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="7617-7617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3236 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", span="7608-7608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArray2D()", file="JsonSerializerTest.cs"];
m4_3689 [label="Entry System.Convert.ToDouble(object)", span="0-0", cluster="System.Convert.ToDouble(object)", file="JsonSerializerTest.cs"];
m4_2483 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5915-5915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2484 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n        {\r\n          Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n          NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n          TimeSpan = TimeSpan.FromDays(1),\r\n          NullableTimeSpan = TimeSpan.FromHours(1),\r\n          Uri = new Uri(''http://testuri.com'')\r\n        }", span="5917-5924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2485 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5925-5925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2488 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="5936-5936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2489 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="5937-5937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2490 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="5938-5938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2491 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="5939-5939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2492 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="5940-5940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2486 [label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com/''''\r\n}'', json)", span="5927-5933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2487 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="5935-5935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_2493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="5915-5915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m4_1665 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="3929-3929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs"];
m4_1666 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="3929-3929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs"];
m4_3694 [label="Entry System.Convert.ToInt32(object)", span="0-0", cluster="System.Convert.ToInt32(object)", file="JsonSerializerTest.cs"];
m4_1891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m4_1892 [label="First = first", span="4365-4365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m4_1893 [label="Second = second", span="4366-4366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m4_1894 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m4_3614 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8686-8686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_3615 [label="Add(default(T))", span="8689-8689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_3616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", span="8686-8686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_3648 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="JsonSerializerTest.cs"];
m4_699 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m4_3120 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="7257-7257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_3121 [label="string json = @''[\r\n  1,\r\n  2,\r\n  null\r\n]''", span="7259-7263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_3122 [label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="7265-7265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_3123 [label="Assert.AreEqual(3, result.Count())", span="7267-7267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_3124 [label="Assert.AreEqual(1, result.ElementAt(0))", span="7268-7268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_3125 [label="Assert.AreEqual(2, result.ElementAt(1))", span="7269-7269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_3126 [label="Assert.AreEqual(null, result.ElementAt(2))", span="7270-7270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_3127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", span="7257-7257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIEnumerableFromConstructor()", file="JsonSerializerTest.cs"];
m4_1514 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs"];
m4_2388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5671-5671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m4_2389 [label="throw new NotImplementedException();", span="5673-5673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m4_2390 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="5671-5671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m4_2356 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5589-5589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2357 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5591-5591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2358 [label="c1.Categories.Add(''one'')", span="5592-5592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2359 [label="c1.Categories.Add(''two'')", span="5593-5593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2360 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5595-5595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2363 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5605-5605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2364 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5606-5606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2361 [label="Assert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5596-5602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2362 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5604-5604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2365 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="5607-5607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2366 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="5608-5608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2367 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5589-5589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m4_2461 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonSerializerTest.cs"];
m4_967 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2175-2175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_968 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="2177-2182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_969 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n        json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2184-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_970 [label="Assert.AreEqual(''Name!'', c.Name)", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_971 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="2189-2189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_972 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2190-2190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_973 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2175-2175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m4_1107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2530-2530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1108 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="2532-2532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1109 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1110 [label="JArray a = (JArray)setOnly.GetValue()", span="2535-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1111 [label="Assert.AreEqual(5, a.Count)", span="2536-2536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1112 [label="Assert.AreEqual(1, (int)a[0])", span="2537-2537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1113 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="2538-2538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1114 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="2530-2530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m4_1724 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JsonSerializerTest.cs"];
m4_1395 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3268-3268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m4_1396 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="3270-3270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m4_1397 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="3271-3271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m4_1398 [label="Assert.AreEqual(123L, item.Value)", span="3273-3273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m4_1399 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3268-3268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m4_3491 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_1198 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2707-2707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_1199 [label="string json = @''{}''", span="2709-2709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_1200 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'',\r\n        () =>\r\n        {\r\n          JsonConvert.PopulateObject(json, new List<Person>());\r\n        })", span="2711-2716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_1201 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="2707-2707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m4_2614 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs"];
m4_3347 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs"];
m4_3348 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="7891-7891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs"];
m4_3349 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Unexpected end when deserializing array. Path 'Coordinates[0][1][1]', line 1, position 90.'',\r\n        () => JsonConvert.DeserializeObject<Array3D>(json))", span="7893-7895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs"];
m4_3350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIncomplete3DArray()", file="JsonSerializerTest.cs"];
m4_3407 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m4_1400 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3301-3301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1401 [label="Exception ex = new Exception(''Blah blah blah'')", span="3303-3303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1402 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="3305-3305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1406 [label="c.ExceptionProperty = ex", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1403 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="3306-3306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1404 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="3307-3307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1405 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="3308-3308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1409 [label="serializer.WriteObject(ms, c)", span="3315-3315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1407 [label="MemoryStream ms = new MemoryStream()", span="3311-3311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1408 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n        typeof(DataContractJsonSerializerTestClass),\r\n        new Type[] { typeof(Human) })", span="3312-3314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1410 [label="byte[] jsonBytes = ms.ToArray()", span="3317-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1411 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="3318-3318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_1412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="3301-3301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m4_2445 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="5810-5810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs"];
m4_3110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="7240-7240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_3111 [label="_values = new List<T>(values)", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_3112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", span="7240-7240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m4_1279 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2884-2884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1280 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="2886-2886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1281 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="2887-2887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1282 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="2888-2888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1283 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2890-2890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1284 [label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="2891-2894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_1285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="2884-2884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m4_3218 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", span="7558-7558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3219 [label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="7560-7591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3220 [label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="7593-7593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3221 [label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="7595-7595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3222 [label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="7596-7596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3223 [label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="7598-7598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3224 [label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="7599-7599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3225 [label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="7600-7600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3226 [label="Assert.AreEqual(1, c2.Array.Count)", span="7602-7602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3227 [label="Assert.AreEqual(13, c2.Array[0])", span="7603-7603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_3228 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", span="7558-7558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyCollections()", file="JsonSerializerTest.cs"];
m4_2115 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4899-4899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m4_2116 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="4901-4901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m4_2117 [label="Assert.AreEqual(123456789876543.21m, d)", span="4902-4902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m4_2118 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="4899-4899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m4_3507 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8425-8425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m4_3508 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8427-8427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m4_3509 [label="var settings = new JsonSerializerSettings()", span="8428-8428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m4_3511 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8430-8430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m4_3510 [label="var serialiser = JsonSerializer.Create(settings)", span="8429-8429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m4_3512 [label="Assert.AreEqual(1234567890.123456m, d)", span="8432-8432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m4_3513 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8425-8425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m4_3570 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m4_1730 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs"];
m4_3587 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8615-8615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs"];
m4_3588 [label="_values = values", span="8617-8617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs"];
m4_3589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="8615-8615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs"];
m4_292 [label="string s = string.Empty", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m4_3564 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="8547-8547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs"];
m4_3565 [label="_dictionary = dictionary", span="8549-8549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs"];
m4_3566 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="8547-8547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSerializerTest.cs"];
m4_1548 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs"];
m4_2014 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4667-4667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2015 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n        {\r\n          ''One'',\r\n          ''2'',\r\n          ''III''\r\n        }, Formatting.Indented)", span="4669-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2016 [label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4676-4680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2017 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4682-4682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2018 [label="Assert.AreEqual(3, d.Count)", span="4684-4684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2019 [label="Assert.IsTrue(d.Contains(''One''))", span="4685-4685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2020 [label="Assert.IsTrue(d.Contains(''2''))", span="4686-4686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2021 [label="Assert.IsTrue(d.Contains(''III''))", span="4687-4687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_2022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4667-4667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m4_304 [label="string jsonText = SerializeXmlNode(doc)", span="803-803", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_1008 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m4_1009 [label="Uri uri = new Uri(''http://codeplex.com'')", span="2282-2282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m4_1010 [label="string json = JsonConvert.SerializeObject(uri)", span="2283-2283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m4_1011 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m4_1013 [label="Assert.AreEqual(uri, newUri)", span="2288-2288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m4_1012 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="2287-2287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m4_1014 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m4_1848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4288-4288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1849 [label="var reference = new Dictionary<string, object>()", span="4292-4292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1850 [label="reference.Add(''$ref'', ''Persons'')", span="4293-4293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1851 [label="reference.Add(''$id'', 1)", span="4294-4294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1855 [label="child.Add(''Father'', reference)", span="4299-4299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1852 [label="var child = new Dictionary<string, object>()", span="4296-4296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1853 [label="child.Add(''_id'', 2)", span="4297-4297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1854 [label="child.Add(''Name'', ''Isabell'')", span="4298-4298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1856 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4301-4301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1857 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'',\r\n        () =>\r\n        {\r\n          JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n        })", span="4303-4308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_1858 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4288-4288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m4_2946 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6811-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2947 [label="PropertyItemConverter c = new PropertyItemConverter\r\n        {\r\n          Data = new[]\r\n            {\r\n              ''one'',\r\n              ''two'',\r\n              ''three''\r\n            }\r\n        }", span="6813-6821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2948 [label="string json = JsonConvert.SerializeObject(c)", span="6823-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2949 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="6825-6825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="6811-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m4_2647 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6206-6206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m4_2648 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6208-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m4_2649 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'',\r\n        () =>\r\n        {\r\n          List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n        })", span="6215-6220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m4_2650 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6206-6206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m4_1965 [label="Entry Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", span="9152-9152", cluster="Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass.SpecifiedTestClass()", file="JsonSerializerTest.cs"];
m4_3116 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_830 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs"];
m4_3649 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8868-8868", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3650 [label="reader.TokenType == JsonToken.Null", span="8870-8870", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3652 [label="return new WidgetId1 { Value = int.Parse(reader.Value.ToString()) };", span="8872-8872", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3651 [label="return null;", span="8871-8871", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3653 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8868-8868", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3483 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8364-8364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_3484 [label="ISet<string> s1 = new HashSet<string>(new[] {''1'', ''two'', ''III''})", span="8366-8366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_3485 [label="string json = JsonConvert.SerializeObject(s1)", span="8368-8368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_3487 [label="Assert.AreEqual(s1.Count, s2.Count)", span="8372-8372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_3488 [label=s1, span="8373-8373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_3486 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8370-8370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_3489 [label="Assert.IsTrue(s2.Contains(s))", span="8375-8375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_3490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8364-8364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m4_1394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="3230-3230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs"];
m4_289 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="752-752", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="JsonSerializerTest.cs"];
m4_294 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs"];
m4_1731 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="4065-4065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1732 [label="return objectType.IsAssignableFrom(typeof(Pos));", span="4067-4067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="4065-4065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m4_1077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1078 [label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="2424-2429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1079 [label="Product p2 = new Product\r\n        {\r\n          Name = ''Product 2'',\r\n          Price = 12.50m,\r\n          ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="2430-2435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1081 [label="products.Add(p1)", span="2438-2438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1080 [label="List<Product> products = new List<Product>()", span="2437-2437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1082 [label="products.Add(p2)", span="2439-2439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1083 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="2441-2441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1084 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="2457-2470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_1085 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonSerializerTest.cs"];
m4_2066 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="4778-4778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs"];
m4_2733 [label="Entry Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", span="8884-8884", cluster="Newtonsoft.Json.Tests.Serialization.WithEnums.WithEnums()", file="JsonSerializerTest.cs"];
m4_2862 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonSerializerTest.cs"];
m4_3644 [label="Entry Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8862-8862", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3645 [label="WidgetId1 id = (WidgetId1)value", span="8864-8864", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3646 [label="writer.WriteValue(id.Value.ToString())", span="8865-8865", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3647 [label="Exit Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8862-8862", cluster="Newtonsoft.Json.Tests.Serialization.WidgetIdJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3171-3171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m4_1365 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="3173-3173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m4_1366 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="3174-3174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m4_1367 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="3176-3176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m4_1368 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="3177-3177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m4_1369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3171-3171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m4_2532 [label="Entry Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="8970-8970", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="JsonSerializerTest.cs"];
m4_3660 [label="Components = new ConcurrentDictionary<string, Component>()", span="8972-8972", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="JsonSerializerTest.cs"];
m4_3661 [label="Exit Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", span="8970-8970", cluster="Newtonsoft.Json.Tests.Serialization.GameObject.GameObject()", file="JsonSerializerTest.cs"];
m4_3466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8305-8305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_3467 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n        {\r\n          {''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified)},\r\n          {''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)},\r\n          {''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local)},\r\n          {''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)},\r\n          {''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))},\r\n          {''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5))}\r\n        }", span="8307-8315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_3468 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8317-8317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_3470 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n        })", span="8321-8324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_3469 [label="Console.WriteLine(expected)", span="8319-8319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_3471 [label="Console.WriteLine(expected)", span="8326-8326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_3472 [label="Assert.AreEqual(expected, actual)", span="8328-8328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_3473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8305-8305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m4_2960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6853-6853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2961 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n        {\r\n          {new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1},\r\n          {new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2}\r\n        }", span="6855-6859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2962 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n        })", span="6861-6864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2963 [label="Assert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="6866-6869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2964 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="6871-6871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2965 [label="Assert.AreEqual(2, dic2.Count)", span="6873-6873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2966 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6874-6874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2967 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="6875-6875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2968 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="6853-6853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m4_2351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5550-5550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs"];
m4_2602 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="623-623", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m4_2306 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5409-5409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_2307 [label="string json = @''{A:''''Test''''}''", span="5411-5411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_2308 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5413-5413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_2309 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5414-5414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_2310 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5415-5415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_2311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5409-5409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m4_2945 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", span="8818-8818", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m4_3558 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="8533-8533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3559 [label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="8535-8535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3560 [label="Assert.AreEqual(2, dic.Count)", span="8537-8537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3561 [label="Assert.AreEqual(1, dic[''one''])", span="8539-8539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3562 [label="Assert.AreEqual(2, dic[''two''])", span="8540-8540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3563 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", span="8533-8533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m4_3052 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7103-7103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m4_3053 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7105-7129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m4_3054 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7131-7131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m4_3055 [label="Assert.IsNotNull(exception)", span="7132-7132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m4_3056 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7133-7133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m4_3057 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7135-7135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m4_3058 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7103-7103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m4_1784 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs"];
m4_1819 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1820 [label="Movie p = new Movie()", span="4239-4239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1821 [label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="4240-4240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1822 [label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n        })", span="4242-4245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1823 [label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="4247-4247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1824 [label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="4248-4248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1825 [label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="4249-4249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1826 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonSerializerTest.cs"];
m4_1352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1353 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="3136-3136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1354 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="3138-3138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1355 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="3139-3139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1356 [label="g.MyProperty = ''some value''", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1357 [label="string json = g.ToJson()", span="3143-3143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1358 [label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="3145-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1359 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="3161-3161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1360 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="3162-3162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_1361 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m4_3690 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="851-851", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonSerializerTest.cs"];
m4_3525 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8471-8471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m4_3526 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8473-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m4_3527 [label="string json = JsonConvert.SerializeObject(new [] {i}, Formatting.Indented)", span="8475-8475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m4_3528 [label="Assert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8477-8479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m4_3529 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8471-8471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m4_3686 [label="Entry Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9118-9118", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3687 [label="writer.WriteValue(Convert.ToDouble(value))", span="9120-9120", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_3688 [label="Exit Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9118-9118", cluster="Newtonsoft.Json.Tests.Serialization.IntToFloatConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m4_1210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m4_1211 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'',\r\n        () =>\r\n        {\r\n          JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n          {\r\n            ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE || PORTABLE40)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n          });\r\n        })", span="2731-2744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m4_1212 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m4_1473 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m4_3246 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="9101-9101", cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="JsonSerializerTest.cs"];
m4_307 [label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="852-852", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_308 [label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="854-854", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_309 [label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="774-774", cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonSerializerTest.cs"];
m4_2783 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2784 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6494-6494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2785 [label="Assert.IsNull(b)", span="6495-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2786 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m4_2339 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5529-5529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m4_2340 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n        {\r\n          VirtualMember = ''VirtualMember!'',\r\n          NonVirtualMember = ''NonVirtualMember!''\r\n        }", span="5531-5535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m4_2341 [label="string result = JsonConvert.SerializeObject(cc)", span="5537-5537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m4_2342 [label="Console.WriteLine(result)", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m4_2343 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5539-5539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m4_2344 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5529-5529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m4_3571 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="8562-8562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m4_3572 [label="return _dictionary.TryGetValue(key, out value);", span="8564-8564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m4_3573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="8562-8562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m4_2661 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6251-6251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2662 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6253-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2663 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'',\r\n        () => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json))", span="6259-6261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6251-6251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m4_2432 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5789-5789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_2433 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_2434 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="5793-5793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_2435 [label="Assert.AreEqual(3, r.Departures.Count())", span="5794-5794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_2436 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="5795-5795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_2437 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="5796-5796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_2438 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="5797-5797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_2439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="5789-5789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m4_1053 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1054 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="2388-2388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1055 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="2390-2390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1056 [label="Assert.AreEqual(''Router'', o.Action)", span="2392-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1057 [label="Assert.AreEqual(''Navigate'', o.Method)", span="2393-2393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1058 [label="Assert.AreEqual(3, o.Data.Length)", span="2394-2394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1059 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="2395-2395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1060 [label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1061 [label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="2397-2397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1062 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="2398-2398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1063 [label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="2399-2399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1064 [label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="2400-2400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_1065 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonSerializerTest.cs"];
m4_3633 [label="Entry System.Enum.GetNames(System.Type)", span="0-0", cluster="System.Enum.GetNames(System.Type)", file="JsonSerializerTest.cs"];
m4_3703 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>", span="", file="JsonSerializerTest.cs"];
m4_3704 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass", span="", file="JsonSerializerTest.cs"];
m4_3705 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonSerializerTest.cs"];
m4_3706 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3707 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3708 [label=strFromTest, span="", file="JsonSerializerTest.cs"];
m4_3709 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonSerializerTest.cs"];
m4_3710 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3711 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3712 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3713 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3714 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3715 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3716 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3717 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3718 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3719 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3720 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3721 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3722 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonSerializerTest.cs"];
m4_3723 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonSerializerTest.cs"];
m4_3724 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3725 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonSerializerTest.cs"];
m4_3726 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonSerializerTest.cs"];
m4_3727 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonSerializerTest.cs"];
m4_3728 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span="", file="JsonSerializerTest.cs"];
m4_3729 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonSerializerTest.cs"];
m4_3730 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonSerializerTest.cs"];
m4_3731 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", span="", file="JsonSerializerTest.cs"];
m4_3732 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3733 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span="", file="JsonSerializerTest.cs"];
m4_3734 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee", span="", file="JsonSerializerTest.cs"];
m4_3735 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span="", file="JsonSerializerTest.cs"];
m4_3736 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span="", file="JsonSerializerTest.cs"];
m4_3737 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3738 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span="", file="JsonSerializerTest.cs"];
m4_3739 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonSerializerTest.cs"];
m4_3740 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span="", file="JsonSerializerTest.cs"];
m4_3741 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m4_3742 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m4_3743 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest", span="", file="JsonSerializerTest.cs"];
m4_3744 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor", span="", file="JsonSerializerTest.cs"];
m4_3745 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor", span="", file="JsonSerializerTest.cs"];
m4_3746 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor", span="", file="JsonSerializerTest.cs"];
m4_3747 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span="", file="JsonSerializerTest.cs"];
m4_3748 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span="", file="JsonSerializerTest.cs"];
m4_3749 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonSerializerTest.cs"];
m4_3750 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonSerializerTest.cs"];
m4_3751 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonSerializerTest.cs"];
m4_3752 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonSerializerTest.cs"];
m4_3753 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3754 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3755 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3756 [label=errors, span="", file="JsonSerializerTest.cs"];
m4_3757 [label=errors, span="", file="JsonSerializerTest.cs"];
m4_3758 [label=errors, span="", file="JsonSerializerTest.cs"];
m4_3759 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3760 [label=s, span="", file="JsonSerializerTest.cs"];
m4_3761 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>", span="", file="JsonSerializerTest.cs"];
m4_3762 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>", span="", file="JsonSerializerTest.cs"];
m4_3763 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3764 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonSerializerTest.cs"];
m4_3765 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span="", file="JsonSerializerTest.cs"];
m4_3766 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3767 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="JsonSerializerTest.cs"];
m4_3768 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass", span="", file="JsonSerializerTest.cs"];
m4_3769 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3770 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3771 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3772 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3773 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3774 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3775 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3776 [label=json, span="", file="JsonSerializerTest.cs"];
m4_3777 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>", span="", file="JsonSerializerTest.cs"];
m4_3778 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>", span="", file="JsonSerializerTest.cs"];
m4_3779 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>", span="", file="JsonSerializerTest.cs"];
m4_3780 [label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel", span="", file="JsonSerializerTest.cs"];
m4_3781 [label="Newtonsoft.Json.Tests.Serialization.TestObject", span="", file="JsonSerializerTest.cs"];
m4_3782 [label="Newtonsoft.Json.Tests.Serialization.GameObject", span="", file="JsonSerializerTest.cs"];
m4_3783 [label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass", span="", file="JsonSerializerTest.cs"];
m0_154 -> m0_138  [key=0, style=bold, color=blue];
m0_124 -> m0_0  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_124 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_125 -> m0_151  [key=2, style=dotted];
m0_125 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_131  [key=2, style=dotted];
m0_126 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_126 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=sequence];
m0_126 -> m0_152  [key=2, style=dotted];
m0_126 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=sequence];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_132  [key=2, style=dotted];
m0_127 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_127 -> m0_153  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_133  [key=2, style=dotted];
m0_128 -> m0_134  [key=2, style=dotted];
m0_128 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_128 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=any];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_48  [key=2, style=dotted];
m0_130 -> m0_125  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_130 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_130 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_46  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_97  [key=2, style=dotted];
m0_92 -> m0_98  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_96  [key=2, style=dotted];
m0_91 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_91 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_91 -> m0_84  [key=0, style=bold, color=blue];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_10  [key=2, style=dotted];
m0_93 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_94 -> m0_44  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_99  [key=2, style=dotted];
m0_95 -> m0_90  [key=0, style=bold, color=blue];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_11  [key=2, style=dotted];
m0_95 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_46  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=strSchema];
m0_19 -> m0_41  [key=2, style=dotted];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=strSchema];
m0_199 -> m0_200  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_10  [key=2, style=dotted];
m0_176 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_176 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_176 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_196  [key=2, style=dotted];
m0_177 -> m0_167  [key=0, style=bold, color=blue];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_83  [key=2, style=dotted];
m0_179 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_12  [key=2, style=dotted];
m0_180 -> m0_107  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_161  [key=2, style=dotted];
m0_187 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_13  [key=2, style=dotted];
m0_181 -> m0_179  [key=0, style=bold, color=blue];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_156  [key=2, style=dotted];
m0_182 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m0_182 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m0_182 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m0_182 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_157  [key=2, style=dotted];
m0_183 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m0_183 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m0_183 -> m0_48  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_197  [key=2, style=dotted];
m0_185 -> m0_160  [key=2, style=dotted];
m0_185 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_198  [key=2, style=dotted];
m0_189 -> m0_13  [key=2, style=dotted];
m0_189 -> m0_48  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_199  [key=2, style=dotted];
m0_190 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_190 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_190 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_196  [key=2, style=dotted];
m0_184 -> m0_182  [key=0, style=bold, color=blue];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_15  [key=2, style=dotted];
m0_186 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=errors];
m0_186 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=rowCustomersRow];
m0_186 -> m0_192  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_46  [key=2, style=dotted];
m0_188 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=rowCustomersRow];
m0_188 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=rowCustomersRow];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_46  [key=2, style=dotted];
m0_191 -> m0_185  [key=0, style=bold, color=blue];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_46  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_46  [key=2, style=dotted];
m0_194 -> m0_157  [key=2, style=dotted];
m0_195 -> m0_175  [key=0, style=bold, color=blue];
m0_195 -> m0_193  [key=0, style=bold, color=blue];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_10  [key=2, style=dotted];
m0_225 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaGenerator];
m0_209 -> m0_210  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_18 -> m0_38  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_121  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_50  [key=2, style=dotted];
m0_121 -> m0_124  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=0, style=solid];
m0_120 -> m0_123  [key=2, style=dotted];
m0_122 -> m0_119  [key=0, style=bold, color=blue];
m0_122 -> m0_118  [key=0, style=bold, color=blue];
m0_196 -> m0_197  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_11  [key=2, style=dotted];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_10  [key=2, style=dotted];
m0_211 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaGenerator];
m0_211 -> m0_192  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_11  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_210  [key=0, style=bold, color=blue];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_216  [key=2, style=dotted];
m0_215 -> m0_209  [key=0, style=bold, color=blue];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataRowChangeEventArgs"];
m0_228 -> m0_12  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_233  [key=2, style=dotted];
m0_229 -> m0_13  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_232  [key=0, style=solid];
m0_230 -> m0_224  [key=0, style=bold, color=blue];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_226  [key=2, style=dotted];
m0_231 -> m0_227  [key=2, style=dotted];
m0_232 -> m0_228  [key=0, style=bold, color=blue];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_10  [key=2, style=dotted];
m0_133 -> m0_96  [key=2, style=dotted];
m0_133 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_133 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_133 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_133 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_46  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_18  [key=2, style=dotted];
m0_99 -> m0_19  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_16  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_101  [key=2, style=dotted];
m0_100 -> m0_92  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_40  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_10  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_148  [key=0, style=solid];
m0_138 -> m0_158  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_10  [key=2, style=dotted];
m0_139 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_139 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_159  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_116  [key=2, style=dotted];
m0_141 -> m0_155  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_83  [key=2, style=dotted];
m0_142 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_142 -> m0_138  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_12  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_161  [key=2, style=dotted];
m0_152 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_13  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_155  [key=2, style=dotted];
m0_145 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=temp];
m0_145 -> m0_145  [key=0, style=solid];
m0_145 -> m0_160  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_156  [key=2, style=dotted];
m0_146 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m0_146 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m0_146 -> m0_138  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_160  [key=2, style=dotted];
m0_150 -> m0_123  [key=0, style=bold, color=blue];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_157  [key=2, style=dotted];
m0_147 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m0_147 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_158  [key=2, style=dotted];
m0_148 -> m0_159  [key=2, style=dotted];
m0_148 -> m0_48  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_116  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_15  [key=2, style=dotted];
m0_151 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=errors];
m0_151 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=errors];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_46  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_10  [key=2, style=dotted];
m0_111 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_115  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_11  [key=2, style=dotted];
m0_113 -> m0_48  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_46  [key=2, style=dotted];
m0_114 -> m0_9  [key=0, style=bold, color=blue];
m0_115 -> m0_110  [key=0, style=bold, color=blue];
m0_115 -> m0_161  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.Schema.XmlSchemaSet"];
m0_123 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.Schema.XmlSchemaSet"];
m0_123 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.Schema.XmlSchemaSet"];
m0_123 -> m0_125  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema"];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_201  [key=0, style=bold, color=blue];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_10  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_11  [key=2, style=dotted];
m0_205 -> m0_107  [key=0, style=bold, color=blue];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_12  [key=2, style=dotted];
m0_206 -> m0_209  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_13  [key=2, style=dotted];
m0_207 -> m0_48  [key=2, style=dotted];
m0_208 -> m0_203  [key=0, style=bold, color=blue];
m0_208 -> m0_166  [key=0, style=bold, color=blue];
m0_67 -> m0_14  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeRelations"];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=2, style=dotted];
m0_67 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_66  [key=0, style=bold, color=blue];
m0_69 -> m0_67  [key=0, style=bold, color=blue];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_46  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_46  [key=2, style=dotted];
m0_50 -> m0_100  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_46  [key=2, style=dotted];
m0_53 -> m0_8  [key=2, style=dotted];
m0_54 -> m0_47  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_9  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_46  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_11  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m0_12 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m0_12 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_46  [key=2, style=dotted];
m0_107 -> m0_204  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_46  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_90  [key=2, style=dotted];
m0_131 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=dsSchema];
m0_131 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=dsSchema];
m0_131 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=dsSchema];
m0_132 -> m0_148  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_154  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_156  [key=2, style=dotted];
m0_137 -> m0_157  [key=2, style=dotted];
m0_137 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=schemas];
m0_137 -> m0_135  [key=0, style=bold, color=blue];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_155  [key=2, style=dotted];
m0_134 -> m0_96  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_134 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_134 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_134 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_134 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_135  [key=3, color=darkorchid, style=bold, label="Local variable System.Xml.Schema.XmlSchema schema"];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_19  [key=0, style=solid];
m0_13 -> m0_39  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_40  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_10  [key=2, style=dotted];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=schemaChangedHandler1];
m0_16 -> m0_17  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_33  [key=0, style=solid];
m0_20 -> m0_42  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_47  [key=2, style=dotted];
m0_24 -> m0_48  [key=2, style=dotted];
m0_24 -> m0_13  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_25 -> m0_20  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_27 -> m0_10  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_28 -> m0_11  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_29 -> m0_12  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_30 -> m0_13  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_49  [key=2, style=dotted];
m0_31 -> m0_26  [key=0, style=bold, color=blue];
m0_32 -> m0_34  [key=0, style=solid];
m0_32 -> m0_50  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_44  [key=2, style=dotted];
m0_33 -> m0_45  [key=2, style=dotted];
m0_33 -> m0_46  [key=2, style=dotted];
m0_33 -> m0_10  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_51  [key=2, style=dotted];
m0_34 -> m0_11  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_10  [key=2, style=dotted];
m0_35 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=schemaChangedHandler];
m0_35 -> m0_12  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_13  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_32  [key=0, style=bold, color=blue];
m0_21 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_43  [key=2, style=dotted];
m0_21 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_21 -> m0_10  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_23 -> m0_12  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_44  [key=2, style=dotted];
m0_22 -> m0_45  [key=2, style=dotted];
m0_22 -> m0_46  [key=2, style=dotted];
m0_22 -> m0_11  [key=2, style=dotted];
m0_38 -> m0_12  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_11  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_12  [key=2, style=dotted];
m0_234 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataRowChangeEventArgs"];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_13  [key=2, style=dotted];
m0_235 -> m0_239  [key=2, style=dotted];
m0_236 -> m0_231  [key=0, style=bold, color=blue];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_238  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_167 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataTable"];
m0_167 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataTable"];
m0_167 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataTable"];
m0_167 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataTable"];
m0_167 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_167 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataTable"];
m0_167 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataTable"];
m0_167 -> m0_10  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_170 -> m0_83  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_172 -> m0_13  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_171  [key=0, style=solid];
m0_169 -> m0_174  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_173  [key=0, style=solid];
m0_171 -> m0_178  [key=2, style=dotted];
m0_171 -> m0_12  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_175  [key=0, style=solid];
m0_173 -> m0_166  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_46  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_10  [key=2, style=dotted];
m0_103 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_103 -> m0_106  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_106  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_11  [key=2, style=dotted];
m0_105 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_105 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_46  [key=2, style=dotted];
m0_106 -> m0_40  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_46  [key=2, style=dotted];
m0_108 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_109 -> m0_102  [key=0, style=bold, color=blue];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_116 -> m0_14  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeCustomers"];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_116  [key=0, style=bold, color=blue];
m0_118 -> m0_116  [key=0, style=bold, color=blue];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_118 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_226  [key=2, style=dotted];
m0_237 -> m0_227  [key=2, style=dotted];
m0_237 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper"];
m0_237 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper"];
m0_237 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaGeneratorTests.CustomDirectoryInfoMapper"];
m0_238 -> m0_234  [key=0, style=bold, color=blue];
m0_238 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=errors];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_10  [key=2, style=dotted];
m0_1 -> m0_8  [key=2, style=dotted, color=green];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_2 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=schemaChangedHandler];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_18  [key=2, style=dotted];
m0_8 -> m0_19  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_17  [key=2, style=dotted];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_108  [key=0, style=solid];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataRowChangeEventArgs"];
m0_220 -> m0_11  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_225  [key=2, style=dotted];
m0_221 -> m0_12  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_224  [key=0, style=solid];
m0_222 -> m0_13  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_226  [key=2, style=dotted];
m0_223 -> m0_227  [key=2, style=dotted];
m0_223 -> m0_217  [key=0, style=bold, color=blue];
m0_224 -> m0_220  [key=0, style=bold, color=blue];
m0_224 -> m0_225  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_64  [key=0, style=bold, color=blue];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_46  [key=2, style=dotted];
m0_250 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.Schema.XmlSchemaSet"];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_275  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.Schema.XmlSchemaSet"];
m0_250 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.Schema.XmlSchemaSet"];
m0_253 -> m0_0  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_253 -> m0_274  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_152  [key=2, style=dotted];
m0_252 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label=sequence];
m0_252 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label=sequence];
m0_252 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=sequence];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_153  [key=2, style=dotted];
m0_267 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=attribute1];
m0_267 -> m0_268  [key=0, style=solid];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_90  [key=2, style=dotted];
m0_274 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label=dsSchema];
m0_274 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label=dsSchema];
m0_274 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label=dsSchema];
m0_291 -> m0_48  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_268 -> m0_48  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_272 -> m0_48  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_259 -> m0_48  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_264 -> m0_48  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_251 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_251 -> m0_151  [key=2, style=dotted];
m0_251 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_273 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_273 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_255 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label=any1];
m0_255 -> m0_256  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label=attribute1];
m0_275 -> m0_291  [key=0, style=solid];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_154  [key=2, style=dotted];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_155  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_156  [key=2, style=dotted];
m0_280 -> m0_157  [key=2, style=dotted];
m0_280 -> m0_282  [key=1, style=dashed, color=darkseagreen4, label=schemas];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_293  [key=0, style=solid];
m0_281 -> m0_291  [key=0, style=solid];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_158  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_295  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label=attribute2];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label=any1];
m0_260 -> m0_153  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label=any2];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_295  [key=2, style=dotted];
m0_276 -> m0_96  [key=2, style=dotted];
m0_276 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_276 -> m0_286  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_276 -> m0_288  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_276 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label=s1];
m0_277 -> m0_96  [key=2, style=dotted];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_277 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_277 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_277 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_277 -> m0_288  [key=1, style=dashed, color=darkseagreen4, label=s2];
m0_256 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label=any1];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_294  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_135  [key=3, color=darkorchid, style=bold, label="Local variable System.Xml.Schema.XmlSchema schema"];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_281  [key=0, style=solid];
m0_285 -> m0_281  [key=0, style=solid];
m0_285 -> m0_286  [key=0, style=solid];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=attribute2];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label=any1];
m0_261 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label=any2];
m0_261 -> m0_262  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label=any2];
m0_262 -> m0_294  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_288  [key=0, style=solid];
m0_288 -> m0_160  [key=2, style=dotted];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_159  [key=2, style=dotted];
m0_284 -> m0_155  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_287 -> m0_288  [key=0, style=solid];
m0_293 -> m0_250  [key=0, style=bold, color=blue];
m0_162 -> m0_8  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_166  [key=2, style=dotted];
m0_163 -> m0_165  [key=2, style=dotted];
m0_164 -> m0_11  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_162  [key=0, style=bold, color=blue];
m0_165 -> m0_115  [key=0, style=bold, color=blue];
m0_198 -> m0_107  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_49  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_11  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_11  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=2, style=dotted];
m0_58 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=cln];
m0_58 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=cln];
m0_58 -> m0_46  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_11  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_50  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_46  [key=2, style=dotted];
m0_62 -> m0_57  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_10  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label="System.Data.DataRowChangeEventArgs"];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_245  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [key=0, style=solid];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_226  [key=2, style=dotted];
m0_243 -> m0_227  [key=2, style=dotted];
m0_244 -> m0_240  [key=0, style=bold, color=blue];
m0_101 -> m0_50  [key=0, style=bold, color=blue];
m0_64 -> m0_14  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeTables"];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_46  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_55  [key=0, style=bold, color=blue];
m0_239 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=errors];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.XmlReader"];
m0_70 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="System.Xml.XmlReader"];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_85  [key=0, style=solid];
m0_71 -> m0_42  [key=2, style=dotted];
m0_71 -> m0_10  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_88  [key=2, style=dotted];
m0_72 -> m0_11  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_47  [key=2, style=dotted];
m0_76 -> m0_48  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_77 -> m0_83  [key=2, style=dotted];
m0_77 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_77 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_77 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_78 -> m0_46  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_79 -> m0_46  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_80 -> m0_46  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_81 -> m0_46  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_82 -> m0_74  [key=0, style=bold, color=blue];
m0_84 -> m0_87  [key=0, style=solid];
m0_84 -> m0_50  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_89  [key=2, style=dotted];
m0_85 -> m0_10  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_50  [key=2, style=dotted];
m0_86 -> m0_11  [key=2, style=dotted];
m0_86 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_86 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_86 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_73 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_43  [key=2, style=dotted];
m0_73 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=ds];
m0_73 -> m0_70  [key=0, style=bold, color=blue];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_75 -> m0_10  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_89  [key=2, style=dotted];
m0_87 -> m0_70  [key=0, style=bold, color=blue];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_46  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_11  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_10  [key=2, style=dotted];
m0_56 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_56 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_56 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_56 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=generator];
m0_56 -> m0_52  [key=0, style=bold, color=blue];
m0_166 -> m0_206  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_196  [key=0, style=bold, color=blue];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_165  [key=2, style=dotted];
m0_202 -> m0_200  [key=0, style=bold, color=blue];
m0_202 -> m0_115  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_11  [key=2, style=dotted];
m0_40 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_40 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_40 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=schema];
m0_40 -> m0_14  [key=3, color=darkorchid, style=bold, label="Parameter variable bool initTable"];
m0_40 -> m0_100  [key=3, color=darkorchid, style=bold, label="Parameter variable bool initTable"];
m0_40 -> m0_102  [key=0, style=solid];
m0_40 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_45 -> m0_38  [key=0, style=bold, color=blue];
m0_217 -> m0_218  [key=0, style=solid];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_10  [key=2, style=dotted];
m0_218 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaGenerator];
m0_219 -> m0_220  [key=0, style=solid];
m0_197 -> m0_63  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=cln];
m0_246 -> m0_247  [key=0, style=solid];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_249  [key=2, style=dotted];
m0_248 -> m0_246  [key=0, style=bold, color=blue];
m0_309 -> m0_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_309 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet"];
m0_313 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m0_313 -> m0_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.CustomerDataSet.CustomersDataTable"];
m1_414 -> m1_415  [key=0, style=solid];
m1_415 -> m1_416  [key=0, style=solid];
m1_415 -> m1_212  [key=2, style=dotted];
m1_416 -> m1_414  [key=0, style=bold, color=blue];
m1_437 -> m1_438  [key=0, style=solid];
m1_438 -> m1_439  [key=0, style=solid];
m1_438 -> m1_423  [key=2, style=dotted];
m1_438 -> m1_212  [key=2, style=dotted];
m1_439 -> m1_437  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [key=2, style=dotted];
m1_68 -> m1_66  [key=0, style=bold, color=blue];
m1_399 -> m1_400  [key=0, style=solid];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_96  [key=2, style=dotted];
m1_401 -> m1_399  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_277 -> m1_278  [key=0, style=solid];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_191  [key=2, style=dotted];
m1_279 -> m1_277  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=t2];
m1_45 -> m1_56  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label=t1];
m1_46 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=t1];
m1_46 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=t1];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_50  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [key=0, style=solid];
m1_52 -> m1_57  [key=2, style=dotted];
m1_49 -> m1_56  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_50 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_54 -> m1_51  [key=0, style=solid];
m1_54 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_55 -> m1_56  [key=0, style=solid];
m1_53 -> m1_56  [key=0, style=solid];
m1_56 -> m1_43  [key=0, style=bold, color=blue];
m1_269 -> m1_270  [key=0, style=solid];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_272  [key=2, style=dotted];
m1_271 -> m1_269  [key=0, style=bold, color=blue];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_98 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_98 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_98 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_98 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_98 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_98 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_98 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_99 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_99 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=0, style=solid];
m1_101 -> m1_119  [key=0, style=solid];
m1_101 -> m1_120  [key=2, style=dotted];
m1_101 -> m1_9  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_85  [key=2, style=dotted];
m1_103 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_103 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_104 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_104 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_105 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_105 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_122  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_123  [key=2, style=dotted];
m1_116 -> m1_29  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_124  [key=2, style=dotted];
m1_118 -> m1_36  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_12  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_121  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_111  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_114  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_117  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_119  [key=0, style=solid];
m1_119 -> m1_98  [key=0, style=bold, color=blue];
m1_382 -> m1_383  [key=0, style=solid];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=hashCode];
m1_383 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=hashCode];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_386  [key=0, style=solid];
m1_385 -> m1_384  [key=0, style=solid];
m1_385 -> m1_388  [key=2, style=dotted];
m1_385 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=hashCode];
m1_385 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=hashCode];
m1_386 -> m1_387  [key=0, style=solid];
m1_387 -> m1_382  [key=0, style=bold, color=blue];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_206 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_209  [key=0, style=solid];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_96  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_159  [key=2, style=dotted];
m1_208 -> m1_211  [key=0, style=solid];
m1_211 -> m1_206  [key=0, style=bold, color=blue];
m1_191 -> m1_192  [key=0, style=solid];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_12  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_198  [key=0, style=solid];
m1_194 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_194 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_204  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_194  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_201  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_123  [key=2, style=dotted];
m1_200 -> m1_29  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_203  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_205  [key=2, style=dotted];
m1_202 -> m1_36  [key=2, style=dotted];
m1_203 -> m1_191  [key=0, style=bold, color=blue];
m1_62 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=2, style=dotted];
m1_64 -> m1_62  [key=0, style=bold, color=blue];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=2, style=dotted];
m1_21 -> m1_19  [key=0, style=bold, color=blue];
m1_282 -> m1_283  [key=0, style=solid];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_285  [key=2, style=dotted];
m1_283 -> m1_280  [key=2, style=dotted];
m1_284 -> m1_282  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=handler];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_34  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_34 -> m1_29  [key=0, style=bold, color=blue];
m1_455 -> m1_456  [key=0, style=solid];
m1_456 -> m1_455  [key=0, style=bold, color=blue];
m1_446 -> m1_447  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_423  [key=2, style=dotted];
m1_447 -> m1_149  [key=2, style=dotted];
m1_448 -> m1_446  [key=0, style=bold, color=blue];
m1_280 -> m1_281  [key=0, style=solid];
m1_281 -> m1_280  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.AddingNewEventArgs"];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=handler];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_27 -> m1_23  [key=0, style=bold, color=blue];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_191  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_245  [key=2, style=dotted];
m1_276 -> m1_273  [key=0, style=bold, color=blue];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_96  [key=2, style=dotted];
m1_150 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_154  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_125  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_153 -> m1_155  [key=0, style=solid];
m1_155 -> m1_149  [key=0, style=bold, color=blue];
m1_434 -> m1_435  [key=0, style=solid];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_191  [key=2, style=dotted];
m1_436 -> m1_434  [key=0, style=bold, color=blue];
m1_479 -> m1_480  [key=0, style=solid];
m1_480 -> m1_481  [key=0, style=solid];
m1_480 -> m1_473  [key=2, style=dotted];
m1_481 -> m1_479  [key=0, style=bold, color=blue];
m1_440 -> m1_441  [key=0, style=solid];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_423  [key=2, style=dotted];
m1_441 -> m1_96  [key=2, style=dotted];
m1_442 -> m1_440  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_423 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_426  [key=0, style=solid];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_428  [key=0, style=solid];
m1_427 -> m1_429  [key=0, style=solid];
m1_425 -> m1_429  [key=0, style=solid];
m1_428 -> m1_429  [key=0, style=solid];
m1_428 -> m1_230  [key=2, style=dotted];
m1_429 -> m1_423  [key=0, style=bold, color=blue];
m1_430 -> m1_431  [key=0, style=solid];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_423  [key=2, style=dotted];
m1_431 -> m1_245  [key=2, style=dotted];
m1_432 -> m1_433  [key=0, style=solid];
m1_433 -> m1_430  [key=0, style=bold, color=blue];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_300 -> m1_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_300 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_300 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_300 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_300 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_360  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_300 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonLoadSettings"];
m1_300 -> m1_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_300 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_9  [key=2, style=dotted];
m1_301 -> m1_10  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_302 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_302 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_302 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_302 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_302 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_302 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_302 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_310  [key=0, style=solid];
m1_308 -> m1_315  [key=0, style=solid];
m1_308 -> m1_319  [key=0, style=solid];
m1_308 -> m1_324  [key=0, style=solid];
m1_308 -> m1_328  [key=0, style=solid];
m1_308 -> m1_333  [key=0, style=solid];
m1_308 -> m1_337  [key=0, style=solid];
m1_308 -> m1_346  [key=0, style=solid];
m1_308 -> m1_351  [key=0, style=solid];
m1_308 -> m1_355  [key=0, style=solid];
m1_308 -> m1_359  [key=0, style=solid];
m1_308 -> m1_369  [key=0, style=solid];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_373  [key=2, style=dotted];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_373  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_375  [key=2, style=dotted];
m1_329 -> m1_376  [key=2, style=dotted];
m1_329 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m1_329 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_373  [key=2, style=dotted];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_268  [key=2, style=dotted];
m1_343 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_373  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_370  [key=0, style=solid];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_376  [key=2, style=dotted];
m1_348 -> m1_377  [key=2, style=dotted];
m1_348 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_373  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_373  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_373  [key=2, style=dotted];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_376  [key=2, style=dotted];
m1_360 -> m1_364  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_373  [key=2, style=dotted];
m1_369 -> m1_371  [key=0, style=solid];
m1_369 -> m1_16  [key=2, style=dotted];
m1_369 -> m1_18  [key=2, style=dotted];
m1_370 -> m1_303  [key=0, style=solid];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_298  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_303 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_303 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_308  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_307  [key=0, style=solid];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_307 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_245  [key=2, style=dotted];
m1_306 -> m1_371  [key=0, style=solid];
m1_309 -> m1_370  [key=0, style=solid];
m1_310 -> m1_311  [key=0, style=solid];
m1_315 -> m1_316  [key=0, style=solid];
m1_319 -> m1_320  [key=0, style=solid];
m1_324 -> m1_325  [key=0, style=solid];
m1_328 -> m1_329  [key=0, style=solid];
m1_333 -> m1_334  [key=0, style=solid];
m1_337 -> m1_338  [key=0, style=solid];
m1_346 -> m1_347  [key=0, style=solid];
m1_351 -> m1_352  [key=0, style=solid];
m1_355 -> m1_356  [key=0, style=solid];
m1_359 -> m1_360  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_372  [key=2, style=dotted];
m1_311 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=a];
m1_311 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=a];
m1_314 -> m1_370  [key=0, style=solid];
m1_314 -> m1_316  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_314 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_318  [key=0, style=solid];
m1_317 -> m1_371  [key=0, style=solid];
m1_318 -> m1_370  [key=0, style=solid];
m1_318 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_318 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_374  [key=2, style=dotted];
m1_320 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_320 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_245  [key=2, style=dotted];
m1_323 -> m1_370  [key=0, style=solid];
m1_323 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_323 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_327  [key=0, style=solid];
m1_326 -> m1_371  [key=0, style=solid];
m1_327 -> m1_370  [key=0, style=solid];
m1_327 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_327 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_245  [key=2, style=dotted];
m1_332 -> m1_370  [key=0, style=solid];
m1_332 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_332 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_336  [key=0, style=solid];
m1_335 -> m1_371  [key=0, style=solid];
m1_336 -> m1_370  [key=0, style=solid];
m1_336 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_336 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_336 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_336 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_336 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_336 -> m1_363  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_336 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=parent];
m1_338 -> m1_339  [key=0, style=solid];
m1_339 -> m1_340  [key=0, style=solid];
m1_340 -> m1_341  [key=0, style=solid];
m1_341 -> m1_342  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_345 -> m1_370  [key=0, style=solid];
m1_345 -> m1_245  [key=2, style=dotted];
m1_350 -> m1_370  [key=0, style=solid];
m1_350 -> m1_245  [key=2, style=dotted];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_94  [key=2, style=dotted];
m1_352 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_354 -> m1_370  [key=0, style=solid];
m1_354 -> m1_245  [key=2, style=dotted];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_378  [key=2, style=dotted];
m1_356 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=v];
m1_358 -> m1_370  [key=0, style=solid];
m1_358 -> m1_245  [key=2, style=dotted];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_379  [key=2, style=dotted];
m1_361 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_361 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_361 -> m1_368  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_380  [key=2, style=dotted];
m1_364 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=existingPropertyWithName];
m1_366 -> m1_368  [key=0, style=solid];
m1_366 -> m1_245  [key=2, style=dotted];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_381  [key=2, style=dotted];
m1_368 -> m1_370  [key=0, style=solid];
m1_363 -> m1_364  [key=0, style=solid];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_367  [key=0, style=solid];
m1_371 -> m1_300  [key=0, style=bold, color=blue];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_159 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_159 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_159 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_160 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_160 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_160 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_160 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_163  [key=0, style=solid];
m1_162 -> m1_188  [key=0, style=solid];
m1_162 -> m1_120  [key=2, style=dotted];
m1_162 -> m1_9  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_165  [key=0, style=solid];
m1_164 -> m1_188  [key=0, style=solid];
m1_164 -> m1_120  [key=2, style=dotted];
m1_164 -> m1_9  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=existing];
m1_165 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label=existing];
m1_165 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label=existing];
m1_165 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=existing];
m1_165 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=existing];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_168  [key=0, style=solid];
m1_166 -> m1_189  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_85  [key=2, style=dotted];
m1_169 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_169 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_169 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_169 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_169 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_169 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_169 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_169 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_171 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_171 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_172 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_172 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_180 -> m1_181  [key=0, style=solid];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_123  [key=2, style=dotted];
m1_185 -> m1_29  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_190  [key=2, style=dotted];
m1_187 -> m1_36  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_121  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_167 -> m1_188  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_12  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_177 -> m1_178  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_180  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_186  [key=0, style=solid];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_188  [key=0, style=solid];
m1_188 -> m1_159  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=handler];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_41 -> m1_36  [key=0, style=bold, color=blue];
m1_452 -> m1_453  [key=0, style=solid];
m1_453 -> m1_454  [key=0, style=solid];
m1_453 -> m1_215  [key=2, style=dotted];
m1_454 -> m1_452  [key=0, style=bold, color=blue];
m1_212 -> m1_213  [key=0, style=solid];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_96  [key=2, style=dotted];
m1_214 -> m1_212  [key=0, style=bold, color=blue];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_85 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_85 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_85 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_85 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=0, style=solid];
m1_89 -> m1_93  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_92  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_95  [key=2, style=dotted];
m1_91 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_92 -> m1_93  [key=0, style=solid];
m1_87 -> m1_93  [key=0, style=solid];
m1_87 -> m1_94  [key=2, style=dotted];
m1_93 -> m1_85  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_10  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_4 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_11  [key=2, style=dotted];
m1_7 -> m1_5  [key=0, style=solid];
m1_7 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_8 -> m1_2  [key=0, style=bold, color=blue];
m1_408 -> m1_409  [key=0, style=solid];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_245  [key=2, style=dotted];
m1_410 -> m1_408  [key=0, style=bold, color=blue];
m1_449 -> m1_450  [key=0, style=solid];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_125  [key=2, style=dotted];
m1_451 -> m1_449  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_96  [key=0, style=bold, color=blue];
m1_443 -> m1_444  [key=0, style=solid];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_423  [key=2, style=dotted];
m1_444 -> m1_98  [key=2, style=dotted];
m1_445 -> m1_443  [key=0, style=bold, color=blue];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_289 -> m1_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_289 -> m1_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_289 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_289 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_295  [key=1, style=dashed, color=darkseagreen4, label=startDepth];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_293  [key=0, style=solid];
m1_291 -> m1_298  [key=2, style=dotted];
m1_292 -> m1_297  [key=0, style=solid];
m1_292 -> m1_17  [key=2, style=dotted];
m1_292 -> m1_18  [key=2, style=dotted];
m1_292 -> m1_299  [key=2, style=dotted];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_300  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_17  [key=2, style=dotted];
m1_296 -> m1_18  [key=2, style=dotted];
m1_296 -> m1_299  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_297  [key=0, style=solid];
m1_297 -> m1_289  [key=0, style=bold, color=blue];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_126 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_126 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_126 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_126 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=children];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_129  [key=0, style=solid];
m1_128 -> m1_147  [key=0, style=solid];
m1_128 -> m1_120  [key=2, style=dotted];
m1_128 -> m1_9  [key=2, style=dotted];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_131  [key=0, style=solid];
m1_130 -> m1_147  [key=0, style=solid];
m1_130 -> m1_120  [key=2, style=dotted];
m1_130 -> m1_9  [key=2, style=dotted];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_132 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_132 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_132 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_133 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_133 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=previous];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_134 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_134 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_148  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_123  [key=2, style=dotted];
m1_144 -> m1_29  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_124  [key=2, style=dotted];
m1_146 -> m1_36  [key=2, style=dotted];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_12  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_147  [key=0, style=solid];
m1_147 -> m1_125  [key=0, style=bold, color=blue];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_69  [key=2, style=dotted];
m1_72 -> m1_70  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_14 -> m1_17  [key=2, style=dotted];
m1_14 -> m1_18  [key=2, style=dotted];
m1_15 -> m1_12  [key=0, style=bold, color=blue];
m1_121 -> m1_240  [key=0, style=solid];
m1_121 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_121 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_9  [key=2, style=dotted];
m1_240 -> m1_10  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_243  [key=0, style=solid];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_230  [key=2, style=dotted];
m1_242 -> m1_17  [key=2, style=dotted];
m1_242 -> m1_244  [key=2, style=dotted];
m1_243 -> m1_121  [key=0, style=bold, color=blue];
m1_420 -> m1_421  [key=0, style=solid];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_149  [key=2, style=dotted];
m1_422 -> m1_420  [key=0, style=bold, color=blue];
m1_470 -> m1_471  [key=0, style=solid];
m1_471 -> m1_472  [key=0, style=solid];
m1_471 -> m1_473  [key=2, style=dotted];
m1_472 -> m1_470  [key=0, style=bold, color=blue];
m1_411 -> m1_412  [key=0, style=solid];
m1_412 -> m1_413  [key=0, style=solid];
m1_412 -> m1_191  [key=2, style=dotted];
m1_413 -> m1_411  [key=0, style=bold, color=blue];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m1_215 -> m1_218  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_215 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_215 -> m1_220  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m1_215 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m1_215 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_218  [key=0, style=solid];
m1_217 -> m1_228  [key=0, style=solid];
m1_217 -> m1_229  [key=2, style=dotted];
m1_217 -> m1_9  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_220  [key=0, style=solid];
m1_219 -> m1_228  [key=0, style=solid];
m1_219 -> m1_120  [key=2, style=dotted];
m1_219 -> m1_9  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_222  [key=0, style=solid];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_224  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_231  [key=2, style=dotted];
m1_221 -> m1_228  [key=0, style=solid];
m1_221 -> m1_230  [key=2, style=dotted];
m1_223 -> m1_228  [key=0, style=solid];
m1_223 -> m1_230  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_224 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_228  [key=0, style=solid];
m1_227 -> m1_225  [key=0, style=solid];
m1_227 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_228 -> m1_215  [key=0, style=bold, color=blue];
m1_402 -> m1_403  [key=0, style=solid];
m1_403 -> m1_404  [key=0, style=solid];
m1_403 -> m1_98  [key=2, style=dotted];
m1_404 -> m1_402  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_61  [key=2, style=dotted];
m1_60 -> m1_58  [key=0, style=bold, color=blue];
m1_477 -> m1_478  [key=0, style=solid];
m1_478 -> m1_477  [key=0, style=bold, color=blue];
m1_69 -> m1_73  [key=0, style=solid];
m1_69 -> m1_74  [key=0, style=bold, color=crimson];
m1_69 -> m1_76  [key=0, style=bold, color=crimson];
m1_69 -> m1_80  [key=0, style=bold, color=crimson];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_75  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_80 -> m1_79  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_81  [key=0, style=solid];
m1_75 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=o];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_75  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_75  [key=0, style=solid];
m1_79 -> m1_66  [key=2, style=dotted];
m1_81 -> m1_69  [key=0, style=bold, color=blue];
m1_389 -> m1_390  [key=0, style=solid];
m1_390 -> m1_391  [key=0, style=solid];
m1_391 -> m1_389  [key=0, style=bold, color=blue];
m1_286 -> m1_287  [key=0, style=solid];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_280  [key=2, style=dotted];
m1_288 -> m1_286  [key=0, style=bold, color=blue];
m1_189 -> m1_232  [key=0, style=solid];
m1_189 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_189 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=v1];
m1_232 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label=v1];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_236  [key=0, style=solid];
m1_236 -> m1_238  [key=0, style=solid];
m1_236 -> m1_239  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_237  [key=0, style=solid];
m1_237 -> m1_238  [key=0, style=solid];
m1_235 -> m1_238  [key=0, style=solid];
m1_238 -> m1_189  [key=0, style=bold, color=blue];
m1_11 -> m1_254  [key=0, style=solid];
m1_11 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_11 -> m1_256  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_11 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_11 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_11 -> m1_261  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_260  [key=0, style=solid];
m1_254 -> m1_82  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_257  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label=multiIndex];
m1_256 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label=multiIndex];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_11  [key=2, style=dotted];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_263  [key=2, style=dotted];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_98  [key=2, style=dotted];
m1_257 -> m1_258  [key=0, style=solid];
m1_257 -> m1_262  [key=0, style=solid];
m1_259 -> m1_257  [key=0, style=solid];
m1_259 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label=multiIndex];
m1_262 -> m1_11  [key=0, style=bold, color=blue];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_265  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_263 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_266  [key=0, style=solid];
m1_265 -> m1_267  [key=0, style=solid];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_268  [key=2, style=dotted];
m1_267 -> m1_263  [key=0, style=bold, color=blue];
m1_457 -> m1_458  [key=0, style=solid];
m1_458 -> m1_459  [key=0, style=solid];
m1_458 -> m1_468  [key=2, style=dotted];
m1_458 -> m1_460  [key=1, style=dashed, color=darkseagreen4, label=args];
m1_458 -> m1_462  [key=1, style=dashed, color=darkseagreen4, label=args];
m1_458 -> m1_464  [key=1, style=dashed, color=darkseagreen4, label=args];
m1_459 -> m1_460  [key=0, style=solid];
m1_459 -> m1_23  [key=2, style=dotted];
m1_460 -> m1_461  [key=0, style=solid];
m1_460 -> m1_462  [key=0, style=solid];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_464  [key=0, style=solid];
m1_464 -> m1_465  [key=0, style=solid];
m1_464 -> m1_466  [key=1, style=dashed, color=darkseagreen4, label=newItem];
m1_461 -> m1_467  [key=0, style=solid];
m1_461 -> m1_469  [key=2, style=dotted];
m1_461 -> m1_17  [key=2, style=dotted];
m1_461 -> m1_18  [key=2, style=dotted];
m1_463 -> m1_467  [key=0, style=solid];
m1_463 -> m1_469  [key=2, style=dotted];
m1_463 -> m1_18  [key=2, style=dotted];
m1_465 -> m1_466  [key=0, style=solid];
m1_465 -> m1_245  [key=2, style=dotted];
m1_466 -> m1_467  [key=0, style=solid];
m1_467 -> m1_457  [key=0, style=bold, color=blue];
m1_248 -> m1_249  [key=0, style=solid];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_11  [key=2, style=dotted];
m1_250 -> m1_248  [key=0, style=bold, color=blue];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_485  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m1_482 -> m1_486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_489  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m1_482 -> m1_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_494  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m1_482 -> m1_495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_498  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m1_482 -> m1_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonMergeSettings"];
m1_482 -> m1_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_482 -> m1_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonMergeSettings"];
m1_483 -> m1_484  [key=0, style=solid];
m1_483 -> m1_487  [key=0, style=solid];
m1_483 -> m1_492  [key=0, style=solid];
m1_483 -> m1_496  [key=0, style=solid];
m1_483 -> m1_510  [key=0, style=solid];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_511  [key=0, style=solid];
m1_486 -> m1_485  [key=0, style=solid];
m1_486 -> m1_245  [key=2, style=dotted];
m1_488 -> m1_489  [key=0, style=solid];
m1_488 -> m1_512  [key=2, style=dotted];
m1_488 -> m1_490  [key=1, style=dashed, color=darkseagreen4, label=items];
m1_489 -> m1_490  [key=0, style=solid];
m1_489 -> m1_511  [key=0, style=solid];
m1_489 -> m1_491  [key=1, style=dashed, color=darkseagreen4, label=item];
m1_491 -> m1_489  [key=0, style=solid];
m1_491 -> m1_245  [key=2, style=dotted];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_191  [key=2, style=dotted];
m1_494 -> m1_495  [key=0, style=solid];
m1_494 -> m1_511  [key=0, style=solid];
m1_495 -> m1_494  [key=0, style=solid];
m1_495 -> m1_245  [key=2, style=dotted];
m1_498 -> m1_499  [key=0, style=solid];
m1_498 -> m1_511  [key=0, style=solid];
m1_498 -> m1_503  [key=1, style=dashed, color=darkseagreen4, label=targetItem];
m1_498 -> m1_504  [key=1, style=dashed, color=darkseagreen4, label=targetItem];
m1_498 -> m1_505  [key=1, style=dashed, color=darkseagreen4, label=targetItem];
m1_498 -> m1_508  [key=1, style=dashed, color=darkseagreen4, label=targetItem];
m1_499 -> m1_500  [key=0, style=solid];
m1_499 -> m1_508  [key=0, style=solid];
m1_500 -> m1_501  [key=0, style=solid];
m1_503 -> m1_509  [key=0, style=solid];
m1_503 -> m1_286  [key=2, style=dotted];
m1_507 -> m1_509  [key=0, style=solid];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_245  [key=2, style=dotted];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_120  [key=2, style=dotted];
m1_510 -> m1_9  [key=2, style=dotted];
m1_484 -> m1_485  [key=0, style=solid];
m1_487 -> m1_488  [key=0, style=solid];
m1_492 -> m1_493  [key=0, style=solid];
m1_496 -> m1_497  [key=0, style=solid];
m1_490 -> m1_491  [key=0, style=solid];
m1_490 -> m1_489  [key=0, style=solid];
m1_490 -> m1_513  [key=2, style=dotted];
m1_497 -> m1_498  [key=0, style=solid];
m1_497 -> m1_499  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_497 -> m1_500  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_497 -> m1_507  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_497 -> m1_509  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_509 -> m1_498  [key=0, style=solid];
m1_509 -> m1_509  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_504 -> m1_505  [key=0, style=solid];
m1_504 -> m1_509  [key=0, style=solid];
m1_505 -> m1_506  [key=0, style=solid];
m1_505 -> m1_263  [key=2, style=dotted];
m1_505 -> m1_507  [key=1, style=dashed, color=darkseagreen4, label=contentValue];
m1_501 -> m1_502  [key=0, style=solid];
m1_501 -> m1_503  [key=1, style=dashed, color=darkseagreen4, label=existingContainer];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_504  [key=0, style=solid];
m1_506 -> m1_507  [key=0, style=solid];
m1_506 -> m1_509  [key=0, style=solid];
m1_511 -> m1_482  [key=0, style=bold, color=blue];
m1_405 -> m1_406  [key=0, style=solid];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_125  [key=2, style=dotted];
m1_407 -> m1_405  [key=0, style=bold, color=blue];
m1_245 -> m1_246  [key=0, style=solid];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_11  [key=2, style=dotted];
m1_247 -> m1_245  [key=0, style=bold, color=blue];
m1_417 -> m1_418  [key=0, style=solid];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_215  [key=2, style=dotted];
m1_419 -> m1_417  [key=0, style=bold, color=blue];
m1_251 -> m1_252  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_11  [key=2, style=dotted];
m1_253 -> m1_251  [key=0, style=bold, color=blue];
m1_392 -> m1_393  [key=0, style=solid];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_395  [key=1, style=dashed, color=darkseagreen4, label=d];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_396  [key=0, style=solid];
m1_395 -> m1_397  [key=0, style=solid];
m1_395 -> m1_398  [key=2, style=dotted];
m1_396 -> m1_397  [key=0, style=solid];
m1_397 -> m1_392  [key=0, style=bold, color=blue];
m1_474 -> m1_475  [key=0, style=solid];
m1_475 -> m1_476  [key=0, style=solid];
m1_475 -> m1_473  [key=2, style=dotted];
m1_476 -> m1_474  [key=0, style=bold, color=blue];
m1_156 -> m1_157  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_158 -> m1_156  [key=0, style=bold, color=blue];
m1_514 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_287  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_435  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_438  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m1_514 -> m1_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JContainer"];
m2_204 -> m2_16  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_484 -> m2_485  [key=0, style=solid];
m2_484 -> m2_486  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_484 -> m2_487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m2_484 -> m2_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m2_484 -> m2_489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m2_485 -> m2_486  [key=0, style=solid, color=red];
m2_485 -> m2_488  [key=1, style=dashed, color=red, label=resolvedTypeNameHandling];
m2_486 -> m2_487  [key=0, style=solid];
m2_486 -> m2_488  [key=0, style=solid];
m2_486 -> m2_318  [key=2, style=dotted];
m2_487 -> m2_488  [key=0, style=solid];
m2_487 -> m2_500  [key=0, style=solid];
m2_488 -> m2_489  [key=0, style=solid];
m2_488 -> m2_499  [key=0, style=solid];
m2_488 -> m2_318  [key=2, style=dotted];
m2_489 -> m2_490  [key=0, style=solid];
m2_489 -> m2_492  [key=0, style=solid];
m2_490 -> m2_484  [key=0, style=bold, color=blue];
m2_490 -> m2_491  [key=0, style=solid];
m2_490 -> m2_499  [key=0, style=solid];
m2_1931 -> m2_1932  [key=0, style=solid];
m2_1932 -> m2_1933  [key=0, style=solid];
m2_1932 -> m2_1934  [key=2, style=dotted];
m2_1933 -> m2_1931  [key=0, style=bold, color=blue];
m2_558 -> m2_559  [key=0, style=solid];
m2_564 -> m2_16  [key=2, style=dotted];
m2_564 -> m2_565  [key=0, style=solid];
m2_564 -> m2_563  [key=0, style=solid];
m2_564 -> m2_566  [key=2, style=dotted];
m2_565 -> m2_16  [key=2, style=dotted];
m2_565 -> m2_566  [key=0, style=solid];
m2_565 -> m2_24  [key=0, style=bold, color=blue];
m2_560 -> m2_564  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_560 -> m2_565  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_560 -> m2_561  [key=0, style=solid];
m2_560 -> m2_568  [key=2, style=dotted];
m2_560 -> m2_562  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_560 -> m2_25  [key=2, style=dotted];
m2_563 -> m2_564  [key=0, style=solid];
m2_563 -> m2_571  [key=2, style=dotted];
m2_563 -> m2_566  [key=1, style=dashed, color=darkseagreen4, label=output];
m2_563 -> m2_565  [key=0, style=solid];
m2_566 -> m2_567  [key=0, style=solid];
m2_566 -> m2_142  [key=2, style=dotted];
m2_559 -> m2_560  [key=0, style=solid];
m2_561 -> m2_563  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_561 -> m2_562  [key=0, style=solid];
m2_561 -> m2_569  [key=2, style=dotted];
m2_562 -> m2_563  [key=0, style=solid];
m2_562 -> m2_570  [key=2, style=dotted];
m2_562 -> m2_85  [key=2, style=dotted];
m2_567 -> m2_558  [key=0, style=bold, color=blue];
m2_567 -> m2_568  [key=0, style=solid];
m2_567 -> m2_569  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_57 -> m2_65  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_85  [key=2, style=dotted];
m2_58 -> m2_16  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_84  [key=0, style=solid];
m2_62 -> m2_16  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_84  [key=0, style=solid];
m2_61 -> m2_29  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_87  [key=2, style=dotted];
m2_54 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_64  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_64  [key=2, style=dotted];
m2_56 -> m2_59  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_25  [key=2, style=dotted];
m2_59 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_59 -> m2_86  [key=2, style=dotted];
m2_59 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=converter];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_25  [key=2, style=dotted];
m2_60 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_60 -> m2_63  [key=0, style=solid];
m2_55 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_25  [key=2, style=dotted];
m2_63 -> m2_53  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_66  [key=0, style=solid];
m2_63 -> m2_71  [key=0, style=solid];
m2_63 -> m2_73  [key=0, style=solid];
m2_63 -> m2_75  [key=0, style=solid];
m2_63 -> m2_78  [key=0, style=solid];
m2_63 -> m2_80  [key=0, style=solid];
m2_63 -> m2_82  [key=0, style=solid];
m2_1446 -> m2_1447  [key=0, style=solid];
m2_1446 -> m2_1448  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1446 -> m2_1449  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1446 -> m2_1450  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1447 -> m2_1448  [key=0, style=solid];
m2_1448 -> m2_1449  [key=0, style=solid];
m2_1449 -> m2_1450  [key=0, style=solid];
m2_1450 -> m2_1451  [key=0, style=solid];
m2_1451 -> m2_1446  [key=0, style=bold, color=blue];
m2_345 -> m2_348  [key=0, style=solid];
m2_345 -> m2_342  [key=0, style=solid];
m2_345 -> m2_21  [key=2, style=dotted];
m2_599 -> m2_600  [key=0, style=solid];
m2_601 -> m2_65  [key=2, style=dotted];
m2_601 -> m2_602  [key=0, style=solid];
m2_601 -> m2_603  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_603 -> m2_16  [key=2, style=dotted];
m2_603 -> m2_604  [key=0, style=solid];
m2_600 -> m2_601  [key=0, style=solid];
m2_600 -> m2_605  [key=2, style=dotted];
m2_600 -> m2_591  [key=2, style=dotted];
m2_602 -> m2_603  [key=0, style=solid];
m2_604 -> m2_599  [key=0, style=bold, color=blue];
m2_1533 -> m2_1534  [key=0, style=solid];
m2_1536 -> m2_16  [key=2, style=dotted];
m2_1536 -> m2_1537  [key=0, style=solid];
m2_1537 -> m2_16  [key=2, style=dotted];
m2_1537 -> m2_1538  [key=0, style=solid];
m2_1538 -> m2_16  [key=2, style=dotted];
m2_1538 -> m2_1539  [key=0, style=solid];
m2_1535 -> m2_29  [key=2, style=dotted];
m2_1535 -> m2_1536  [key=0, style=solid];
m2_1535 -> m2_1537  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_1535 -> m2_1538  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_1534 -> m2_1535  [key=0, style=solid];
m2_1539 -> m2_1533  [key=0, style=bold, color=blue];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_276  [key=0, style=solid, color=red];
m2_272 -> m2_20  [key=2, style=dotted];
m2_313 -> m2_314  [key=0, style=solid];
m2_1036 -> m2_1037  [key=0, style=solid];
m2_1038 -> m2_65  [key=2, style=dotted];
m2_1038 -> m2_1039  [key=0, style=solid];
m2_1039 -> m2_16  [key=2, style=dotted];
m2_1039 -> m2_1040  [key=0, style=solid];
m2_1037 -> m2_1038  [key=0, style=solid];
m2_1037 -> m2_904  [key=2, style=dotted];
m2_1040 -> m2_1036  [key=0, style=bold, color=blue];
m2_346 -> m2_347  [key=0, style=solid];
m2_346 -> m2_348  [key=0, style=solid];
m2_346 -> m2_342  [key=0, style=solid];
m2_346 -> m2_138  [key=2, style=dotted];
m2_1836 -> m2_1837  [key=0, style=solid];
m2_1838 -> m2_633  [key=2, style=dotted];
m2_1838 -> m2_1838  [key=1, style=dashed, color=darkseagreen4, label=pair];
m2_1838 -> m2_1837  [key=0, style=solid];
m2_1837 -> m2_1838  [key=0, style=solid];
m2_1837 -> m2_1839  [key=0, style=solid];
m2_1839 -> m2_1836  [key=0, style=bold, color=blue];
m2_2228 -> m2_2229  [key=0, style=solid];
m2_2229 -> m2_25  [key=2, style=dotted];
m2_2229 -> m2_2231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2229 -> m2_2230  [key=0, style=solid];
m2_2230 -> m2_2228  [key=0, style=bold, color=blue];
m2_519 -> m2_520  [key=0, style=solid];
m2_519 -> m2_523  [key=0, style=solid];
m2_519 -> m2_511  [key=0, style=solid];
m2_519 -> m2_21  [key=2, style=dotted];
m2_530 -> m2_16  [key=2, style=dotted];
m2_530 -> m2_531  [key=0, style=solid];
m2_530 -> m2_93  [key=0, style=bold, color=blue];
m2_531 -> m2_16  [key=2, style=dotted];
m2_531 -> m2_532  [key=0, style=solid];
m2_532 -> m2_16  [key=2, style=dotted];
m2_532 -> m2_533  [key=0, style=solid];
m2_532 -> m2_547  [key=0, style=solid];
m2_533 -> m2_16  [key=2, style=dotted];
m2_533 -> m2_534  [key=0, style=solid];
m2_533 -> m2_540  [key=1, style=dashed, color=darkseagreen4, label=primitiveContract];
m2_534 -> m2_16  [key=2, style=dotted];
m2_534 -> m2_535  [key=0, style=solid];
m2_534 -> m2_540  [key=0, style=solid];
m2_535 -> m2_16  [key=2, style=dotted];
m2_535 -> m2_536  [key=0, style=solid];
m2_535 -> m2_553  [key=2, style=dotted];
m2_535 -> m2_538  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_536 -> m2_16  [key=2, style=dotted];
m2_536 -> m2_537  [key=0, style=solid];
m2_536 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m2_537 -> m2_16  [key=2, style=dotted];
m2_537 -> m2_538  [key=0, style=solid];
m2_537 -> m2_554  [key=2, style=dotted];
m2_537 -> m2_539  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_538 -> m2_16  [key=2, style=dotted];
m2_538 -> m2_539  [key=0, style=solid];
m2_538 -> m2_555  [key=2, style=dotted];
m2_529 -> m2_29  [key=2, style=dotted];
m2_529 -> m2_530  [key=0, style=solid];
m2_529 -> m2_531  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_532  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_534  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_535  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_536  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_537  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_538  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m2_529 -> m2_212  [key=2, style=dotted];
m2_524 -> m2_530  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_524 -> m2_531  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_524 -> m2_532  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_524 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_524 -> m2_534  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_484  [key=2, style=dotted];
m2_524 -> m2_527  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_524 -> m2_526  [key=0, style=solid];
m2_524 -> m2_23  [key=2, style=dotted];
m2_527 -> m2_529  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_541  [key=2, style=dotted];
m2_527 -> m2_55  [key=2, style=dotted];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_142  [key=2, style=dotted];
m2_528 -> m2_265  [key=2, style=dotted];
m2_526 -> m2_13  [key=2, style=dotted];
m2_526 -> m2_527  [key=0, style=solid];
m2_526 -> m2_530  [key=0, style=solid];
m2_520 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label=p1];
m2_520 -> m2_521  [key=0, style=solid];
m2_520 -> m2_540  [key=2, style=dotted];
m2_520 -> m2_522  [key=1, style=dashed, color=darkseagreen4, label=p1];
m2_520 -> m2_523  [key=1, style=dashed, color=darkseagreen4, label=p1];
m2_520 -> m2_511  [key=0, style=solid];
m2_520 -> m2_138  [key=2, style=dotted];
m2_521 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label=p2];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_540  [key=2, style=dotted];
m2_521 -> m2_523  [key=1, style=dashed, color=darkseagreen4, label=p2];
m2_521 -> m2_53  [key=2, style=dotted];
m2_523 -> m2_524  [key=0, style=solid];
m2_525 -> m2_526  [key=0, style=solid];
m2_525 -> m2_511  [key=0, style=solid];
m2_525 -> m2_24  [key=2, style=dotted];
m2_522 -> m2_523  [key=0, style=solid];
m2_522 -> m2_511  [key=0, style=solid];
m2_522 -> m2_22  [key=2, style=dotted];
m2_539 -> m2_519  [key=0, style=bold, color=blue];
m2_539 -> m2_552  [key=0, style=solid];
m2_539 -> m2_556  [key=2, style=dotted];
m2_1128 -> m2_1129  [key=0, style=solid];
m2_1134 -> m2_16  [key=2, style=dotted];
m2_1134 -> m2_1135  [key=0, style=solid];
m2_1135 -> m2_16  [key=2, style=dotted];
m2_1135 -> m2_1136  [key=0, style=solid];
m2_1132 -> m2_16  [key=2, style=dotted];
m2_1132 -> m2_1133  [key=0, style=solid];
m2_1133 -> m2_29  [key=2, style=dotted];
m2_1133 -> m2_1134  [key=0, style=solid];
m2_1133 -> m2_1135  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_1129 -> m2_1134  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1129 -> m2_1135  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1129 -> m2_1130  [key=0, style=solid];
m2_1129 -> m2_1108  [key=2, style=dotted];
m2_1131 -> m2_1132  [key=0, style=solid];
m2_1131 -> m2_1133  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1131 -> m2_13  [key=2, style=dotted];
m2_1131 -> m2_541  [key=2, style=dotted];
m2_1130 -> m2_1131  [key=0, style=solid];
m2_1130 -> m2_1109  [key=2, style=dotted];
m2_1136 -> m2_1128  [key=0, style=bold, color=blue];
m2_1572 -> m2_1573  [key=0, style=solid];
m2_1574 -> m2_16  [key=2, style=dotted];
m2_1574 -> m2_1575  [key=0, style=solid];
m2_1575 -> m2_16  [key=2, style=dotted];
m2_1575 -> m2_1576  [key=0, style=solid];
m2_1576 -> m2_16  [key=2, style=dotted];
m2_1576 -> m2_1577  [key=0, style=solid];
m2_1577 -> m2_16  [key=2, style=dotted];
m2_1577 -> m2_1578  [key=0, style=solid];
m2_1573 -> m2_29  [key=2, style=dotted];
m2_1573 -> m2_1574  [key=0, style=solid];
m2_1573 -> m2_1575  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_1573 -> m2_1576  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_1573 -> m2_1577  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_1578 -> m2_1572  [key=0, style=bold, color=blue];
m2_2856 -> m2_2857  [key=0, style=solid];
m2_2858 -> m2_65  [key=2, style=dotted];
m2_2858 -> m2_2859  [key=0, style=solid];
m2_2860 -> m2_16  [key=2, style=dotted];
m2_2860 -> m2_2861  [key=0, style=solid];
m2_2861 -> m2_16  [key=2, style=dotted];
m2_2861 -> m2_2862  [key=0, style=solid];
m2_2859 -> m2_29  [key=2, style=dotted];
m2_2859 -> m2_2860  [key=0, style=solid];
m2_2859 -> m2_2861  [key=1, style=dashed, color=darkseagreen4, label=d2];
m2_2857 -> m2_2858  [key=0, style=solid];
m2_2857 -> m2_2860  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2857 -> m2_2861  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2857 -> m2_112  [key=2, style=dotted];
m2_2862 -> m2_2856  [key=0, style=bold, color=blue];
m2_1513 -> m2_1514  [key=0, style=solid];
m2_1515 -> m2_65  [key=2, style=dotted];
m2_1515 -> m2_1516  [key=0, style=solid];
m2_1516 -> m2_16  [key=2, style=dotted];
m2_1516 -> m2_1517  [key=0, style=solid];
m2_1514 -> m2_1515  [key=0, style=solid];
m2_1514 -> m2_720  [key=2, style=dotted];
m2_1514 -> m2_1518  [key=2, style=dotted];
m2_1517 -> m2_1513  [key=0, style=bold, color=blue];
m2_2379 -> m2_2380  [key=0, style=solid];
m2_2381 -> m2_16  [key=2, style=dotted];
m2_2381 -> m2_2382  [key=0, style=solid];
m2_2381 -> m2_2363  [key=2, style=dotted];
m2_2381 -> m2_756  [key=2, style=dotted];
m2_2381 -> m2_912  [key=2, style=dotted];
m2_2380 -> m2_29  [key=2, style=dotted];
m2_2380 -> m2_2381  [key=0, style=solid];
m2_2382 -> m2_2379  [key=0, style=bold, color=blue];
m2_1284 -> m2_1285  [key=0, style=solid];
m2_1293 -> m2_65  [key=2, style=dotted];
m2_1293 -> m2_1294  [key=0, style=solid];
m2_1294 -> m2_16  [key=2, style=dotted];
m2_1294 -> m2_1295  [key=0, style=solid];
m2_1287 -> m2_16  [key=2, style=dotted];
m2_1287 -> m2_1288  [key=0, style=solid];
m2_1288 -> m2_16  [key=2, style=dotted];
m2_1288 -> m2_1289  [key=0, style=solid];
m2_1289 -> m2_16  [key=2, style=dotted];
m2_1289 -> m2_1290  [key=0, style=solid];
m2_1290 -> m2_16  [key=2, style=dotted];
m2_1290 -> m2_1291  [key=0, style=solid];
m2_1291 -> m2_16  [key=2, style=dotted];
m2_1291 -> m2_1292  [key=0, style=solid];
m2_1292 -> m2_16  [key=2, style=dotted];
m2_1292 -> m2_1293  [key=0, style=solid];
m2_1286 -> m2_29  [key=2, style=dotted];
m2_1286 -> m2_1293  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1286 -> m2_1287  [key=0, style=solid];
m2_1286 -> m2_1288  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1286 -> m2_1289  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1286 -> m2_1290  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1286 -> m2_1291  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1286 -> m2_1292  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1285 -> m2_1294  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1285 -> m2_1286  [key=0, style=solid];
m2_1295 -> m2_1284  [key=0, style=bold, color=blue];
m2_1552 -> m2_1553  [key=0, style=solid];
m2_1553 -> m2_1557  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1553 -> m2_1554  [key=0, style=solid];
m2_1554 -> m2_1556  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1554 -> m2_25  [key=2, style=dotted];
m2_1554 -> m2_1555  [key=0, style=solid];
m2_1555 -> m2_1552  [key=0, style=bold, color=blue];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_263  [key=2, style=dotted];
m2_247 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_247 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_247 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_2548 -> m2_2549  [key=0, style=solid];
m2_2551 -> m2_16  [key=2, style=dotted];
m2_2551 -> m2_2552  [key=0, style=solid];
m2_2552 -> m2_16  [key=2, style=dotted];
m2_2552 -> m2_2553  [key=0, style=solid];
m2_2553 -> m2_16  [key=2, style=dotted];
m2_2553 -> m2_2554  [key=0, style=solid];
m2_2550 -> m2_29  [key=2, style=dotted];
m2_2550 -> m2_2551  [key=0, style=solid];
m2_2550 -> m2_2552  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_2550 -> m2_2553  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_2549 -> m2_2550  [key=0, style=solid];
m2_2554 -> m2_2548  [key=0, style=bold, color=blue];
m2_2242 -> m2_2243  [key=0, style=solid];
m2_2251 -> m2_65  [key=2, style=dotted];
m2_2251 -> m2_2252  [key=0, style=solid];
m2_2251 -> m2_2253  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2252 -> m2_16  [key=2, style=dotted];
m2_2252 -> m2_2253  [key=0, style=solid];
m2_2254 -> m2_16  [key=2, style=dotted];
m2_2254 -> m2_2255  [key=0, style=solid];
m2_2255 -> m2_16  [key=2, style=dotted];
m2_2255 -> m2_2256  [key=0, style=solid];
m2_2256 -> m2_16  [key=2, style=dotted];
m2_2256 -> m2_2257  [key=0, style=solid];
m2_2253 -> m2_29  [key=2, style=dotted];
m2_2253 -> m2_2254  [key=0, style=solid];
m2_2253 -> m2_2255  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_2253 -> m2_2256  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_2250 -> m2_2251  [key=0, style=solid];
m2_2250 -> m2_633  [key=2, style=dotted];
m2_2247 -> m2_2251  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2247 -> m2_2250  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2247 -> m2_2248  [key=0, style=solid];
m2_2247 -> m2_12  [key=2, style=dotted];
m2_2247 -> m2_2249  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2243 -> m2_2250  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2243 -> m2_12  [key=2, style=dotted];
m2_2243 -> m2_2244  [key=0, style=solid];
m2_2243 -> m2_2245  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2243 -> m2_2246  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2249 -> m2_2250  [key=0, style=solid];
m2_2249 -> m2_633  [key=2, style=dotted];
m2_2246 -> m2_2247  [key=0, style=solid];
m2_2246 -> m2_633  [key=2, style=dotted];
m2_2248 -> m2_633  [key=2, style=dotted];
m2_2248 -> m2_2249  [key=0, style=solid];
m2_2244 -> m2_633  [key=2, style=dotted];
m2_2244 -> m2_2245  [key=0, style=solid];
m2_2245 -> m2_633  [key=2, style=dotted];
m2_2245 -> m2_2246  [key=0, style=solid];
m2_2257 -> m2_2242  [key=0, style=bold, color=blue];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_19  [key=2, style=dotted];
m2_425 -> m2_425  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m2_425 -> m2_429  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_425 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_425 -> m2_427  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_425 -> m2_342  [key=2, style=dotted];
m2_95 -> m2_415  [key=0, style=solid];
m2_95 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.ISerializable"];
m2_95 -> m2_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_420  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.ISerializable"];
m2_95 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonISerializableContract"];
m2_95 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.ISerializable"];
m2_95 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonISerializableContract"];
m2_95 -> m2_427  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_97  [key=0, style=solid];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_419  [key=0, style=solid];
m2_415 -> m2_438  [key=1, style=dashed, color=green, label=serializerProxy];
m2_415 -> m2_446  [key=1, style=dashed, color=green, label=serializerProxy];
m2_415 -> m2_473  [key=2, style=dotted];
m2_415 -> m2_474  [key=2, style=dotted];
m2_415 -> m2_191  [key=2, style=dotted];
m2_415 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_418  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_420  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_422  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_424  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_427  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_428  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_429  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_430  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_432  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_433  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_434  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_435  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_437  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_440  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_441  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_443  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_448  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_450  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_451  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_452  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_453  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_454  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_455  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_458  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_459  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_461  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_464  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_466  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_468  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_469  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_470  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_415 -> m2_471  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_36  [key=2, style=dotted];
m2_417 -> m2_169  [key=2, style=dotted];
m2_417 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label=message];
m2_418 -> m2_435  [key=0, style=solid];
m2_418 -> m2_170  [key=2, style=dotted];
m2_418 -> m2_16  [key=2, style=dotted];
m2_418 -> m2_419  [key=0, style=solid];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_211  [key=2, style=dotted];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_258  [key=2, style=dotted];
m2_420 -> m2_16  [key=2, style=dotted];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_259  [key=2, style=dotted];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_436  [key=2, style=dotted];
m2_422 -> m2_437  [key=2, style=dotted];
m2_422 -> m2_424  [key=1, style=dashed, color=red, label=serializationInfo];
m2_422 -> m2_16  [key=2, style=dotted];
m2_423 -> m2_424  [key=0, style=solid, color=red];
m2_423 -> m2_438  [key=2, style=dotted];
m2_423 -> m2_341  [key=2, style=dotted];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_429  [key=0, style=solid];
m2_426 -> m2_20  [key=2, style=dotted];
m2_426 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_264  [key=2, style=dotted];
m2_427 -> m2_427  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m2_427 -> m2_16  [key=2, style=dotted];
m2_428 -> m2_424  [key=0, style=solid, color=red];
m2_428 -> m2_21  [key=2, style=dotted];
m2_428 -> m2_428  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m2_428 -> m2_429  [key=0, style=solid];
m2_428 -> m2_51  [key=2, style=dotted];
m2_428 -> m2_343  [key=2, style=dotted];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_424  [key=0, style=solid, color=red];
m2_429 -> m2_138  [key=2, style=dotted];
m2_429 -> m2_429  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m2_429 -> m2_16  [key=2, style=dotted];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_264  [key=2, style=dotted];
m2_430 -> m2_430  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m2_430 -> m2_344  [key=2, style=dotted];
m2_431 -> m2_424  [key=0, style=solid, color=red];
m2_431 -> m2_22  [key=2, style=dotted];
m2_431 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m2_431 -> m2_16  [key=2, style=dotted];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_345  [key=2, style=dotted];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_55  [key=2, style=dotted];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_212  [key=2, style=dotted];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_340  [key=2, style=dotted];
m2_416 -> m2_418  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m2_424 -> m2_425  [key=0, style=solid, color=red];
m2_424 -> m2_432  [key=0, style=solid, color=red];
m2_424 -> m2_16  [key=2, style=dotted];
m2_424 -> m2_341  [key=2, style=dotted];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_265  [key=2, style=dotted];
m2_433 -> m2_16  [key=2, style=dotted];
m2_435 -> m2_95  [key=0, style=bold, color=blue];
m2_435 -> m2_16  [key=2, style=dotted];
m2_435 -> m2_436  [key=0, style=solid];
m2_958 -> m2_959  [key=0, style=solid];
m2_959 -> m2_65  [key=2, style=dotted];
m2_959 -> m2_960  [key=0, style=solid];
m2_960 -> m2_16  [key=2, style=dotted];
m2_960 -> m2_961  [key=0, style=solid];
m2_961 -> m2_958  [key=0, style=bold, color=blue];
m2_3703 -> m2_3704  [key=0, style=solid];
m2_3706 -> m2_142  [key=2, style=dotted];
m2_3706 -> m2_3707  [key=0, style=solid];
m2_3705 -> m2_141  [key=2, style=dotted];
m2_3705 -> m2_3706  [key=0, style=solid];
m2_3704 -> m2_3705  [key=0, style=solid];
m2_3704 -> m2_3708  [key=2, style=dotted];
m2_3704 -> m2_3709  [key=2, style=dotted];
m2_3707 -> m2_3703  [key=0, style=bold, color=blue];
m2_3079 -> m2_3080  [key=0, style=solid];
m2_3085 -> m2_65  [key=2, style=dotted];
m2_3085 -> m2_3086  [key=0, style=solid];
m2_3080 -> m2_3085  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_3080 -> m2_3081  [key=0, style=solid];
m2_3080 -> m2_755  [key=2, style=dotted];
m2_3080 -> m2_3082  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_3080 -> m2_3083  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_3080 -> m2_3084  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_3080 -> m2_3086  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_3084 -> m2_3085  [key=0, style=solid];
m2_3086 -> m2_13  [key=2, style=dotted];
m2_3086 -> m2_3087  [key=0, style=solid];
m2_3086 -> m2_3092  [key=2, style=dotted];
m2_3086 -> m2_3093  [key=2, style=dotted];
m2_3086 -> m2_541  [key=2, style=dotted];
m2_3089 -> m2_13  [key=2, style=dotted];
m2_3089 -> m2_3090  [key=0, style=solid];
m2_3089 -> m2_3092  [key=2, style=dotted];
m2_3089 -> m2_3093  [key=2, style=dotted];
m2_3089 -> m2_3094  [key=2, style=dotted];
m2_3089 -> m2_541  [key=2, style=dotted];
m2_3082 -> m2_756  [key=2, style=dotted];
m2_3082 -> m2_3083  [key=0, style=solid];
m2_3081 -> m2_3082  [key=0, style=solid];
m2_3083 -> m2_3084  [key=0, style=solid];
m2_3087 -> m2_3088  [key=0, style=solid];
m2_3087 -> m2_142  [key=2, style=dotted];
m2_3088 -> m2_3089  [key=0, style=solid];
m2_3090 -> m2_142  [key=2, style=dotted];
m2_3090 -> m2_3091  [key=0, style=solid];
m2_3091 -> m2_3079  [key=0, style=bold, color=blue];
m2_1275 -> m2_1276  [key=0, style=solid];
m2_1280 -> m2_65  [key=2, style=dotted];
m2_1280 -> m2_1281  [key=0, style=solid];
m2_1281 -> m2_16  [key=2, style=dotted];
m2_1281 -> m2_1282  [key=0, style=solid];
m2_1276 -> m2_1280  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1276 -> m2_1277  [key=0, style=solid];
m2_1276 -> m2_1283  [key=2, style=dotted];
m2_1276 -> m2_1278  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1276 -> m2_1279  [key=1, style=dashed, color=darkseagreen4, label=aa];
m2_1279 -> m2_1280  [key=0, style=solid];
m2_1277 -> m2_1278  [key=0, style=solid];
m2_1278 -> m2_1279  [key=0, style=solid];
m2_1282 -> m2_1275  [key=0, style=bold, color=blue];
m2_3710 -> m2_3711  [key=0, style=solid];
m2_3711 -> m2_25  [key=2, style=dotted];
m2_3711 -> m2_3713  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3711 -> m2_3712  [key=0, style=solid];
m2_3712 -> m2_3710  [key=0, style=bold, color=blue];
m2_2282 -> m2_2283  [key=0, style=solid];
m2_2289 -> m2_16  [key=2, style=dotted];
m2_2289 -> m2_2290  [key=0, style=solid];
m2_2288 -> m2_29  [key=2, style=dotted];
m2_2288 -> m2_2289  [key=0, style=solid];
m2_2286 -> m2_2288  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2286 -> m2_2287  [key=0, style=solid];
m2_2286 -> m2_141  [key=2, style=dotted];
m2_2287 -> m2_2288  [key=0, style=solid];
m2_2287 -> m2_142  [key=2, style=dotted];
m2_2283 -> m2_12  [key=2, style=dotted];
m2_2283 -> m2_2286  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_2283 -> m2_2284  [key=0, style=solid];
m2_2283 -> m2_2285  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_2285 -> m2_2286  [key=0, style=solid];
m2_2285 -> m2_633  [key=2, style=dotted];
m2_2285 -> m2_2281  [key=2, style=dotted];
m2_2284 -> m2_633  [key=2, style=dotted];
m2_2284 -> m2_2285  [key=0, style=solid];
m2_2284 -> m2_2281  [key=2, style=dotted];
m2_2290 -> m2_2282  [key=0, style=bold, color=blue];
m2_570 -> m2_571  [key=0, style=solid];
m2_570 -> m2_572  [key=0, style=solid];
m2_1821 -> m2_1822  [key=0, style=solid];
m2_1824 -> m2_16  [key=2, style=dotted];
m2_1824 -> m2_1825  [key=0, style=solid];
m2_1825 -> m2_16  [key=2, style=dotted];
m2_1825 -> m2_1826  [key=0, style=solid];
m2_1826 -> m2_16  [key=2, style=dotted];
m2_1826 -> m2_1827  [key=0, style=solid];
m2_1827 -> m2_16  [key=2, style=dotted];
m2_1827 -> m2_1828  [key=0, style=solid];
m2_1823 -> m2_29  [key=2, style=dotted];
m2_1823 -> m2_1824  [key=0, style=solid];
m2_1823 -> m2_1825  [key=1, style=dashed, color=darkseagreen4, label=dic];
m2_1823 -> m2_1826  [key=1, style=dashed, color=darkseagreen4, label=dic];
m2_1823 -> m2_1827  [key=1, style=dashed, color=darkseagreen4, label=dic];
m2_1822 -> m2_1823  [key=0, style=solid];
m2_1828 -> m2_1821  [key=0, style=bold, color=blue];
m2_2787 -> m2_2788  [key=0, style=solid];
m2_2790 -> m2_65  [key=2, style=dotted];
m2_2790 -> m2_2791  [key=0, style=solid];
m2_2792 -> m2_16  [key=2, style=dotted];
m2_2792 -> m2_2793  [key=0, style=solid];
m2_2791 -> m2_29  [key=2, style=dotted];
m2_2791 -> m2_2792  [key=0, style=solid];
m2_2789 -> m2_2790  [key=0, style=solid];
m2_2789 -> m2_2792  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_2789 -> m2_1511  [key=2, style=dotted];
m2_2788 -> m2_2789  [key=0, style=solid];
m2_2793 -> m2_2787  [key=0, style=bold, color=blue];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_196  [key=0, style=solid];
m2_192 -> m2_36  [key=2, style=dotted];
m2_292 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_342  [key=2, style=dotted];
m2_2700 -> m2_2701  [key=0, style=solid];
m2_2701 -> m2_2702  [key=0, style=solid];
m2_2702 -> m2_2700  [key=0, style=bold, color=blue];
m2_1939 -> m2_1940  [key=0, style=solid];
m2_1940 -> m2_1941  [key=0, style=solid];
m2_1940 -> m2_1942  [key=2, style=dotted];
m2_1941 -> m2_1939  [key=0, style=bold, color=blue];
m2_75 -> m2_76  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_75  [key=0, style=bold, color=blue];
m2_77 -> m2_84  [key=0, style=solid];
m2_77 -> m2_92  [key=2, style=dotted];
m2_77 -> m2_93  [key=2, style=dotted];
m2_2870 -> m2_2871  [key=0, style=solid];
m2_2872 -> m2_65  [key=2, style=dotted];
m2_2872 -> m2_2873  [key=0, style=solid];
m2_2874 -> m2_16  [key=2, style=dotted];
m2_2874 -> m2_2875  [key=0, style=solid];
m2_2875 -> m2_16  [key=2, style=dotted];
m2_2875 -> m2_2876  [key=0, style=solid];
m2_2873 -> m2_29  [key=2, style=dotted];
m2_2873 -> m2_2874  [key=0, style=solid];
m2_2873 -> m2_2875  [key=1, style=dashed, color=darkseagreen4, label=d2];
m2_2871 -> m2_2872  [key=0, style=solid];
m2_2871 -> m2_2874  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2871 -> m2_2875  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2871 -> m2_112  [key=2, style=dotted];
m2_2876 -> m2_2870  [key=0, style=bold, color=blue];
m2_3813 -> m2_3814  [key=0, style=solid];
m2_3817 -> m2_29  [key=2, style=dotted];
m2_3817 -> m2_3818  [key=0, style=solid];
m2_3815 -> m2_3817  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3815 -> m2_3816  [key=0, style=solid];
m2_3815 -> m2_141  [key=2, style=dotted];
m2_3816 -> m2_3817  [key=0, style=solid];
m2_3816 -> m2_142  [key=2, style=dotted];
m2_3814 -> m2_3815  [key=0, style=solid];
m2_3814 -> m2_3819  [key=2, style=dotted];
m2_3818 -> m2_3813  [key=0, style=bold, color=blue];
m2_3454 -> m2_3455  [key=0, style=solid];
m2_3456 -> m2_65  [key=2, style=dotted];
m2_3456 -> m2_3457  [key=0, style=solid];
m2_3456 -> m2_3458  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3457 -> m2_16  [key=2, style=dotted];
m2_3457 -> m2_3458  [key=0, style=solid];
m2_3459 -> m2_16  [key=2, style=dotted];
m2_3459 -> m2_3460  [key=0, style=solid];
m2_3460 -> m2_16  [key=2, style=dotted];
m2_3460 -> m2_3461  [key=0, style=solid];
m2_3458 -> m2_29  [key=2, style=dotted];
m2_3458 -> m2_3459  [key=0, style=solid];
m2_3458 -> m2_3460  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m2_3455 -> m2_3456  [key=0, style=solid];
m2_3455 -> m2_3462  [key=2, style=dotted];
m2_3461 -> m2_3454  [key=0, style=bold, color=blue];
m2_1794 -> m2_1795  [key=0, style=solid];
m2_1795 -> m2_633  [key=2, style=dotted];
m2_1795 -> m2_1796  [key=0, style=solid];
m2_1796 -> m2_1794  [key=0, style=bold, color=blue];
m2_2517 -> m2_2518  [key=0, style=solid];
m2_2519 -> m2_16  [key=2, style=dotted];
m2_2519 -> m2_2520  [key=0, style=solid];
m2_2518 -> m2_29  [key=2, style=dotted];
m2_2518 -> m2_2519  [key=0, style=solid];
m2_2520 -> m2_2517  [key=0, style=bold, color=blue];
m2_3413 -> m2_3414  [key=0, style=solid];
m2_3414 -> m2_3415  [key=0, style=solid];
m2_3415 -> m2_3413  [key=0, style=bold, color=blue];
m2_1865 -> m2_1867  [key=0, style=solid];
m2_1867 -> m2_1868  [key=0, style=solid];
m2_1868 -> m2_1865  [key=0, style=bold, color=blue];
m2_181 -> m2_184  [key=0, style=solid];
m2_181 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_181 -> m2_191  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_125  [key=2, style=dotted];
m2_184 -> m2_189  [key=2, style=dotted];
m2_184 -> m2_192  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_36  [key=2, style=dotted];
m2_187 -> m2_169  [key=2, style=dotted];
m2_187 -> m2_170  [key=2, style=dotted];
m2_187 -> m2_16  [key=2, style=dotted];
m2_185 -> m2_188  [key=0, style=solid];
m2_185 -> m2_16  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_193  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_16  [key=2, style=dotted];
m2_186 -> m2_194  [key=2, style=dotted];
m2_188 -> m2_181  [key=0, style=bold, color=blue];
m2_188 -> m2_178  [key=0, style=bold, color=blue];
m2_155 -> m2_156  [key=0, style=solid];
m2_158 -> m2_16  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_160  [key=0, style=solid];
m2_159 -> m2_16  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_171  [key=2, style=dotted];
m2_159 -> m2_172  [key=2, style=dotted];
m2_160 -> m2_16  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_166  [key=0, style=solid];
m2_156 -> m2_29  [key=2, style=dotted];
m2_156 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label=otc];
m2_156 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=otc];
m2_156 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label=otc];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label=otc];
m2_156 -> m2_166  [key=0, style=solid];
m2_156 -> m2_170  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_163  [key=2, style=dotted];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_163  [key=2, style=dotted];
m2_162 -> m2_155  [key=0, style=bold, color=blue];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_164  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [key=0, style=solid];
m2_18 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_18 -> m2_25  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_2591 -> m2_2592  [key=0, style=solid];
m2_2592 -> m2_65  [key=2, style=dotted];
m2_2592 -> m2_2593  [key=0, style=solid];
m2_2592 -> m2_2595  [key=2, style=dotted];
m2_2593 -> m2_29  [key=2, style=dotted];
m2_2593 -> m2_2594  [key=0, style=solid];
m2_2594 -> m2_2591  [key=0, style=bold, color=blue];
m2_2352 -> m2_2353  [key=0, style=solid];
m2_2353 -> m2_65  [key=2, style=dotted];
m2_2353 -> m2_2354  [key=0, style=solid];
m2_2353 -> m2_2362  [key=2, style=dotted];
m2_2353 -> m2_2363  [key=2, style=dotted];
m2_2353 -> m2_756  [key=2, style=dotted];
m2_2353 -> m2_912  [key=2, style=dotted];
m2_2353 -> m2_2355  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m2_2354 -> m2_16  [key=2, style=dotted];
m2_2354 -> m2_2355  [key=0, style=solid];
m2_2359 -> m2_16  [key=2, style=dotted];
m2_2359 -> m2_2360  [key=0, style=solid];
m2_2359 -> m2_912  [key=2, style=dotted];
m2_2360 -> m2_16  [key=2, style=dotted];
m2_2360 -> m2_2361  [key=0, style=solid];
m2_2360 -> m2_756  [key=2, style=dotted];
m2_2355 -> m2_2356  [key=0, style=solid];
m2_2355 -> m2_189  [key=2, style=dotted];
m2_2355 -> m2_190  [key=2, style=dotted];
m2_2355 -> m2_2358  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2358 -> m2_2359  [key=0, style=solid];
m2_2358 -> m2_2360  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m2_2358 -> m2_2364  [key=2, style=dotted];
m2_2357 -> m2_191  [key=2, style=dotted];
m2_2357 -> m2_2358  [key=0, style=solid];
m2_2356 -> m2_2357  [key=0, style=solid];
m2_2361 -> m2_2352  [key=0, style=bold, color=blue];
m2_2419 -> m2_2420  [key=0, style=solid];
m2_2425 -> m2_16  [key=2, style=dotted];
m2_2425 -> m2_2426  [key=0, style=solid];
m2_2424 -> m2_2425  [key=0, style=solid];
m2_2424 -> m2_2364  [key=2, style=dotted];
m2_2423 -> m2_191  [key=2, style=dotted];
m2_2423 -> m2_2424  [key=0, style=solid];
m2_2421 -> m2_2424  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2421 -> m2_189  [key=2, style=dotted];
m2_2421 -> m2_190  [key=2, style=dotted];
m2_2421 -> m2_2422  [key=0, style=solid];
m2_2422 -> m2_2423  [key=0, style=solid];
m2_2420 -> m2_2421  [key=0, style=solid];
m2_2426 -> m2_2419  [key=0, style=bold, color=blue];
m2_662 -> m2_663  [key=0, style=solid];
m2_668 -> m2_672  [key=2, style=dotted];
m2_668 -> m2_669  [key=0, style=solid];
m2_663 -> m2_668  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_663 -> m2_664  [key=0, style=solid];
m2_663 -> m2_671  [key=2, style=dotted];
m2_663 -> m2_665  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_663 -> m2_666  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_663 -> m2_667  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_667 -> m2_668  [key=0, style=solid];
m2_669 -> m2_142  [key=2, style=dotted];
m2_669 -> m2_670  [key=0, style=solid];
m2_664 -> m2_665  [key=0, style=solid];
m2_665 -> m2_666  [key=0, style=solid];
m2_666 -> m2_667  [key=0, style=solid];
m2_670 -> m2_662  [key=0, style=bold, color=blue];
m2_3488 -> m2_3489  [key=0, style=solid];
m2_3491 -> m2_16  [key=2, style=dotted];
m2_3491 -> m2_3492  [key=0, style=solid];
m2_3491 -> m2_2159  [key=2, style=dotted];
m2_3490 -> m2_29  [key=2, style=dotted];
m2_3490 -> m2_3491  [key=0, style=solid];
m2_3492 -> m2_3493  [key=0, style=solid];
m2_3492 -> m2_25  [key=2, style=dotted];
m2_3492 -> m2_3494  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3489 -> m2_3490  [key=0, style=solid];
m2_3489 -> m2_3495  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3489 -> m2_3492  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3493 -> m2_3488  [key=0, style=bold, color=blue];
m2_578 -> m2_579  [key=0, style=solid];
m2_578 -> m2_574  [key=2, style=dotted];
m2_578 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label=isSpecified];
m2_578 -> m2_581  [key=1, style=dashed, color=darkseagreen4, label=isSpecified];
m2_414 -> m2_415  [key=0, style=solid];
m2_414 -> m2_358  [key=0, style=bold, color=blue];
m2_438 -> m2_439  [key=0, style=solid, color=green];
m2_437 -> m2_438  [key=0, style=solid, color=green];
m2_437 -> m2_16  [key=2, style=dotted];
m2_439 -> m2_16  [key=2, style=dotted];
m2_439 -> m2_440  [key=0, style=solid];
m2_439 -> m2_211  [key=2, style=dotted];
m2_446 -> m2_447  [key=0, style=solid, color=green];
m2_446 -> m2_456  [key=0, style=solid];
m2_445 -> m2_446  [key=0, style=solid, color=green];
m2_445 -> m2_16  [key=2, style=dotted];
m2_445 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_445 -> m2_450  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_445 -> m2_451  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_445 -> m2_453  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_447 -> m2_16  [key=2, style=dotted];
m2_447 -> m2_448  [key=0, style=solid];
m2_441 -> m2_16  [key=2, style=dotted];
m2_441 -> m2_442  [key=0, style=solid, color=red];
m2_441 -> m2_259  [key=2, style=dotted, color=red];
m2_443 -> m2_16  [key=2, style=dotted];
m2_443 -> m2_444  [key=0, style=solid];
m2_443 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_443 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_449 -> m2_16  [key=2, style=dotted];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_444  [key=0, style=solid];
m2_449 -> m2_260  [key=2, style=dotted];
m2_449 -> m2_451  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m2_451 -> m2_16  [key=2, style=dotted];
m2_451 -> m2_452  [key=0, style=solid, color=red];
m2_451 -> m2_456  [key=0, style=solid];
m2_451 -> m2_22  [key=2, style=dotted];
m2_453 -> m2_16  [key=2, style=dotted];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_455  [key=0, style=solid];
m2_453 -> m2_23  [key=2, style=dotted];
m2_455 -> m2_16  [key=2, style=dotted];
m2_455 -> m2_456  [key=0, style=solid];
m2_455 -> m2_473  [key=0, style=solid];
m2_457 -> m2_16  [key=2, style=dotted];
m2_457 -> m2_458  [key=0, style=solid];
m2_457 -> m2_470  [key=0, style=solid];
m2_457 -> m2_474  [key=2, style=dotted];
m2_457 -> m2_459  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m2_457 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m2_457 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m2_459 -> m2_16  [key=2, style=dotted];
m2_459 -> m2_460  [key=0, style=solid];
m2_459 -> m2_457  [key=0, style=solid];
m2_459 -> m2_475  [key=2, style=dotted];
m2_459 -> m2_461  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m2_459 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m2_459 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m2_462 -> m2_16  [key=2, style=dotted];
m2_462 -> m2_463  [key=0, style=solid];
m2_462 -> m2_466  [key=0, style=solid];
m2_462 -> m2_457  [key=0, style=solid];
m2_462 -> m2_138  [key=2, style=dotted];
m2_464 -> m2_16  [key=2, style=dotted];
m2_464 -> m2_465  [key=0, style=solid];
m2_464 -> m2_264  [key=2, style=dotted];
m2_467 -> m2_16  [key=2, style=dotted];
m2_467 -> m2_468  [key=0, style=solid, color=red];
m2_467 -> m2_469  [key=0, style=solid];
m2_467 -> m2_23  [key=2, style=dotted];
m2_469 -> m2_16  [key=2, style=dotted];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_473  [key=0, style=solid];
m2_471 -> m2_16  [key=2, style=dotted];
m2_471 -> m2_472  [key=0, style=solid];
m2_471 -> m2_265  [key=2, style=dotted];
m2_465 -> m2_347  [key=2, style=dotted];
m2_465 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_457  [key=0, style=solid];
m2_465 -> m2_22  [key=2, style=dotted];
m2_436 -> m2_437  [key=0, style=solid];
m2_440 -> m2_441  [key=0, style=solid, color=red];
m2_440 -> m2_258  [key=2, style=dotted];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_454  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m2_442 -> m2_468  [key=1, style=dashed, color=red, label=initialDepth];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_457  [key=0, style=solid];
m2_448 -> m2_449  [key=0, style=solid];
m2_450 -> m2_451  [key=0, style=solid];
m2_450 -> m2_261  [key=2, style=dotted];
m2_452 -> m2_453  [key=0, style=solid, color=red];
m2_454 -> m2_455  [key=0, style=solid];
m2_454 -> m2_456  [key=0, style=solid];
m2_454 -> m2_24  [key=2, style=dotted];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_444  [key=0, style=solid];
m2_456 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_458 -> m2_459  [key=0, style=solid];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_457  [key=0, style=solid];
m2_461 -> m2_476  [key=2, style=dotted];
m2_463 -> m2_464  [key=0, style=solid];
m2_463 -> m2_477  [key=2, style=dotted];
m2_466 -> m2_467  [key=0, style=solid];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_457  [key=0, style=solid, color=red];
m2_468 -> m2_24  [key=2, style=dotted, color=red];
m2_470 -> m2_471  [key=0, style=solid];
m2_470 -> m2_55  [key=2, style=dotted];
m2_460 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_346  [key=2, style=dotted];
m2_460 -> m2_19  [key=2, style=dotted];
m2_460 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_472 -> m2_414  [key=0, style=bold, color=blue];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_212  [key=2, style=dotted];
m2_2895 -> m2_2896  [key=0, style=solid];
m2_2898 -> m2_142  [key=2, style=dotted];
m2_2898 -> m2_2899  [key=0, style=solid];
m2_2897 -> m2_141  [key=2, style=dotted];
m2_2897 -> m2_2898  [key=0, style=solid];
m2_2896 -> m2_2897  [key=0, style=solid];
m2_2896 -> m2_2900  [key=2, style=dotted];
m2_2896 -> m2_2901  [key=2, style=dotted];
m2_2899 -> m2_2895  [key=0, style=bold, color=blue];
m2_2565 -> m2_2566  [key=0, style=solid];
m2_2568 -> m2_16  [key=2, style=dotted];
m2_2568 -> m2_2569  [key=0, style=solid];
m2_2567 -> m2_2568  [key=0, style=solid];
m2_2567 -> m2_141  [key=2, style=dotted];
m2_2566 -> m2_2567  [key=0, style=solid];
m2_2566 -> m2_2570  [key=2, style=dotted];
m2_2569 -> m2_2565  [key=0, style=bold, color=blue];
m2_1892 -> m2_1895  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_1892 -> m2_1893  [key=0, style=solid];
m2_1896 -> m2_633  [key=2, style=dotted];
m2_1896 -> m2_1896  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_1896 -> m2_1895  [key=0, style=solid];
m2_1895 -> m2_1896  [key=0, style=solid];
m2_1895 -> m2_1897  [key=0, style=solid];
m2_1893 -> m2_1895  [key=0, style=solid];
m2_1893 -> m2_1894  [key=0, style=solid];
m2_1894 -> m2_1897  [key=0, style=solid];
m2_1894 -> m2_1898  [key=2, style=dotted];
m2_1897 -> m2_1892  [key=0, style=bold, color=blue];
m2_135 -> m2_314  [key=0, style=solid];
m2_135 -> m2_29  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_314 -> m2_315  [key=0, style=solid];
m2_314 -> m2_16  [key=2, style=dotted];
m2_315 -> m2_135  [key=0, style=bold, color=blue];
m2_315 -> m2_316  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_141  [key=0, style=solid];
m2_3501 -> m2_3502  [key=0, style=solid];
m2_3503 -> m2_65  [key=2, style=dotted];
m2_3503 -> m2_3504  [key=0, style=solid];
m2_3504 -> m2_16  [key=2, style=dotted];
m2_3504 -> m2_3505  [key=0, style=solid];
m2_3508 -> m2_16  [key=2, style=dotted];
m2_3508 -> m2_3509  [key=0, style=solid];
m2_3502 -> m2_3503  [key=0, style=solid];
m2_3502 -> m2_3497  [key=2, style=dotted];
m2_3502 -> m2_3507  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_3505 -> m2_3506  [key=0, style=solid];
m2_3505 -> m2_1668  [key=2, style=dotted];
m2_3505 -> m2_3507  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_3507 -> m2_3508  [key=0, style=solid];
m2_3507 -> m2_13  [key=2, style=dotted];
m2_3507 -> m2_541  [key=2, style=dotted];
m2_3506 -> m2_3507  [key=0, style=solid];
m2_3509 -> m2_3501  [key=0, style=bold, color=blue];
m2_1245 -> m2_1246  [key=0, style=solid];
m2_1248 -> m2_16  [key=2, style=dotted];
m2_1248 -> m2_1249  [key=0, style=solid];
m2_1249 -> m2_16  [key=2, style=dotted];
m2_1249 -> m2_1250  [key=0, style=solid];
m2_1250 -> m2_16  [key=2, style=dotted];
m2_1250 -> m2_1251  [key=0, style=solid];
m2_1247 -> m2_29  [key=2, style=dotted];
m2_1247 -> m2_1248  [key=0, style=solid];
m2_1247 -> m2_1249  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1247 -> m2_1250  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1246 -> m2_1247  [key=0, style=solid];
m2_1251 -> m2_1245  [key=0, style=bold, color=blue];
m2_3203 -> m2_3204  [key=0, style=solid];
m2_3208 -> m2_16  [key=2, style=dotted];
m2_3208 -> m2_3209  [key=0, style=solid];
m2_3209 -> m2_16  [key=2, style=dotted];
m2_3209 -> m2_3210  [key=0, style=solid];
m2_3209 -> m2_194  [key=2, style=dotted];
m2_3210 -> m2_16  [key=2, style=dotted];
m2_3210 -> m2_3211  [key=0, style=solid];
m2_3210 -> m2_194  [key=2, style=dotted];
m2_3207 -> m2_29  [key=2, style=dotted];
m2_3207 -> m2_3208  [key=0, style=solid];
m2_3207 -> m2_3209  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3207 -> m2_3210  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3205 -> m2_3207  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3205 -> m2_3206  [key=0, style=solid];
m2_3205 -> m2_141  [key=2, style=dotted];
m2_3206 -> m2_3207  [key=0, style=solid];
m2_3206 -> m2_142  [key=2, style=dotted];
m2_3204 -> m2_12  [key=2, style=dotted];
m2_3204 -> m2_194  [key=2, style=dotted];
m2_3204 -> m2_3205  [key=0, style=solid];
m2_3211 -> m2_3203  [key=0, style=bold, color=blue];
m2_263 -> m2_531  [key=0, style=solid];
m2_263 -> m2_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_263 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_263 -> m2_535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_263 -> m2_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_263 -> m2_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_263 -> m2_546  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_263 -> m2_547  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_263 -> m2_551  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_263 -> m2_264  [key=0, style=solid, color=green];
m2_263 -> m2_272  [key=2, style=dotted, color=green];
m2_263 -> m2_273  [key=2, style=dotted, color=green];
m2_263 -> m2_274  [key=2, style=dotted, color=green];
m2_543 -> m2_544  [key=0, style=solid];
m2_543 -> m2_557  [key=2, style=dotted];
m2_543 -> m2_270  [key=2, style=dotted];
m2_543 -> m2_545  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_546 -> m2_552  [key=0, style=solid];
m2_546 -> m2_558  [key=2, style=dotted];
m2_546 -> m2_542  [key=0, style=bold, color=blue];
m2_547 -> m2_548  [key=0, style=solid];
m2_547 -> m2_550  [key=0, style=solid];
m2_547 -> m2_36  [key=2, style=dotted];
m2_547 -> m2_190  [key=2, style=dotted];
m2_547 -> m2_549  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_551 -> m2_552  [key=0, style=solid];
m2_551 -> m2_559  [key=2, style=dotted];
m2_551 -> m2_141  [key=2, style=dotted];
m2_540 -> m2_541  [key=0, style=solid];
m2_540 -> m2_545  [key=0, style=solid];
m2_541 -> m2_542  [key=0, style=solid];
m2_541 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m2_545 -> m2_546  [key=0, style=solid];
m2_545 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m2_545 -> m2_274  [key=2, style=dotted];
m2_545 -> m2_548  [key=2, style=dotted];
m2_542 -> m2_543  [key=0, style=solid];
m2_542 -> m2_554  [key=2, style=dotted];
m2_542 -> m2_544  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_544 -> m2_552  [key=0, style=solid];
m2_544 -> m2_556  [key=2, style=dotted];
m2_544 -> m2_545  [key=0, style=solid];
m2_544 -> m2_547  [key=2, style=dotted];
m2_548 -> m2_549  [key=0, style=solid];
m2_548 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m2_550 -> m2_551  [key=0, style=solid];
m2_550 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m2_550 -> m2_556  [key=2, style=dotted];
m2_549 -> m2_552  [key=0, style=solid];
m2_549 -> m2_550  [key=0, style=solid];
m2_552 -> m2_263  [key=0, style=bold, color=blue];
m2_552 -> m2_29  [key=2, style=dotted];
m2_552 -> m2_553  [key=0, style=solid];
m2_552 -> m2_554  [key=1, style=dashed, color=darkseagreen4, label=r2];
m2_3355 -> m2_3356  [key=0, style=solid];
m2_3356 -> m2_13  [key=2, style=dotted];
m2_3356 -> m2_342  [key=2, style=dotted];
m2_3356 -> m2_3357  [key=0, style=solid];
m2_3356 -> m2_3359  [key=2, style=dotted];
m2_3356 -> m2_15  [key=2, style=dotted];
m2_3357 -> m2_142  [key=2, style=dotted];
m2_3357 -> m2_3358  [key=0, style=solid];
m2_3358 -> m2_3355  [key=0, style=bold, color=blue];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_127 -> m2_125  [key=0, style=bold, color=blue];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_130  [key=0, style=solid];
m2_128 -> m2_134  [key=2, style=dotted];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [key=0, style=solid];
m2_130 -> m2_134  [key=2, style=dotted];
m2_130 -> m2_135  [key=2, style=dotted];
m2_130 -> m2_136  [key=2, style=dotted];
m2_130 -> m2_137  [key=2, style=dotted];
m2_130 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_130 -> m2_125  [key=2, style=dotted];
m2_129 -> m2_133  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_131 -> m2_133  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_140  [key=2, style=dotted];
m2_132 -> m2_139  [key=2, style=dotted];
m2_133 -> m2_127  [key=0, style=bold, color=blue];
m2_133 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_141  [key=2, style=dotted];
m2_1607 -> m2_1608  [key=0, style=solid];
m2_1608 -> m2_1612  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1608 -> m2_1609  [key=0, style=solid];
m2_1609 -> m2_1611  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1609 -> m2_25  [key=2, style=dotted];
m2_1609 -> m2_1610  [key=0, style=solid];
m2_1610 -> m2_1607  [key=0, style=bold, color=blue];
m2_1956 -> m2_1957  [key=0, style=solid];
m2_1956 -> m2_1958  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_1956 -> m2_1959  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m2_1956 -> m2_1960  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m2_1961 -> m2_1108  [key=2, style=dotted];
m2_1961 -> m2_1962  [key=0, style=solid];
m2_1960 -> m2_1961  [key=0, style=solid];
m2_1957 -> m2_1958  [key=0, style=solid];
m2_1958 -> m2_1959  [key=0, style=solid];
m2_1959 -> m2_1960  [key=0, style=solid];
m2_1962 -> m2_1956  [key=0, style=bold, color=blue];
m2_592 -> m2_593  [key=0, style=solid];
m2_596 -> m2_16  [key=2, style=dotted];
m2_596 -> m2_597  [key=0, style=solid];
m2_594 -> m2_29  [key=2, style=dotted];
m2_594 -> m2_596  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_594 -> m2_595  [key=0, style=solid];
m2_595 -> m2_596  [key=0, style=solid];
m2_595 -> m2_598  [key=2, style=dotted];
m2_593 -> m2_594  [key=0, style=solid];
m2_597 -> m2_592  [key=0, style=bold, color=blue];
m2_2269 -> m2_2270  [key=0, style=solid];
m2_2272 -> m2_16  [key=2, style=dotted];
m2_2272 -> m2_2273  [key=0, style=solid];
m2_2272 -> m2_193  [key=2, style=dotted];
m2_2273 -> m2_16  [key=2, style=dotted];
m2_2273 -> m2_2274  [key=0, style=solid];
m2_2271 -> m2_2272  [key=0, style=solid];
m2_2271 -> m2_2273  [key=1, style=dashed, color=darkseagreen4, label=dic];
m2_2271 -> m2_13  [key=2, style=dotted];
m2_2271 -> m2_114  [key=2, style=dotted];
m2_2270 -> m2_2271  [key=0, style=solid];
m2_2274 -> m2_2269  [key=0, style=bold, color=blue];
m2_2411 -> m2_2412  [key=0, style=solid];
m2_2413 -> m2_16  [key=2, style=dotted];
m2_2413 -> m2_2414  [key=0, style=solid];
m2_2412 -> m2_29  [key=2, style=dotted];
m2_2412 -> m2_2413  [key=0, style=solid];
m2_2414 -> m2_2411  [key=0, style=bold, color=blue];
m2_1899 -> m2_1900  [key=0, style=solid];
m2_1900 -> m2_140  [key=2, style=dotted];
m2_1900 -> m2_1901  [key=0, style=solid];
m2_1901 -> m2_1899  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_123 -> m2_316  [key=0, style=solid, color=red];
m2_316 -> m2_317  [key=0, style=solid, color=red];
m2_316 -> m2_16  [key=2, style=dotted];
m2_317 -> m2_123  [key=0, style=bold, color=blue];
m2_317 -> m2_318  [key=0, style=solid];
m2_2146 -> m2_2147  [key=0, style=solid];
m2_2154 -> m2_16  [key=2, style=dotted];
m2_2154 -> m2_2155  [key=0, style=solid];
m2_2154 -> m2_2160  [key=2, style=dotted];
m2_2155 -> m2_16  [key=2, style=dotted];
m2_2155 -> m2_2156  [key=0, style=solid];
m2_2155 -> m2_2160  [key=2, style=dotted];
m2_2153 -> m2_29  [key=2, style=dotted];
m2_2153 -> m2_2154  [key=0, style=solid];
m2_2153 -> m2_2155  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m2_2153 -> m2_2156  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m2_2147 -> m2_2154  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_2147 -> m2_2155  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_2147 -> m2_2148  [key=0, style=solid];
m2_2147 -> m2_2158  [key=2, style=dotted];
m2_2147 -> m2_2149  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_2147 -> m2_2150  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_2156 -> m2_2157  [key=0, style=solid];
m2_2156 -> m2_163  [key=2, style=dotted];
m2_2150 -> m2_2153  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2150 -> m2_2151  [key=0, style=solid];
m2_2150 -> m2_141  [key=2, style=dotted];
m2_2150 -> m2_2152  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2152 -> m2_2153  [key=0, style=solid];
m2_2152 -> m2_142  [key=2, style=dotted];
m2_2148 -> m2_2159  [key=2, style=dotted];
m2_2148 -> m2_2149  [key=0, style=solid];
m2_2149 -> m2_2159  [key=2, style=dotted];
m2_2149 -> m2_2150  [key=0, style=solid];
m2_2151 -> m2_2152  [key=0, style=solid];
m2_2157 -> m2_2146  [key=0, style=bold, color=blue];
m2_801 -> m2_802  [key=0, style=solid];
m2_804 -> m2_16  [key=2, style=dotted];
m2_804 -> m2_805  [key=0, style=solid];
m2_804 -> m2_800  [key=2, style=dotted];
m2_803 -> m2_804  [key=0, style=solid];
m2_803 -> m2_738  [key=2, style=dotted];
m2_803 -> m2_805  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_805 -> m2_800  [key=2, style=dotted];
m2_805 -> m2_806  [key=0, style=solid];
m2_805 -> m2_142  [key=2, style=dotted];
m2_802 -> m2_803  [key=0, style=solid];
m2_806 -> m2_801  [key=0, style=bold, color=blue];
m2_1905 -> m2_1906  [key=0, style=solid];
m2_1906 -> m2_1907  [key=0, style=solid];
m2_1906 -> m2_1908  [key=2, style=dotted];
m2_1907 -> m2_1905  [key=0, style=bold, color=blue];
m2_94 -> m2_439  [key=0, style=solid];
m2_94 -> m2_440  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.IDynamicMetaObjectProvider"];
m2_94 -> m2_441  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m2_94 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m2_94 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.IDynamicMetaObjectProvider"];
m2_94 -> m2_459  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.IDynamicMetaObjectProvider"];
m2_94 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m2_94 -> m2_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_468  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_473 -> m2_94  [key=0, style=bold, color=blue];
m2_1155 -> m2_1156  [key=0, style=solid];
m2_1160 -> m2_16  [key=2, style=dotted];
m2_1160 -> m2_1161  [key=0, style=solid];
m2_1162 -> m2_16  [key=2, style=dotted];
m2_1162 -> m2_1163  [key=0, style=solid];
m2_1163 -> m2_16  [key=2, style=dotted];
m2_1163 -> m2_1164  [key=0, style=solid];
m2_1159 -> m2_1160  [key=0, style=solid];
m2_1159 -> m2_1097  [key=2, style=dotted];
m2_1159 -> m2_1098  [key=2, style=dotted];
m2_1159 -> m2_1161  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1161 -> m2_1162  [key=0, style=solid];
m2_1161 -> m2_1163  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_1161 -> m2_1097  [key=2, style=dotted];
m2_1161 -> m2_52  [key=2, style=dotted];
m2_1156 -> m2_1159  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_1156 -> m2_1157  [key=0, style=solid];
m2_1156 -> m2_1165  [key=2, style=dotted];
m2_1156 -> m2_1158  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_1158 -> m2_1159  [key=0, style=solid];
m2_1158 -> m2_1089  [key=2, style=dotted];
m2_1157 -> m2_1089  [key=2, style=dotted];
m2_1157 -> m2_1158  [key=0, style=solid];
m2_1164 -> m2_1155  [key=0, style=bold, color=blue];
m2_3124 -> m2_3125  [key=0, style=solid];
m2_3134 -> m2_16  [key=2, style=dotted];
m2_3134 -> m2_3135  [key=0, style=solid];
m2_3134 -> m2_193  [key=2, style=dotted];
m2_3133 -> m2_3134  [key=0, style=solid];
m2_3135 -> m2_3136  [key=0, style=solid];
m2_3135 -> m2_571  [key=2, style=dotted];
m2_3135 -> m2_142  [key=2, style=dotted];
m2_3132 -> m2_3133  [key=0, style=solid];
m2_3132 -> m2_3135  [key=1, style=dashed, color=darkseagreen4, label=a];
m2_3132 -> m2_3142  [key=2, style=dotted];
m2_3125 -> m2_635  [key=2, style=dotted];
m2_3125 -> m2_3126  [key=0, style=solid];
m2_3125 -> m2_3130  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_3131 -> m2_870  [key=2, style=dotted];
m2_3131 -> m2_3132  [key=0, style=solid];
m2_3131 -> m2_3141  [key=2, style=dotted];
m2_3130 -> m2_718  [key=2, style=dotted];
m2_3130 -> m2_3131  [key=0, style=solid];
m2_3126 -> m2_3127  [key=0, style=solid];
m2_3126 -> m2_3137  [key=2, style=dotted];
m2_3126 -> m2_3128  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_3126 -> m2_3129  [key=1, style=dashed, color=darkseagreen4, label=writer];
m2_3129 -> m2_3130  [key=0, style=solid];
m2_3129 -> m2_3140  [key=2, style=dotted];
m2_3127 -> m2_3128  [key=0, style=solid];
m2_3127 -> m2_3138  [key=2, style=dotted];
m2_3128 -> m2_3129  [key=0, style=solid];
m2_3128 -> m2_3139  [key=2, style=dotted];
m2_3136 -> m2_3124  [key=0, style=bold, color=blue];
m2_1669 -> m2_1670  [key=0, style=solid];
m2_1670 -> m2_25  [key=2, style=dotted];
m2_1670 -> m2_1672  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1670 -> m2_1671  [key=0, style=solid];
m2_1671 -> m2_1669  [key=0, style=bold, color=blue];
m2_2088 -> m2_2135  [key=0, style=solid];
m2_2088 -> m2_2136  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2137  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2138  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2139  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2140  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2141  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2142  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2143  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2088 -> m2_2144  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2135 -> m2_2136  [key=0, style=solid];
m2_2136 -> m2_2137  [key=0, style=solid];
m2_2137 -> m2_2138  [key=0, style=solid];
m2_2138 -> m2_2139  [key=0, style=solid];
m2_2139 -> m2_2140  [key=0, style=solid];
m2_2140 -> m2_2141  [key=0, style=solid];
m2_2141 -> m2_2142  [key=0, style=solid];
m2_2142 -> m2_2143  [key=0, style=solid];
m2_2143 -> m2_2144  [key=0, style=solid];
m2_2144 -> m2_2145  [key=0, style=solid];
m2_2145 -> m2_2088  [key=0, style=bold, color=blue];
m2_650 -> m2_651  [key=0, style=solid];
m2_652 -> m2_631  [key=2, style=dotted];
m2_652 -> m2_653  [key=0, style=solid];
m2_652 -> m2_655  [key=2, style=dotted];
m2_651 -> m2_652  [key=0, style=solid];
m2_651 -> m2_654  [key=2, style=dotted];
m2_653 -> m2_650  [key=0, style=bold, color=blue];
m2_1179 -> m2_1180  [key=0, style=solid];
m2_1181 -> m2_65  [key=2, style=dotted];
m2_1181 -> m2_1182  [key=0, style=solid];
m2_1183 -> m2_65  [key=2, style=dotted];
m2_1183 -> m2_1184  [key=0, style=solid];
m2_1182 -> m2_16  [key=2, style=dotted];
m2_1182 -> m2_1183  [key=0, style=solid];
m2_1184 -> m2_16  [key=2, style=dotted];
m2_1184 -> m2_1185  [key=0, style=solid];
m2_1180 -> m2_1181  [key=0, style=solid];
m2_1185 -> m2_1179  [key=0, style=bold, color=blue];
m2_1519 -> m2_1520  [key=0, style=solid];
m2_1520 -> m2_112  [key=2, style=dotted];
m2_1520 -> m2_1521  [key=0, style=solid];
m2_1520 -> m2_1524  [key=2, style=dotted];
m2_1522 -> m2_142  [key=2, style=dotted];
m2_1522 -> m2_1523  [key=0, style=solid];
m2_1521 -> m2_141  [key=2, style=dotted];
m2_1521 -> m2_1522  [key=0, style=solid];
m2_1523 -> m2_1519  [key=0, style=bold, color=blue];
m2_3567 -> m2_3568  [key=0, style=solid];
m2_3570 -> m2_16  [key=2, style=dotted];
m2_3570 -> m2_3571  [key=0, style=solid];
m2_3569 -> m2_29  [key=2, style=dotted];
m2_3569 -> m2_3570  [key=0, style=solid];
m2_3568 -> m2_3569  [key=0, style=solid];
m2_3571 -> m2_3567  [key=0, style=bold, color=blue];
m2_2027 -> m2_2028  [key=0, style=solid];
m2_2042 -> m2_16  [key=2, style=dotted];
m2_2042 -> m2_2043  [key=0, style=solid];
m2_2040 -> m2_16  [key=2, style=dotted];
m2_2040 -> m2_2041  [key=0, style=solid];
m2_2041 -> m2_16  [key=2, style=dotted];
m2_2041 -> m2_2042  [key=0, style=solid];
m2_2043 -> m2_16  [key=2, style=dotted];
m2_2043 -> m2_2044  [key=0, style=solid];
m2_2044 -> m2_16  [key=2, style=dotted];
m2_2044 -> m2_2045  [key=0, style=solid];
m2_2045 -> m2_16  [key=2, style=dotted];
m2_2045 -> m2_2046  [key=0, style=solid];
m2_2039 -> m2_29  [key=2, style=dotted];
m2_2039 -> m2_2042  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2039 -> m2_2040  [key=0, style=solid];
m2_2039 -> m2_2041  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2039 -> m2_2043  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2039 -> m2_2044  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2039 -> m2_2045  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2033 -> m2_2042  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_2033 -> m2_912  [key=2, style=dotted];
m2_2033 -> m2_194  [key=2, style=dotted];
m2_2033 -> m2_2034  [key=0, style=solid];
m2_2033 -> m2_2036  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_2038 -> m2_2039  [key=0, style=solid];
m2_2038 -> m2_142  [key=2, style=dotted];
m2_2037 -> m2_2039  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2037 -> m2_2038  [key=0, style=solid];
m2_2037 -> m2_141  [key=2, style=dotted];
m2_2029 -> m2_904  [key=2, style=dotted];
m2_2029 -> m2_2030  [key=0, style=solid];
m2_2032 -> m2_2033  [key=0, style=solid];
m2_2034 -> m2_2035  [key=0, style=solid];
m2_2036 -> m2_2037  [key=0, style=solid];
m2_2036 -> m2_1956  [key=2, style=dotted];
m2_2035 -> m2_2038  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m2_2035 -> m2_2036  [key=0, style=solid];
m2_2028 -> m2_2029  [key=0, style=solid];
m2_2028 -> m2_2032  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2028 -> m2_2036  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2028 -> m2_1315  [key=2, style=dotted];
m2_2028 -> m2_2030  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2028 -> m2_2031  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2030 -> m2_2031  [key=0, style=solid];
m2_2031 -> m2_2032  [key=0, style=solid];
m2_2046 -> m2_2027  [key=0, style=bold, color=blue];
m2_2877 -> m2_2878  [key=0, style=solid];
m2_2882 -> m2_65  [key=2, style=dotted];
m2_2882 -> m2_2883  [key=0, style=solid];
m2_2882 -> m2_2884  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2883 -> m2_16  [key=2, style=dotted];
m2_2883 -> m2_2884  [key=0, style=solid];
m2_2885 -> m2_16  [key=2, style=dotted];
m2_2885 -> m2_2886  [key=0, style=solid];
m2_2884 -> m2_29  [key=2, style=dotted];
m2_2884 -> m2_2885  [key=0, style=solid];
m2_2878 -> m2_2882  [key=1, style=dashed, color=darkseagreen4, label=b];
m2_2878 -> m2_2879  [key=0, style=solid];
m2_2878 -> m2_2887  [key=2, style=dotted];
m2_2878 -> m2_2880  [key=1, style=dashed, color=darkseagreen4, label=b];
m2_2881 -> m2_2882  [key=0, style=solid];
m2_2879 -> m2_2880  [key=0, style=solid];
m2_2880 -> m2_2881  [key=0, style=solid];
m2_2886 -> m2_2877  [key=0, style=bold, color=blue];
m2_1236 -> m2_1237  [key=0, style=solid];
m2_1241 -> m2_16  [key=2, style=dotted];
m2_1241 -> m2_1242  [key=0, style=solid];
m2_1242 -> m2_16  [key=2, style=dotted];
m2_1242 -> m2_1243  [key=0, style=solid];
m2_1242 -> m2_904  [key=2, style=dotted];
m2_1240 -> m2_29  [key=2, style=dotted];
m2_1240 -> m2_1241  [key=0, style=solid];
m2_1240 -> m2_1242  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_1238 -> m2_1240  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1238 -> m2_1239  [key=0, style=solid];
m2_1238 -> m2_141  [key=2, style=dotted];
m2_1239 -> m2_1240  [key=0, style=solid];
m2_1239 -> m2_142  [key=2, style=dotted];
m2_1237 -> m2_904  [key=2, style=dotted];
m2_1237 -> m2_1238  [key=0, style=solid];
m2_1237 -> m2_1244  [key=2, style=dotted];
m2_1243 -> m2_1236  [key=0, style=bold, color=blue];
m2_2630 -> m2_2631  [key=0, style=solid];
m2_2632 -> m2_112  [key=2, style=dotted];
m2_2632 -> m2_2633  [key=0, style=solid];
m2_2631 -> m2_2632  [key=0, style=solid];
m2_2633 -> m2_2630  [key=0, style=bold, color=blue];
m2_229 -> m2_230  [key=0, style=solid];
m2_229 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_229 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_229 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_229 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_1840 -> m2_1841  [key=0, style=solid];
m2_1843 -> m2_142  [key=2, style=dotted];
m2_1843 -> m2_1844  [key=0, style=solid];
m2_1842 -> m2_141  [key=2, style=dotted];
m2_1842 -> m2_1843  [key=0, style=solid];
m2_1841 -> m2_1842  [key=0, style=solid];
m2_1841 -> m2_1845  [key=2, style=dotted];
m2_1844 -> m2_1840  [key=0, style=bold, color=blue];
m2_1411 -> m2_1412  [key=0, style=solid];
m2_1413 -> m2_25  [key=2, style=dotted];
m2_1413 -> m2_1414  [key=0, style=solid];
m2_1413 -> m2_1415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1412 -> m2_1413  [key=0, style=solid];
m2_1414 -> m2_1411  [key=0, style=bold, color=blue];
m2_1252 -> m2_1253  [key=0, style=solid];
m2_1257 -> m2_274  [key=2, style=dotted];
m2_1257 -> m2_1258  [key=0, style=solid];
m2_1257 -> m2_1260  [key=2, style=dotted];
m2_1254 -> m2_29  [key=2, style=dotted];
m2_1254 -> m2_1255  [key=0, style=solid];
m2_1256 -> m2_1257  [key=0, style=solid];
m2_1253 -> m2_1254  [key=0, style=solid];
m2_1255 -> m2_1256  [key=0, style=solid];
m2_1255 -> m2_1258  [key=0, style=solid];
m2_1255 -> m2_1259  [key=2, style=dotted];
m2_1258 -> m2_1252  [key=0, style=bold, color=blue];
m2_3432 -> m2_3433  [key=0, style=solid];
m2_3434 -> m2_13  [key=2, style=dotted];
m2_3434 -> m2_344  [key=2, style=dotted];
m2_3434 -> m2_3435  [key=0, style=solid];
m2_3434 -> m2_15  [key=2, style=dotted];
m2_3433 -> m2_912  [key=2, style=dotted];
m2_3433 -> m2_194  [key=2, style=dotted];
m2_3433 -> m2_904  [key=2, style=dotted];
m2_3433 -> m2_3434  [key=0, style=solid];
m2_3433 -> m2_112  [key=2, style=dotted];
m2_3435 -> m2_142  [key=2, style=dotted];
m2_3435 -> m2_3436  [key=0, style=solid];
m2_3436 -> m2_3432  [key=0, style=bold, color=blue];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [key=0, style=solid];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_222 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_222 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_222 -> m2_229  [key=2, style=dotted];
m2_1902 -> m2_1903  [key=0, style=solid];
m2_1903 -> m2_633  [key=2, style=dotted];
m2_1903 -> m2_1904  [key=0, style=solid];
m2_1904 -> m2_1902  [key=0, style=bold, color=blue];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_53  [key=2, style=dotted];
m2_647 -> m2_648  [key=0, style=solid];
m2_648 -> m2_649  [key=0, style=solid];
m2_649 -> m2_647  [key=0, style=bold, color=blue];
m2_1716 -> m2_1717  [key=0, style=solid];
m2_1724 -> m2_16  [key=2, style=dotted];
m2_1724 -> m2_1725  [key=0, style=solid];
m2_1725 -> m2_16  [key=2, style=dotted];
m2_1725 -> m2_1726  [key=0, style=solid];
m2_1726 -> m2_16  [key=2, style=dotted];
m2_1726 -> m2_1727  [key=0, style=solid];
m2_1727 -> m2_16  [key=2, style=dotted];
m2_1727 -> m2_1728  [key=0, style=solid];
m2_1723 -> m2_29  [key=2, style=dotted];
m2_1723 -> m2_1724  [key=0, style=solid];
m2_1723 -> m2_1725  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m2_1723 -> m2_1726  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m2_1723 -> m2_1727  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m2_1721 -> m2_1723  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1721 -> m2_1722  [key=0, style=solid];
m2_1721 -> m2_141  [key=2, style=dotted];
m2_1722 -> m2_1723  [key=0, style=solid];
m2_1722 -> m2_142  [key=2, style=dotted];
m2_1717 -> m2_1721  [key=1, style=dashed, color=darkseagreen4, label=f];
m2_1717 -> m2_1718  [key=0, style=solid];
m2_1717 -> m2_1729  [key=2, style=dotted];
m2_1717 -> m2_1719  [key=1, style=dashed, color=darkseagreen4, label=f];
m2_1717 -> m2_1720  [key=1, style=dashed, color=darkseagreen4, label=f];
m2_1720 -> m2_1721  [key=0, style=solid];
m2_1720 -> m2_1695  [key=2, style=dotted];
m2_1720 -> m2_1730  [key=2, style=dotted];
m2_1718 -> m2_1695  [key=2, style=dotted];
m2_1718 -> m2_1719  [key=0, style=solid];
m2_1718 -> m2_1730  [key=2, style=dotted];
m2_1719 -> m2_1695  [key=2, style=dotted];
m2_1719 -> m2_1720  [key=0, style=solid];
m2_1719 -> m2_1730  [key=2, style=dotted];
m2_1728 -> m2_1716  [key=0, style=bold, color=blue];
m2_1995 -> m2_1996  [key=0, style=solid];
m2_1995 -> m2_1998  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_1999  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2000  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2001  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_1997  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2002  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2003  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2004  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2005  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2006  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2007  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2008  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2009  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2010  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2011  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2012  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1995 -> m2_2013  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1996 -> m2_502  [key=2, style=dotted];
m2_1996 -> m2_1997  [key=0, style=solid];
m2_1998 -> m2_502  [key=2, style=dotted];
m2_1998 -> m2_1999  [key=0, style=solid];
m2_1999 -> m2_502  [key=2, style=dotted];
m2_1999 -> m2_2000  [key=0, style=solid];
m2_2000 -> m2_502  [key=2, style=dotted];
m2_2000 -> m2_2001  [key=0, style=solid];
m2_2001 -> m2_502  [key=2, style=dotted];
m2_2001 -> m2_2002  [key=0, style=solid];
m2_1997 -> m2_503  [key=2, style=dotted];
m2_1997 -> m2_1998  [key=0, style=solid];
m2_2002 -> m2_2003  [key=0, style=solid];
m2_2002 -> m2_2015  [key=2, style=dotted];
m2_2003 -> m2_2004  [key=0, style=solid];
m2_2003 -> m2_2016  [key=2, style=dotted];
m2_2004 -> m2_2005  [key=0, style=solid];
m2_2004 -> m2_2017  [key=2, style=dotted];
m2_2005 -> m2_2006  [key=0, style=solid];
m2_2005 -> m2_2018  [key=2, style=dotted];
m2_2006 -> m2_2007  [key=0, style=solid];
m2_2006 -> m2_2019  [key=2, style=dotted];
m2_2007 -> m2_2008  [key=0, style=solid];
m2_2007 -> m2_2020  [key=2, style=dotted];
m2_2008 -> m2_2009  [key=0, style=solid];
m2_2008 -> m2_2021  [key=2, style=dotted];
m2_2009 -> m2_2010  [key=0, style=solid];
m2_2009 -> m2_2022  [key=2, style=dotted];
m2_2010 -> m2_2011  [key=0, style=solid];
m2_2010 -> m2_2023  [key=2, style=dotted];
m2_2011 -> m2_2012  [key=0, style=solid];
m2_2011 -> m2_2024  [key=2, style=dotted];
m2_2012 -> m2_2013  [key=0, style=solid];
m2_2012 -> m2_2025  [key=2, style=dotted];
m2_2013 -> m2_2014  [key=0, style=solid];
m2_2013 -> m2_2026  [key=2, style=dotted];
m2_2014 -> m2_1995  [key=0, style=bold, color=blue];
m2_261 -> m2_263  [key=1, style=dashed, color=green, label=o];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_270  [key=2, style=dotted];
m2_2724 -> m2_2725  [key=0, style=solid];
m2_2725 -> m2_112  [key=2, style=dotted];
m2_2725 -> m2_2726  [key=0, style=solid];
m2_2726 -> m2_2724  [key=0, style=bold, color=blue];
m2_1221 -> m2_1222  [key=0, style=solid];
m2_1224 -> m2_65  [key=2, style=dotted];
m2_1224 -> m2_1225  [key=0, style=solid];
m2_1224 -> m2_1226  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1230 -> m2_65  [key=2, style=dotted];
m2_1230 -> m2_1231  [key=0, style=solid];
m2_1230 -> m2_1232  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1225 -> m2_16  [key=2, style=dotted];
m2_1225 -> m2_1226  [key=0, style=solid];
m2_1227 -> m2_16  [key=2, style=dotted];
m2_1227 -> m2_1228  [key=0, style=solid];
m2_1231 -> m2_16  [key=2, style=dotted];
m2_1231 -> m2_1232  [key=0, style=solid];
m2_1233 -> m2_16  [key=2, style=dotted];
m2_1233 -> m2_1234  [key=0, style=solid];
m2_1226 -> m2_29  [key=2, style=dotted];
m2_1226 -> m2_1227  [key=0, style=solid];
m2_1232 -> m2_29  [key=2, style=dotted];
m2_1232 -> m2_1233  [key=0, style=solid];
m2_1223 -> m2_1224  [key=0, style=solid];
m2_1223 -> m2_1235  [key=2, style=dotted];
m2_1229 -> m2_1230  [key=0, style=solid];
m2_1229 -> m2_1235  [key=2, style=dotted];
m2_1222 -> m2_1225  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m2_1222 -> m2_1223  [key=0, style=solid];
m2_1228 -> m2_1231  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m2_1228 -> m2_1229  [key=0, style=solid];
m2_1234 -> m2_1221  [key=0, style=bold, color=blue];
m2_3691 -> m2_3692  [key=0, style=solid];
m2_3692 -> m2_3657  [key=2, style=dotted];
m2_3692 -> m2_3693  [key=0, style=solid];
m2_3693 -> m2_3691  [key=0, style=bold, color=blue];
m2_3442 -> m2_3443  [key=0, style=solid];
m2_3449 -> m2_16  [key=2, style=dotted];
m2_3449 -> m2_3450  [key=0, style=solid];
m2_3450 -> m2_16  [key=2, style=dotted];
m2_3450 -> m2_3451  [key=0, style=solid];
m2_3445 -> m2_3449  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3445 -> m2_3450  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3445 -> m2_3446  [key=0, style=solid];
m2_3445 -> m2_2775  [key=2, style=dotted];
m2_3445 -> m2_3447  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3445 -> m2_3448  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3448 -> m2_3449  [key=0, style=solid];
m2_3448 -> m2_163  [key=2, style=dotted];
m2_3451 -> m2_3452  [key=0, style=solid];
m2_3451 -> m2_2779  [key=2, style=dotted];
m2_3446 -> m2_13  [key=2, style=dotted];
m2_3446 -> m2_344  [key=2, style=dotted];
m2_3446 -> m2_3447  [key=0, style=solid];
m2_3446 -> m2_634  [key=2, style=dotted];
m2_3443 -> m2_912  [key=2, style=dotted];
m2_3443 -> m2_194  [key=2, style=dotted];
m2_3443 -> m2_904  [key=2, style=dotted];
m2_3443 -> m2_112  [key=2, style=dotted];
m2_3443 -> m2_3444  [key=0, style=solid];
m2_3443 -> m2_3447  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_3444 -> m2_3445  [key=0, style=solid];
m2_3444 -> m2_3451  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_3444 -> m2_2774  [key=2, style=dotted];
m2_3447 -> m2_3448  [key=0, style=solid];
m2_3447 -> m2_2811  [key=2, style=dotted];
m2_3452 -> m2_142  [key=2, style=dotted];
m2_3452 -> m2_3453  [key=0, style=solid];
m2_3453 -> m2_3442  [key=0, style=bold, color=blue];
m2_1586 -> m2_1587  [key=0, style=solid];
m2_1587 -> m2_1591  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1587 -> m2_1588  [key=0, style=solid];
m2_1588 -> m2_1590  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1588 -> m2_25  [key=2, style=dotted];
m2_1588 -> m2_1589  [key=0, style=solid];
m2_1589 -> m2_1586  [key=0, style=bold, color=blue];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_114  [key=0, style=solid];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m2_2650 -> m2_2651  [key=0, style=solid];
m2_2657 -> m2_16  [key=2, style=dotted];
m2_2657 -> m2_2658  [key=0, style=solid];
m2_2658 -> m2_16  [key=2, style=dotted];
m2_2658 -> m2_2659  [key=0, style=solid];
m2_2659 -> m2_16  [key=2, style=dotted];
m2_2659 -> m2_2660  [key=0, style=solid];
m2_2660 -> m2_16  [key=2, style=dotted];
m2_2660 -> m2_2661  [key=0, style=solid];
m2_2656 -> m2_29  [key=2, style=dotted];
m2_2656 -> m2_2657  [key=0, style=solid];
m2_2656 -> m2_2658  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2656 -> m2_2659  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2656 -> m2_2660  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2651 -> m2_2657  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2651 -> m2_2658  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2651 -> m2_2652  [key=0, style=solid];
m2_2651 -> m2_2646  [key=2, style=dotted];
m2_2651 -> m2_2653  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2651 -> m2_2654  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2654 -> m2_2656  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2654 -> m2_2655  [key=0, style=solid];
m2_2654 -> m2_141  [key=2, style=dotted];
m2_2655 -> m2_2656  [key=0, style=solid];
m2_2655 -> m2_142  [key=2, style=dotted];
m2_2652 -> m2_2653  [key=0, style=solid];
m2_2652 -> m2_2662  [key=2, style=dotted];
m2_2653 -> m2_2654  [key=0, style=solid];
m2_2653 -> m2_2662  [key=2, style=dotted];
m2_2661 -> m2_2650  [key=0, style=bold, color=blue];
m2_359 -> m2_360  [key=0, style=solid];
m2_359 -> m2_342  [key=2, style=dotted];
m2_359 -> m2_361  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_31 -> m2_29  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_347 -> m2_348  [key=0, style=solid];
m2_347 -> m2_342  [key=0, style=solid];
m2_347 -> m2_22  [key=2, style=dotted];
m2_113 -> m2_122  [key=0, style=solid];
m2_2089 -> m2_2090  [key=0, style=solid];
m2_2091 -> m2_16  [key=2, style=dotted];
m2_2091 -> m2_2092  [key=0, style=solid];
m2_2091 -> m2_2119  [key=2, style=dotted];
m2_2091 -> m2_2120  [key=2, style=dotted];
m2_2092 -> m2_16  [key=2, style=dotted];
m2_2092 -> m2_2093  [key=0, style=solid];
m2_2092 -> m2_2119  [key=2, style=dotted];
m2_2092 -> m2_2120  [key=2, style=dotted];
m2_2093 -> m2_16  [key=2, style=dotted];
m2_2093 -> m2_2094  [key=0, style=solid];
m2_2093 -> m2_2121  [key=2, style=dotted];
m2_2093 -> m2_2120  [key=2, style=dotted];
m2_2094 -> m2_16  [key=2, style=dotted];
m2_2094 -> m2_2095  [key=0, style=solid];
m2_2094 -> m2_2121  [key=2, style=dotted];
m2_2094 -> m2_2120  [key=2, style=dotted];
m2_2095 -> m2_16  [key=2, style=dotted];
m2_2095 -> m2_2096  [key=0, style=solid];
m2_2095 -> m2_2121  [key=2, style=dotted];
m2_2095 -> m2_2120  [key=2, style=dotted];
m2_2096 -> m2_16  [key=2, style=dotted];
m2_2096 -> m2_2097  [key=0, style=solid];
m2_2096 -> m2_2121  [key=2, style=dotted];
m2_2096 -> m2_2120  [key=2, style=dotted];
m2_2097 -> m2_16  [key=2, style=dotted];
m2_2097 -> m2_2098  [key=0, style=solid];
m2_2097 -> m2_2121  [key=2, style=dotted];
m2_2097 -> m2_2120  [key=2, style=dotted];
m2_2098 -> m2_16  [key=2, style=dotted];
m2_2098 -> m2_2099  [key=0, style=solid];
m2_2098 -> m2_2121  [key=2, style=dotted];
m2_2098 -> m2_2120  [key=2, style=dotted];
m2_2100 -> m2_16  [key=2, style=dotted];
m2_2100 -> m2_2101  [key=0, style=solid];
m2_2100 -> m2_2119  [key=2, style=dotted];
m2_2100 -> m2_2120  [key=2, style=dotted];
m2_2101 -> m2_16  [key=2, style=dotted];
m2_2101 -> m2_2102  [key=0, style=solid];
m2_2101 -> m2_2119  [key=2, style=dotted];
m2_2101 -> m2_2120  [key=2, style=dotted];
m2_2102 -> m2_16  [key=2, style=dotted];
m2_2102 -> m2_2103  [key=0, style=solid];
m2_2102 -> m2_2121  [key=2, style=dotted];
m2_2102 -> m2_2120  [key=2, style=dotted];
m2_2103 -> m2_16  [key=2, style=dotted];
m2_2103 -> m2_2104  [key=0, style=solid];
m2_2103 -> m2_2121  [key=2, style=dotted];
m2_2103 -> m2_2120  [key=2, style=dotted];
m2_2104 -> m2_16  [key=2, style=dotted];
m2_2104 -> m2_2105  [key=0, style=solid];
m2_2104 -> m2_2121  [key=2, style=dotted];
m2_2104 -> m2_2120  [key=2, style=dotted];
m2_2105 -> m2_16  [key=2, style=dotted];
m2_2105 -> m2_2106  [key=0, style=solid];
m2_2105 -> m2_2121  [key=2, style=dotted];
m2_2105 -> m2_2120  [key=2, style=dotted];
m2_2106 -> m2_16  [key=2, style=dotted];
m2_2106 -> m2_2107  [key=0, style=solid];
m2_2106 -> m2_2121  [key=2, style=dotted];
m2_2106 -> m2_2120  [key=2, style=dotted];
m2_2107 -> m2_16  [key=2, style=dotted];
m2_2107 -> m2_2108  [key=0, style=solid];
m2_2107 -> m2_2121  [key=2, style=dotted];
m2_2107 -> m2_2120  [key=2, style=dotted];
m2_2108 -> m2_16  [key=2, style=dotted];
m2_2108 -> m2_2109  [key=0, style=solid];
m2_2109 -> m2_16  [key=2, style=dotted];
m2_2109 -> m2_2110  [key=0, style=solid];
m2_2110 -> m2_16  [key=2, style=dotted];
m2_2110 -> m2_2111  [key=0, style=solid];
m2_2111 -> m2_16  [key=2, style=dotted];
m2_2111 -> m2_2112  [key=0, style=solid];
m2_2112 -> m2_16  [key=2, style=dotted];
m2_2112 -> m2_2113  [key=0, style=solid];
m2_2112 -> m2_2121  [key=2, style=dotted];
m2_2112 -> m2_2120  [key=2, style=dotted];
m2_2113 -> m2_16  [key=2, style=dotted];
m2_2113 -> m2_2114  [key=0, style=solid];
m2_2113 -> m2_2121  [key=2, style=dotted];
m2_2113 -> m2_2120  [key=2, style=dotted];
m2_2114 -> m2_16  [key=2, style=dotted];
m2_2114 -> m2_2115  [key=0, style=solid];
m2_2115 -> m2_16  [key=2, style=dotted];
m2_2115 -> m2_2116  [key=0, style=solid];
m2_2115 -> m2_2121  [key=2, style=dotted];
m2_2115 -> m2_2120  [key=2, style=dotted];
m2_2116 -> m2_16  [key=2, style=dotted];
m2_2116 -> m2_2117  [key=0, style=solid];
m2_2116 -> m2_2121  [key=2, style=dotted];
m2_2116 -> m2_2120  [key=2, style=dotted];
m2_2117 -> m2_16  [key=2, style=dotted];
m2_2117 -> m2_2118  [key=0, style=solid];
m2_2117 -> m2_2121  [key=2, style=dotted];
m2_2117 -> m2_2120  [key=2, style=dotted];
m2_2090 -> m2_29  [key=2, style=dotted];
m2_2090 -> m2_2091  [key=0, style=solid];
m2_2090 -> m2_2092  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_2090 -> m2_2093  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_2090 -> m2_2094  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_2090 -> m2_2095  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_2090 -> m2_2096  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_2090 -> m2_2097  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_2090 -> m2_2098  [key=1, style=dashed, color=darkseagreen4, label=myA];
m2_2099 -> m2_29  [key=2, style=dotted];
m2_2099 -> m2_2100  [key=0, style=solid];
m2_2099 -> m2_2101  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2102  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2103  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2104  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2105  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2106  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2107  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2108  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2109  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2110  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2111  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2112  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2113  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2114  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2115  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2116  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2099 -> m2_2117  [key=1, style=dashed, color=darkseagreen4, label=myB];
m2_2118 -> m2_2089  [key=0, style=bold, color=blue];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m2_141 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m2_141 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m2_3679 -> m2_3680  [key=0, style=solid];
m2_3680 -> m2_3681  [key=0, style=solid];
m2_3681 -> m2_3679  [key=0, style=bold, color=blue];
m2_1341 -> m2_1342  [key=0, style=solid];
m2_1345 -> m2_16  [key=2, style=dotted];
m2_1345 -> m2_1346  [key=0, style=solid];
m2_1346 -> m2_16  [key=2, style=dotted];
m2_1346 -> m2_1347  [key=0, style=solid];
m2_1347 -> m2_16  [key=2, style=dotted];
m2_1347 -> m2_1348  [key=0, style=solid];
m2_1348 -> m2_16  [key=2, style=dotted];
m2_1348 -> m2_1349  [key=0, style=solid];
m2_1343 -> m2_29  [key=2, style=dotted];
m2_1343 -> m2_1345  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1343 -> m2_1346  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1343 -> m2_1347  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1343 -> m2_1348  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1343 -> m2_1344  [key=0, style=solid];
m2_1344 -> m2_1345  [key=0, style=solid];
m2_1344 -> m2_598  [key=2, style=dotted];
m2_1342 -> m2_1343  [key=0, style=solid];
m2_1349 -> m2_1341  [key=0, style=bold, color=blue];
m2_982 -> m2_983  [key=0, style=solid];
m2_987 -> m2_16  [key=2, style=dotted];
m2_987 -> m2_988  [key=0, style=solid];
m2_988 -> m2_16  [key=2, style=dotted];
m2_988 -> m2_989  [key=0, style=solid];
m2_986 -> m2_987  [key=0, style=solid];
m2_986 -> m2_988  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_986 -> m2_190  [key=2, style=dotted];
m2_986 -> m2_642  [key=2, style=dotted];
m2_984 -> m2_191  [key=2, style=dotted];
m2_984 -> m2_986  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_984 -> m2_985  [key=0, style=solid];
m2_983 -> m2_986  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_983 -> m2_984  [key=0, style=solid];
m2_985 -> m2_986  [key=0, style=solid];
m2_989 -> m2_982  [key=0, style=bold, color=blue];
m2_1391 -> m2_1392  [key=0, style=solid];
m2_1399 -> m2_13  [key=2, style=dotted];
m2_1399 -> m2_1400  [key=0, style=solid];
m2_1399 -> m2_15  [key=2, style=dotted];
m2_1392 -> m2_1399  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1392 -> m2_1393  [key=0, style=solid];
m2_1392 -> m2_1402  [key=2, style=dotted];
m2_1392 -> m2_1394  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1392 -> m2_1395  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1392 -> m2_1396  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1392 -> m2_1397  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1398 -> m2_1399  [key=0, style=solid];
m2_1398 -> m2_142  [key=2, style=dotted];
m2_1400 -> m2_142  [key=2, style=dotted];
m2_1400 -> m2_1401  [key=0, style=solid];
m2_1397 -> m2_141  [key=2, style=dotted];
m2_1397 -> m2_1398  [key=0, style=solid];
m2_1393 -> m2_1394  [key=0, style=solid];
m2_1394 -> m2_1395  [key=0, style=solid];
m2_1395 -> m2_1396  [key=0, style=solid];
m2_1396 -> m2_1397  [key=0, style=solid];
m2_1401 -> m2_1391  [key=0, style=bold, color=blue];
m2_125 -> m2_126  [key=0, style=solid];
m2_3599 -> m2_3600  [key=0, style=solid];
m2_3602 -> m2_16  [key=2, style=dotted];
m2_3602 -> m2_3603  [key=0, style=solid];
m2_3605 -> m2_16  [key=2, style=dotted];
m2_3605 -> m2_3606  [key=0, style=solid];
m2_3606 -> m2_16  [key=2, style=dotted];
m2_3606 -> m2_3607  [key=0, style=solid];
m2_3601 -> m2_3602  [key=0, style=solid];
m2_3601 -> m2_13  [key=2, style=dotted];
m2_3601 -> m2_114  [key=2, style=dotted];
m2_3601 -> m2_3603  [key=1, style=dashed, color=darkseagreen4, label=people];
m2_3601 -> m2_3604  [key=1, style=dashed, color=darkseagreen4, label=people];
m2_3603 -> m2_3605  [key=1, style=dashed, color=darkseagreen4, label=john];
m2_3603 -> m2_3606  [key=1, style=dashed, color=darkseagreen4, label=john];
m2_3603 -> m2_3604  [key=0, style=solid];
m2_3604 -> m2_3605  [key=0, style=solid];
m2_3604 -> m2_3606  [key=1, style=dashed, color=darkseagreen4, label=jane];
m2_3600 -> m2_3601  [key=0, style=solid];
m2_3607 -> m2_3599  [key=0, style=bold, color=blue];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_222  [key=2, style=dotted];
m2_927 -> m2_928  [key=0, style=solid];
m2_929 -> m2_65  [key=2, style=dotted];
m2_929 -> m2_930  [key=0, style=solid];
m2_929 -> m2_931  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_930 -> m2_16  [key=2, style=dotted];
m2_930 -> m2_931  [key=0, style=solid];
m2_932 -> m2_16  [key=2, style=dotted];
m2_932 -> m2_933  [key=0, style=solid];
m2_933 -> m2_16  [key=2, style=dotted];
m2_933 -> m2_934  [key=0, style=solid];
m2_934 -> m2_16  [key=2, style=dotted];
m2_934 -> m2_935  [key=0, style=solid];
m2_935 -> m2_16  [key=2, style=dotted];
m2_935 -> m2_936  [key=0, style=solid];
m2_936 -> m2_16  [key=2, style=dotted];
m2_936 -> m2_937  [key=0, style=solid];
m2_937 -> m2_16  [key=2, style=dotted];
m2_937 -> m2_938  [key=0, style=solid];
m2_938 -> m2_16  [key=2, style=dotted];
m2_938 -> m2_939  [key=0, style=solid];
m2_928 -> m2_929  [key=0, style=solid];
m2_928 -> m2_755  [key=2, style=dotted];
m2_928 -> m2_931  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_932  [key=0, style=solid];
m2_931 -> m2_933  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_934  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_935  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_936  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_937  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_938  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_931  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_931 -> m2_940  [key=2, style=dotted];
m2_939 -> m2_927  [key=0, style=bold, color=blue];
m2_2262 -> m2_2263  [key=0, style=solid];
m2_2265 -> m2_16  [key=2, style=dotted];
m2_2265 -> m2_2266  [key=0, style=solid];
m2_2266 -> m2_16  [key=2, style=dotted];
m2_2266 -> m2_2267  [key=0, style=solid];
m2_2267 -> m2_16  [key=2, style=dotted];
m2_2267 -> m2_2268  [key=0, style=solid];
m2_2264 -> m2_29  [key=2, style=dotted];
m2_2264 -> m2_2265  [key=0, style=solid];
m2_2264 -> m2_2266  [key=1, style=dashed, color=darkseagreen4, label=cc];
m2_2264 -> m2_2267  [key=1, style=dashed, color=darkseagreen4, label=cc];
m2_2263 -> m2_2264  [key=0, style=solid];
m2_2268 -> m2_2262  [key=0, style=bold, color=blue];
m2_3322 -> m2_3323  [key=0, style=solid];
m2_3324 -> m2_16  [key=2, style=dotted];
m2_3324 -> m2_3325  [key=0, style=solid];
m2_3325 -> m2_16  [key=2, style=dotted];
m2_3325 -> m2_3326  [key=0, style=solid];
m2_3325 -> m2_1511  [key=2, style=dotted];
m2_3330 -> m2_16  [key=2, style=dotted];
m2_3330 -> m2_3331  [key=0, style=solid];
m2_3333 -> m2_16  [key=2, style=dotted];
m2_3333 -> m2_3334  [key=0, style=solid];
m2_3333 -> m2_3335  [key=2, style=dotted];
m2_3323 -> m2_29  [key=2, style=dotted];
m2_3323 -> m2_3324  [key=0, style=solid];
m2_3323 -> m2_3325  [key=1, style=dashed, color=darkseagreen4, label=uris];
m2_3326 -> m2_29  [key=2, style=dotted];
m2_3326 -> m2_3327  [key=0, style=solid];
m2_3331 -> m2_29  [key=2, style=dotted];
m2_3331 -> m2_3333  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_3331 -> m2_3332  [key=0, style=solid];
m2_3328 -> m2_3330  [key=1, style=dashed, color=darkseagreen4, label=i1];
m2_3328 -> m2_3329  [key=0, style=solid];
m2_3328 -> m2_3335  [key=2, style=dotted];
m2_3329 -> m2_3330  [key=0, style=solid];
m2_3329 -> m2_1511  [key=2, style=dotted];
m2_3332 -> m2_3333  [key=0, style=solid];
m2_3332 -> m2_598  [key=2, style=dotted];
m2_3327 -> m2_3328  [key=0, style=solid];
m2_3327 -> m2_598  [key=2, style=dotted];
m2_3334 -> m2_3322  [key=0, style=bold, color=blue];
m2_2727 -> m2_2728  [key=0, style=solid];
m2_2732 -> m2_65  [key=2, style=dotted];
m2_2732 -> m2_2733  [key=0, style=solid];
m2_2734 -> m2_16  [key=2, style=dotted];
m2_2734 -> m2_2735  [key=0, style=solid];
m2_2734 -> m2_2739  [key=2, style=dotted];
m2_2737 -> m2_16  [key=2, style=dotted];
m2_2737 -> m2_2738  [key=0, style=solid];
m2_2737 -> m2_2739  [key=2, style=dotted];
m2_2733 -> m2_29  [key=2, style=dotted];
m2_2733 -> m2_2734  [key=0, style=solid];
m2_2736 -> m2_29  [key=2, style=dotted];
m2_2736 -> m2_2737  [key=0, style=solid];
m2_2728 -> m2_2732  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m2_2728 -> m2_2729  [key=0, style=solid];
m2_2728 -> m2_2724  [key=2, style=dotted];
m2_2728 -> m2_2731  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m2_2728 -> m2_2735  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m2_2729 -> m2_2732  [key=0, style=solid];
m2_2729 -> m2_99  [key=2, style=dotted];
m2_2731 -> m2_2732  [key=0, style=solid];
m2_2731 -> m2_140  [key=2, style=dotted];
m2_2735 -> m2_2736  [key=0, style=solid];
m2_2735 -> m2_141  [key=2, style=dotted];
m2_2730 -> m2_2731  [key=0, style=solid];
m2_2738 -> m2_2727  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_19 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_19 -> m2_25  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_32  [key=0, style=solid];
m2_19 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_20 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_20 -> m2_25  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_110  [key=0, style=solid];
m2_20 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_20 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_20 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_20 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_21 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_21 -> m2_25  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_173  [key=0, style=solid];
m2_21 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_21 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_21 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_21 -> m2_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_21 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_22 -> m2_25  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_56  [key=0, style=solid];
m2_22 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_22 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_22 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_22 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_22 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_22 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_23 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_23 -> m2_25  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_17  [key=0, style=bold, color=blue];
m2_24 -> m2_560  [key=0, style=solid];
m2_24 -> m2_561  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_24 -> m2_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_24 -> m2_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_24 -> m2_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_2718 -> m2_2719  [key=0, style=solid];
m2_2721 -> m2_142  [key=2, style=dotted];
m2_2721 -> m2_2722  [key=0, style=solid];
m2_2720 -> m2_141  [key=2, style=dotted];
m2_2720 -> m2_2721  [key=0, style=solid];
m2_2719 -> m2_2720  [key=0, style=solid];
m2_2719 -> m2_2723  [key=2, style=dotted];
m2_2722 -> m2_2718  [key=0, style=bold, color=blue];
m2_37 -> m2_29  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_111 -> m2_122  [key=0, style=solid];
m2_2161 -> m2_2162  [key=0, style=solid];
m2_2170 -> m2_16  [key=2, style=dotted];
m2_2170 -> m2_2171  [key=0, style=solid];
m2_2169 -> m2_29  [key=2, style=dotted];
m2_2169 -> m2_2170  [key=0, style=solid];
m2_2162 -> m2_2170  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_2162 -> m2_2163  [key=0, style=solid];
m2_2162 -> m2_2172  [key=2, style=dotted];
m2_2162 -> m2_2165  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_2162 -> m2_2166  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m2_2166 -> m2_2169  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2166 -> m2_2167  [key=0, style=solid];
m2_2166 -> m2_141  [key=2, style=dotted];
m2_2166 -> m2_2168  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2168 -> m2_2169  [key=0, style=solid];
m2_2168 -> m2_142  [key=2, style=dotted];
m2_2163 -> m2_2164  [key=0, style=solid];
m2_2163 -> m2_2173  [key=2, style=dotted];
m2_2163 -> m2_2165  [key=1, style=dashed, color=darkseagreen4, label=document];
m2_2165 -> m2_2166  [key=0, style=solid];
m2_2167 -> m2_2168  [key=0, style=solid];
m2_2164 -> m2_2165  [key=0, style=solid];
m2_2164 -> m2_2174  [key=2, style=dotted];
m2_2171 -> m2_2161  [key=0, style=bold, color=blue];
m2_1921 -> m2_1922  [key=0, style=solid];
m2_1922 -> m2_1923  [key=0, style=solid];
m2_1922 -> m2_1924  [key=2, style=dotted];
m2_1923 -> m2_1921  [key=0, style=bold, color=blue];
m2_3250 -> m2_3251  [key=0, style=solid];
m2_3251 -> m2_3252  [key=0, style=solid];
m2_3251 -> m2_3254  [key=2, style=dotted];
m2_3252 -> m2_3253  [key=0, style=solid];
m2_3252 -> m2_3255  [key=2, style=dotted];
m2_3253 -> m2_3250  [key=0, style=bold, color=blue];
m2_2444 -> m2_2445  [key=0, style=solid];
m2_2447 -> m2_65  [key=2, style=dotted];
m2_2447 -> m2_2448  [key=0, style=solid];
m2_2449 -> m2_16  [key=2, style=dotted];
m2_2449 -> m2_2450  [key=0, style=solid];
m2_2450 -> m2_16  [key=2, style=dotted];
m2_2450 -> m2_2451  [key=0, style=solid];
m2_2451 -> m2_16  [key=2, style=dotted];
m2_2451 -> m2_2452  [key=0, style=solid];
m2_2448 -> m2_29  [key=2, style=dotted];
m2_2448 -> m2_2449  [key=0, style=solid];
m2_2448 -> m2_2450  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_2448 -> m2_2451  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_2445 -> m2_2447  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_2445 -> m2_2446  [key=0, style=solid];
m2_2445 -> m2_2453  [key=2, style=dotted];
m2_2446 -> m2_2447  [key=0, style=solid];
m2_2446 -> m2_2454  [key=2, style=dotted];
m2_2452 -> m2_2444  [key=0, style=bold, color=blue];
m2_358 -> m2_400  [key=0, style=solid];
m2_358 -> m2_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_358 -> m2_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_358 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_358 -> m2_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_358 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_358 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_358 -> m2_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_358 -> m2_412  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_358 -> m2_359  [key=0, style=solid, color=green];
m2_358 -> m2_341  [key=2, style=dotted, color=green];
m2_358 -> m2_16  [key=2, style=dotted, color=green];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_98  [key=2, style=dotted];
m2_400 -> m2_123  [key=2, style=dotted];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_401  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_401 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_401 -> m2_406  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_401 -> m2_16  [key=2, style=dotted];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_50  [key=2, style=dotted];
m2_402 -> m2_408  [key=1, style=dashed, color=darkseagreen4, label=includeTypeDetails];
m2_402 -> m2_347  [key=2, style=dotted];
m2_402 -> m2_404  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_51  [key=2, style=dotted];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_300  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_36  [key=2, style=dotted];
m2_409 -> m2_52  [key=2, style=dotted];
m2_409 -> m2_348  [key=0, style=bold, color=blue];
m2_411 -> m2_412  [key=0, style=solid, color=red];
m2_411 -> m2_413  [key=0, style=solid];
m2_412 -> m2_413  [key=0, style=solid, color=red];
m2_412 -> m2_37  [key=2, style=dotted, color=red];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_413  [key=1, style=dashed, color=darkseagreen4, label=writeMetadataObject];
m2_406 -> m2_407  [key=0, style=solid];
m2_406 -> m2_408  [key=0, style=solid];
m2_406 -> m2_16  [key=2, style=dotted];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_410  [key=0, style=solid];
m2_408 -> m2_16  [key=2, style=dotted];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_411  [key=0, style=solid];
m2_404 -> m2_16  [key=2, style=dotted];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_411  [key=0, style=bold, color=blue];
m2_1455 -> m2_1456  [key=0, style=solid];
m2_1461 -> m2_16  [key=2, style=dotted];
m2_1461 -> m2_1462  [key=0, style=solid];
m2_1461 -> m2_1452  [key=2, style=dotted];
m2_1460 -> m2_29  [key=2, style=dotted];
m2_1460 -> m2_1461  [key=0, style=solid];
m2_1458 -> m2_1460  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1458 -> m2_1459  [key=0, style=solid];
m2_1458 -> m2_141  [key=2, style=dotted];
m2_1459 -> m2_1460  [key=0, style=solid];
m2_1459 -> m2_142  [key=2, style=dotted];
m2_1456 -> m2_1458  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1456 -> m2_1457  [key=0, style=solid];
m2_1456 -> m2_1446  [key=2, style=dotted];
m2_1457 -> m2_1458  [key=0, style=solid];
m2_1462 -> m2_1455  [key=0, style=bold, color=blue];
m2_3004 -> m2_3005  [key=0, style=solid];
m2_3005 -> m2_3007  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3005 -> m2_25  [key=2, style=dotted];
m2_3005 -> m2_3006  [key=0, style=solid];
m2_3006 -> m2_3004  [key=0, style=bold, color=blue];
m2_2692 -> m2_2693  [key=0, style=solid];
m2_2692 -> m2_2694  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_2692 -> m2_2695  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_2693 -> m2_2694  [key=0, style=solid];
m2_2694 -> m2_2695  [key=0, style=solid];
m2_2695 -> m2_2696  [key=0, style=solid];
m2_2696 -> m2_2692  [key=0, style=bold, color=blue];
m2_137 -> m2_16  [key=2, style=dotted];
m2_137 -> m2_138  [key=0, style=solid];
m2_1846 -> m2_1847  [key=0, style=solid];
m2_1850 -> m2_16  [key=2, style=dotted];
m2_1850 -> m2_1851  [key=0, style=solid];
m2_1848 -> m2_1850  [key=1, style=dashed, color=darkseagreen4, label=cISO];
m2_1848 -> m2_13  [key=2, style=dotted];
m2_1848 -> m2_1849  [key=0, style=solid];
m2_1848 -> m2_951  [key=2, style=dotted];
m2_1848 -> m2_114  [key=2, style=dotted];
m2_1849 -> m2_1850  [key=0, style=solid];
m2_1849 -> m2_13  [key=2, style=dotted];
m2_1849 -> m2_114  [key=2, style=dotted];
m2_1847 -> m2_1848  [key=0, style=solid];
m2_1847 -> m2_1849  [key=1, style=dashed, color=darkseagreen4, label=jsonIsoText];
m2_1851 -> m2_1846  [key=0, style=bold, color=blue];
m2_3416 -> m2_3417  [key=0, style=solid];
m2_3421 -> m2_16  [key=2, style=dotted];
m2_3421 -> m2_3421  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_3421 -> m2_3422  [key=0, style=solid];
m2_3421 -> m2_912  [key=2, style=dotted];
m2_3422 -> m2_16  [key=2, style=dotted];
m2_3422 -> m2_3422  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_3422 -> m2_3423  [key=0, style=solid];
m2_3422 -> m2_3425  [key=2, style=dotted];
m2_3420 -> m2_3421  [key=0, style=solid];
m2_3418 -> m2_13  [key=2, style=dotted];
m2_3418 -> m2_3419  [key=0, style=solid];
m2_3419 -> m2_3420  [key=0, style=solid];
m2_3419 -> m2_3424  [key=2, style=dotted];
m2_3417 -> m2_3418  [key=0, style=solid];
m2_3417 -> m2_3419  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_3423 -> m2_3416  [key=0, style=bold, color=blue];
m2_1082 -> m2_1083  [key=0, style=solid];
m2_1084 -> m2_65  [key=2, style=dotted];
m2_1084 -> m2_1085  [key=0, style=solid];
m2_1084 -> m2_1086  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1085 -> m2_16  [key=2, style=dotted];
m2_1085 -> m2_1086  [key=0, style=solid];
m2_1087 -> m2_16  [key=2, style=dotted];
m2_1087 -> m2_1088  [key=0, style=solid];
m2_1086 -> m2_29  [key=2, style=dotted];
m2_1086 -> m2_1087  [key=0, style=solid];
m2_1083 -> m2_1084  [key=0, style=solid];
m2_1083 -> m2_1089  [key=2, style=dotted];
m2_1088 -> m2_1082  [key=0, style=bold, color=blue];
m2_96 -> m2_99  [key=2, style=dotted];
m2_96 -> m2_98  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_100  [key=2, style=dotted];
m2_98 -> m2_94  [key=0, style=bold, color=blue];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_98 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_98 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_98 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_98 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_98 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_98 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_21  [key=2, style=dotted];
m2_1403 -> m2_1404  [key=0, style=solid];
m2_1406 -> m2_16  [key=2, style=dotted];
m2_1406 -> m2_1407  [key=0, style=solid];
m2_1407 -> m2_16  [key=2, style=dotted];
m2_1407 -> m2_1408  [key=0, style=solid];
m2_1408 -> m2_16  [key=2, style=dotted];
m2_1408 -> m2_1409  [key=0, style=solid];
m2_1409 -> m2_16  [key=2, style=dotted];
m2_1409 -> m2_1410  [key=0, style=solid];
m2_1405 -> m2_29  [key=2, style=dotted];
m2_1405 -> m2_1406  [key=0, style=solid];
m2_1405 -> m2_1407  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1405 -> m2_1408  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1405 -> m2_1409  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1404 -> m2_1405  [key=0, style=solid];
m2_1410 -> m2_1403  [key=0, style=bold, color=blue];
m2_3254 -> m2_3256  [key=0, style=solid];
m2_3254 -> m2_3259  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_3257 -> m2_191  [key=2, style=dotted];
m2_3257 -> m2_3258  [key=0, style=solid];
m2_3257 -> m2_3259  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_3256 -> m2_3257  [key=0, style=solid];
m2_3256 -> m2_2774  [key=2, style=dotted];
m2_3256 -> m2_3259  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m2_3256 -> m2_3260  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m2_3258 -> m2_1668  [key=2, style=dotted];
m2_3258 -> m2_3259  [key=0, style=solid];
m2_3259 -> m2_3260  [key=0, style=solid];
m2_3259 -> m2_637  [key=2, style=dotted];
m2_3260 -> m2_2779  [key=2, style=dotted];
m2_3260 -> m2_3261  [key=0, style=solid];
m2_3261 -> m2_3254  [key=0, style=bold, color=blue];
m2_2945 -> m2_2946  [key=0, style=solid];
m2_2950 -> m2_16  [key=2, style=dotted];
m2_2950 -> m2_2951  [key=0, style=solid];
m2_2950 -> m2_1048  [key=2, style=dotted];
m2_2951 -> m2_16  [key=2, style=dotted];
m2_2951 -> m2_2952  [key=0, style=solid];
m2_2951 -> m2_1048  [key=2, style=dotted];
m2_2949 -> m2_29  [key=2, style=dotted];
m2_2949 -> m2_2950  [key=0, style=solid];
m2_2949 -> m2_2951  [key=1, style=dashed, color=darkseagreen4, label=actual];
m2_2949 -> m2_2952  [key=1, style=dashed, color=darkseagreen4, label=actual];
m2_2952 -> m2_2953  [key=0, style=solid];
m2_2947 -> m2_2949  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m2_2947 -> m2_2948  [key=0, style=solid];
m2_2947 -> m2_141  [key=2, style=dotted];
m2_2948 -> m2_2949  [key=0, style=solid];
m2_2948 -> m2_142  [key=2, style=dotted];
m2_2946 -> m2_1048  [key=2, style=dotted];
m2_2946 -> m2_904  [key=2, style=dotted];
m2_2946 -> m2_2947  [key=0, style=solid];
m2_2946 -> m2_2955  [key=2, style=dotted];
m2_2953 -> m2_248  [key=2, style=dotted];
m2_2953 -> m2_2814  [key=2, style=dotted];
m2_2953 -> m2_2954  [key=0, style=solid];
m2_2954 -> m2_2945  [key=0, style=bold, color=blue];
m2_212 -> m2_213  [key=0, style=solid, color=green];
m2_212 -> m2_218  [key=0, style=solid];
m2_212 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_212 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_213 -> m2_214  [key=0, style=solid, color=green];
m2_213 -> m2_220  [key=2, style=dotted, color=green];
m2_213 -> m2_216  [key=1, style=dashed, color=green, label=input];
m2_213 -> m2_217  [key=1, style=dashed, color=green, label=input];
m2_213 -> m2_218  [key=1, style=dashed, color=green, label=input];
m2_213 -> m2_215  [key=0, style=solid];
m2_214 -> m2_65  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_169  [key=2, style=dotted];
m2_214 -> m2_171  [key=2, style=dotted];
m2_214 -> m2_172  [key=2, style=dotted];
m2_216 -> m2_16  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_211  [key=0, style=bold, color=blue];
m2_217 -> m2_16  [key=2, style=dotted];
m2_217 -> m2_218  [key=0, style=solid];
m2_218 -> m2_16  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_220  [key=0, style=solid];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_217  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_215 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_215 -> m2_29  [key=2, style=dotted];
m2_219 -> m2_212  [key=0, style=bold, color=blue];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_169  [key=2, style=dotted];
m2_219 -> m2_171  [key=2, style=dotted];
m2_219 -> m2_172  [key=2, style=dotted];
m2_3289 -> m2_3290  [key=0, style=solid];
m2_3295 -> m2_16  [key=2, style=dotted];
m2_3295 -> m2_3296  [key=0, style=solid];
m2_3293 -> m2_3295  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_3293 -> m2_3294  [key=0, style=solid];
m2_3293 -> m2_189  [key=2, style=dotted];
m2_3293 -> m2_190  [key=2, style=dotted];
m2_3293 -> m2_2364  [key=2, style=dotted];
m2_3294 -> m2_3295  [key=0, style=solid];
m2_3294 -> m2_598  [key=2, style=dotted];
m2_3296 -> m2_3297  [key=0, style=solid];
m2_3291 -> m2_13  [key=2, style=dotted];
m2_3291 -> m2_3296  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3291 -> m2_3292  [key=0, style=solid];
m2_3291 -> m2_3297  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3290 -> m2_3293  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3290 -> m2_3291  [key=0, style=solid];
m2_3290 -> m2_3298  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3290 -> m2_3301  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3292 -> m2_3293  [key=0, style=solid];
m2_3292 -> m2_634  [key=2, style=dotted];
m2_3297 -> m2_3298  [key=0, style=solid];
m2_3297 -> m2_634  [key=2, style=dotted];
m2_3297 -> m2_3301  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_3298 -> m2_25  [key=2, style=dotted];
m2_3298 -> m2_3299  [key=0, style=solid];
m2_3298 -> m2_3300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3299 -> m2_3289  [key=0, style=bold, color=blue];
m2_2079 -> m2_2080  [key=0, style=solid];
m2_2082 -> m2_142  [key=2, style=dotted];
m2_2082 -> m2_2083  [key=0, style=solid];
m2_2085 -> m2_142  [key=2, style=dotted];
m2_2085 -> m2_2086  [key=0, style=solid];
m2_2081 -> m2_141  [key=2, style=dotted];
m2_2081 -> m2_2082  [key=0, style=solid];
m2_2084 -> m2_141  [key=2, style=dotted];
m2_2084 -> m2_2085  [key=0, style=solid];
m2_2083 -> m2_2084  [key=0, style=solid];
m2_2083 -> m2_2088  [key=2, style=dotted];
m2_2080 -> m2_2081  [key=0, style=solid];
m2_2080 -> m2_2087  [key=2, style=dotted];
m2_2086 -> m2_2079  [key=0, style=bold, color=blue];
m2_88 -> m2_223  [key=0, style=solid];
m2_88 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_88 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m2_88 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m2_88 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m2_88 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_88 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m2_88 -> m2_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_256  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonWriter"];
m2_88 -> m2_89  [key=0, style=solid];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_211  [key=2, style=dotted];
m2_223 -> m2_65  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_258  [key=2, style=dotted];
m2_224 -> m2_29  [key=2, style=dotted];
m2_224 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_224 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_259  [key=2, style=dotted];
m2_225 -> m2_16  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m2_226 -> m2_16  [key=2, style=dotted];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_240  [key=0, style=solid];
m2_228 -> m2_221  [key=0, style=bold, color=blue];
m2_232 -> m2_233  [key=0, style=solid, color=green];
m2_232 -> m2_228  [key=0, style=solid];
m2_232 -> m2_260  [key=2, style=dotted];
m2_232 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m2_232 -> m2_65  [key=2, style=dotted, color=green];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_261  [key=2, style=dotted];
m2_233 -> m2_29  [key=2, style=dotted];
m2_233 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_233 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_239  [key=0, style=solid];
m2_234 -> m2_22  [key=2, style=dotted];
m2_234 -> m2_16  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_238  [key=0, style=solid];
m2_236 -> m2_23  [key=2, style=dotted];
m2_236 -> m2_16  [key=2, style=dotted];
m2_237 -> m2_239  [key=0, style=solid];
m2_237 -> m2_24  [key=2, style=dotted];
m2_237 -> m2_230  [key=0, style=bold, color=blue];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_254  [key=0, style=solid];
m2_240 -> m2_220  [key=2, style=dotted];
m2_240 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_240 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_240 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_240 -> m2_247  [key=2, style=dotted];
m2_240 -> m2_248  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_262  [key=2, style=dotted];
m2_241 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label=extensionData];
m2_241 -> m2_65  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_251  [key=0, style=solid];
m2_248 -> m2_20  [key=2, style=dotted];
m2_248 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_248 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_264  [key=2, style=dotted];
m2_250 -> m2_243  [key=0, style=solid];
m2_250 -> m2_21  [key=2, style=dotted];
m2_250 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_250 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_243  [key=0, style=solid];
m2_251 -> m2_138  [key=2, style=dotted];
m2_251 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_251 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_251 -> m2_254  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_251 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_251 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_251 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_251 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_251 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_251 -> m2_270  [key=2, style=dotted];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_264  [key=2, style=dotted];
m2_252 -> m2_16  [key=2, style=dotted];
m2_253 -> m2_243  [key=0, style=solid];
m2_253 -> m2_22  [key=2, style=dotted];
m2_253 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_253 -> m2_16  [key=2, style=dotted];
m2_253 -> m2_254  [key=0, style=solid];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_55  [key=2, style=dotted];
m2_254 -> m2_16  [key=2, style=dotted];
m2_256 -> m2_257  [key=0, style=solid, color=red];
m2_256 -> m2_212  [key=2, style=dotted, color=red];
m2_256 -> m2_16  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_227 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_227 -> m2_16  [key=2, style=dotted];
m2_239 -> m2_228  [key=0, style=solid];
m2_239 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_239 -> m2_240  [key=0, style=solid];
m2_230 -> m2_231  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid, color=green];
m2_231 -> m2_238  [key=2, style=dotted];
m2_231 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_231 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_231 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label=input];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_16  [key=2, style=dotted];
m2_238 -> m2_257  [key=0, style=solid];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_254  [key=0, style=solid];
m2_242 -> m2_29  [key=2, style=dotted];
m2_242 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_242 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_254  [key=0, style=solid];
m2_243 -> m2_16  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_19  [key=2, style=dotted];
m2_244 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_244 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=keyContract];
m2_244 -> m2_16  [key=2, style=dotted];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_19  [key=2, style=dotted];
m2_245 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_245 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=e];
m2_245 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_245 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_245 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_245 -> m2_16  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_239  [key=0, style=bold, color=blue];
m2_255 -> m2_256  [key=0, style=solid, color=red];
m2_255 -> m2_265  [key=2, style=dotted];
m2_255 -> m2_16  [key=2, style=dotted];
m2_255 -> m2_271  [key=2, style=dotted];
m2_257 -> m2_88  [key=0, style=bold, color=blue];
m2_257 -> m2_16  [key=2, style=dotted];
m2_257 -> m2_258  [key=0, style=solid];
m2_3673 -> m2_3674  [key=0, style=solid];
m2_3674 -> m2_3657  [key=2, style=dotted];
m2_3674 -> m2_3675  [key=0, style=solid];
m2_3675 -> m2_3673  [key=0, style=bold, color=blue];
m2_2497 -> m2_2498  [key=0, style=solid];
m2_2498 -> m2_13  [key=2, style=dotted];
m2_2498 -> m2_2499  [key=0, style=solid];
m2_2498 -> m2_114  [key=2, style=dotted];
m2_2499 -> m2_2497  [key=0, style=bold, color=blue];
m2_3016 -> m2_3017  [key=0, style=solid];
m2_3017 -> m2_3019  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3017 -> m2_25  [key=2, style=dotted];
m2_3017 -> m2_3018  [key=0, style=solid];
m2_3018 -> m2_3016  [key=0, style=bold, color=blue];
m2_504 -> m2_505  [key=0, style=solid];
m2_504 -> m2_258  [key=2, style=dotted];
m2_1296 -> m2_1297  [key=0, style=solid];
m2_1298 -> m2_29  [key=2, style=dotted];
m2_1298 -> m2_1299  [key=0, style=solid];
m2_1297 -> m2_1298  [key=0, style=solid];
m2_1299 -> m2_1296  [key=0, style=bold, color=blue];
m2_1782 -> m2_1783  [key=0, style=solid];
m2_1786 -> m2_16  [key=2, style=dotted];
m2_1786 -> m2_1787  [key=0, style=solid];
m2_1786 -> m2_193  [key=2, style=dotted];
m2_1787 -> m2_16  [key=2, style=dotted];
m2_1787 -> m2_1788  [key=0, style=solid];
m2_1787 -> m2_193  [key=2, style=dotted];
m2_1788 -> m2_16  [key=2, style=dotted];
m2_1788 -> m2_1789  [key=0, style=solid];
m2_1789 -> m2_16  [key=2, style=dotted];
m2_1789 -> m2_1790  [key=0, style=solid];
m2_1790 -> m2_16  [key=2, style=dotted];
m2_1790 -> m2_1791  [key=0, style=solid];
m2_1791 -> m2_16  [key=2, style=dotted];
m2_1791 -> m2_1792  [key=0, style=solid];
m2_1792 -> m2_16  [key=2, style=dotted];
m2_1792 -> m2_1793  [key=0, style=solid];
m2_1783 -> m2_29  [key=2, style=dotted];
m2_1783 -> m2_1786  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1783 -> m2_1787  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1783 -> m2_1788  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1783 -> m2_1789  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1783 -> m2_1790  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1783 -> m2_1791  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1783 -> m2_1792  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1783 -> m2_1784  [key=0, style=solid];
m2_1783 -> m2_1785  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_1785 -> m2_1786  [key=0, style=solid];
m2_1785 -> m2_598  [key=2, style=dotted];
m2_1784 -> m2_1785  [key=0, style=solid];
m2_1784 -> m2_598  [key=2, style=dotted];
m2_1793 -> m2_1782  [key=0, style=bold, color=blue];
m2_262 -> m2_263  [key=0, style=solid, color=green];
m2_262 -> m2_16  [key=2, style=dotted];
m2_260 -> m2_263  [key=1, style=dashed, color=green, label=json];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_266  [key=0, style=solid];
m2_260 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_260 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_260 -> m2_269  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_260 -> m2_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_260 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_260 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_260 -> m2_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_260 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_260 -> m2_276  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonWriter"];
m2_260 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_260 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_260 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_260 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_258 -> m2_16  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_266 -> m2_16  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_286  [key=0, style=solid];
m2_266 -> m2_290  [key=2, style=dotted];
m2_266 -> m2_291  [key=2, style=dotted];
m2_267 -> m2_16  [key=2, style=dotted];
m2_267 -> m2_268  [key=0, style=solid];
m2_267 -> m2_269  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_272  [key=2, style=dotted];
m2_259 -> m2_273  [key=2, style=dotted];
m2_259 -> m2_274  [key=2, style=dotted];
m2_259 -> m2_293  [key=0, style=solid, color=red];
m2_259 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_259 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_259 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_259 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_259 -> m2_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_265 -> m2_270  [key=2, style=dotted];
m2_265 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_268 -> m2_272  [key=2, style=dotted];
m2_268 -> m2_273  [key=2, style=dotted];
m2_268 -> m2_274  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_37  [key=2, style=dotted];
m2_269 -> m2_249  [key=0, style=bold, color=blue];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_292  [key=2, style=dotted];
m2_269 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m2_269 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m2_269 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m2_269 -> m2_276  [key=1, style=dashed, color=red, label="out object"];
m2_269 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m2_1614 -> m2_1615  [key=0, style=solid];
m2_1615 -> m2_1619  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1615 -> m2_1616  [key=0, style=solid];
m2_1616 -> m2_1618  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1616 -> m2_25  [key=2, style=dotted];
m2_1616 -> m2_1617  [key=0, style=solid];
m2_1617 -> m2_1614  [key=0, style=bold, color=blue];
m2_740 -> m2_741  [key=0, style=solid];
m2_746 -> m2_65  [key=2, style=dotted];
m2_746 -> m2_747  [key=0, style=solid];
m2_748 -> m2_16  [key=2, style=dotted];
m2_748 -> m2_749  [key=0, style=solid];
m2_749 -> m2_16  [key=2, style=dotted];
m2_749 -> m2_750  [key=0, style=solid];
m2_749 -> m2_756  [key=2, style=dotted];
m2_750 -> m2_16  [key=2, style=dotted];
m2_750 -> m2_751  [key=0, style=solid];
m2_751 -> m2_16  [key=2, style=dotted];
m2_751 -> m2_752  [key=0, style=solid];
m2_752 -> m2_16  [key=2, style=dotted];
m2_752 -> m2_753  [key=0, style=solid];
m2_753 -> m2_16  [key=2, style=dotted];
m2_753 -> m2_754  [key=0, style=solid];
m2_741 -> m2_746  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_741 -> m2_742  [key=0, style=solid];
m2_741 -> m2_755  [key=2, style=dotted];
m2_741 -> m2_743  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_741 -> m2_744  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_741 -> m2_745  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_745 -> m2_746  [key=0, style=solid];
m2_747 -> m2_748  [key=0, style=solid];
m2_747 -> m2_749  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_747 -> m2_750  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_747 -> m2_751  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_747 -> m2_752  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_747 -> m2_753  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_747 -> m2_738  [key=2, style=dotted];
m2_742 -> m2_743  [key=0, style=solid];
m2_743 -> m2_756  [key=2, style=dotted];
m2_743 -> m2_744  [key=0, style=solid];
m2_744 -> m2_745  [key=0, style=solid];
m2_754 -> m2_740  [key=0, style=bold, color=blue];
m2_3646 -> m2_3653  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_3646 -> m2_3647  [key=0, style=solid];
m2_3646 -> m2_3649  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_3646 -> m2_3651  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_3654 -> m2_632  [key=2, style=dotted];
m2_3654 -> m2_3656  [key=0, style=solid];
m2_3653 -> m2_3654  [key=0, style=solid];
m2_3653 -> m2_3655  [key=0, style=solid];
m2_3648 -> m2_3656  [key=0, style=solid];
m2_3650 -> m2_3656  [key=0, style=solid];
m2_3652 -> m2_3656  [key=0, style=solid];
m2_3651 -> m2_3653  [key=0, style=solid];
m2_3651 -> m2_3652  [key=0, style=solid];
m2_3655 -> m2_3656  [key=0, style=solid];
m2_3655 -> m2_3657  [key=2, style=dotted];
m2_3647 -> m2_3648  [key=0, style=solid];
m2_3647 -> m2_3649  [key=0, style=solid];
m2_3649 -> m2_3650  [key=0, style=solid];
m2_3649 -> m2_3651  [key=0, style=solid];
m2_3656 -> m2_3646  [key=0, style=bold, color=blue];
m2_2388 -> m2_2389  [key=0, style=solid];
m2_2399 -> m2_16  [key=2, style=dotted];
m2_2399 -> m2_2400  [key=0, style=solid];
m2_2401 -> m2_16  [key=2, style=dotted];
m2_2401 -> m2_2402  [key=0, style=solid];
m2_2405 -> m2_16  [key=2, style=dotted];
m2_2405 -> m2_2406  [key=0, style=solid];
m2_2407 -> m2_16  [key=2, style=dotted];
m2_2407 -> m2_2408  [key=0, style=solid];
m2_2397 -> m2_29  [key=2, style=dotted];
m2_2397 -> m2_2399  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_2397 -> m2_2401  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_2397 -> m2_2398  [key=0, style=solid];
m2_2397 -> m2_2400  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_2397 -> m2_2402  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_2397 -> m2_2403  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m2_2389 -> m2_2399  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2401  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2405  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2407  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2390  [key=0, style=solid];
m2_2389 -> m2_2409  [key=2, style=dotted];
m2_2389 -> m2_2391  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2392  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2393  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2394  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2389 -> m2_2395  [key=1, style=dashed, color=darkseagreen4, label=expando];
m2_2398 -> m2_2399  [key=0, style=solid];
m2_2398 -> m2_547  [key=2, style=dotted];
m2_2400 -> m2_2401  [key=0, style=solid];
m2_2400 -> m2_547  [key=2, style=dotted];
m2_2402 -> m2_2403  [key=0, style=solid];
m2_2402 -> m2_547  [key=2, style=dotted];
m2_2403 -> m2_2405  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_2403 -> m2_2407  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_2403 -> m2_2404  [key=0, style=solid];
m2_2403 -> m2_2406  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_2404 -> m2_2405  [key=0, style=solid];
m2_2404 -> m2_547  [key=2, style=dotted];
m2_2406 -> m2_2407  [key=0, style=solid];
m2_2406 -> m2_547  [key=2, style=dotted];
m2_2395 -> m2_2397  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2395 -> m2_2396  [key=0, style=solid];
m2_2395 -> m2_2410  [key=2, style=dotted];
m2_2396 -> m2_2397  [key=0, style=solid];
m2_2396 -> m2_142  [key=2, style=dotted];
m2_2394 -> m2_904  [key=2, style=dotted];
m2_2394 -> m2_2395  [key=0, style=solid];
m2_2390 -> m2_2391  [key=0, style=solid];
m2_2391 -> m2_2392  [key=0, style=solid];
m2_2392 -> m2_2409  [key=2, style=dotted];
m2_2392 -> m2_2393  [key=0, style=solid];
m2_2393 -> m2_2394  [key=0, style=solid];
m2_2408 -> m2_2388  [key=0, style=bold, color=blue];
m2_491 -> m2_492  [key=0, style=solid, color=green];
m2_491 -> m2_500  [key=0, style=solid];
m2_492 -> m2_493  [key=0, style=solid, color=green];
m2_492 -> m2_495  [key=0, style=solid];
m2_493 -> m2_491  [key=0, style=bold, color=blue];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_499  [key=0, style=solid];
m2_3661 -> m2_3662  [key=0, style=solid];
m2_3662 -> m2_3657  [key=2, style=dotted];
m2_3662 -> m2_3663  [key=0, style=solid];
m2_3663 -> m2_3661  [key=0, style=bold, color=blue];
m2_1657 -> m2_1658  [key=0, style=solid];
m2_1660 -> m2_16  [key=2, style=dotted];
m2_1660 -> m2_1661  [key=0, style=solid];
m2_1659 -> m2_29  [key=2, style=dotted];
m2_1659 -> m2_1660  [key=0, style=solid];
m2_1658 -> m2_1659  [key=0, style=solid];
m2_1661 -> m2_1657  [key=0, style=bold, color=blue];
m2_182 -> m2_183  [key=0, style=solid];
m2_89 -> m2_334  [key=0, style=solid];
m2_89 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m2_89 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_342  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m2_89 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_89 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_89 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_89 -> m2_65  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_16  [key=2, style=dotted];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m2_335 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m2_335 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m2_335 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_211  [key=2, style=dotted];
m2_336 -> m2_16  [key=2, style=dotted];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_358  [key=2, style=dotted];
m2_338 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label=hasWrittenMetadataObject];
m2_338 -> m2_16  [key=2, style=dotted];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_359  [key=2, style=dotted];
m2_339 -> m2_281  [key=0, style=bold, color=blue];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_352  [key=0, style=solid];
m2_342 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_342 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_342 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_342 -> m2_347  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_19  [key=2, style=dotted];
m2_343 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_343 -> m2_347  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_346  [key=0, style=solid];
m2_344 -> m2_20  [key=2, style=dotted];
m2_349 -> m2_350  [key=0, style=solid, color=green];
m2_349 -> m2_351  [key=0, style=solid];
m2_349 -> m2_23  [key=2, style=dotted];
m2_349 -> m2_358  [key=1, style=dashed, color=green, label=settings];
m2_349 -> m2_13  [key=2, style=dotted];
m2_349 -> m2_352  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_354  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_355  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_357  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_360  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_361  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_363  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_366  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_369  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_370  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_371  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_373  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_374  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_376  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_377  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_378  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_379  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_380  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_381  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_382  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_387  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_389  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_390  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_391  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_395  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_396  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_397  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_400  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_401  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_404  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_406  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_407  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_349 -> m2_408  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_350 -> m2_342  [key=0, style=solid];
m2_350 -> m2_24  [key=2, style=dotted];
m2_350 -> m2_351  [key=0, style=solid, color=green];
m2_350 -> m2_340  [key=2, style=dotted, color=green];
m2_350 -> m2_352  [key=1, style=dashed, color=green, label=customBinder];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_360  [key=2, style=dotted];
m2_352 -> m2_16  [key=2, style=dotted];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_55  [key=2, style=dotted];
m2_354 -> m2_16  [key=2, style=dotted];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_212  [key=2, style=dotted];
m2_356 -> m2_16  [key=2, style=dotted];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_258  [key=2, style=dotted];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_355  [key=0, style=solid];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_348 -> m2_349  [key=0, style=solid];
m2_351 -> m2_357  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_265  [key=2, style=dotted];
m2_357 -> m2_89  [key=0, style=bold, color=blue];
m2_357 -> m2_358  [key=0, style=solid, color=green];
m2_357 -> m2_341  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_19  [key=2, style=dotted];
m2_7 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_7 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=contract];
m2_10 -> m2_16  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_22  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=2, style=dotted];
m2_9 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_11  [key=0, style=solid];
m2_9 -> m2_16  [key=0, style=solid];
m2_9 -> m2_21  [key=2, style=dotted];
m2_8 -> m2_12  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=0, style=solid];
m2_8 -> m2_20  [key=2, style=dotted];
m2_11 -> m2_7  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_99 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_99 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_99 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_3310 -> m2_3311  [key=0, style=solid];
m2_3311 -> m2_25  [key=2, style=dotted];
m2_3311 -> m2_3312  [key=0, style=solid];
m2_3311 -> m2_3313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3312 -> m2_3310  [key=0, style=bold, color=blue];
m2_3772 -> m2_3773  [key=0, style=solid];
m2_3779 -> m2_16  [key=2, style=dotted];
m2_3779 -> m2_3780  [key=0, style=solid];
m2_3779 -> m2_1484  [key=2, style=dotted];
m2_3773 -> m2_3779  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3773 -> m2_756  [key=2, style=dotted];
m2_3773 -> m2_3774  [key=0, style=solid];
m2_3773 -> m2_3776  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3778 -> m2_3779  [key=0, style=solid];
m2_3778 -> m2_114  [key=2, style=dotted];
m2_3775 -> m2_13  [key=2, style=dotted];
m2_3775 -> m2_3778  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3775 -> m2_3776  [key=0, style=solid];
m2_3776 -> m2_12  [key=2, style=dotted];
m2_3776 -> m2_3778  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3776 -> m2_541  [key=2, style=dotted];
m2_3776 -> m2_3777  [key=0, style=solid];
m2_3774 -> m2_3775  [key=0, style=solid];
m2_3777 -> m2_3778  [key=0, style=solid];
m2_3777 -> m2_142  [key=2, style=dotted];
m2_3780 -> m2_3772  [key=0, style=bold, color=blue];
m2_1705 -> m2_1706  [key=0, style=solid];
m2_1710 -> m2_16  [key=2, style=dotted];
m2_1710 -> m2_1710  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1710 -> m2_1711  [key=0, style=solid];
m2_1710 -> m2_1712  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1711 -> m2_16  [key=2, style=dotted];
m2_1711 -> m2_1712  [key=0, style=solid];
m2_1712 -> m2_16  [key=2, style=dotted];
m2_1712 -> m2_1712  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1712 -> m2_1713  [key=0, style=solid];
m2_1713 -> m2_16  [key=2, style=dotted];
m2_1713 -> m2_1714  [key=0, style=solid];
m2_1709 -> m2_29  [key=2, style=dotted];
m2_1709 -> m2_1710  [key=0, style=solid];
m2_1706 -> m2_1710  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m2_1706 -> m2_1707  [key=0, style=solid];
m2_1706 -> m2_1715  [key=2, style=dotted];
m2_1707 -> m2_1709  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1707 -> m2_1708  [key=0, style=solid];
m2_1707 -> m2_141  [key=2, style=dotted];
m2_1708 -> m2_1709  [key=0, style=solid];
m2_1708 -> m2_142  [key=2, style=dotted];
m2_1714 -> m2_1705  [key=0, style=bold, color=blue];
m2_2923 -> m2_2924  [key=0, style=solid];
m2_2924 -> m2_25  [key=2, style=dotted];
m2_2924 -> m2_2926  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2924 -> m2_2925  [key=0, style=solid];
m2_2925 -> m2_2923  [key=0, style=bold, color=blue];
m2_52 -> m2_307  [key=0, style=solid];
m2_52 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_52 -> m2_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_52 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_516 -> m2_517  [key=0, style=solid];
m2_516 -> m2_19  [key=2, style=dotted];
m2_516 -> m2_520  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_516 -> m2_522  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_3790 -> m2_3791  [key=0, style=solid];
m2_3797 -> m2_16  [key=2, style=dotted];
m2_3797 -> m2_3798  [key=0, style=solid];
m2_3797 -> m2_1484  [key=2, style=dotted];
m2_3791 -> m2_3797  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3791 -> m2_194  [key=2, style=dotted];
m2_3791 -> m2_3792  [key=0, style=solid];
m2_3791 -> m2_3794  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3796 -> m2_3797  [key=0, style=solid];
m2_3796 -> m2_114  [key=2, style=dotted];
m2_3793 -> m2_13  [key=2, style=dotted];
m2_3793 -> m2_3796  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3793 -> m2_3794  [key=0, style=solid];
m2_3794 -> m2_12  [key=2, style=dotted];
m2_3794 -> m2_3796  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3794 -> m2_541  [key=2, style=dotted];
m2_3794 -> m2_3795  [key=0, style=solid];
m2_3792 -> m2_3793  [key=0, style=solid];
m2_3795 -> m2_3796  [key=0, style=solid];
m2_3795 -> m2_142  [key=2, style=dotted];
m2_3798 -> m2_3790  [key=0, style=bold, color=blue];
m2_886 -> m2_887  [key=0, style=solid];
m2_887 -> m2_891  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_887 -> m2_888  [key=0, style=solid];
m2_888 -> m2_890  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_888 -> m2_25  [key=2, style=dotted];
m2_888 -> m2_889  [key=0, style=solid];
m2_889 -> m2_886  [key=0, style=bold, color=blue];
m2_518 -> m2_519  [key=0, style=solid];
m2_518 -> m2_53  [key=2, style=dotted];
m2_1372 -> m2_1373  [key=0, style=solid];
m2_1375 -> m2_65  [key=2, style=dotted];
m2_1375 -> m2_1376  [key=0, style=solid];
m2_1375 -> m2_1377  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1378 -> m2_65  [key=2, style=dotted];
m2_1378 -> m2_1379  [key=0, style=solid];
m2_1376 -> m2_16  [key=2, style=dotted];
m2_1376 -> m2_1377  [key=0, style=solid];
m2_1379 -> m2_16  [key=2, style=dotted];
m2_1379 -> m2_1380  [key=0, style=solid];
m2_1377 -> m2_29  [key=2, style=dotted];
m2_1377 -> m2_1378  [key=0, style=solid];
m2_1373 -> m2_1375  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1373 -> m2_1374  [key=0, style=solid];
m2_1373 -> m2_1381  [key=2, style=dotted];
m2_1374 -> m2_1375  [key=0, style=solid];
m2_1380 -> m2_1372  [key=0, style=bold, color=blue];
m2_3230 -> m2_3231  [key=0, style=solid];
m2_3235 -> m2_16  [key=2, style=dotted];
m2_3235 -> m2_3236  [key=0, style=solid];
m2_3236 -> m2_16  [key=2, style=dotted];
m2_3236 -> m2_3237  [key=0, style=solid];
m2_3236 -> m2_904  [key=2, style=dotted];
m2_3237 -> m2_16  [key=2, style=dotted];
m2_3237 -> m2_3238  [key=0, style=solid];
m2_3237 -> m2_904  [key=2, style=dotted];
m2_3234 -> m2_29  [key=2, style=dotted];
m2_3234 -> m2_3235  [key=0, style=solid];
m2_3234 -> m2_3236  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3234 -> m2_3237  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3232 -> m2_3234  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3232 -> m2_13  [key=2, style=dotted];
m2_3232 -> m2_3233  [key=0, style=solid];
m2_3232 -> m2_15  [key=2, style=dotted];
m2_3233 -> m2_3234  [key=0, style=solid];
m2_3233 -> m2_142  [key=2, style=dotted];
m2_3231 -> m2_12  [key=2, style=dotted];
m2_3231 -> m2_904  [key=2, style=dotted];
m2_3231 -> m2_3232  [key=0, style=solid];
m2_3238 -> m2_3230  [key=0, style=bold, color=blue];
m2_307 -> m2_308  [key=0, style=solid];
m2_307 -> m2_313  [key=2, style=dotted];
m2_307 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=typeName];
m2_307 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label=typeName];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_182  [key=2, style=dotted];
m2_309 -> m2_171  [key=2, style=dotted];
m2_309 -> m2_172  [key=2, style=dotted];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_53  [key=2, style=dotted];
m2_310 -> m2_16  [key=2, style=dotted];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_183  [key=2, style=dotted];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_310  [key=0, style=solid];
m2_308 -> m2_16  [key=2, style=dotted];
m2_312 -> m2_52  [key=0, style=bold, color=blue];
m2_312 -> m2_16  [key=2, style=dotted];
m2_312 -> m2_313  [key=0, style=solid];
m2_584 -> m2_585  [key=0, style=solid];
m2_586 -> m2_65  [key=2, style=dotted];
m2_586 -> m2_587  [key=0, style=solid];
m2_586 -> m2_588  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_588 -> m2_16  [key=2, style=dotted];
m2_588 -> m2_589  [key=0, style=solid];
m2_585 -> m2_586  [key=0, style=solid];
m2_585 -> m2_590  [key=2, style=dotted];
m2_585 -> m2_591  [key=2, style=dotted];
m2_587 -> m2_588  [key=0, style=solid];
m2_589 -> m2_584  [key=0, style=bold, color=blue];
m2_2740 -> m2_2741  [key=0, style=solid];
m2_2745 -> m2_16  [key=2, style=dotted];
m2_2745 -> m2_2746  [key=0, style=solid];
m2_2746 -> m2_16  [key=2, style=dotted];
m2_2746 -> m2_2747  [key=0, style=solid];
m2_2747 -> m2_16  [key=2, style=dotted];
m2_2747 -> m2_2748  [key=0, style=solid];
m2_2748 -> m2_16  [key=2, style=dotted];
m2_2748 -> m2_2749  [key=0, style=solid];
m2_2749 -> m2_16  [key=2, style=dotted];
m2_2749 -> m2_2750  [key=0, style=solid];
m2_2744 -> m2_29  [key=2, style=dotted];
m2_2744 -> m2_2745  [key=0, style=solid];
m2_2744 -> m2_2746  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2744 -> m2_2747  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2744 -> m2_2748  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2744 -> m2_2749  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2741 -> m2_2745  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2741 -> m2_2746  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2741 -> m2_2747  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2741 -> m2_2748  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2741 -> m2_2749  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2741 -> m2_2742  [key=0, style=solid];
m2_2741 -> m2_2751  [key=2, style=dotted];
m2_2742 -> m2_2744  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2742 -> m2_2743  [key=0, style=solid];
m2_2742 -> m2_141  [key=2, style=dotted];
m2_2743 -> m2_2744  [key=0, style=solid];
m2_2743 -> m2_142  [key=2, style=dotted];
m2_2750 -> m2_2740  [key=0, style=bold, color=blue];
m2_3590 -> m2_3591  [key=0, style=solid];
m2_3593 -> m2_16  [key=2, style=dotted];
m2_3593 -> m2_3594  [key=0, style=solid];
m2_3596 -> m2_16  [key=2, style=dotted];
m2_3596 -> m2_3597  [key=0, style=solid];
m2_3597 -> m2_16  [key=2, style=dotted];
m2_3597 -> m2_3598  [key=0, style=solid];
m2_3592 -> m2_3593  [key=0, style=solid];
m2_3592 -> m2_13  [key=2, style=dotted];
m2_3592 -> m2_346  [key=2, style=dotted];
m2_3592 -> m2_114  [key=2, style=dotted];
m2_3592 -> m2_3594  [key=1, style=dashed, color=darkseagreen4, label=people];
m2_3592 -> m2_3595  [key=1, style=dashed, color=darkseagreen4, label=people];
m2_3594 -> m2_3596  [key=1, style=dashed, color=darkseagreen4, label=john];
m2_3594 -> m2_3597  [key=1, style=dashed, color=darkseagreen4, label=john];
m2_3594 -> m2_3595  [key=0, style=solid];
m2_3595 -> m2_3596  [key=0, style=solid];
m2_3595 -> m2_3597  [key=1, style=dashed, color=darkseagreen4, label=jane];
m2_3591 -> m2_3592  [key=0, style=solid];
m2_3598 -> m2_3590  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract"];
m2_38 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_38 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_38 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_38 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_38 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_38 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_38 -> m2_36  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_48  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_50  [key=2, style=dotted];
m2_40 -> m2_29  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_51  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_52  [key=2, style=dotted];
m2_43 -> m2_29  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_53  [key=2, style=dotted];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_54  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_55  [key=2, style=dotted];
m2_46 -> m2_29  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_54  [key=2, style=dotted];
m2_48 -> m2_51  [key=2, style=dotted];
m2_48 -> m2_52  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_48  [key=0, style=solid];
m2_41 -> m2_39  [key=0, style=bold, color=blue];
m2_47 -> m2_49  [key=0, style=solid];
m2_47 -> m2_16  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_49 -> m2_38  [key=0, style=bold, color=blue];
m2_49 -> m2_16  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_1593 -> m2_1594  [key=0, style=solid];
m2_1594 -> m2_1598  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1594 -> m2_1595  [key=0, style=solid];
m2_1595 -> m2_1597  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1595 -> m2_25  [key=2, style=dotted];
m2_1595 -> m2_1596  [key=0, style=solid];
m2_1596 -> m2_1593  [key=0, style=bold, color=blue];
m2_203 -> m2_29  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_3386 -> m2_3387  [key=0, style=solid];
m2_3389 -> m2_16  [key=2, style=dotted];
m2_3389 -> m2_3390  [key=0, style=solid];
m2_3390 -> m2_16  [key=2, style=dotted];
m2_3390 -> m2_3391  [key=0, style=solid];
m2_3388 -> m2_29  [key=2, style=dotted];
m2_3388 -> m2_3389  [key=0, style=solid];
m2_3388 -> m2_3390  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_3387 -> m2_3388  [key=0, style=solid];
m2_3391 -> m2_3386  [key=0, style=bold, color=blue];
m2_3884 -> m2_3885  [key=0, style=solid];
m2_3885 -> m2_2364  [key=2, style=dotted];
m2_3885 -> m2_3886  [key=0, style=solid];
m2_3885 -> m2_3888  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m2_3885 -> m2_3891  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m2_3886 -> m2_3887  [key=0, style=solid];
m2_3886 -> m2_3888  [key=0, style=solid];
m2_3888 -> m2_3889  [key=0, style=solid];
m2_3888 -> m2_3895  [key=2, style=dotted];
m2_3888 -> m2_3896  [key=2, style=dotted];
m2_3888 -> m2_3892  [key=1, style=dashed, color=darkseagreen4, label=address];
m2_3888 -> m2_3893  [key=1, style=dashed, color=darkseagreen4, label=address];
m2_3891 -> m2_3891  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m2_3891 -> m2_3892  [key=0, style=solid];
m2_3891 -> m2_3893  [key=0, style=solid];
m2_3891 -> m2_3897  [key=2, style=dotted];
m2_3891 -> m2_3896  [key=2, style=dotted];
m2_3891 -> m2_3898  [key=2, style=dotted];
m2_3887 -> m2_3894  [key=0, style=solid];
m2_3889 -> m2_3891  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m2_3889 -> m2_3890  [key=0, style=solid];
m2_3892 -> m2_3894  [key=0, style=solid];
m2_3892 -> m2_3899  [key=2, style=dotted];
m2_3893 -> m2_3894  [key=0, style=solid];
m2_3893 -> m2_3900  [key=2, style=dotted];
m2_3890 -> m2_3891  [key=0, style=solid];
m2_3894 -> m2_3884  [key=0, style=bold, color=blue];
m2_1635 -> m2_1636  [key=0, style=solid];
m2_1640 -> m2_274  [key=2, style=dotted];
m2_1640 -> m2_1641  [key=0, style=solid];
m2_1640 -> m2_1260  [key=2, style=dotted];
m2_1637 -> m2_29  [key=2, style=dotted];
m2_1637 -> m2_1638  [key=0, style=solid];
m2_1639 -> m2_1640  [key=0, style=solid];
m2_1636 -> m2_1637  [key=0, style=solid];
m2_1638 -> m2_1639  [key=0, style=solid];
m2_1638 -> m2_1641  [key=0, style=solid];
m2_1638 -> m2_1259  [key=2, style=dotted];
m2_1641 -> m2_1635  [key=0, style=bold, color=blue];
m2_361 -> m2_16  [key=2, style=dotted];
m2_361 -> m2_362  [key=0, style=solid, color=red];
m2_361 -> m2_211  [key=2, style=dotted, color=red];
m2_363 -> m2_16  [key=2, style=dotted];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_358  [key=2, style=dotted];
m2_363 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label=hasWrittenMetadataObject];
m2_365 -> m2_16  [key=2, style=dotted];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_345  [key=2, style=dotted];
m2_365 -> m2_367  [key=0, style=solid];
m2_367 -> m2_16  [key=2, style=dotted];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> m2_265  [key=2, style=dotted];
m2_369 -> m2_16  [key=2, style=dotted];
m2_369 -> m2_370  [key=0, style=solid];
m2_369 -> m2_90  [key=0, style=bold, color=blue];
m2_371 -> m2_16  [key=2, style=dotted];
m2_371 -> m2_372  [key=0, style=solid, color=red];
m2_371 -> m2_374  [key=1, style=dashed, color=red, label=dimension];
m2_371 -> m2_378  [key=1, style=dashed, color=red, label=dimension];
m2_371 -> m2_379  [key=1, style=dashed, color=red, label=dimension];
m2_371 -> m2_380  [key=1, style=dashed, color=red, label=dimension];
m2_373 -> m2_16  [key=2, style=dotted];
m2_373 -> m2_374  [key=0, style=solid];
m2_373 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_373 -> m2_376  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_375 -> m2_16  [key=2, style=dotted];
m2_375 -> m2_376  [key=0, style=solid];
m2_377 -> m2_16  [key=2, style=dotted];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_359  [key=2, style=dotted];
m2_379 -> m2_16  [key=2, style=dotted];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_395  [key=0, style=solid];
m2_379 -> m2_398  [key=2, style=dotted];
m2_381 -> m2_16  [key=2, style=dotted];
m2_381 -> m2_382  [key=0, style=solid, color=red];
m2_383 -> m2_16  [key=2, style=dotted];
m2_383 -> m2_384  [key=0, style=solid];
m2_383 -> m2_399  [key=2, style=dotted];
m2_383 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_383 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_383 -> m2_387  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_383 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_385 -> m2_16  [key=2, style=dotted];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_387  [key=0, style=solid];
m2_385 -> m2_20  [key=2, style=dotted];
m2_387 -> m2_16  [key=2, style=dotted];
m2_387 -> m2_388  [key=0, style=solid];
m2_387 -> m2_389  [key=0, style=solid];
m2_387 -> m2_394  [key=0, style=solid];
m2_387 -> m2_138  [key=2, style=dotted];
m2_389 -> m2_16  [key=2, style=dotted];
m2_389 -> m2_390  [key=0, style=solid];
m2_391 -> m2_16  [key=2, style=dotted];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_394  [key=0, style=solid];
m2_391 -> m2_24  [key=2, style=dotted];
m2_393 -> m2_16  [key=2, style=dotted];
m2_393 -> m2_394  [key=0, style=solid];
m2_393 -> m2_370  [key=2, style=dotted];
m2_396 -> m2_16  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_370  [key=0, style=bold, color=blue];
m2_397 -> m2_16  [key=2, style=dotted];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_410  [key=2, style=dotted];
m2_399 -> m2_16  [key=2, style=dotted];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_410  [key=2, style=dotted];
m2_360 -> m2_361  [key=0, style=solid];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_51  [key=2, style=dotted];
m2_362 -> m2_140  [key=2, style=dotted];
m2_362 -> m2_258  [key=2, style=dotted];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_344  [key=2, style=dotted];
m2_364 -> m2_370  [key=2, style=dotted];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_55  [key=2, style=dotted];
m2_368 -> m2_369  [key=0, style=solid];
m2_368 -> m2_212  [key=2, style=dotted];
m2_370 -> m2_371  [key=0, style=solid, color=red];
m2_370 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m2_370 -> m2_377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_370 -> m2_378  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m2_370 -> m2_379  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m2_370 -> m2_381  [key=1, style=dashed, color=red, label="System.Array"];
m2_370 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m2_370 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_370 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_370 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_370 -> m2_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_370 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_370 -> m2_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_370 -> m2_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_370 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_370 -> m2_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_372 -> m2_373  [key=0, style=solid];
m2_372 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m2_372 -> m2_380  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m2_372 -> m2_381  [key=1, style=dashed, color=red, label=newIndices];
m2_372 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m2_372 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_377  [key=0, style=solid];
m2_376 -> m2_377  [key=0, style=solid];
m2_376 -> m2_374  [key=0, style=solid];
m2_376 -> m2_376  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_397  [key=2, style=dotted];
m2_378 -> m2_380  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_378 -> m2_390  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_378 -> m2_394  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_380 -> m2_381  [key=0, style=solid, color=red];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_393  [key=0, style=solid];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_19  [key=2, style=dotted];
m2_384 -> m2_387  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_384 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_389  [key=0, style=solid];
m2_386 -> m2_394  [key=0, style=solid];
m2_386 -> m2_21  [key=2, style=dotted];
m2_388 -> m2_389  [key=0, style=solid];
m2_388 -> m2_394  [key=0, style=solid];
m2_388 -> m2_22  [key=2, style=dotted];
m2_390 -> m2_391  [key=0, style=solid];
m2_390 -> m2_392  [key=0, style=solid];
m2_390 -> m2_23  [key=2, style=dotted];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_396  [key=0, style=solid];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_360  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_394 -> m2_396  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m2_394 -> m2_397  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m2_394 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m2_394 -> m2_346  [key=2, style=dotted];
m2_394 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m2_394 -> m2_379  [key=0, style=solid];
m2_394 -> m2_394  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_631 -> m2_644  [key=0, style=solid];
m2_631 -> m2_645  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_644 -> m2_645  [key=0, style=solid];
m2_645 -> m2_646  [key=0, style=solid];
m2_646 -> m2_631  [key=0, style=bold, color=blue];
m2_2465 -> m2_2466  [key=0, style=solid];
m2_2470 -> m2_16  [key=2, style=dotted];
m2_2470 -> m2_2471  [key=0, style=solid];
m2_2471 -> m2_16  [key=2, style=dotted];
m2_2471 -> m2_2472  [key=0, style=solid];
m2_2469 -> m2_2470  [key=0, style=solid];
m2_2469 -> m2_2471  [key=1, style=dashed, color=darkseagreen4, label=meh];
m2_2469 -> m2_114  [key=2, style=dotted];
m2_2467 -> m2_13  [key=2, style=dotted];
m2_2467 -> m2_2469  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_2467 -> m2_2468  [key=0, style=solid];
m2_2468 -> m2_2469  [key=0, style=solid];
m2_2468 -> m2_15  [key=2, style=dotted];
m2_2466 -> m2_2467  [key=0, style=solid];
m2_2466 -> m2_2468  [key=1, style=dashed, color=darkseagreen4, label=derived];
m2_2466 -> m2_2457  [key=2, style=dotted];
m2_2472 -> m2_2465  [key=0, style=bold, color=blue];
m2_1621 -> m2_1622  [key=0, style=solid];
m2_1622 -> m2_1626  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1622 -> m2_1623  [key=0, style=solid];
m2_1623 -> m2_1625  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1623 -> m2_25  [key=2, style=dotted];
m2_1623 -> m2_1624  [key=0, style=solid];
m2_1624 -> m2_1621  [key=0, style=bold, color=blue];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_212  [key=0, style=bold, color=blue];
m2_3562 -> m2_3563  [key=0, style=solid];
m2_3562 -> m2_3565  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_3564 -> m2_1898  [key=2, style=dotted];
m2_3564 -> m2_3566  [key=0, style=solid];
m2_3563 -> m2_3564  [key=0, style=solid];
m2_3563 -> m2_3565  [key=0, style=solid];
m2_3565 -> m2_3566  [key=0, style=solid];
m2_3566 -> m2_3562  [key=0, style=bold, color=blue];
m2_3667 -> m2_3668  [key=0, style=solid];
m2_3668 -> m2_3657  [key=2, style=dotted];
m2_3668 -> m2_3669  [key=0, style=solid];
m2_3669 -> m2_3667  [key=0, style=bold, color=blue];
m2_3360 -> m2_3361  [key=0, style=solid];
m2_3361 -> m2_3362  [key=0, style=solid];
m2_3362 -> m2_3360  [key=0, style=bold, color=blue];
m2_2646 -> m2_2647  [key=0, style=solid];
m2_2648 -> m2_12  [key=2, style=dotted];
m2_2648 -> m2_2649  [key=0, style=solid];
m2_2647 -> m2_2648  [key=0, style=solid];
m2_2649 -> m2_2646  [key=0, style=bold, color=blue];
m2_2432 -> m2_2433  [key=0, style=solid];
m2_2438 -> m2_16  [key=2, style=dotted];
m2_2438 -> m2_2439  [key=0, style=solid];
m2_2437 -> m2_2438  [key=0, style=solid];
m2_2437 -> m2_2364  [key=2, style=dotted];
m2_2436 -> m2_191  [key=2, style=dotted];
m2_2436 -> m2_2437  [key=0, style=solid];
m2_2434 -> m2_2437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2434 -> m2_189  [key=2, style=dotted];
m2_2434 -> m2_190  [key=2, style=dotted];
m2_2434 -> m2_2435  [key=0, style=solid];
m2_2435 -> m2_2436  [key=0, style=solid];
m2_2433 -> m2_2434  [key=0, style=solid];
m2_2439 -> m2_2432  [key=0, style=bold, color=blue];
m2_2697 -> m2_2698  [key=0, style=solid];
m2_2698 -> m2_2699  [key=0, style=solid];
m2_2699 -> m2_2697  [key=0, style=bold, color=blue];
m2_1056 -> m2_1057  [key=0, style=solid];
m2_1061 -> m2_16  [key=2, style=dotted];
m2_1061 -> m2_1062  [key=0, style=solid];
m2_1060 -> m2_29  [key=2, style=dotted];
m2_1060 -> m2_1061  [key=0, style=solid];
m2_1057 -> m2_1061  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_1057 -> m2_1058  [key=0, style=solid];
m2_1057 -> m2_1063  [key=2, style=dotted];
m2_1058 -> m2_1060  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1058 -> m2_1059  [key=0, style=solid];
m2_1058 -> m2_1064  [key=2, style=dotted];
m2_1058 -> m2_141  [key=2, style=dotted];
m2_1059 -> m2_1060  [key=0, style=solid];
m2_1059 -> m2_142  [key=2, style=dotted];
m2_1062 -> m2_1056  [key=0, style=bold, color=blue];
m2_3392 -> m2_3393  [key=0, style=solid];
m2_3394 -> m2_65  [key=2, style=dotted];
m2_3394 -> m2_3395  [key=0, style=solid];
m2_3394 -> m2_3397  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3394 -> m2_3403  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3395 -> m2_16  [key=2, style=dotted];
m2_3395 -> m2_3396  [key=0, style=solid];
m2_3399 -> m2_16  [key=2, style=dotted];
m2_3399 -> m2_3400  [key=0, style=solid];
m2_3393 -> m2_3394  [key=0, style=solid];
m2_3393 -> m2_3360  [key=2, style=dotted];
m2_3397 -> m2_3398  [key=0, style=solid];
m2_3396 -> m2_3397  [key=0, style=solid];
m2_3398 -> m2_3399  [key=0, style=solid];
m2_3398 -> m2_3401  [key=2, style=dotted];
m2_3400 -> m2_3392  [key=0, style=bold, color=blue];
m2_1963 -> m2_1964  [key=0, style=solid];
m2_1963 -> m2_1965  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1966  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1967  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1968  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1969  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1970  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1971  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1972  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1973  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1974  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1975  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1976  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1977  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1978  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1979  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1980  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1963 -> m2_1981  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_1964 -> m2_516  [key=2, style=dotted];
m2_1964 -> m2_1965  [key=0, style=solid];
m2_1965 -> m2_517  [key=2, style=dotted];
m2_1965 -> m2_1966  [key=0, style=solid];
m2_1966 -> m2_518  [key=2, style=dotted];
m2_1966 -> m2_1967  [key=0, style=solid];
m2_1967 -> m2_518  [key=2, style=dotted];
m2_1967 -> m2_1968  [key=0, style=solid];
m2_1968 -> m2_518  [key=2, style=dotted];
m2_1968 -> m2_1969  [key=0, style=solid];
m2_1969 -> m2_518  [key=2, style=dotted];
m2_1969 -> m2_1970  [key=0, style=solid];
m2_1970 -> m2_1971  [key=0, style=solid];
m2_1970 -> m2_1983  [key=2, style=dotted];
m2_1971 -> m2_1972  [key=0, style=solid];
m2_1971 -> m2_1984  [key=2, style=dotted];
m2_1972 -> m2_1973  [key=0, style=solid];
m2_1972 -> m2_1985  [key=2, style=dotted];
m2_1973 -> m2_1974  [key=0, style=solid];
m2_1973 -> m2_1986  [key=2, style=dotted];
m2_1974 -> m2_1975  [key=0, style=solid];
m2_1974 -> m2_1987  [key=2, style=dotted];
m2_1975 -> m2_1976  [key=0, style=solid];
m2_1975 -> m2_1988  [key=2, style=dotted];
m2_1976 -> m2_1977  [key=0, style=solid];
m2_1976 -> m2_1989  [key=2, style=dotted];
m2_1977 -> m2_1978  [key=0, style=solid];
m2_1977 -> m2_1990  [key=2, style=dotted];
m2_1978 -> m2_1979  [key=0, style=solid];
m2_1978 -> m2_1991  [key=2, style=dotted];
m2_1979 -> m2_1980  [key=0, style=solid];
m2_1979 -> m2_1992  [key=2, style=dotted];
m2_1980 -> m2_1981  [key=0, style=solid];
m2_1980 -> m2_1993  [key=2, style=dotted];
m2_1981 -> m2_1982  [key=0, style=solid];
m2_1981 -> m2_1994  [key=2, style=dotted];
m2_1982 -> m2_1963  [key=0, style=bold, color=blue];
m2_167 -> m2_16  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_475 -> m2_476  [key=0, style=solid];
m2_477 -> m2_65  [key=2, style=dotted];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_479  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_480 -> m2_16  [key=2, style=dotted];
m2_480 -> m2_480  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m2_480 -> m2_481  [key=0, style=solid, color=red];
m2_480 -> m2_482  [key=0, style=solid, color=red];
m2_480 -> m2_135  [key=2, style=dotted, color=red];
m2_480 -> m2_36  [key=2, style=dotted, color=red];
m2_480 -> m2_484  [key=2, style=dotted, color=red];
m2_480 -> m2_137  [key=2, style=dotted, color=red];
m2_478 -> m2_16  [key=2, style=dotted];
m2_478 -> m2_479  [key=0, style=solid];
m2_478 -> m2_480  [key=0, style=solid, color=red];
m2_481 -> m2_16  [key=2, style=dotted];
m2_481 -> m2_481  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_483  [key=0, style=solid];
m2_479 -> m2_29  [key=2, style=dotted];
m2_479 -> m2_480  [key=0, style=solid];
m2_479 -> m2_483  [key=0, style=solid];
m2_476 -> m2_477  [key=0, style=solid];
m2_476 -> m2_480  [key=1, style=dashed, color=red, label=object];
m2_476 -> m2_483  [key=2, style=dotted];
m2_476 -> m2_478  [key=0, style=solid];
m2_482 -> m2_475  [key=0, style=bold, color=blue];
m2_482 -> m2_483  [key=0, style=solid];
m2_2956 -> m2_2957  [key=0, style=solid];
m2_2959 -> m2_16  [key=2, style=dotted];
m2_2959 -> m2_2960  [key=0, style=solid];
m2_2960 -> m2_16  [key=2, style=dotted];
m2_2960 -> m2_2961  [key=0, style=solid];
m2_2958 -> m2_2959  [key=0, style=solid];
m2_2958 -> m2_2960  [key=1, style=dashed, color=darkseagreen4, label=dict];
m2_2958 -> m2_189  [key=2, style=dotted];
m2_2958 -> m2_190  [key=2, style=dotted];
m2_2958 -> m2_2364  [key=2, style=dotted];
m2_2957 -> m2_13  [key=2, style=dotted];
m2_2957 -> m2_2958  [key=0, style=solid];
m2_2957 -> m2_634  [key=2, style=dotted];
m2_2961 -> m2_2956  [key=0, style=bold, color=blue];
m2_202 -> m2_65  [key=2, style=dotted];
m2_202 -> m2_16  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_206  [key=2, style=dotted];
m2_3239 -> m2_3240  [key=0, style=solid];
m2_3241 -> m2_16  [key=2, style=dotted];
m2_3241 -> m2_3242  [key=0, style=solid];
m2_3240 -> m2_3241  [key=0, style=solid];
m2_3240 -> m2_191  [key=2, style=dotted];
m2_3240 -> m2_189  [key=2, style=dotted];
m2_3240 -> m2_190  [key=2, style=dotted];
m2_3240 -> m2_2813  [key=2, style=dotted];
m2_3242 -> m2_3239  [key=0, style=bold, color=blue];
m2_3350 -> m2_3351  [key=0, style=solid];
m2_3352 -> m2_16  [key=2, style=dotted];
m2_3352 -> m2_3352  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_3352 -> m2_3353  [key=0, style=solid];
m2_3353 -> m2_16  [key=2, style=dotted];
m2_3353 -> m2_3353  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_3353 -> m2_3354  [key=0, style=solid];
m2_3351 -> m2_29  [key=2, style=dotted];
m2_3351 -> m2_3352  [key=0, style=solid];
m2_3354 -> m2_3350  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_25  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_31  [key=2, style=dotted];
m2_28 -> m2_26  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_26  [key=0, style=bold, color=blue];
m2_30 -> m2_31  [key=0, style=solid];
m2_1890 -> m2_1891  [key=0, style=solid];
m2_1891 -> m2_1890  [key=0, style=bold, color=blue];
m2_757 -> m2_758  [key=0, style=solid];
m2_760 -> m2_16  [key=2, style=dotted];
m2_760 -> m2_761  [key=0, style=solid];
m2_761 -> m2_16  [key=2, style=dotted];
m2_761 -> m2_762  [key=0, style=solid];
m2_761 -> m2_764  [key=2, style=dotted];
m2_762 -> m2_16  [key=2, style=dotted];
m2_762 -> m2_763  [key=0, style=solid];
m2_759 -> m2_760  [key=0, style=solid];
m2_759 -> m2_761  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_759 -> m2_762  [key=1, style=dashed, color=darkseagreen4, label=p];
m2_759 -> m2_738  [key=2, style=dotted];
m2_758 -> m2_759  [key=0, style=solid];
m2_763 -> m2_757  [key=0, style=bold, color=blue];
m2_1311 -> m2_1312  [key=0, style=solid];
m2_1312 -> m2_904  [key=2, style=dotted];
m2_1312 -> m2_1313  [key=0, style=solid];
m2_1312 -> m2_1315  [key=2, style=dotted];
m2_1313 -> m2_1314  [key=0, style=solid];
m2_1314 -> m2_1311  [key=0, style=bold, color=blue];
m2_571 -> m2_572  [key=0, style=solid];
m2_571 -> m2_575  [key=2, style=dotted];
m2_571 -> m2_171  [key=2, style=dotted];
m2_571 -> m2_172  [key=2, style=dotted];
m2_1365 -> m2_1366  [key=0, style=solid];
m2_1370 -> m2_274  [key=2, style=dotted];
m2_1370 -> m2_1371  [key=0, style=solid];
m2_1370 -> m2_1260  [key=2, style=dotted];
m2_1367 -> m2_29  [key=2, style=dotted];
m2_1367 -> m2_1368  [key=0, style=solid];
m2_1369 -> m2_1370  [key=0, style=solid];
m2_1366 -> m2_1367  [key=0, style=solid];
m2_1368 -> m2_1369  [key=0, style=solid];
m2_1368 -> m2_1371  [key=0, style=solid];
m2_1368 -> m2_1259  [key=2, style=dotted];
m2_1371 -> m2_1365  [key=0, style=bold, color=blue];
m2_1268 -> m2_1269  [key=0, style=solid];
m2_1273 -> m2_274  [key=2, style=dotted];
m2_1273 -> m2_1274  [key=0, style=solid];
m2_1273 -> m2_1260  [key=2, style=dotted];
m2_1270 -> m2_29  [key=2, style=dotted];
m2_1270 -> m2_1271  [key=0, style=solid];
m2_1272 -> m2_1273  [key=0, style=solid];
m2_1269 -> m2_1270  [key=0, style=solid];
m2_1271 -> m2_1272  [key=0, style=solid];
m2_1271 -> m2_1274  [key=0, style=solid];
m2_1271 -> m2_1259  [key=2, style=dotted];
m2_1274 -> m2_1268  [key=0, style=bold, color=blue];
m2_1261 -> m2_1262  [key=0, style=solid];
m2_1262 -> m2_1264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1262 -> m2_25  [key=2, style=dotted];
m2_1262 -> m2_1263  [key=0, style=solid];
m2_1263 -> m2_1261  [key=0, style=bold, color=blue];
m2_568 -> m2_573  [key=0, style=solid];
m2_2476 -> m2_2477  [key=0, style=solid];
m2_2477 -> m2_502  [key=2, style=dotted];
m2_2477 -> m2_2478  [key=0, style=solid];
m2_2478 -> m2_2476  [key=0, style=bold, color=blue];
m2_3697 -> m2_3698  [key=0, style=solid];
m2_3698 -> m2_3657  [key=2, style=dotted];
m2_3698 -> m2_3699  [key=0, style=solid];
m2_3699 -> m2_3697  [key=0, style=bold, color=blue];
m2_3070 -> m2_3071  [key=0, style=solid];
m2_3074 -> m2_65  [key=2, style=dotted];
m2_3074 -> m2_3075  [key=0, style=solid];
m2_3076 -> m2_16  [key=2, style=dotted];
m2_3076 -> m2_3077  [key=0, style=solid];
m2_3075 -> m2_29  [key=2, style=dotted];
m2_3075 -> m2_3076  [key=0, style=solid];
m2_3071 -> m2_3074  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_3071 -> m2_3076  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_3071 -> m2_3072  [key=0, style=solid];
m2_3071 -> m2_3078  [key=2, style=dotted];
m2_3071 -> m2_3073  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_3073 -> m2_3074  [key=0, style=solid];
m2_3072 -> m2_3073  [key=0, style=solid];
m2_3077 -> m2_3070  [key=0, style=bold, color=blue];
m2_1485 -> m2_1486  [key=0, style=solid];
m2_1488 -> m2_16  [key=2, style=dotted];
m2_1488 -> m2_1489  [key=0, style=solid];
m2_1489 -> m2_16  [key=2, style=dotted];
m2_1489 -> m2_1490  [key=0, style=solid];
m2_1489 -> m2_904  [key=2, style=dotted];
m2_1490 -> m2_16  [key=2, style=dotted];
m2_1490 -> m2_1491  [key=0, style=solid];
m2_1491 -> m2_16  [key=2, style=dotted];
m2_1491 -> m2_1492  [key=0, style=solid];
m2_1492 -> m2_16  [key=2, style=dotted];
m2_1492 -> m2_1493  [key=0, style=solid];
m2_1493 -> m2_16  [key=2, style=dotted];
m2_1493 -> m2_1494  [key=0, style=solid];
m2_1487 -> m2_1488  [key=0, style=solid];
m2_1487 -> m2_1489  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_1487 -> m2_1490  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_1487 -> m2_1491  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_1487 -> m2_1492  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_1487 -> m2_1493  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m2_1487 -> m2_738  [key=2, style=dotted];
m2_1486 -> m2_1487  [key=0, style=solid];
m2_1494 -> m2_1485  [key=0, style=bold, color=blue];
m2_729 -> m2_730  [key=0, style=solid];
m2_731 -> m2_65  [key=2, style=dotted];
m2_731 -> m2_732  [key=0, style=solid];
m2_731 -> m2_735  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_733 -> m2_16  [key=2, style=dotted];
m2_733 -> m2_734  [key=0, style=solid];
m2_734 -> m2_16  [key=2, style=dotted];
m2_734 -> m2_735  [key=0, style=solid];
m2_730 -> m2_731  [key=0, style=solid];
m2_730 -> m2_733  [key=1, style=dashed, color=darkseagreen4, label=store];
m2_730 -> m2_734  [key=1, style=dashed, color=darkseagreen4, label=store];
m2_730 -> m2_737  [key=2, style=dotted];
m2_732 -> m2_733  [key=0, style=solid];
m2_732 -> m2_734  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m2_732 -> m2_738  [key=2, style=dotted];
m2_735 -> m2_736  [key=0, style=solid];
m2_735 -> m2_739  [key=2, style=dotted];
m2_736 -> m2_729  [key=0, style=bold, color=blue];
m2_3267 -> m2_3268  [key=0, style=solid];
m2_3268 -> m2_112  [key=2, style=dotted];
m2_3268 -> m2_3269  [key=0, style=solid];
m2_3268 -> m2_3272  [key=2, style=dotted];
m2_3268 -> m2_3273  [key=2, style=dotted];
m2_3270 -> m2_142  [key=2, style=dotted];
m2_3270 -> m2_3271  [key=0, style=solid];
m2_3269 -> m2_141  [key=2, style=dotted];
m2_3269 -> m2_3270  [key=0, style=solid];
m2_3271 -> m2_3267  [key=0, style=bold, color=blue];
m2_2526 -> m2_2527  [key=0, style=solid];
m2_2528 -> m2_16  [key=2, style=dotted];
m2_2528 -> m2_2529  [key=0, style=solid];
m2_2529 -> m2_16  [key=2, style=dotted];
m2_2529 -> m2_2530  [key=0, style=solid];
m2_2530 -> m2_16  [key=2, style=dotted];
m2_2530 -> m2_2531  [key=0, style=solid];
m2_2527 -> m2_29  [key=2, style=dotted];
m2_2527 -> m2_2528  [key=0, style=solid];
m2_2527 -> m2_2529  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2527 -> m2_2530  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2531 -> m2_2526  [key=0, style=bold, color=blue];
m2_990 -> m2_991  [key=0, style=solid];
m2_996 -> m2_65  [key=2, style=dotted];
m2_996 -> m2_997  [key=0, style=solid];
m2_998 -> m2_16  [key=2, style=dotted];
m2_998 -> m2_999  [key=0, style=solid];
m2_999 -> m2_16  [key=2, style=dotted];
m2_999 -> m2_1000  [key=0, style=solid];
m2_1000 -> m2_16  [key=2, style=dotted];
m2_1000 -> m2_1001  [key=0, style=solid];
m2_1001 -> m2_16  [key=2, style=dotted];
m2_1001 -> m2_1002  [key=0, style=solid];
m2_1002 -> m2_16  [key=2, style=dotted];
m2_1002 -> m2_1003  [key=0, style=solid];
m2_1003 -> m2_16  [key=2, style=dotted];
m2_1003 -> m2_1004  [key=0, style=solid];
m2_1004 -> m2_16  [key=2, style=dotted];
m2_1004 -> m2_1005  [key=0, style=solid];
m2_997 -> m2_29  [key=2, style=dotted];
m2_997 -> m2_998  [key=0, style=solid];
m2_997 -> m2_999  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_997 -> m2_1000  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_997 -> m2_1001  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_997 -> m2_1002  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_997 -> m2_1003  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_997 -> m2_1004  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m2_991 -> m2_996  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_991 -> m2_992  [key=0, style=solid];
m2_991 -> m2_1006  [key=2, style=dotted];
m2_991 -> m2_993  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_991 -> m2_994  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_991 -> m2_995  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_995 -> m2_996  [key=0, style=solid];
m2_995 -> m2_140  [key=2, style=dotted];
m2_992 -> m2_993  [key=0, style=solid];
m2_993 -> m2_140  [key=2, style=dotted];
m2_993 -> m2_994  [key=0, style=solid];
m2_994 -> m2_995  [key=0, style=solid];
m2_994 -> m2_140  [key=2, style=dotted];
m2_1005 -> m2_990  [key=0, style=bold, color=blue];
m2_2047 -> m2_2048  [key=0, style=solid];
m2_2062 -> m2_16  [key=2, style=dotted];
m2_2062 -> m2_2063  [key=0, style=solid];
m2_2060 -> m2_16  [key=2, style=dotted];
m2_2060 -> m2_2061  [key=0, style=solid];
m2_2061 -> m2_16  [key=2, style=dotted];
m2_2061 -> m2_2062  [key=0, style=solid];
m2_2063 -> m2_16  [key=2, style=dotted];
m2_2063 -> m2_2064  [key=0, style=solid];
m2_2064 -> m2_16  [key=2, style=dotted];
m2_2064 -> m2_2065  [key=0, style=solid];
m2_2065 -> m2_16  [key=2, style=dotted];
m2_2065 -> m2_2066  [key=0, style=solid];
m2_2059 -> m2_29  [key=2, style=dotted];
m2_2059 -> m2_2062  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2059 -> m2_2060  [key=0, style=solid];
m2_2059 -> m2_2061  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2059 -> m2_2063  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2059 -> m2_2064  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2059 -> m2_2065  [key=1, style=dashed, color=darkseagreen4, label=o2];
m2_2053 -> m2_2062  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_2053 -> m2_912  [key=2, style=dotted];
m2_2053 -> m2_194  [key=2, style=dotted];
m2_2053 -> m2_2054  [key=0, style=solid];
m2_2053 -> m2_2056  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m2_2058 -> m2_2059  [key=0, style=solid];
m2_2058 -> m2_142  [key=2, style=dotted];
m2_2057 -> m2_2059  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2057 -> m2_13  [key=2, style=dotted];
m2_2057 -> m2_2058  [key=0, style=solid];
m2_2057 -> m2_15  [key=2, style=dotted];
m2_2049 -> m2_904  [key=2, style=dotted];
m2_2049 -> m2_2050  [key=0, style=solid];
m2_2052 -> m2_2053  [key=0, style=solid];
m2_2054 -> m2_2055  [key=0, style=solid];
m2_2056 -> m2_2057  [key=0, style=solid];
m2_2056 -> m2_1956  [key=2, style=dotted];
m2_2055 -> m2_2058  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m2_2055 -> m2_2056  [key=0, style=solid];
m2_2048 -> m2_2049  [key=0, style=solid];
m2_2048 -> m2_2052  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2048 -> m2_2056  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2048 -> m2_1315  [key=2, style=dotted];
m2_2048 -> m2_2050  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2048 -> m2_2051  [key=1, style=dashed, color=darkseagreen4, label=person];
m2_2050 -> m2_2051  [key=0, style=solid];
m2_2051 -> m2_2052  [key=0, style=solid];
m2_2066 -> m2_2047  [key=0, style=bold, color=blue];
m2_3426 -> m2_3427  [key=0, style=solid];
m2_3428 -> m2_13  [key=2, style=dotted];
m2_3428 -> m2_3429  [key=0, style=solid];
m2_3428 -> m2_15  [key=2, style=dotted];
m2_3427 -> m2_3428  [key=0, style=solid];
m2_3427 -> m2_3431  [key=2, style=dotted];
m2_3429 -> m2_142  [key=2, style=dotted];
m2_3429 -> m2_3430  [key=0, style=solid];
m2_3430 -> m2_3426  [key=0, style=bold, color=blue];
m2_1137 -> m2_1138  [key=0, style=solid];
m2_1143 -> m2_16  [key=2, style=dotted];
m2_1143 -> m2_1144  [key=0, style=solid];
m2_1144 -> m2_16  [key=2, style=dotted];
m2_1144 -> m2_1145  [key=0, style=solid];
m2_1141 -> m2_16  [key=2, style=dotted];
m2_1141 -> m2_1142  [key=0, style=solid];
m2_1138 -> m2_1143  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1138 -> m2_1144  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1138 -> m2_1139  [key=0, style=solid];
m2_1138 -> m2_1108  [key=2, style=dotted];
m2_1142 -> m2_1143  [key=0, style=solid];
m2_1142 -> m2_1144  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_1142 -> m2_1146  [key=2, style=dotted];
m2_1142 -> m2_52  [key=2, style=dotted];
m2_1140 -> m2_1141  [key=0, style=solid];
m2_1140 -> m2_1142  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1140 -> m2_1146  [key=2, style=dotted];
m2_1140 -> m2_1098  [key=2, style=dotted];
m2_1139 -> m2_1140  [key=0, style=solid];
m2_1139 -> m2_1109  [key=2, style=dotted];
m2_1145 -> m2_1137  [key=0, style=bold, color=blue];
m2_2937 -> m2_2938  [key=0, style=solid];
m2_2940 -> m2_16  [key=2, style=dotted];
m2_2940 -> m2_2941  [key=0, style=solid];
m2_2943 -> m2_16  [key=2, style=dotted];
m2_2943 -> m2_2944  [key=0, style=solid];
m2_2943 -> m2_1048  [key=2, style=dotted];
m2_2939 -> m2_29  [key=2, style=dotted];
m2_2939 -> m2_2940  [key=0, style=solid];
m2_2942 -> m2_29  [key=2, style=dotted];
m2_2942 -> m2_2943  [key=0, style=solid];
m2_2941 -> m2_2942  [key=0, style=solid];
m2_2938 -> m2_2939  [key=0, style=solid];
m2_2944 -> m2_2937  [key=0, style=bold, color=blue];
m2_290 -> m2_567  [key=0, style=solid];
m2_290 -> m2_569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_290 -> m2_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_290 -> m2_341  [key=2, style=dotted];
m2_290 -> m2_291  [key=0, style=solid];
m2_569 -> m2_570  [key=0, style=solid];
m2_569 -> m2_574  [key=2, style=dotted];
m2_569 -> m2_571  [key=1, style=dashed, color=darkseagreen4, label=shouldSerialize];
m2_569 -> m2_572  [key=1, style=dashed, color=darkseagreen4, label=shouldSerialize];
m2_572 -> m2_573  [key=0, style=solid];
m2_573 -> m2_290  [key=0, style=bold, color=blue];
m2_573 -> m2_574  [key=0, style=solid];
m2_573 -> m2_578  [key=2, style=dotted];
m2_1525 -> m2_1526  [key=0, style=solid];
m2_1528 -> m2_16  [key=2, style=dotted];
m2_1528 -> m2_1529  [key=0, style=solid];
m2_1529 -> m2_16  [key=2, style=dotted];
m2_1529 -> m2_1530  [key=0, style=solid];
m2_1530 -> m2_16  [key=2, style=dotted];
m2_1530 -> m2_1531  [key=0, style=solid];
m2_1531 -> m2_16  [key=2, style=dotted];
m2_1531 -> m2_1532  [key=0, style=solid];
m2_1527 -> m2_29  [key=2, style=dotted];
m2_1527 -> m2_1528  [key=0, style=solid];
m2_1527 -> m2_1529  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_1527 -> m2_1530  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_1527 -> m2_1531  [key=1, style=dashed, color=darkseagreen4, label=content];
m2_1526 -> m2_1527  [key=0, style=solid];
m2_1532 -> m2_1525  [key=0, style=bold, color=blue];
m2_1797 -> m2_1798  [key=0, style=solid];
m2_67 -> m2_65  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m2_67 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m2_859 -> m2_65  [key=2, style=dotted];
m2_859 -> m2_860  [key=0, style=solid];
m2_859 -> m2_861  [key=2, style=dotted];
m2_1171 -> m2_65  [key=2, style=dotted];
m2_1171 -> m2_1172  [key=0, style=solid];
m2_1266 -> m2_65  [key=2, style=dotted];
m2_1266 -> m2_1267  [key=0, style=solid];
m2_3849 -> m2_65  [key=2, style=dotted];
m2_3849 -> m2_3850  [key=0, style=solid];
m2_3849 -> m2_3851  [key=2, style=dotted];
m2_34 -> m2_29  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [key=2, style=dotted];
m2_34 -> m2_37  [key=2, style=dotted];
m2_70 -> m2_29  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_84  [key=0, style=solid];
m2_70 -> m2_90  [key=2, style=dotted];
m2_73 -> m2_29  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_92 -> m2_29  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_891 -> m2_29  [key=2, style=dotted];
m2_891 -> m2_892  [key=0, style=solid];
m2_1557 -> m2_29  [key=2, style=dotted];
m2_1557 -> m2_1558  [key=0, style=solid];
m2_1584 -> m2_29  [key=2, style=dotted];
m2_1584 -> m2_1585  [key=0, style=solid];
m2_1591 -> m2_29  [key=2, style=dotted];
m2_1591 -> m2_1592  [key=0, style=solid];
m2_1598 -> m2_29  [key=2, style=dotted];
m2_1598 -> m2_1599  [key=0, style=solid];
m2_1605 -> m2_29  [key=2, style=dotted];
m2_1605 -> m2_1606  [key=0, style=solid];
m2_1612 -> m2_29  [key=2, style=dotted];
m2_1612 -> m2_1613  [key=0, style=solid];
m2_1619 -> m2_29  [key=2, style=dotted];
m2_1619 -> m2_1620  [key=0, style=solid];
m2_1626 -> m2_29  [key=2, style=dotted];
m2_1626 -> m2_1627  [key=0, style=solid];
m2_1633 -> m2_29  [key=2, style=dotted];
m2_1633 -> m2_1634  [key=0, style=solid];
m2_2226 -> m2_29  [key=2, style=dotted];
m2_2226 -> m2_2227  [key=0, style=solid];
m2_2240 -> m2_29  [key=2, style=dotted];
m2_2240 -> m2_2241  [key=0, style=solid];
m2_2342 -> m2_29  [key=2, style=dotted];
m2_2342 -> m2_2343  [key=0, style=solid];
m2_2893 -> m2_29  [key=2, style=dotted];
m2_2893 -> m2_2894  [key=0, style=solid];
m2_2907 -> m2_29  [key=2, style=dotted];
m2_2907 -> m2_2908  [key=0, style=solid];
m2_2928 -> m2_29  [key=2, style=dotted];
m2_2928 -> m2_2929  [key=0, style=solid];
m2_2935 -> m2_29  [key=2, style=dotted];
m2_2935 -> m2_2936  [key=0, style=solid];
m2_3008 -> m2_29  [key=2, style=dotted];
m2_3008 -> m2_3009  [key=0, style=solid];
m2_3014 -> m2_29  [key=2, style=dotted];
m2_3014 -> m2_3015  [key=0, style=solid];
m2_3020 -> m2_29  [key=2, style=dotted];
m2_3020 -> m2_3021  [key=0, style=solid];
m2_3030 -> m2_29  [key=2, style=dotted];
m2_3030 -> m2_3031  [key=0, style=solid];
m2_3403 -> m2_29  [key=2, style=dotted];
m2_3403 -> m2_3399  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_3403 -> m2_3404  [key=0, style=solid];
m2_3478 -> m2_29  [key=2, style=dotted];
m2_3478 -> m2_3479  [key=0, style=solid];
m2_3486 -> m2_29  [key=2, style=dotted];
m2_3486 -> m2_3487  [key=0, style=solid];
m2_3495 -> m2_29  [key=2, style=dotted];
m2_3495 -> m2_3496  [key=0, style=solid];
m2_3715 -> m2_29  [key=2, style=dotted];
m2_3715 -> m2_3716  [key=0, style=solid];
m2_3856 -> m2_29  [key=2, style=dotted];
m2_3856 -> m2_3857  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_68 -> m2_66  [key=0, style=bold, color=blue];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_70  [key=0, style=solid];
m2_90 -> m2_88  [key=0, style=bold, color=blue];
m2_90 -> m2_361  [key=0, style=solid, color=red];
m2_90 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m2_90 -> m2_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_90 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_90 -> m2_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_90 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_858 -> m2_859  [key=0, style=solid];
m2_860 -> m2_858  [key=0, style=bold, color=blue];
m2_1170 -> m2_1171  [key=0, style=solid];
m2_1170 -> m2_1173  [key=2, style=dotted];
m2_1172 -> m2_1169  [key=0, style=bold, color=blue];
m2_1265 -> m2_1266  [key=0, style=solid];
m2_1265 -> m2_1244  [key=2, style=dotted];
m2_1265 -> m2_904  [key=2, style=dotted];
m2_1267 -> m2_1264  [key=0, style=bold, color=blue];
m2_1309 -> m2_1310  [key=0, style=solid];
m2_1309 -> m2_738  [key=2, style=dotted];
m2_3848 -> m2_3849  [key=0, style=solid];
m2_3850 -> m2_3848  [key=0, style=bold, color=blue];
m2_3036 -> m2_270  [key=2, style=dotted];
m2_3036 -> m2_3037  [key=0, style=solid];
m2_32 -> m2_30  [key=0, style=bold, color=blue];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=0, style=solid];
m2_35 -> m2_33  [key=0, style=bold, color=blue];
m2_35 -> m2_19  [key=0, style=bold, color=blue];
m2_36 -> m2_37  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_84  [key=0, style=solid];
m2_69 -> m2_89  [key=2, style=dotted];
m2_71 -> m2_69  [key=0, style=bold, color=blue];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_84  [key=0, style=solid];
m2_72 -> m2_38  [key=2, style=dotted];
m2_74 -> m2_72  [key=0, style=bold, color=blue];
m2_74 -> m2_84  [key=0, style=solid];
m2_74 -> m2_91  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_205  [key=0, style=solid];
m2_91 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_91 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_91 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_91  [key=0, style=bold, color=blue];
m2_93 -> m2_501  [key=0, style=solid];
m2_93 -> m2_502  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IDictionary"];
m2_93 -> m2_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_505  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_93 -> m2_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_93 -> m2_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_93 -> m2_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_93 -> m2_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_511  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IDictionary"];
m2_93 -> m2_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_93 -> m2_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_93 -> m2_517  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m2_93 -> m2_518  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_521  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_527  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_93 -> m2_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_890 -> m2_891  [key=0, style=solid];
m2_892 -> m2_890  [key=0, style=bold, color=blue];
m2_1556 -> m2_1557  [key=0, style=solid];
m2_1558 -> m2_1556  [key=0, style=bold, color=blue];
m2_1583 -> m2_1584  [key=0, style=solid];
m2_1585 -> m2_1583  [key=0, style=bold, color=blue];
m2_1590 -> m2_1591  [key=0, style=solid];
m2_1592 -> m2_1590  [key=0, style=bold, color=blue];
m2_1597 -> m2_1598  [key=0, style=solid];
m2_1599 -> m2_1597  [key=0, style=bold, color=blue];
m2_1604 -> m2_1605  [key=0, style=solid];
m2_1606 -> m2_1604  [key=0, style=bold, color=blue];
m2_1611 -> m2_1612  [key=0, style=solid];
m2_1613 -> m2_1611  [key=0, style=bold, color=blue];
m2_1618 -> m2_1619  [key=0, style=solid];
m2_1620 -> m2_1618  [key=0, style=bold, color=blue];
m2_1625 -> m2_1626  [key=0, style=solid];
m2_1627 -> m2_1625  [key=0, style=bold, color=blue];
m2_1632 -> m2_1633  [key=0, style=solid];
m2_1634 -> m2_1632  [key=0, style=bold, color=blue];
m2_2225 -> m2_2226  [key=0, style=solid];
m2_2227 -> m2_2225  [key=0, style=bold, color=blue];
m2_2239 -> m2_2240  [key=0, style=solid];
m2_2239 -> m2_141  [key=2, style=dotted];
m2_2241 -> m2_2231  [key=0, style=bold, color=blue];
m2_2341 -> m2_2342  [key=0, style=solid];
m2_2343 -> m2_2341  [key=0, style=bold, color=blue];
m2_2892 -> m2_2893  [key=0, style=solid];
m2_2894 -> m2_2892  [key=0, style=bold, color=blue];
m2_2906 -> m2_2907  [key=0, style=solid];
m2_2908 -> m2_2906  [key=0, style=bold, color=blue];
m2_2927 -> m2_2928  [key=0, style=solid];
m2_2929 -> m2_2926  [key=0, style=bold, color=blue];
m2_2934 -> m2_2935  [key=0, style=solid];
m2_2936 -> m2_2933  [key=0, style=bold, color=blue];
m2_3007 -> m2_3008  [key=0, style=solid];
m2_3009 -> m2_3007  [key=0, style=bold, color=blue];
m2_3013 -> m2_3014  [key=0, style=solid];
m2_3015 -> m2_3013  [key=0, style=bold, color=blue];
m2_3019 -> m2_3020  [key=0, style=solid];
m2_3021 -> m2_3019  [key=0, style=bold, color=blue];
m2_3029 -> m2_3030  [key=0, style=solid];
m2_3031 -> m2_3029  [key=0, style=bold, color=blue];
m2_3402 -> m2_3403  [key=0, style=solid];
m2_3404 -> m2_3402  [key=0, style=bold, color=blue];
m2_3477 -> m2_3478  [key=0, style=solid];
m2_3479 -> m2_3477  [key=0, style=bold, color=blue];
m2_3485 -> m2_3486  [key=0, style=solid];
m2_3487 -> m2_3485  [key=0, style=bold, color=blue];
m2_3494 -> m2_3495  [key=0, style=solid];
m2_3496 -> m2_3494  [key=0, style=bold, color=blue];
m2_3714 -> m2_3715  [key=0, style=solid];
m2_3716 -> m2_3713  [key=0, style=bold, color=blue];
m2_3855 -> m2_3856  [key=0, style=solid];
m2_3857 -> m2_3855  [key=0, style=bold, color=blue];
m2_3315 -> m2_191  [key=2, style=dotted];
m2_3315 -> m2_3316  [key=0, style=solid];
m2_3315 -> m2_3320  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_1418 -> m2_13  [key=2, style=dotted];
m2_1418 -> m2_1419  [key=0, style=solid];
m2_1418 -> m2_15  [key=2, style=dotted];
m2_1666 -> m2_13  [key=2, style=dotted];
m2_1666 -> m2_1667  [key=0, style=solid];
m2_1666 -> m2_635  [key=2, style=dotted];
m2_1666 -> m2_1668  [key=2, style=dotted];
m2_1666 -> m2_541  [key=2, style=dotted];
m2_1673 -> m2_13  [key=2, style=dotted];
m2_1673 -> m2_1674  [key=0, style=solid];
m2_1673 -> m2_1668  [key=2, style=dotted];
m2_1673 -> m2_114  [key=2, style=dotted];
m2_1679 -> m2_13  [key=2, style=dotted];
m2_1679 -> m2_1680  [key=0, style=solid];
m2_1679 -> m2_1668  [key=2, style=dotted];
m2_1679 -> m2_114  [key=2, style=dotted];
m2_1685 -> m2_13  [key=2, style=dotted];
m2_1685 -> m2_1686  [key=0, style=solid];
m2_1685 -> m2_1668  [key=2, style=dotted];
m2_1685 -> m2_114  [key=2, style=dotted];
m2_1834 -> m2_13  [key=2, style=dotted];
m2_1834 -> m2_1835  [key=0, style=solid];
m2_1834 -> m2_114  [key=2, style=dotted];
m2_723 -> m2_724  [key=0, style=solid];
m2_726 -> m2_727  [key=0, style=solid];
m2_1169 -> m2_1170  [key=0, style=solid];
m2_1264 -> m2_1265  [key=0, style=solid];
m2_1308 -> m2_1309  [key=0, style=solid];
m2_1310 -> m2_1308  [key=0, style=bold, color=blue];
m2_2232 -> m2_12  [key=2, style=dotted];
m2_2232 -> m2_2233  [key=0, style=solid];
m2_2232 -> m2_2234  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2232 -> m2_2238  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2235 -> m2_12  [key=2, style=dotted];
m2_2235 -> m2_2239  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2235 -> m2_2236  [key=0, style=solid];
m2_2235 -> m2_2237  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2235 -> m2_2238  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_170 -> m2_171  [key=0, style=solid];
m2_3156 -> m2_140  [key=2, style=dotted];
m2_3156 -> m2_3157  [key=0, style=solid];
m2_3171 -> m2_140  [key=2, style=dotted];
m2_3171 -> m2_3172  [key=0, style=solid];
m2_3186 -> m2_140  [key=2, style=dotted];
m2_3186 -> m2_3187  [key=0, style=solid];
m2_3035 -> m2_3036  [key=0, style=solid];
m2_3037 -> m2_3035  [key=0, style=bold, color=blue];
m2_2238 -> m2_2239  [key=0, style=solid];
m2_2238 -> m2_633  [key=2, style=dotted];
m2_2231 -> m2_2232  [key=0, style=solid];
m2_2926 -> m2_2927  [key=0, style=solid];
m2_2933 -> m2_2934  [key=0, style=solid];
m2_3713 -> m2_3714  [key=0, style=solid];
m2_3314 -> m2_3315  [key=0, style=solid];
m2_3314 -> m2_3317  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3316 -> m2_3317  [key=0, style=solid];
m2_3320 -> m2_2326  [key=2, style=dotted];
m2_3320 -> m2_3321  [key=0, style=solid];
m2_1416 -> m2_1418  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1416 -> m2_1417  [key=0, style=solid];
m2_1416 -> m2_1402  [key=2, style=dotted];
m2_1417 -> m2_1418  [key=0, style=solid];
m2_1419 -> m2_1415  [key=0, style=bold, color=blue];
m2_1665 -> m2_1666  [key=0, style=solid];
m2_1667 -> m2_1665  [key=0, style=bold, color=blue];
m2_1672 -> m2_1673  [key=0, style=solid];
m2_1674 -> m2_1672  [key=0, style=bold, color=blue];
m2_1678 -> m2_1679  [key=0, style=solid];
m2_1680 -> m2_1678  [key=0, style=bold, color=blue];
m2_1684 -> m2_1685  [key=0, style=solid];
m2_1686 -> m2_1684  [key=0, style=bold, color=blue];
m2_1833 -> m2_1834  [key=0, style=solid];
m2_1835 -> m2_1833  [key=0, style=bold, color=blue];
m2_725 -> m2_723  [key=0, style=bold, color=blue];
m2_724 -> m2_725  [key=0, style=solid];
m2_728 -> m2_726  [key=0, style=bold, color=blue];
m2_727 -> m2_728  [key=0, style=solid];
m2_2559 -> m2_738  [key=2, style=dotted];
m2_2559 -> m2_2560  [key=0, style=solid];
m2_1655 -> m2_112  [key=2, style=dotted];
m2_1655 -> m2_1656  [key=0, style=solid];
m2_1655 -> m2_1649  [key=2, style=dotted];
m2_2233 -> m2_633  [key=2, style=dotted];
m2_2233 -> m2_2234  [key=0, style=solid];
m2_2234 -> m2_633  [key=2, style=dotted];
m2_2234 -> m2_2235  [key=0, style=solid];
m2_2236 -> m2_633  [key=2, style=dotted];
m2_2236 -> m2_2237  [key=0, style=solid];
m2_2237 -> m2_633  [key=2, style=dotted];
m2_2237 -> m2_2238  [key=0, style=solid];
m2_3301 -> m2_189  [key=2, style=dotted];
m2_3301 -> m2_190  [key=2, style=dotted];
m2_3301 -> m2_2364  [key=2, style=dotted];
m2_3301 -> m2_3302  [key=0, style=solid];
m2_3317 -> m2_189  [key=2, style=dotted];
m2_3317 -> m2_190  [key=2, style=dotted];
m2_3317 -> m2_3320  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_3317 -> m2_3318  [key=0, style=solid];
m2_3317 -> m2_3319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_3876 -> m2_52  [key=2, style=dotted];
m2_3876 -> m2_3877  [key=0, style=solid];
m2_3876 -> m2_3878  [key=2, style=dotted];
m2_3876 -> m2_3879  [key=2, style=dotted];
m2_3876 -> m2_3880  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_171 -> m2_169  [key=0, style=bold, color=blue];
m2_3609 -> m2_346  [key=2, style=dotted];
m2_3609 -> m2_3610  [key=0, style=solid];
m2_3318 -> m2_3123  [key=2, style=dotted];
m2_3318 -> m2_3319  [key=0, style=solid];
m2_3319 -> m2_3123  [key=2, style=dotted];
m2_3319 -> m2_3320  [key=0, style=solid];
m2_3157 -> m2_3158  [key=0, style=solid];
m2_3155 -> m2_3156  [key=0, style=solid];
m2_3155 -> m2_3157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3172 -> m2_3173  [key=0, style=solid];
m2_3170 -> m2_3171  [key=0, style=solid];
m2_3170 -> m2_3172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3187 -> m2_3188  [key=0, style=solid];
m2_3185 -> m2_3186  [key=0, style=solid];
m2_3185 -> m2_3187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3313 -> m2_3314  [key=0, style=solid];
m2_3321 -> m2_3313  [key=0, style=bold, color=blue];
m2_1415 -> m2_1416  [key=0, style=solid];
m2_2558 -> m2_2559  [key=0, style=solid];
m2_2560 -> m2_2558  [key=0, style=bold, color=blue];
m2_1654 -> m2_1655  [key=0, style=solid];
m2_1656 -> m2_1654  [key=0, style=bold, color=blue];
m2_1646 -> m2_1647  [key=0, style=solid];
m2_3300 -> m2_3301  [key=0, style=solid];
m2_3875 -> m2_3876  [key=0, style=solid];
m2_3302 -> m2_3300  [key=0, style=bold, color=blue];
m2_3877 -> m2_3875  [key=0, style=bold, color=blue];
m2_3608 -> m2_3609  [key=0, style=solid];
m2_3610 -> m2_3608  [key=0, style=bold, color=blue];
m2_1647 -> m2_1315  [key=2, style=dotted];
m2_1647 -> m2_1649  [key=2, style=dotted];
m2_1647 -> m2_1648  [key=0, style=solid];
m2_3158 -> m2_3155  [key=0, style=bold, color=blue];
m2_3173 -> m2_3170  [key=0, style=bold, color=blue];
m2_3188 -> m2_3185  [key=0, style=bold, color=blue];
m2_1798 -> m2_1799  [key=0, style=solid];
m2_1648 -> m2_1646  [key=0, style=bold, color=blue];
m2_1799 -> m2_1797  [key=0, style=bold, color=blue];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_196  [key=0, style=solid];
m2_193 -> m2_203  [key=2, style=dotted];
m2_3366 -> m2_3367  [key=0, style=solid];
m2_3369 -> m2_65  [key=2, style=dotted];
m2_3369 -> m2_3370  [key=0, style=solid];
m2_3372 -> m2_16  [key=2, style=dotted];
m2_3372 -> m2_3373  [key=0, style=solid];
m2_3368 -> m2_3369  [key=0, style=solid];
m2_3368 -> m2_112  [key=2, style=dotted];
m2_3368 -> m2_3370  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_3368 -> m2_3371  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_3370 -> m2_13  [key=2, style=dotted];
m2_3370 -> m2_3371  [key=0, style=solid];
m2_3370 -> m2_541  [key=2, style=dotted];
m2_3371 -> m2_3372  [key=0, style=solid];
m2_3371 -> m2_13  [key=2, style=dotted];
m2_3371 -> m2_541  [key=2, style=dotted];
m2_3367 -> m2_3368  [key=0, style=solid];
m2_3373 -> m2_3366  [key=0, style=bold, color=blue];
m2_3717 -> m2_3718  [key=0, style=solid];
m2_3720 -> m2_65  [key=2, style=dotted];
m2_3720 -> m2_3721  [key=0, style=solid];
m2_3722 -> m2_16  [key=2, style=dotted];
m2_3722 -> m2_3723  [key=0, style=solid];
m2_3721 -> m2_29  [key=2, style=dotted];
m2_3721 -> m2_3722  [key=0, style=solid];
m2_3719 -> m2_3720  [key=0, style=solid];
m2_3719 -> m2_1511  [key=2, style=dotted];
m2_3718 -> m2_3722  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m2_3718 -> m2_3719  [key=0, style=solid];
m2_3723 -> m2_3717  [key=0, style=bold, color=blue];
m2_3482 -> m2_3483  [key=0, style=solid];
m2_3483 -> m2_3485  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3483 -> m2_25  [key=2, style=dotted];
m2_3483 -> m2_3484  [key=0, style=solid];
m2_3484 -> m2_3482  [key=0, style=bold, color=blue];
m2_1147 -> m2_1148  [key=0, style=solid];
m2_1149 -> m2_1109  [key=2, style=dotted];
m2_1149 -> m2_1150  [key=0, style=solid];
m2_1151 -> m2_142  [key=2, style=dotted];
m2_1151 -> m2_1152  [key=0, style=solid];
m2_1150 -> m2_141  [key=2, style=dotted];
m2_1150 -> m2_1151  [key=0, style=solid];
m2_1148 -> m2_1149  [key=0, style=solid];
m2_1148 -> m2_1153  [key=2, style=dotted];
m2_1148 -> m2_1154  [key=2, style=dotted];
m2_1152 -> m2_1147  [key=0, style=bold, color=blue];
m2_1675 -> m2_1676  [key=0, style=solid];
m2_1676 -> m2_25  [key=2, style=dotted];
m2_1676 -> m2_1678  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1676 -> m2_1677  [key=0, style=solid];
m2_1677 -> m2_1675  [key=0, style=bold, color=blue];
m2_553 -> m2_16  [key=2, style=dotted];
m2_553 -> m2_554  [key=0, style=solid];
m2_553 -> m2_557  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_166  [key=0, style=solid];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_13  [key=2, style=dotted];
m2_166 -> m2_114  [key=2, style=dotted];
m2_166 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_166 -> m2_138  [key=0, style=bold, color=blue];
m2_165 -> m2_166  [key=0, style=solid];
m2_168 -> m2_164  [key=0, style=bold, color=blue];
m2_172 -> m2_173  [key=0, style=solid];
m2_174 -> m2_16  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_176  [key=0, style=solid];
m2_175 -> m2_16  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_36  [key=2, style=dotted];
m2_175 -> m2_182  [key=2, style=dotted];
m2_175 -> m2_171  [key=2, style=dotted];
m2_175 -> m2_172  [key=2, style=dotted];
m2_176 -> m2_16  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_51  [key=2, style=dotted];
m2_173 -> m2_29  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_173 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_173 -> m2_181  [key=2, style=dotted];
m2_173 -> m2_178  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_177 -> m2_172  [key=0, style=bold, color=blue];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_53  [key=2, style=dotted];
m2_1752 -> m2_1753  [key=0, style=solid];
m2_1760 -> m2_16  [key=2, style=dotted];
m2_1760 -> m2_1761  [key=0, style=solid];
m2_1761 -> m2_16  [key=2, style=dotted];
m2_1761 -> m2_1762  [key=0, style=solid];
m2_1762 -> m2_16  [key=2, style=dotted];
m2_1762 -> m2_1763  [key=0, style=solid];
m2_1754 -> m2_272  [key=2, style=dotted];
m2_1754 -> m2_1755  [key=0, style=solid];
m2_1758 -> m2_29  [key=2, style=dotted];
m2_1758 -> m2_1759  [key=0, style=solid];
m2_1758 -> m2_571  [key=2, style=dotted];
m2_1756 -> m2_1760  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1756 -> m2_1761  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1756 -> m2_1762  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1756 -> m2_1757  [key=0, style=solid];
m2_1756 -> m2_112  [key=2, style=dotted];
m2_1756 -> m2_1759  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m2_1757 -> m2_1760  [key=0, style=solid];
m2_1757 -> m2_1758  [key=0, style=solid];
m2_1753 -> m2_1754  [key=0, style=solid];
m2_1755 -> m2_843  [key=2, style=dotted];
m2_1755 -> m2_1756  [key=0, style=solid];
m2_1755 -> m2_1757  [key=1, style=dashed, color=darkseagreen4, label=results];
m2_1755 -> m2_248  [key=2, style=dotted];
m2_1759 -> m2_1757  [key=0, style=solid];
m2_1759 -> m2_140  [key=2, style=dotted];
m2_1763 -> m2_1752  [key=0, style=bold, color=blue];
m2_2071 -> m2_2072  [key=0, style=solid];
m2_2073 -> m2_16  [key=2, style=dotted];
m2_2073 -> m2_2074  [key=0, style=solid];
m2_2074 -> m2_16  [key=2, style=dotted];
m2_2074 -> m2_2075  [key=0, style=solid];
m2_2075 -> m2_16  [key=2, style=dotted];
m2_2075 -> m2_2076  [key=0, style=solid];
m2_2076 -> m2_16  [key=2, style=dotted];
m2_2076 -> m2_2077  [key=0, style=solid];
m2_2077 -> m2_16  [key=2, style=dotted];
m2_2077 -> m2_2078  [key=0, style=solid];
m2_2072 -> m2_29  [key=2, style=dotted];
m2_2072 -> m2_2073  [key=0, style=solid];
m2_2072 -> m2_2074  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_2072 -> m2_2075  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_2072 -> m2_2076  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_2072 -> m2_2077  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m2_2078 -> m2_2071  [key=0, style=bold, color=blue];
m2_3346 -> m2_3347  [key=0, style=solid];
m2_3348 -> m2_16  [key=2, style=dotted];
m2_3348 -> m2_3349  [key=0, style=solid];
m2_3347 -> m2_29  [key=2, style=dotted];
m2_3347 -> m2_3348  [key=0, style=solid];
m2_3349 -> m2_3346  [key=0, style=bold, color=blue];
m2_1300 -> m2_1301  [key=0, style=solid];
m2_1303 -> m2_65  [key=2, style=dotted];
m2_1303 -> m2_1304  [key=0, style=solid];
m2_1303 -> m2_1309  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m2_1301 -> m2_1303  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m2_1301 -> m2_1302  [key=0, style=solid];
m2_1301 -> m2_1306  [key=2, style=dotted];
m2_1302 -> m2_1303  [key=0, style=solid];
m2_1302 -> m2_1307  [key=2, style=dotted];
m2_1304 -> m2_1305  [key=0, style=solid];
m2_1304 -> m2_25  [key=2, style=dotted];
m2_1304 -> m2_1308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1305 -> m2_1300  [key=0, style=bold, color=blue];
m2_614 -> m2_615  [key=0, style=solid];
m2_620 -> m2_13  [key=2, style=dotted];
m2_620 -> m2_621  [key=0, style=solid];
m2_615 -> m2_12  [key=2, style=dotted];
m2_615 -> m2_616  [key=0, style=solid];
m2_615 -> m2_618  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m2_615 -> m2_624  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m2_617 -> m2_620  [key=0, style=solid];
m2_617 -> m2_618  [key=0, style=solid];
m2_621 -> m2_622  [key=0, style=solid];
m2_621 -> m2_634  [key=2, style=dotted];
m2_621 -> m2_624  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m2_621 -> m2_628  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m2_622 -> m2_635  [key=2, style=dotted];
m2_622 -> m2_623  [key=0, style=solid];
m2_622 -> m2_626  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_622 -> m2_628  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_618 -> m2_633  [key=2, style=dotted];
m2_618 -> m2_619  [key=0, style=solid];
m2_618 -> m2_631  [key=2, style=dotted];
m2_618 -> m2_632  [key=2, style=dotted];
m2_616 -> m2_617  [key=0, style=solid];
m2_616 -> m2_618  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_616 -> m2_619  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_624 -> m2_625  [key=0, style=solid];
m2_624 -> m2_637  [key=2, style=dotted];
m2_628 -> m2_642  [key=2, style=dotted];
m2_628 -> m2_641  [key=2, style=dotted];
m2_628 -> m2_629  [key=0, style=solid];
m2_619 -> m2_617  [key=0, style=solid];
m2_619 -> m2_619  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_623 -> m2_624  [key=0, style=solid];
m2_623 -> m2_636  [key=2, style=dotted];
m2_623 -> m2_625  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m2_626 -> m2_627  [key=0, style=solid];
m2_626 -> m2_639  [key=2, style=dotted];
m2_625 -> m2_626  [key=0, style=solid];
m2_625 -> m2_638  [key=2, style=dotted];
m2_627 -> m2_628  [key=0, style=solid];
m2_627 -> m2_640  [key=2, style=dotted];
m2_627 -> m2_629  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m2_629 -> m2_630  [key=0, style=solid];
m2_629 -> m2_643  [key=2, style=dotted];
m2_630 -> m2_614  [key=0, style=bold, color=blue];
m2_3676 -> m2_3677  [key=0, style=solid];
m2_3677 -> m2_3678  [key=0, style=solid];
m2_3678 -> m2_3676  [key=0, style=bold, color=blue];
m2_1866 -> m2_1869  [key=0, style=solid];
m2_1869 -> m2_1870  [key=0, style=solid];
m2_1870 -> m2_1866  [key=0, style=bold, color=blue];
m2_3026 -> m2_3027  [key=0, style=solid];
m2_3027 -> m2_3029  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3027 -> m2_25  [key=2, style=dotted];
m2_3027 -> m2_3028  [key=0, style=solid];
m2_3028 -> m2_3026  [key=0, style=bold, color=blue];
m2_1738 -> m2_1739  [key=0, style=solid];
m2_1739 -> m2_12  [key=2, style=dotted];
m2_1739 -> m2_1740  [key=0, style=solid];
m2_1739 -> m2_1741  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1739 -> m2_1742  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1740 -> m2_633  [key=2, style=dotted];
m2_1740 -> m2_1741  [key=0, style=solid];
m2_1740 -> m2_1315  [key=2, style=dotted];
m2_1741 -> m2_633  [key=2, style=dotted];
m2_1741 -> m2_1742  [key=0, style=solid];
m2_1741 -> m2_1315  [key=2, style=dotted];
m2_1742 -> m2_141  [key=2, style=dotted];
m2_1742 -> m2_1743  [key=0, style=solid];
m2_1743 -> m2_142  [key=2, style=dotted];
m2_1743 -> m2_1744  [key=0, style=solid];
m2_1744 -> m2_1738  [key=0, style=bold, color=blue];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_289  [key=0, style=solid];
m2_278 -> m2_279  [key=0, style=solid, color=green];
m2_278 -> m2_29  [key=2, style=dotted, color=green];
m2_278 -> m2_285  [key=0, style=solid];
m2_277 -> m2_278  [key=0, style=solid, color=green];
m2_277 -> m2_16  [key=2, style=dotted];
m2_277 -> m2_289  [key=0, style=solid];
m2_279 -> m2_16  [key=2, style=dotted];
m2_279 -> m2_280  [key=0, style=solid];
m2_276 -> m2_277  [key=0, style=solid, color=red];
m2_276 -> m2_29  [key=2, style=dotted];
m2_276 -> m2_278  [key=0, style=solid, color=red];
m2_276 -> m2_138  [key=2, style=dotted, color=red];
m2_280 -> m2_275  [key=0, style=bold, color=blue];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=resolvedRequired];
m2_1050 -> m2_1051  [key=0, style=solid];
m2_1051 -> m2_65  [key=2, style=dotted];
m2_1051 -> m2_1052  [key=0, style=solid];
m2_1051 -> m2_1053  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1052 -> m2_16  [key=2, style=dotted];
m2_1052 -> m2_1053  [key=0, style=solid];
m2_1054 -> m2_16  [key=2, style=dotted];
m2_1054 -> m2_1055  [key=0, style=solid];
m2_1053 -> m2_29  [key=2, style=dotted];
m2_1053 -> m2_1054  [key=0, style=solid];
m2_1055 -> m2_1050  [key=0, style=bold, color=blue];
m2_2988 -> m2_2989  [key=0, style=solid];
m2_2989 -> m2_29  [key=2, style=dotted];
m2_2989 -> m2_2990  [key=0, style=solid];
m2_2991 -> m2_29  [key=2, style=dotted];
m2_2991 -> m2_2992  [key=0, style=solid];
m2_2993 -> m2_29  [key=2, style=dotted];
m2_2993 -> m2_2994  [key=0, style=solid];
m2_2995 -> m2_29  [key=2, style=dotted];
m2_2995 -> m2_2996  [key=0, style=solid];
m2_2997 -> m2_29  [key=2, style=dotted];
m2_2997 -> m2_2998  [key=0, style=solid];
m2_2999 -> m2_29  [key=2, style=dotted];
m2_2999 -> m2_3000  [key=0, style=solid];
m2_3001 -> m2_29  [key=2, style=dotted];
m2_3001 -> m2_3002  [key=0, style=solid];
m2_2990 -> m2_2991  [key=0, style=solid];
m2_2990 -> m2_163  [key=2, style=dotted];
m2_2992 -> m2_2993  [key=0, style=solid];
m2_2992 -> m2_163  [key=2, style=dotted];
m2_2994 -> m2_2995  [key=0, style=solid];
m2_2994 -> m2_163  [key=2, style=dotted];
m2_2996 -> m2_2997  [key=0, style=solid];
m2_2996 -> m2_163  [key=2, style=dotted];
m2_2998 -> m2_2999  [key=0, style=solid];
m2_2998 -> m2_163  [key=2, style=dotted];
m2_3000 -> m2_3001  [key=0, style=solid];
m2_3000 -> m2_163  [key=2, style=dotted];
m2_3002 -> m2_3003  [key=0, style=solid];
m2_3002 -> m2_163  [key=2, style=dotted];
m2_3003 -> m2_2988  [key=0, style=bold, color=blue];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_16  [key=2, style=dotted];
m2_319 -> m2_320  [key=0, style=solid];
m2_320 -> m2_318  [key=0, style=bold, color=blue];
m2_320 -> m2_16  [key=2, style=dotted];
m2_320 -> m2_321  [key=0, style=solid];
m2_3527 -> m2_3528  [key=0, style=solid];
m2_3529 -> m2_29  [key=2, style=dotted];
m2_3529 -> m2_3530  [key=0, style=solid];
m2_3529 -> m2_3531  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3529 -> m2_3532  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3529 -> m2_3533  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3529 -> m2_3534  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3528 -> m2_3529  [key=0, style=solid];
m2_3530 -> m2_3531  [key=0, style=solid];
m2_3530 -> m2_163  [key=2, style=dotted];
m2_3531 -> m2_3532  [key=0, style=solid];
m2_3531 -> m2_163  [key=2, style=dotted];
m2_3532 -> m2_3533  [key=0, style=solid];
m2_3532 -> m2_163  [key=2, style=dotted];
m2_3533 -> m2_3534  [key=0, style=solid];
m2_3533 -> m2_163  [key=2, style=dotted];
m2_3534 -> m2_3535  [key=0, style=solid];
m2_3534 -> m2_163  [key=2, style=dotted];
m2_3535 -> m2_3527  [key=0, style=bold, color=blue];
m2_2909 -> m2_2910  [key=0, style=solid];
m2_2911 -> m2_65  [key=2, style=dotted];
m2_2911 -> m2_2912  [key=0, style=solid];
m2_2912 -> m2_16  [key=2, style=dotted];
m2_2912 -> m2_2913  [key=0, style=solid];
m2_2910 -> m2_2911  [key=0, style=solid];
m2_2910 -> m2_2914  [key=2, style=dotted];
m2_2910 -> m2_2915  [key=2, style=dotted];
m2_2913 -> m2_2909  [key=0, style=bold, color=blue];
m2_1018 -> m2_1019  [key=0, style=solid];
m2_1023 -> m2_65  [key=2, style=dotted];
m2_1023 -> m2_1024  [key=0, style=solid];
m2_1024 -> m2_16  [key=2, style=dotted];
m2_1024 -> m2_1025  [key=0, style=solid];
m2_1019 -> m2_1023  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1019 -> m2_1020  [key=0, style=solid];
m2_1019 -> m2_1026  [key=2, style=dotted];
m2_1019 -> m2_1021  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1019 -> m2_1022  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1022 -> m2_1023  [key=0, style=solid];
m2_1022 -> m2_1027  [key=2, style=dotted];
m2_1020 -> m2_1021  [key=0, style=solid];
m2_1020 -> m2_1027  [key=2, style=dotted];
m2_1021 -> m2_1022  [key=0, style=solid];
m2_1021 -> m2_1027  [key=2, style=dotted];
m2_1025 -> m2_1018  [key=0, style=bold, color=blue];
m2_893 -> m2_894  [key=0, style=solid];
m2_902 -> m2_16  [key=2, style=dotted];
m2_902 -> m2_903  [key=0, style=solid];
m2_901 -> m2_902  [key=0, style=solid];
m2_901 -> m2_13  [key=2, style=dotted];
m2_901 -> m2_541  [key=2, style=dotted];
m2_900 -> m2_902  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_900 -> m2_901  [key=0, style=solid];
m2_900 -> m2_905  [key=2, style=dotted];
m2_894 -> m2_901  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m2_894 -> m2_904  [key=2, style=dotted];
m2_894 -> m2_112  [key=2, style=dotted];
m2_894 -> m2_895  [key=0, style=solid];
m2_894 -> m2_897  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m2_899 -> m2_900  [key=0, style=solid];
m2_899 -> m2_641  [key=2, style=dotted];
m2_895 -> m2_635  [key=2, style=dotted];
m2_895 -> m2_899  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_895 -> m2_896  [key=0, style=solid];
m2_895 -> m2_897  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_895 -> m2_898  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_897 -> m2_717  [key=2, style=dotted];
m2_897 -> m2_898  [key=0, style=solid];
m2_898 -> m2_899  [key=0, style=solid];
m2_898 -> m2_639  [key=2, style=dotted];
m2_896 -> m2_716  [key=2, style=dotted];
m2_896 -> m2_897  [key=0, style=solid];
m2_903 -> m2_893  [key=0, style=bold, color=blue];
m2_1452 -> m2_1453  [key=0, style=solid];
m2_1453 -> m2_1454  [key=0, style=solid];
m2_1454 -> m2_1452  [key=0, style=bold, color=blue];
m2_555 -> m2_549  [key=0, style=bold, color=blue];
m2_2794 -> m2_2795  [key=0, style=solid];
m2_2807 -> m2_16  [key=2, style=dotted];
m2_2807 -> m2_2808  [key=0, style=solid];
m2_2806 -> m2_2807  [key=0, style=solid];
m2_2806 -> m2_2813  [key=2, style=dotted];
m2_2806 -> m2_2808  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m2_2808 -> m2_2809  [key=0, style=solid];
m2_2808 -> m2_2814  [key=2, style=dotted];
m2_2796 -> m2_191  [key=2, style=dotted];
m2_2796 -> m2_2806  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2796 -> m2_2797  [key=0, style=solid];
m2_2796 -> m2_2801  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2805 -> m2_2806  [key=0, style=solid];
m2_2805 -> m2_189  [key=2, style=dotted];
m2_2805 -> m2_641  [key=2, style=dotted];
m2_2795 -> m2_2796  [key=0, style=solid];
m2_2795 -> m2_2810  [key=2, style=dotted];
m2_2795 -> m2_2801  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_2797 -> m2_2798  [key=0, style=solid];
m2_2801 -> m2_2811  [key=2, style=dotted];
m2_2801 -> m2_2802  [key=0, style=solid];
m2_2799 -> m2_635  [key=2, style=dotted];
m2_2799 -> m2_2800  [key=0, style=solid];
m2_2799 -> m2_2803  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m2_2804 -> m2_870  [key=2, style=dotted];
m2_2804 -> m2_2805  [key=0, style=solid];
m2_2803 -> m2_718  [key=2, style=dotted];
m2_2803 -> m2_2804  [key=0, style=solid];
m2_2800 -> m2_2775  [key=2, style=dotted];
m2_2800 -> m2_2801  [key=0, style=solid];
m2_2800 -> m2_636  [key=2, style=dotted];
m2_2800 -> m2_2802  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m2_2798 -> m2_2799  [key=0, style=solid];
m2_2802 -> m2_2803  [key=0, style=solid];
m2_2802 -> m2_2812  [key=2, style=dotted];
m2_2809 -> m2_2794  [key=0, style=bold, color=blue];
m2_1909 -> m2_1910  [key=0, style=solid];
m2_1910 -> m2_1912  [key=2, style=dotted];
m2_1910 -> m2_1911  [key=0, style=solid];
m2_1911 -> m2_1909  [key=0, style=bold, color=blue];
m2_814 -> m2_815  [key=0, style=solid];
m2_815 -> m2_65  [key=2, style=dotted];
m2_815 -> m2_816  [key=0, style=solid];
m2_815 -> m2_819  [key=2, style=dotted];
m2_817 -> m2_16  [key=2, style=dotted];
m2_817 -> m2_818  [key=0, style=solid];
m2_816 -> m2_29  [key=2, style=dotted];
m2_816 -> m2_817  [key=0, style=solid];
m2_818 -> m2_814  [key=0, style=bold, color=blue];
m2_78 -> m2_79  [key=0, style=solid];
m2_82 -> m2_65  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_16  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_96  [key=2, style=dotted];
m2_83 -> m2_97  [key=2, style=dotted];
m2_86 -> m2_16  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_85 -> m2_29  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_79 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_75  [key=2, style=dotted];
m2_79 -> m2_84  [key=0, style=solid];
m2_79 -> m2_94  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_75  [key=2, style=dotted];
m2_81 -> m2_84  [key=0, style=solid];
m2_81 -> m2_95  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_25  [key=2, style=dotted];
m2_84 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_84 -> m2_22  [key=0, style=bold, color=blue];
m2_80 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_25  [key=2, style=dotted];
m2_87 -> m2_78  [key=0, style=bold, color=blue];
m2_87 -> m2_321  [key=0, style=solid];
m2_87 -> m2_322  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonWriter"];
m2_87 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_87 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_87 -> m2_327  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonWriter"];
m2_87 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_87 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_3143 -> m2_3144  [key=0, style=solid];
m2_3149 -> m2_16  [key=2, style=dotted];
m2_3149 -> m2_3150  [key=0, style=solid];
m2_3150 -> m2_274  [key=2, style=dotted];
m2_3150 -> m2_3151  [key=0, style=solid];
m2_3150 -> m2_1260  [key=2, style=dotted];
m2_3151 -> m2_274  [key=2, style=dotted];
m2_3151 -> m2_3152  [key=0, style=solid];
m2_3151 -> m2_1260  [key=2, style=dotted];
m2_3152 -> m2_274  [key=2, style=dotted];
m2_3152 -> m2_3153  [key=0, style=solid];
m2_3152 -> m2_1260  [key=2, style=dotted];
m2_3153 -> m2_274  [key=2, style=dotted];
m2_3153 -> m2_3154  [key=0, style=solid];
m2_3153 -> m2_1260  [key=2, style=dotted];
m2_3145 -> m2_3149  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3145 -> m2_3150  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3145 -> m2_3151  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3145 -> m2_3152  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3145 -> m2_3153  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3145 -> m2_3146  [key=0, style=solid];
m2_3145 -> m2_112  [key=2, style=dotted];
m2_3145 -> m2_3156  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3148 -> m2_3149  [key=0, style=solid];
m2_3148 -> m2_598  [key=2, style=dotted];
m2_3147 -> m2_13  [key=2, style=dotted];
m2_3147 -> m2_3148  [key=0, style=solid];
m2_3147 -> m2_114  [key=2, style=dotted];
m2_3144 -> m2_3145  [key=0, style=solid];
m2_3144 -> m2_3147  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3146 -> m2_3147  [key=0, style=solid];
m2_3146 -> m2_3156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3146 -> m2_3157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3154 -> m2_3143  [key=0, style=bold, color=blue];
m2_2832 -> m2_2833  [key=0, style=solid];
m2_2840 -> m2_16  [key=2, style=dotted];
m2_2840 -> m2_2841  [key=0, style=solid];
m2_2841 -> m2_16  [key=2, style=dotted];
m2_2841 -> m2_2842  [key=0, style=solid];
m2_2842 -> m2_16  [key=2, style=dotted];
m2_2842 -> m2_2843  [key=0, style=solid];
m2_2839 -> m2_2840  [key=0, style=solid];
m2_2839 -> m2_13  [key=2, style=dotted];
m2_2839 -> m2_114  [key=2, style=dotted];
m2_2837 -> m2_13  [key=2, style=dotted];
m2_2837 -> m2_2838  [key=0, style=solid];
m2_2837 -> m2_15  [key=2, style=dotted];
m2_2833 -> m2_2839  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m2_2833 -> m2_2837  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m2_2833 -> m2_2834  [key=0, style=solid];
m2_2833 -> m2_2844  [key=2, style=dotted];
m2_2838 -> m2_2839  [key=0, style=solid];
m2_2838 -> m2_142  [key=2, style=dotted];
m2_2834 -> m2_2837  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2834 -> m2_2835  [key=0, style=solid];
m2_2834 -> m2_2831  [key=2, style=dotted];
m2_2836 -> m2_2837  [key=0, style=solid];
m2_2835 -> m2_2836  [key=0, style=solid];
m2_2843 -> m2_2832  [key=0, style=bold, color=blue];
m2_211 -> m2_213  [key=0, style=solid];
m2_211 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_211 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_1119 -> m2_1120  [key=0, style=solid];
m2_1123 -> m2_16  [key=2, style=dotted];
m2_1123 -> m2_1124  [key=0, style=solid];
m2_1125 -> m2_16  [key=2, style=dotted];
m2_1125 -> m2_1126  [key=0, style=solid];
m2_1125 -> m2_756  [key=2, style=dotted];
m2_1126 -> m2_16  [key=2, style=dotted];
m2_1126 -> m2_1127  [key=0, style=solid];
m2_1126 -> m2_756  [key=2, style=dotted];
m2_1122 -> m2_1123  [key=0, style=solid];
m2_1122 -> m2_13  [key=2, style=dotted];
m2_1122 -> m2_541  [key=2, style=dotted];
m2_1122 -> m2_1124  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1124 -> m2_1125  [key=0, style=solid];
m2_1124 -> m2_1126  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_1124 -> m2_13  [key=2, style=dotted];
m2_1124 -> m2_114  [key=2, style=dotted];
m2_1121 -> m2_1122  [key=0, style=solid];
m2_1121 -> m2_1109  [key=2, style=dotted];
m2_1120 -> m2_1108  [key=2, style=dotted];
m2_1120 -> m2_1121  [key=0, style=solid];
m2_1127 -> m2_1119  [key=0, style=bold, color=blue];
m2_3510 -> m2_3511  [key=0, style=solid];
m2_3513 -> m2_16  [key=2, style=dotted];
m2_3513 -> m2_3514  [key=0, style=solid];
m2_3514 -> m2_16  [key=2, style=dotted];
m2_3514 -> m2_3515  [key=0, style=solid];
m2_3515 -> m2_16  [key=2, style=dotted];
m2_3515 -> m2_3516  [key=0, style=solid];
m2_3517 -> m2_16  [key=2, style=dotted];
m2_3517 -> m2_3518  [key=0, style=solid];
m2_3518 -> m2_16  [key=2, style=dotted];
m2_3518 -> m2_3519  [key=0, style=solid];
m2_3519 -> m2_16  [key=2, style=dotted];
m2_3519 -> m2_3520  [key=0, style=solid];
m2_3512 -> m2_29  [key=2, style=dotted];
m2_3512 -> m2_3513  [key=0, style=solid];
m2_3512 -> m2_3514  [key=1, style=dashed, color=darkseagreen4, label=floats];
m2_3512 -> m2_3515  [key=1, style=dashed, color=darkseagreen4, label=floats];
m2_3516 -> m2_29  [key=2, style=dotted];
m2_3516 -> m2_3517  [key=0, style=solid];
m2_3516 -> m2_3518  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m2_3516 -> m2_3519  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m2_3511 -> m2_3512  [key=0, style=solid];
m2_3511 -> m2_3516  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3520 -> m2_3510  [key=0, style=bold, color=blue];
m2_1935 -> m2_1936  [key=0, style=solid];
m2_1936 -> m2_1937  [key=0, style=solid];
m2_1936 -> m2_1938  [key=2, style=dotted];
m2_1937 -> m2_1935  [key=0, style=bold, color=blue];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_261  [key=2, style=dotted];
m2_2542 -> m2_2543  [key=0, style=solid];
m2_2545 -> m2_142  [key=2, style=dotted];
m2_2545 -> m2_2546  [key=0, style=solid];
m2_2544 -> m2_141  [key=2, style=dotted];
m2_2544 -> m2_2545  [key=0, style=solid];
m2_2543 -> m2_2544  [key=0, style=solid];
m2_2543 -> m2_2547  [key=2, style=dotted];
m2_2546 -> m2_2542  [key=0, style=bold, color=blue];
m2_1600 -> m2_1601  [key=0, style=solid];
m2_1601 -> m2_1605  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1601 -> m2_1602  [key=0, style=solid];
m2_1602 -> m2_1604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1602 -> m2_25  [key=2, style=dotted];
m2_1602 -> m2_1603  [key=0, style=solid];
m2_1603 -> m2_1600  [key=0, style=bold, color=blue];
m2_3058 -> m2_3059  [key=0, style=solid];
m2_3060 -> m2_16  [key=2, style=dotted];
m2_3060 -> m2_3061  [key=0, style=solid];
m2_3060 -> m2_3055  [key=2, style=dotted];
m2_3060 -> m2_3056  [key=2, style=dotted];
m2_3061 -> m2_16  [key=2, style=dotted];
m2_3061 -> m2_3062  [key=0, style=solid];
m2_3061 -> m2_3057  [key=2, style=dotted];
m2_3062 -> m2_16  [key=2, style=dotted];
m2_3062 -> m2_3063  [key=0, style=solid];
m2_3063 -> m2_16  [key=2, style=dotted];
m2_3063 -> m2_3064  [key=0, style=solid];
m2_3065 -> m2_16  [key=2, style=dotted];
m2_3065 -> m2_3066  [key=0, style=solid];
m2_3066 -> m2_16  [key=2, style=dotted];
m2_3066 -> m2_3067  [key=0, style=solid];
m2_3067 -> m2_16  [key=2, style=dotted];
m2_3067 -> m2_3068  [key=0, style=solid];
m2_3068 -> m2_16  [key=2, style=dotted];
m2_3068 -> m2_3069  [key=0, style=solid];
m2_3064 -> m2_29  [key=2, style=dotted];
m2_3064 -> m2_3065  [key=0, style=solid];
m2_3064 -> m2_3066  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3064 -> m2_3067  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3064 -> m2_3068  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3059 -> m2_3060  [key=0, style=solid];
m2_3059 -> m2_3061  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_3059 -> m2_3062  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_3059 -> m2_3063  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_3059 -> m2_13  [key=2, style=dotted];
m2_3059 -> m2_114  [key=2, style=dotted];
m2_3069 -> m2_3058  [key=0, style=bold, color=blue];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_183  [key=2, style=dotted];
m2_180 -> m2_16  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_21  [key=0, style=bold, color=blue];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_179 -> m2_189  [key=2, style=dotted];
m2_179 -> m2_190  [key=2, style=dotted];
m2_179 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_179 -> m2_55  [key=2, style=dotted];
m2_183 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_183 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=l];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_112  [key=2, style=dotted];
m2_3845 -> m2_3846  [key=0, style=solid];
m2_3846 -> m2_3848  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3846 -> m2_25  [key=2, style=dotted];
m2_3846 -> m2_3847  [key=0, style=solid];
m2_3847 -> m2_3845  [key=0, style=bold, color=blue];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_171  [key=2, style=dotted];
m2_163 -> m2_172  [key=2, style=dotted];
m2_1099 -> m2_1100  [key=0, style=solid];
m2_1102 -> m2_65  [key=2, style=dotted];
m2_1102 -> m2_1103  [key=0, style=solid];
m2_1102 -> m2_1104  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1105 -> m2_16  [key=2, style=dotted];
m2_1105 -> m2_1106  [key=0, style=solid];
m2_1106 -> m2_16  [key=2, style=dotted];
m2_1106 -> m2_1107  [key=0, style=solid];
m2_1103 -> m2_16  [key=2, style=dotted];
m2_1103 -> m2_1104  [key=0, style=solid];
m2_1104 -> m2_29  [key=2, style=dotted];
m2_1104 -> m2_1105  [key=0, style=solid];
m2_1104 -> m2_1106  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_1101 -> m2_1102  [key=0, style=solid];
m2_1101 -> m2_1109  [key=2, style=dotted];
m2_1100 -> m2_1105  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1100 -> m2_1106  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1100 -> m2_1101  [key=0, style=solid];
m2_1100 -> m2_1108  [key=2, style=dotted];
m2_1107 -> m2_1099  [key=0, style=bold, color=blue];
m2_3700 -> m2_3701  [key=0, style=solid];
m2_3701 -> m2_3657  [key=2, style=dotted];
m2_3701 -> m2_3702  [key=0, style=solid];
m2_3702 -> m2_3700  [key=0, style=bold, color=blue];
m2_1913 -> m2_1914  [key=0, style=solid];
m2_1914 -> m2_1915  [key=0, style=solid];
m2_1914 -> m2_1916  [key=2, style=dotted];
m2_1915 -> m2_1913  [key=0, style=bold, color=blue];
m2_483 -> m2_476  [key=0, style=bold, color=blue];
m2_136 -> m2_16  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_1579 -> m2_1580  [key=0, style=solid];
m2_1580 -> m2_1584  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1580 -> m2_1581  [key=0, style=solid];
m2_1581 -> m2_1583  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1581 -> m2_25  [key=2, style=dotted];
m2_1581 -> m2_1582  [key=0, style=solid];
m2_1582 -> m2_1579  [key=0, style=bold, color=blue];
m2_3159 -> m2_3160  [key=0, style=solid];
m2_3165 -> m2_16  [key=2, style=dotted];
m2_3165 -> m2_3166  [key=0, style=solid];
m2_3166 -> m2_274  [key=2, style=dotted];
m2_3166 -> m2_3167  [key=0, style=solid];
m2_3166 -> m2_1260  [key=2, style=dotted];
m2_3167 -> m2_274  [key=2, style=dotted];
m2_3167 -> m2_3168  [key=0, style=solid];
m2_3167 -> m2_1260  [key=2, style=dotted];
m2_3168 -> m2_274  [key=2, style=dotted];
m2_3168 -> m2_3169  [key=0, style=solid];
m2_3168 -> m2_1260  [key=2, style=dotted];
m2_3161 -> m2_3165  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3161 -> m2_3166  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3161 -> m2_3167  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3161 -> m2_3168  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3161 -> m2_3162  [key=0, style=solid];
m2_3161 -> m2_112  [key=2, style=dotted];
m2_3161 -> m2_3171  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3164 -> m2_3165  [key=0, style=solid];
m2_3164 -> m2_598  [key=2, style=dotted];
m2_3163 -> m2_13  [key=2, style=dotted];
m2_3163 -> m2_3164  [key=0, style=solid];
m2_3163 -> m2_114  [key=2, style=dotted];
m2_3160 -> m2_3161  [key=0, style=solid];
m2_3160 -> m2_3163  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3162 -> m2_3163  [key=0, style=solid];
m2_3162 -> m2_3171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3162 -> m2_3172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3169 -> m2_3159  [key=0, style=bold, color=blue];
m2_195 -> m2_196  [key=0, style=solid, color=green];
m2_195 -> m2_201  [key=0, style=solid];
m2_196 -> m2_197  [key=0, style=solid, color=green];
m2_196 -> m2_200  [key=2, style=dotted, color=green];
m2_196 -> m2_65  [key=2, style=dotted, color=green];
m2_196 -> m2_16  [key=2, style=dotted, color=green];
m2_196 -> m2_199  [key=0, style=solid];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_29  [key=2, style=dotted];
m2_198 -> m2_16  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_201  [key=0, style=solid];
m2_199 -> m2_195  [key=0, style=bold, color=blue];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m2_503 -> m2_504  [key=0, style=solid];
m2_503 -> m2_211  [key=2, style=dotted];
m2_3243 -> m2_3244  [key=0, style=solid];
m2_3246 -> m2_16  [key=2, style=dotted];
m2_3246 -> m2_3247  [key=0, style=solid];
m2_3247 -> m2_16  [key=2, style=dotted];
m2_3247 -> m2_3248  [key=0, style=solid];
m2_3244 -> m2_3246  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m2_3244 -> m2_3245  [key=0, style=solid];
m2_3244 -> m2_3249  [key=2, style=dotted];
m2_3245 -> m2_3246  [key=0, style=solid];
m2_3245 -> m2_3247  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m2_3245 -> m2_3250  [key=2, style=dotted];
m2_3248 -> m2_3243  [key=0, style=bold, color=blue];
m2_1778 -> m2_1779  [key=0, style=solid];
m2_1779 -> m2_12  [key=2, style=dotted];
m2_1779 -> m2_1780  [key=0, style=solid];
m2_1780 -> m2_112  [key=2, style=dotted];
m2_1780 -> m2_1781  [key=0, style=solid];
m2_1781 -> m2_1778  [key=0, style=bold, color=blue];
m2_2532 -> m2_2533  [key=0, style=solid];
m2_2537 -> m2_16  [key=2, style=dotted];
m2_2537 -> m2_2538  [key=0, style=solid];
m2_2537 -> m2_1484  [key=2, style=dotted];
m2_2538 -> m2_16  [key=2, style=dotted];
m2_2538 -> m2_2539  [key=0, style=solid];
m2_2538 -> m2_1484  [key=2, style=dotted];
m2_2539 -> m2_16  [key=2, style=dotted];
m2_2539 -> m2_2540  [key=0, style=solid];
m2_2539 -> m2_1484  [key=2, style=dotted];
m2_2536 -> m2_29  [key=2, style=dotted];
m2_2536 -> m2_2537  [key=0, style=solid];
m2_2536 -> m2_2538  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2536 -> m2_2539  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2534 -> m2_2536  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2534 -> m2_2535  [key=0, style=solid];
m2_2534 -> m2_141  [key=2, style=dotted];
m2_2535 -> m2_2536  [key=0, style=solid];
m2_2535 -> m2_142  [key=2, style=dotted];
m2_2533 -> m2_2534  [key=0, style=solid];
m2_2533 -> m2_112  [key=2, style=dotted];
m2_2533 -> m2_2541  [key=2, style=dotted];
m2_2540 -> m2_2532  [key=0, style=bold, color=blue];
m2_2916 -> m2_2917  [key=0, style=solid];
m2_2919 -> m2_16  [key=2, style=dotted];
m2_2919 -> m2_2920  [key=0, style=solid];
m2_2919 -> m2_2915  [key=2, style=dotted];
m2_2920 -> m2_16  [key=2, style=dotted];
m2_2920 -> m2_2921  [key=0, style=solid];
m2_2920 -> m2_2915  [key=2, style=dotted];
m2_2921 -> m2_16  [key=2, style=dotted];
m2_2921 -> m2_2922  [key=0, style=solid];
m2_2918 -> m2_29  [key=2, style=dotted];
m2_2918 -> m2_2919  [key=0, style=solid];
m2_2918 -> m2_2920  [key=1, style=dashed, color=darkseagreen4, label=w];
m2_2918 -> m2_2921  [key=1, style=dashed, color=darkseagreen4, label=w];
m2_2917 -> m2_2918  [key=0, style=solid];
m2_2922 -> m2_2916  [key=0, style=bold, color=blue];
m2_1110 -> m2_1111  [key=0, style=solid];
m2_1116 -> m2_16  [key=2, style=dotted];
m2_1116 -> m2_1117  [key=0, style=solid];
m2_1117 -> m2_16  [key=2, style=dotted];
m2_1117 -> m2_1118  [key=0, style=solid];
m2_1114 -> m2_16  [key=2, style=dotted];
m2_1114 -> m2_1115  [key=0, style=solid];
m2_1115 -> m2_29  [key=2, style=dotted];
m2_1115 -> m2_1116  [key=0, style=solid];
m2_1115 -> m2_1117  [key=1, style=dashed, color=darkseagreen4, label=m2];
m2_1111 -> m2_1116  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1111 -> m2_1117  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m2_1111 -> m2_1112  [key=0, style=solid];
m2_1111 -> m2_1108  [key=2, style=dotted];
m2_1113 -> m2_1114  [key=0, style=solid];
m2_1113 -> m2_1115  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1113 -> m2_13  [key=2, style=dotted];
m2_1113 -> m2_541  [key=2, style=dotted];
m2_1112 -> m2_1113  [key=0, style=solid];
m2_1112 -> m2_1109  [key=2, style=dotted];
m2_1118 -> m2_1110  [key=0, style=bold, color=blue];
m2_2981 -> m2_2982  [key=0, style=solid];
m2_2986 -> m2_16  [key=2, style=dotted];
m2_2986 -> m2_2987  [key=0, style=solid];
m2_2983 -> m2_2986  [key=1, style=dashed, color=darkseagreen4, label=dict];
m2_2983 -> m2_2984  [key=0, style=solid];
m2_2983 -> m2_189  [key=2, style=dotted];
m2_2983 -> m2_190  [key=2, style=dotted];
m2_2983 -> m2_2364  [key=2, style=dotted];
m2_2985 -> m2_2986  [key=0, style=solid];
m2_2985 -> m2_2364  [key=2, style=dotted];
m2_2982 -> m2_13  [key=2, style=dotted];
m2_2982 -> m2_2983  [key=0, style=solid];
m2_2982 -> m2_2985  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2982 -> m2_634  [key=2, style=dotted];
m2_2984 -> m2_2985  [key=0, style=solid];
m2_2984 -> m2_189  [key=2, style=dotted];
m2_2984 -> m2_190  [key=2, style=dotted];
m2_2987 -> m2_2981  [key=0, style=bold, color=blue];
m2_672 -> m2_709  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_672 -> m2_703  [key=0, style=solid];
m2_672 -> m2_704  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_672 -> m2_705  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_709 -> m2_65  [key=2, style=dotted];
m2_709 -> m2_272  [key=2, style=dotted];
m2_709 -> m2_710  [key=0, style=solid];
m2_711 -> m2_16  [key=2, style=dotted];
m2_711 -> m2_712  [key=0, style=solid];
m2_707 -> m2_272  [key=2, style=dotted];
m2_707 -> m2_708  [key=0, style=solid];
m2_707 -> m2_719  [key=2, style=dotted];
m2_713 -> m2_273  [key=2, style=dotted];
m2_713 -> m2_274  [key=2, style=dotted];
m2_713 -> m2_713  [key=1, style=dashed, color=darkseagreen4, label=property];
m2_713 -> m2_712  [key=0, style=solid];
m2_708 -> m2_709  [key=0, style=solid];
m2_708 -> m2_711  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m2_708 -> m2_708  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m2_708 -> m2_720  [key=2, style=dotted];
m2_708 -> m2_721  [key=2, style=dotted];
m2_708 -> m2_722  [key=2, style=dotted];
m2_708 -> m2_723  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_708 -> m2_712  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m2_710 -> m2_711  [key=0, style=solid];
m2_710 -> m2_713  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m2_710 -> m2_710  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m2_710 -> m2_720  [key=2, style=dotted];
m2_710 -> m2_721  [key=2, style=dotted];
m2_710 -> m2_722  [key=2, style=dotted];
m2_710 -> m2_726  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_710 -> m2_714  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m2_712 -> m2_713  [key=0, style=solid];
m2_712 -> m2_714  [key=0, style=solid];
m2_706 -> m2_707  [key=0, style=solid];
m2_706 -> m2_718  [key=2, style=dotted];
m2_703 -> m2_706  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_703 -> m2_704  [key=0, style=solid];
m2_703 -> m2_635  [key=2, style=dotted];
m2_703 -> m2_705  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_704 -> m2_193  [key=2, style=dotted];
m2_704 -> m2_705  [key=0, style=solid];
m2_704 -> m2_716  [key=2, style=dotted];
m2_705 -> m2_706  [key=0, style=solid];
m2_705 -> m2_717  [key=2, style=dotted];
m2_714 -> m2_571  [key=2, style=dotted];
m2_714 -> m2_715  [key=0, style=solid];
m2_715 -> m2_672  [key=0, style=bold, color=blue];
m2_3781 -> m2_3782  [key=0, style=solid];
m2_3788 -> m2_16  [key=2, style=dotted];
m2_3788 -> m2_3789  [key=0, style=solid];
m2_3788 -> m2_1484  [key=2, style=dotted];
m2_3782 -> m2_3788  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3782 -> m2_194  [key=2, style=dotted];
m2_3782 -> m2_3783  [key=0, style=solid];
m2_3782 -> m2_3785  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3787 -> m2_3788  [key=0, style=solid];
m2_3787 -> m2_114  [key=2, style=dotted];
m2_3784 -> m2_13  [key=2, style=dotted];
m2_3784 -> m2_3787  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3784 -> m2_3785  [key=0, style=solid];
m2_3785 -> m2_12  [key=2, style=dotted];
m2_3785 -> m2_3787  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3785 -> m2_541  [key=2, style=dotted];
m2_3785 -> m2_3786  [key=0, style=solid];
m2_3783 -> m2_3784  [key=0, style=solid];
m2_3786 -> m2_3787  [key=0, style=solid];
m2_3786 -> m2_142  [key=2, style=dotted];
m2_3789 -> m2_3781  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_3174 -> m2_3175  [key=0, style=solid];
m2_3179 -> m2_16  [key=2, style=dotted];
m2_3179 -> m2_3180  [key=0, style=solid];
m2_3180 -> m2_16  [key=2, style=dotted];
m2_3180 -> m2_3181  [key=0, style=solid];
m2_3181 -> m2_16  [key=2, style=dotted];
m2_3181 -> m2_3182  [key=0, style=solid];
m2_3182 -> m2_16  [key=2, style=dotted];
m2_3182 -> m2_3183  [key=0, style=solid];
m2_3175 -> m2_3179  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3175 -> m2_3180  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3175 -> m2_3181  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3175 -> m2_3182  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3175 -> m2_3176  [key=0, style=solid];
m2_3175 -> m2_112  [key=2, style=dotted];
m2_3175 -> m2_3186  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3178 -> m2_3179  [key=0, style=solid];
m2_3178 -> m2_142  [key=2, style=dotted];
m2_3177 -> m2_13  [key=2, style=dotted];
m2_3177 -> m2_3178  [key=0, style=solid];
m2_3177 -> m2_3184  [key=2, style=dotted];
m2_3177 -> m2_541  [key=2, style=dotted];
m2_3176 -> m2_3177  [key=0, style=solid];
m2_3176 -> m2_3186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3176 -> m2_3187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m2_3183 -> m2_3174  [key=0, style=bold, color=blue];
m2_962 -> m2_963  [key=0, style=solid];
m2_965 -> m2_16  [key=2, style=dotted];
m2_965 -> m2_966  [key=0, style=solid];
m2_966 -> m2_16  [key=2, style=dotted];
m2_966 -> m2_967  [key=0, style=solid];
m2_967 -> m2_16  [key=2, style=dotted];
m2_967 -> m2_968  [key=0, style=solid];
m2_968 -> m2_16  [key=2, style=dotted];
m2_968 -> m2_969  [key=0, style=solid];
m2_969 -> m2_16  [key=2, style=dotted];
m2_969 -> m2_970  [key=0, style=solid];
m2_970 -> m2_16  [key=2, style=dotted];
m2_970 -> m2_971  [key=0, style=solid];
m2_964 -> m2_29  [key=2, style=dotted];
m2_964 -> m2_965  [key=0, style=solid];
m2_964 -> m2_966  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_964 -> m2_967  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_964 -> m2_968  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_964 -> m2_969  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_964 -> m2_970  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_963 -> m2_964  [key=0, style=solid];
m2_971 -> m2_962  [key=0, style=bold, color=blue];
m2_126 -> m2_128  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_65 -> m2_84  [key=0, style=solid];
m2_65 -> m2_88  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_13 -> m2_16  [key=0, style=solid];
m2_13 -> m2_24  [key=2, style=dotted];
m2_918 -> m2_919  [key=0, style=solid];
m2_922 -> m2_65  [key=2, style=dotted];
m2_922 -> m2_923  [key=0, style=solid];
m2_922 -> m2_924  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_925 -> m2_16  [key=2, style=dotted];
m2_925 -> m2_926  [key=0, style=solid];
m2_923 -> m2_16  [key=2, style=dotted];
m2_923 -> m2_924  [key=0, style=solid];
m2_924 -> m2_29  [key=2, style=dotted];
m2_924 -> m2_925  [key=0, style=solid];
m2_919 -> m2_922  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_919 -> m2_925  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_919 -> m2_920  [key=0, style=solid];
m2_919 -> m2_12  [key=2, style=dotted];
m2_919 -> m2_921  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_921 -> m2_922  [key=0, style=solid];
m2_921 -> m2_633  [key=2, style=dotted];
m2_920 -> m2_921  [key=0, style=solid];
m2_920 -> m2_633  [key=2, style=dotted];
m2_926 -> m2_918  [key=0, style=bold, color=blue];
m2_3611 -> m2_3612  [key=0, style=solid];
m2_3615 -> m2_16  [key=2, style=dotted];
m2_3615 -> m2_3616  [key=0, style=solid];
m2_3617 -> m2_16  [key=2, style=dotted];
m2_3617 -> m2_3618  [key=0, style=solid];
m2_3617 -> m2_3634  [key=2, style=dotted];
m2_3623 -> m2_16  [key=2, style=dotted];
m2_3623 -> m2_3624  [key=0, style=solid];
m2_3623 -> m2_3589  [key=2, style=dotted];
m2_3623 -> m2_3634  [key=2, style=dotted];
m2_3629 -> m2_16  [key=2, style=dotted];
m2_3629 -> m2_3630  [key=0, style=solid];
m2_3629 -> m2_3589  [key=2, style=dotted];
m2_3629 -> m2_3634  [key=2, style=dotted];
m2_3614 -> m2_3615  [key=0, style=solid];
m2_3614 -> m2_15  [key=2, style=dotted];
m2_3614 -> m2_3616  [key=1, style=dashed, color=darkseagreen4, label=text1];
m2_3616 -> m2_3617  [key=0, style=solid];
m2_3616 -> m2_114  [key=2, style=dotted];
m2_3618 -> m2_12  [key=2, style=dotted];
m2_3618 -> m2_3619  [key=0, style=solid];
m2_3618 -> m2_3620  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m2_3622 -> m2_3623  [key=0, style=solid];
m2_3622 -> m2_114  [key=2, style=dotted];
m2_3624 -> m2_12  [key=2, style=dotted];
m2_3624 -> m2_3625  [key=0, style=solid];
m2_3624 -> m2_3626  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m2_3628 -> m2_3629  [key=0, style=solid];
m2_3628 -> m2_114  [key=2, style=dotted];
m2_3613 -> m2_13  [key=2, style=dotted];
m2_3613 -> m2_3614  [key=0, style=solid];
m2_3613 -> m2_3616  [key=1, style=dashed, color=darkseagreen4, label=options];
m2_3613 -> m2_3622  [key=1, style=dashed, color=darkseagreen4, label=options];
m2_3613 -> m2_3628  [key=1, style=dashed, color=darkseagreen4, label=options];
m2_3613 -> m2_3632  [key=2, style=dotted];
m2_3613 -> m2_3633  [key=2, style=dotted];
m2_3613 -> m2_3620  [key=1, style=dashed, color=darkseagreen4, label=options];
m2_3613 -> m2_3626  [key=1, style=dashed, color=darkseagreen4, label=options];
m2_3612 -> m2_3614  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m2_3612 -> m2_3613  [key=0, style=solid];
m2_3612 -> m2_3631  [key=2, style=dotted];
m2_3612 -> m2_3619  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m2_3612 -> m2_3625  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m2_3619 -> m2_633  [key=2, style=dotted];
m2_3619 -> m2_3620  [key=0, style=solid];
m2_3620 -> m2_3622  [key=1, style=dashed, color=darkseagreen4, label=text2];
m2_3620 -> m2_15  [key=2, style=dotted];
m2_3620 -> m2_3621  [key=0, style=solid];
m2_3621 -> m2_3622  [key=0, style=solid];
m2_3621 -> m2_142  [key=2, style=dotted];
m2_3625 -> m2_633  [key=2, style=dotted];
m2_3625 -> m2_3626  [key=0, style=solid];
m2_3626 -> m2_3628  [key=1, style=dashed, color=darkseagreen4, label=text3];
m2_3626 -> m2_15  [key=2, style=dotted];
m2_3626 -> m2_3627  [key=0, style=solid];
m2_3627 -> m2_3628  [key=0, style=solid];
m2_3627 -> m2_142  [key=2, style=dotted];
m2_3630 -> m2_3611  [key=0, style=bold, color=blue];
m2_1764 -> m2_1765  [key=0, style=solid];
m2_1775 -> m2_16  [key=2, style=dotted];
m2_1775 -> m2_1776  [key=0, style=solid];
m2_1774 -> m2_29  [key=2, style=dotted];
m2_1774 -> m2_1775  [key=0, style=solid];
m2_1766 -> m2_1775  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1766 -> m2_1767  [key=0, style=solid];
m2_1766 -> m2_1768  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1766 -> m2_1769  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1766 -> m2_1770  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1766 -> m2_1771  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m2_1772 -> m2_1774  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1772 -> m2_1773  [key=0, style=solid];
m2_1772 -> m2_141  [key=2, style=dotted];
m2_1773 -> m2_1774  [key=0, style=solid];
m2_1773 -> m2_142  [key=2, style=dotted];
m2_1767 -> m2_904  [key=2, style=dotted];
m2_1767 -> m2_1768  [key=0, style=solid];
m2_1770 -> m2_904  [key=2, style=dotted];
m2_1770 -> m2_1771  [key=0, style=solid];
m2_1765 -> m2_1766  [key=0, style=solid];
m2_1765 -> m2_1772  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m2_1765 -> m2_1777  [key=2, style=dotted];
m2_1768 -> m2_1769  [key=0, style=solid];
m2_1769 -> m2_1770  [key=0, style=solid];
m2_1771 -> m2_1772  [key=0, style=solid];
m2_1776 -> m2_1764  [key=0, style=bold, color=blue];
m2_554 -> m2_16  [key=2, style=dotted];
m2_554 -> m2_555  [key=0, style=solid];
m2_1166 -> m2_1167  [key=0, style=solid];
m2_1167 -> m2_1169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1167 -> m2_25  [key=2, style=dotted];
m2_1167 -> m2_1168  [key=0, style=solid];
m2_1168 -> m2_1166  [key=0, style=bold, color=blue];
m2_1829 -> m2_1830  [key=0, style=solid];
m2_1830 -> m2_1834  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1830 -> m2_1831  [key=0, style=solid];
m2_1831 -> m2_25  [key=2, style=dotted];
m2_1831 -> m2_1833  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1831 -> m2_1832  [key=0, style=solid];
m2_1832 -> m2_1829  [key=0, style=bold, color=blue];
m2_834 -> m2_835  [key=0, style=solid];
m2_837 -> m2_16  [key=2, style=dotted];
m2_837 -> m2_838  [key=0, style=solid];
m2_837 -> m2_842  [key=2, style=dotted];
m2_837 -> m2_271  [key=2, style=dotted];
m2_840 -> m2_16  [key=2, style=dotted];
m2_840 -> m2_841  [key=0, style=solid];
m2_840 -> m2_843  [key=2, style=dotted];
m2_840 -> m2_271  [key=2, style=dotted];
m2_836 -> m2_837  [key=0, style=solid];
m2_836 -> m2_270  [key=2, style=dotted];
m2_836 -> m2_838  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_838 -> m2_839  [key=0, style=solid];
m2_839 -> m2_840  [key=0, style=solid];
m2_835 -> m2_836  [key=0, style=solid];
m2_841 -> m2_834  [key=0, style=bold, color=blue];
m2_321 -> m2_322  [key=0, style=solid, color=red];
m2_321 -> m2_323  [key=0, style=solid];
m2_321 -> m2_20  [key=2, style=dotted];
m2_322 -> m2_332  [key=0, style=solid, color=red];
m2_322 -> m2_21  [key=2, style=dotted, color=red];
m2_322 -> m2_16  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_325  [key=0, style=solid];
m2_323 -> m2_138  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_258  [key=2, style=dotted];
m2_327 -> m2_328  [key=0, style=solid, color=red];
m2_327 -> m2_36  [key=2, style=dotted, color=red];
m2_327 -> m2_182  [key=2, style=dotted, color=red];
m2_327 -> m2_171  [key=2, style=dotted, color=red];
m2_327 -> m2_172  [key=2, style=dotted, color=red];
m2_327 -> m2_329  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m2_327 -> m2_346  [key=2, style=dotted];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_26  [key=2, style=dotted];
m2_328 -> m2_333  [key=2, style=dotted];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_36  [key=2, style=dotted];
m2_330 -> m2_182  [key=2, style=dotted];
m2_330 -> m2_171  [key=2, style=dotted];
m2_330 -> m2_172  [key=2, style=dotted];
m2_324 -> m2_332  [key=0, style=solid];
m2_324 -> m2_16  [key=2, style=dotted];
m2_324 -> m2_325  [key=0, style=solid];
m2_326 -> m2_327  [key=0, style=solid, color=red];
m2_326 -> m2_328  [key=0, style=solid];
m2_326 -> m2_16  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_331  [key=0, style=solid];
m2_329 -> m2_16  [key=2, style=dotted];
m2_331 -> m2_332  [key=0, style=solid, color=green];
m2_331 -> m2_265  [key=2, style=dotted];
m2_331 -> m2_16  [key=2, style=dotted];
m2_332 -> m2_87  [key=0, style=bold, color=blue];
m2_332 -> m2_333  [key=0, style=solid, color=green];
m2_332 -> m2_347  [key=2, style=dotted, color=green];
m2_332 -> m2_334  [key=1, style=dashed, color=green, label=traceWriter];
m2_293 -> m2_294  [key=0, style=solid, color=red];
m2_293 -> m2_51  [key=2, style=dotted, color=red];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_98  [key=2, style=dotted];
m2_294 -> m2_123  [key=2, style=dotted];
m2_294 -> m2_16  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_297  [key=0, style=solid];
m2_295 -> m2_51  [key=2, style=dotted];
m2_295 -> m2_343  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_296 -> m2_300  [key=2, style=dotted];
m2_296 -> m2_16  [key=2, style=dotted];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_299  [key=0, style=solid];
m2_297 -> m2_50  [key=2, style=dotted];
m2_297 -> m2_344  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_52  [key=2, style=dotted];
m2_298 -> m2_16  [key=2, style=dotted];
m2_298 -> m2_345  [key=2, style=dotted];
m2_299 -> m2_259  [key=0, style=bold, color=blue];
m2_299 -> m2_300  [key=0, style=solid];
m2_2516 -> m2_3933  [key=0, style=solid];
m2_3933 -> m2_3934  [key=0, style=solid];
m2_3934 -> m2_2516  [key=0, style=bold, color=blue];
m2_1382 -> m2_1383  [key=0, style=solid];
m2_1386 -> m2_16  [key=2, style=dotted];
m2_1386 -> m2_1387  [key=0, style=solid];
m2_1389 -> m2_16  [key=2, style=dotted];
m2_1389 -> m2_1390  [key=0, style=solid];
m2_1385 -> m2_1386  [key=0, style=solid];
m2_1385 -> m2_13  [key=2, style=dotted];
m2_1385 -> m2_541  [key=2, style=dotted];
m2_1385 -> m2_1387  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1387 -> m2_13  [key=2, style=dotted];
m2_1387 -> m2_1388  [key=0, style=solid];
m2_1387 -> m2_114  [key=2, style=dotted];
m2_1388 -> m2_1389  [key=0, style=solid];
m2_1388 -> m2_13  [key=2, style=dotted];
m2_1388 -> m2_541  [key=2, style=dotted];
m2_1383 -> m2_1385  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_1383 -> m2_1381  [key=2, style=dotted];
m2_1383 -> m2_1384  [key=0, style=solid];
m2_1384 -> m2_1385  [key=0, style=solid];
m2_1390 -> m2_1382  [key=0, style=bold, color=blue];
m2_3374 -> m2_3375  [key=0, style=solid];
m2_3378 -> m2_16  [key=2, style=dotted];
m2_3378 -> m2_3379  [key=0, style=solid];
m2_3378 -> m2_2159  [key=2, style=dotted];
m2_3376 -> m2_29  [key=2, style=dotted];
m2_3376 -> m2_3377  [key=0, style=solid];
m2_3377 -> m2_3378  [key=0, style=solid];
m2_3375 -> m2_3376  [key=0, style=solid];
m2_3379 -> m2_3374  [key=0, style=bold, color=blue];
m2_3038 -> m2_3039  [key=0, style=solid];
m2_3041 -> m2_16  [key=2, style=dotted];
m2_3041 -> m2_3042  [key=0, style=solid];
m2_3040 -> m2_3041  [key=0, style=solid];
m2_3040 -> m2_951  [key=2, style=dotted];
m2_3040 -> m2_52  [key=2, style=dotted];
m2_3039 -> m2_3040  [key=0, style=solid];
m2_3042 -> m2_3038  [key=0, style=bold, color=blue];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_283  [key=0, style=solid];
m2_305 -> m2_306  [key=0, style=solid, color=green];
m2_305 -> m2_183  [key=2, style=dotted];
m2_282 -> m2_305  [key=1, style=dashed, color=green, label=serializer];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_191  [key=2, style=dotted];
m2_282 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_298  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_299  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_300  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_304  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_307  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_310  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_314  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_315  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_316  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_317  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_319  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_322  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_326  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_329  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_331  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_282 -> m2_169  [key=2, style=dotted];
m2_282 -> m2_170  [key=2, style=dotted];
m2_304 -> m2_305  [key=0, style=solid, color=green];
m2_304 -> m2_16  [key=2, style=dotted];
m2_304 -> m2_53  [key=2, style=dotted];
m2_306 -> m2_16  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_300  [key=0, style=bold, color=blue];
m2_333 -> m2_334  [key=0, style=solid];
m2_285 -> m2_16  [key=2, style=dotted];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_289  [key=0, style=solid];
m2_287 -> m2_16  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m2_289 -> m2_16  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_260  [key=0, style=bold, color=blue];
m2_291 -> m2_16  [key=2, style=dotted];
m2_291 -> m2_341  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_576  [key=0, style=solid];
m2_291 -> m2_578  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_291 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_300 -> m2_16  [key=2, style=dotted];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_300 -> m2_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_300 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_302 -> m2_16  [key=2, style=dotted];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_304  [key=0, style=solid];
m2_283 -> m2_340  [key=2, style=dotted];
m2_283 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m2_283 -> m2_284  [key=0, style=solid];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_289  [key=0, style=solid];
m2_284 -> m2_169  [key=2, style=dotted];
m2_284 -> m2_170  [key=2, style=dotted];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m2_288 -> m2_289  [key=0, style=solid];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_181  [key=2, style=dotted];
m2_301 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_301 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_182  [key=2, style=dotted];
m2_303 -> m2_171  [key=2, style=dotted];
m2_303 -> m2_172  [key=2, style=dotted];
m2_2500 -> m2_2501  [key=0, style=solid];
m2_2504 -> m2_16  [key=2, style=dotted];
m2_2504 -> m2_2505  [key=0, style=solid];
m2_2505 -> m2_274  [key=2, style=dotted];
m2_2505 -> m2_2506  [key=0, style=solid];
m2_2505 -> m2_2509  [key=2, style=dotted];
m2_2503 -> m2_29  [key=2, style=dotted];
m2_2503 -> m2_2504  [key=0, style=solid];
m2_2503 -> m2_2505  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m2_2501 -> m2_2505  [key=1, style=dashed, color=darkseagreen4, label=response];
m2_2501 -> m2_2502  [key=0, style=solid];
m2_2501 -> m2_2507  [key=2, style=dotted];
m2_2501 -> m2_2508  [key=2, style=dotted];
m2_2501 -> m2_1518  [key=2, style=dotted];
m2_2502 -> m2_2503  [key=0, style=solid];
m2_2502 -> m2_141  [key=2, style=dotted];
m2_2506 -> m2_2500  [key=0, style=bold, color=blue];
m2_502 -> m2_503  [key=0, style=solid];
m2_502 -> m2_504  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m2_502 -> m2_505  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m2_502 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m2_502 -> m2_529  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m2_2473 -> m2_2474  [key=0, style=solid];
m2_2474 -> m2_516  [key=2, style=dotted];
m2_2474 -> m2_2475  [key=0, style=solid];
m2_2474 -> m2_4006  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m2_2475 -> m2_2473  [key=0, style=bold, color=blue];
m2_1745 -> m2_1746  [key=0, style=solid];
m2_1750 -> m2_274  [key=2, style=dotted];
m2_1750 -> m2_1751  [key=0, style=solid];
m2_1750 -> m2_1260  [key=2, style=dotted];
m2_1747 -> m2_29  [key=2, style=dotted];
m2_1747 -> m2_1748  [key=0, style=solid];
m2_1749 -> m2_1750  [key=0, style=solid];
m2_1746 -> m2_1747  [key=0, style=solid];
m2_1748 -> m2_1749  [key=0, style=solid];
m2_1748 -> m2_1751  [key=0, style=solid];
m2_1748 -> m2_1259  [key=2, style=dotted];
m2_1751 -> m2_1745  [key=0, style=bold, color=blue];
m2_3437 -> m2_3438  [key=0, style=solid];
m2_3439 -> m2_13  [key=2, style=dotted];
m2_3439 -> m2_3440  [key=0, style=solid];
m2_3439 -> m2_15  [key=2, style=dotted];
m2_3438 -> m2_912  [key=2, style=dotted];
m2_3438 -> m2_194  [key=2, style=dotted];
m2_3438 -> m2_904  [key=2, style=dotted];
m2_3438 -> m2_3439  [key=0, style=solid];
m2_3438 -> m2_112  [key=2, style=dotted];
m2_3440 -> m2_142  [key=2, style=dotted];
m2_3440 -> m2_3441  [key=0, style=solid];
m2_3441 -> m2_3437  [key=0, style=bold, color=blue];
m2_2521 -> m2_2522  [key=0, style=solid];
m2_2523 -> m2_16  [key=2, style=dotted];
m2_2523 -> m2_2524  [key=0, style=solid];
m2_2524 -> m2_16  [key=2, style=dotted];
m2_2524 -> m2_2525  [key=0, style=solid];
m2_2522 -> m2_29  [key=2, style=dotted];
m2_2522 -> m2_2523  [key=0, style=solid];
m2_2522 -> m2_2524  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2525 -> m2_2521  [key=0, style=bold, color=blue];
m2_3670 -> m2_3671  [key=0, style=solid];
m2_3671 -> m2_3657  [key=2, style=dotted];
m2_3671 -> m2_3672  [key=0, style=solid];
m2_3672 -> m2_3670  [key=0, style=bold, color=blue];
m2_3852 -> m2_3853  [key=0, style=solid];
m2_3853 -> m2_3855  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3853 -> m2_25  [key=2, style=dotted];
m2_3853 -> m2_3854  [key=0, style=solid];
m2_3854 -> m2_3852  [key=0, style=bold, color=blue];
m2_862 -> m2_863  [key=0, style=solid];
m2_868 -> m2_16  [key=2, style=dotted];
m2_868 -> m2_869  [key=0, style=solid];
m2_867 -> m2_16  [key=2, style=dotted];
m2_867 -> m2_868  [key=0, style=solid];
m2_866 -> m2_29  [key=2, style=dotted];
m2_866 -> m2_868  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m2_866 -> m2_867  [key=0, style=solid];
m2_865 -> m2_868  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m2_865 -> m2_866  [key=0, style=solid];
m2_865 -> m2_870  [key=2, style=dotted];
m2_865 -> m2_871  [key=2, style=dotted];
m2_865 -> m2_872  [key=2, style=dotted];
m2_863 -> m2_866  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_863 -> m2_865  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_863 -> m2_864  [key=0, style=solid];
m2_864 -> m2_865  [key=0, style=solid];
m2_864 -> m2_716  [key=2, style=dotted];
m2_869 -> m2_862  [key=0, style=bold, color=blue];
m2_2624 -> m2_2625  [key=0, style=solid];
m2_2625 -> m2_904  [key=2, style=dotted];
m2_2625 -> m2_2626  [key=0, style=solid];
m2_2625 -> m2_2629  [key=2, style=dotted];
m2_2627 -> m2_142  [key=2, style=dotted];
m2_2627 -> m2_2628  [key=0, style=solid];
m2_2626 -> m2_141  [key=2, style=dotted];
m2_2626 -> m2_2627  [key=0, style=solid];
m2_2628 -> m2_2624  [key=0, style=bold, color=blue];
m2_2819 -> m2_2820  [key=0, style=solid];
m2_2827 -> m2_16  [key=2, style=dotted];
m2_2827 -> m2_2828  [key=0, style=solid];
m2_2828 -> m2_16  [key=2, style=dotted];
m2_2828 -> m2_2829  [key=0, style=solid];
m2_2829 -> m2_16  [key=2, style=dotted];
m2_2829 -> m2_2830  [key=0, style=solid];
m2_2826 -> m2_2827  [key=0, style=solid];
m2_2826 -> m2_13  [key=2, style=dotted];
m2_2826 -> m2_114  [key=2, style=dotted];
m2_2824 -> m2_13  [key=2, style=dotted];
m2_2824 -> m2_2825  [key=0, style=solid];
m2_2824 -> m2_15  [key=2, style=dotted];
m2_2820 -> m2_2826  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m2_2820 -> m2_2824  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m2_2820 -> m2_2821  [key=0, style=solid];
m2_2820 -> m2_1668  [key=2, style=dotted];
m2_2825 -> m2_2826  [key=0, style=solid];
m2_2825 -> m2_142  [key=2, style=dotted];
m2_2821 -> m2_2824  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2821 -> m2_2822  [key=0, style=solid];
m2_2821 -> m2_2831  [key=2, style=dotted];
m2_2823 -> m2_2824  [key=0, style=solid];
m2_2822 -> m2_2823  [key=0, style=solid];
m2_2830 -> m2_2819  [key=0, style=bold, color=blue];
m2_656 -> m2_657  [key=0, style=solid];
m2_658 -> m2_65  [key=2, style=dotted];
m2_658 -> m2_659  [key=0, style=solid];
m2_659 -> m2_16  [key=2, style=dotted];
m2_659 -> m2_660  [key=0, style=solid];
m2_657 -> m2_658  [key=0, style=solid];
m2_657 -> m2_661  [key=2, style=dotted];
m2_660 -> m2_656  [key=0, style=bold, color=blue];
m2_765 -> m2_766  [key=0, style=solid];
m2_769 -> m2_65  [key=2, style=dotted];
m2_769 -> m2_770  [key=0, style=solid];
m2_769 -> m2_775  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_777 -> m2_16  [key=2, style=dotted];
m2_777 -> m2_778  [key=0, style=solid];
m2_767 -> m2_769  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m2_767 -> m2_768  [key=0, style=solid];
m2_767 -> m2_12  [key=2, style=dotted];
m2_767 -> m2_772  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m2_768 -> m2_769  [key=0, style=solid];
m2_770 -> m2_771  [key=0, style=solid];
m2_770 -> m2_635  [key=2, style=dotted];
m2_770 -> m2_772  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_770 -> m2_773  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_775 -> m2_776  [key=0, style=solid];
m2_775 -> m2_738  [key=2, style=dotted];
m2_766 -> m2_777  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m2_766 -> m2_767  [key=0, style=solid];
m2_766 -> m2_768  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m2_766 -> m2_756  [key=2, style=dotted];
m2_776 -> m2_777  [key=0, style=solid];
m2_772 -> m2_773  [key=0, style=solid];
m2_772 -> m2_717  [key=2, style=dotted];
m2_771 -> m2_772  [key=0, style=solid];
m2_771 -> m2_716  [key=2, style=dotted];
m2_773 -> m2_774  [key=0, style=solid];
m2_773 -> m2_718  [key=2, style=dotted];
m2_774 -> m2_775  [key=0, style=solid];
m2_774 -> m2_719  [key=2, style=dotted];
m2_778 -> m2_765  [key=0, style=bold, color=blue];
m2_1943 -> m2_1944  [key=0, style=solid];
m2_1944 -> m2_1945  [key=0, style=solid];
m2_1944 -> m2_1946  [key=2, style=dotted];
m2_1945 -> m2_1943  [key=0, style=bold, color=blue];
m2_3820 -> m2_3821  [key=0, style=solid];
m2_3825 -> m2_16  [key=2, style=dotted];
m2_3825 -> m2_3826  [key=0, style=solid];
m2_3826 -> m2_16  [key=2, style=dotted];
m2_3826 -> m2_3827  [key=0, style=solid];
m2_3824 -> m2_3825  [key=0, style=solid];
m2_3824 -> m2_3826  [key=1, style=dashed, color=darkseagreen4, label=clonedObject];
m2_3824 -> m2_114  [key=2, style=dotted];
m2_3822 -> m2_13  [key=2, style=dotted];
m2_3822 -> m2_3824  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m2_3822 -> m2_3823  [key=0, style=solid];
m2_3823 -> m2_3824  [key=0, style=solid];
m2_3823 -> m2_541  [key=2, style=dotted];
m2_3821 -> m2_3822  [key=0, style=solid];
m2_3821 -> m2_3823  [key=1, style=dashed, color=darkseagreen4, label=original];
m2_3821 -> m2_3828  [key=2, style=dotted];
m2_3827 -> m2_3820  [key=0, style=bold, color=blue];
m2_517 -> m2_518  [key=0, style=solid];
m2_517 -> m2_520  [key=0, style=solid];
m2_517 -> m2_20  [key=2, style=dotted];
m2_1470 -> m2_1471  [key=0, style=solid];
m2_1473 -> m2_16  [key=2, style=dotted];
m2_1473 -> m2_1474  [key=0, style=solid];
m2_1474 -> m2_16  [key=2, style=dotted];
m2_1474 -> m2_1475  [key=0, style=solid];
m2_1475 -> m2_16  [key=2, style=dotted];
m2_1475 -> m2_1476  [key=0, style=solid];
m2_1476 -> m2_16  [key=2, style=dotted];
m2_1476 -> m2_1477  [key=0, style=solid];
m2_1477 -> m2_16  [key=2, style=dotted];
m2_1477 -> m2_1478  [key=0, style=solid];
m2_1478 -> m2_16  [key=2, style=dotted];
m2_1478 -> m2_1479  [key=0, style=solid];
m2_1478 -> m2_1484  [key=2, style=dotted];
m2_1479 -> m2_16  [key=2, style=dotted];
m2_1479 -> m2_1480  [key=0, style=solid];
m2_1479 -> m2_1484  [key=2, style=dotted];
m2_1480 -> m2_16  [key=2, style=dotted];
m2_1480 -> m2_1481  [key=0, style=solid];
m2_1481 -> m2_16  [key=2, style=dotted];
m2_1481 -> m2_1482  [key=0, style=solid];
m2_1472 -> m2_1473  [key=0, style=solid];
m2_1472 -> m2_1474  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_1475  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_1476  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_1477  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_1478  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_1479  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_1480  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_1481  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1472 -> m2_13  [key=2, style=dotted];
m2_1472 -> m2_114  [key=2, style=dotted];
m2_1472 -> m2_1482  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1482 -> m2_1483  [key=0, style=solid];
m2_1482 -> m2_598  [key=2, style=dotted];
m2_1471 -> m2_1472  [key=0, style=solid];
m2_1483 -> m2_1470  [key=0, style=bold, color=blue];
m2_1186 -> m2_1187  [key=0, style=solid];
m2_1189 -> m2_65  [key=2, style=dotted];
m2_1189 -> m2_1190  [key=0, style=solid];
m2_1190 -> m2_16  [key=2, style=dotted];
m2_1190 -> m2_1191  [key=0, style=solid];
m2_1187 -> m2_1189  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m2_1187 -> m2_1188  [key=0, style=solid];
m2_1187 -> m2_1192  [key=2, style=dotted];
m2_1187 -> m2_1193  [key=2, style=dotted];
m2_1188 -> m2_1189  [key=0, style=solid];
m2_1191 -> m2_1186  [key=0, style=bold, color=blue];
m2_693 -> m2_694  [key=0, style=solid];
m2_699 -> m2_672  [key=2, style=dotted];
m2_699 -> m2_700  [key=0, style=solid];
m2_694 -> m2_699  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_694 -> m2_695  [key=0, style=solid];
m2_694 -> m2_702  [key=2, style=dotted];
m2_694 -> m2_696  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_694 -> m2_697  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_694 -> m2_698  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_698 -> m2_699  [key=0, style=solid];
m2_700 -> m2_142  [key=2, style=dotted];
m2_700 -> m2_701  [key=0, style=solid];
m2_695 -> m2_696  [key=0, style=solid];
m2_696 -> m2_697  [key=0, style=solid];
m2_697 -> m2_698  [key=0, style=solid];
m2_701 -> m2_693  [key=0, style=bold, color=blue];
m2_1917 -> m2_1918  [key=0, style=solid];
m2_1918 -> m2_1919  [key=0, style=solid];
m2_1918 -> m2_1920  [key=2, style=dotted];
m2_1919 -> m2_1917  [key=0, style=bold, color=blue];
m2_3279 -> m2_3280  [key=0, style=solid];
m2_3282 -> m2_142  [key=2, style=dotted];
m2_3282 -> m2_3283  [key=0, style=solid];
m2_3285 -> m2_142  [key=2, style=dotted];
m2_3285 -> m2_3286  [key=0, style=solid];
m2_3281 -> m2_141  [key=2, style=dotted];
m2_3281 -> m2_3282  [key=0, style=solid];
m2_3284 -> m2_141  [key=2, style=dotted];
m2_3284 -> m2_3285  [key=0, style=solid];
m2_3283 -> m2_3284  [key=0, style=solid];
m2_3283 -> m2_3288  [key=2, style=dotted];
m2_3280 -> m2_3281  [key=0, style=solid];
m2_3280 -> m2_3287  [key=2, style=dotted];
m2_3286 -> m2_3279  [key=0, style=bold, color=blue];
m2_3921 -> m2_3922  [key=0, style=solid];
m2_3922 -> m2_2364  [key=2, style=dotted];
m2_3922 -> m2_3923  [key=0, style=solid];
m2_3922 -> m2_3925  [key=1, style=dashed, color=darkseagreen4, label=encodingName];
m2_3923 -> m2_3924  [key=0, style=solid];
m2_3923 -> m2_3925  [key=0, style=solid];
m2_3925 -> m2_3926  [key=0, style=solid];
m2_3925 -> m2_3927  [key=2, style=dotted];
m2_3924 -> m2_3926  [key=0, style=solid];
m2_3926 -> m2_3921  [key=0, style=bold, color=blue];
m2_683 -> m2_684  [key=0, style=solid];
m2_689 -> m2_672  [key=2, style=dotted];
m2_689 -> m2_690  [key=0, style=solid];
m2_684 -> m2_689  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_684 -> m2_685  [key=0, style=solid];
m2_684 -> m2_692  [key=2, style=dotted];
m2_684 -> m2_686  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_684 -> m2_687  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_684 -> m2_688  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_688 -> m2_689  [key=0, style=solid];
m2_690 -> m2_142  [key=2, style=dotted];
m2_690 -> m2_691  [key=0, style=solid];
m2_685 -> m2_686  [key=0, style=solid];
m2_686 -> m2_687  [key=0, style=solid];
m2_687 -> m2_688  [key=0, style=solid];
m2_691 -> m2_683  [key=0, style=bold, color=blue];
m2_576 -> m2_577  [key=0, style=solid];
m2_576 -> m2_578  [key=0, style=solid];
m2_576 -> m2_16  [key=2, style=dotted];
m2_580 -> m2_581  [key=0, style=solid];
m2_580 -> m2_575  [key=2, style=dotted];
m2_580 -> m2_171  [key=2, style=dotted];
m2_580 -> m2_172  [key=2, style=dotted];
m2_577 -> m2_582  [key=0, style=solid];
m2_577 -> m2_572  [key=0, style=bold, color=blue];
m2_579 -> m2_580  [key=0, style=solid];
m2_579 -> m2_581  [key=0, style=solid];
m2_581 -> m2_582  [key=0, style=solid];
m2_581 -> m2_29  [key=2, style=dotted];
m2_582 -> m2_291  [key=0, style=bold, color=blue];
m2_582 -> m2_16  [key=2, style=dotted];
m2_582 -> m2_583  [key=0, style=solid];
m2_2365 -> m2_2366  [key=0, style=solid];
m2_2367 -> m2_16  [key=2, style=dotted];
m2_2367 -> m2_2368  [key=0, style=solid];
m2_2367 -> m2_2363  [key=2, style=dotted];
m2_2367 -> m2_756  [key=2, style=dotted];
m2_2367 -> m2_912  [key=2, style=dotted];
m2_2366 -> m2_29  [key=2, style=dotted];
m2_2366 -> m2_2367  [key=0, style=solid];
m2_2368 -> m2_2365  [key=0, style=bold, color=blue];
m2_2571 -> m2_2572  [key=0, style=solid];
m2_2574 -> m2_16  [key=2, style=dotted];
m2_2574 -> m2_2575  [key=0, style=solid];
m2_2575 -> m2_16  [key=2, style=dotted];
m2_2575 -> m2_2576  [key=0, style=solid];
m2_2576 -> m2_16  [key=2, style=dotted];
m2_2576 -> m2_2577  [key=0, style=solid];
m2_2573 -> m2_29  [key=2, style=dotted];
m2_2573 -> m2_2574  [key=0, style=solid];
m2_2573 -> m2_2575  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m2_2573 -> m2_2576  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m2_2572 -> m2_2573  [key=0, style=solid];
m2_2577 -> m2_2571  [key=0, style=bold, color=blue];
m2_1547 -> m2_1548  [key=0, style=solid];
m2_1550 -> m2_16  [key=2, style=dotted];
m2_1550 -> m2_1551  [key=0, style=solid];
m2_1549 -> m2_29  [key=2, style=dotted];
m2_1549 -> m2_1550  [key=0, style=solid];
m2_1548 -> m2_1549  [key=0, style=solid];
m2_1551 -> m2_1547  [key=0, style=bold, color=blue];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_494  [key=0, style=bold, color=blue];
m2_505 -> m2_506  [key=0, style=solid];
m2_505 -> m2_259  [key=2, style=dotted];
m2_506 -> m2_507  [key=0, style=solid];
m2_506 -> m2_508  [key=0, style=solid];
m2_507 -> m2_508  [key=0, style=solid];
m2_507 -> m2_37  [key=2, style=dotted];
m2_507 -> m2_515  [key=0, style=solid];
m2_508 -> m2_509  [key=0, style=solid];
m2_508 -> m2_510  [key=0, style=solid];
m2_508 -> m2_516  [key=2, style=dotted];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_37  [key=2, style=dotted];
m2_509 -> m2_517  [key=2, style=dotted];
m2_510 -> m2_511  [key=0, style=solid];
m2_510 -> m2_525  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m2_510 -> m2_518  [key=2, style=dotted];
m2_511 -> m2_512  [key=0, style=solid, color=red];
m2_511 -> m2_527  [key=0, style=solid];
m2_511 -> m2_513  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_511 -> m2_518  [key=2, style=dotted];
m2_513 -> m2_514  [key=0, style=solid];
m2_513 -> m2_263  [key=2, style=dotted];
m2_513 -> m2_513  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_513 -> m2_515  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_513 -> m2_518  [key=1, style=dashed, color=darkseagreen4, label=escape];
m2_513 -> m2_521  [key=1, style=dashed, color=darkseagreen4, label=escape];
m2_514 -> m2_515  [key=0, style=solid];
m2_514 -> m2_477  [key=2, style=dotted];
m2_514 -> m2_514  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_514 -> m2_518  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_514 -> m2_521  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_514 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_512 -> m2_513  [key=0, style=solid, color=red];
m2_512 -> m2_518  [key=2, style=dotted];
m2_515 -> m2_516  [key=0, style=solid];
m2_515 -> m2_515  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_515 -> m2_517  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_515 -> m2_519  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_515 -> m2_520  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_515 -> m2_522  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_515 -> m2_505  [key=0, style=bold, color=blue];
m2_906 -> m2_907  [key=0, style=solid];
m2_908 -> m2_65  [key=2, style=dotted];
m2_908 -> m2_909  [key=0, style=solid];
m2_909 -> m2_16  [key=2, style=dotted];
m2_909 -> m2_910  [key=0, style=solid];
m2_907 -> m2_908  [key=0, style=solid];
m2_907 -> m2_112  [key=2, style=dotted];
m2_907 -> m2_911  [key=2, style=dotted];
m2_907 -> m2_904  [key=2, style=dotted];
m2_907 -> m2_194  [key=2, style=dotted];
m2_907 -> m2_912  [key=2, style=dotted];
m2_910 -> m2_906  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=0, style=solid];
m2_12 -> m2_23  [key=2, style=dotted];
m2_3010 -> m2_3011  [key=0, style=solid];
m2_3011 -> m2_3013  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3011 -> m2_25  [key=2, style=dotted];
m2_3011 -> m2_3012  [key=0, style=solid];
m2_3012 -> m2_3010  [key=0, style=bold, color=blue];
m2_3255 -> m2_3262  [key=0, style=solid];
m2_3263 -> m2_191  [key=2, style=dotted];
m2_3263 -> m2_3264  [key=0, style=solid];
m2_3263 -> m2_3265  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_3262 -> m2_3263  [key=0, style=solid];
m2_3262 -> m2_189  [key=2, style=dotted];
m2_3262 -> m2_190  [key=2, style=dotted];
m2_3262 -> m2_3265  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m2_3264 -> m2_1668  [key=2, style=dotted];
m2_3264 -> m2_3265  [key=0, style=solid];
m2_3265 -> m2_2326  [key=2, style=dotted];
m2_3265 -> m2_3266  [key=0, style=solid];
m2_3266 -> m2_3255  [key=0, style=bold, color=blue];
m2_16 -> m2_2  [key=0, style=bold, color=blue];
m2_2962 -> m2_2963  [key=0, style=solid];
m2_2963 -> m2_65  [key=2, style=dotted];
m2_2963 -> m2_2964  [key=0, style=solid];
m2_2963 -> m2_2972  [key=2, style=dotted];
m2_2963 -> m2_2965  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2967 -> m2_65  [key=2, style=dotted];
m2_2967 -> m2_2968  [key=0, style=solid];
m2_2967 -> m2_2972  [key=2, style=dotted];
m2_2967 -> m2_2969  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2964 -> m2_16  [key=2, style=dotted];
m2_2964 -> m2_2965  [key=0, style=solid];
m2_2966 -> m2_16  [key=2, style=dotted];
m2_2966 -> m2_2967  [key=0, style=solid];
m2_2968 -> m2_16  [key=2, style=dotted];
m2_2968 -> m2_2969  [key=0, style=solid];
m2_2970 -> m2_16  [key=2, style=dotted];
m2_2970 -> m2_2971  [key=0, style=solid];
m2_2965 -> m2_29  [key=2, style=dotted];
m2_2965 -> m2_2966  [key=0, style=solid];
m2_2969 -> m2_29  [key=2, style=dotted];
m2_2969 -> m2_2970  [key=0, style=solid];
m2_2971 -> m2_2962  [key=0, style=bold, color=blue];
m2_913 -> m2_914  [key=0, style=solid];
m2_916 -> m2_16  [key=2, style=dotted];
m2_916 -> m2_917  [key=0, style=solid];
m2_915 -> m2_916  [key=0, style=solid];
m2_915 -> m2_13  [key=2, style=dotted];
m2_915 -> m2_541  [key=2, style=dotted];
m2_914 -> m2_912  [key=2, style=dotted];
m2_914 -> m2_194  [key=2, style=dotted];
m2_914 -> m2_915  [key=0, style=solid];
m2_914 -> m2_904  [key=2, style=dotted];
m2_914 -> m2_112  [key=2, style=dotted];
m2_914 -> m2_911  [key=2, style=dotted];
m2_917 -> m2_913  [key=0, style=bold, color=blue];
m2_3635 -> m2_3636  [key=0, style=solid];
m2_3638 -> m2_65  [key=2, style=dotted];
m2_3638 -> m2_3639  [key=0, style=solid];
m2_3638 -> m2_3640  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3639 -> m2_16  [key=2, style=dotted];
m2_3639 -> m2_3640  [key=0, style=solid];
m2_3640 -> m2_29  [key=2, style=dotted];
m2_3640 -> m2_3641  [key=0, style=solid];
m2_3636 -> m2_3638  [key=1, style=dashed, color=darkseagreen4, label=product];
m2_3636 -> m2_3637  [key=0, style=solid];
m2_3636 -> m2_3642  [key=2, style=dotted];
m2_3637 -> m2_3638  [key=0, style=solid];
m2_3637 -> m2_12  [key=2, style=dotted];
m2_3641 -> m2_3635  [key=0, style=bold, color=blue];
m2_1028 -> m2_1029  [key=0, style=solid];
m2_1030 -> m2_13  [key=2, style=dotted];
m2_1030 -> m2_1031  [key=0, style=solid];
m2_1030 -> m2_1032  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_1029 -> m2_1030  [key=0, style=solid];
m2_1029 -> m2_1031  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_1029 -> m2_1032  [key=1, style=dashed, color=darkseagreen4, label=obj];
m2_1031 -> m2_541  [key=2, style=dotted];
m2_1031 -> m2_1032  [key=0, style=solid];
m2_1031 -> m2_1033  [key=1, style=dashed, color=darkseagreen4, label=indented];
m2_1032 -> m2_15  [key=2, style=dotted];
m2_1032 -> m2_1033  [key=0, style=solid];
m2_1033 -> m2_1034  [key=0, style=solid];
m2_1033 -> m2_1035  [key=2, style=dotted];
m2_1034 -> m2_1028  [key=0, style=bold, color=blue];
m2_3552 -> m2_3553  [key=0, style=solid];
m2_3553 -> m2_13  [key=2, style=dotted];
m2_3553 -> m2_3554  [key=0, style=solid];
m2_3553 -> m2_3556  [key=2, style=dotted];
m2_3553 -> m2_1668  [key=2, style=dotted];
m2_3553 -> m2_15  [key=2, style=dotted];
m2_3554 -> m2_142  [key=2, style=dotted];
m2_3554 -> m2_3555  [key=0, style=solid];
m2_3555 -> m2_3552  [key=0, style=bold, color=blue];
m2_140 -> m2_166  [key=0, style=solid];
m2_2930 -> m2_2931  [key=0, style=solid];
m2_2931 -> m2_25  [key=2, style=dotted];
m2_2931 -> m2_2933  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2931 -> m2_2932  [key=0, style=solid];
m2_2932 -> m2_2930  [key=0, style=bold, color=blue];
m2_2555 -> m2_2556  [key=0, style=solid];
m2_2556 -> m2_25  [key=2, style=dotted];
m2_2556 -> m2_2557  [key=0, style=solid];
m2_2556 -> m2_2558  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2557 -> m2_2555  [key=0, style=bold, color=blue];
m2_1947 -> m2_1948  [key=0, style=solid];
m2_1950 -> m2_65  [key=2, style=dotted];
m2_1950 -> m2_1951  [key=0, style=solid];
m2_1950 -> m2_1952  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1951 -> m2_16  [key=2, style=dotted];
m2_1951 -> m2_1952  [key=0, style=solid];
m2_1953 -> m2_16  [key=2, style=dotted];
m2_1953 -> m2_1954  [key=0, style=solid];
m2_1954 -> m2_16  [key=2, style=dotted];
m2_1954 -> m2_1955  [key=0, style=solid];
m2_1952 -> m2_29  [key=2, style=dotted];
m2_1952 -> m2_1953  [key=0, style=solid];
m2_1952 -> m2_1954  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m2_1948 -> m2_1950  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m2_1948 -> m2_1949  [key=0, style=solid];
m2_1948 -> m2_1890  [key=2, style=dotted];
m2_1949 -> m2_1950  [key=0, style=solid];
m2_1949 -> m2_1902  [key=2, style=dotted];
m2_1955 -> m2_1947  [key=0, style=bold, color=blue];
m2_3828 -> m2_3829  [key=0, style=solid];
m2_3829 -> m2_3830  [key=0, style=solid];
m2_3830 -> m2_3828  [key=0, style=bold, color=blue];
m2_2602 -> m2_2603  [key=0, style=solid];
m2_2608 -> m2_16  [key=2, style=dotted];
m2_2608 -> m2_2609  [key=0, style=solid];
m2_2607 -> m2_2608  [key=0, style=solid];
m2_2607 -> m2_718  [key=2, style=dotted];
m2_2607 -> m2_2611  [key=2, style=dotted];
m2_2607 -> m2_719  [key=2, style=dotted];
m2_2606 -> m2_2607  [key=0, style=solid];
m2_2606 -> m2_717  [key=2, style=dotted];
m2_2605 -> m2_2607  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_2605 -> m2_635  [key=2, style=dotted];
m2_2605 -> m2_2606  [key=0, style=solid];
m2_2603 -> m2_2606  [key=1, style=dashed, color=darkseagreen4, label=cc];
m2_2603 -> m2_2604  [key=0, style=solid];
m2_2603 -> m2_2601  [key=2, style=dotted];
m2_2604 -> m2_2606  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2604 -> m2_2605  [key=0, style=solid];
m2_2604 -> m2_2610  [key=2, style=dotted];
m2_2609 -> m2_2602  [key=0, style=bold, color=blue];
m2_2612 -> m2_2613  [key=0, style=solid];
m2_2614 -> m2_65  [key=2, style=dotted];
m2_2614 -> m2_2615  [key=0, style=solid];
m2_2615 -> m2_16  [key=2, style=dotted];
m2_2615 -> m2_2616  [key=0, style=solid];
m2_2613 -> m2_2614  [key=0, style=solid];
m2_2613 -> m2_2617  [key=2, style=dotted];
m2_2616 -> m2_2612  [key=0, style=bold, color=blue];
m2_3743 -> m2_3744  [key=0, style=solid];
m2_3751 -> m2_16  [key=2, style=dotted];
m2_3751 -> m2_3752  [key=0, style=solid];
m2_3756 -> m2_16  [key=2, style=dotted];
m2_3756 -> m2_3757  [key=0, style=solid];
m2_3749 -> m2_16  [key=2, style=dotted];
m2_3749 -> m2_3750  [key=0, style=solid];
m2_3754 -> m2_16  [key=2, style=dotted];
m2_3754 -> m2_3755  [key=0, style=solid];
m2_3755 -> m2_16  [key=2, style=dotted];
m2_3755 -> m2_3756  [key=0, style=solid];
m2_3755 -> m2_193  [key=2, style=dotted];
m2_3759 -> m2_16  [key=2, style=dotted];
m2_3759 -> m2_3760  [key=0, style=solid];
m2_3760 -> m2_16  [key=2, style=dotted];
m2_3760 -> m2_3761  [key=0, style=solid];
m2_3760 -> m2_193  [key=2, style=dotted];
m2_3761 -> m2_16  [key=2, style=dotted];
m2_3761 -> m2_3762  [key=0, style=solid];
m2_3745 -> m2_3751  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3745 -> m2_3756  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3745 -> m2_756  [key=2, style=dotted];
m2_3745 -> m2_3746  [key=0, style=solid];
m2_3745 -> m2_3748  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3750 -> m2_3751  [key=0, style=solid];
m2_3750 -> m2_114  [key=2, style=dotted];
m2_3752 -> m2_3753  [key=0, style=solid];
m2_3752 -> m2_189  [key=2, style=dotted];
m2_3752 -> m2_190  [key=2, style=dotted];
m2_3753 -> m2_3756  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3753 -> m2_3754  [key=0, style=solid];
m2_3753 -> m2_3755  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3753 -> m2_3142  [key=2, style=dotted];
m2_3757 -> m2_3758  [key=0, style=solid];
m2_3757 -> m2_189  [key=2, style=dotted];
m2_3757 -> m2_190  [key=2, style=dotted];
m2_3748 -> m2_3749  [key=0, style=solid];
m2_3748 -> m2_3750  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3748 -> m2_3752  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3748 -> m2_541  [key=2, style=dotted];
m2_3758 -> m2_3759  [key=0, style=solid];
m2_3758 -> m2_3760  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3758 -> m2_3761  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3758 -> m2_3142  [key=2, style=dotted];
m2_3747 -> m2_13  [key=2, style=dotted];
m2_3747 -> m2_3750  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3747 -> m2_3748  [key=0, style=solid];
m2_3744 -> m2_3745  [key=0, style=solid];
m2_3744 -> m2_3752  [key=1, style=dashed, color=darkseagreen4, label=culture];
m2_3744 -> m2_3757  [key=1, style=dashed, color=darkseagreen4, label=culture];
m2_3744 -> m2_344  [key=2, style=dotted];
m2_3744 -> m2_3747  [key=1, style=dashed, color=darkseagreen4, label=culture];
m2_3746 -> m2_3752  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m2_3746 -> m2_3757  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m2_3746 -> m2_3747  [key=0, style=solid];
m2_3762 -> m2_3743  [key=0, style=bold, color=blue];
m2_3871 -> m2_3872  [key=0, style=solid];
m2_3873 -> m2_25  [key=2, style=dotted];
m2_3873 -> m2_3874  [key=0, style=solid];
m2_3873 -> m2_3875  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3872 -> m2_3873  [key=0, style=solid];
m2_3872 -> m2_3876  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m2_3874 -> m2_3871  [key=0, style=bold, color=blue];
m2_1687 -> m2_1688  [key=0, style=solid];
m2_1692 -> m2_65  [key=2, style=dotted];
m2_1692 -> m2_1693  [key=0, style=solid];
m2_1693 -> m2_16  [key=2, style=dotted];
m2_1693 -> m2_1694  [key=0, style=solid];
m2_1688 -> m2_1692  [key=1, style=dashed, color=darkseagreen4, label=strings];
m2_1688 -> m2_1689  [key=0, style=solid];
m2_1688 -> m2_112  [key=2, style=dotted];
m2_1688 -> m2_1690  [key=1, style=dashed, color=darkseagreen4, label=strings];
m2_1688 -> m2_1691  [key=1, style=dashed, color=darkseagreen4, label=strings];
m2_1691 -> m2_1692  [key=0, style=solid];
m2_1691 -> m2_1695  [key=2, style=dotted];
m2_1689 -> m2_1690  [key=0, style=solid];
m2_1689 -> m2_1695  [key=2, style=dotted];
m2_1690 -> m2_1691  [key=0, style=solid];
m2_1690 -> m2_1695  [key=2, style=dotted];
m2_1694 -> m2_1687  [key=0, style=bold, color=blue];
m2_1696 -> m2_1697  [key=0, style=solid];
m2_1701 -> m2_16  [key=2, style=dotted];
m2_1701 -> m2_1702  [key=0, style=solid];
m2_1702 -> m2_16  [key=2, style=dotted];
m2_1702 -> m2_1703  [key=0, style=solid];
m2_1700 -> m2_29  [key=2, style=dotted];
m2_1700 -> m2_1701  [key=0, style=solid];
m2_1700 -> m2_1702  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_1698 -> m2_1700  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1698 -> m2_1699  [key=0, style=solid];
m2_1698 -> m2_141  [key=2, style=dotted];
m2_1699 -> m2_1700  [key=0, style=solid];
m2_1699 -> m2_142  [key=2, style=dotted];
m2_1697 -> m2_1698  [key=0, style=solid];
m2_1697 -> m2_1704  [key=2, style=dotted];
m2_1703 -> m2_1696  [key=0, style=bold, color=blue];
m2_2973 -> m2_2974  [key=0, style=solid];
m2_2974 -> m2_65  [key=2, style=dotted];
m2_2974 -> m2_2975  [key=0, style=solid];
m2_2974 -> m2_2979  [key=2, style=dotted];
m2_2974 -> m2_2980  [key=2, style=dotted];
m2_2975 -> m2_16  [key=2, style=dotted];
m2_2975 -> m2_2976  [key=0, style=solid];
m2_2977 -> m2_16  [key=2, style=dotted];
m2_2977 -> m2_2978  [key=0, style=solid];
m2_2977 -> m2_2980  [key=2, style=dotted];
m2_2976 -> m2_29  [key=2, style=dotted];
m2_2976 -> m2_2977  [key=0, style=solid];
m2_2978 -> m2_2973  [key=0, style=bold, color=blue];
m2_3189 -> m2_3190  [key=0, style=solid];
m2_3193 -> m2_16  [key=2, style=dotted];
m2_3193 -> m2_3194  [key=0, style=solid];
m2_3194 -> m2_16  [key=2, style=dotted];
m2_3194 -> m2_3195  [key=0, style=solid];
m2_3195 -> m2_16  [key=2, style=dotted];
m2_3195 -> m2_3196  [key=0, style=solid];
m2_3191 -> m2_29  [key=2, style=dotted];
m2_3191 -> m2_3193  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3191 -> m2_3194  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3191 -> m2_3195  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3191 -> m2_3192  [key=0, style=solid];
m2_3192 -> m2_3193  [key=0, style=solid];
m2_3192 -> m2_598  [key=2, style=dotted];
m2_3190 -> m2_3191  [key=0, style=solid];
m2_3190 -> m2_3197  [key=2, style=dotted];
m2_3196 -> m2_3189  [key=0, style=bold, color=blue];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_190 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_190 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_157  [key=0, style=solid];
m2_154 -> m2_161  [key=0, style=solid];
m2_154 -> m2_134  [key=2, style=dotted];
m2_3043 -> m2_3044  [key=0, style=solid];
m2_3045 -> m2_16  [key=2, style=dotted];
m2_3045 -> m2_3046  [key=0, style=solid];
m2_3045 -> m2_3055  [key=2, style=dotted];
m2_3045 -> m2_3056  [key=2, style=dotted];
m2_3046 -> m2_16  [key=2, style=dotted];
m2_3046 -> m2_3047  [key=0, style=solid];
m2_3046 -> m2_3057  [key=2, style=dotted];
m2_3047 -> m2_16  [key=2, style=dotted];
m2_3047 -> m2_3048  [key=0, style=solid];
m2_3048 -> m2_16  [key=2, style=dotted];
m2_3048 -> m2_3049  [key=0, style=solid];
m2_3050 -> m2_16  [key=2, style=dotted];
m2_3050 -> m2_3051  [key=0, style=solid];
m2_3050 -> m2_3055  [key=2, style=dotted];
m2_3050 -> m2_3056  [key=2, style=dotted];
m2_3051 -> m2_16  [key=2, style=dotted];
m2_3051 -> m2_3052  [key=0, style=solid];
m2_3051 -> m2_3057  [key=2, style=dotted];
m2_3052 -> m2_16  [key=2, style=dotted];
m2_3052 -> m2_3053  [key=0, style=solid];
m2_3053 -> m2_16  [key=2, style=dotted];
m2_3053 -> m2_3054  [key=0, style=solid];
m2_3044 -> m2_3045  [key=0, style=solid];
m2_3044 -> m2_3046  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_3044 -> m2_3047  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_3044 -> m2_3048  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_3044 -> m2_13  [key=2, style=dotted];
m2_3044 -> m2_114  [key=2, style=dotted];
m2_3049 -> m2_3050  [key=0, style=solid];
m2_3049 -> m2_3051  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3049 -> m2_3052  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3049 -> m2_3053  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_3049 -> m2_13  [key=2, style=dotted];
m2_3049 -> m2_114  [key=2, style=dotted];
m2_3054 -> m2_3043  [key=0, style=bold, color=blue];
m2_1065 -> m2_1066  [key=0, style=solid];
m2_1066 -> m2_65  [key=2, style=dotted];
m2_1066 -> m2_1067  [key=0, style=solid];
m2_1066 -> m2_1072  [key=2, style=dotted];
m2_1067 -> m2_16  [key=2, style=dotted];
m2_1067 -> m2_1068  [key=0, style=solid];
m2_1069 -> m2_16  [key=2, style=dotted];
m2_1069 -> m2_1070  [key=0, style=solid];
m2_1070 -> m2_16  [key=2, style=dotted];
m2_1070 -> m2_1071  [key=0, style=solid];
m2_1068 -> m2_29  [key=2, style=dotted];
m2_1068 -> m2_1069  [key=0, style=solid];
m2_1068 -> m2_1070  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1071 -> m2_1065  [key=0, style=bold, color=blue];
m2_2684 -> m2_2685  [key=0, style=solid];
m2_2686 -> m2_142  [key=2, style=dotted];
m2_2686 -> m2_2687  [key=0, style=solid];
m2_2688 -> m2_142  [key=2, style=dotted];
m2_2688 -> m2_2689  [key=0, style=solid];
m2_2685 -> m2_141  [key=2, style=dotted];
m2_2685 -> m2_2686  [key=0, style=solid];
m2_2685 -> m2_2690  [key=2, style=dotted];
m2_2687 -> m2_141  [key=2, style=dotted];
m2_2687 -> m2_2688  [key=0, style=solid];
m2_2687 -> m2_2691  [key=2, style=dotted];
m2_2689 -> m2_2684  [key=0, style=bold, color=blue];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=0, style=solid];
m2_574 -> m2_65  [key=2, style=dotted];
m2_574 -> m2_575  [key=0, style=solid];
m2_574 -> m2_576  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1642 -> m2_1643  [key=0, style=solid];
m2_1644 -> m2_25  [key=2, style=dotted];
m2_1644 -> m2_1645  [key=0, style=solid];
m2_1644 -> m2_1646  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1643 -> m2_1644  [key=0, style=solid];
m2_1643 -> m2_1647  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1645 -> m2_1642  [key=0, style=bold, color=blue];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_119  [key=0, style=solid];
m2_118 -> m2_65  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_123  [key=2, style=dotted];
m2_119 -> m2_16  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [key=0, style=solid];
m2_119 -> m2_124  [key=2, style=dotted];
m2_121 -> m2_16  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_125  [key=2, style=dotted];
m2_121 -> m2_126  [key=2, style=dotted];
m2_120 -> m2_29  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=0, style=solid];
m2_116 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_123  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_124  [key=2, style=dotted];
m2_117 -> m2_119  [key=0, style=solid];
m2_117 -> m2_123  [key=2, style=dotted];
m2_122 -> m2_115  [key=0, style=bold, color=blue];
m2_122 -> m2_20  [key=0, style=bold, color=blue];
m2_3221 -> m2_3222  [key=0, style=solid];
m2_3226 -> m2_16  [key=2, style=dotted];
m2_3226 -> m2_3227  [key=0, style=solid];
m2_3227 -> m2_16  [key=2, style=dotted];
m2_3227 -> m2_3228  [key=0, style=solid];
m2_3227 -> m2_904  [key=2, style=dotted];
m2_3228 -> m2_16  [key=2, style=dotted];
m2_3228 -> m2_3229  [key=0, style=solid];
m2_3228 -> m2_904  [key=2, style=dotted];
m2_3225 -> m2_29  [key=2, style=dotted];
m2_3225 -> m2_3226  [key=0, style=solid];
m2_3225 -> m2_3227  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3225 -> m2_3228  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3223 -> m2_3225  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3223 -> m2_3224  [key=0, style=solid];
m2_3223 -> m2_141  [key=2, style=dotted];
m2_3224 -> m2_3225  [key=0, style=solid];
m2_3224 -> m2_142  [key=2, style=dotted];
m2_3222 -> m2_12  [key=2, style=dotted];
m2_3222 -> m2_904  [key=2, style=dotted];
m2_3222 -> m2_3223  [key=0, style=solid];
m2_3229 -> m2_3221  [key=0, style=bold, color=blue];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_98  [key=2, style=dotted];
m2_114 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_1540 -> m2_1541  [key=0, style=solid];
m2_1543 -> m2_16  [key=2, style=dotted];
m2_1543 -> m2_1544  [key=0, style=solid];
m2_1544 -> m2_16  [key=2, style=dotted];
m2_1544 -> m2_1545  [key=0, style=solid];
m2_1545 -> m2_16  [key=2, style=dotted];
m2_1545 -> m2_1546  [key=0, style=solid];
m2_1542 -> m2_29  [key=2, style=dotted];
m2_1542 -> m2_1543  [key=0, style=solid];
m2_1542 -> m2_1544  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_1542 -> m2_1545  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_1541 -> m2_1542  [key=0, style=solid];
m2_1546 -> m2_1540  [key=0, style=bold, color=blue];
m2_1800 -> m2_1801  [key=0, style=solid];
m2_1801 -> m2_141  [key=2, style=dotted];
m2_1801 -> m2_1802  [key=0, style=solid];
m2_1802 -> m2_1800  [key=0, style=bold, color=blue];
m2_3724 -> m2_3725  [key=0, style=solid];
m2_3731 -> m2_16  [key=2, style=dotted];
m2_3731 -> m2_3732  [key=0, style=solid];
m2_3736 -> m2_16  [key=2, style=dotted];
m2_3736 -> m2_3737  [key=0, style=solid];
m2_3729 -> m2_16  [key=2, style=dotted];
m2_3729 -> m2_3730  [key=0, style=solid];
m2_3734 -> m2_16  [key=2, style=dotted];
m2_3734 -> m2_3735  [key=0, style=solid];
m2_3735 -> m2_16  [key=2, style=dotted];
m2_3735 -> m2_3736  [key=0, style=solid];
m2_3735 -> m2_193  [key=2, style=dotted];
m2_3739 -> m2_16  [key=2, style=dotted];
m2_3739 -> m2_3740  [key=0, style=solid];
m2_3740 -> m2_16  [key=2, style=dotted];
m2_3740 -> m2_3741  [key=0, style=solid];
m2_3740 -> m2_193  [key=2, style=dotted];
m2_3741 -> m2_16  [key=2, style=dotted];
m2_3741 -> m2_3742  [key=0, style=solid];
m2_3725 -> m2_3731  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3725 -> m2_3736  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3725 -> m2_756  [key=2, style=dotted];
m2_3725 -> m2_3726  [key=0, style=solid];
m2_3725 -> m2_3728  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3730 -> m2_3731  [key=0, style=solid];
m2_3730 -> m2_114  [key=2, style=dotted];
m2_3732 -> m2_3733  [key=0, style=solid];
m2_3732 -> m2_189  [key=2, style=dotted];
m2_3732 -> m2_190  [key=2, style=dotted];
m2_3733 -> m2_3736  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3733 -> m2_3734  [key=0, style=solid];
m2_3733 -> m2_3735  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3733 -> m2_3142  [key=2, style=dotted];
m2_3737 -> m2_3738  [key=0, style=solid];
m2_3737 -> m2_189  [key=2, style=dotted];
m2_3737 -> m2_190  [key=2, style=dotted];
m2_3728 -> m2_3729  [key=0, style=solid];
m2_3728 -> m2_3730  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3728 -> m2_3732  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3728 -> m2_541  [key=2, style=dotted];
m2_3738 -> m2_3739  [key=0, style=solid];
m2_3738 -> m2_3740  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3738 -> m2_3741  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3738 -> m2_3142  [key=2, style=dotted];
m2_3727 -> m2_13  [key=2, style=dotted];
m2_3727 -> m2_3730  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3727 -> m2_3728  [key=0, style=solid];
m2_3726 -> m2_3732  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m2_3726 -> m2_3737  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m2_3726 -> m2_3727  [key=0, style=solid];
m2_3742 -> m2_3724  [key=0, style=bold, color=blue];
m2_2427 -> m2_2428  [key=0, style=solid];
m2_2430 -> m2_16  [key=2, style=dotted];
m2_2430 -> m2_2431  [key=0, style=solid];
m2_2429 -> m2_29  [key=2, style=dotted];
m2_2429 -> m2_2430  [key=0, style=solid];
m2_2428 -> m2_2429  [key=0, style=solid];
m2_2431 -> m2_2427  [key=0, style=bold, color=blue];
m2_1568 -> m2_1569  [key=0, style=solid];
m2_1570 -> m2_29  [key=2, style=dotted];
m2_1570 -> m2_1571  [key=0, style=solid];
m2_1569 -> m2_1570  [key=0, style=solid];
m2_1571 -> m2_1568  [key=0, style=bold, color=blue];
m2_1090 -> m2_1091  [key=0, style=solid];
m2_1093 -> m2_16  [key=2, style=dotted];
m2_1093 -> m2_1094  [key=0, style=solid];
m2_1095 -> m2_16  [key=2, style=dotted];
m2_1095 -> m2_1096  [key=0, style=solid];
m2_1092 -> m2_1093  [key=0, style=solid];
m2_1092 -> m2_1097  [key=2, style=dotted];
m2_1092 -> m2_1098  [key=2, style=dotted];
m2_1092 -> m2_1094  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1094 -> m2_1095  [key=0, style=solid];
m2_1094 -> m2_1097  [key=2, style=dotted];
m2_1094 -> m2_52  [key=2, style=dotted];
m2_1091 -> m2_1092  [key=0, style=solid];
m2_1091 -> m2_1089  [key=2, style=dotted];
m2_1096 -> m2_1090  [key=0, style=bold, color=blue];
m2_3405 -> m2_3406  [key=0, style=solid];
m2_3408 -> m2_16  [key=2, style=dotted];
m2_3408 -> m2_3409  [key=0, style=solid];
m2_3410 -> m2_16  [key=2, style=dotted];
m2_3410 -> m2_3411  [key=0, style=solid];
m2_3407 -> m2_3408  [key=0, style=solid];
m2_3407 -> m2_13  [key=2, style=dotted];
m2_3407 -> m2_3413  [key=2, style=dotted];
m2_3407 -> m2_541  [key=2, style=dotted];
m2_3407 -> m2_3409  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3409 -> m2_3410  [key=0, style=solid];
m2_3409 -> m2_13  [key=2, style=dotted];
m2_3409 -> m2_3413  [key=2, style=dotted];
m2_3409 -> m2_114  [key=2, style=dotted];
m2_3406 -> m2_3407  [key=0, style=solid];
m2_3406 -> m2_3412  [key=2, style=dotted];
m2_3411 -> m2_3405  [key=0, style=bold, color=blue];
m2_1202 -> m2_1203  [key=0, style=solid];
m2_1204 -> m2_65  [key=2, style=dotted];
m2_1204 -> m2_1205  [key=0, style=solid];
m2_1204 -> m2_1206  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1205 -> m2_16  [key=2, style=dotted];
m2_1205 -> m2_1206  [key=0, style=solid];
m2_1207 -> m2_16  [key=2, style=dotted];
m2_1207 -> m2_1208  [key=0, style=solid];
m2_1207 -> m2_1048  [key=2, style=dotted];
m2_1208 -> m2_16  [key=2, style=dotted];
m2_1208 -> m2_1209  [key=0, style=solid];
m2_1209 -> m2_16  [key=2, style=dotted];
m2_1209 -> m2_1210  [key=0, style=solid];
m2_1210 -> m2_16  [key=2, style=dotted];
m2_1210 -> m2_1211  [key=0, style=solid];
m2_1211 -> m2_16  [key=2, style=dotted];
m2_1211 -> m2_1212  [key=0, style=solid];
m2_1212 -> m2_16  [key=2, style=dotted];
m2_1212 -> m2_1213  [key=0, style=solid];
m2_1213 -> m2_16  [key=2, style=dotted];
m2_1213 -> m2_1214  [key=0, style=solid];
m2_1206 -> m2_29  [key=2, style=dotted];
m2_1206 -> m2_1207  [key=0, style=solid];
m2_1206 -> m2_1208  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_1206 -> m2_1209  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_1206 -> m2_1210  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_1206 -> m2_1211  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_1206 -> m2_1212  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_1206 -> m2_1213  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m2_1203 -> m2_1204  [key=0, style=solid];
m2_1203 -> m2_1215  [key=2, style=dotted];
m2_1203 -> m2_1048  [key=2, style=dotted];
m2_1214 -> m2_1202  [key=0, style=bold, color=blue];
m2_1681 -> m2_1682  [key=0, style=solid];
m2_1682 -> m2_25  [key=2, style=dotted];
m2_1682 -> m2_1684  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1682 -> m2_1683  [key=0, style=solid];
m2_1683 -> m2_1681  [key=0, style=bold, color=blue];
m2_2703 -> m2_2704  [key=0, style=solid];
m2_2708 -> m2_16  [key=2, style=dotted];
m2_2708 -> m2_2709  [key=0, style=solid];
m2_2708 -> m2_2700  [key=2, style=dotted];
m2_2707 -> m2_29  [key=2, style=dotted];
m2_2707 -> m2_2708  [key=0, style=solid];
m2_2705 -> m2_2707  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2705 -> m2_2706  [key=0, style=solid];
m2_2705 -> m2_141  [key=2, style=dotted];
m2_2706 -> m2_2707  [key=0, style=solid];
m2_2706 -> m2_142  [key=2, style=dotted];
m2_2704 -> m2_2705  [key=0, style=solid];
m2_2704 -> m2_2692  [key=2, style=dotted];
m2_2709 -> m2_2703  [key=0, style=bold, color=blue];
m2_3463 -> m2_3464  [key=0, style=solid];
m2_3468 -> m2_16  [key=2, style=dotted];
m2_3468 -> m2_3469  [key=0, style=solid];
m2_3465 -> m2_3468  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3465 -> m2_3466  [key=0, style=solid];
m2_3465 -> m2_2775  [key=2, style=dotted];
m2_3465 -> m2_3467  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m2_3467 -> m2_3468  [key=0, style=solid];
m2_3467 -> m2_2811  [key=2, style=dotted];
m2_3469 -> m2_3470  [key=0, style=solid];
m2_3469 -> m2_2779  [key=2, style=dotted];
m2_3466 -> m2_13  [key=2, style=dotted];
m2_3466 -> m2_3467  [key=0, style=solid];
m2_3466 -> m2_634  [key=2, style=dotted];
m2_3464 -> m2_3465  [key=0, style=solid];
m2_3464 -> m2_3469  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_3464 -> m2_2774  [key=2, style=dotted];
m2_3470 -> m2_142  [key=2, style=dotted];
m2_3470 -> m2_3471  [key=0, style=solid];
m2_3471 -> m2_3463  [key=0, style=bold, color=blue];
m2_1628 -> m2_1629  [key=0, style=solid];
m2_1629 -> m2_1633  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1629 -> m2_1630  [key=0, style=solid];
m2_1630 -> m2_1632  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1630 -> m2_25  [key=2, style=dotted];
m2_1630 -> m2_1631  [key=0, style=solid];
m2_1631 -> m2_1628  [key=0, style=bold, color=blue];
m2_1431 -> m2_1432  [key=0, style=solid];
m2_1439 -> m2_16  [key=2, style=dotted];
m2_1439 -> m2_1440  [key=0, style=solid];
m2_1440 -> m2_16  [key=2, style=dotted];
m2_1440 -> m2_1441  [key=0, style=solid];
m2_1441 -> m2_16  [key=2, style=dotted];
m2_1441 -> m2_1442  [key=0, style=solid];
m2_1438 -> m2_29  [key=2, style=dotted];
m2_1438 -> m2_1439  [key=0, style=solid];
m2_1438 -> m2_1440  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m2_1438 -> m2_1441  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m2_1437 -> m2_1438  [key=0, style=solid];
m2_1437 -> m2_142  [key=2, style=dotted];
m2_1436 -> m2_1437  [key=0, style=solid];
m2_1436 -> m2_141  [key=2, style=dotted];
m2_1432 -> m2_1436  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m2_1432 -> m2_1433  [key=0, style=solid];
m2_1432 -> m2_1443  [key=2, style=dotted];
m2_1432 -> m2_1434  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m2_1432 -> m2_1435  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m2_1435 -> m2_1436  [key=0, style=solid];
m2_1433 -> m2_1434  [key=0, style=solid];
m2_1434 -> m2_1435  [key=0, style=solid];
m2_1442 -> m2_1431  [key=0, style=bold, color=blue];
m2_1316 -> m2_1317  [key=0, style=solid];
m2_1318 -> m2_65  [key=2, style=dotted];
m2_1318 -> m2_1319  [key=0, style=solid];
m2_1318 -> m2_1321  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m2_1321 -> m2_16  [key=2, style=dotted];
m2_1321 -> m2_1322  [key=0, style=solid];
m2_1322 -> m2_16  [key=2, style=dotted];
m2_1322 -> m2_1323  [key=0, style=solid];
m2_1323 -> m2_16  [key=2, style=dotted];
m2_1323 -> m2_1324  [key=0, style=solid];
m2_1317 -> m2_1318  [key=0, style=solid];
m2_1317 -> m2_1325  [key=2, style=dotted];
m2_1317 -> m2_904  [key=2, style=dotted];
m2_1317 -> m2_1319  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_1317 -> m2_1320  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_1319 -> m2_1322  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m2_1319 -> m2_1320  [key=0, style=solid];
m2_1319 -> m2_951  [key=2, style=dotted];
m2_1319 -> m2_1098  [key=2, style=dotted];
m2_1320 -> m2_1321  [key=0, style=solid];
m2_1320 -> m2_1323  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m2_1320 -> m2_1146  [key=2, style=dotted];
m2_1320 -> m2_1098  [key=2, style=dotted];
m2_1324 -> m2_1316  [key=0, style=bold, color=blue];
m2_779 -> m2_780  [key=0, style=solid];
m2_784 -> m2_65  [key=2, style=dotted];
m2_784 -> m2_785  [key=0, style=solid];
m2_787 -> m2_16  [key=2, style=dotted];
m2_787 -> m2_788  [key=0, style=solid];
m2_788 -> m2_16  [key=2, style=dotted];
m2_788 -> m2_789  [key=0, style=solid];
m2_790 -> m2_16  [key=2, style=dotted];
m2_790 -> m2_791  [key=0, style=solid];
m2_780 -> m2_784  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_792  [key=2, style=dotted];
m2_780 -> m2_782  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m2_780 -> m2_783  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m2_780 -> m2_786  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m2_783 -> m2_784  [key=0, style=solid];
m2_785 -> m2_787  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_785 -> m2_788  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_785 -> m2_790  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_785 -> m2_786  [key=0, style=solid];
m2_785 -> m2_738  [key=2, style=dotted];
m2_785 -> m2_789  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_793  [key=2, style=dotted];
m2_789 -> m2_790  [key=0, style=solid];
m2_789 -> m2_794  [key=2, style=dotted];
m2_781 -> m2_782  [key=0, style=solid];
m2_782 -> m2_783  [key=0, style=solid];
m2_791 -> m2_779  [key=0, style=bold, color=blue];
m2_583 -> m2_579  [key=0, style=bold, color=blue];
m2_583 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_256  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_276  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_322  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_327  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_361  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_412  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_441  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_468  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_478  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_480  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_485  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_505  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_517  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_570  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_583 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m2_3095 -> m2_3098  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_3095 -> m2_3096  [key=0, style=solid];
m2_3098 -> m2_2160  [key=2, style=dotted];
m2_3098 -> m2_3099  [key=0, style=solid];
m2_3098 -> m2_3100  [key=2, style=dotted];
m2_3098 -> m2_3101  [key=2, style=dotted];
m2_3098 -> m2_3102  [key=2, style=dotted];
m2_3097 -> m2_3098  [key=0, style=solid];
m2_3096 -> m2_3097  [key=0, style=solid];
m2_3099 -> m2_3095  [key=0, style=bold, color=blue];
m2_3694 -> m2_3695  [key=0, style=solid];
m2_3695 -> m2_3657  [key=2, style=dotted];
m2_3695 -> m2_3696  [key=0, style=solid];
m2_3696 -> m2_3694  [key=0, style=bold, color=blue];
m2_2344 -> m2_2345  [key=0, style=solid];
m2_2349 -> m2_16  [key=2, style=dotted];
m2_2349 -> m2_2349  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m2_2349 -> m2_2350  [key=0, style=solid];
m2_2348 -> m2_29  [key=2, style=dotted];
m2_2348 -> m2_2349  [key=0, style=solid];
m2_2346 -> m2_2348  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2346 -> m2_2347  [key=0, style=solid];
m2_2346 -> m2_141  [key=2, style=dotted];
m2_2347 -> m2_2348  [key=0, style=solid];
m2_2347 -> m2_142  [key=2, style=dotted];
m2_2345 -> m2_2346  [key=0, style=solid];
m2_2345 -> m2_2351  [key=2, style=dotted];
m2_2350 -> m2_2344  [key=0, style=bold, color=blue];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_138 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_138 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_138 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_138 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_138 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_138 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_138 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_138 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_138 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_138 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_138 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_138 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_138 -> m2_129  [key=0, style=bold, color=blue];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m2_143 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_146  [key=0, style=solid];
m2_144 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_144 -> m2_154  [key=2, style=dotted];
m2_144 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_148  [key=0, style=solid];
m2_146 -> m2_140  [key=2, style=dotted];
m2_146 -> m2_139  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_167  [key=2, style=dotted];
m2_148 -> m2_168  [key=2, style=dotted];
m2_148 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_148 -> m2_141  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_153  [key=0, style=solid];
m2_151 -> m2_16  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_169  [key=2, style=dotted];
m2_152 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label=message];
m2_152 -> m2_16  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_36  [key=2, style=dotted];
m2_153 -> m2_169  [key=2, style=dotted];
m2_153 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=message];
m2_153 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label=message];
m2_153 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=message];
m2_153 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label=message];
m2_153 -> m2_143  [key=0, style=bold, color=blue];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_165  [key=0, style=solid];
m2_149 -> m2_142  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_150 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=message];
m2_150 -> m2_29  [key=2, style=dotted];
m2_1353 -> m2_1354  [key=0, style=solid];
m2_1356 -> m2_16  [key=2, style=dotted];
m2_1356 -> m2_1357  [key=0, style=solid];
m2_1357 -> m2_16  [key=2, style=dotted];
m2_1357 -> m2_1358  [key=0, style=solid];
m2_1359 -> m2_16  [key=2, style=dotted];
m2_1359 -> m2_1360  [key=0, style=solid];
m2_1360 -> m2_16  [key=2, style=dotted];
m2_1360 -> m2_1361  [key=0, style=solid];
m2_1355 -> m2_1356  [key=0, style=solid];
m2_1355 -> m2_1357  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1355 -> m2_13  [key=2, style=dotted];
m2_1355 -> m2_114  [key=2, style=dotted];
m2_1358 -> m2_1359  [key=0, style=solid];
m2_1358 -> m2_1360  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1358 -> m2_13  [key=2, style=dotted];
m2_1358 -> m2_114  [key=2, style=dotted];
m2_1354 -> m2_1355  [key=0, style=solid];
m2_1354 -> m2_1358  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1361 -> m2_1353  [key=0, style=bold, color=blue];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_202  [key=2, style=dotted];
m2_191 -> m2_193  [key=1, style=dashed, color=darkseagreen4, label=converter];
m2_191 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label=converter];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_204  [key=2, style=dotted];
m2_201 -> m2_190  [key=0, style=bold, color=blue];
m2_201 -> m2_202  [key=0, style=solid];
m2_2561 -> m2_2562  [key=0, style=solid];
m2_2562 -> m2_738  [key=2, style=dotted];
m2_2562 -> m2_2563  [key=0, style=solid];
m2_2563 -> m2_163  [key=2, style=dotted];
m2_2563 -> m2_2564  [key=0, style=solid];
m2_2564 -> m2_2561  [key=0, style=bold, color=blue];
m2_3274 -> m2_3275  [key=0, style=solid];
m2_3276 -> m2_16  [key=2, style=dotted];
m2_3276 -> m2_3277  [key=0, style=solid];
m2_3275 -> m2_3276  [key=0, style=solid];
m2_3275 -> m2_3278  [key=2, style=dotted];
m2_3275 -> m2_141  [key=2, style=dotted];
m2_3277 -> m2_3274  [key=0, style=bold, color=blue];
m2_2863 -> m2_2864  [key=0, style=solid];
m2_2865 -> m2_65  [key=2, style=dotted];
m2_2865 -> m2_2866  [key=0, style=solid];
m2_2867 -> m2_16  [key=2, style=dotted];
m2_2867 -> m2_2868  [key=0, style=solid];
m2_2868 -> m2_16  [key=2, style=dotted];
m2_2868 -> m2_2869  [key=0, style=solid];
m2_2866 -> m2_29  [key=2, style=dotted];
m2_2866 -> m2_2867  [key=0, style=solid];
m2_2866 -> m2_2868  [key=1, style=dashed, color=darkseagreen4, label=d2];
m2_2864 -> m2_2865  [key=0, style=solid];
m2_2864 -> m2_2867  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2864 -> m2_2868  [key=1, style=dashed, color=darkseagreen4, label=d1];
m2_2864 -> m2_112  [key=2, style=dotted];
m2_2869 -> m2_2863  [key=0, style=bold, color=blue];
m2_3474 -> m2_3475  [key=0, style=solid];
m2_3475 -> m2_3477  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3475 -> m2_25  [key=2, style=dotted];
m2_3475 -> m2_3476  [key=0, style=solid];
m2_3476 -> m2_3474  [key=0, style=bold, color=blue];
m2_3380 -> m2_3381  [key=0, style=solid];
m2_3384 -> m2_16  [key=2, style=dotted];
m2_3384 -> m2_3385  [key=0, style=solid];
m2_3382 -> m2_29  [key=2, style=dotted];
m2_3382 -> m2_3383  [key=0, style=solid];
m2_3383 -> m2_3384  [key=0, style=solid];
m2_3381 -> m2_3382  [key=0, style=solid];
m2_3385 -> m2_3380  [key=0, style=bold, color=blue];
m2_575 -> m2_576  [key=0, style=solid];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_211  [key=2, style=dotted];
m2_205 -> m2_201  [key=0, style=bold, color=blue];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_190  [key=2, style=dotted];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_183  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_212  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_210 -> m2_91  [key=0, style=bold, color=blue];
m2_2369 -> m2_2370  [key=0, style=solid];
m2_2371 -> m2_16  [key=2, style=dotted];
m2_2371 -> m2_2372  [key=0, style=solid];
m2_2376 -> m2_16  [key=2, style=dotted];
m2_2376 -> m2_2377  [key=0, style=solid];
m2_2376 -> m2_912  [key=2, style=dotted];
m2_2377 -> m2_16  [key=2, style=dotted];
m2_2377 -> m2_2378  [key=0, style=solid];
m2_2377 -> m2_756  [key=2, style=dotted];
m2_2370 -> m2_2371  [key=0, style=solid];
m2_2370 -> m2_13  [key=2, style=dotted];
m2_2370 -> m2_2362  [key=2, style=dotted];
m2_2370 -> m2_2363  [key=2, style=dotted];
m2_2370 -> m2_756  [key=2, style=dotted];
m2_2370 -> m2_912  [key=2, style=dotted];
m2_2370 -> m2_15  [key=2, style=dotted];
m2_2370 -> m2_2372  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m2_2372 -> m2_2373  [key=0, style=solid];
m2_2372 -> m2_189  [key=2, style=dotted];
m2_2372 -> m2_190  [key=2, style=dotted];
m2_2372 -> m2_2375  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_2375 -> m2_2376  [key=0, style=solid];
m2_2375 -> m2_2377  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m2_2375 -> m2_2364  [key=2, style=dotted];
m2_2373 -> m2_191  [key=2, style=dotted];
m2_2373 -> m2_2375  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m2_2373 -> m2_2374  [key=0, style=solid];
m2_2374 -> m2_2375  [key=0, style=solid];
m2_2378 -> m2_2369  [key=0, style=bold, color=blue];
m2_1194 -> m2_1195  [key=0, style=solid];
m2_1197 -> m2_16  [key=2, style=dotted];
m2_1197 -> m2_1198  [key=0, style=solid];
m2_1198 -> m2_16  [key=2, style=dotted];
m2_1198 -> m2_1199  [key=0, style=solid];
m2_1198 -> m2_1201  [key=2, style=dotted];
m2_1199 -> m2_16  [key=2, style=dotted];
m2_1199 -> m2_1200  [key=0, style=solid];
m2_1196 -> m2_29  [key=2, style=dotted];
m2_1196 -> m2_1197  [key=0, style=solid];
m2_1196 -> m2_1198  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m2_1196 -> m2_1199  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m2_1195 -> m2_1196  [key=0, style=solid];
m2_1200 -> m2_1194  [key=0, style=bold, color=blue];
m2_2087 -> m2_2124  [key=0, style=solid];
m2_2087 -> m2_2125  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2087 -> m2_2126  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2087 -> m2_2127  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2087 -> m2_2128  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2087 -> m2_2129  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2087 -> m2_2130  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2087 -> m2_2131  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_2124 -> m2_2125  [key=0, style=solid];
m2_2125 -> m2_2126  [key=0, style=solid];
m2_2126 -> m2_2127  [key=0, style=solid];
m2_2127 -> m2_2128  [key=0, style=solid];
m2_2128 -> m2_2129  [key=0, style=solid];
m2_2129 -> m2_2130  [key=0, style=solid];
m2_2130 -> m2_2131  [key=0, style=solid];
m2_2131 -> m2_2132  [key=0, style=solid];
m2_2132 -> m2_2087  [key=0, style=bold, color=blue];
m2_2291 -> m2_2292  [key=0, style=solid];
m2_2293 -> m2_142  [key=2, style=dotted];
m2_2293 -> m2_2294  [key=0, style=solid];
m2_2292 -> m2_141  [key=2, style=dotted];
m2_2292 -> m2_2293  [key=0, style=solid];
m2_2294 -> m2_2291  [key=0, style=bold, color=blue];
m2_1073 -> m2_1074  [key=0, style=solid];
m2_1075 -> m2_65  [key=2, style=dotted];
m2_1075 -> m2_1076  [key=0, style=solid];
m2_1077 -> m2_16  [key=2, style=dotted];
m2_1077 -> m2_1078  [key=0, style=solid];
m2_1078 -> m2_16  [key=2, style=dotted];
m2_1078 -> m2_1079  [key=0, style=solid];
m2_1079 -> m2_16  [key=2, style=dotted];
m2_1079 -> m2_1080  [key=0, style=solid];
m2_1076 -> m2_29  [key=2, style=dotted];
m2_1076 -> m2_1077  [key=0, style=solid];
m2_1076 -> m2_1078  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1076 -> m2_1079  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_1074 -> m2_1075  [key=0, style=solid];
m2_1074 -> m2_1081  [key=2, style=dotted];
m2_1080 -> m2_1073  [key=0, style=bold, color=blue];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_142  [key=2, style=dotted];
m2_1852 -> m2_1853  [key=0, style=solid];
m2_1860 -> m2_16  [key=2, style=dotted];
m2_1860 -> m2_1861  [key=0, style=solid];
m2_1861 -> m2_16  [key=2, style=dotted];
m2_1861 -> m2_1862  [key=0, style=solid];
m2_1862 -> m2_16  [key=2, style=dotted];
m2_1862 -> m2_1863  [key=0, style=solid];
m2_1863 -> m2_16  [key=2, style=dotted];
m2_1863 -> m2_1864  [key=0, style=solid];
m2_1859 -> m2_29  [key=2, style=dotted];
m2_1859 -> m2_1860  [key=0, style=solid];
m2_1859 -> m2_1861  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m2_1859 -> m2_1862  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m2_1859 -> m2_1863  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m2_1858 -> m2_1859  [key=0, style=solid];
m2_1858 -> m2_142  [key=2, style=dotted];
m2_1857 -> m2_13  [key=2, style=dotted];
m2_1857 -> m2_1858  [key=0, style=solid];
m2_1857 -> m2_541  [key=2, style=dotted];
m2_1853 -> m2_1857  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_1853 -> m2_1854  [key=0, style=solid];
m2_1853 -> m2_1865  [key=2, style=dotted];
m2_1853 -> m2_1855  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_1853 -> m2_1856  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_1856 -> m2_1857  [key=0, style=solid];
m2_1854 -> m2_1856  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_1854 -> m2_1855  [key=0, style=solid];
m2_1854 -> m2_1866  [key=2, style=dotted];
m2_1855 -> m2_1856  [key=0, style=solid];
m2_1864 -> m2_1852  [key=0, style=bold, color=blue];
m2_2327 -> m2_2328  [key=0, style=solid];
m2_2333 -> m2_16  [key=2, style=dotted];
m2_2333 -> m2_2334  [key=0, style=solid];
m2_2334 -> m2_16  [key=2, style=dotted];
m2_2334 -> m2_2335  [key=0, style=solid];
m2_2335 -> m2_16  [key=2, style=dotted];
m2_2335 -> m2_2336  [key=0, style=solid];
m2_2336 -> m2_16  [key=2, style=dotted];
m2_2336 -> m2_2338  [key=0, style=solid];
m2_2332 -> m2_29  [key=2, style=dotted];
m2_2332 -> m2_2333  [key=0, style=solid];
m2_2332 -> m2_2334  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2332 -> m2_2335  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2332 -> m2_2336  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2330 -> m2_2332  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2330 -> m2_2342  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2330 -> m2_2331  [key=0, style=solid];
m2_2330 -> m2_141  [key=2, style=dotted];
m2_2330 -> m2_2337  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2331 -> m2_2332  [key=0, style=solid];
m2_2331 -> m2_2337  [key=0, style=solid];
m2_2337 -> m2_2338  [key=0, style=solid];
m2_2337 -> m2_2341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2337 -> m2_25  [key=2, style=dotted];
m2_2329 -> m2_2330  [key=0, style=solid];
m2_2329 -> m2_2331  [key=1, style=dashed, color=darkseagreen4, label=s1];
m2_2329 -> m2_2339  [key=2, style=dotted];
m2_2329 -> m2_2340  [key=2, style=dotted];
m2_2328 -> m2_2337  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m2_2328 -> m2_2329  [key=0, style=solid];
m2_2338 -> m2_2327  [key=0, style=bold, color=blue];
m2_1041 -> m2_1042  [key=0, style=solid];
m2_1043 -> m2_65  [key=2, style=dotted];
m2_1043 -> m2_1044  [key=0, style=solid];
m2_1043 -> m2_1049  [key=2, style=dotted];
m2_1043 -> m2_1045  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1046 -> m2_16  [key=2, style=dotted];
m2_1046 -> m2_1047  [key=0, style=solid];
m2_1044 -> m2_16  [key=2, style=dotted];
m2_1044 -> m2_1045  [key=0, style=solid];
m2_1045 -> m2_29  [key=2, style=dotted];
m2_1045 -> m2_1046  [key=0, style=solid];
m2_1042 -> m2_1043  [key=0, style=solid];
m2_1042 -> m2_1046  [key=1, style=dashed, color=darkseagreen4, label=guid];
m2_1042 -> m2_1048  [key=2, style=dotted];
m2_1047 -> m2_1041  [key=0, style=bold, color=blue];
m2_2457 -> m2_2458  [key=0, style=solid];
m2_2458 -> m2_2459  [key=0, style=solid];
m2_2459 -> m2_2457  [key=0, style=bold, color=blue];
m2_3032 -> m2_3033  [key=0, style=solid];
m2_3033 -> m2_25  [key=2, style=dotted];
m2_3033 -> m2_3035  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3033 -> m2_3034  [key=0, style=solid];
m2_3034 -> m2_3032  [key=0, style=bold, color=blue];
m2_953 -> m2_954  [key=0, style=solid];
m2_954 -> m2_65  [key=2, style=dotted];
m2_954 -> m2_955  [key=0, style=solid];
m2_954 -> m2_957  [key=2, style=dotted];
m2_955 -> m2_16  [key=2, style=dotted];
m2_955 -> m2_956  [key=0, style=solid];
m2_956 -> m2_953  [key=0, style=bold, color=blue];
m2_2278 -> m2_2279  [key=0, style=solid];
m2_2279 -> m2_2281  [key=2, style=dotted];
m2_2279 -> m2_2280  [key=0, style=solid];
m2_2280 -> m2_2278  [key=0, style=bold, color=blue];
m2_2596 -> m2_2597  [key=0, style=solid];
m2_2599 -> m2_142  [key=2, style=dotted];
m2_2599 -> m2_2600  [key=0, style=solid];
m2_2598 -> m2_141  [key=2, style=dotted];
m2_2598 -> m2_2599  [key=0, style=solid];
m2_2597 -> m2_2598  [key=0, style=solid];
m2_2597 -> m2_2601  [key=2, style=dotted];
m2_2600 -> m2_2596  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_2 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_2 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_2 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_2 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_2 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_2 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_4 -> m2_16  [key=0, style=solid];
m2_4 -> m2_17  [key=2, style=dotted];
m2_4 -> m2_18  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_50 -> m2_485  [key=0, style=solid, color=red];
m2_50 -> m2_486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.TypeNameHandling"];
m2_50 -> m2_489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m2_50 -> m2_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_50 -> m2_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m2_50 -> m2_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_50 -> m2_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m2_50 -> m2_45  [key=0, style=bold, color=blue];
m2_497 -> m2_498  [key=0, style=solid];
m2_497 -> m2_499  [key=0, style=solid];
m2_497 -> m2_504  [key=2, style=dotted];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_504  [key=2, style=dotted];
m2_495 -> m2_496  [key=0, style=solid];
m2_495 -> m2_499  [key=0, style=solid];
m2_495 -> m2_502  [key=2, style=dotted];
m2_494 -> m2_500  [key=0, style=solid];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_496  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_494 -> m2_497  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_494 -> m2_498  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_494 -> m2_499  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m2_496 -> m2_497  [key=0, style=solid];
m2_496 -> m2_37  [key=2, style=dotted];
m2_496 -> m2_503  [key=2, style=dotted];
m2_498 -> m2_500  [key=0, style=solid];
m2_498 -> m2_499  [key=0, style=solid];
m2_498 -> m2_504  [key=2, style=dotted];
m2_500 -> m2_50  [key=0, style=bold, color=blue];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_504  [key=2, style=dotted];
m2_1007 -> m2_1008  [key=0, style=solid];
m2_1013 -> m2_16  [key=2, style=dotted];
m2_1013 -> m2_1014  [key=0, style=solid];
m2_1014 -> m2_16  [key=2, style=dotted];
m2_1014 -> m2_1015  [key=0, style=solid];
m2_1015 -> m2_16  [key=2, style=dotted];
m2_1015 -> m2_1016  [key=0, style=solid];
m2_1012 -> m2_29  [key=2, style=dotted];
m2_1012 -> m2_1013  [key=0, style=solid];
m2_1012 -> m2_1014  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1012 -> m2_1015  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1008 -> m2_1012  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1008 -> m2_1009  [key=0, style=solid];
m2_1008 -> m2_1017  [key=2, style=dotted];
m2_1008 -> m2_141  [key=2, style=dotted];
m2_1008 -> m2_1011  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1011 -> m2_1012  [key=0, style=solid];
m2_1011 -> m2_142  [key=2, style=dotted];
m2_1009 -> m2_1010  [key=0, style=solid];
m2_1010 -> m2_1011  [key=0, style=solid];
m2_1016 -> m2_1007  [key=0, style=bold, color=blue];
m2_2315 -> m2_2316  [key=0, style=solid];
m2_2322 -> m2_16  [key=2, style=dotted];
m2_2322 -> m2_2323  [key=0, style=solid];
m2_2323 -> m2_16  [key=2, style=dotted];
m2_2323 -> m2_2324  [key=0, style=solid];
m2_2324 -> m2_16  [key=2, style=dotted];
m2_2324 -> m2_2325  [key=0, style=solid];
m2_2321 -> m2_2322  [key=0, style=solid];
m2_2321 -> m2_2323  [key=1, style=dashed, color=darkseagreen4, label=z];
m2_2321 -> m2_2324  [key=1, style=dashed, color=darkseagreen4, label=z];
m2_2321 -> m2_2326  [key=2, style=dotted];
m2_2316 -> m2_191  [key=2, style=dotted];
m2_2316 -> m2_2321  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m2_2316 -> m2_2317  [key=0, style=solid];
m2_2316 -> m2_2318  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m2_2320 -> m2_2321  [key=0, style=solid];
m2_2320 -> m2_189  [key=2, style=dotted];
m2_2320 -> m2_190  [key=2, style=dotted];
m2_2317 -> m2_343  [key=2, style=dotted];
m2_2317 -> m2_951  [key=2, style=dotted];
m2_2317 -> m2_2318  [key=0, style=solid];
m2_2318 -> m2_2319  [key=0, style=solid];
m2_2319 -> m2_2320  [key=0, style=solid];
m2_2325 -> m2_2315  [key=0, style=bold, color=blue];
m2_1495 -> m2_1496  [key=0, style=solid];
m2_1500 -> m2_16  [key=2, style=dotted];
m2_1500 -> m2_1501  [key=0, style=solid];
m2_1501 -> m2_16  [key=2, style=dotted];
m2_1501 -> m2_1502  [key=0, style=solid];
m2_1502 -> m2_16  [key=2, style=dotted];
m2_1502 -> m2_1503  [key=0, style=solid];
m2_1497 -> m2_272  [key=2, style=dotted];
m2_1497 -> m2_1498  [key=0, style=solid];
m2_1498 -> m2_29  [key=2, style=dotted];
m2_1498 -> m2_1500  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1498 -> m2_1501  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1498 -> m2_1502  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_1498 -> m2_1499  [key=0, style=solid];
m2_1498 -> m2_571  [key=2, style=dotted];
m2_1499 -> m2_1500  [key=0, style=solid];
m2_1499 -> m2_598  [key=2, style=dotted];
m2_1496 -> m2_1497  [key=0, style=solid];
m2_1503 -> m2_1495  [key=0, style=bold, color=blue];
m2_2845 -> m2_2846  [key=0, style=solid];
m2_2852 -> m2_16  [key=2, style=dotted];
m2_2852 -> m2_2853  [key=0, style=solid];
m2_2853 -> m2_16  [key=2, style=dotted];
m2_2853 -> m2_2854  [key=0, style=solid];
m2_2851 -> m2_29  [key=2, style=dotted];
m2_2851 -> m2_2852  [key=0, style=solid];
m2_2851 -> m2_2853  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_2850 -> m2_2851  [key=0, style=solid];
m2_2849 -> m2_2850  [key=0, style=solid];
m2_2846 -> m2_2847  [key=0, style=solid];
m2_2847 -> m2_2849  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m2_2847 -> m2_2848  [key=0, style=solid];
m2_2847 -> m2_2855  [key=2, style=dotted];
m2_2848 -> m2_2849  [key=0, style=solid];
m2_2854 -> m2_2845  [key=0, style=bold, color=blue];
m2_2780 -> m2_2781  [key=0, style=solid];
m2_2783 -> m2_65  [key=2, style=dotted];
m2_2783 -> m2_2784  [key=0, style=solid];
m2_2785 -> m2_16  [key=2, style=dotted];
m2_2785 -> m2_2786  [key=0, style=solid];
m2_2784 -> m2_29  [key=2, style=dotted];
m2_2784 -> m2_2785  [key=0, style=solid];
m2_2782 -> m2_2783  [key=0, style=solid];
m2_2782 -> m2_2785  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_2782 -> m2_1511  [key=2, style=dotted];
m2_2781 -> m2_2782  [key=0, style=solid];
m2_2786 -> m2_2780  [key=0, style=bold, color=blue];
m2_1326 -> m2_1327  [key=0, style=solid];
m2_1335 -> m2_16  [key=2, style=dotted];
m2_1335 -> m2_1336  [key=0, style=solid];
m2_1335 -> m2_1340  [key=2, style=dotted];
m2_1336 -> m2_16  [key=2, style=dotted];
m2_1336 -> m2_1337  [key=0, style=solid];
m2_1336 -> m2_1340  [key=2, style=dotted];
m2_1337 -> m2_16  [key=2, style=dotted];
m2_1337 -> m2_1338  [key=0, style=solid];
m2_1337 -> m2_1340  [key=2, style=dotted];
m2_1332 -> m2_16  [key=2, style=dotted];
m2_1332 -> m2_1333  [key=0, style=solid];
m2_1333 -> m2_29  [key=2, style=dotted];
m2_1333 -> m2_1335  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m2_1333 -> m2_1336  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m2_1333 -> m2_1337  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m2_1333 -> m2_1334  [key=0, style=solid];
m2_1327 -> m2_1335  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1327 -> m2_1336  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1327 -> m2_1337  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1327 -> m2_1328  [key=0, style=solid];
m2_1327 -> m2_1339  [key=2, style=dotted];
m2_1327 -> m2_1329  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1327 -> m2_1330  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1327 -> m2_1331  [key=1, style=dashed, color=darkseagreen4, label=o];
m2_1334 -> m2_1335  [key=0, style=solid];
m2_1334 -> m2_598  [key=2, style=dotted];
m2_1331 -> m2_1332  [key=0, style=solid];
m2_1331 -> m2_1333  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1331 -> m2_141  [key=2, style=dotted];
m2_1328 -> m2_12  [key=2, style=dotted];
m2_1328 -> m2_1329  [key=0, style=solid];
m2_1329 -> m2_112  [key=2, style=dotted];
m2_1329 -> m2_1330  [key=0, style=solid];
m2_1330 -> m2_1331  [key=0, style=solid];
m2_1330 -> m2_112  [key=2, style=dotted];
m2_1338 -> m2_1326  [key=0, style=bold, color=blue];
m2_3682 -> m2_3683  [key=0, style=solid];
m2_3683 -> m2_3684  [key=0, style=solid];
m2_3684 -> m2_3682  [key=0, style=bold, color=blue];
m2_1420 -> m2_1421  [key=0, style=solid];
m2_1423 -> m2_16  [key=2, style=dotted];
m2_1423 -> m2_1424  [key=0, style=solid];
m2_1425 -> m2_16  [key=2, style=dotted];
m2_1425 -> m2_1426  [key=0, style=solid];
m2_1425 -> m2_1048  [key=2, style=dotted];
m2_1426 -> m2_16  [key=2, style=dotted];
m2_1426 -> m2_1427  [key=0, style=solid];
m2_1426 -> m2_1048  [key=2, style=dotted];
m2_1427 -> m2_16  [key=2, style=dotted];
m2_1427 -> m2_1428  [key=0, style=solid];
m2_1428 -> m2_16  [key=2, style=dotted];
m2_1428 -> m2_1429  [key=0, style=solid];
m2_1429 -> m2_16  [key=2, style=dotted];
m2_1429 -> m2_1430  [key=0, style=solid];
m2_1422 -> m2_29  [key=2, style=dotted];
m2_1422 -> m2_1423  [key=0, style=solid];
m2_1424 -> m2_29  [key=2, style=dotted];
m2_1424 -> m2_1425  [key=0, style=solid];
m2_1424 -> m2_1426  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_1424 -> m2_1427  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_1424 -> m2_1428  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_1424 -> m2_1429  [key=1, style=dashed, color=darkseagreen4, label=n];
m2_1421 -> m2_1422  [key=0, style=solid];
m2_1421 -> m2_1424  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1430 -> m2_1420  [key=0, style=bold, color=blue];
m2_2479 -> m2_2480  [key=0, style=solid];
m2_2486 -> m2_65  [key=2, style=dotted];
m2_2486 -> m2_2487  [key=0, style=solid];
m2_2490 -> m2_65  [key=2, style=dotted];
m2_2490 -> m2_2491  [key=0, style=solid];
m2_2488 -> m2_16  [key=2, style=dotted];
m2_2488 -> m2_2489  [key=0, style=solid];
m2_2489 -> m2_16  [key=2, style=dotted];
m2_2489 -> m2_2490  [key=0, style=solid];
m2_2492 -> m2_16  [key=2, style=dotted];
m2_2492 -> m2_2493  [key=0, style=solid];
m2_2493 -> m2_16  [key=2, style=dotted];
m2_2493 -> m2_2494  [key=0, style=solid];
m2_2480 -> m2_2486  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m2_2480 -> m2_2481  [key=0, style=solid];
m2_2480 -> m2_2495  [key=2, style=dotted];
m2_2480 -> m2_2482  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m2_2485 -> m2_2486  [key=0, style=solid];
m2_2487 -> m2_2488  [key=0, style=solid];
m2_2487 -> m2_2489  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_2487 -> m2_2497  [key=2, style=dotted];
m2_2483 -> m2_2490  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m2_2483 -> m2_2485  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m2_2483 -> m2_2484  [key=0, style=solid];
m2_2483 -> m2_2495  [key=2, style=dotted];
m2_2491 -> m2_2492  [key=0, style=solid];
m2_2491 -> m2_2493  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_2491 -> m2_2497  [key=2, style=dotted];
m2_2481 -> m2_2482  [key=0, style=solid];
m2_2481 -> m2_2496  [key=2, style=dotted];
m2_2482 -> m2_2483  [key=0, style=solid];
m2_2482 -> m2_2496  [key=2, style=dotted];
m2_2484 -> m2_2485  [key=0, style=solid];
m2_2484 -> m2_2496  [key=2, style=dotted];
m2_2494 -> m2_2479  [key=0, style=bold, color=blue];
m2_3581 -> m2_3582  [key=0, style=solid];
m2_3582 -> m2_65  [key=2, style=dotted];
m2_3582 -> m2_3583  [key=0, style=solid];
m2_3582 -> m2_12  [key=2, style=dotted];
m2_3582 -> m2_3588  [key=2, style=dotted];
m2_3582 -> m2_3584  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3583 -> m2_16  [key=2, style=dotted];
m2_3583 -> m2_3584  [key=0, style=solid];
m2_3585 -> m2_16  [key=2, style=dotted];
m2_3585 -> m2_3586  [key=0, style=solid];
m2_3585 -> m2_3588  [key=2, style=dotted];
m2_3585 -> m2_3589  [key=2, style=dotted];
m2_3586 -> m2_16  [key=2, style=dotted];
m2_3586 -> m2_3587  [key=0, style=solid];
m2_3586 -> m2_3588  [key=2, style=dotted];
m2_3586 -> m2_3589  [key=2, style=dotted];
m2_3584 -> m2_29  [key=2, style=dotted];
m2_3584 -> m2_3585  [key=0, style=solid];
m2_3584 -> m2_3586  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_3587 -> m2_3581  [key=0, style=bold, color=blue];
m2_1216 -> m2_1217  [key=0, style=solid];
m2_1219 -> m2_16  [key=2, style=dotted];
m2_1219 -> m2_1220  [key=0, style=solid];
m2_1218 -> m2_29  [key=2, style=dotted];
m2_1218 -> m2_1219  [key=0, style=solid];
m2_1217 -> m2_1218  [key=0, style=solid];
m2_1220 -> m2_1216  [key=0, style=bold, color=blue];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> m2_19  [key=2, style=dotted];
m2_270 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m2_270 -> m2_276  [key=1, style=dashed, color=red, label="out Newtonsoft.Json.Serialization.JsonContract"];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_286  [key=0, style=solid];
m2_271 -> m2_127  [key=2, style=dotted];
m2_3858 -> m2_3859  [key=0, style=solid];
m2_3861 -> m2_16  [key=2, style=dotted];
m2_3861 -> m2_3862  [key=0, style=solid];
m2_3862 -> m2_16  [key=2, style=dotted];
m2_3862 -> m2_3863  [key=0, style=solid];
m2_3860 -> m2_29  [key=2, style=dotted];
m2_3860 -> m2_3861  [key=0, style=solid];
m2_3860 -> m2_3862  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_3859 -> m2_3860  [key=0, style=solid];
m2_3863 -> m2_3858  [key=0, style=bold, color=blue];
m2_2510 -> m2_2511  [key=0, style=solid];
m2_2512 -> m2_65  [key=2, style=dotted];
m2_2512 -> m2_2513  [key=0, style=solid];
m2_2514 -> m2_16  [key=2, style=dotted];
m2_2514 -> m2_2515  [key=0, style=solid];
m2_2511 -> m2_2512  [key=0, style=solid];
m2_2511 -> m2_2516  [key=2, style=dotted];
m2_2513 -> m2_2514  [key=0, style=solid];
m2_2513 -> m2_13  [key=2, style=dotted];
m2_2513 -> m2_114  [key=2, style=dotted];
m2_2515 -> m2_2510  [key=0, style=bold, color=blue];
m2_2175 -> m2_2176  [key=0, style=solid];
m2_2178 -> m2_16  [key=2, style=dotted];
m2_2178 -> m2_2179  [key=0, style=solid];
m2_2177 -> m2_2178  [key=0, style=solid];
m2_2177 -> m2_2183  [key=2, style=dotted];
m2_2177 -> m2_2184  [key=2, style=dotted];
m2_2177 -> m2_1098  [key=2, style=dotted];
m2_2176 -> m2_2177  [key=0, style=solid];
m2_2176 -> m2_2180  [key=2, style=dotted];
m2_2176 -> m2_2181  [key=2, style=dotted];
m2_2176 -> m2_2182  [key=2, style=dotted];
m2_2179 -> m2_2175  [key=0, style=bold, color=blue];
m2_2764 -> m2_2765  [key=0, style=solid];
m2_2772 -> m2_16  [key=2, style=dotted];
m2_2772 -> m2_2773  [key=0, style=solid];
m2_2771 -> m2_2772  [key=0, style=solid];
m2_2771 -> m2_2779  [key=2, style=dotted];
m2_2767 -> m2_2771  [key=1, style=dashed, color=darkseagreen4, label=sw];
m2_2767 -> m2_2768  [key=0, style=solid];
m2_2767 -> m2_2774  [key=2, style=dotted];
m2_2770 -> m2_2771  [key=0, style=solid];
m2_2770 -> m2_2778  [key=2, style=dotted];
m2_2766 -> m2_2767  [key=0, style=solid];
m2_2766 -> m2_569  [key=2, style=dotted];
m2_2766 -> m2_2769  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2768 -> m2_2770  [key=1, style=dashed, color=darkseagreen4, label=jw];
m2_2768 -> m2_2775  [key=2, style=dotted];
m2_2768 -> m2_2769  [key=0, style=solid];
m2_2769 -> m2_2770  [key=0, style=solid];
m2_2769 -> m2_2776  [key=2, style=dotted];
m2_2769 -> m2_2777  [key=2, style=dotted];
m2_2765 -> m2_2766  [key=0, style=solid];
m2_2773 -> m2_2764  [key=0, style=bold, color=blue];
m2_1925 -> m2_1928  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_1925 -> m2_1926  [key=0, style=solid];
m2_1929 -> m2_1929  [key=1, style=dashed, color=darkseagreen4, label=entry];
m2_1929 -> m2_1928  [key=0, style=solid];
m2_1928 -> m2_1929  [key=0, style=solid];
m2_1928 -> m2_1930  [key=0, style=solid];
m2_1926 -> m2_1928  [key=0, style=solid];
m2_1926 -> m2_1927  [key=0, style=solid];
m2_1927 -> m2_1930  [key=0, style=solid];
m2_1930 -> m2_1925  [key=0, style=bold, color=blue];
m2_2383 -> m2_2384  [key=0, style=solid];
m2_2385 -> m2_142  [key=2, style=dotted];
m2_2385 -> m2_2386  [key=0, style=solid];
m2_2384 -> m2_141  [key=2, style=dotted];
m2_2384 -> m2_2385  [key=0, style=solid];
m2_2384 -> m2_2387  [key=2, style=dotted];
m2_2386 -> m2_2383  [key=0, style=bold, color=blue];
m2_972 -> m2_973  [key=0, style=solid];
m2_975 -> m2_16  [key=2, style=dotted];
m2_975 -> m2_976  [key=0, style=solid];
m2_976 -> m2_16  [key=2, style=dotted];
m2_976 -> m2_977  [key=0, style=solid];
m2_977 -> m2_16  [key=2, style=dotted];
m2_977 -> m2_978  [key=0, style=solid];
m2_978 -> m2_16  [key=2, style=dotted];
m2_978 -> m2_979  [key=0, style=solid];
m2_979 -> m2_16  [key=2, style=dotted];
m2_979 -> m2_980  [key=0, style=solid];
m2_980 -> m2_16  [key=2, style=dotted];
m2_980 -> m2_981  [key=0, style=solid];
m2_974 -> m2_29  [key=2, style=dotted];
m2_974 -> m2_975  [key=0, style=solid];
m2_974 -> m2_976  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_974 -> m2_977  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_974 -> m2_978  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_974 -> m2_979  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_974 -> m2_980  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m2_973 -> m2_974  [key=0, style=solid];
m2_981 -> m2_972  [key=0, style=bold, color=blue];
m2_820 -> m2_821  [key=0, style=solid];
m2_821 -> m2_65  [key=2, style=dotted];
m2_821 -> m2_822  [key=0, style=solid];
m2_821 -> m2_827  [key=2, style=dotted];
m2_822 -> m2_16  [key=2, style=dotted];
m2_822 -> m2_823  [key=0, style=solid];
m2_824 -> m2_16  [key=2, style=dotted];
m2_824 -> m2_825  [key=0, style=solid];
m2_825 -> m2_16  [key=2, style=dotted];
m2_825 -> m2_826  [key=0, style=solid];
m2_823 -> m2_29  [key=2, style=dotted];
m2_823 -> m2_824  [key=0, style=solid];
m2_823 -> m2_825  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_826 -> m2_820  [key=0, style=bold, color=blue];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_101 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_101 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_105 -> m2_16  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_108 -> m2_16  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_13  [key=2, style=dotted];
m2_104 -> m2_113  [key=2, style=dotted];
m2_104 -> m2_15  [key=2, style=dotted];
m2_104 -> m2_106  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_13  [key=2, style=dotted];
m2_107 -> m2_113  [key=2, style=dotted];
m2_107 -> m2_114  [key=2, style=dotted];
m2_103 -> m2_12  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_112  [key=2, style=dotted];
m2_103 -> m2_111  [key=2, style=dotted];
m2_103 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_103 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_110  [key=2, style=dotted];
m2_102 -> m2_104  [key=0, style=solid];
m2_109 -> m2_101  [key=0, style=bold, color=blue];
m2_109 -> m2_98  [key=0, style=bold, color=blue];
m2_2295 -> m2_2296  [key=0, style=solid];
m2_2297 -> m2_16  [key=2, style=dotted];
m2_2297 -> m2_2298  [key=0, style=solid];
m2_2298 -> m2_16  [key=2, style=dotted];
m2_2298 -> m2_2299  [key=0, style=solid];
m2_2299 -> m2_16  [key=2, style=dotted];
m2_2299 -> m2_2300  [key=0, style=solid];
m2_2300 -> m2_16  [key=2, style=dotted];
m2_2300 -> m2_2301  [key=0, style=solid];
m2_2296 -> m2_2297  [key=0, style=solid];
m2_2296 -> m2_2298  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2296 -> m2_2299  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2296 -> m2_2300  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2296 -> m2_738  [key=2, style=dotted];
m2_2301 -> m2_2295  [key=0, style=bold, color=blue];
m2_606 -> m2_607  [key=0, style=solid];
m2_610 -> m2_16  [key=2, style=dotted];
m2_610 -> m2_611  [key=0, style=solid];
m2_612 -> m2_16  [key=2, style=dotted];
m2_612 -> m2_613  [key=0, style=solid];
m2_608 -> m2_29  [key=2, style=dotted];
m2_608 -> m2_610  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_608 -> m2_612  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_608 -> m2_609  [key=0, style=solid];
m2_608 -> m2_611  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m2_609 -> m2_610  [key=0, style=solid];
m2_609 -> m2_598  [key=2, style=dotted];
m2_611 -> m2_612  [key=0, style=solid];
m2_611 -> m2_598  [key=2, style=dotted];
m2_607 -> m2_608  [key=0, style=solid];
m2_613 -> m2_606  [key=0, style=bold, color=blue];
m2_873 -> m2_874  [key=0, style=solid];
m2_882 -> m2_16  [key=2, style=dotted];
m2_882 -> m2_883  [key=0, style=solid];
m2_881 -> m2_16  [key=2, style=dotted];
m2_881 -> m2_882  [key=0, style=solid];
m2_880 -> m2_16  [key=2, style=dotted];
m2_880 -> m2_881  [key=0, style=solid];
m2_879 -> m2_29  [key=2, style=dotted];
m2_879 -> m2_882  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m2_879 -> m2_881  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m2_879 -> m2_880  [key=0, style=solid];
m2_876 -> m2_882  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m2_876 -> m2_877  [key=0, style=solid];
m2_876 -> m2_885  [key=2, style=dotted];
m2_878 -> m2_881  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m2_878 -> m2_879  [key=0, style=solid];
m2_878 -> m2_870  [key=2, style=dotted];
m2_878 -> m2_871  [key=2, style=dotted];
m2_878 -> m2_872  [key=2, style=dotted];
m2_874 -> m2_879  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_874 -> m2_876  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_874 -> m2_878  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_874 -> m2_875  [key=0, style=solid];
m2_875 -> m2_876  [key=0, style=solid];
m2_875 -> m2_884  [key=2, style=dotted];
m2_877 -> m2_878  [key=0, style=solid];
m2_877 -> m2_716  [key=2, style=dotted];
m2_883 -> m2_873  [key=0, style=bold, color=blue];
m2_3688 -> m2_3689  [key=0, style=solid];
m2_3689 -> m2_3657  [key=2, style=dotted];
m2_3689 -> m2_3690  [key=0, style=solid];
m2_3690 -> m2_3688  [key=0, style=bold, color=blue];
m2_855 -> m2_856  [key=0, style=solid];
m2_856 -> m2_858  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_856 -> m2_857  [key=0, style=solid];
m2_856 -> m2_25  [key=2, style=dotted];
m2_857 -> m2_855  [key=0, style=bold, color=blue];
m2_3103 -> m2_3104  [key=0, style=solid];
m2_3104 -> m2_800  [key=2, style=dotted];
m2_3104 -> m2_3105  [key=0, style=solid];
m2_3104 -> m2_3106  [key=2, style=dotted];
m2_3105 -> m2_3103  [key=0, style=bold, color=blue];
m2_673 -> m2_674  [key=0, style=solid];
m2_680 -> m2_142  [key=2, style=dotted];
m2_680 -> m2_681  [key=0, style=solid];
m2_679 -> m2_141  [key=2, style=dotted];
m2_679 -> m2_680  [key=0, style=solid];
m2_674 -> m2_679  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_674 -> m2_675  [key=0, style=solid];
m2_674 -> m2_682  [key=2, style=dotted];
m2_674 -> m2_676  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_674 -> m2_677  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_674 -> m2_678  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m2_678 -> m2_679  [key=0, style=solid];
m2_675 -> m2_676  [key=0, style=solid];
m2_676 -> m2_677  [key=0, style=solid];
m2_677 -> m2_678  [key=0, style=solid];
m2_681 -> m2_673  [key=0, style=bold, color=blue];
m2_3799 -> m2_3800  [key=0, style=solid];
m2_3806 -> m2_16  [key=2, style=dotted];
m2_3806 -> m2_3807  [key=0, style=solid];
m2_3811 -> m2_16  [key=2, style=dotted];
m2_3811 -> m2_3812  [key=0, style=solid];
m2_3804 -> m2_16  [key=2, style=dotted];
m2_3804 -> m2_3805  [key=0, style=solid];
m2_3809 -> m2_16  [key=2, style=dotted];
m2_3809 -> m2_3810  [key=0, style=solid];
m2_3810 -> m2_16  [key=2, style=dotted];
m2_3810 -> m2_3811  [key=0, style=solid];
m2_3810 -> m2_193  [key=2, style=dotted];
m2_3800 -> m2_3806  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3800 -> m2_3811  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3800 -> m2_756  [key=2, style=dotted];
m2_3800 -> m2_3801  [key=0, style=solid];
m2_3800 -> m2_911  [key=2, style=dotted];
m2_3800 -> m2_3803  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3805 -> m2_3806  [key=0, style=solid];
m2_3805 -> m2_114  [key=2, style=dotted];
m2_3807 -> m2_3808  [key=0, style=solid];
m2_3807 -> m2_189  [key=2, style=dotted];
m2_3807 -> m2_190  [key=2, style=dotted];
m2_3808 -> m2_3811  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3808 -> m2_3809  [key=0, style=solid];
m2_3808 -> m2_3810  [key=1, style=dashed, color=darkseagreen4, label=v];
m2_3808 -> m2_3142  [key=2, style=dotted];
m2_3803 -> m2_3804  [key=0, style=solid];
m2_3803 -> m2_3805  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3803 -> m2_3807  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3803 -> m2_541  [key=2, style=dotted];
m2_3802 -> m2_13  [key=2, style=dotted];
m2_3802 -> m2_3805  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3802 -> m2_3803  [key=0, style=solid];
m2_3801 -> m2_3807  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m2_3801 -> m2_3802  [key=0, style=solid];
m2_3812 -> m2_3799  [key=0, style=bold, color=blue];
m2_3497 -> m2_3498  [key=0, style=solid];
m2_3497 -> m2_3499  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
m2_3498 -> m2_3499  [key=0, style=solid];
m2_3499 -> m2_3500  [key=0, style=solid];
m2_3500 -> m2_3497  [key=0, style=bold, color=blue];
m2_3907 -> m2_3908  [key=0, style=solid];
m2_3909 -> m2_870  [key=2, style=dotted];
m2_3909 -> m2_3910  [key=0, style=solid];
m2_3909 -> m2_3912  [key=2, style=dotted];
m2_3909 -> m2_3913  [key=2, style=dotted];
m2_3908 -> m2_2364  [key=2, style=dotted];
m2_3908 -> m2_3909  [key=0, style=solid];
m2_3910 -> m2_3911  [key=0, style=solid];
m2_3911 -> m2_3907  [key=0, style=bold, color=blue];
m2_2752 -> m2_2753  [key=0, style=solid];
m2_2757 -> m2_16  [key=2, style=dotted];
m2_2757 -> m2_2758  [key=0, style=solid];
m2_2758 -> m2_16  [key=2, style=dotted];
m2_2758 -> m2_2759  [key=0, style=solid];
m2_2759 -> m2_16  [key=2, style=dotted];
m2_2759 -> m2_2760  [key=0, style=solid];
m2_2760 -> m2_16  [key=2, style=dotted];
m2_2760 -> m2_2761  [key=0, style=solid];
m2_2761 -> m2_16  [key=2, style=dotted];
m2_2761 -> m2_2762  [key=0, style=solid];
m2_2756 -> m2_29  [key=2, style=dotted];
m2_2756 -> m2_2757  [key=0, style=solid];
m2_2756 -> m2_2758  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2756 -> m2_2759  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2756 -> m2_2760  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2756 -> m2_2761  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2753 -> m2_2757  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2753 -> m2_2758  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2753 -> m2_2759  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2753 -> m2_2760  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2753 -> m2_2761  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2753 -> m2_912  [key=2, style=dotted];
m2_2753 -> m2_1048  [key=2, style=dotted];
m2_2753 -> m2_2754  [key=0, style=solid];
m2_2753 -> m2_2751  [key=2, style=dotted];
m2_2753 -> m2_2763  [key=2, style=dotted];
m2_2753 -> m2_1511  [key=2, style=dotted];
m2_2754 -> m2_2756  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2754 -> m2_2755  [key=0, style=solid];
m2_2754 -> m2_141  [key=2, style=dotted];
m2_2755 -> m2_2756  [key=0, style=solid];
m2_2755 -> m2_142  [key=2, style=dotted];
m2_2762 -> m2_2752  [key=0, style=bold, color=blue];
m2_2634 -> m2_2635  [key=0, style=solid];
m2_2641 -> m2_16  [key=2, style=dotted];
m2_2641 -> m2_2642  [key=0, style=solid];
m2_2642 -> m2_16  [key=2, style=dotted];
m2_2642 -> m2_2643  [key=0, style=solid];
m2_2643 -> m2_16  [key=2, style=dotted];
m2_2643 -> m2_2644  [key=0, style=solid];
m2_2644 -> m2_16  [key=2, style=dotted];
m2_2644 -> m2_2645  [key=0, style=solid];
m2_2640 -> m2_29  [key=2, style=dotted];
m2_2640 -> m2_2641  [key=0, style=solid];
m2_2640 -> m2_2642  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2640 -> m2_2643  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2640 -> m2_2644  [key=1, style=dashed, color=darkseagreen4, label=c2];
m2_2635 -> m2_2641  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2635 -> m2_2642  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2635 -> m2_2636  [key=0, style=solid];
m2_2635 -> m2_2630  [key=2, style=dotted];
m2_2635 -> m2_2637  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2635 -> m2_2638  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_2638 -> m2_2640  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2638 -> m2_2639  [key=0, style=solid];
m2_2638 -> m2_141  [key=2, style=dotted];
m2_2639 -> m2_2640  [key=0, style=solid];
m2_2639 -> m2_142  [key=2, style=dotted];
m2_2636 -> m2_140  [key=2, style=dotted];
m2_2636 -> m2_2637  [key=0, style=solid];
m2_2637 -> m2_2638  [key=0, style=solid];
m2_2637 -> m2_140  [key=2, style=dotted];
m2_2645 -> m2_2634  [key=0, style=bold, color=blue];
m2_1463 -> m2_1464  [key=0, style=solid];
m2_1466 -> m2_16  [key=2, style=dotted];
m2_1466 -> m2_1467  [key=0, style=solid];
m2_1467 -> m2_16  [key=2, style=dotted];
m2_1467 -> m2_1468  [key=0, style=solid];
m2_1468 -> m2_16  [key=2, style=dotted];
m2_1468 -> m2_1469  [key=0, style=solid];
m2_1465 -> m2_1466  [key=0, style=solid];
m2_1465 -> m2_1467  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1465 -> m2_1468  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1465 -> m2_13  [key=2, style=dotted];
m2_1465 -> m2_114  [key=2, style=dotted];
m2_1464 -> m2_1465  [key=0, style=solid];
m2_1469 -> m2_1463  [key=0, style=bold, color=blue];
m2_1559 -> m2_1560  [key=0, style=solid];
m2_1563 -> m2_16  [key=2, style=dotted];
m2_1563 -> m2_1564  [key=0, style=solid];
m2_1564 -> m2_16  [key=2, style=dotted];
m2_1564 -> m2_1565  [key=0, style=solid];
m2_1565 -> m2_16  [key=2, style=dotted];
m2_1565 -> m2_1566  [key=0, style=solid];
m2_1561 -> m2_29  [key=2, style=dotted];
m2_1561 -> m2_1562  [key=0, style=solid];
m2_1562 -> m2_1563  [key=0, style=solid];
m2_1562 -> m2_1564  [key=1, style=dashed, color=darkseagreen4, label=a];
m2_1562 -> m2_1565  [key=1, style=dashed, color=darkseagreen4, label=a];
m2_1562 -> m2_1567  [key=2, style=dotted];
m2_1560 -> m2_1561  [key=0, style=solid];
m2_1566 -> m2_1559  [key=0, style=bold, color=blue];
m2_3572 -> m2_3573  [key=0, style=solid];
m2_3578 -> m2_13  [key=2, style=dotted];
m2_3578 -> m2_3579  [key=0, style=solid];
m2_3578 -> m2_346  [key=2, style=dotted];
m2_3578 -> m2_541  [key=2, style=dotted];
m2_3573 -> m2_1048  [key=2, style=dotted];
m2_3573 -> m2_3574  [key=0, style=solid];
m2_3573 -> m2_540  [key=2, style=dotted];
m2_3573 -> m2_3575  [key=1, style=dashed, color=darkseagreen4, label=john];
m2_3573 -> m2_3576  [key=1, style=dashed, color=darkseagreen4, label=john];
m2_3573 -> m2_3577  [key=1, style=dashed, color=darkseagreen4, label=john];
m2_3574 -> m2_1048  [key=2, style=dotted];
m2_3574 -> m2_3575  [key=0, style=solid];
m2_3574 -> m2_540  [key=2, style=dotted];
m2_3574 -> m2_3576  [key=1, style=dashed, color=darkseagreen4, label=jane];
m2_3574 -> m2_3577  [key=1, style=dashed, color=darkseagreen4, label=jane];
m2_3577 -> m2_3578  [key=0, style=solid];
m2_3577 -> m2_112  [key=2, style=dotted];
m2_3579 -> m2_142  [key=2, style=dotted];
m2_3579 -> m2_3580  [key=0, style=solid];
m2_3575 -> m2_3576  [key=0, style=solid];
m2_3576 -> m2_3577  [key=0, style=solid];
m2_3580 -> m2_3572  [key=0, style=bold, color=blue];
m2_1871 -> m2_1872  [key=0, style=solid];
m2_1874 -> m2_16  [key=2, style=dotted];
m2_1874 -> m2_1875  [key=0, style=solid];
m2_1873 -> m2_29  [key=2, style=dotted];
m2_1873 -> m2_1874  [key=0, style=solid];
m2_1872 -> m2_1873  [key=0, style=solid];
m2_1875 -> m2_1871  [key=0, style=bold, color=blue];
m2_1650 -> m2_1651  [key=0, style=solid];
m2_1652 -> m2_25  [key=2, style=dotted];
m2_1652 -> m2_1653  [key=0, style=solid];
m2_1652 -> m2_1654  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1651 -> m2_1655  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1651 -> m2_1652  [key=0, style=solid];
m2_1653 -> m2_1650  [key=0, style=bold, color=blue];
m2_3864 -> m2_3865  [key=0, style=solid];
m2_3866 -> m2_65  [key=2, style=dotted];
m2_3866 -> m2_3867  [key=0, style=solid];
m2_3868 -> m2_16  [key=2, style=dotted];
m2_3868 -> m2_3869  [key=0, style=solid];
m2_3867 -> m2_29  [key=2, style=dotted];
m2_3867 -> m2_3868  [key=0, style=solid];
m2_3865 -> m2_3866  [key=0, style=solid];
m2_3865 -> m2_3870  [key=2, style=dotted];
m2_3869 -> m2_3864  [key=0, style=bold, color=blue];
m2_3658 -> m2_3659  [key=0, style=solid];
m2_3659 -> m2_3657  [key=2, style=dotted];
m2_3659 -> m2_3660  [key=0, style=solid];
m2_3660 -> m2_3658  [key=0, style=bold, color=blue];
m2_1876 -> m2_1877  [key=0, style=solid];
m2_1879 -> m2_1048  [key=2, style=dotted];
m2_1879 -> m2_1880  [key=0, style=solid];
m2_1885 -> m2_719  [key=2, style=dotted];
m2_1885 -> m2_1886  [key=0, style=solid];
m2_1881 -> m2_635  [key=2, style=dotted];
m2_1881 -> m2_1882  [key=0, style=solid];
m2_1881 -> m2_1883  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_1881 -> m2_1884  [key=1, style=dashed, color=darkseagreen4, label=ms];
m2_1877 -> m2_1879  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1877 -> m2_1878  [key=0, style=solid];
m2_1877 -> m2_1887  [key=2, style=dotted];
m2_1877 -> m2_1880  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1877 -> m2_1883  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_1878 -> m2_1879  [key=0, style=solid];
m2_1878 -> m2_1888  [key=2, style=dotted];
m2_1880 -> m2_1881  [key=0, style=solid];
m2_1880 -> m2_1889  [key=2, style=dotted];
m2_1884 -> m2_718  [key=2, style=dotted];
m2_1884 -> m2_1885  [key=0, style=solid];
m2_1882 -> m2_716  [key=2, style=dotted];
m2_1882 -> m2_1883  [key=0, style=solid];
m2_1883 -> m2_717  [key=2, style=dotted];
m2_1883 -> m2_1884  [key=0, style=solid];
m2_1886 -> m2_1876  [key=0, style=bold, color=blue];
m2_3545 -> m2_3546  [key=0, style=solid];
m2_3550 -> m2_16  [key=2, style=dotted];
m2_3550 -> m2_3551  [key=0, style=solid];
m2_3549 -> m2_3550  [key=0, style=solid];
m2_3549 -> m2_2364  [key=2, style=dotted];
m2_3547 -> m2_13  [key=2, style=dotted];
m2_3547 -> m2_3548  [key=0, style=solid];
m2_3546 -> m2_3549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_3546 -> m2_3547  [key=0, style=solid];
m2_3546 -> m2_189  [key=2, style=dotted];
m2_3546 -> m2_190  [key=2, style=dotted];
m2_3548 -> m2_3549  [key=0, style=solid];
m2_3548 -> m2_634  [key=2, style=dotted];
m2_3551 -> m2_3545  [key=0, style=bold, color=blue];
m2_795 -> m2_796  [key=0, style=solid];
m2_798 -> m2_16  [key=2, style=dotted];
m2_798 -> m2_799  [key=0, style=solid];
m2_798 -> m2_800  [key=2, style=dotted];
m2_797 -> m2_798  [key=0, style=solid];
m2_797 -> m2_738  [key=2, style=dotted];
m2_796 -> m2_797  [key=0, style=solid];
m2_799 -> m2_795  [key=0, style=bold, color=blue];
m2_1731 -> m2_1732  [key=0, style=solid];
m2_1732 -> m2_12  [key=2, style=dotted];
m2_1732 -> m2_1733  [key=0, style=solid];
m2_1732 -> m2_1734  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1732 -> m2_1735  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m2_1733 -> m2_1048  [key=2, style=dotted];
m2_1733 -> m2_633  [key=2, style=dotted];
m2_1733 -> m2_1734  [key=0, style=solid];
m2_1734 -> m2_1048  [key=2, style=dotted];
m2_1734 -> m2_633  [key=2, style=dotted];
m2_1734 -> m2_1735  [key=0, style=solid];
m2_1735 -> m2_141  [key=2, style=dotted];
m2_1735 -> m2_1736  [key=0, style=solid];
m2_1736 -> m2_142  [key=2, style=dotted];
m2_1736 -> m2_1737  [key=0, style=solid];
m2_1737 -> m2_1731  [key=0, style=bold, color=blue];
m2_2415 -> m2_2416  [key=0, style=solid];
m2_2417 -> m2_16  [key=2, style=dotted];
m2_2417 -> m2_2418  [key=0, style=solid];
m2_2416 -> m2_29  [key=2, style=dotted];
m2_2416 -> m2_2417  [key=0, style=solid];
m2_2418 -> m2_2415  [key=0, style=bold, color=blue];
m2_3763 -> m2_3764  [key=0, style=solid];
m2_3770 -> m2_16  [key=2, style=dotted];
m2_3770 -> m2_3771  [key=0, style=solid];
m2_3770 -> m2_1484  [key=2, style=dotted];
m2_3764 -> m2_3770  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3764 -> m2_756  [key=2, style=dotted];
m2_3764 -> m2_3765  [key=0, style=solid];
m2_3764 -> m2_3767  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_3769 -> m2_3770  [key=0, style=solid];
m2_3769 -> m2_114  [key=2, style=dotted];
m2_3766 -> m2_13  [key=2, style=dotted];
m2_3766 -> m2_3769  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_3766 -> m2_3767  [key=0, style=solid];
m2_3767 -> m2_12  [key=2, style=dotted];
m2_3767 -> m2_3769  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3767 -> m2_541  [key=2, style=dotted];
m2_3767 -> m2_3768  [key=0, style=solid];
m2_3765 -> m2_3766  [key=0, style=solid];
m2_3768 -> m2_3769  [key=0, style=solid];
m2_3768 -> m2_142  [key=2, style=dotted];
m2_3771 -> m2_3763  [key=0, style=bold, color=blue];
m2_2302 -> m2_2303  [key=0, style=solid];
m2_2306 -> m2_16  [key=2, style=dotted];
m2_2306 -> m2_2307  [key=0, style=solid];
m2_2307 -> m2_274  [key=2, style=dotted];
m2_2307 -> m2_2308  [key=0, style=solid];
m2_2307 -> m2_2311  [key=2, style=dotted];
m2_2308 -> m2_274  [key=2, style=dotted];
m2_2308 -> m2_2309  [key=0, style=solid];
m2_2308 -> m2_2311  [key=2, style=dotted];
m2_2309 -> m2_274  [key=2, style=dotted];
m2_2309 -> m2_2310  [key=0, style=solid];
m2_2309 -> m2_2311  [key=2, style=dotted];
m2_2305 -> m2_29  [key=2, style=dotted];
m2_2305 -> m2_2306  [key=0, style=solid];
m2_2305 -> m2_2307  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2305 -> m2_2308  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2305 -> m2_2309  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_2303 -> m2_2305  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_2303 -> m2_2304  [key=0, style=solid];
m2_2303 -> m2_128  [key=2, style=dotted];
m2_2303 -> m2_141  [key=2, style=dotted];
m2_2304 -> m2_2305  [key=0, style=solid];
m2_2304 -> m2_142  [key=2, style=dotted];
m2_2310 -> m2_2302  [key=0, style=bold, color=blue];
m2_1504 -> m2_1505  [key=0, style=solid];
m2_1506 -> m2_65  [key=2, style=dotted];
m2_1506 -> m2_1507  [key=0, style=solid];
m2_1506 -> m2_1508  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1507 -> m2_16  [key=2, style=dotted];
m2_1507 -> m2_1508  [key=0, style=solid];
m2_1507 -> m2_1512  [key=2, style=dotted];
m2_1509 -> m2_16  [key=2, style=dotted];
m2_1509 -> m2_1510  [key=0, style=solid];
m2_1508 -> m2_29  [key=2, style=dotted];
m2_1508 -> m2_1509  [key=0, style=solid];
m2_1505 -> m2_1506  [key=0, style=solid];
m2_1505 -> m2_1507  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_1505 -> m2_1509  [key=1, style=dashed, color=darkseagreen4, label=uri];
m2_1505 -> m2_1511  [key=2, style=dotted];
m2_1510 -> m2_1504  [key=0, style=bold, color=blue];
m2_2214 -> m2_2215  [key=0, style=solid];
m2_2222 -> m2_2226  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2222 -> m2_2223  [key=0, style=solid];
m2_2222 -> m2_141  [key=2, style=dotted];
m2_2215 -> m2_12  [key=2, style=dotted];
m2_2215 -> m2_2216  [key=0, style=solid];
m2_2215 -> m2_2217  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2215 -> m2_2221  [key=1, style=dashed, color=darkseagreen4, label=reference];
m2_2218 -> m2_12  [key=2, style=dotted];
m2_2218 -> m2_2222  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2218 -> m2_2219  [key=0, style=solid];
m2_2218 -> m2_2220  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2218 -> m2_2221  [key=1, style=dashed, color=darkseagreen4, label=child];
m2_2221 -> m2_2222  [key=0, style=solid];
m2_2221 -> m2_633  [key=2, style=dotted];
m2_2223 -> m2_2225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2223 -> m2_25  [key=2, style=dotted];
m2_2223 -> m2_2224  [key=0, style=solid];
m2_2216 -> m2_633  [key=2, style=dotted];
m2_2216 -> m2_2217  [key=0, style=solid];
m2_2217 -> m2_633  [key=2, style=dotted];
m2_2217 -> m2_2218  [key=0, style=solid];
m2_2219 -> m2_633  [key=2, style=dotted];
m2_2219 -> m2_2220  [key=0, style=solid];
m2_2220 -> m2_633  [key=2, style=dotted];
m2_2220 -> m2_2221  [key=0, style=solid];
m2_2224 -> m2_2214  [key=0, style=bold, color=blue];
m2_3198 -> m2_3199  [key=0, style=solid];
m2_3200 -> m2_65  [key=2, style=dotted];
m2_3200 -> m2_3201  [key=0, style=solid];
m2_3201 -> m2_16  [key=2, style=dotted];
m2_3201 -> m2_3202  [key=0, style=solid];
m2_3199 -> m2_3200  [key=0, style=solid];
m2_3199 -> m2_3197  [key=2, style=dotted];
m2_3202 -> m2_3198  [key=0, style=bold, color=blue];
m2_2888 -> m2_2889  [key=0, style=solid];
m2_2889 -> m2_2893  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2889 -> m2_2890  [key=0, style=solid];
m2_2890 -> m2_2892  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2890 -> m2_25  [key=2, style=dotted];
m2_2890 -> m2_2891  [key=0, style=solid];
m2_2891 -> m2_2888  [key=0, style=bold, color=blue];
m2_3664 -> m2_3665  [key=0, style=solid];
m2_3665 -> m2_3657  [key=2, style=dotted];
m2_3665 -> m2_3666  [key=0, style=solid];
m2_3666 -> m2_3664  [key=0, style=bold, color=blue];
m2_3536 -> m2_3537  [key=0, style=solid];
m2_3538 -> m2_65  [key=2, style=dotted];
m2_3538 -> m2_3539  [key=0, style=solid];
m2_3540 -> m2_16  [key=2, style=dotted];
m2_3540 -> m2_3541  [key=0, style=solid];
m2_3542 -> m2_274  [key=2, style=dotted];
m2_3542 -> m2_3541  [key=0, style=solid];
m2_3542 -> m2_1912  [key=2, style=dotted];
m2_3539 -> m2_29  [key=2, style=dotted];
m2_3539 -> m2_3540  [key=0, style=solid];
m2_3539 -> m2_3542  [key=1, style=dashed, color=darkseagreen4, label=s2];
m2_3537 -> m2_3538  [key=0, style=solid];
m2_3537 -> m2_3540  [key=1, style=dashed, color=darkseagreen4, label=s1];
m2_3537 -> m2_3544  [key=2, style=dotted];
m2_3537 -> m2_3541  [key=1, style=dashed, color=darkseagreen4, label=s1];
m2_3541 -> m2_3542  [key=0, style=solid];
m2_3541 -> m2_3543  [key=0, style=solid];
m2_3543 -> m2_3536  [key=0, style=bold, color=blue];
m2_828 -> m2_829  [key=0, style=solid];
m2_830 -> m2_270  [key=2, style=dotted];
m2_830 -> m2_831  [key=0, style=solid];
m2_829 -> m2_830  [key=0, style=solid];
m2_831 -> m2_832  [key=0, style=solid];
m2_832 -> m2_832  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_832 -> m2_833  [key=0, style=solid];
m2_833 -> m2_828  [key=0, style=bold, color=blue];
m2_3685 -> m2_3686  [key=0, style=solid];
m2_3686 -> m2_3657  [key=2, style=dotted];
m2_3686 -> m2_3687  [key=0, style=solid];
m2_3687 -> m2_3685  [key=0, style=bold, color=blue];
m2_1815 -> m2_1816  [key=0, style=solid];
m2_1817 -> m2_16  [key=2, style=dotted];
m2_1817 -> m2_1818  [key=0, style=solid];
m2_1817 -> m2_1201  [key=2, style=dotted];
m2_1819 -> m2_16  [key=2, style=dotted];
m2_1819 -> m2_1820  [key=0, style=solid];
m2_1819 -> m2_1201  [key=2, style=dotted];
m2_1816 -> m2_29  [key=2, style=dotted];
m2_1816 -> m2_1817  [key=0, style=solid];
m2_1818 -> m2_29  [key=2, style=dotted];
m2_1818 -> m2_1819  [key=0, style=solid];
m2_1820 -> m2_1815  [key=0, style=bold, color=blue];
m2_3521 -> m2_3522  [key=0, style=solid];
m2_3525 -> m2_16  [key=2, style=dotted];
m2_3525 -> m2_3526  [key=0, style=solid];
m2_3523 -> m2_3525  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_3523 -> m2_3524  [key=0, style=solid];
m2_3523 -> m2_141  [key=2, style=dotted];
m2_3524 -> m2_3525  [key=0, style=solid];
m2_3524 -> m2_13  [key=2, style=dotted];
m2_3524 -> m2_15  [key=2, style=dotted];
m2_3522 -> m2_912  [key=2, style=dotted];
m2_3522 -> m2_12  [key=2, style=dotted];
m2_3522 -> m2_194  [key=2, style=dotted];
m2_3522 -> m2_904  [key=2, style=dotted];
m2_3522 -> m2_3523  [key=0, style=solid];
m2_3522 -> m2_3524  [key=1, style=dashed, color=darkseagreen4, label=dates];
m2_3526 -> m2_3521  [key=0, style=bold, color=blue];
m2_3212 -> m2_3213  [key=0, style=solid];
m2_3217 -> m2_16  [key=2, style=dotted];
m2_3217 -> m2_3218  [key=0, style=solid];
m2_3218 -> m2_16  [key=2, style=dotted];
m2_3218 -> m2_3219  [key=0, style=solid];
m2_3218 -> m2_194  [key=2, style=dotted];
m2_3219 -> m2_16  [key=2, style=dotted];
m2_3219 -> m2_3220  [key=0, style=solid];
m2_3219 -> m2_194  [key=2, style=dotted];
m2_3216 -> m2_29  [key=2, style=dotted];
m2_3216 -> m2_3217  [key=0, style=solid];
m2_3216 -> m2_3218  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3216 -> m2_3219  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m2_3214 -> m2_3216  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3214 -> m2_13  [key=2, style=dotted];
m2_3214 -> m2_3215  [key=0, style=solid];
m2_3214 -> m2_15  [key=2, style=dotted];
m2_3215 -> m2_3216  [key=0, style=solid];
m2_3215 -> m2_142  [key=2, style=dotted];
m2_3213 -> m2_12  [key=2, style=dotted];
m2_3213 -> m2_194  [key=2, style=dotted];
m2_3213 -> m2_3214  [key=0, style=solid];
m2_3220 -> m2_3212  [key=0, style=bold, color=blue];
m2_3110 -> m2_3111  [key=0, style=solid];
m2_3119 -> m2_16  [key=2, style=dotted];
m2_3119 -> m2_3120  [key=0, style=solid];
m2_3120 -> m2_16  [key=2, style=dotted];
m2_3120 -> m2_3121  [key=0, style=solid];
m2_3121 -> m2_16  [key=2, style=dotted];
m2_3121 -> m2_3122  [key=0, style=solid];
m2_3111 -> m2_3119  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_3111 -> m2_3120  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_3111 -> m2_3121  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_3111 -> m2_3112  [key=0, style=solid];
m2_3111 -> m2_112  [key=2, style=dotted];
m2_3111 -> m2_3118  [key=1, style=dashed, color=darkseagreen4, label=values];
m2_3115 -> m2_3119  [key=0, style=solid];
m2_3115 -> m2_3116  [key=0, style=solid];
m2_3115 -> m2_3123  [key=2, style=dotted];
m2_3114 -> m2_3119  [key=0, style=solid];
m2_3114 -> m2_3115  [key=0, style=solid];
m2_3116 -> m2_191  [key=2, style=dotted];
m2_3116 -> m2_3117  [key=0, style=solid];
m2_3112 -> m2_3115  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_3112 -> m2_189  [key=2, style=dotted];
m2_3112 -> m2_190  [key=2, style=dotted];
m2_3112 -> m2_3113  [key=0, style=solid];
m2_3112 -> m2_3117  [key=1, style=dashed, color=darkseagreen4, label=reader];
m2_3118 -> m2_3114  [key=0, style=solid];
m2_3118 -> m2_140  [key=2, style=dotted];
m2_3113 -> m2_3114  [key=0, style=solid];
m2_3117 -> m2_2364  [key=2, style=dotted];
m2_3117 -> m2_3118  [key=0, style=solid];
m2_3122 -> m2_3110  [key=0, style=bold, color=blue];
m2_807 -> m2_808  [key=0, style=solid];
m2_808 -> m2_65  [key=2, style=dotted];
m2_808 -> m2_809  [key=0, style=solid];
m2_808 -> m2_813  [key=2, style=dotted];
m2_810 -> m2_16  [key=2, style=dotted];
m2_810 -> m2_811  [key=0, style=solid];
m2_811 -> m2_16  [key=2, style=dotted];
m2_811 -> m2_812  [key=0, style=solid];
m2_809 -> m2_29  [key=2, style=dotted];
m2_809 -> m2_810  [key=0, style=solid];
m2_809 -> m2_811  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_812 -> m2_807  [key=0, style=bold, color=blue];
m2_941 -> m2_942  [key=0, style=solid];
m2_949 -> m2_16  [key=2, style=dotted];
m2_949 -> m2_950  [key=0, style=solid];
m2_947 -> m2_16  [key=2, style=dotted];
m2_947 -> m2_948  [key=0, style=solid];
m2_942 -> m2_949  [key=1, style=dashed, color=darkseagreen4, label=d];
m2_942 -> m2_756  [key=2, style=dotted];
m2_942 -> m2_943  [key=0, style=solid];
m2_948 -> m2_949  [key=0, style=solid];
m2_948 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_948 -> m2_952  [key=2, style=dotted];
m2_946 -> m2_947  [key=0, style=solid];
m2_946 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_946 -> m2_541  [key=2, style=dotted];
m2_944 -> m2_13  [key=2, style=dotted];
m2_944 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_944 -> m2_946  [key=1, style=dashed, color=darkseagreen4, label=settings];
m2_944 -> m2_945  [key=0, style=solid];
m2_943 -> m2_948  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_943 -> m2_946  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m2_943 -> m2_944  [key=0, style=solid];
m2_945 -> m2_946  [key=0, style=solid];
m2_945 -> m2_140  [key=2, style=dotted];
m2_945 -> m2_951  [key=2, style=dotted];
m2_950 -> m2_941  [key=0, style=bold, color=blue];
m2_2585 -> m2_2586  [key=0, style=solid];
m2_2589 -> m2_16  [key=2, style=dotted];
m2_2589 -> m2_2590  [key=0, style=solid];
m2_2587 -> m2_29  [key=2, style=dotted];
m2_2587 -> m2_2589  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m2_2587 -> m2_2588  [key=0, style=solid];
m2_2588 -> m2_29  [key=2, style=dotted];
m2_2588 -> m2_2589  [key=0, style=solid];
m2_2586 -> m2_2587  [key=0, style=solid];
m2_2586 -> m2_2588  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2590 -> m2_2585  [key=0, style=bold, color=blue];
m2_3303 -> m2_3304  [key=0, style=solid];
m2_3308 -> m2_16  [key=2, style=dotted];
m2_3308 -> m2_3309  [key=0, style=solid];
m2_3305 -> m2_29  [key=2, style=dotted];
m2_3305 -> m2_3308  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_3305 -> m2_3306  [key=0, style=solid];
m2_3305 -> m2_3307  [key=1, style=dashed, color=darkseagreen4, label=exception];
m2_3307 -> m2_3308  [key=0, style=solid];
m2_3307 -> m2_547  [key=2, style=dotted];
m2_3304 -> m2_3305  [key=0, style=solid];
m2_3306 -> m2_3307  [key=0, style=solid];
m2_3306 -> m2_598  [key=2, style=dotted];
m2_3309 -> m2_3303  [key=0, style=bold, color=blue];
m2_1803 -> m2_1804  [key=0, style=solid];
m2_1811 -> m2_16  [key=2, style=dotted];
m2_1811 -> m2_1812  [key=0, style=solid];
m2_1810 -> m2_29  [key=2, style=dotted];
m2_1810 -> m2_1811  [key=0, style=solid];
m2_1808 -> m2_1810  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_1808 -> m2_1809  [key=0, style=solid];
m2_1808 -> m2_1800  [key=2, style=dotted];
m2_1809 -> m2_1810  [key=0, style=solid];
m2_1809 -> m2_142  [key=2, style=dotted];
m2_1804 -> m2_1808  [key=1, style=dashed, color=darkseagreen4, label=g];
m2_1804 -> m2_1805  [key=0, style=solid];
m2_1804 -> m2_1813  [key=2, style=dotted];
m2_1804 -> m2_1806  [key=1, style=dashed, color=darkseagreen4, label=g];
m2_1804 -> m2_1807  [key=1, style=dashed, color=darkseagreen4, label=g];
m2_1807 -> m2_1808  [key=0, style=solid];
m2_1805 -> m2_1806  [key=0, style=solid];
m2_1805 -> m2_1814  [key=2, style=dotted];
m2_1805 -> m2_1794  [key=2, style=dotted];
m2_1806 -> m2_1807  [key=0, style=solid];
m2_1806 -> m2_1814  [key=2, style=dotted];
m2_1806 -> m2_1794  [key=2, style=dotted];
m2_1812 -> m2_1803  [key=0, style=bold, color=blue];
m2_1174 -> m2_1175  [key=0, style=solid];
m2_1175 -> m2_65  [key=2, style=dotted];
m2_1175 -> m2_1176  [key=0, style=solid];
m2_1175 -> m2_1178  [key=2, style=dotted];
m2_1176 -> m2_16  [key=2, style=dotted];
m2_1176 -> m2_1177  [key=0, style=solid];
m2_1177 -> m2_1174  [key=0, style=bold, color=blue];
m2_3557 -> m2_3558  [key=0, style=solid];
m2_3558 -> m2_2159  [key=2, style=dotted];
m2_3558 -> m2_3559  [key=0, style=solid];
m2_3560 -> m2_142  [key=2, style=dotted];
m2_3560 -> m2_3561  [key=0, style=solid];
m2_3559 -> m2_141  [key=2, style=dotted];
m2_3559 -> m2_3560  [key=0, style=solid];
m2_3561 -> m2_3557  [key=0, style=bold, color=blue];
m2_1662 -> m2_1663  [key=0, style=solid];
m2_1663 -> m2_25  [key=2, style=dotted];
m2_1663 -> m2_1665  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1663 -> m2_1664  [key=0, style=solid];
m2_1664 -> m2_1662  [key=0, style=bold, color=blue];
m2_844 -> m2_845  [key=0, style=solid];
m2_848 -> m2_65  [key=2, style=dotted];
m2_848 -> m2_849  [key=0, style=solid];
m2_848 -> m2_850  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m2_851 -> m2_16  [key=2, style=dotted];
m2_851 -> m2_852  [key=0, style=solid];
m2_852 -> m2_16  [key=2, style=dotted];
m2_852 -> m2_853  [key=0, style=solid];
m2_849 -> m2_16  [key=2, style=dotted];
m2_849 -> m2_850  [key=0, style=solid];
m2_850 -> m2_29  [key=2, style=dotted];
m2_850 -> m2_851  [key=0, style=solid];
m2_850 -> m2_852  [key=1, style=dashed, color=darkseagreen4, label=test2];
m2_845 -> m2_848  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_845 -> m2_851  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_845 -> m2_852  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_845 -> m2_846  [key=0, style=solid];
m2_845 -> m2_854  [key=2, style=dotted];
m2_845 -> m2_847  [key=1, style=dashed, color=darkseagreen4, label=test];
m2_847 -> m2_848  [key=0, style=solid];
m2_846 -> m2_847  [key=0, style=solid];
m2_853 -> m2_844  [key=0, style=bold, color=blue];
m2_3022 -> m2_3023  [key=0, style=solid];
m2_3023 -> m2_29  [key=2, style=dotted];
m2_3023 -> m2_3024  [key=0, style=solid];
m2_3024 -> m2_3025  [key=0, style=solid];
m2_3024 -> m2_163  [key=2, style=dotted];
m2_3025 -> m2_3022  [key=0, style=bold, color=blue];
m2_2618 -> m2_2619  [key=0, style=solid];
m2_2620 -> m2_65  [key=2, style=dotted];
m2_2620 -> m2_2621  [key=0, style=solid];
m2_2621 -> m2_16  [key=2, style=dotted];
m2_2621 -> m2_2622  [key=0, style=solid];
m2_2619 -> m2_2620  [key=0, style=solid];
m2_2619 -> m2_2623  [key=2, style=dotted];
m2_2622 -> m2_2618  [key=0, style=bold, color=blue];
m2_2902 -> m2_2903  [key=0, style=solid];
m2_2903 -> m2_2907  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_2903 -> m2_2904  [key=0, style=solid];
m2_2904 -> m2_2906  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2904 -> m2_25  [key=2, style=dotted];
m2_2904 -> m2_2905  [key=0, style=solid];
m2_2905 -> m2_2902  [key=0, style=bold, color=blue];
m2_2710 -> m2_2711  [key=0, style=solid];
m2_2712 -> m2_16  [key=2, style=dotted];
m2_2712 -> m2_2713  [key=0, style=solid];
m2_2712 -> m2_193  [key=2, style=dotted];
m2_2713 -> m2_16  [key=2, style=dotted];
m2_2713 -> m2_2714  [key=0, style=solid];
m2_2713 -> m2_271  [key=2, style=dotted];
m2_2711 -> m2_29  [key=2, style=dotted];
m2_2711 -> m2_2712  [key=0, style=solid];
m2_2711 -> m2_2713  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_2711 -> m2_2714  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_2711 -> m2_2715  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_2711 -> m2_2716  [key=1, style=dashed, color=darkseagreen4, label=r];
m2_2714 -> m2_1484  [key=2, style=dotted];
m2_2714 -> m2_2715  [key=0, style=solid];
m2_2714 -> m2_598  [key=2, style=dotted];
m2_2715 -> m2_1484  [key=2, style=dotted];
m2_2715 -> m2_2716  [key=0, style=solid];
m2_2715 -> m2_598  [key=2, style=dotted];
m2_2716 -> m2_1484  [key=2, style=dotted];
m2_2716 -> m2_2717  [key=0, style=solid];
m2_2716 -> m2_163  [key=2, style=dotted];
m2_2717 -> m2_2710  [key=0, style=bold, color=blue];
m2_3968 -> m2_492  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_498  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_511  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3968 -> m2_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m2_3961 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_3963 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=c1];
m2_3971 -> m2_891  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3976 -> m2_1557  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3977 -> m2_1584  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3978 -> m2_1591  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3979 -> m2_1598  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3980 -> m2_1605  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3981 -> m2_1612  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3982 -> m2_1619  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3983 -> m2_1626  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3984 -> m2_1633  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3998 -> m2_2226  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_4002 -> m2_2342  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_4014 -> m2_2893  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_4015 -> m2_2907  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_4023 -> m2_3403  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_4025 -> m2_3495  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3972 -> m2_1309  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m2_3970 -> m2_3245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3970 -> m2_668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3970 -> m2_689  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3970 -> m2_699  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3970 -> m2_3251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3970 -> m2_3252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m2_3989 -> m2_1834  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3987 -> m2_1779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m2_3987 -> m2_1780  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m2_4011 -> m2_2648  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m2_4011 -> m2_2647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m2_3967 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m2_3975 -> m2_1453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3975 -> m2_1447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3975 -> m2_1448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3975 -> m2_1449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_3975 -> m2_1450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m2_4012 -> m2_2701  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_4012 -> m2_2693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_4012 -> m2_2694  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_4012 -> m2_2695  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_4012 -> m2_2698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m2_4016 -> m2_3156  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_4017 -> m2_3171  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_4018 -> m2_3186  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_3993 -> m2_1910  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1900  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1896  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1914  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1918  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1922  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1929  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1932  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3993 -> m2_1944  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m2_3994 -> m2_1996  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1998  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1999  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1997  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1964  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1965  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1966  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1967  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1968  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1969  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1961  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1957  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1958  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1959  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1960  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1971  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1972  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1973  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1975  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1976  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1977  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1978  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1979  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1980  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_1981  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2002  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2003  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2004  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2005  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2006  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2007  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2008  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2009  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2010  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2011  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2012  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_3994 -> m2_2013  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m2_4007 -> m2_2477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m2_3962 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass"];
m2_3986 -> m2_1655  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_4010 -> m2_2632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m2_4010 -> m2_2631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m2_4013 -> m2_2725  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m2_3988 -> m2_1795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m2_3988 -> m2_1801  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m2_3988 -> m2_1798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m2_3990 -> m2_1838  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m2_4019 -> m2_3301  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_4020 -> m2_3301  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_4031 -> m2_3933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DecimalTest"];
m2_4021 -> m2_3361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m2_4030 -> m2_3876  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m2_4024 -> m2_3414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m2_3965 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem"];
m2_3985 -> m2_1647  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_3991 -> m2_1867  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1"];
m2_4004 -> m2_2458  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m2_4028 -> m2_3829  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType"];
m2_3969 -> m2_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m2_3969 -> m2_645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m2_3969 -> m2_648  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m2_4027 -> m2_3654  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m2_4027 -> m2_3648  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m2_4027 -> m2_3650  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m2_4027 -> m2_3652  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m2_4027 -> m2_3677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m2_4027 -> m2_3680  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m2_4027 -> m2_3683  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m2_3964 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver"];
m2_3992 -> m2_1869  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2"];
m2_3997 -> m2_2135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3997 -> m2_2144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m2_3996 -> m2_2124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3996 -> m2_2125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3996 -> m2_2126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3996 -> m2_2127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3996 -> m2_2128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3996 -> m2_2129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3996 -> m2_2130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_3996 -> m2_2131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m2_4026 -> m2_3565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor"];
m3_457 -> m3_58  [key=2, style=dotted];
m3_457 -> m3_59  [key=2, style=dotted];
m3_457 -> m3_458  [key=0, style=solid];
m3_178 -> m3_60  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_420 -> m3_60  [key=2, style=dotted];
m3_420 -> m3_421  [key=0, style=solid];
m3_510 -> m3_60  [key=2, style=dotted];
m3_510 -> m3_511  [key=0, style=solid];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_296  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_500  [key=2, style=dotted];
m3_272 -> m3_274  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_275  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_277  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_278  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_279  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_280  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_281  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_284  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_286  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_287  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_288  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_289  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_291  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_292  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_293  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_294  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_272 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_288  [key=2, style=dotted];
m3_273 -> m3_6  [key=2, style=dotted];
m3_273 -> m3_309  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_288  [key=2, style=dotted];
m3_274 -> m3_6  [key=2, style=dotted];
m3_274 -> m3_310  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_275 -> m3_288  [key=2, style=dotted];
m3_275 -> m3_6  [key=2, style=dotted];
m3_275 -> m3_311  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_288  [key=2, style=dotted];
m3_276 -> m3_6  [key=2, style=dotted];
m3_276 -> m3_312  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_288  [key=2, style=dotted];
m3_277 -> m3_6  [key=2, style=dotted];
m3_277 -> m3_310  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_288  [key=2, style=dotted];
m3_278 -> m3_6  [key=2, style=dotted];
m3_278 -> m3_312  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_288  [key=2, style=dotted];
m3_279 -> m3_6  [key=2, style=dotted];
m3_279 -> m3_310  [key=2, style=dotted];
m3_280 -> m3_281  [key=0, style=solid];
m3_280 -> m3_288  [key=2, style=dotted];
m3_280 -> m3_6  [key=2, style=dotted];
m3_280 -> m3_312  [key=2, style=dotted];
m3_281 -> m3_282  [key=0, style=solid];
m3_281 -> m3_288  [key=2, style=dotted];
m3_281 -> m3_6  [key=2, style=dotted];
m3_281 -> m3_309  [key=2, style=dotted];
m3_282 -> m3_283  [key=0, style=solid];
m3_282 -> m3_288  [key=2, style=dotted];
m3_282 -> m3_6  [key=2, style=dotted];
m3_282 -> m3_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_282 -> m3_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_283 -> m3_284  [key=0, style=solid];
m3_283 -> m3_288  [key=2, style=dotted];
m3_283 -> m3_6  [key=2, style=dotted];
m3_283 -> m3_286  [key=0, style=solid];
m3_284 -> m3_285  [key=0, style=solid];
m3_284 -> m3_288  [key=2, style=dotted];
m3_284 -> m3_6  [key=2, style=dotted];
m3_284 -> m3_310  [key=2, style=dotted];
m3_285 -> m3_286  [key=0, style=solid];
m3_285 -> m3_288  [key=2, style=dotted];
m3_285 -> m3_6  [key=2, style=dotted];
m3_285 -> m3_283  [key=0, style=solid];
m3_285 -> m3_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_286 -> m3_287  [key=0, style=solid];
m3_286 -> m3_288  [key=2, style=dotted];
m3_286 -> m3_6  [key=2, style=dotted];
m3_286 -> m3_311  [key=2, style=dotted];
m3_287 -> m3_272  [key=0, style=bold, color=blue];
m3_287 -> m3_288  [key=0, style=solid];
m3_287 -> m3_312  [key=2, style=dotted];
m3_576 -> m3_58  [key=2, style=dotted];
m3_576 -> m3_59  [key=2, style=dotted];
m3_576 -> m3_577  [key=0, style=solid];
m3_310 -> m3_311  [key=0, style=solid];
m3_310 -> m3_415  [key=2, style=dotted];
m3_310 -> m3_6  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid, color=green];
m3_20 -> m3_60  [key=2, style=dotted, color=green];
m3_21 -> m3_22  [key=0, style=solid, color=green];
m3_21 -> m3_58  [key=2, style=dotted, color=green];
m3_21 -> m3_59  [key=2, style=dotted, color=green];
m3_22 -> m3_23  [key=0, style=solid, color=green];
m3_22 -> m3_25  [key=2, style=dotted];
m3_22 -> m3_10  [key=2, style=dotted];
m3_22 -> m3_26  [key=2, style=dotted];
m3_22 -> m3_27  [key=2, style=dotted];
m3_22 -> m3_16  [key=2, style=dotted];
m3_22 -> m3_60  [key=2, style=dotted, color=green];
m3_23 -> m3_24  [key=0, style=solid, color=green];
m3_23 -> m3_6  [key=2, style=dotted];
m3_23 -> m3_60  [key=2, style=dotted, color=green];
m3_24 -> m3_20  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid, color=green];
m3_24 -> m3_60  [key=2, style=dotted, color=green];
m3_27 -> m3_28  [key=0, style=solid, color=green];
m3_27 -> m3_60  [key=2, style=dotted, color=green];
m3_101 -> m3_60  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_109  [key=2, style=dotted];
m3_534 -> m3_535  [key=0, style=solid];
m3_534 -> m3_543  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_242 -> m3_255  [key=2, style=dotted];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_110  [key=2, style=dotted];
m3_243 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_243 -> m3_253  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_243 -> m3_256  [key=2, style=dotted];
m3_243 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_243 -> m3_250  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_6  [key=2, style=dotted];
m3_244 -> m3_249  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_244 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_110  [key=2, style=dotted];
m3_245 -> m3_252  [key=0, style=solid];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_254  [key=2, style=dotted];
m3_246 -> m3_25  [key=2, style=dotted];
m3_246 -> m3_6  [key=2, style=dotted];
m3_246 -> m3_56  [key=2, style=dotted];
m3_246 -> m3_57  [key=2, style=dotted];
m3_246 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_110  [key=2, style=dotted];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_6  [key=2, style=dotted];
m3_248 -> m3_58  [key=2, style=dotted];
m3_248 -> m3_248  [key=0, style=solid];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_110  [key=2, style=dotted];
m3_249 -> m3_251  [key=0, style=solid];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_6  [key=2, style=dotted];
m3_250 -> m3_257  [key=2, style=dotted];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_110  [key=2, style=dotted];
m3_251 -> m3_245  [key=0, style=solid];
m3_251 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_6  [key=2, style=dotted];
m3_252 -> m3_60  [key=2, style=dotted];
m3_253 -> m3_242  [key=0, style=bold, color=blue];
m3_253 -> m3_60  [key=2, style=dotted];
m3_253 -> m3_254  [key=0, style=solid];
m3_80 -> m3_61  [key=0, style=bold, color=blue];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_56  [key=2, style=dotted];
m3_232 -> m3_57  [key=2, style=dotted];
m3_232 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_232 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_232 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_232 -> m3_237  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_167  [key=2, style=dotted];
m3_233 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_233 -> m3_233  [key=3, color=darkorchid, style=bold, label="Local variable string orig"];
m3_233 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_234 -> m3_232  [key=0, style=bold, color=blue];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_237  [key=0, style=solid];
m3_556 -> m3_557  [key=0, style=solid];
m3_557 -> m3_558  [key=0, style=solid];
m3_557 -> m3_25  [key=2, style=dotted];
m3_557 -> m3_10  [key=2, style=dotted];
m3_557 -> m3_16  [key=2, style=dotted];
m3_557 -> m3_56  [key=2, style=dotted];
m3_557 -> m3_57  [key=2, style=dotted];
m3_557 -> m3_559  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_560  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_562  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_563  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_565  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_566  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_568  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_569  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_561  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_564  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_567  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_557 -> m3_570  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_558 -> m3_559  [key=0, style=solid];
m3_558 -> m3_6  [key=2, style=dotted];
m3_558 -> m3_58  [key=2, style=dotted];
m3_558 -> m3_59  [key=2, style=dotted];
m3_559 -> m3_556  [key=0, style=bold, color=blue];
m3_559 -> m3_60  [key=2, style=dotted];
m3_559 -> m3_560  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_10  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_93  [key=0, style=bold, color=blue];
m3_96 -> m3_60  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_109  [key=2, style=dotted];
m3_97 -> m3_60  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_109  [key=2, style=dotted];
m3_97 -> m3_100  [key=2, style=dotted];
m3_98 -> m3_60  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_109  [key=2, style=dotted];
m3_98 -> m3_101  [key=2, style=dotted];
m3_99 -> m3_60  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_109  [key=2, style=dotted];
m3_99 -> m3_96  [key=0, style=bold, color=blue];
m3_100 -> m3_60  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_109  [key=2, style=dotted];
m3_102 -> m3_60  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_109  [key=2, style=dotted];
m3_103 -> m3_60  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_109  [key=2, style=dotted];
m3_103 -> m3_100  [key=2, style=dotted];
m3_104 -> m3_60  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_109  [key=2, style=dotted];
m3_104 -> m3_6  [key=2, style=dotted];
m3_105 -> m3_60  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_109  [key=2, style=dotted];
m3_105 -> m3_102  [key=0, style=bold, color=blue];
m3_106 -> m3_60  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_109  [key=2, style=dotted];
m3_107 -> m3_60  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_109  [key=2, style=dotted];
m3_107 -> m3_110  [key=2, style=dotted];
m3_108 -> m3_95  [key=0, style=bold, color=blue];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_101  [key=2, style=dotted];
m3_532 -> m3_533  [key=0, style=solid];
m3_532 -> m3_6  [key=2, style=dotted];
m3_171 -> m3_60  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_480 -> m3_481  [key=0, style=solid];
m3_480 -> m3_490  [key=2, style=dotted];
m3_480 -> m3_448  [key=2, style=dotted];
m3_349 -> m3_350  [key=0, style=solid];
m3_349 -> m3_25  [key=2, style=dotted];
m3_349 -> m3_351  [key=1, style=dashed, color=darkseagreen4, label=year2000Utc];
m3_349 -> m3_353  [key=1, style=dashed, color=darkseagreen4, label=year2000Utc];
m3_349 -> m3_357  [key=1, style=dashed, color=darkseagreen4, label=year2000Utc];
m3_349 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label=year2000Utc];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_84 -> m3_58  [key=2, style=dotted];
m3_84 -> m3_59  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_58  [key=2, style=dotted];
m3_85 -> m3_59  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_88  [key=2, style=dotted];
m3_86 -> m3_58  [key=2, style=dotted];
m3_86 -> m3_59  [key=2, style=dotted];
m3_87 -> m3_84  [key=0, style=bold, color=blue];
m3_87 -> m3_60  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_459 -> m3_58  [key=2, style=dotted];
m3_459 -> m3_59  [key=2, style=dotted];
m3_459 -> m3_460  [key=0, style=solid];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_315  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_271  [key=2, style=dotted];
m3_256 -> m3_6  [key=2, style=dotted];
m3_479 -> m3_480  [key=0, style=solid];
m3_479 -> m3_489  [key=2, style=dotted];
m3_479 -> m3_481  [key=1, style=dashed, color=darkseagreen4, label=date];
m3_533 -> m3_534  [key=0, style=solid];
m3_533 -> m3_10  [key=2, style=dotted];
m3_533 -> m3_549  [key=2, style=dotted];
m3_533 -> m3_552  [key=2, style=dotted];
m3_533 -> m3_535  [key=1, style=dashed, color=darkseagreen4, label=taskVersion];
m3_309 -> m3_310  [key=0, style=solid];
m3_309 -> m3_415  [key=2, style=dotted];
m3_309 -> m3_6  [key=2, style=dotted];
m3_544 -> m3_57  [key=2, style=dotted];
m3_544 -> m3_545  [key=0, style=solid];
m3_509 -> m3_60  [key=2, style=dotted];
m3_509 -> m3_510  [key=0, style=solid];
m3_228 -> m3_60  [key=2, style=dotted];
m3_228 -> m3_229  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_60  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_167  [key=2, style=dotted];
m3_165 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_165 -> m3_58  [key=2, style=dotted];
m3_166 -> m3_164  [key=0, style=bold, color=blue];
m3_166 -> m3_60  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_560 -> m3_561  [key=0, style=solid];
m3_560 -> m3_60  [key=2, style=dotted];
m3_561 -> m3_562  [key=0, style=solid];
m3_561 -> m3_576  [key=2, style=dotted];
m3_561 -> m3_565  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_561 -> m3_567  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_561 -> m3_570  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_561 -> m3_572  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_561 -> m3_58  [key=2, style=dotted];
m3_561 -> m3_59  [key=2, style=dotted];
m3_562 -> m3_563  [key=0, style=solid];
m3_562 -> m3_564  [key=1, style=dashed, color=darkseagreen4, label=depth];
m3_562 -> m3_569  [key=1, style=dashed, color=darkseagreen4, label=depth];
m3_562 -> m3_562  [key=3, color=darkorchid, style=bold, label="Local variable int depth"];
m3_562 -> m3_60  [key=2, style=dotted];
m3_565 -> m3_566  [key=0, style=solid];
m3_565 -> m3_577  [key=2, style=dotted];
m3_565 -> m3_60  [key=2, style=dotted];
m3_567 -> m3_568  [key=0, style=solid];
m3_567 -> m3_577  [key=2, style=dotted];
m3_567 -> m3_58  [key=2, style=dotted];
m3_567 -> m3_59  [key=2, style=dotted];
m3_570 -> m3_571  [key=0, style=solid];
m3_570 -> m3_577  [key=2, style=dotted];
m3_570 -> m3_58  [key=2, style=dotted];
m3_570 -> m3_570  [key=3, color=darkorchid, style=bold, label="Local variable int depth"];
m3_570 -> m3_335  [key=2, style=dotted];
m3_572 -> m3_573  [key=0, style=solid];
m3_572 -> m3_578  [key=2, style=dotted];
m3_572 -> m3_574  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_56  [key=2, style=dotted];
m3_572 -> m3_57  [key=2, style=dotted];
m3_572 -> m3_575  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_577  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_580  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_581  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_583  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_584  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_576  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_579  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_582  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_572 -> m3_585  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_563 -> m3_564  [key=0, style=solid];
m3_563 -> m3_566  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_563 -> m3_299  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_563 -> m3_60  [key=2, style=dotted];
m3_564 -> m3_565  [key=0, style=solid];
m3_564 -> m3_567  [key=0, style=solid];
m3_564 -> m3_58  [key=2, style=dotted];
m3_564 -> m3_59  [key=2, style=dotted];
m3_569 -> m3_570  [key=0, style=solid];
m3_569 -> m3_572  [key=0, style=solid];
m3_569 -> m3_299  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m3_569 -> m3_60  [key=2, style=dotted];
m3_566 -> m3_564  [key=0, style=solid];
m3_566 -> m3_566  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_566 -> m3_60  [key=2, style=dotted];
m3_566 -> m3_567  [key=0, style=solid];
m3_568 -> m3_569  [key=0, style=solid];
m3_568 -> m3_571  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_568 -> m3_60  [key=2, style=dotted];
m3_571 -> m3_569  [key=0, style=solid];
m3_571 -> m3_571  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_571 -> m3_572  [key=0, style=solid];
m3_573 -> m3_574  [key=0, style=solid];
m3_573 -> m3_56  [key=2, style=dotted];
m3_573 -> m3_58  [key=2, style=dotted];
m3_573 -> m3_59  [key=2, style=dotted];
m3_574 -> m3_575  [key=0, style=solid];
m3_574 -> m3_507  [key=2, style=dotted];
m3_574 -> m3_508  [key=2, style=dotted];
m3_574 -> m3_579  [key=2, style=dotted];
m3_574 -> m3_60  [key=2, style=dotted];
m3_575 -> m3_560  [key=0, style=bold, color=blue];
m3_575 -> m3_60  [key=2, style=dotted];
m3_575 -> m3_576  [key=0, style=solid];
m3_55 -> m3_0  [key=0, style=bold, color=blue];
m3_545 -> m3_56  [key=2, style=dotted];
m3_545 -> m3_546  [key=0, style=solid];
m3_545 -> m3_551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_545 -> m3_547  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_545 -> m3_549  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_310  [key=2, style=dotted];
m3_184 -> m3_60  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_60  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_178  [key=2, style=dotted];
m3_174 -> m3_60  [key=2, style=dotted];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_179  [key=2, style=dotted];
m3_175 -> m3_58  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_6  [key=2, style=dotted];
m3_176 -> m3_60  [key=2, style=dotted];
m3_177 -> m3_173  [key=0, style=bold, color=blue];
m3_177 -> m3_60  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_77 -> m3_58  [key=2, style=dotted];
m3_77 -> m3_59  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_60  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_229 -> m3_220  [key=0, style=bold, color=blue];
m3_81 -> m3_82  [key=0, style=solid];
m3_89 -> m3_60  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_91 -> m3_60  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_89  [key=0, style=bold, color=blue];
m3_83 -> m3_56  [key=2, style=dotted];
m3_83 -> m3_57  [key=2, style=dotted];
m3_83 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_83 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_83 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_83 -> m3_81  [key=0, style=bold, color=blue];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_93  [key=2, style=dotted];
m3_88 -> m3_90  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_94  [key=2, style=dotted];
m3_90 -> m3_92  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_10  [key=2, style=dotted];
m3_92 -> m3_81  [key=0, style=bold, color=blue];
m3_10 -> m3_60  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_421 -> m3_58  [key=2, style=dotted];
m3_421 -> m3_59  [key=2, style=dotted];
m3_421 -> m3_422  [key=0, style=solid];
m3_416 -> m3_60  [key=2, style=dotted];
m3_416 -> m3_417  [key=0, style=solid];
m3_555 -> m3_556  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_110  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_101  [key=2, style=dotted];
m3_118 -> m3_115  [key=0, style=bold, color=blue];
m3_118 -> m3_119  [key=0, style=solid];
m3_179 -> m3_58  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_478 -> m3_393  [key=0, style=bold, color=blue];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_416  [key=2, style=dotted];
m3_307 -> m3_417  [key=2, style=dotted];
m3_307 -> m3_312  [key=1, style=dashed, color=darkseagreen4, label=localToUtcDate];
m3_254 -> m3_241  [key=0, style=bold, color=blue];
m3_61 -> m3_62  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_51  [key=2, style=dotted];
m3_63 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_56  [key=2, style=dotted];
m3_63 -> m3_57  [key=2, style=dotted];
m3_63 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_63 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_52  [key=2, style=dotted];
m3_64 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_64 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_64 -> m3_58  [key=2, style=dotted];
m3_64 -> m3_59  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_54  [key=2, style=dotted];
m3_66 -> m3_58  [key=2, style=dotted];
m3_66 -> m3_59  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_54  [key=2, style=dotted];
m3_70 -> m3_58  [key=2, style=dotted];
m3_70 -> m3_59  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_54  [key=2, style=dotted];
m3_74 -> m3_58  [key=2, style=dotted];
m3_74 -> m3_59  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_10  [key=2, style=dotted];
m3_65 -> m3_77  [key=2, style=dotted];
m3_65 -> m3_78  [key=2, style=dotted];
m3_65 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_65 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_65 -> m3_60  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_55  [key=2, style=dotted];
m3_67 -> m3_6  [key=2, style=dotted];
m3_67 -> m3_60  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_79  [key=2, style=dotted];
m3_69 -> m3_60  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_52  [key=2, style=dotted];
m3_68 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_68 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_68 -> m3_58  [key=2, style=dotted];
m3_68 -> m3_59  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_55  [key=2, style=dotted];
m3_71 -> m3_6  [key=2, style=dotted];
m3_71 -> m3_60  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_52  [key=2, style=dotted];
m3_72 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_72 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_72 -> m3_58  [key=2, style=dotted];
m3_72 -> m3_59  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_10  [key=2, style=dotted];
m3_73 -> m3_80  [key=2, style=dotted];
m3_73 -> m3_60  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_55  [key=2, style=dotted];
m3_75 -> m3_6  [key=2, style=dotted];
m3_75 -> m3_60  [key=2, style=dotted];
m3_76 -> m3_61  [key=0, style=bold, color=blue];
m3_76 -> m3_60  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_172 -> m3_60  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_335 -> m3_336  [key=0, style=solid];
m3_335 -> m3_418  [key=2, style=dotted];
m3_335 -> m3_415  [key=2, style=dotted];
m3_335 -> m3_6  [key=2, style=dotted];
m3_451 -> m3_479  [key=0, style=solid];
m3_451 -> m3_480  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m3_451 -> m3_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m3_451 -> m3_482  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_451 -> m3_484  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_451 -> m3_414  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_451 -> m3_60  [key=2, style=dotted];
m3_451 -> m3_452  [key=0, style=solid];
m3_481 -> m3_482  [key=0, style=solid];
m3_481 -> m3_491  [key=2, style=dotted];
m3_481 -> m3_485  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m3_482 -> m3_483  [key=0, style=solid];
m3_482 -> m3_488  [key=0, style=solid];
m3_482 -> m3_6  [key=2, style=dotted];
m3_484 -> m3_485  [key=0, style=solid];
m3_484 -> m3_477  [key=2, style=dotted];
m3_484 -> m3_486  [key=1, style=dashed, color=darkseagreen4, label=valueTicks];
m3_484 -> m3_58  [key=2, style=dotted];
m3_484 -> m3_59  [key=2, style=dotted];
m3_485 -> m3_486  [key=0, style=solid];
m3_485 -> m3_477  [key=2, style=dotted];
m3_485 -> m3_487  [key=1, style=dashed, color=darkseagreen4, label=parsedTicks];
m3_485 -> m3_60  [key=2, style=dotted];
m3_483 -> m3_484  [key=0, style=solid];
m3_483 -> m3_56  [key=2, style=dotted];
m3_483 -> m3_485  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_483 -> m3_486  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_483 -> m3_487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_483 -> m3_117  [key=2, style=dotted];
m3_483 -> m3_479  [key=2, style=dotted];
m3_483 -> m3_480  [key=2, style=dotted];
m3_486 -> m3_487  [key=0, style=solid];
m3_486 -> m3_486  [key=1, style=dashed, color=darkseagreen4, label=valueTicks];
m3_486 -> m3_60  [key=2, style=dotted];
m3_487 -> m3_488  [key=0, style=solid];
m3_487 -> m3_6  [key=2, style=dotted];
m3_487 -> m3_58  [key=2, style=dotted];
m3_487 -> m3_335  [key=2, style=dotted];
m3_488 -> m3_451  [key=0, style=bold, color=blue];
m3_488 -> m3_481  [key=0, style=bold, color=blue];
m3_449 -> m3_60  [key=2, style=dotted];
m3_449 -> m3_450  [key=0, style=solid];
m3_450 -> m3_461  [key=0, style=solid];
m3_450 -> m3_462  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_450 -> m3_463  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_450 -> m3_464  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_450 -> m3_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.DateFormatHandling"];
m3_450 -> m3_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.DateTimeZoneHandling"];
m3_450 -> m3_468  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_450 -> m3_470  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_450 -> m3_414  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_450 -> m3_299  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling"];
m3_450 -> m3_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling"];
m3_450 -> m3_212  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling"];
m3_450 -> m3_429  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling"];
m3_450 -> m3_58  [key=2, style=dotted];
m3_450 -> m3_59  [key=2, style=dotted];
m3_450 -> m3_451  [key=0, style=solid];
m3_461 -> m3_462  [key=0, style=solid];
m3_461 -> m3_296  [key=3, color=darkorchid, style=bold, label="Local variable string date"];
m3_461 -> m3_58  [key=2, style=dotted];
m3_461 -> m3_59  [key=2, style=dotted];
m3_462 -> m3_463  [key=0, style=solid];
m3_462 -> m3_464  [key=0, style=solid];
m3_462 -> m3_60  [key=2, style=dotted];
m3_463 -> m3_465  [key=0, style=solid];
m3_463 -> m3_229  [key=2, style=dotted];
m3_463 -> m3_467  [key=1, style=dashed, color=darkseagreen4, label=date];
m3_463 -> m3_474  [key=1, style=dashed, color=darkseagreen4, label=date];
m3_463 -> m3_58  [key=2, style=dotted];
m3_463 -> m3_59  [key=2, style=dotted];
m3_463 -> m3_464  [key=0, style=solid];
m3_464 -> m3_465  [key=0, style=solid];
m3_464 -> m3_231  [key=2, style=dotted];
m3_464 -> m3_467  [key=1, style=dashed, color=darkseagreen4, label=date];
m3_464 -> m3_474  [key=1, style=dashed, color=darkseagreen4, label=date];
m3_464 -> m3_60  [key=2, style=dotted];
m3_465 -> m3_466  [key=0, style=solid];
m3_465 -> m3_476  [key=2, style=dotted];
m3_465 -> m3_448  [key=2, style=dotted];
m3_465 -> m3_58  [key=2, style=dotted];
m3_465 -> m3_59  [key=2, style=dotted];
m3_466 -> m3_467  [key=0, style=solid];
m3_466 -> m3_474  [key=0, style=solid];
m3_466 -> m3_60  [key=2, style=dotted];
m3_468 -> m3_469  [key=0, style=solid];
m3_468 -> m3_474  [key=0, style=solid];
m3_468 -> m3_6  [key=2, style=dotted];
m3_468 -> m3_60  [key=2, style=dotted];
m3_470 -> m3_471  [key=0, style=solid];
m3_470 -> m3_477  [key=2, style=dotted];
m3_470 -> m3_472  [key=1, style=dashed, color=darkseagreen4, label=valueTicks];
m3_470 -> m3_60  [key=2, style=dotted];
m3_467 -> m3_468  [key=0, style=solid];
m3_467 -> m3_110  [key=2, style=dotted];
m3_467 -> m3_471  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m3_467 -> m3_58  [key=2, style=dotted];
m3_467 -> m3_59  [key=2, style=dotted];
m3_474 -> m3_475  [key=0, style=solid];
m3_474 -> m3_478  [key=2, style=dotted];
m3_474 -> m3_58  [key=2, style=dotted];
m3_474 -> m3_59  [key=2, style=dotted];
m3_471 -> m3_472  [key=0, style=solid];
m3_471 -> m3_477  [key=2, style=dotted];
m3_471 -> m3_473  [key=1, style=dashed, color=darkseagreen4, label=parsedTicks];
m3_471 -> m3_58  [key=2, style=dotted];
m3_471 -> m3_59  [key=2, style=dotted];
m3_469 -> m3_470  [key=0, style=solid];
m3_469 -> m3_58  [key=2, style=dotted];
m3_469 -> m3_59  [key=2, style=dotted];
m3_472 -> m3_473  [key=0, style=solid];
m3_472 -> m3_472  [key=1, style=dashed, color=darkseagreen4, label=valueTicks];
m3_472 -> m3_60  [key=2, style=dotted];
m3_472 -> m3_409  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_473 -> m3_474  [key=0, style=solid];
m3_473 -> m3_6  [key=2, style=dotted];
m3_473 -> m3_60  [key=2, style=dotted];
m3_475 -> m3_450  [key=0, style=bold, color=blue];
m3_475 -> m3_60  [key=2, style=dotted];
m3_475 -> m3_476  [key=0, style=solid];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_172  [key=2, style=dotted];
m3_220 -> m3_6  [key=2, style=dotted];
m3_225 -> m3_58  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_227 -> m3_58  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_185  [key=0, style=bold, color=blue];
m3_222 -> m3_56  [key=2, style=dotted];
m3_222 -> m3_57  [key=2, style=dotted];
m3_222 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_222 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_222 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_172  [key=2, style=dotted];
m3_222 -> m3_6  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_227  [key=0, style=solid];
m3_224 -> m3_172  [key=2, style=dotted];
m3_224 -> m3_6  [key=2, style=dotted];
m3_226 -> m3_224  [key=0, style=solid];
m3_226 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_172  [key=2, style=dotted];
m3_226 -> m3_6  [key=2, style=dotted];
m3_221 -> m3_222  [key=0, style=solid];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_454 -> m3_60  [key=2, style=dotted];
m3_454 -> m3_455  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_154  [key=2, style=dotted];
m3_127 -> m3_60  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_154  [key=2, style=dotted];
m3_129 -> m3_60  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_154  [key=2, style=dotted];
m3_130 -> m3_60  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_6  [key=2, style=dotted];
m3_131 -> m3_60  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_154  [key=2, style=dotted];
m3_133 -> m3_60  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_154  [key=2, style=dotted];
m3_134 -> m3_60  [key=2, style=dotted];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_6  [key=2, style=dotted];
m3_135 -> m3_60  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_154  [key=2, style=dotted];
m3_137 -> m3_60  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_154  [key=2, style=dotted];
m3_138 -> m3_60  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_6  [key=2, style=dotted];
m3_139 -> m3_60  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label=data];
m3_139 -> m3_139  [key=3, color=darkorchid, style=bold, label="Local variable string data"];
m3_140 -> m3_60  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_140 -> m3_140  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m3_141 -> m3_60  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_154  [key=2, style=dotted];
m3_143 -> m3_60  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_154  [key=2, style=dotted];
m3_144 -> m3_60  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_6  [key=2, style=dotted];
m3_145 -> m3_60  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_154  [key=2, style=dotted];
m3_147 -> m3_60  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_154  [key=2, style=dotted];
m3_148 -> m3_60  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_6  [key=2, style=dotted];
m3_149 -> m3_60  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_154  [key=2, style=dotted];
m3_151 -> m3_60  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_154  [key=2, style=dotted];
m3_152 -> m3_60  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_6  [key=2, style=dotted];
m3_153 -> m3_60  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_119  [key=0, style=bold, color=blue];
m3_154 -> m3_60  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_156 -> m3_60  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_157 -> m3_60  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_154  [key=2, style=dotted];
m3_158 -> m3_60  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_6  [key=2, style=dotted];
m3_159 -> m3_60  [key=2, style=dotted];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_154  [key=2, style=dotted];
m3_161 -> m3_60  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_154  [key=2, style=dotted];
m3_162 -> m3_60  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_6  [key=2, style=dotted];
m3_163 -> m3_60  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_155  [key=0, style=bold, color=blue];
m3_167 -> m3_60  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_168 -> m3_60  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_169 -> m3_60  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_171  [key=2, style=dotted];
m3_169 -> m3_172  [key=2, style=dotted];
m3_180 -> m3_60  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_60  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_184  [key=2, style=dotted];
m3_182 -> m3_60  [key=2, style=dotted];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_6  [key=2, style=dotted];
m3_185 -> m3_60  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_186 -> m3_60  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_188 -> m3_60  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_172  [key=2, style=dotted];
m3_188 -> m3_6  [key=2, style=dotted];
m3_189 -> m3_60  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_190 -> m3_60  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_172  [key=2, style=dotted];
m3_190 -> m3_6  [key=2, style=dotted];
m3_192 -> m3_60  [key=2, style=dotted];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_172  [key=2, style=dotted];
m3_192 -> m3_6  [key=2, style=dotted];
m3_193 -> m3_60  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_194 -> m3_60  [key=2, style=dotted];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_172  [key=2, style=dotted];
m3_194 -> m3_6  [key=2, style=dotted];
m3_196 -> m3_60  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_172  [key=2, style=dotted];
m3_196 -> m3_6  [key=2, style=dotted];
m3_197 -> m3_60  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_198 -> m3_60  [key=2, style=dotted];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_172  [key=2, style=dotted];
m3_198 -> m3_6  [key=2, style=dotted];
m3_200 -> m3_60  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_172  [key=2, style=dotted];
m3_200 -> m3_6  [key=2, style=dotted];
m3_201 -> m3_60  [key=2, style=dotted];
m3_201 -> m3_202  [key=0, style=solid];
m3_202 -> m3_60  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_172  [key=2, style=dotted];
m3_202 -> m3_6  [key=2, style=dotted];
m3_204 -> m3_60  [key=2, style=dotted];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_172  [key=2, style=dotted];
m3_204 -> m3_6  [key=2, style=dotted];
m3_205 -> m3_60  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_206 -> m3_60  [key=2, style=dotted];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_172  [key=2, style=dotted];
m3_206 -> m3_6  [key=2, style=dotted];
m3_208 -> m3_60  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_172  [key=2, style=dotted];
m3_208 -> m3_6  [key=2, style=dotted];
m3_209 -> m3_60  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_228  [key=2, style=dotted];
m3_210 -> m3_60  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_172  [key=2, style=dotted];
m3_210 -> m3_6  [key=2, style=dotted];
m3_212 -> m3_60  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_229  [key=2, style=dotted];
m3_212 -> m3_6  [key=2, style=dotted];
m3_213 -> m3_60  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_230  [key=2, style=dotted];
m3_214 -> m3_60  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_172  [key=2, style=dotted];
m3_214 -> m3_6  [key=2, style=dotted];
m3_216 -> m3_60  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_231  [key=2, style=dotted];
m3_216 -> m3_6  [key=2, style=dotted];
m3_217 -> m3_60  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_218 -> m3_60  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_172  [key=2, style=dotted];
m3_218 -> m3_6  [key=2, style=dotted];
m3_128 -> m3_58  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_6  [key=2, style=dotted];
m3_132 -> m3_58  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_6  [key=2, style=dotted];
m3_136 -> m3_58  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_6  [key=2, style=dotted];
m3_142 -> m3_58  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_6  [key=2, style=dotted];
m3_146 -> m3_58  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_6  [key=2, style=dotted];
m3_150 -> m3_58  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_6  [key=2, style=dotted];
m3_155 -> m3_58  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_160 -> m3_58  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_6  [key=2, style=dotted];
m3_170 -> m3_58  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_168  [key=0, style=bold, color=blue];
m3_183 -> m3_58  [key=2, style=dotted];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_180  [key=0, style=bold, color=blue];
m3_187 -> m3_58  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_191 -> m3_58  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_195 -> m3_58  [key=2, style=dotted];
m3_195 -> m3_196  [key=0, style=solid];
m3_199 -> m3_58  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_203 -> m3_58  [key=2, style=dotted];
m3_203 -> m3_204  [key=0, style=solid];
m3_207 -> m3_58  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_211 -> m3_58  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_228  [key=2, style=dotted];
m3_215 -> m3_58  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_230  [key=2, style=dotted];
m3_126 -> m3_56  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_161  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_162  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_172  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_174  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_176  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_177  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_178  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_180  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_182  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_188  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_190  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_192  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_194  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_196  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_197  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_198  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_201  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_205  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_208  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_210  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_214  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_218  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_175  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_179  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_191  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_195  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_199  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_203  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_211  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_126 -> m3_6  [key=2, style=dotted];
m3_125 -> m3_57  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_154  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_6  [key=2, style=dotted];
m3_219 -> m3_123  [key=0, style=bold, color=blue];
m3_219 -> m3_220  [key=0, style=solid];
m3_579 -> m3_58  [key=2, style=dotted];
m3_579 -> m3_59  [key=2, style=dotted];
m3_579 -> m3_580  [key=0, style=solid];
m3_489 -> m3_494  [key=0, style=solid];
m3_489 -> m3_496  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_489 -> m3_451  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m3_489 -> m3_490  [key=0, style=solid];
m3_494 -> m3_495  [key=0, style=solid];
m3_494 -> m3_52  [key=2, style=dotted];
m3_494 -> m3_498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_56  [key=2, style=dotted];
m3_494 -> m3_57  [key=2, style=dotted];
m3_494 -> m3_497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_500  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_501  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_504  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_507  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_509  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_510  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_502  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_508  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_494 -> m3_511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_496 -> m3_497  [key=0, style=solid];
m3_496 -> m3_501  [key=2, style=dotted];
m3_496 -> m3_58  [key=2, style=dotted];
m3_495 -> m3_496  [key=0, style=solid];
m3_495 -> m3_500  [key=2, style=dotted];
m3_495 -> m3_497  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_495 -> m3_58  [key=2, style=dotted];
m3_498 -> m3_499  [key=0, style=solid];
m3_498 -> m3_55  [key=2, style=dotted];
m3_498 -> m3_60  [key=2, style=dotted];
m3_497 -> m3_498  [key=0, style=solid];
m3_497 -> m3_502  [key=2, style=dotted];
m3_497 -> m3_60  [key=2, style=dotted];
m3_497 -> m3_472  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m3_499 -> m3_489  [key=0, style=bold, color=blue];
m3_499 -> m3_58  [key=2, style=dotted];
m3_499 -> m3_500  [key=0, style=solid];
m3_393 -> m3_394  [key=0, style=solid];
m3_393 -> m3_6  [key=2, style=dotted];
m3_397 -> m3_60  [key=2, style=dotted];
m3_397 -> m3_398  [key=0, style=solid];
m3_397 -> m3_6  [key=2, style=dotted];
m3_398 -> m3_60  [key=2, style=dotted];
m3_398 -> m3_399  [key=0, style=solid];
m3_398 -> m3_422  [key=2, style=dotted];
m3_398 -> m3_423  [key=2, style=dotted];
m3_398 -> m3_414  [key=2, style=dotted];
m3_398 -> m3_400  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_399 -> m3_60  [key=2, style=dotted];
m3_399 -> m3_400  [key=0, style=solid];
m3_399 -> m3_6  [key=2, style=dotted];
m3_401 -> m3_60  [key=2, style=dotted];
m3_401 -> m3_402  [key=0, style=solid];
m3_401 -> m3_446  [key=3, color=darkorchid, style=bold, label="Property variable string IsoDateLocal"];
m3_401 -> m3_230  [key=2, style=dotted];
m3_401 -> m3_414  [key=2, style=dotted];
m3_401 -> m3_403  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_402 -> m3_60  [key=2, style=dotted];
m3_402 -> m3_403  [key=0, style=solid];
m3_402 -> m3_446  [key=3, color=darkorchid, style=bold, label="Property variable string IsoDateUnspecified"];
m3_402 -> m3_6  [key=2, style=dotted];
m3_404 -> m3_60  [key=2, style=dotted];
m3_404 -> m3_405  [key=0, style=solid];
m3_404 -> m3_446  [key=3, color=darkorchid, style=bold, label="Property variable string MsDateRoundtrip"];
m3_404 -> m3_414  [key=2, style=dotted];
m3_404 -> m3_406  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_405 -> m3_60  [key=2, style=dotted];
m3_405 -> m3_406  [key=0, style=solid];
m3_405 -> m3_446  [key=3, color=darkorchid, style=bold, label="Property variable string MsDateLocal"];
m3_405 -> m3_6  [key=2, style=dotted];
m3_407 -> m3_60  [key=2, style=dotted];
m3_407 -> m3_408  [key=0, style=solid];
m3_407 -> m3_414  [key=2, style=dotted];
m3_407 -> m3_409  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_408 -> m3_60  [key=2, style=dotted];
m3_408 -> m3_409  [key=0, style=solid];
m3_408 -> m3_6  [key=2, style=dotted];
m3_409 -> m3_60  [key=2, style=dotted];
m3_409 -> m3_340  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_409 -> m3_342  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_358  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_409 -> m3_360  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_382  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_410  [key=0, style=solid];
m3_409 -> m3_326  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_336  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_351  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_375  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_389  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_394  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_409 -> m3_324  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_409 -> m3_350  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_409 -> m3_412  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult TestDateTime"];
m3_409 -> m3_6  [key=2, style=dotted];
m3_411 -> m3_60  [key=2, style=dotted];
m3_411 -> m3_412  [key=0, style=solid];
m3_411 -> m3_6  [key=2, style=dotted];
m3_412 -> m3_60  [key=2, style=dotted];
m3_412 -> m3_413  [key=0, style=solid];
m3_412 -> m3_6  [key=2, style=dotted];
m3_414 -> m3_60  [key=2, style=dotted];
m3_414 -> m3_415  [key=0, style=solid];
m3_414 -> m3_424  [key=0, style=solid];
m3_414 -> m3_426  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_427  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_428  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_429  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_430  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_431  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_432  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_433  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_434  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_435  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_436  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_437  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_438  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_439  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_442  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_414 -> m3_297  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_308  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_319  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_330  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_340  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_351  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_362  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_371  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_380  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_389  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_392  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_395  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_398  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_401  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_404  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_407  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_410  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_414 -> m3_306  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_414 -> m3_317  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_414 -> m3_328  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_414 -> m3_339  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_414 -> m3_349  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_414 -> m3_360  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_414 -> m3_425  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult TestDateTime"];
m3_415 -> m3_60  [key=2, style=dotted];
m3_415 -> m3_416  [key=0, style=solid];
m3_418 -> m3_60  [key=2, style=dotted];
m3_418 -> m3_419  [key=0, style=solid];
m3_419 -> m3_60  [key=2, style=dotted];
m3_419 -> m3_420  [key=0, style=solid];
m3_422 -> m3_60  [key=2, style=dotted];
m3_422 -> m3_423  [key=0, style=solid];
m3_423 -> m3_60  [key=2, style=dotted];
m3_423 -> m3_424  [key=0, style=solid];
m3_424 -> m3_60  [key=2, style=dotted];
m3_424 -> m3_425  [key=0, style=solid];
m3_424 -> m3_448  [key=2, style=dotted];
m3_426 -> m3_60  [key=2, style=dotted];
m3_426 -> m3_427  [key=0, style=solid];
m3_426 -> m3_450  [key=2, style=dotted];
m3_427 -> m3_60  [key=2, style=dotted];
m3_427 -> m3_428  [key=0, style=solid];
m3_427 -> m3_431  [key=0, style=solid];
m3_428 -> m3_60  [key=2, style=dotted];
m3_428 -> m3_429  [key=0, style=solid];
m3_428 -> m3_450  [key=2, style=dotted];
m3_430 -> m3_60  [key=2, style=dotted];
m3_430 -> m3_431  [key=0, style=solid];
m3_430 -> m3_450  [key=2, style=dotted];
m3_431 -> m3_60  [key=2, style=dotted];
m3_431 -> m3_432  [key=0, style=solid];
m3_431 -> m3_450  [key=2, style=dotted];
m3_433 -> m3_60  [key=2, style=dotted];
m3_433 -> m3_434  [key=0, style=solid];
m3_433 -> m3_450  [key=2, style=dotted];
m3_434 -> m3_60  [key=2, style=dotted];
m3_434 -> m3_435  [key=0, style=solid];
m3_434 -> m3_450  [key=2, style=dotted];
m3_435 -> m3_60  [key=2, style=dotted];
m3_435 -> m3_436  [key=0, style=solid];
m3_435 -> m3_450  [key=2, style=dotted];
m3_437 -> m3_60  [key=2, style=dotted];
m3_437 -> m3_438  [key=0, style=solid];
m3_437 -> m3_439  [key=0, style=solid];
m3_439 -> m3_60  [key=2, style=dotted];
m3_439 -> m3_440  [key=0, style=solid];
m3_439 -> m3_452  [key=2, style=dotted];
m3_439 -> m3_453  [key=2, style=dotted];
m3_440 -> m3_60  [key=2, style=dotted];
m3_440 -> m3_441  [key=0, style=solid];
m3_440 -> m3_454  [key=2, style=dotted];
m3_440 -> m3_442  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_440 -> m3_443  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_442 -> m3_60  [key=2, style=dotted];
m3_442 -> m3_443  [key=0, style=solid];
m3_442 -> m3_456  [key=2, style=dotted];
m3_443 -> m3_60  [key=2, style=dotted];
m3_443 -> m3_444  [key=0, style=solid];
m3_443 -> m3_457  [key=2, style=dotted];
m3_443 -> m3_458  [key=2, style=dotted];
m3_443 -> m3_459  [key=2, style=dotted];
m3_445 -> m3_60  [key=2, style=dotted];
m3_445 -> m3_446  [key=0, style=solid];
m3_445 -> m3_460  [key=2, style=dotted];
m3_446 -> m3_60  [key=2, style=dotted];
m3_446 -> m3_409  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m3_446 -> m3_447  [key=0, style=solid];
m3_446 -> m3_227  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling"];
m3_446 -> m3_242  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling"];
m3_448 -> m3_60  [key=2, style=dotted];
m3_448 -> m3_449  [key=0, style=solid];
m3_453 -> m3_60  [key=2, style=dotted];
m3_453 -> m3_454  [key=0, style=solid];
m3_456 -> m3_60  [key=2, style=dotted];
m3_456 -> m3_457  [key=0, style=solid];
m3_458 -> m3_60  [key=2, style=dotted];
m3_458 -> m3_459  [key=0, style=solid];
m3_460 -> m3_60  [key=2, style=dotted];
m3_460 -> m3_461  [key=0, style=solid];
m3_476 -> m3_60  [key=2, style=dotted];
m3_476 -> m3_477  [key=0, style=solid];
m3_396 -> m3_58  [key=2, style=dotted];
m3_396 -> m3_59  [key=2, style=dotted];
m3_396 -> m3_397  [key=0, style=solid];
m3_396 -> m3_6  [key=2, style=dotted];
m3_400 -> m3_58  [key=2, style=dotted];
m3_400 -> m3_59  [key=2, style=dotted];
m3_400 -> m3_401  [key=0, style=solid];
m3_400 -> m3_446  [key=3, color=darkorchid, style=bold, label="Property variable string IsoDateRoundtrip"];
m3_400 -> m3_6  [key=2, style=dotted];
m3_403 -> m3_58  [key=2, style=dotted];
m3_403 -> m3_59  [key=2, style=dotted];
m3_403 -> m3_404  [key=0, style=solid];
m3_403 -> m3_6  [key=2, style=dotted];
m3_406 -> m3_58  [key=2, style=dotted];
m3_406 -> m3_59  [key=2, style=dotted];
m3_406 -> m3_407  [key=0, style=solid];
m3_406 -> m3_446  [key=3, color=darkorchid, style=bold, label="Property variable string MsDateUtc"];
m3_406 -> m3_6  [key=2, style=dotted];
m3_410 -> m3_58  [key=2, style=dotted];
m3_410 -> m3_59  [key=2, style=dotted];
m3_410 -> m3_411  [key=0, style=solid];
m3_410 -> m3_414  [key=2, style=dotted];
m3_410 -> m3_412  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_413 -> m3_58  [key=2, style=dotted];
m3_413 -> m3_59  [key=2, style=dotted];
m3_413 -> m3_414  [key=0, style=solid];
m3_413 -> m3_295  [key=0, style=bold, color=blue];
m3_417 -> m3_58  [key=2, style=dotted];
m3_417 -> m3_59  [key=2, style=dotted];
m3_417 -> m3_418  [key=0, style=solid];
m3_425 -> m3_58  [key=2, style=dotted];
m3_425 -> m3_59  [key=2, style=dotted];
m3_425 -> m3_426  [key=0, style=solid];
m3_425 -> m3_449  [key=2, style=dotted];
m3_425 -> m3_428  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_425 -> m3_429  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_425 -> m3_430  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_425 -> m3_431  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_425 -> m3_433  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_425 -> m3_434  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_425 -> m3_435  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_425 -> m3_446  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_429 -> m3_58  [key=2, style=dotted];
m3_429 -> m3_59  [key=2, style=dotted];
m3_429 -> m3_430  [key=0, style=solid];
m3_429 -> m3_450  [key=2, style=dotted];
m3_432 -> m3_58  [key=2, style=dotted];
m3_432 -> m3_59  [key=2, style=dotted];
m3_432 -> m3_433  [key=0, style=solid];
m3_432 -> m3_436  [key=0, style=solid];
m3_436 -> m3_58  [key=2, style=dotted];
m3_436 -> m3_59  [key=2, style=dotted];
m3_436 -> m3_437  [key=0, style=solid];
m3_436 -> m3_27  [key=2, style=dotted];
m3_436 -> m3_451  [key=2, style=dotted];
m3_438 -> m3_58  [key=2, style=dotted];
m3_438 -> m3_59  [key=2, style=dotted];
m3_438 -> m3_439  [key=0, style=solid];
m3_438 -> m3_440  [key=0, style=solid];
m3_438 -> m3_452  [key=2, style=dotted];
m3_438 -> m3_453  [key=2, style=dotted];
m3_441 -> m3_58  [key=2, style=dotted];
m3_441 -> m3_59  [key=2, style=dotted];
m3_441 -> m3_442  [key=0, style=solid];
m3_441 -> m3_455  [key=2, style=dotted];
m3_444 -> m3_58  [key=2, style=dotted];
m3_444 -> m3_59  [key=2, style=dotted];
m3_444 -> m3_445  [key=0, style=solid];
m3_444 -> m3_448  [key=2, style=dotted];
m3_447 -> m3_58  [key=2, style=dotted];
m3_447 -> m3_59  [key=2, style=dotted];
m3_447 -> m3_448  [key=0, style=solid];
m3_447 -> m3_414  [key=0, style=bold, color=blue];
m3_452 -> m3_58  [key=2, style=dotted];
m3_452 -> m3_59  [key=2, style=dotted];
m3_452 -> m3_453  [key=0, style=solid];
m3_455 -> m3_58  [key=2, style=dotted];
m3_455 -> m3_59  [key=2, style=dotted];
m3_455 -> m3_456  [key=0, style=solid];
m3_477 -> m3_58  [key=2, style=dotted];
m3_477 -> m3_478  [key=0, style=solid];
m3_477 -> m3_335  [key=2, style=dotted];
m3_477 -> m3_492  [key=0, style=solid];
m3_477 -> m3_450  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m3_477 -> m3_467  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m3_477 -> m3_451  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m3_477 -> m3_481  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m3_395 -> m3_56  [key=2, style=dotted];
m3_395 -> m3_397  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_395 -> m3_398  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_399  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_401  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_402  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_404  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_405  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_407  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_408  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_409  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_411  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_414  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_415  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_416  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_418  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_420  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_424  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_426  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_427  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_428  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_430  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_431  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_433  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_434  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_435  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_439  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_442  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_443  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_445  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_446  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_448  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_449  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_451  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_453  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_454  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_456  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_458  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_460  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_462  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_464  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_466  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_468  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_470  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_396  [key=0, style=solid];
m3_395 -> m3_400  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_403  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_406  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_410  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_417  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_421  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_425  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_432  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_436  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_438  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_441  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_444  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_450  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_452  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_455  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_457  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_459  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_463  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_465  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_467  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_469  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_471  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_395 -> m3_117  [key=2, style=dotted];
m3_395 -> m3_479  [key=2, style=dotted];
m3_395 -> m3_480  [key=2, style=dotted];
m3_394 -> m3_395  [key=0, style=solid];
m3_394 -> m3_6  [key=2, style=dotted];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_315  [key=2, style=dotted];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_296  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult result"];
m3_296 -> m3_414  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult result"];
m3_296 -> m3_314  [key=2, style=dotted];
m3_297 -> m3_298  [key=0, style=solid];
m3_297 -> m3_414  [key=2, style=dotted];
m3_297 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_297 -> m3_300  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_297 -> m3_301  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_297 -> m3_302  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_297 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_297 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_297 -> m3_305  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_297 -> m3_578  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_6  [key=2, style=dotted];
m3_298 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_298 -> m3_317  [key=2, style=dotted];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_415  [key=2, style=dotted];
m3_299 -> m3_6  [key=2, style=dotted];
m3_299 -> m3_56  [key=2, style=dotted];
m3_299 -> m3_57  [key=2, style=dotted];
m3_299 -> m3_318  [key=2, style=dotted];
m3_299 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label=jsonObject];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_6  [key=2, style=dotted];
m3_300 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_300 -> m3_300  [key=3, color=darkorchid, style=bold, label="Local variable string v"];
m3_300 -> m3_576  [key=2, style=dotted];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_6  [key=2, style=dotted];
m3_301 -> m3_307  [key=2, style=dotted];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_6  [key=2, style=dotted];
m3_302 -> m3_500  [key=2, style=dotted];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_415  [key=2, style=dotted];
m3_303 -> m3_6  [key=2, style=dotted];
m3_303 -> m3_319  [key=2, style=dotted];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_6  [key=2, style=dotted];
m3_304 -> m3_60  [key=2, style=dotted];
m3_304 -> m3_578  [key=2, style=dotted];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_6  [key=2, style=dotted];
m3_305 -> m3_269  [key=0, style=bold, color=blue];
m3_306 -> m3_307  [key=0, style=solid];
m3_306 -> m3_25  [key=2, style=dotted];
m3_306 -> m3_308  [key=1, style=dashed, color=darkseagreen4, label=year2000local];
m3_306 -> m3_309  [key=1, style=dashed, color=darkseagreen4, label=year2000local];
m3_306 -> m3_310  [key=1, style=dashed, color=darkseagreen4, label=year2000local];
m3_306 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label=year2000local];
m3_306 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label=year2000local];
m3_306 -> m3_315  [key=1, style=dashed, color=darkseagreen4, label=year2000local];
m3_306 -> m3_316  [key=1, style=dashed, color=darkseagreen4, label=year2000local];
m3_308 -> m3_309  [key=0, style=solid];
m3_308 -> m3_414  [key=2, style=dotted];
m3_308 -> m3_310  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_308 -> m3_311  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_308 -> m3_312  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_308 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_308 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_308 -> m3_315  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_308 -> m3_316  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_313 -> m3_314  [key=0, style=solid];
m3_313 -> m3_418  [key=2, style=dotted];
m3_313 -> m3_415  [key=2, style=dotted];
m3_313 -> m3_6  [key=2, style=dotted];
m3_314 -> m3_315  [key=0, style=solid];
m3_314 -> m3_418  [key=2, style=dotted];
m3_314 -> m3_415  [key=2, style=dotted];
m3_314 -> m3_6  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_315 -> m3_418  [key=2, style=dotted];
m3_315 -> m3_415  [key=2, style=dotted];
m3_315 -> m3_6  [key=2, style=dotted];
m3_316 -> m3_317  [key=0, style=solid];
m3_316 -> m3_418  [key=2, style=dotted];
m3_316 -> m3_6  [key=2, style=dotted];
m3_312 -> m3_313  [key=0, style=solid];
m3_312 -> m3_6  [key=2, style=dotted];
m3_311 -> m3_312  [key=0, style=solid];
m3_311 -> m3_6  [key=2, style=dotted];
m3_317 -> m3_318  [key=0, style=solid];
m3_317 -> m3_419  [key=2, style=dotted];
m3_317 -> m3_319  [key=1, style=dashed, color=darkseagreen4, label=millisecondsLocal];
m3_317 -> m3_320  [key=1, style=dashed, color=darkseagreen4, label=millisecondsLocal];
m3_317 -> m3_321  [key=1, style=dashed, color=darkseagreen4, label=millisecondsLocal];
m3_317 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label=millisecondsLocal];
m3_317 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=millisecondsLocal];
m3_317 -> m3_326  [key=1, style=dashed, color=darkseagreen4, label=millisecondsLocal];
m3_317 -> m3_327  [key=1, style=dashed, color=darkseagreen4, label=millisecondsLocal];
m3_318 -> m3_319  [key=0, style=solid];
m3_318 -> m3_416  [key=2, style=dotted];
m3_318 -> m3_417  [key=2, style=dotted];
m3_318 -> m3_323  [key=1, style=dashed, color=darkseagreen4, label=localToUtcDate];
m3_319 -> m3_320  [key=0, style=solid];
m3_319 -> m3_414  [key=2, style=dotted];
m3_319 -> m3_321  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_319 -> m3_322  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_319 -> m3_323  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_319 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_319 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_319 -> m3_326  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_319 -> m3_327  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_320 -> m3_321  [key=0, style=solid];
m3_320 -> m3_415  [key=2, style=dotted];
m3_320 -> m3_6  [key=2, style=dotted];
m3_321 -> m3_322  [key=0, style=solid];
m3_321 -> m3_415  [key=2, style=dotted];
m3_321 -> m3_6  [key=2, style=dotted];
m3_324 -> m3_325  [key=0, style=solid];
m3_324 -> m3_418  [key=2, style=dotted];
m3_324 -> m3_415  [key=2, style=dotted];
m3_324 -> m3_6  [key=2, style=dotted];
m3_324 -> m3_58  [key=2, style=dotted];
m3_325 -> m3_326  [key=0, style=solid];
m3_325 -> m3_418  [key=2, style=dotted];
m3_325 -> m3_415  [key=2, style=dotted];
m3_325 -> m3_6  [key=2, style=dotted];
m3_325 -> m3_60  [key=2, style=dotted];
m3_326 -> m3_327  [key=0, style=solid];
m3_326 -> m3_418  [key=2, style=dotted];
m3_326 -> m3_415  [key=2, style=dotted];
m3_326 -> m3_6  [key=2, style=dotted];
m3_326 -> m3_58  [key=2, style=dotted];
m3_327 -> m3_328  [key=0, style=solid];
m3_327 -> m3_418  [key=2, style=dotted];
m3_327 -> m3_6  [key=2, style=dotted];
m3_327 -> m3_60  [key=2, style=dotted];
m3_323 -> m3_324  [key=0, style=solid];
m3_323 -> m3_6  [key=2, style=dotted];
m3_323 -> m3_56  [key=2, style=dotted];
m3_323 -> m3_57  [key=2, style=dotted];
m3_323 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_327  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_328  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_329  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_333  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_330  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_323 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_6  [key=2, style=dotted];
m3_322 -> m3_255  [key=2, style=dotted];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_228  [key=2, style=dotted];
m3_328 -> m3_330  [key=1, style=dashed, color=darkseagreen4, label=ticksLocal];
m3_328 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label=ticksLocal];
m3_328 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=ticksLocal];
m3_328 -> m3_335  [key=1, style=dashed, color=darkseagreen4, label=ticksLocal];
m3_328 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label=ticksLocal];
m3_328 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label=ticksLocal];
m3_328 -> m3_338  [key=1, style=dashed, color=darkseagreen4, label=ticksLocal];
m3_328 -> m3_60  [key=2, style=dotted];
m3_329 -> m3_330  [key=0, style=solid];
m3_329 -> m3_416  [key=2, style=dotted];
m3_329 -> m3_417  [key=2, style=dotted];
m3_329 -> m3_334  [key=1, style=dashed, color=darkseagreen4, label=localToUtcDate];
m3_329 -> m3_60  [key=2, style=dotted];
m3_329 -> m3_93  [key=2, style=dotted];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_414  [key=2, style=dotted];
m3_330 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_330 -> m3_333  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_330 -> m3_334  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_330 -> m3_335  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_330 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_330 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_330 -> m3_338  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_330 -> m3_58  [key=2, style=dotted];
m3_330 -> m3_59  [key=2, style=dotted];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_415  [key=2, style=dotted];
m3_331 -> m3_6  [key=2, style=dotted];
m3_331 -> m3_60  [key=2, style=dotted];
m3_332 -> m3_333  [key=0, style=solid];
m3_332 -> m3_415  [key=2, style=dotted];
m3_332 -> m3_6  [key=2, style=dotted];
m3_332 -> m3_58  [key=2, style=dotted];
m3_332 -> m3_335  [key=2, style=dotted];
m3_336 -> m3_337  [key=0, style=solid];
m3_336 -> m3_418  [key=2, style=dotted];
m3_336 -> m3_415  [key=2, style=dotted];
m3_336 -> m3_6  [key=2, style=dotted];
m3_337 -> m3_338  [key=0, style=solid];
m3_337 -> m3_418  [key=2, style=dotted];
m3_337 -> m3_415  [key=2, style=dotted];
m3_337 -> m3_6  [key=2, style=dotted];
m3_338 -> m3_339  [key=0, style=solid];
m3_338 -> m3_418  [key=2, style=dotted];
m3_338 -> m3_6  [key=2, style=dotted];
m3_338 -> m3_56  [key=2, style=dotted];
m3_338 -> m3_57  [key=2, style=dotted];
m3_338 -> m3_340  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_338 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_338 -> m3_344  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_338 -> m3_346  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_338 -> m3_341  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_338 -> m3_343  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_338 -> m3_345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_334 -> m3_335  [key=0, style=solid];
m3_334 -> m3_6  [key=2, style=dotted];
m3_334 -> m3_320  [key=0, style=bold, color=blue];
m3_333 -> m3_334  [key=0, style=solid];
m3_333 -> m3_6  [key=2, style=dotted];
m3_333 -> m3_60  [key=2, style=dotted];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_25  [key=2, style=dotted];
m3_339 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label=year2000Unspecified];
m3_339 -> m3_345  [key=1, style=dashed, color=darkseagreen4, label=year2000Unspecified];
m3_339 -> m3_346  [key=1, style=dashed, color=darkseagreen4, label=year2000Unspecified];
m3_339 -> m3_347  [key=1, style=dashed, color=darkseagreen4, label=year2000Unspecified];
m3_339 -> m3_348  [key=1, style=dashed, color=darkseagreen4, label=year2000Unspecified];
m3_339 -> m3_58  [key=2, style=dotted];
m3_340 -> m3_341  [key=0, style=solid];
m3_340 -> m3_414  [key=2, style=dotted];
m3_340 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_340 -> m3_343  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_340 -> m3_344  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_340 -> m3_345  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_340 -> m3_346  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_340 -> m3_347  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_340 -> m3_348  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_340 -> m3_60  [key=2, style=dotted];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_415  [key=2, style=dotted];
m3_342 -> m3_6  [key=2, style=dotted];
m3_342 -> m3_60  [key=2, style=dotted];
m3_345 -> m3_346  [key=0, style=solid];
m3_345 -> m3_418  [key=2, style=dotted];
m3_345 -> m3_415  [key=2, style=dotted];
m3_345 -> m3_6  [key=2, style=dotted];
m3_345 -> m3_58  [key=2, style=dotted];
m3_346 -> m3_347  [key=0, style=solid];
m3_346 -> m3_418  [key=2, style=dotted];
m3_346 -> m3_415  [key=2, style=dotted];
m3_346 -> m3_6  [key=2, style=dotted];
m3_346 -> m3_60  [key=2, style=dotted];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_418  [key=2, style=dotted];
m3_347 -> m3_415  [key=2, style=dotted];
m3_347 -> m3_6  [key=2, style=dotted];
m3_347 -> m3_336  [key=0, style=bold, color=blue];
m3_348 -> m3_349  [key=0, style=solid];
m3_348 -> m3_420  [key=2, style=dotted];
m3_348 -> m3_418  [key=2, style=dotted];
m3_348 -> m3_6  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_6  [key=2, style=dotted];
m3_341 -> m3_58  [key=2, style=dotted];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_6  [key=2, style=dotted];
m3_343 -> m3_58  [key=2, style=dotted];
m3_344 -> m3_345  [key=0, style=solid];
m3_344 -> m3_6  [key=2, style=dotted];
m3_344 -> m3_60  [key=2, style=dotted];
m3_344 -> m3_348  [key=2, style=dotted];
m3_344 -> m3_349  [key=2, style=dotted];
m3_350 -> m3_351  [key=0, style=solid];
m3_350 -> m3_420  [key=2, style=dotted];
m3_350 -> m3_417  [key=2, style=dotted];
m3_350 -> m3_353  [key=1, style=dashed, color=darkseagreen4, label=utcTolocalDate];
m3_351 -> m3_352  [key=0, style=solid];
m3_351 -> m3_414  [key=2, style=dotted];
m3_351 -> m3_353  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_354  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_355  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_356  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_357  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_56  [key=2, style=dotted];
m3_351 -> m3_57  [key=2, style=dotted];
m3_351 -> m3_360  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_362  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_364  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_370  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_372  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_374  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_376  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_378  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_380  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_384  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_386  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_388  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_361  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_363  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_365  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_367  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_371  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_373  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_375  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_379  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_381  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_383  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_385  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_387  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_351 -> m3_391  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_353 -> m3_354  [key=0, style=solid];
m3_353 -> m3_415  [key=2, style=dotted];
m3_353 -> m3_6  [key=2, style=dotted];
m3_353 -> m3_58  [key=2, style=dotted];
m3_353 -> m3_59  [key=2, style=dotted];
m3_357 -> m3_358  [key=0, style=solid];
m3_357 -> m3_415  [key=2, style=dotted];
m3_357 -> m3_6  [key=2, style=dotted];
m3_357 -> m3_58  [key=2, style=dotted];
m3_357 -> m3_59  [key=2, style=dotted];
m3_358 -> m3_359  [key=0, style=solid];
m3_358 -> m3_421  [key=2, style=dotted];
m3_358 -> m3_418  [key=2, style=dotted];
m3_358 -> m3_415  [key=2, style=dotted];
m3_358 -> m3_6  [key=2, style=dotted];
m3_358 -> m3_60  [key=2, style=dotted];
m3_352 -> m3_353  [key=0, style=solid];
m3_352 -> m3_6  [key=2, style=dotted];
m3_354 -> m3_355  [key=0, style=solid];
m3_354 -> m3_6  [key=2, style=dotted];
m3_354 -> m3_60  [key=2, style=dotted];
m3_355 -> m3_356  [key=0, style=solid];
m3_355 -> m3_6  [key=2, style=dotted];
m3_355 -> m3_58  [key=2, style=dotted];
m3_355 -> m3_59  [key=2, style=dotted];
m3_356 -> m3_357  [key=0, style=solid];
m3_356 -> m3_6  [key=2, style=dotted];
m3_356 -> m3_60  [key=2, style=dotted];
m3_359 -> m3_360  [key=0, style=solid];
m3_359 -> m3_6  [key=2, style=dotted];
m3_359 -> m3_58  [key=2, style=dotted];
m3_359 -> m3_59  [key=2, style=dotted];
m3_360 -> m3_361  [key=0, style=solid];
m3_360 -> m3_228  [key=2, style=dotted];
m3_360 -> m3_362  [key=1, style=dashed, color=darkseagreen4, label=unixEpoc];
m3_360 -> m3_364  [key=1, style=dashed, color=darkseagreen4, label=unixEpoc];
m3_360 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=unixEpoc];
m3_360 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label=unixEpoc];
m3_360 -> m3_60  [key=2, style=dotted];
m3_361 -> m3_362  [key=0, style=solid];
m3_361 -> m3_420  [key=2, style=dotted];
m3_361 -> m3_417  [key=2, style=dotted];
m3_361 -> m3_364  [key=1, style=dashed, color=darkseagreen4, label=utcTolocalDate];
m3_361 -> m3_58  [key=2, style=dotted];
m3_361 -> m3_59  [key=2, style=dotted];
m3_362 -> m3_363  [key=0, style=solid];
m3_362 -> m3_414  [key=2, style=dotted];
m3_362 -> m3_364  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_362 -> m3_365  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_362 -> m3_366  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_362 -> m3_367  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_362 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_362 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_362 -> m3_370  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_362 -> m3_60  [key=2, style=dotted];
m3_364 -> m3_365  [key=0, style=solid];
m3_364 -> m3_415  [key=2, style=dotted];
m3_364 -> m3_6  [key=2, style=dotted];
m3_364 -> m3_60  [key=2, style=dotted];
m3_368 -> m3_369  [key=0, style=solid];
m3_368 -> m3_415  [key=2, style=dotted];
m3_368 -> m3_6  [key=2, style=dotted];
m3_368 -> m3_60  [key=2, style=dotted];
m3_369 -> m3_370  [key=0, style=solid];
m3_369 -> m3_421  [key=2, style=dotted];
m3_369 -> m3_418  [key=2, style=dotted];
m3_369 -> m3_415  [key=2, style=dotted];
m3_369 -> m3_6  [key=2, style=dotted];
m3_369 -> m3_58  [key=2, style=dotted];
m3_369 -> m3_59  [key=2, style=dotted];
m3_363 -> m3_364  [key=0, style=solid];
m3_363 -> m3_6  [key=2, style=dotted];
m3_363 -> m3_58  [key=2, style=dotted];
m3_363 -> m3_59  [key=2, style=dotted];
m3_365 -> m3_366  [key=0, style=solid];
m3_365 -> m3_6  [key=2, style=dotted];
m3_365 -> m3_58  [key=2, style=dotted];
m3_365 -> m3_59  [key=2, style=dotted];
m3_366 -> m3_367  [key=0, style=solid];
m3_366 -> m3_6  [key=2, style=dotted];
m3_366 -> m3_60  [key=2, style=dotted];
m3_367 -> m3_368  [key=0, style=solid];
m3_367 -> m3_6  [key=2, style=dotted];
m3_367 -> m3_58  [key=2, style=dotted];
m3_367 -> m3_59  [key=2, style=dotted];
m3_370 -> m3_371  [key=0, style=solid];
m3_370 -> m3_6  [key=2, style=dotted];
m3_370 -> m3_60  [key=2, style=dotted];
m3_371 -> m3_372  [key=0, style=solid];
m3_371 -> m3_414  [key=2, style=dotted];
m3_371 -> m3_373  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_371 -> m3_374  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_371 -> m3_375  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_371 -> m3_376  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_371 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_371 -> m3_378  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_371 -> m3_379  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_371 -> m3_58  [key=2, style=dotted];
m3_371 -> m3_59  [key=2, style=dotted];
m3_372 -> m3_373  [key=0, style=solid];
m3_372 -> m3_6  [key=2, style=dotted];
m3_372 -> m3_60  [key=2, style=dotted];
m3_373 -> m3_374  [key=0, style=solid];
m3_373 -> m3_415  [key=2, style=dotted];
m3_373 -> m3_6  [key=2, style=dotted];
m3_373 -> m3_58  [key=2, style=dotted];
m3_373 -> m3_59  [key=2, style=dotted];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_6  [key=2, style=dotted];
m3_374 -> m3_60  [key=2, style=dotted];
m3_375 -> m3_376  [key=0, style=solid];
m3_375 -> m3_6  [key=2, style=dotted];
m3_375 -> m3_58  [key=2, style=dotted];
m3_375 -> m3_59  [key=2, style=dotted];
m3_376 -> m3_377  [key=0, style=solid];
m3_376 -> m3_6  [key=2, style=dotted];
m3_376 -> m3_60  [key=2, style=dotted];
m3_377 -> m3_378  [key=0, style=solid];
m3_377 -> m3_415  [key=2, style=dotted];
m3_377 -> m3_6  [key=2, style=dotted];
m3_377 -> m3_58  [key=2, style=dotted];
m3_377 -> m3_59  [key=2, style=dotted];
m3_378 -> m3_379  [key=0, style=solid];
m3_378 -> m3_6  [key=2, style=dotted];
m3_378 -> m3_60  [key=2, style=dotted];
m3_379 -> m3_380  [key=0, style=solid];
m3_379 -> m3_6  [key=2, style=dotted];
m3_379 -> m3_58  [key=2, style=dotted];
m3_379 -> m3_59  [key=2, style=dotted];
m3_380 -> m3_381  [key=0, style=solid];
m3_380 -> m3_414  [key=2, style=dotted];
m3_380 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_380 -> m3_383  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_380 -> m3_384  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_380 -> m3_385  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_380 -> m3_386  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_380 -> m3_387  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_380 -> m3_388  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_380 -> m3_60  [key=2, style=dotted];
m3_381 -> m3_382  [key=0, style=solid];
m3_381 -> m3_6  [key=2, style=dotted];
m3_381 -> m3_58  [key=2, style=dotted];
m3_381 -> m3_59  [key=2, style=dotted];
m3_382 -> m3_383  [key=0, style=solid];
m3_382 -> m3_415  [key=2, style=dotted];
m3_382 -> m3_6  [key=2, style=dotted];
m3_382 -> m3_60  [key=2, style=dotted];
m3_383 -> m3_384  [key=0, style=solid];
m3_383 -> m3_6  [key=2, style=dotted];
m3_383 -> m3_58  [key=2, style=dotted];
m3_383 -> m3_59  [key=2, style=dotted];
m3_384 -> m3_385  [key=0, style=solid];
m3_384 -> m3_6  [key=2, style=dotted];
m3_384 -> m3_60  [key=2, style=dotted];
m3_385 -> m3_386  [key=0, style=solid];
m3_385 -> m3_6  [key=2, style=dotted];
m3_385 -> m3_58  [key=2, style=dotted];
m3_385 -> m3_59  [key=2, style=dotted];
m3_386 -> m3_387  [key=0, style=solid];
m3_386 -> m3_415  [key=2, style=dotted];
m3_386 -> m3_6  [key=2, style=dotted];
m3_386 -> m3_60  [key=2, style=dotted];
m3_387 -> m3_388  [key=0, style=solid];
m3_387 -> m3_6  [key=2, style=dotted];
m3_387 -> m3_58  [key=2, style=dotted];
m3_387 -> m3_59  [key=2, style=dotted];
m3_388 -> m3_389  [key=0, style=solid];
m3_388 -> m3_6  [key=2, style=dotted];
m3_388 -> m3_60  [key=2, style=dotted];
m3_389 -> m3_390  [key=0, style=solid];
m3_389 -> m3_422  [key=2, style=dotted];
m3_389 -> m3_414  [key=2, style=dotted];
m3_389 -> m3_391  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_389 -> m3_58  [key=2, style=dotted];
m3_389 -> m3_59  [key=2, style=dotted];
m3_390 -> m3_391  [key=0, style=solid];
m3_390 -> m3_6  [key=2, style=dotted];
m3_390 -> m3_60  [key=2, style=dotted];
m3_391 -> m3_392  [key=0, style=solid];
m3_391 -> m3_6  [key=2, style=dotted];
m3_391 -> m3_58  [key=2, style=dotted];
m3_391 -> m3_335  [key=2, style=dotted];
m3_392 -> m3_393  [key=0, style=solid];
m3_392 -> m3_422  [key=2, style=dotted];
m3_392 -> m3_423  [key=2, style=dotted];
m3_392 -> m3_414  [key=2, style=dotted];
m3_392 -> m3_394  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_392 -> m3_350  [key=0, style=bold, color=blue];
m3_268 -> m3_269  [key=0, style=solid];
m3_268 -> m3_271  [key=2, style=dotted];
m3_268 -> m3_6  [key=2, style=dotted];
m3_550 -> m3_60  [key=2, style=dotted];
m3_550 -> m3_551  [key=0, style=solid];
m3_54 -> m3_60  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_507 -> m3_60  [key=2, style=dotted];
m3_507 -> m3_508  [key=0, style=solid];
m3_577 -> m3_60  [key=2, style=dotted];
m3_577 -> m3_578  [key=0, style=solid];
m3_578 -> m3_60  [key=2, style=dotted];
m3_578 -> m3_579  [key=0, style=solid];
m3_580 -> m3_60  [key=2, style=dotted];
m3_580 -> m3_581  [key=0, style=solid];
m3_580 -> m3_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_346  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_580 -> m3_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonConvertTest"];
m3_581 -> m3_60  [key=2, style=dotted];
m3_581 -> m3_582  [key=0, style=solid];
m3_583 -> m3_60  [key=2, style=dotted];
m3_583 -> m3_584  [key=0, style=solid];
m3_584 -> m3_60  [key=2, style=dotted];
m3_584 -> m3_585  [key=0, style=solid];
m3_582 -> m3_58  [key=2, style=dotted];
m3_582 -> m3_59  [key=2, style=dotted];
m3_582 -> m3_583  [key=0, style=solid];
m3_585 -> m3_58  [key=2, style=dotted];
m3_585 -> m3_586  [key=0, style=solid];
m3_585 -> m3_335  [key=2, style=dotted];
m3_586 -> m3_555  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_19  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_20  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_21  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_22  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_23  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_24  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_25  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_26  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_27  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_28  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_12 -> m3_56  [key=2, style=dotted];
m3_12 -> m3_57  [key=2, style=dotted];
m3_12 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_12 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_12 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_12 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_12 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_10  [key=2, style=dotted];
m3_13 -> m3_16  [key=2, style=dotted];
m3_13 -> m3_58  [key=2, style=dotted];
m3_13 -> m3_59  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_6  [key=2, style=dotted];
m3_14 -> m3_60  [key=2, style=dotted];
m3_15 -> m3_11  [key=0, style=bold, color=blue];
m3_15 -> m3_60  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_60  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_543 -> m3_544  [key=0, style=solid];
m3_543 -> m3_554  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_501 -> m3_60  [key=2, style=dotted];
m3_501 -> m3_502  [key=0, style=solid];
m3_542 -> m3_543  [key=0, style=solid];
m3_542 -> m3_314  [key=2, style=dotted];
m3_53 -> m3_60  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_491 -> m3_60  [key=2, style=dotted];
m3_491 -> m3_472  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m3_491 -> m3_492  [key=0, style=solid];
m3_491 -> m3_532  [key=2, style=dotted];
m3_491 -> m3_533  [key=2, style=dotted];
m3_491 -> m3_503  [key=0, style=solid];
m3_491 -> m3_505  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m3_491 -> m3_479  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m3_491 -> m3_451  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m3_492 -> m3_60  [key=2, style=dotted];
m3_492 -> m3_493  [key=0, style=solid];
m3_492 -> m3_534  [key=2, style=dotted];
m3_500 -> m3_60  [key=2, style=dotted];
m3_500 -> m3_501  [key=0, style=solid];
m3_503 -> m3_60  [key=2, style=dotted];
m3_503 -> m3_504  [key=0, style=solid];
m3_503 -> m3_507  [key=2, style=dotted];
m3_503 -> m3_508  [key=2, style=dotted];
m3_503 -> m3_505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_504 -> m3_60  [key=2, style=dotted];
m3_504 -> m3_505  [key=0, style=solid];
m3_504 -> m3_509  [key=2, style=dotted];
m3_506 -> m3_60  [key=2, style=dotted];
m3_506 -> m3_507  [key=0, style=solid];
m3_506 -> m3_491  [key=0, style=bold, color=blue];
m3_515 -> m3_60  [key=2, style=dotted];
m3_515 -> m3_516  [key=0, style=solid];
m3_515 -> m3_6  [key=2, style=dotted];
m3_516 -> m3_60  [key=2, style=dotted];
m3_516 -> m3_517  [key=0, style=solid];
m3_516 -> m3_544  [key=2, style=dotted];
m3_516 -> m3_518  [key=1, style=dashed, color=darkseagreen4, label=task];
m3_518 -> m3_60  [key=2, style=dotted];
m3_518 -> m3_519  [key=0, style=solid];
m3_518 -> m3_6  [key=2, style=dotted];
m3_519 -> m3_60  [key=2, style=dotted];
m3_519 -> m3_520  [key=0, style=solid];
m3_519 -> m3_10  [key=2, style=dotted];
m3_519 -> m3_545  [key=2, style=dotted];
m3_519 -> m3_521  [key=1, style=dashed, color=darkseagreen4, label=task];
m3_521 -> m3_60  [key=2, style=dotted];
m3_521 -> m3_522  [key=0, style=solid];
m3_521 -> m3_6  [key=2, style=dotted];
m3_522 -> m3_60  [key=2, style=dotted];
m3_522 -> m3_523  [key=0, style=solid];
m3_522 -> m3_546  [key=2, style=dotted];
m3_522 -> m3_524  [key=1, style=dashed, color=darkseagreen4, label=taskObject];
m3_524 -> m3_60  [key=2, style=dotted];
m3_524 -> m3_525  [key=0, style=solid];
m3_524 -> m3_547  [key=2, style=dotted];
m3_524 -> m3_548  [key=2, style=dotted];
m3_525 -> m3_60  [key=2, style=dotted];
m3_525 -> m3_526  [key=0, style=solid];
m3_525 -> m3_10  [key=2, style=dotted];
m3_525 -> m3_549  [key=2, style=dotted];
m3_525 -> m3_550  [key=2, style=dotted];
m3_525 -> m3_527  [key=1, style=dashed, color=darkseagreen4, label=taskVersionArray];
m3_527 -> m3_60  [key=2, style=dotted];
m3_527 -> m3_528  [key=0, style=solid];
m3_527 -> m3_529  [key=1, style=dashed, color=darkseagreen4, label=versionArray];
m3_528 -> m3_60  [key=2, style=dotted];
m3_528 -> m3_529  [key=0, style=solid];
m3_528 -> m3_6  [key=2, style=dotted];
m3_502 -> m3_58  [key=2, style=dotted];
m3_502 -> m3_503  [key=0, style=solid];
m3_505 -> m3_58  [key=2, style=dotted];
m3_505 -> m3_506  [key=0, style=solid];
m3_505 -> m3_510  [key=2, style=dotted];
m3_508 -> m3_58  [key=2, style=dotted];
m3_508 -> m3_509  [key=0, style=solid];
m3_511 -> m3_58  [key=2, style=dotted];
m3_511 -> m3_512  [key=0, style=solid];
m3_513 -> m3_58  [key=2, style=dotted];
m3_513 -> m3_514  [key=0, style=solid];
m3_513 -> m3_542  [key=2, style=dotted];
m3_513 -> m3_515  [key=1, style=dashed, color=darkseagreen4, label=task];
m3_529 -> m3_58  [key=2, style=dotted];
m3_529 -> m3_530  [key=0, style=solid];
m3_529 -> m3_6  [key=2, style=dotted];
m3_512 -> m3_56  [key=2, style=dotted];
m3_512 -> m3_57  [key=2, style=dotted];
m3_512 -> m3_515  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_516  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_518  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_527  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_528  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_513  [key=0, style=solid];
m3_512 -> m3_529  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_517  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_520  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_523  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_512 -> m3_296  [key=3, color=darkorchid, style=bold, label="Local variable System.Threading.Tasks.Task<string> task"];
m3_490 -> m3_491  [key=0, style=solid];
m3_490 -> m3_492  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_490 -> m3_531  [key=2, style=dotted];
m3_493 -> m3_494  [key=0, style=solid];
m3_493 -> m3_512  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_493 -> m3_477  [key=0, style=bold, color=blue];
m3_514 -> m3_515  [key=0, style=solid];
m3_514 -> m3_535  [key=2, style=dotted];
m3_514 -> m3_543  [key=2, style=dotted];
m3_517 -> m3_518  [key=0, style=solid];
m3_517 -> m3_535  [key=2, style=dotted];
m3_517 -> m3_543  [key=2, style=dotted];
m3_520 -> m3_521  [key=0, style=solid];
m3_520 -> m3_535  [key=2, style=dotted];
m3_520 -> m3_543  [key=2, style=dotted];
m3_523 -> m3_524  [key=0, style=solid];
m3_523 -> m3_535  [key=2, style=dotted];
m3_523 -> m3_543  [key=2, style=dotted];
m3_526 -> m3_527  [key=0, style=solid];
m3_526 -> m3_535  [key=2, style=dotted];
m3_526 -> m3_543  [key=2, style=dotted];
m3_530 -> m3_489  [key=0, style=bold, color=blue];
m3_530 -> m3_531  [key=0, style=solid];
m3_530 -> m3_551  [key=2, style=dotted];
m3_530 -> m3_532  [key=1, style=dashed, color=darkseagreen4, label=taskInt];
m3_531 -> m3_532  [key=0, style=solid];
m3_531 -> m3_543  [key=2, style=dotted];
m3_551 -> m3_58  [key=2, style=dotted];
m3_551 -> m3_59  [key=2, style=dotted];
m3_551 -> m3_552  [key=0, style=solid];
m3_257 -> m3_258  [key=0, style=solid];
m3_257 -> m3_271  [key=2, style=dotted];
m3_257 -> m3_6  [key=2, style=dotted];
m3_549 -> m3_550  [key=0, style=solid];
m3_549 -> m3_535  [key=2, style=dotted];
m3_60 -> m3_58  [key=0, style=bold, color=blue];
m3_6 -> m3_60  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid, color=green];
m3_31 -> m3_58  [key=2, style=dotted, color=green];
m3_31 -> m3_59  [key=2, style=dotted, color=green];
m3_32 -> m3_33  [key=0, style=solid, color=green];
m3_32 -> m3_60  [key=2, style=dotted, color=green];
m3_33 -> m3_34  [key=0, style=solid, color=green];
m3_33 -> m3_51  [key=2, style=dotted];
m3_33 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_33 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_33 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_33 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_33 -> m3_60  [key=2, style=dotted, color=green];
m3_34 -> m3_35  [key=0, style=solid, color=green];
m3_34 -> m3_52  [key=2, style=dotted];
m3_34 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_34 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_34 -> m3_60  [key=2, style=dotted, color=green];
m3_36 -> m3_37  [key=0, style=solid, color=green];
m3_36 -> m3_54  [key=2, style=dotted];
m3_36 -> m3_60  [key=2, style=dotted, color=green];
m3_40 -> m3_41  [key=0, style=solid, color=green];
m3_40 -> m3_54  [key=2, style=dotted];
m3_40 -> m3_60  [key=2, style=dotted, color=green];
m3_44 -> m3_45  [key=0, style=solid, color=green];
m3_44 -> m3_54  [key=2, style=dotted];
m3_44 -> m3_60  [key=2, style=dotted, color=green];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_54  [key=2, style=dotted];
m3_48 -> m3_60  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid, color=green];
m3_35 -> m3_53  [key=2, style=dotted];
m3_35 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_35 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_35 -> m3_58  [key=2, style=dotted, color=green];
m3_35 -> m3_59  [key=2, style=dotted, color=green];
m3_37 -> m3_38  [key=0, style=solid, color=green];
m3_37 -> m3_55  [key=2, style=dotted];
m3_37 -> m3_6  [key=2, style=dotted];
m3_37 -> m3_60  [key=2, style=dotted, color=green];
m3_39 -> m3_40  [key=0, style=solid, color=green];
m3_39 -> m3_58  [key=2, style=dotted, color=green];
m3_39 -> m3_59  [key=2, style=dotted, color=green];
m3_38 -> m3_39  [key=0, style=solid, color=green];
m3_38 -> m3_52  [key=2, style=dotted];
m3_38 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_38 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_38 -> m3_60  [key=2, style=dotted, color=green];
m3_41 -> m3_42  [key=0, style=solid, color=green];
m3_41 -> m3_55  [key=2, style=dotted];
m3_41 -> m3_6  [key=2, style=dotted];
m3_41 -> m3_60  [key=2, style=dotted, color=green];
m3_42 -> m3_43  [key=0, style=solid, color=green];
m3_42 -> m3_52  [key=2, style=dotted];
m3_42 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_42 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_42 -> m3_60  [key=2, style=dotted, color=green];
m3_43 -> m3_44  [key=0, style=solid, color=green];
m3_43 -> m3_56  [key=2, style=dotted];
m3_43 -> m3_58  [key=2, style=dotted, color=green];
m3_43 -> m3_59  [key=2, style=dotted, color=green];
m3_45 -> m3_46  [key=0, style=solid, color=green];
m3_45 -> m3_55  [key=2, style=dotted];
m3_45 -> m3_6  [key=2, style=dotted];
m3_45 -> m3_60  [key=2, style=dotted, color=green];
m3_46 -> m3_47  [key=0, style=solid, color=green];
m3_46 -> m3_52  [key=2, style=dotted];
m3_46 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_46 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_46 -> m3_60  [key=2, style=dotted, color=green];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_57  [key=2, style=dotted];
m3_47 -> m3_58  [key=2, style=dotted];
m3_47 -> m3_59  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_55  [key=2, style=dotted];
m3_49 -> m3_6  [key=2, style=dotted];
m3_49 -> m3_60  [key=2, style=dotted];
m3_50 -> m3_31  [key=0, style=bold, color=blue];
m3_50 -> m3_60  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_548 -> m3_60  [key=2, style=dotted];
m3_548 -> m3_549  [key=0, style=solid];
m3_231 -> m3_232  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_56  [key=2, style=dotted];
m3_120 -> m3_57  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_154  [key=2, style=dotted];
m3_121 -> m3_58  [key=2, style=dotted];
m3_121 -> m3_121  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_6  [key=2, style=dotted];
m3_122 -> m3_118  [key=0, style=bold, color=blue];
m3_109 -> m3_106  [key=0, style=bold, color=blue];
m3_109 -> m3_110  [key=0, style=solid];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_307  [key=2, style=dotted];
m3_595 -> m3_596  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_58  [key=2, style=dotted];
m3_7 -> m3_59  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=2, style=dotted];
m3_8 -> m3_60  [key=2, style=dotted];
m3_9 -> m3_7  [key=0, style=bold, color=blue];
m3_9 -> m3_60  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_58  [key=2, style=dotted];
m3_17 -> m3_59  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid, color=green];
m3_18 -> m3_10  [key=2, style=dotted];
m3_18 -> m3_60  [key=2, style=dotted];
m3_19 -> m3_17  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid, color=green];
m3_19 -> m3_60  [key=2, style=dotted, color=green];
m3_28 -> m3_29  [key=0, style=solid, color=green];
m3_28 -> m3_60  [key=2, style=dotted, color=green];
m3_29 -> m3_30  [key=0, style=solid, color=green];
m3_29 -> m3_10  [key=2, style=dotted];
m3_29 -> m3_27  [key=2, style=dotted];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid, color=green];
m3_30 -> m3_56  [key=2, style=dotted, color=green];
m3_30 -> m3_57  [key=2, style=dotted, color=green];
m3_30 -> m3_32  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_33  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_34  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_35  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_36  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_37  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_38  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_39  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_40  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_41  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_42  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_43  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_44  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_45  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_46  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_47  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_48  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_49  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_50  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_51  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_52  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_53  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_30 -> m3_54  [key=1, style=dashed, color=green, label=jsonTextReader];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_58  [key=2, style=dotted];
m3_235 -> m3_59  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_234  [key=0, style=solid];
m3_236 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_237 -> m3_238  [key=0, style=solid];
m3_237 -> m3_5  [key=2, style=dotted];
m3_237 -> m3_58  [key=2, style=dotted];
m3_237 -> m3_59  [key=2, style=dotted];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_241  [key=2, style=dotted];
m3_238 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label=serialized];
m3_238 -> m3_60  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_110  [key=2, style=dotted];
m3_239 -> m3_60  [key=2, style=dotted];
m3_240 -> m3_235  [key=0, style=bold, color=blue];
m3_240 -> m3_230  [key=0, style=bold, color=blue];
m3_596 -> m3_58  [key=2, style=dotted];
m3_596 -> m3_597  [key=0, style=solid];
m3_597 -> m3_595  [key=0, style=bold, color=blue];
m3_230 -> m3_231  [key=0, style=solid];
m3_547 -> m3_548  [key=0, style=solid];
m3_547 -> m3_535  [key=2, style=dotted];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_313  [key=2, style=dotted];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_290  [key=3, color=darkorchid, style=bold, label="Local variable string v"];
m3_290 -> m3_310  [key=2, style=dotted];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_294  [key=2, style=dotted];
m3_291 -> m3_314  [key=2, style=dotted];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_6  [key=2, style=dotted];
m3_292 -> m3_313  [key=2, style=dotted];
m3_293 -> m3_289  [key=0, style=bold, color=blue];
m3_293 -> m3_294  [key=0, style=solid];
m3_293 -> m3_310  [key=2, style=dotted];
m3_546 -> m3_58  [key=2, style=dotted];
m3_546 -> m3_59  [key=2, style=dotted];
m3_546 -> m3_547  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid, color=green];
m3_25 -> m3_58  [key=2, style=dotted, color=green];
m3_25 -> m3_59  [key=2, style=dotted, color=green];
m3_26 -> m3_27  [key=0, style=solid, color=green];
m3_26 -> m3_60  [key=2, style=dotted, color=green];
m3_51 -> m3_58  [key=2, style=dotted];
m3_51 -> m3_59  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_60  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_4 -> m3_60  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_60  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_3 -> m3_58  [key=2, style=dotted];
m3_3 -> m3_59  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_56  [key=2, style=dotted];
m3_2 -> m3_57  [key=2, style=dotted];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m3_1 -> m3_2  [key=0, style=solid];
m3_241 -> m3_242  [key=0, style=solid];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_56  [key=2, style=dotted];
m3_111 -> m3_117  [key=2, style=dotted];
m3_111 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_110  [key=2, style=dotted];
m3_112 -> m3_58  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_101  [key=2, style=dotted];
m3_114 -> m3_111  [key=0, style=bold, color=blue];
m3_114 -> m3_109  [key=0, style=bold, color=blue];
m3_535 -> m3_536  [key=0, style=solid];
m3_535 -> m3_6  [key=2, style=dotted];
m3_536 -> m3_537  [key=0, style=solid];
m3_536 -> m3_553  [key=2, style=dotted];
m3_536 -> m3_538  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_536 -> m3_540  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_537 -> m3_538  [key=0, style=solid];
m3_537 -> m3_543  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_537 -> m3_553  [key=2, style=dotted];
m3_538 -> m3_539  [key=0, style=solid];
m3_538 -> m3_10  [key=2, style=dotted];
m3_538 -> m3_51  [key=2, style=dotted];
m3_538 -> m3_554  [key=2, style=dotted];
m3_538 -> m3_555  [key=2, style=dotted];
m3_538 -> m3_542  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_538 -> m3_500  [key=2, style=dotted];
m3_538 -> m3_540  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_538 -> m3_541  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_540 -> m3_541  [key=0, style=solid];
m3_540 -> m3_6  [key=2, style=dotted];
m3_540 -> m3_310  [key=2, style=dotted];
m3_539 -> m3_540  [key=0, style=solid];
m3_539 -> m3_543  [key=2, style=dotted];
m3_539 -> m3_309  [key=2, style=dotted];
m3_541 -> m3_511  [key=0, style=bold, color=blue];
m3_541 -> m3_542  [key=0, style=solid];
m3_541 -> m3_310  [key=2, style=dotted];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_271  [key=2, style=dotted];
m3_258 -> m3_6  [key=2, style=dotted];
m3_265 -> m3_60  [key=2, style=dotted];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_271  [key=2, style=dotted];
m3_265 -> m3_6  [key=2, style=dotted];
m3_266 -> m3_60  [key=2, style=dotted];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_271  [key=2, style=dotted];
m3_266 -> m3_6  [key=2, style=dotted];
m3_263 -> m3_58  [key=2, style=dotted];
m3_263 -> m3_263  [key=0, style=solid];
m3_263 -> m3_264  [key=0, style=solid];
m3_263 -> m3_271  [key=2, style=dotted];
m3_263 -> m3_6  [key=2, style=dotted];
m3_261 -> m3_56  [key=2, style=dotted];
m3_261 -> m3_57  [key=2, style=dotted];
m3_261 -> m3_263  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_271  [key=2, style=dotted];
m3_261 -> m3_6  [key=2, style=dotted];
m3_260 -> m3_265  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_260 -> m3_266  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_260  [key=3, color=darkorchid, style=bold, label="Local variable string orig"];
m3_260 -> m3_256  [key=2, style=dotted];
m3_260 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label=arrayPool];
m3_260 -> m3_271  [key=2, style=dotted];
m3_260 -> m3_6  [key=2, style=dotted];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_268  [key=2, style=dotted];
m3_264 -> m3_271  [key=2, style=dotted];
m3_264 -> m3_6  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_271  [key=2, style=dotted];
m3_262 -> m3_6  [key=2, style=dotted];
m3_259 -> m3_261  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_271  [key=2, style=dotted];
m3_259 -> m3_6  [key=2, style=dotted];
m3_267 -> m3_258  [key=0, style=bold, color=blue];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_271  [key=2, style=dotted];
m3_267 -> m3_6  [key=2, style=dotted];
m3_79 -> m3_60  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_115  [key=2, style=dotted];
m3_110 -> m3_116  [key=2, style=dotted];
m3_255 -> m3_256  [key=0, style=solid];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_271  [key=2, style=dotted];
m3_269 -> m3_6  [key=2, style=dotted];
m3_270 -> m3_255  [key=0, style=bold, color=blue];
m3_270 -> m3_297  [key=1, style=dashed, color=darkseagreen4, label=sb];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_576  [key=2, style=dotted];
m3_552 -> m3_536  [key=0, style=bold, color=blue];
m3_587 -> m3_588  [key=0, style=solid];
m3_590 -> m3_58  [key=2, style=dotted];
m3_590 -> m3_59  [key=2, style=dotted];
m3_590 -> m3_591  [key=0, style=solid];
m3_591 -> m3_58  [key=2, style=dotted];
m3_591 -> m3_59  [key=2, style=dotted];
m3_591 -> m3_592  [key=0, style=solid];
m3_589 -> m3_56  [key=2, style=dotted];
m3_589 -> m3_57  [key=2, style=dotted];
m3_589 -> m3_590  [key=0, style=solid];
m3_589 -> m3_591  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_589 -> m3_596  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_589 -> m3_592  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_592 -> m3_593  [key=0, style=solid];
m3_592 -> m3_594  [key=2, style=dotted];
m3_592 -> m3_595  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_588 -> m3_589  [key=0, style=solid];
m3_593 -> m3_587  [key=0, style=bold, color=blue];
m3_598 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_598 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscAsyncTests"];
m3_599 -> m3_596  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_1458 -> m4_1459  [key=0, style=solid];
m4_1459 -> m4_1460  [key=0, style=solid];
m4_1459 -> m4_1461  [key=2, style=dotted];
m4_1460 -> m4_1458  [key=0, style=bold, color=blue];
m4_1925 -> m4_1926  [key=0, style=solid];
m4_1926 -> m4_1927  [key=0, style=solid];
m4_1926 -> m4_1935  [key=2, style=dotted];
m4_1926 -> m4_1930  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_1926 -> m4_1932  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_1927 -> m4_1928  [key=0, style=solid];
m4_1930 -> m4_1931  [key=0, style=solid];
m4_1932 -> m4_1933  [key=0, style=solid];
m4_1932 -> m4_24  [key=2, style=dotted];
m4_1928 -> m4_1929  [key=0, style=solid];
m4_1928 -> m4_1935  [key=2, style=dotted];
m4_1928 -> m4_1930  [key=1, style=dashed, color=darkseagreen4, label=mike];
m4_1928 -> m4_1931  [key=1, style=dashed, color=darkseagreen4, label=mike];
m4_1928 -> m4_1932  [key=1, style=dashed, color=darkseagreen4, label=mike];
m4_1929 -> m4_1930  [key=0, style=solid];
m4_1931 -> m4_1932  [key=0, style=solid];
m4_1933 -> m4_1934  [key=0, style=solid];
m4_1933 -> m4_137  [key=2, style=dotted];
m4_1934 -> m4_1925  [key=0, style=bold, color=blue];
m4_42 -> m4_23  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_950 -> m4_951  [key=0, style=solid];
m4_950 -> m4_952  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_950 -> m4_953  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_950 -> m4_954  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_951 -> m4_952  [key=0, style=solid];
m4_952 -> m4_953  [key=0, style=solid];
m4_953 -> m4_954  [key=0, style=solid];
m4_954 -> m4_955  [key=0, style=solid];
m4_955 -> m4_950  [key=0, style=bold, color=blue];
m4_573 -> m4_574  [key=0, style=solid];
m4_573 -> m4_573  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_443 -> m4_444  [key=0, style=solid];
m4_443 -> m4_415  [key=2, style=dotted];
m4_3575 -> m4_3576  [key=0, style=solid];
m4_3576 -> m4_3577  [key=0, style=solid];
m4_3576 -> m4_3116  [key=2, style=dotted];
m4_3577 -> m4_3575  [key=0, style=bold, color=blue];
m4_583 -> m4_584  [key=0, style=solid];
m4_583 -> m4_339  [key=2, style=dotted];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_108  [key=2, style=dotted];
m4_100 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=foo3];
m4_630 -> m4_622  [key=0, style=bold, color=blue];
m4_611 -> m4_89  [key=2, style=dotted];
m4_611 -> m4_612  [key=0, style=solid];
m4_611 -> m4_281  [key=2, style=dotted];
m4_1037 -> m4_1038  [key=0, style=solid];
m4_1038 -> m4_1039  [key=0, style=solid];
m4_1038 -> m4_1038  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1039 -> m4_1040  [key=0, style=solid];
m4_1039 -> m4_25  [key=2, style=dotted];
m4_1039 -> m4_1041  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_1039 -> m4_1042  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_1040 -> m4_1041  [key=0, style=solid];
m4_1040 -> m4_27  [key=2, style=dotted];
m4_1041 -> m4_1042  [key=0, style=solid];
m4_1041 -> m4_27  [key=2, style=dotted];
m4_1042 -> m4_1043  [key=0, style=solid];
m4_1042 -> m4_27  [key=2, style=dotted];
m4_1043 -> m4_1037  [key=0, style=bold, color=blue];
m4_472 -> m4_469  [key=0, style=bold, color=blue];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_183  [key=2, style=dotted];
m4_3664 -> m4_3665  [key=0, style=solid];
m4_3665 -> m4_3664  [key=0, style=bold, color=blue];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_77  [key=2, style=dotted];
m4_216 -> m4_174  [key=2, style=dotted];
m4_216 -> m4_217  [key=0, style=solid];
m4_1385 -> m4_1386  [key=0, style=solid];
m4_1386 -> m4_1387  [key=0, style=solid];
m4_1386 -> m4_1388  [key=0, style=solid];
m4_1387 -> m4_1386  [key=0, style=solid];
m4_1387 -> m4_418  [key=2, style=dotted];
m4_1387 -> m4_1387  [key=1, style=dashed, color=darkseagreen4, label=pair];
m4_1388 -> m4_1385  [key=0, style=bold, color=blue];
m4_1862 -> m4_1863  [key=0, style=solid];
m4_1863 -> m4_1864  [key=0, style=solid];
m4_1863 -> m4_321  [key=2, style=dotted];
m4_1863 -> m4_1865  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1864 -> m4_1862  [key=0, style=bold, color=blue];
m4_3117 -> m4_3118  [key=0, style=solid];
m4_3117 -> m4_3113  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m4_3118 -> m4_3119  [key=0, style=solid];
m4_3118 -> m4_3113  [key=2, style=dotted];
m4_3119 -> m4_3117  [key=0, style=bold, color=blue];
m4_191 -> m4_192  [key=0, style=solid];
m4_709 -> m4_710  [key=0, style=solid];
m4_709 -> m4_27  [key=2, style=dotted];
m4_711 -> m4_87  [key=2, style=dotted];
m4_711 -> m4_712  [key=0, style=solid];
m4_711 -> m4_714  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_710 -> m4_711  [key=0, style=solid];
m4_710 -> m4_710  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m4_710 -> m4_704  [key=0, style=bold, color=blue];
m4_712 -> m4_156  [key=2, style=dotted];
m4_712 -> m4_713  [key=0, style=solid];
m4_712 -> m4_717  [key=2, style=dotted];
m4_712 -> m4_718  [key=2, style=dotted];
m4_712 -> m4_714  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m4_714 -> m4_715  [key=0, style=solid];
m4_714 -> m4_183  [key=2, style=dotted];
m4_714 -> m4_51  [key=2, style=dotted];
m4_713 -> m4_714  [key=0, style=solid];
m4_713 -> m4_77  [key=2, style=dotted];
m4_715 -> m4_716  [key=0, style=solid];
m4_715 -> m4_184  [key=2, style=dotted];
m4_715 -> m4_27  [key=2, style=dotted];
m4_716 -> m4_709  [key=0, style=bold, color=blue];
m4_716 -> m4_711  [key=0, style=bold, color=blue];
m4_1762 -> m4_1763  [key=0, style=solid];
m4_1763 -> m4_1764  [key=0, style=solid];
m4_1763 -> m4_1759  [key=2, style=dotted];
m4_1763 -> m4_1765  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1763 -> m4_1766  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1764 -> m4_1765  [key=0, style=solid];
m4_1764 -> m4_339  [key=2, style=dotted];
m4_1765 -> m4_1766  [key=0, style=solid];
m4_1765 -> m4_339  [key=2, style=dotted];
m4_1766 -> m4_1767  [key=0, style=solid];
m4_1766 -> m4_24  [key=2, style=dotted];
m4_1767 -> m4_1768  [key=0, style=solid];
m4_1767 -> m4_25  [key=2, style=dotted];
m4_1767 -> m4_1769  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m4_1768 -> m4_1769  [key=0, style=solid];
m4_1768 -> m4_27  [key=2, style=dotted];
m4_1769 -> m4_1770  [key=0, style=solid];
m4_1769 -> m4_176  [key=2, style=dotted];
m4_1769 -> m4_27  [key=2, style=dotted];
m4_1770 -> m4_1762  [key=0, style=bold, color=blue];
m4_432 -> m4_433  [key=0, style=solid];
m4_432 -> m4_438  [key=2, style=dotted];
m4_653 -> m4_654  [key=0, style=solid];
m4_653 -> m4_292  [key=2, style=dotted];
m4_654 -> m4_655  [key=0, style=solid];
m4_654 -> m4_631  [key=2, style=dotted];
m4_654 -> m4_659  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_654 -> m4_660  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_654 -> m4_293  [key=2, style=dotted];
m4_655 -> m4_656  [key=0, style=solid];
m4_655 -> m4_632  [key=2, style=dotted];
m4_655 -> m4_643  [key=0, style=bold, color=blue];
m4_659 -> m4_660  [key=0, style=solid];
m4_659 -> m4_27  [key=2, style=dotted];
m4_660 -> m4_661  [key=0, style=solid];
m4_660 -> m4_27  [key=2, style=dotted];
m4_660 -> m4_660  [key=3, color=darkorchid, style=bold, label="Local variable string xaml"];
m4_656 -> m4_657  [key=0, style=solid];
m4_656 -> m4_394  [key=2, style=dotted];
m4_656 -> m4_395  [key=2, style=dotted];
m4_656 -> m4_658  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_657 -> m4_658  [key=0, style=solid];
m4_657 -> m4_27  [key=2, style=dotted];
m4_658 -> m4_659  [key=0, style=solid];
m4_658 -> m4_25  [key=2, style=dotted];
m4_658 -> m4_660  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_661 -> m4_653  [key=0, style=bold, color=blue];
m4_661 -> m4_87  [key=2, style=dotted];
m4_661 -> m4_662  [key=0, style=solid];
m4_661 -> m4_156  [key=2, style=dotted];
m4_661 -> m4_663  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_661 -> m4_664  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3381 -> m4_3382  [key=0, style=solid];
m4_3382 -> m4_3383  [key=0, style=solid];
m4_3382 -> m4_3021  [key=2, style=dotted];
m4_3383 -> m4_3384  [key=0, style=solid];
m4_3384 -> m4_3385  [key=0, style=solid];
m4_3384 -> m4_3  [key=2, style=dotted];
m4_3385 -> m4_3386  [key=0, style=solid];
m4_3385 -> m4_394  [key=2, style=dotted];
m4_3385 -> m4_395  [key=2, style=dotted];
m4_3386 -> m4_3387  [key=0, style=solid];
m4_3386 -> m4_27  [key=2, style=dotted];
m4_3387 -> m4_3381  [key=0, style=bold, color=blue];
m4_1120 -> m4_1121  [key=0, style=solid];
m4_1121 -> m4_1122  [key=0, style=solid];
m4_1121 -> m4_25  [key=2, style=dotted];
m4_1121 -> m4_1123  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_1121 -> m4_1124  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_1121 -> m4_1125  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_1122 -> m4_1123  [key=0, style=solid];
m4_1122 -> m4_27  [key=2, style=dotted];
m4_1123 -> m4_1124  [key=0, style=solid];
m4_1123 -> m4_27  [key=2, style=dotted];
m4_1124 -> m4_1125  [key=0, style=solid];
m4_1124 -> m4_27  [key=2, style=dotted];
m4_1125 -> m4_1126  [key=0, style=solid];
m4_1125 -> m4_27  [key=2, style=dotted];
m4_1126 -> m4_1120  [key=0, style=bold, color=blue];
m4_2615 -> m4_2616  [key=0, style=solid];
m4_2616 -> m4_2617  [key=0, style=solid];
m4_2616 -> m4_3  [key=2, style=dotted];
m4_2616 -> m4_2619  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2616 -> m4_2620  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2617 -> m4_2618  [key=0, style=solid];
m4_2617 -> m4_51  [key=2, style=dotted];
m4_2619 -> m4_2620  [key=0, style=solid];
m4_2619 -> m4_27  [key=2, style=dotted];
m4_2620 -> m4_2621  [key=0, style=solid];
m4_2620 -> m4_27  [key=2, style=dotted];
m4_2618 -> m4_2619  [key=0, style=solid];
m4_2618 -> m4_25  [key=2, style=dotted];
m4_2618 -> m4_2620  [key=1, style=dashed, color=darkseagreen4, label=d2];
m4_2621 -> m4_2615  [key=0, style=bold, color=blue];
m4_1017 -> m4_1018  [key=0, style=solid];
m4_1018 -> m4_1019  [key=0, style=solid];
m4_1018 -> m4_181  [key=2, style=dotted];
m4_1018 -> m4_1022  [key=2, style=dotted];
m4_1019 -> m4_1020  [key=0, style=solid];
m4_1019 -> m4_51  [key=2, style=dotted];
m4_1020 -> m4_1021  [key=0, style=solid];
m4_1020 -> m4_27  [key=2, style=dotted];
m4_1021 -> m4_1017  [key=0, style=bold, color=blue];
m4_2079 -> m4_2080  [key=0, style=solid];
m4_2080 -> m4_2081  [key=0, style=solid];
m4_2080 -> m4_25  [key=2, style=dotted];
m4_2081 -> m4_2082  [key=0, style=solid];
m4_2081 -> m4_2067  [key=2, style=dotted];
m4_2081 -> m4_217  [key=2, style=dotted];
m4_2081 -> m4_403  [key=2, style=dotted];
m4_2081 -> m4_27  [key=2, style=dotted];
m4_2082 -> m4_2079  [key=0, style=bold, color=blue];
m4_808 -> m4_809  [key=0, style=solid];
m4_809 -> m4_810  [key=0, style=solid];
m4_809 -> m4_818  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_809 -> m4_809  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_810 -> m4_811  [key=0, style=solid];
m4_810 -> m4_25  [key=2, style=dotted];
m4_810 -> m4_812  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_810 -> m4_813  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_810 -> m4_814  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_810 -> m4_815  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_810 -> m4_816  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_810 -> m4_817  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_818 -> m4_819  [key=0, style=solid];
m4_818 -> m4_27  [key=2, style=dotted];
m4_811 -> m4_812  [key=0, style=solid];
m4_811 -> m4_27  [key=2, style=dotted];
m4_812 -> m4_813  [key=0, style=solid];
m4_812 -> m4_27  [key=2, style=dotted];
m4_813 -> m4_814  [key=0, style=solid];
m4_813 -> m4_27  [key=2, style=dotted];
m4_814 -> m4_815  [key=0, style=solid];
m4_814 -> m4_27  [key=2, style=dotted];
m4_815 -> m4_816  [key=0, style=solid];
m4_815 -> m4_27  [key=2, style=dotted];
m4_816 -> m4_817  [key=0, style=solid];
m4_816 -> m4_27  [key=2, style=dotted];
m4_817 -> m4_818  [key=0, style=solid];
m4_817 -> m4_51  [key=2, style=dotted];
m4_819 -> m4_808  [key=0, style=bold, color=blue];
m4_1100 -> m4_1101  [key=0, style=solid];
m4_1101 -> m4_1102  [key=0, style=solid];
m4_1101 -> m4_1105  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1101 -> m4_1101  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1102 -> m4_1103  [key=0, style=solid];
m4_1102 -> m4_321  [key=2, style=dotted];
m4_1102 -> m4_1104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1103 -> m4_1100  [key=0, style=bold, color=blue];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_337  [key=2, style=dotted];
m4_327 -> m4_330  [key=1, style=dashed, color=darkseagreen4, label=a1];
m4_108 -> m4_101  [key=0, style=bold, color=blue];
m4_678 -> m4_679  [key=0, style=solid];
m4_678 -> m4_291  [key=2, style=dotted];
m4_678 -> m4_292  [key=2, style=dotted];
m4_678 -> m4_680  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_1841 -> m4_1842  [key=0, style=solid];
m4_1842 -> m4_1843  [key=0, style=solid];
m4_1842 -> m4_1827  [key=2, style=dotted];
m4_1842 -> m4_1844  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1842 -> m4_1845  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1843 -> m4_1844  [key=0, style=solid];
m4_1844 -> m4_1845  [key=0, style=solid];
m4_1844 -> m4_394  [key=2, style=dotted];
m4_1844 -> m4_3  [key=2, style=dotted];
m4_1844 -> m4_1847  [key=2, style=dotted];
m4_1844 -> m4_1829  [key=2, style=dotted];
m4_1845 -> m4_1846  [key=0, style=solid];
m4_1845 -> m4_27  [key=2, style=dotted];
m4_1846 -> m4_1841  [key=0, style=bold, color=blue];
m4_306 -> m4_89  [key=2, style=dotted];
m4_306 -> m4_307  [key=0, style=solid];
m4_2269 -> m4_2270  [key=0, style=solid];
m4_2270 -> m4_2271  [key=0, style=solid];
m4_2270 -> m4_2270  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2271 -> m4_2272  [key=0, style=solid];
m4_2271 -> m4_25  [key=2, style=dotted];
m4_2271 -> m4_2273  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_2271 -> m4_2274  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_2272 -> m4_2273  [key=0, style=solid];
m4_2272 -> m4_27  [key=2, style=dotted];
m4_2273 -> m4_2274  [key=0, style=solid];
m4_2273 -> m4_27  [key=2, style=dotted];
m4_2274 -> m4_2275  [key=0, style=solid];
m4_2274 -> m4_27  [key=2, style=dotted];
m4_2275 -> m4_2269  [key=0, style=bold, color=blue];
m4_1876 -> m4_1877  [key=0, style=solid];
m4_1877 -> m4_1878  [key=0, style=solid];
m4_1877 -> m4_50  [key=2, style=dotted];
m4_1877 -> m4_1879  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_1877 -> m4_1880  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_1877 -> m4_1884  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_1878 -> m4_1879  [key=0, style=solid];
m4_1878 -> m4_418  [key=2, style=dotted];
m4_1879 -> m4_1880  [key=0, style=solid];
m4_1879 -> m4_418  [key=2, style=dotted];
m4_1880 -> m4_1881  [key=0, style=solid];
m4_1880 -> m4_418  [key=2, style=dotted];
m4_1884 -> m4_1885  [key=0, style=solid];
m4_1884 -> m4_418  [key=2, style=dotted];
m4_1881 -> m4_1882  [key=0, style=solid];
m4_1881 -> m4_50  [key=2, style=dotted];
m4_1881 -> m4_1883  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1881 -> m4_1884  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1881 -> m4_1885  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1882 -> m4_1883  [key=0, style=solid];
m4_1882 -> m4_418  [key=2, style=dotted];
m4_1883 -> m4_1884  [key=0, style=solid];
m4_1883 -> m4_418  [key=2, style=dotted];
m4_1885 -> m4_1886  [key=0, style=solid];
m4_1885 -> m4_51  [key=2, style=dotted];
m4_1886 -> m4_1887  [key=0, style=solid];
m4_1886 -> m4_25  [key=2, style=dotted];
m4_1886 -> m4_1888  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1886 -> m4_1889  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1887 -> m4_1888  [key=0, style=solid];
m4_1887 -> m4_27  [key=2, style=dotted];
m4_1888 -> m4_1889  [key=0, style=solid];
m4_1888 -> m4_27  [key=2, style=dotted];
m4_1889 -> m4_1890  [key=0, style=solid];
m4_1889 -> m4_27  [key=2, style=dotted];
m4_1890 -> m4_1876  [key=0, style=bold, color=blue];
m4_3137 -> m4_3138  [key=0, style=solid];
m4_3138 -> m4_3139  [key=0, style=solid];
m4_3138 -> m4_3142  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3138 -> m4_3138  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3139 -> m4_3140  [key=0, style=solid];
m4_3139 -> m4_321  [key=2, style=dotted];
m4_3139 -> m4_3141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3140 -> m4_3137  [key=0, style=bold, color=blue];
m4_469 -> m4_470  [key=0, style=solid];
m4_469 -> m4_24  [key=2, style=dotted];
m4_470 -> m4_471  [key=0, style=solid];
m4_470 -> m4_51  [key=2, style=dotted];
m4_470 -> m4_23  [key=2, style=dotted];
m4_471 -> m4_472  [key=0, style=solid];
m4_471 -> m4_27  [key=2, style=dotted];
m4_471 -> m4_462  [key=0, style=bold, color=blue];
m4_2840 -> m4_2841  [key=0, style=solid];
m4_2841 -> m4_2842  [key=0, style=solid];
m4_2841 -> m4_216  [key=2, style=dotted];
m4_2841 -> m4_2843  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_2841 -> m4_2844  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_2841 -> m4_2845  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_2841 -> m4_2846  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_2841 -> m4_2847  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_2842 -> m4_2843  [key=0, style=solid];
m4_2843 -> m4_2844  [key=0, style=solid];
m4_2843 -> m4_217  [key=2, style=dotted];
m4_2844 -> m4_2845  [key=0, style=solid];
m4_2845 -> m4_2846  [key=0, style=solid];
m4_2846 -> m4_2847  [key=0, style=solid];
m4_2846 -> m4_51  [key=2, style=dotted];
m4_2847 -> m4_2848  [key=0, style=solid];
m4_2847 -> m4_394  [key=2, style=dotted];
m4_2847 -> m4_2853  [key=2, style=dotted];
m4_2847 -> m4_2854  [key=2, style=dotted];
m4_2847 -> m4_395  [key=2, style=dotted];
m4_2848 -> m4_2849  [key=0, style=solid];
m4_2848 -> m4_27  [key=2, style=dotted];
m4_2849 -> m4_2850  [key=0, style=solid];
m4_2850 -> m4_2851  [key=0, style=solid];
m4_2850 -> m4_394  [key=2, style=dotted];
m4_2850 -> m4_2853  [key=2, style=dotted];
m4_2850 -> m4_2854  [key=2, style=dotted];
m4_2850 -> m4_2855  [key=2, style=dotted];
m4_2850 -> m4_395  [key=2, style=dotted];
m4_2851 -> m4_2852  [key=0, style=solid];
m4_2851 -> m4_27  [key=2, style=dotted];
m4_2852 -> m4_2840  [key=0, style=bold, color=blue];
m4_799 -> m4_800  [key=0, style=solid];
m4_800 -> m4_801  [key=0, style=solid];
m4_800 -> m4_807  [key=2, style=dotted];
m4_800 -> m4_802  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_800 -> m4_803  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_800 -> m4_804  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_801 -> m4_802  [key=0, style=solid];
m4_802 -> m4_803  [key=0, style=solid];
m4_803 -> m4_804  [key=0, style=solid];
m4_804 -> m4_805  [key=0, style=solid];
m4_804 -> m4_51  [key=2, style=dotted];
m4_805 -> m4_806  [key=0, style=solid];
m4_805 -> m4_27  [key=2, style=dotted];
m4_806 -> m4_799  [key=0, style=bold, color=blue];
m4_1994 -> m4_1995  [key=0, style=solid];
m4_1995 -> m4_1996  [key=0, style=solid];
m4_1995 -> m4_50  [key=2, style=dotted];
m4_1995 -> m4_1997  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1995 -> m4_1998  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1996 -> m4_1997  [key=0, style=solid];
m4_1996 -> m4_1993  [key=2, style=dotted];
m4_1996 -> m4_418  [key=2, style=dotted];
m4_1997 -> m4_1998  [key=0, style=solid];
m4_1997 -> m4_1993  [key=2, style=dotted];
m4_1997 -> m4_418  [key=2, style=dotted];
m4_1998 -> m4_1999  [key=0, style=solid];
m4_1998 -> m4_24  [key=2, style=dotted];
m4_1998 -> m4_2000  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1999 -> m4_2000  [key=0, style=solid];
m4_1999 -> m4_27  [key=2, style=dotted];
m4_2000 -> m4_2001  [key=0, style=solid];
m4_2000 -> m4_25  [key=2, style=dotted];
m4_2001 -> m4_2002  [key=0, style=solid];
m4_2001 -> m4_27  [key=2, style=dotted];
m4_2002 -> m4_1994  [key=0, style=bold, color=blue];
m4_544 -> m4_545  [key=0, style=solid];
m4_544 -> m4_25  [key=2, style=dotted];
m4_550 -> m4_89  [key=2, style=dotted];
m4_550 -> m4_551  [key=0, style=solid];
m4_550 -> m4_51  [key=2, style=dotted];
m4_550 -> m4_552  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_548 -> m4_89  [key=2, style=dotted];
m4_548 -> m4_549  [key=0, style=solid];
m4_547 -> m4_548  [key=0, style=solid];
m4_547 -> m4_318  [key=2, style=dotted];
m4_545 -> m4_550  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_545 -> m4_545  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_545 -> m4_546  [key=0, style=solid];
m4_545 -> m4_27  [key=2, style=dotted];
m4_549 -> m4_550  [key=0, style=solid];
m4_549 -> m4_511  [key=2, style=dotted];
m4_546 -> m4_547  [key=0, style=solid];
m4_546 -> m4_549  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_546 -> m4_414  [key=2, style=dotted];
m4_546 -> m4_540  [key=0, style=bold, color=blue];
m4_551 -> m4_544  [key=0, style=bold, color=blue];
m4_551 -> m4_552  [key=0, style=solid];
m4_551 -> m4_27  [key=2, style=dotted];
m4_679 -> m4_680  [key=0, style=solid];
m4_679 -> m4_327  [key=2, style=dotted];
m4_1370 -> m4_1371  [key=0, style=solid];
m4_1371 -> m4_1372  [key=0, style=solid];
m4_1371 -> m4_1371  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1372 -> m4_1373  [key=0, style=solid];
m4_1372 -> m4_25  [key=2, style=dotted];
m4_1372 -> m4_1374  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_1372 -> m4_1375  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_1372 -> m4_1376  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_1373 -> m4_1374  [key=0, style=solid];
m4_1373 -> m4_27  [key=2, style=dotted];
m4_1374 -> m4_1375  [key=0, style=solid];
m4_1374 -> m4_27  [key=2, style=dotted];
m4_1375 -> m4_1376  [key=0, style=solid];
m4_1375 -> m4_27  [key=2, style=dotted];
m4_1376 -> m4_1377  [key=0, style=solid];
m4_1376 -> m4_27  [key=2, style=dotted];
m4_1377 -> m4_1370  [key=0, style=bold, color=blue];
m4_337 -> m4_338  [key=0, style=solid];
m4_2575 -> m4_2576  [key=0, style=solid];
m4_2576 -> m4_2577  [key=0, style=solid];
m4_2576 -> m4_2576  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m4_2577 -> m4_2578  [key=0, style=solid];
m4_2577 -> m4_1015  [key=2, style=dotted];
m4_2577 -> m4_2580  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_2578 -> m4_2579  [key=0, style=solid];
m4_2578 -> m4_51  [key=2, style=dotted];
m4_2580 -> m4_2581  [key=0, style=solid];
m4_2580 -> m4_27  [key=2, style=dotted];
m4_2579 -> m4_2580  [key=0, style=solid];
m4_2579 -> m4_25  [key=2, style=dotted];
m4_2581 -> m4_2575  [key=0, style=bold, color=blue];
m4_1466 -> m4_1467  [key=0, style=solid];
m4_1467 -> m4_1468  [key=0, style=solid];
m4_1467 -> m4_1469  [key=2, style=dotted];
m4_1468 -> m4_1466  [key=0, style=bold, color=blue];
m4_2422 -> m4_2423  [key=0, style=solid];
m4_2423 -> m4_2424  [key=0, style=solid];
m4_2424 -> m4_2422  [key=0, style=bold, color=blue];
m4_2839 -> m4_3639  [key=0, style=solid];
m4_3639 -> m4_3640  [key=0, style=solid];
m4_3639 -> m4_3637  [key=2, style=dotted];
m4_3640 -> m4_2839  [key=0, style=bold, color=blue];
m4_3238 -> m4_3239  [key=0, style=solid];
m4_3239 -> m4_3240  [key=0, style=solid];
m4_3239 -> m4_3246  [key=2, style=dotted];
m4_3239 -> m4_3241  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3239 -> m4_3242  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3239 -> m4_3243  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3240 -> m4_3241  [key=0, style=solid];
m4_3241 -> m4_3242  [key=0, style=solid];
m4_3242 -> m4_3243  [key=0, style=solid];
m4_3243 -> m4_3244  [key=0, style=solid];
m4_3243 -> m4_51  [key=2, style=dotted];
m4_3244 -> m4_3245  [key=0, style=solid];
m4_3244 -> m4_27  [key=2, style=dotted];
m4_3245 -> m4_3238  [key=0, style=bold, color=blue];
m4_340 -> m4_100  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_338 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_338 -> m4_338  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_338 -> m4_339  [key=0, style=solid];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_1706  [key=2, style=dotted];
m4_339 -> m4_341  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_339 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_174  [key=2, style=dotted];
m4_341 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_341 -> m4_347  [key=2, style=dotted];
m4_341 -> m4_345  [key=1, style=dashed, color=darkseagreen4, label=r1];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_23  [key=2, style=dotted];
m4_344 -> m4_25  [key=2, style=dotted];
m4_342 -> m4_89  [key=2, style=dotted];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_51  [key=2, style=dotted];
m4_342 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_343 -> m4_24  [key=2, style=dotted];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_27  [key=2, style=dotted];
m4_345 -> m4_337  [key=0, style=bold, color=blue];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_27  [key=2, style=dotted];
m4_2629 -> m4_2630  [key=0, style=solid];
m4_2630 -> m4_2631  [key=0, style=solid];
m4_2630 -> m4_3  [key=2, style=dotted];
m4_2630 -> m4_2633  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2630 -> m4_2634  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2631 -> m4_2632  [key=0, style=solid];
m4_2631 -> m4_51  [key=2, style=dotted];
m4_2633 -> m4_2634  [key=0, style=solid];
m4_2633 -> m4_27  [key=2, style=dotted];
m4_2634 -> m4_2635  [key=0, style=solid];
m4_2634 -> m4_27  [key=2, style=dotted];
m4_2632 -> m4_2633  [key=0, style=solid];
m4_2632 -> m4_25  [key=2, style=dotted];
m4_2632 -> m4_2634  [key=1, style=dashed, color=darkseagreen4, label=d2];
m4_2635 -> m4_2629  [key=0, style=bold, color=blue];
m4_1343 -> m4_1344  [key=0, style=solid];
m4_1344 -> m4_1345  [key=0, style=solid];
m4_1344 -> m4_418  [key=2, style=dotted];
m4_1345 -> m4_1343  [key=0, style=bold, color=blue];
m4_2868 -> m4_2869  [key=0, style=solid];
m4_2869 -> m4_2870  [key=0, style=solid];
m4_2870 -> m4_2868  [key=0, style=bold, color=blue];
m4_418 -> m4_420  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m4_418 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m4_418 -> m4_419  [key=0, style=solid];
m4_418 -> m4_414  [key=2, style=dotted];
m4_2222 -> m4_2223  [key=0, style=solid];
m4_2223 -> m4_2224  [key=0, style=solid];
m4_2223 -> m4_25  [key=2, style=dotted];
m4_2224 -> m4_2225  [key=0, style=solid];
m4_2224 -> m4_27  [key=2, style=dotted];
m4_2225 -> m4_2222  [key=0, style=bold, color=blue];
m4_3197 -> m4_3198  [key=0, style=solid];
m4_3198 -> m4_3199  [key=0, style=solid];
m4_3199 -> m4_3197  [key=0, style=bold, color=blue];
m4_511 -> m4_512  [key=0, style=solid];
m4_511 -> m4_27  [key=2, style=dotted];
m4_2119 -> m4_2120  [key=0, style=solid];
m4_2120 -> m4_2121  [key=0, style=solid];
m4_2120 -> m4_2120  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2121 -> m4_2122  [key=0, style=solid];
m4_2121 -> m4_25  [key=2, style=dotted];
m4_2122 -> m4_2123  [key=0, style=solid];
m4_2122 -> m4_27  [key=2, style=dotted];
m4_2123 -> m4_2119  [key=0, style=bold, color=blue];
m4_2059 -> m4_2060  [key=0, style=solid];
m4_2060 -> m4_2061  [key=0, style=solid];
m4_2060 -> m4_2066  [key=2, style=dotted];
m4_2060 -> m4_2067  [key=2, style=dotted];
m4_2060 -> m4_217  [key=2, style=dotted];
m4_2060 -> m4_403  [key=2, style=dotted];
m4_2060 -> m4_51  [key=2, style=dotted];
m4_2060 -> m4_2062  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m4_2061 -> m4_2062  [key=0, style=solid];
m4_2061 -> m4_27  [key=2, style=dotted];
m4_2062 -> m4_2063  [key=0, style=solid];
m4_2062 -> m4_25  [key=2, style=dotted];
m4_2062 -> m4_2064  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m4_2063 -> m4_2064  [key=0, style=solid];
m4_2063 -> m4_403  [key=2, style=dotted];
m4_2063 -> m4_27  [key=2, style=dotted];
m4_2064 -> m4_2065  [key=0, style=solid];
m4_2064 -> m4_217  [key=2, style=dotted];
m4_2064 -> m4_27  [key=2, style=dotted];
m4_2065 -> m4_2059  [key=0, style=bold, color=blue];
m4_2312 -> m4_2313  [key=0, style=solid];
m4_2313 -> m4_2314  [key=0, style=solid];
m4_2313 -> m4_2316  [key=2, style=dotted];
m4_2313 -> m4_51  [key=2, style=dotted];
m4_2314 -> m4_2315  [key=0, style=solid];
m4_2314 -> m4_25  [key=2, style=dotted];
m4_2315 -> m4_2312  [key=0, style=bold, color=blue];
m4_3328 -> m4_3329  [key=0, style=solid];
m4_3329 -> m4_3330  [key=0, style=solid];
m4_3329 -> m4_3246  [key=2, style=dotted];
m4_3329 -> m4_3331  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3329 -> m4_3332  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3329 -> m4_3333  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3330 -> m4_3331  [key=0, style=solid];
m4_3331 -> m4_3332  [key=0, style=solid];
m4_3332 -> m4_3333  [key=0, style=solid];
m4_3333 -> m4_3334  [key=0, style=solid];
m4_3333 -> m4_51  [key=2, style=dotted];
m4_3334 -> m4_3335  [key=0, style=solid];
m4_3334 -> m4_27  [key=2, style=dotted];
m4_3335 -> m4_3328  [key=0, style=bold, color=blue];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_88  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_124  [key=2, style=dotted];
m4_116 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_116 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_116 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_116 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_116 -> m4_89  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_111  [key=0, style=bold, color=blue];
m4_118 -> m4_119  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_120  [key=3, color=darkorchid, style=bold, label="Local variable decimal d"];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_125  [key=2, style=dotted];
m4_121 -> m4_128  [key=1, style=dashed, color=darkseagreen4, label=x];
m4_121 -> m4_130  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_27  [key=2, style=dotted];
m4_122 -> m4_131  [key=2, style=dotted];
m4_123 -> m4_115  [key=0, style=bold, color=blue];
m4_123 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_64  [key=2, style=dotted];
m4_123 -> m4_48  [key=2, style=dotted];
m4_123 -> m4_132  [key=2, style=dotted];
m4_3361 -> m4_3362  [key=0, style=solid];
m4_3362 -> m4_3363  [key=0, style=solid];
m4_3362 -> m4_3368  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3362 -> m4_3362  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3363 -> m4_3364  [key=0, style=solid];
m4_3363 -> m4_25  [key=2, style=dotted];
m4_3363 -> m4_3365  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3363 -> m4_3366  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3363 -> m4_3367  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3368 -> m4_3369  [key=0, style=solid];
m4_3368 -> m4_27  [key=2, style=dotted];
m4_3364 -> m4_3365  [key=0, style=solid];
m4_3364 -> m4_27  [key=2, style=dotted];
m4_3365 -> m4_3366  [key=0, style=solid];
m4_3365 -> m4_27  [key=2, style=dotted];
m4_3366 -> m4_3367  [key=0, style=solid];
m4_3366 -> m4_27  [key=2, style=dotted];
m4_3367 -> m4_3368  [key=0, style=solid];
m4_3367 -> m4_51  [key=2, style=dotted];
m4_3369 -> m4_3361  [key=0, style=bold, color=blue];
m4_318 -> m4_492  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_323  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m4_318 -> m4_505  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_318 -> m4_514  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_318 -> m4_523  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_318 -> m4_538  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_318 -> m4_546  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_291  [key=2, style=dotted];
m4_319 -> m4_321  [key=2, style=dotted];
m4_319 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_323 -> m4_327  [key=2, style=dotted];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_325  [key=2, style=dotted];
m4_323 -> m4_51  [key=2, style=dotted];
m4_321 -> m4_326  [key=2, style=dotted];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_324 -> m4_328  [key=2, style=dotted];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_322  [key=0, style=bold, color=blue];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_320  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_320 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_320 -> m4_318  [key=0, style=bold, color=blue];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_292  [key=2, style=dotted];
m4_325 -> m4_318  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_3578 -> m4_3579  [key=0, style=solid];
m4_3579 -> m4_3580  [key=0, style=solid];
m4_3579 -> m4_3116  [key=2, style=dotted];
m4_3580 -> m4_3578  [key=0, style=bold, color=blue];
m4_3446 -> m4_3447  [key=0, style=solid];
m4_3447 -> m4_3448  [key=0, style=solid];
m4_3447 -> m4_3450  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3447 -> m4_3453  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3447 -> m4_3447  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3448 -> m4_3449  [key=0, style=solid];
m4_3448 -> m4_25  [key=2, style=dotted];
m4_3450 -> m4_3451  [key=0, style=solid];
m4_3450 -> m4_321  [key=2, style=dotted];
m4_3450 -> m4_3452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3449 -> m4_3450  [key=0, style=solid];
m4_3449 -> m4_1691  [key=2, style=dotted];
m4_3449 -> m4_27  [key=2, style=dotted];
m4_3451 -> m4_3446  [key=0, style=bold, color=blue];
m4_2654 -> m4_2655  [key=0, style=solid];
m4_2655 -> m4_2656  [key=0, style=solid];
m4_2655 -> m4_2659  [key=2, style=dotted];
m4_2655 -> m4_2660  [key=2, style=dotted];
m4_2656 -> m4_2657  [key=0, style=solid];
m4_2656 -> m4_24  [key=2, style=dotted];
m4_2657 -> m4_2658  [key=0, style=solid];
m4_2657 -> m4_27  [key=2, style=dotted];
m4_2658 -> m4_2654  [key=0, style=bold, color=blue];
m4_559 -> m4_560  [key=0, style=solid];
m4_559 -> m4_25  [key=2, style=dotted];
m4_567 -> m4_89  [key=2, style=dotted];
m4_567 -> m4_568  [key=0, style=solid];
m4_567 -> m4_426  [key=2, style=dotted];
m4_567 -> m4_25  [key=2, style=dotted];
m4_567 -> m4_569  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_569 -> m4_89  [key=2, style=dotted];
m4_569 -> m4_570  [key=0, style=solid];
m4_569 -> m4_27  [key=2, style=dotted];
m4_568 -> m4_174  [key=2, style=dotted];
m4_568 -> m4_569  [key=0, style=solid];
m4_568 -> m4_27  [key=2, style=dotted];
m4_566 -> m4_567  [key=0, style=solid];
m4_566 -> m4_568  [key=1, style=dashed, color=darkseagreen4, label=xmlProduct];
m4_566 -> m4_437  [key=2, style=dotted];
m4_566 -> m4_27  [key=2, style=dotted];
m4_565 -> m4_566  [key=0, style=solid];
m4_565 -> m4_573  [key=2, style=dotted];
m4_565 -> m4_574  [key=2, style=dotted];
m4_565 -> m4_571  [key=2, style=dotted];
m4_565 -> m4_51  [key=2, style=dotted];
m4_560 -> m4_565  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_560 -> m4_561  [key=0, style=solid];
m4_560 -> m4_571  [key=2, style=dotted];
m4_560 -> m4_562  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_560 -> m4_563  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_560 -> m4_564  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_560 -> m4_27  [key=2, style=dotted];
m4_564 -> m4_565  [key=0, style=solid];
m4_561 -> m4_562  [key=0, style=solid];
m4_561 -> m4_555  [key=0, style=bold, color=blue];
m4_562 -> m4_563  [key=0, style=solid];
m4_562 -> m4_572  [key=2, style=dotted];
m4_563 -> m4_564  [key=0, style=solid];
m4_570 -> m4_559  [key=0, style=bold, color=blue];
m4_570 -> m4_564  [key=0, style=bold, color=blue];
m4_3287 -> m4_3288  [key=0, style=solid];
m4_3288 -> m4_3289  [key=0, style=solid];
m4_3288 -> m4_3292  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3288 -> m4_3288  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3289 -> m4_3290  [key=0, style=solid];
m4_3289 -> m4_321  [key=2, style=dotted];
m4_3289 -> m4_3291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3290 -> m4_3287  [key=0, style=bold, color=blue];
m4_518 -> m4_519  [key=0, style=solid];
m4_518 -> m4_427  [key=2, style=dotted];
m4_48 -> m4_45  [key=0, style=bold, color=blue];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_27  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_26  [key=2, style=dotted];
m4_20 -> m4_27  [key=2, style=dotted];
m4_2286 -> m4_2287  [key=0, style=solid];
m4_2287 -> m4_2288  [key=0, style=solid];
m4_2287 -> m4_2291  [key=2, style=dotted];
m4_2288 -> m4_2289  [key=0, style=solid];
m4_2288 -> m4_24  [key=2, style=dotted];
m4_2289 -> m4_2290  [key=0, style=solid];
m4_2289 -> m4_27  [key=2, style=dotted];
m4_2290 -> m4_2286  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_251  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_0 -> m4_492  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m4_0 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m4_0 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1 -> m4_15  [key=2, style=dotted];
m4_1 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_16  [key=2, style=dotted];
m4_2 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_1419 -> m4_1420  [key=0, style=solid];
m4_1419 -> m4_1422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_1420 -> m4_1421  [key=0, style=solid];
m4_1420 -> m4_1422  [key=0, style=solid];
m4_1422 -> m4_1423  [key=0, style=solid];
m4_1422 -> m4_1424  [key=0, style=solid];
m4_1421 -> m4_1424  [key=0, style=solid];
m4_1421 -> m4_1425  [key=2, style=dotted];
m4_1423 -> m4_1422  [key=0, style=solid];
m4_1423 -> m4_418  [key=2, style=dotted];
m4_1423 -> m4_1423  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_1424 -> m4_1419  [key=0, style=bold, color=blue];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_25  [key=2, style=dotted];
m4_76 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_76 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_76 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_27  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_27  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_27  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_27  [key=2, style=dotted];
m4_80 -> m4_80  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_80 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_81 -> m4_75  [key=0, style=bold, color=blue];
m4_81 -> m4_87  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_2391 -> m4_2392  [key=0, style=solid];
m4_2392 -> m4_2393  [key=0, style=solid];
m4_2392 -> m4_1730  [key=2, style=dotted];
m4_2393 -> m4_2391  [key=0, style=bold, color=blue];
m4_2534 -> m4_2535  [key=0, style=solid];
m4_2535 -> m4_2536  [key=0, style=solid];
m4_2535 -> m4_2535  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2536 -> m4_2537  [key=0, style=solid];
m4_2536 -> m4_25  [key=2, style=dotted];
m4_2536 -> m4_2538  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2536 -> m4_2539  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2536 -> m4_2540  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2536 -> m4_2541  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2536 -> m4_2542  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2536 -> m4_2543  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2536 -> m4_2544  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2536 -> m4_2545  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2537 -> m4_2538  [key=0, style=solid];
m4_2537 -> m4_27  [key=2, style=dotted];
m4_2538 -> m4_2539  [key=0, style=solid];
m4_2538 -> m4_27  [key=2, style=dotted];
m4_2539 -> m4_2540  [key=0, style=solid];
m4_2539 -> m4_27  [key=2, style=dotted];
m4_2540 -> m4_2541  [key=0, style=solid];
m4_2540 -> m4_27  [key=2, style=dotted];
m4_2541 -> m4_2542  [key=0, style=solid];
m4_2541 -> m4_27  [key=2, style=dotted];
m4_2542 -> m4_2543  [key=0, style=solid];
m4_2542 -> m4_27  [key=2, style=dotted];
m4_2543 -> m4_2544  [key=0, style=solid];
m4_2543 -> m4_27  [key=2, style=dotted];
m4_2544 -> m4_2545  [key=0, style=solid];
m4_2544 -> m4_27  [key=2, style=dotted];
m4_2545 -> m4_2546  [key=0, style=solid];
m4_2545 -> m4_27  [key=2, style=dotted];
m4_2546 -> m4_2534  [key=0, style=bold, color=blue];
m4_3294 -> m4_3295  [key=0, style=solid];
m4_3295 -> m4_3296  [key=0, style=solid];
m4_3295 -> m4_3305  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3295 -> m4_3295  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3296 -> m4_3297  [key=0, style=solid];
m4_3296 -> m4_25  [key=2, style=dotted];
m4_3296 -> m4_3298  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3296 -> m4_3299  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3296 -> m4_3300  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3296 -> m4_3301  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3296 -> m4_3302  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3296 -> m4_3303  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3296 -> m4_3304  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3305 -> m4_3306  [key=0, style=solid];
m4_3305 -> m4_27  [key=2, style=dotted];
m4_3297 -> m4_3298  [key=0, style=solid];
m4_3297 -> m4_27  [key=2, style=dotted];
m4_3298 -> m4_3299  [key=0, style=solid];
m4_3298 -> m4_27  [key=2, style=dotted];
m4_3299 -> m4_3300  [key=0, style=solid];
m4_3299 -> m4_3267  [key=2, style=dotted];
m4_3299 -> m4_27  [key=2, style=dotted];
m4_3300 -> m4_3301  [key=0, style=solid];
m4_3300 -> m4_3267  [key=2, style=dotted];
m4_3300 -> m4_27  [key=2, style=dotted];
m4_3301 -> m4_3302  [key=0, style=solid];
m4_3301 -> m4_3267  [key=2, style=dotted];
m4_3301 -> m4_27  [key=2, style=dotted];
m4_3302 -> m4_3303  [key=0, style=solid];
m4_3302 -> m4_27  [key=2, style=dotted];
m4_3303 -> m4_3304  [key=0, style=solid];
m4_3303 -> m4_27  [key=2, style=dotted];
m4_3304 -> m4_3305  [key=0, style=solid];
m4_3304 -> m4_51  [key=2, style=dotted];
m4_3306 -> m4_3294  [key=0, style=bold, color=blue];
m4_770 -> m4_771  [key=0, style=solid];
m4_771 -> m4_772  [key=0, style=solid];
m4_771 -> m4_771  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_772 -> m4_773  [key=0, style=solid];
m4_772 -> m4_25  [key=2, style=dotted];
m4_772 -> m4_774  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_772 -> m4_775  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_773 -> m4_774  [key=0, style=solid];
m4_773 -> m4_27  [key=2, style=dotted];
m4_774 -> m4_775  [key=0, style=solid];
m4_774 -> m4_27  [key=2, style=dotted];
m4_775 -> m4_776  [key=0, style=solid];
m4_775 -> m4_27  [key=2, style=dotted];
m4_776 -> m4_770  [key=0, style=bold, color=blue];
m4_2951 -> m4_2952  [key=0, style=solid];
m4_2952 -> m4_2953  [key=0, style=solid];
m4_2952 -> m4_50  [key=2, style=dotted];
m4_2952 -> m4_402  [key=2, style=dotted];
m4_2953 -> m4_2954  [key=0, style=solid];
m4_2953 -> m4_24  [key=2, style=dotted];
m4_2953 -> m4_2955  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2954 -> m4_2955  [key=0, style=solid];
m4_2954 -> m4_27  [key=2, style=dotted];
m4_2955 -> m4_2956  [key=0, style=solid];
m4_2955 -> m4_25  [key=2, style=dotted];
m4_2955 -> m4_2957  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2955 -> m4_2958  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2956 -> m4_2957  [key=0, style=solid];
m4_2956 -> m4_27  [key=2, style=dotted];
m4_2957 -> m4_2958  [key=0, style=solid];
m4_2957 -> m4_402  [key=2, style=dotted];
m4_2957 -> m4_27  [key=2, style=dotted];
m4_2958 -> m4_2959  [key=0, style=solid];
m4_2958 -> m4_402  [key=2, style=dotted];
m4_2958 -> m4_27  [key=2, style=dotted];
m4_2959 -> m4_2951  [key=0, style=bold, color=blue];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_338  [key=2, style=dotted];
m4_329 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m4_329 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m4_329 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m4_329 -> m4_335  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m4_332 -> m4_100  [key=2, style=dotted];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_51  [key=2, style=dotted];
m4_330 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_330 -> m4_330  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_339  [key=2, style=dotted];
m4_331 -> m4_332  [key=0, style=solid];
m4_331 -> m4_1706  [key=2, style=dotted];
m4_331 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_331 -> m4_335  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_331 -> m4_339  [key=2, style=dotted];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_174  [key=2, style=dotted];
m4_333 -> m4_25  [key=2, style=dotted];
m4_333 -> m4_335  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m4_335 -> m4_336  [key=0, style=solid];
m4_335 -> m4_23  [key=2, style=dotted];
m4_335 -> m4_27  [key=2, style=dotted];
m4_334 -> m4_24  [key=2, style=dotted];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_27  [key=2, style=dotted];
m4_336 -> m4_329  [key=0, style=bold, color=blue];
m4_336 -> m4_326  [key=0, style=bold, color=blue];
m4_3105 -> m4_3106  [key=0, style=solid];
m4_3106 -> m4_3107  [key=0, style=solid];
m4_3106 -> m4_1784  [key=2, style=dotted];
m4_3106 -> m4_394  [key=2, style=dotted];
m4_3106 -> m4_3109  [key=2, style=dotted];
m4_3106 -> m4_906  [key=2, style=dotted];
m4_3107 -> m4_3108  [key=0, style=solid];
m4_3107 -> m4_27  [key=2, style=dotted];
m4_3108 -> m4_3105  [key=0, style=bold, color=blue];
m4_1742 -> m4_1743  [key=0, style=solid];
m4_1743 -> m4_1744  [key=0, style=solid];
m4_1743 -> m4_1730  [key=2, style=dotted];
m4_1744 -> m4_1742  [key=0, style=bold, color=blue];
m4_1759 -> m4_1760  [key=0, style=solid];
m4_1760 -> m4_1761  [key=0, style=solid];
m4_1760 -> m4_3  [key=2, style=dotted];
m4_1761 -> m4_1759  [key=0, style=bold, color=blue];
m4_462 -> m4_463  [key=0, style=solid];
m4_465 -> m4_100  [key=2, style=dotted];
m4_465 -> m4_466  [key=0, style=solid];
m4_465 -> m4_468  [key=2, style=dotted];
m4_465 -> m4_51  [key=2, style=dotted];
m4_463 -> m4_465  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_463 -> m4_463  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_463 -> m4_464  [key=0, style=solid];
m4_464 -> m4_465  [key=0, style=solid];
m4_464 -> m4_1706  [key=2, style=dotted];
m4_464 -> m4_466  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_464 -> m4_470  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_466 -> m4_467  [key=0, style=solid];
m4_466 -> m4_174  [key=2, style=dotted];
m4_466 -> m4_27  [key=2, style=dotted];
m4_467 -> m4_467  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_467 -> m4_468  [key=0, style=solid];
m4_467 -> m4_472  [key=2, style=dotted];
m4_467 -> m4_473  [key=2, style=dotted];
m4_467 -> m4_469  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_467 -> m4_464  [key=0, style=bold, color=blue];
m4_468 -> m4_89  [key=2, style=dotted];
m4_468 -> m4_469  [key=0, style=solid];
m4_474 -> m4_475  [key=0, style=solid];
m4_474 -> m4_474  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_476 -> m4_24  [key=2, style=dotted];
m4_476 -> m4_477  [key=0, style=solid];
m4_476 -> m4_27  [key=2, style=dotted];
m4_475 -> m4_476  [key=0, style=solid];
m4_475 -> m4_475  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_475 -> m4_25  [key=2, style=dotted];
m4_475 -> m4_477  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_475 -> m4_478  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_475 -> m4_479  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_475 -> m4_480  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_475 -> m4_481  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_477 -> m4_23  [key=2, style=dotted];
m4_477 -> m4_478  [key=0, style=solid];
m4_477 -> m4_27  [key=2, style=dotted];
m4_478 -> m4_474  [key=0, style=bold, color=blue];
m4_478 -> m4_479  [key=0, style=solid];
m4_478 -> m4_27  [key=2, style=dotted];
m4_1155 -> m4_1156  [key=0, style=solid];
m4_1156 -> m4_1157  [key=0, style=solid];
m4_1156 -> m4_1160  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1156 -> m4_1128  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1157 -> m4_1158  [key=0, style=solid];
m4_1157 -> m4_321  [key=2, style=dotted];
m4_1157 -> m4_1159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1158 -> m4_1155  [key=0, style=bold, color=blue];
m4_3683 -> m4_3684  [key=0, style=solid];
m4_3684 -> m4_3685  [key=0, style=solid];
m4_3684 -> m4_3671  [key=2, style=dotted];
m4_3685 -> m4_3683  [key=0, style=bold, color=blue];
m4_438 -> m4_439  [key=0, style=solid];
m4_438 -> m4_395  [key=2, style=dotted];
m4_438 -> m4_440  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_619 -> m4_613  [key=0, style=bold, color=blue];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_131  [key=2, style=dotted];
m4_3247 -> m4_3248  [key=0, style=solid];
m4_3248 -> m4_3249  [key=0, style=solid];
m4_3248 -> m4_3255  [key=2, style=dotted];
m4_3248 -> m4_3250  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3248 -> m4_3251  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3248 -> m4_3252  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3249 -> m4_3250  [key=0, style=solid];
m4_3250 -> m4_3251  [key=0, style=solid];
m4_3251 -> m4_3252  [key=0, style=solid];
m4_3252 -> m4_3253  [key=0, style=solid];
m4_3252 -> m4_24  [key=2, style=dotted];
m4_3253 -> m4_3254  [key=0, style=solid];
m4_3253 -> m4_27  [key=2, style=dotted];
m4_3254 -> m4_3247  [key=0, style=bold, color=blue];
m4_82 -> m4_88  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_83 -> m4_89  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_25  [key=2, style=dotted];
m4_83 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_83 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_83 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_83 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_77  [key=2, style=dotted];
m4_84 -> m4_27  [key=2, style=dotted];
m4_85 -> m4_23  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_51  [key=2, style=dotted];
m4_85 -> m4_27  [key=2, style=dotted];
m4_86 -> m4_79  [key=0, style=bold, color=blue];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_27  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_137  [key=2, style=dotted];
m4_140 -> m4_88  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_137 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_64  [key=2, style=dotted];
m4_137 -> m4_48  [key=2, style=dotted];
m4_137 -> m4_132  [key=2, style=dotted];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_23  [key=2, style=dotted];
m4_139 -> m4_147  [key=2, style=dotted];
m4_139 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_139 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_139 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_139 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_77  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_51  [key=2, style=dotted];
m4_142 -> m4_23  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label=x];
m4_135 -> m4_148  [key=2, style=dotted];
m4_135 -> m4_126  [key=0, style=bold, color=blue];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_144  [key=2, style=dotted];
m4_134 -> m4_145  [key=2, style=dotted];
m4_134 -> m4_146  [key=2, style=dotted];
m4_134 -> m4_147  [key=2, style=dotted];
m4_134 -> m4_27  [key=2, style=dotted];
m4_143 -> m4_133  [key=0, style=bold, color=blue];
m4_143 -> m4_144  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_27  [key=2, style=dotted];
m4_1483 -> m4_1484  [key=0, style=solid];
m4_1483 -> m4_1485  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1483 -> m4_1486  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m4_1483 -> m4_1487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m4_1484 -> m4_1485  [key=0, style=solid];
m4_1485 -> m4_1486  [key=0, style=solid];
m4_1486 -> m4_1487  [key=0, style=solid];
m4_1487 -> m4_1488  [key=0, style=solid];
m4_1488 -> m4_1489  [key=0, style=solid];
m4_1488 -> m4_631  [key=2, style=dotted];
m4_1489 -> m4_1483  [key=0, style=bold, color=blue];
m4_1426 -> m4_1427  [key=0, style=solid];
m4_1427 -> m4_1428  [key=0, style=solid];
m4_1427 -> m4_106  [key=2, style=dotted];
m4_1428 -> m4_1426  [key=0, style=bold, color=blue];
m4_182 -> m4_175  [key=0, style=bold, color=blue];
m4_1902 -> m4_1903  [key=0, style=solid];
m4_1903 -> m4_1904  [key=0, style=solid];
m4_1903 -> m4_1903  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1904 -> m4_1905  [key=0, style=solid];
m4_1904 -> m4_394  [key=2, style=dotted];
m4_1904 -> m4_652  [key=2, style=dotted];
m4_1904 -> m4_1906  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_1905 -> m4_1906  [key=0, style=solid];
m4_1905 -> m4_176  [key=2, style=dotted];
m4_1905 -> m4_27  [key=2, style=dotted];
m4_1906 -> m4_1907  [key=0, style=solid];
m4_1906 -> m4_27  [key=2, style=dotted];
m4_1907 -> m4_1902  [key=0, style=bold, color=blue];
m4_2111 -> m4_2112  [key=0, style=solid];
m4_2112 -> m4_2113  [key=0, style=solid];
m4_2112 -> m4_25  [key=2, style=dotted];
m4_2113 -> m4_2114  [key=0, style=solid];
m4_2113 -> m4_27  [key=2, style=dotted];
m4_2114 -> m4_2111  [key=0, style=bold, color=blue];
m4_1908 -> m4_1909  [key=0, style=solid];
m4_1909 -> m4_1910  [key=0, style=solid];
m4_1909 -> m4_1921  [key=2, style=dotted];
m4_1909 -> m4_1911  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1909 -> m4_1912  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1909 -> m4_1914  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1909 -> m4_1915  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1910 -> m4_1911  [key=0, style=solid];
m4_1911 -> m4_1912  [key=0, style=solid];
m4_1912 -> m4_1913  [key=0, style=solid];
m4_1912 -> m4_24  [key=2, style=dotted];
m4_1914 -> m4_1915  [key=0, style=solid];
m4_1915 -> m4_1916  [key=0, style=solid];
m4_1915 -> m4_24  [key=2, style=dotted];
m4_1915 -> m4_1917  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1913 -> m4_1914  [key=0, style=solid];
m4_1913 -> m4_27  [key=2, style=dotted];
m4_1916 -> m4_1917  [key=0, style=solid];
m4_1916 -> m4_27  [key=2, style=dotted];
m4_1917 -> m4_1918  [key=0, style=solid];
m4_1917 -> m4_25  [key=2, style=dotted];
m4_1917 -> m4_1919  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1918 -> m4_1919  [key=0, style=solid];
m4_1918 -> m4_27  [key=2, style=dotted];
m4_1919 -> m4_1920  [key=0, style=solid];
m4_1919 -> m4_27  [key=2, style=dotted];
m4_1920 -> m4_1908  [key=0, style=bold, color=blue];
m4_3131 -> m4_3132  [key=0, style=solid];
m4_3132 -> m4_3133  [key=0, style=solid];
m4_3132 -> m4_3116  [key=2, style=dotted];
m4_3133 -> m4_3131  [key=0, style=bold, color=blue];
m4_502 -> m4_503  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_29 -> m4_45  [key=2, style=dotted];
m4_29 -> m4_46  [key=2, style=dotted];
m4_29 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_25  [key=2, style=dotted];
m4_30 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_30 -> m4_3071  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_27  [key=2, style=dotted];
m4_31 -> m4_48  [key=2, style=dotted];
m4_31 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=converter];
m4_31 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label=converter];
m4_31 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=converter];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_27  [key=2, style=dotted];
m4_32 -> m4_34  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_27  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_27  [key=2, style=dotted];
m4_34 -> m4_49  [key=2, style=dotted];
m4_34 -> m4_50  [key=2, style=dotted];
m4_34 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_27  [key=2, style=dotted];
m4_35 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label=xmlText];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_27  [key=2, style=dotted];
m4_36 -> m4_45  [key=2, style=dotted];
m4_36 -> m4_46  [key=2, style=dotted];
m4_36 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_27  [key=2, style=dotted];
m4_37 -> m4_3071  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_42  [key=2, style=dotted];
m4_38 -> m4_43  [key=2, style=dotted];
m4_38 -> m4_44  [key=2, style=dotted];
m4_38 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_38 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_38 -> m4_49  [key=2, style=dotted];
m4_38 -> m4_50  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_42  [key=2, style=dotted];
m4_39 -> m4_43  [key=2, style=dotted];
m4_39 -> m4_44  [key=2, style=dotted];
m4_39 -> m4_51  [key=2, style=dotted];
m4_39 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_27  [key=2, style=dotted];
m4_40 -> m4_42  [key=0, style=solid];
m4_41 -> m4_28  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=linqXmlText];
m4_1678 -> m4_1679  [key=0, style=solid];
m4_1679 -> m4_1680  [key=0, style=solid];
m4_1679 -> m4_1690  [key=2, style=dotted];
m4_1679 -> m4_1681  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_1679 -> m4_1682  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_1679 -> m4_1686  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_1679 -> m4_1687  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_1680 -> m4_1681  [key=0, style=solid];
m4_1680 -> m4_1691  [key=2, style=dotted];
m4_1681 -> m4_1682  [key=0, style=solid];
m4_1681 -> m4_1691  [key=2, style=dotted];
m4_1682 -> m4_1683  [key=0, style=solid];
m4_1682 -> m4_24  [key=2, style=dotted];
m4_1682 -> m4_1684  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1682 -> m4_1685  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1686 -> m4_1687  [key=0, style=solid];
m4_1686 -> m4_1692  [key=2, style=dotted];
m4_1686 -> m4_27  [key=2, style=dotted];
m4_1687 -> m4_1688  [key=0, style=solid];
m4_1687 -> m4_1692  [key=2, style=dotted];
m4_1687 -> m4_27  [key=2, style=dotted];
m4_1683 -> m4_1684  [key=0, style=solid];
m4_1683 -> m4_1683  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_1684 -> m4_1685  [key=0, style=solid];
m4_1684 -> m4_27  [key=2, style=dotted];
m4_1685 -> m4_1686  [key=0, style=solid];
m4_1685 -> m4_25  [key=2, style=dotted];
m4_1685 -> m4_1687  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m4_1685 -> m4_1688  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m4_1688 -> m4_1689  [key=0, style=solid];
m4_1688 -> m4_1693  [key=2, style=dotted];
m4_1689 -> m4_1678  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_23  [key=2, style=dotted];
m4_3370 -> m4_3371  [key=0, style=solid];
m4_3371 -> m4_3372  [key=0, style=solid];
m4_3371 -> m4_3379  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3371 -> m4_3371  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3372 -> m4_3373  [key=0, style=solid];
m4_3372 -> m4_25  [key=2, style=dotted];
m4_3372 -> m4_3374  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3372 -> m4_3375  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3372 -> m4_3376  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3372 -> m4_3377  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3372 -> m4_3378  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3379 -> m4_3380  [key=0, style=solid];
m4_3379 -> m4_27  [key=2, style=dotted];
m4_3373 -> m4_3374  [key=0, style=solid];
m4_3373 -> m4_27  [key=2, style=dotted];
m4_3374 -> m4_3375  [key=0, style=solid];
m4_3374 -> m4_27  [key=2, style=dotted];
m4_3375 -> m4_3376  [key=0, style=solid];
m4_3375 -> m4_3267  [key=2, style=dotted];
m4_3375 -> m4_27  [key=2, style=dotted];
m4_3376 -> m4_3377  [key=0, style=solid];
m4_3376 -> m4_3267  [key=2, style=dotted];
m4_3376 -> m4_27  [key=2, style=dotted];
m4_3377 -> m4_3378  [key=0, style=solid];
m4_3377 -> m4_3267  [key=2, style=dotted];
m4_3377 -> m4_27  [key=2, style=dotted];
m4_3378 -> m4_3379  [key=0, style=solid];
m4_3378 -> m4_51  [key=2, style=dotted];
m4_3380 -> m4_3370  [key=0, style=bold, color=blue];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_23  [key=2, style=dotted];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_263  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m4_263 -> m4_256  [key=0, style=bold, color=blue];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_200  [key=2, style=dotted];
m4_264 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_261  [key=2, style=dotted];
m4_265 -> m4_27  [key=2, style=dotted];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_261  [key=2, style=dotted];
m4_266 -> m4_27  [key=2, style=dotted];
m4_266 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_266 -> m4_266  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_266 -> m4_274  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_266 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_266 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_267 -> m4_262  [key=0, style=bold, color=blue];
m4_267 -> m4_267  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_267 -> m4_277  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_1432 -> m4_1433  [key=0, style=solid];
m4_1433 -> m4_1434  [key=0, style=solid];
m4_1433 -> m4_1435  [key=2, style=dotted];
m4_1434 -> m4_1432  [key=0, style=bold, color=blue];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_0  [key=2, style=dotted];
m4_3604 -> m4_3605  [key=0, style=solid];
m4_3605 -> m4_3606  [key=0, style=solid];
m4_3605 -> m4_321  [key=2, style=dotted];
m4_3605 -> m4_3609  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3606 -> m4_3607  [key=0, style=solid];
m4_3606 -> m4_394  [key=2, style=dotted];
m4_3606 -> m4_652  [key=2, style=dotted];
m4_3607 -> m4_3608  [key=0, style=solid];
m4_3607 -> m4_27  [key=2, style=dotted];
m4_3608 -> m4_3604  [key=0, style=bold, color=blue];
m4_680 -> m4_681  [key=0, style=solid];
m4_680 -> m4_596  [key=2, style=dotted];
m4_681 -> m4_682  [key=0, style=solid];
m4_681 -> m4_690  [key=2, style=dotted];
m4_681 -> m4_683  [key=1, style=dashed, color=darkseagreen4, label=xaml2];
m4_681 -> m4_684  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_681 -> m4_328  [key=2, style=dotted];
m4_682 -> m4_683  [key=0, style=solid];
m4_682 -> m4_611  [key=2, style=dotted];
m4_682 -> m4_666  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXaml"];
m4_683 -> m4_684  [key=0, style=solid];
m4_683 -> m4_611  [key=2, style=dotted];
m4_683 -> m4_89  [key=2, style=dotted];
m4_684 -> m4_685  [key=0, style=solid];
m4_684 -> m4_619  [key=2, style=dotted];
m4_684 -> m4_620  [key=2, style=dotted];
m4_684 -> m4_686  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_684 -> m4_669  [key=0, style=bold, color=blue];
m4_685 -> m4_686  [key=0, style=solid];
m4_685 -> m4_27  [key=2, style=dotted];
m4_686 -> m4_687  [key=0, style=solid];
m4_686 -> m4_619  [key=2, style=dotted];
m4_686 -> m4_621  [key=2, style=dotted];
m4_686 -> m4_688  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_686 -> m4_686  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_687 -> m4_688  [key=0, style=solid];
m4_687 -> m4_27  [key=2, style=dotted];
m4_687 -> m4_191  [key=2, style=dotted];
m4_688 -> m4_689  [key=0, style=solid];
m4_688 -> m4_27  [key=2, style=dotted];
m4_688 -> m4_23  [key=2, style=dotted];
m4_689 -> m4_680  [key=0, style=bold, color=blue];
m4_689 -> m4_685  [key=0, style=bold, color=blue];
m4_1217 -> m4_1218  [key=0, style=solid];
m4_1218 -> m4_1219  [key=0, style=solid];
m4_1218 -> m4_321  [key=2, style=dotted];
m4_1218 -> m4_1220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1219 -> m4_1217  [key=0, style=bold, color=blue];
m4_2154 -> m4_2155  [key=0, style=solid];
m4_2155 -> m4_2154  [key=0, style=bold, color=blue];
m4_1620 -> m4_1667  [key=0, style=solid];
m4_1620 -> m4_1668  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1669  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1670  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1671  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1672  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1673  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1674  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1675  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1620 -> m4_1676  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1667 -> m4_1668  [key=0, style=solid];
m4_1668 -> m4_1669  [key=0, style=solid];
m4_1669 -> m4_1670  [key=0, style=solid];
m4_1670 -> m4_1671  [key=0, style=solid];
m4_1671 -> m4_1672  [key=0, style=solid];
m4_1672 -> m4_1673  [key=0, style=solid];
m4_1673 -> m4_1674  [key=0, style=solid];
m4_1674 -> m4_1675  [key=0, style=solid];
m4_1675 -> m4_1676  [key=0, style=solid];
m4_1676 -> m4_1677  [key=0, style=solid];
m4_1677 -> m4_1620  [key=0, style=bold, color=blue];
m4_2871 -> m4_2872  [key=0, style=solid];
m4_2872 -> m4_2873  [key=0, style=solid];
m4_2872 -> m4_174  [key=2, style=dotted];
m4_2872 -> m4_2877  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_2873 -> m4_2874  [key=0, style=solid];
m4_2873 -> m4_2884  [key=2, style=dotted];
m4_2873 -> m4_2875  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_2873 -> m4_2876  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_2877 -> m4_2878  [key=0, style=solid];
m4_2877 -> m4_178  [key=2, style=dotted];
m4_2874 -> m4_2875  [key=0, style=solid];
m4_2874 -> m4_2885  [key=2, style=dotted];
m4_2875 -> m4_2876  [key=0, style=solid];
m4_2875 -> m4_2886  [key=2, style=dotted];
m4_2876 -> m4_2877  [key=0, style=solid];
m4_2876 -> m4_2887  [key=2, style=dotted];
m4_2878 -> m4_2879  [key=0, style=solid];
m4_2878 -> m4_2888  [key=2, style=dotted];
m4_2878 -> m4_356  [key=2, style=dotted];
m4_2879 -> m4_2880  [key=0, style=solid];
m4_2879 -> m4_2889  [key=2, style=dotted];
m4_2879 -> m4_2882  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_2880 -> m4_2881  [key=0, style=solid];
m4_2882 -> m4_2883  [key=0, style=solid];
m4_2882 -> m4_184  [key=2, style=dotted];
m4_2882 -> m4_137  [key=2, style=dotted];
m4_2881 -> m4_2882  [key=0, style=solid];
m4_2881 -> m4_176  [key=2, style=dotted];
m4_2881 -> m4_2890  [key=2, style=dotted];
m4_2883 -> m4_2871  [key=0, style=bold, color=blue];
m4_407 -> m4_408  [key=0, style=solid];
m4_407 -> m4_27  [key=2, style=dotted];
m4_410 -> m4_23  [key=2, style=dotted];
m4_410 -> m4_411  [key=0, style=solid];
m4_410 -> m4_50  [key=2, style=dotted];
m4_410 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_410 -> m4_413  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_410 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_412 -> m4_23  [key=2, style=dotted];
m4_412 -> m4_51  [key=2, style=dotted];
m4_412 -> m4_413  [key=0, style=solid];
m4_412 -> m4_418  [key=2, style=dotted];
m4_409 -> m4_410  [key=0, style=solid];
m4_409 -> m4_414  [key=2, style=dotted];
m4_411 -> m4_412  [key=0, style=solid];
m4_411 -> m4_415  [key=2, style=dotted];
m4_411 -> m4_418  [key=2, style=dotted];
m4_408 -> m4_409  [key=0, style=solid];
m4_408 -> m4_411  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_408 -> m4_408  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_408 -> m4_404  [key=0, style=bold, color=blue];
m4_413 -> m4_407  [key=0, style=bold, color=blue];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_51  [key=2, style=dotted];
m4_413 -> m4_415  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_704 -> m4_705  [key=0, style=solid];
m4_704 -> m4_23  [key=2, style=dotted];
m4_705 -> m4_706  [key=0, style=solid];
m4_705 -> m4_23  [key=2, style=dotted];
m4_706 -> m4_707  [key=0, style=solid];
m4_706 -> m4_51  [key=2, style=dotted];
m4_706 -> m4_23  [key=2, style=dotted];
m4_707 -> m4_708  [key=0, style=solid];
m4_707 -> m4_27  [key=2, style=dotted];
m4_707 -> m4_700  [key=0, style=bold, color=blue];
m4_708 -> m4_709  [key=0, style=solid];
m4_708 -> m4_51  [key=2, style=dotted];
m4_1023 -> m4_1024  [key=0, style=solid];
m4_1024 -> m4_1025  [key=0, style=solid];
m4_1024 -> m4_1028  [key=2, style=dotted];
m4_1024 -> m4_3  [key=2, style=dotted];
m4_1025 -> m4_1026  [key=0, style=solid];
m4_1025 -> m4_24  [key=2, style=dotted];
m4_1026 -> m4_1027  [key=0, style=solid];
m4_1026 -> m4_27  [key=2, style=dotted];
m4_1027 -> m4_1023  [key=0, style=bold, color=blue];
m4_1967 -> m4_1968  [key=0, style=solid];
m4_1968 -> m4_1969  [key=0, style=solid];
m4_1968 -> m4_1985  [key=2, style=dotted];
m4_1968 -> m4_1970  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_1968 -> m4_1971  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_1968 -> m4_1976  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_1969 -> m4_1970  [key=0, style=solid];
m4_1970 -> m4_1971  [key=0, style=solid];
m4_1971 -> m4_1972  [key=0, style=solid];
m4_1976 -> m4_1977  [key=0, style=solid];
m4_1976 -> m4_24  [key=2, style=dotted];
m4_1972 -> m4_1973  [key=0, style=solid];
m4_1972 -> m4_1985  [key=2, style=dotted];
m4_1972 -> m4_1974  [key=1, style=dashed, color=darkseagreen4, label=martha];
m4_1972 -> m4_1975  [key=1, style=dashed, color=darkseagreen4, label=martha];
m4_1972 -> m4_1976  [key=1, style=dashed, color=darkseagreen4, label=martha];
m4_1973 -> m4_1974  [key=0, style=solid];
m4_1974 -> m4_1975  [key=0, style=solid];
m4_1975 -> m4_1976  [key=0, style=solid];
m4_1977 -> m4_1978  [key=0, style=solid];
m4_1977 -> m4_137  [key=2, style=dotted];
m4_1978 -> m4_1979  [key=0, style=solid];
m4_1978 -> m4_1978  [key=3, color=darkorchid, style=bold, label="Local variable string mikeString"];
m4_1979 -> m4_1980  [key=0, style=solid];
m4_1979 -> m4_25  [key=2, style=dotted];
m4_1980 -> m4_1981  [key=0, style=solid];
m4_1980 -> m4_1986  [key=2, style=dotted];
m4_1981 -> m4_1982  [key=0, style=solid];
m4_1981 -> m4_1981  [key=3, color=darkorchid, style=bold, label="Local variable string mikeFullDisclosureString"];
m4_1982 -> m4_1983  [key=0, style=solid];
m4_1982 -> m4_25  [key=2, style=dotted];
m4_1983 -> m4_1984  [key=0, style=solid];
m4_1983 -> m4_1986  [key=2, style=dotted];
m4_1984 -> m4_1967  [key=0, style=bold, color=blue];
m4_2303 -> m4_2304  [key=0, style=solid];
m4_2304 -> m4_2305  [key=0, style=solid];
m4_2305 -> m4_2303  [key=0, style=bold, color=blue];
m4_579 -> m4_580  [key=0, style=solid];
m4_579 -> m4_89  [key=2, style=dotted];
m4_579 -> m4_426  [key=2, style=dotted];
m4_580 -> m4_581  [key=0, style=solid];
m4_580 -> m4_593  [key=2, style=dotted];
m4_580 -> m4_583  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_580 -> m4_584  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_580 -> m4_585  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_580 -> m4_174  [key=2, style=dotted];
m4_581 -> m4_582  [key=0, style=solid];
m4_581 -> m4_594  [key=2, style=dotted];
m4_581 -> m4_583  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_581 -> m4_89  [key=2, style=dotted];
m4_584 -> m4_585  [key=0, style=solid];
m4_584 -> m4_339  [key=2, style=dotted];
m4_585 -> m4_586  [key=0, style=solid];
m4_585 -> m4_24  [key=2, style=dotted];
m4_585 -> m4_587  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_582 -> m4_583  [key=0, style=solid];
m4_582 -> m4_594  [key=2, style=dotted];
m4_582 -> m4_584  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_582 -> m4_575  [key=0, style=bold, color=blue];
m4_586 -> m4_587  [key=0, style=solid];
m4_586 -> m4_27  [key=2, style=dotted];
m4_586 -> m4_292  [key=2, style=dotted];
m4_586 -> m4_46  [key=2, style=dotted];
m4_586 -> m4_589  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_586 -> m4_590  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_587 -> m4_588  [key=0, style=solid];
m4_587 -> m4_25  [key=2, style=dotted];
m4_587 -> m4_589  [key=1, style=dashed, color=darkseagreen4, label=newName];
m4_587 -> m4_590  [key=1, style=dashed, color=darkseagreen4, label=newName];
m4_587 -> m4_591  [key=1, style=dashed, color=darkseagreen4, label=newName];
m4_587 -> m4_326  [key=2, style=dotted];
m4_587 -> m4_592  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_588 -> m4_589  [key=0, style=solid];
m4_588 -> m4_27  [key=2, style=dotted];
m4_588 -> m4_291  [key=2, style=dotted];
m4_588 -> m4_292  [key=2, style=dotted];
m4_588 -> m4_590  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_588 -> m4_591  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_589 -> m4_590  [key=0, style=solid];
m4_589 -> m4_27  [key=2, style=dotted];
m4_589 -> m4_591  [key=0, style=solid];
m4_589 -> m4_594  [key=2, style=dotted];
m4_590 -> m4_591  [key=0, style=solid];
m4_590 -> m4_27  [key=2, style=dotted];
m4_590 -> m4_589  [key=0, style=solid];
m4_590 -> m4_595  [key=2, style=dotted];
m4_591 -> m4_592  [key=0, style=solid];
m4_591 -> m4_27  [key=2, style=dotted];
m4_591 -> m4_596  [key=2, style=dotted];
m4_592 -> m4_579  [key=0, style=bold, color=blue];
m4_592 -> m4_328  [key=2, style=dotted];
m4_592 -> m4_593  [key=0, style=solid];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_174  [key=2, style=dotted];
m4_158 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_158 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_160 -> m4_100  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_160 -> m4_177  [key=2, style=dotted];
m4_164 -> m4_100  [key=2, style=dotted];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_51  [key=2, style=dotted];
m4_164 -> m4_180  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_1706  [key=2, style=dotted];
m4_159 -> m4_161  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_159 -> m4_175  [key=2, style=dotted];
m4_159 -> m4_176  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_174  [key=2, style=dotted];
m4_161 -> m4_178  [key=2, style=dotted];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_1706  [key=2, style=dotted];
m4_163 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_163 -> m4_181  [key=2, style=dotted];
m4_163 -> m4_182  [key=2, style=dotted];
m4_163 -> m4_183  [key=2, style=dotted];
m4_163 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_163 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_163 -> m4_167  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_163 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_163 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_174  [key=2, style=dotted];
m4_165 -> m4_181  [key=2, style=dotted];
m4_165 -> m4_182  [key=2, style=dotted];
m4_165 -> m4_183  [key=2, style=dotted];
m4_165 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_165 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_165 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_165 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_165 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_165 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_167 -> m4_87  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_137  [key=2, style=dotted];
m4_170 -> m4_87  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_172  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_23  [key=2, style=dotted];
m4_162 -> m4_179  [key=2, style=dotted];
m4_162 -> m4_180  [key=2, style=dotted];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_23  [key=2, style=dotted];
m4_166 -> m4_176  [key=2, style=dotted];
m4_166 -> m4_137  [key=2, style=dotted];
m4_168 -> m4_156  [key=2, style=dotted];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_137  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_23  [key=2, style=dotted];
m4_169 -> m4_27  [key=2, style=dotted];
m4_171 -> m4_156  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_170  [key=0, style=solid];
m4_171 -> m4_43  [key=2, style=dotted];
m4_171 -> m4_44  [key=2, style=dotted];
m4_171 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label=property];
m4_172 -> m4_23  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_184  [key=2, style=dotted];
m4_173 -> m4_158  [key=0, style=bold, color=blue];
m4_173 -> m4_125  [key=0, style=bold, color=blue];
m4_1559 -> m4_1560  [key=0, style=solid];
m4_1560 -> m4_1561  [key=0, style=solid];
m4_1560 -> m4_839  [key=2, style=dotted];
m4_1560 -> m4_1562  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1560 -> m4_1563  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1560 -> m4_1564  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1560 -> m4_1568  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1561 -> m4_1562  [key=0, style=solid];
m4_1561 -> m4_390  [key=2, style=dotted];
m4_1562 -> m4_1563  [key=0, style=solid];
m4_1563 -> m4_1564  [key=0, style=solid];
m4_1564 -> m4_1565  [key=0, style=solid];
m4_1568 -> m4_1569  [key=0, style=solid];
m4_1568 -> m4_1483  [key=2, style=dotted];
m4_1565 -> m4_1566  [key=0, style=solid];
m4_1565 -> m4_402  [key=2, style=dotted];
m4_1565 -> m4_403  [key=2, style=dotted];
m4_1565 -> m4_1568  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1565 -> m4_1574  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1566 -> m4_1567  [key=0, style=solid];
m4_1574 -> m4_1575  [key=0, style=solid];
m4_1574 -> m4_27  [key=2, style=dotted];
m4_1567 -> m4_1568  [key=0, style=solid];
m4_1567 -> m4_1570  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m4_1570 -> m4_1571  [key=0, style=solid];
m4_1570 -> m4_27  [key=2, style=dotted];
m4_1569 -> m4_1570  [key=0, style=solid];
m4_1569 -> m4_24  [key=2, style=dotted];
m4_1569 -> m4_1571  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1571 -> m4_1572  [key=0, style=solid];
m4_1571 -> m4_25  [key=2, style=dotted];
m4_1571 -> m4_1573  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1571 -> m4_1574  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1571 -> m4_1575  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1571 -> m4_1576  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1571 -> m4_1577  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1572 -> m4_1573  [key=0, style=solid];
m4_1572 -> m4_27  [key=2, style=dotted];
m4_1573 -> m4_1574  [key=0, style=solid];
m4_1573 -> m4_27  [key=2, style=dotted];
m4_1575 -> m4_1576  [key=0, style=solid];
m4_1575 -> m4_27  [key=2, style=dotted];
m4_1576 -> m4_1577  [key=0, style=solid];
m4_1576 -> m4_27  [key=2, style=dotted];
m4_1577 -> m4_1578  [key=0, style=solid];
m4_1577 -> m4_27  [key=2, style=dotted];
m4_1578 -> m4_1559  [key=0, style=bold, color=blue];
m4_2636 -> m4_2637  [key=0, style=solid];
m4_2637 -> m4_2638  [key=0, style=solid];
m4_2637 -> m4_2646  [key=2, style=dotted];
m4_2637 -> m4_2639  [key=1, style=dashed, color=darkseagreen4, label=b];
m4_2637 -> m4_2641  [key=1, style=dashed, color=darkseagreen4, label=b];
m4_2638 -> m4_2639  [key=0, style=solid];
m4_2639 -> m4_2640  [key=0, style=solid];
m4_2639 -> m4_2637  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.Aa a"];
m4_2641 -> m4_2642  [key=0, style=solid];
m4_2641 -> m4_51  [key=2, style=dotted];
m4_2641 -> m4_2643  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2640 -> m4_2641  [key=0, style=solid];
m4_2642 -> m4_2643  [key=0, style=solid];
m4_2642 -> m4_27  [key=2, style=dotted];
m4_2643 -> m4_2644  [key=0, style=solid];
m4_2643 -> m4_25  [key=2, style=dotted];
m4_2644 -> m4_2645  [key=0, style=solid];
m4_2644 -> m4_27  [key=2, style=dotted];
m4_2645 -> m4_2636  [key=0, style=bold, color=blue];
m4_761 -> m4_762  [key=0, style=solid];
m4_762 -> m4_763  [key=0, style=solid];
m4_762 -> m4_769  [key=2, style=dotted];
m4_762 -> m4_390  [key=2, style=dotted];
m4_763 -> m4_764  [key=0, style=solid];
m4_763 -> m4_24  [key=2, style=dotted];
m4_763 -> m4_765  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_764 -> m4_765  [key=0, style=solid];
m4_764 -> m4_27  [key=2, style=dotted];
m4_765 -> m4_766  [key=0, style=solid];
m4_765 -> m4_25  [key=2, style=dotted];
m4_765 -> m4_767  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_766 -> m4_767  [key=0, style=solid];
m4_766 -> m4_27  [key=2, style=dotted];
m4_767 -> m4_768  [key=0, style=solid];
m4_767 -> m4_390  [key=2, style=dotted];
m4_767 -> m4_27  [key=2, style=dotted];
m4_768 -> m4_761  [key=0, style=bold, color=blue];
m4_177 -> m4_87  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_2352 -> m4_2353  [key=0, style=solid];
m4_2353 -> m4_2354  [key=0, style=solid];
m4_2354 -> m4_2355  [key=0, style=solid];
m4_2354 -> m4_3  [key=2, style=dotted];
m4_2355 -> m4_2352  [key=0, style=bold, color=blue];
m4_703 -> m4_704  [key=0, style=solid];
m4_703 -> m4_705  [key=1, style=dashed, color=darkseagreen4, label=w2];
m4_703 -> m4_706  [key=1, style=dashed, color=darkseagreen4, label=w2];
m4_703 -> m4_77  [key=2, style=dotted];
m4_2206 -> m4_2207  [key=0, style=solid];
m4_2207 -> m4_2208  [key=0, style=solid];
m4_2208 -> m4_2206  [key=0, style=bold, color=blue];
m4_1800 -> m4_1801  [key=0, style=solid];
m4_1801 -> m4_1802  [key=0, style=solid];
m4_1801 -> m4_1803  [key=2, style=dotted];
m4_1802 -> m4_1800  [key=0, style=bold, color=blue];
m4_1389 -> m4_1390  [key=0, style=solid];
m4_1390 -> m4_1391  [key=0, style=solid];
m4_1390 -> m4_1394  [key=2, style=dotted];
m4_1391 -> m4_1392  [key=0, style=solid];
m4_1391 -> m4_24  [key=2, style=dotted];
m4_1392 -> m4_1393  [key=0, style=solid];
m4_1392 -> m4_27  [key=2, style=dotted];
m4_1393 -> m4_1389  [key=0, style=bold, color=blue];
m4_915 -> m4_916  [key=0, style=solid];
m4_916 -> m4_917  [key=0, style=solid];
m4_917 -> m4_918  [key=0, style=solid];
m4_917 -> m4_321  [key=2, style=dotted];
m4_917 -> m4_919  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_918 -> m4_915  [key=0, style=bold, color=blue];
m4_3492 -> m4_3493  [key=0, style=solid];
m4_3493 -> m4_3494  [key=0, style=solid];
m4_3494 -> m4_3492  [key=0, style=bold, color=blue];
m4_2462 -> m4_2463  [key=0, style=solid];
m4_2463 -> m4_2464  [key=0, style=solid];
m4_2463 -> m4_25  [key=2, style=dotted];
m4_2463 -> m4_2465  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_2464 -> m4_2465  [key=0, style=solid];
m4_2464 -> m4_27  [key=2, style=dotted];
m4_2465 -> m4_2466  [key=0, style=solid];
m4_2465 -> m4_27  [key=2, style=dotted];
m4_2466 -> m4_2462  [key=0, style=bold, color=blue];
m4_3680 -> m4_3681  [key=0, style=solid];
m4_3681 -> m4_3682  [key=0, style=solid];
m4_3682 -> m4_3680  [key=0, style=bold, color=blue];
m4_777 -> m4_778  [key=0, style=solid];
m4_778 -> m4_779  [key=0, style=solid];
m4_778 -> m4_321  [key=2, style=dotted];
m4_778 -> m4_780  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_778 -> m4_778  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_779 -> m4_777  [key=0, style=bold, color=blue];
m4_3655 -> m4_3656  [key=0, style=solid];
m4_3656 -> m4_3655  [key=0, style=bold, color=blue];
m4_3414 -> m4_3415  [key=0, style=solid];
m4_3415 -> m4_3416  [key=0, style=solid];
m4_3415 -> m4_3  [key=2, style=dotted];
m4_3415 -> m4_390  [key=2, style=dotted];
m4_3415 -> m4_402  [key=2, style=dotted];
m4_3415 -> m4_403  [key=2, style=dotted];
m4_3416 -> m4_3417  [key=0, style=solid];
m4_3416 -> m4_394  [key=2, style=dotted];
m4_3416 -> m4_3419  [key=2, style=dotted];
m4_3416 -> m4_906  [key=2, style=dotted];
m4_3417 -> m4_3418  [key=0, style=solid];
m4_3417 -> m4_27  [key=2, style=dotted];
m4_3418 -> m4_3414  [key=0, style=bold, color=blue];
m4_89 -> m4_82  [key=0, style=bold, color=blue];
m4_1429 -> m4_1430  [key=0, style=solid];
m4_1429 -> m4_1476  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m4_1430 -> m4_1431  [key=0, style=solid];
m4_1430 -> m4_418  [key=2, style=dotted];
m4_1431 -> m4_1429  [key=0, style=bold, color=blue];
m4_3698 -> m4_3699  [key=0, style=solid];
m4_3699 -> m4_3698  [key=0, style=bold, color=blue];
m4_27 -> m4_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_27 -> m4_25  [key=3, color=darkorchid, style=bold, label="Parameter variable string deserializeRootElementName"];
m4_27 -> m4_492  [key=3, color=darkorchid, style=bold, label="Parameter variable string deserializeRootElementName"];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_27 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_27 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_27 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_27 -> m4_490  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_27 -> m4_34  [key=3, color=darkorchid, style=bold, label="method methodReturn XmlNode DeserializeXmlNode"];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_27  [key=0, style=bold, color=blue];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_200  [key=2, style=dotted];
m4_246 -> m4_248  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_246 -> m4_249  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_246 -> m4_250  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_246 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_1264 -> m4_1265  [key=0, style=solid];
m4_1265 -> m4_1266  [key=0, style=solid];
m4_1265 -> m4_1277  [key=2, style=dotted];
m4_1265 -> m4_1267  [key=1, style=dashed, color=darkseagreen4, label=f];
m4_1265 -> m4_1268  [key=1, style=dashed, color=darkseagreen4, label=f];
m4_1265 -> m4_1269  [key=1, style=dashed, color=darkseagreen4, label=f];
m4_1266 -> m4_1267  [key=0, style=solid];
m4_1266 -> m4_1278  [key=2, style=dotted];
m4_1266 -> m4_339  [key=2, style=dotted];
m4_1267 -> m4_1268  [key=0, style=solid];
m4_1267 -> m4_1278  [key=2, style=dotted];
m4_1267 -> m4_339  [key=2, style=dotted];
m4_1268 -> m4_1269  [key=0, style=solid];
m4_1268 -> m4_1278  [key=2, style=dotted];
m4_1268 -> m4_339  [key=2, style=dotted];
m4_1269 -> m4_1270  [key=0, style=solid];
m4_1269 -> m4_24  [key=2, style=dotted];
m4_1269 -> m4_1271  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1270 -> m4_1271  [key=0, style=solid];
m4_1270 -> m4_27  [key=2, style=dotted];
m4_1271 -> m4_1272  [key=0, style=solid];
m4_1271 -> m4_25  [key=2, style=dotted];
m4_1271 -> m4_1273  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m4_1271 -> m4_1274  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m4_1271 -> m4_1275  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m4_1272 -> m4_1273  [key=0, style=solid];
m4_1272 -> m4_27  [key=2, style=dotted];
m4_1273 -> m4_1274  [key=0, style=solid];
m4_1273 -> m4_27  [key=2, style=dotted];
m4_1274 -> m4_1275  [key=0, style=solid];
m4_1274 -> m4_27  [key=2, style=dotted];
m4_1275 -> m4_1276  [key=0, style=solid];
m4_1275 -> m4_27  [key=2, style=dotted];
m4_1276 -> m4_1264  [key=0, style=bold, color=blue];
m4_1525 -> m4_1526  [key=0, style=solid];
m4_1525 -> m4_1527  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1528  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1529  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1530  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1531  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1532  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1533  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1534  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1535  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1536  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1537  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1538  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1539  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1540  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1541  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1542  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1525 -> m4_1543  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1526 -> m4_1527  [key=0, style=solid];
m4_1526 -> m4_1545  [key=2, style=dotted];
m4_1527 -> m4_1528  [key=0, style=solid];
m4_1527 -> m4_1546  [key=2, style=dotted];
m4_1528 -> m4_1529  [key=0, style=solid];
m4_1528 -> m4_1545  [key=2, style=dotted];
m4_1529 -> m4_1530  [key=0, style=solid];
m4_1529 -> m4_1545  [key=2, style=dotted];
m4_1530 -> m4_1531  [key=0, style=solid];
m4_1530 -> m4_1545  [key=2, style=dotted];
m4_1531 -> m4_1532  [key=0, style=solid];
m4_1531 -> m4_1545  [key=2, style=dotted];
m4_1532 -> m4_1533  [key=0, style=solid];
m4_1532 -> m4_1547  [key=2, style=dotted];
m4_1533 -> m4_1534  [key=0, style=solid];
m4_1533 -> m4_1548  [key=2, style=dotted];
m4_1534 -> m4_1535  [key=0, style=solid];
m4_1534 -> m4_1549  [key=2, style=dotted];
m4_1535 -> m4_1536  [key=0, style=solid];
m4_1535 -> m4_1550  [key=2, style=dotted];
m4_1536 -> m4_1537  [key=0, style=solid];
m4_1536 -> m4_1551  [key=2, style=dotted];
m4_1537 -> m4_1538  [key=0, style=solid];
m4_1537 -> m4_1552  [key=2, style=dotted];
m4_1538 -> m4_1539  [key=0, style=solid];
m4_1538 -> m4_1553  [key=2, style=dotted];
m4_1539 -> m4_1540  [key=0, style=solid];
m4_1539 -> m4_1554  [key=2, style=dotted];
m4_1540 -> m4_1541  [key=0, style=solid];
m4_1540 -> m4_1555  [key=2, style=dotted];
m4_1541 -> m4_1542  [key=0, style=solid];
m4_1541 -> m4_1556  [key=2, style=dotted];
m4_1542 -> m4_1543  [key=0, style=solid];
m4_1542 -> m4_1557  [key=2, style=dotted];
m4_1543 -> m4_1544  [key=0, style=solid];
m4_1543 -> m4_1558  [key=2, style=dotted];
m4_1544 -> m4_1525  [key=0, style=bold, color=blue];
m4_326 -> m4_327  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_337  [key=2, style=dotted];
m4_328 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=a2];
m4_3134 -> m4_3135  [key=0, style=solid];
m4_3134 -> m4_3131  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m4_3135 -> m4_3136  [key=0, style=solid];
m4_3135 -> m4_3131  [key=2, style=dotted];
m4_3136 -> m4_3134  [key=0, style=bold, color=blue];
m4_439 -> m4_440  [key=0, style=solid];
m4_439 -> m4_27  [key=2, style=dotted];
m4_442 -> m4_23  [key=2, style=dotted];
m4_442 -> m4_443  [key=0, style=solid];
m4_442 -> m4_433  [key=0, style=bold, color=blue];
m4_444 -> m4_23  [key=2, style=dotted];
m4_444 -> m4_51  [key=2, style=dotted];
m4_444 -> m4_445  [key=0, style=solid];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_414  [key=2, style=dotted];
m4_441 -> m4_27  [key=2, style=dotted];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_443  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_440 -> m4_440  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_440 -> m4_444  [key=2, style=dotted];
m4_445 -> m4_439  [key=0, style=bold, color=blue];
m4_445 -> m4_446  [key=0, style=solid];
m4_2446 -> m4_2447  [key=0, style=solid];
m4_2447 -> m4_2448  [key=0, style=solid];
m4_2447 -> m4_3  [key=2, style=dotted];
m4_2448 -> m4_2446  [key=0, style=bold, color=blue];
m4_746 -> m4_747  [key=0, style=solid];
m4_747 -> m4_748  [key=0, style=solid];
m4_747 -> m4_750  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m4_747 -> m4_740  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m4_748 -> m4_749  [key=0, style=solid];
m4_748 -> m4_760  [key=2, style=dotted];
m4_748 -> m4_87  [key=2, style=dotted];
m4_750 -> m4_751  [key=0, style=solid];
m4_750 -> m4_27  [key=2, style=dotted];
m4_750 -> m4_23  [key=2, style=dotted];
m4_749 -> m4_750  [key=0, style=solid];
m4_749 -> m4_51  [key=2, style=dotted];
m4_749 -> m4_751  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_749 -> m4_156  [key=2, style=dotted];
m4_751 -> m4_752  [key=0, style=solid];
m4_751 -> m4_25  [key=2, style=dotted];
m4_751 -> m4_746  [key=0, style=bold, color=blue];
m4_752 -> m4_753  [key=0, style=solid];
m4_752 -> m4_27  [key=2, style=dotted];
m4_752 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_554  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_752 -> m4_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest"];
m4_753 -> m4_754  [key=0, style=solid];
m4_753 -> m4_756  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m4_753 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_754 -> m4_755  [key=0, style=solid];
m4_754 -> m4_760  [key=2, style=dotted];
m4_754 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_756 -> m4_757  [key=0, style=solid];
m4_756 -> m4_27  [key=2, style=dotted];
m4_756 -> m4_534  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_755 -> m4_756  [key=0, style=solid];
m4_755 -> m4_51  [key=2, style=dotted];
m4_755 -> m4_757  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_755 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_757 -> m4_758  [key=0, style=solid];
m4_757 -> m4_25  [key=2, style=dotted];
m4_757 -> m4_557  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_758 -> m4_759  [key=0, style=solid];
m4_758 -> m4_27  [key=2, style=dotted];
m4_759 -> m4_746  [key=0, style=bold, color=blue];
m4_3590 -> m4_3591  [key=0, style=solid];
m4_3591 -> m4_3592  [key=0, style=solid];
m4_3591 -> m4_3116  [key=2, style=dotted];
m4_3592 -> m4_3590  [key=0, style=bold, color=blue];
m4_3425 -> m4_3426  [key=0, style=solid];
m4_3426 -> m4_3427  [key=0, style=solid];
m4_3426 -> m4_3  [key=2, style=dotted];
m4_3426 -> m4_390  [key=2, style=dotted];
m4_3426 -> m4_402  [key=2, style=dotted];
m4_3426 -> m4_403  [key=2, style=dotted];
m4_3426 -> m4_3430  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_3427 -> m4_3428  [key=0, style=solid];
m4_3427 -> m4_457  [key=2, style=dotted];
m4_3427 -> m4_3434  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_3430 -> m4_3431  [key=0, style=solid];
m4_3430 -> m4_2600  [key=2, style=dotted];
m4_3428 -> m4_3429  [key=0, style=solid];
m4_3428 -> m4_2516  [key=2, style=dotted];
m4_3428 -> m4_3430  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3428 -> m4_3431  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3428 -> m4_3432  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3428 -> m4_3433  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3434 -> m4_3435  [key=0, style=solid];
m4_3434 -> m4_2520  [key=2, style=dotted];
m4_3429 -> m4_3430  [key=0, style=solid];
m4_3429 -> m4_394  [key=2, style=dotted];
m4_3429 -> m4_3419  [key=2, style=dotted];
m4_3429 -> m4_2721  [key=2, style=dotted];
m4_3431 -> m4_3432  [key=0, style=solid];
m4_3431 -> m4_1693  [key=2, style=dotted];
m4_3432 -> m4_3433  [key=0, style=solid];
m4_3432 -> m4_27  [key=2, style=dotted];
m4_3433 -> m4_3434  [key=0, style=solid];
m4_3433 -> m4_27  [key=2, style=dotted];
m4_3435 -> m4_3436  [key=0, style=solid];
m4_3435 -> m4_27  [key=2, style=dotted];
m4_3436 -> m4_3425  [key=0, style=bold, color=blue];
m4_1134 -> m4_1135  [key=0, style=solid];
m4_1135 -> m4_1136  [key=0, style=solid];
m4_1135 -> m4_1139  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1135 -> m4_1128  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1136 -> m4_1137  [key=0, style=solid];
m4_1136 -> m4_321  [key=2, style=dotted];
m4_1136 -> m4_1138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1137 -> m4_1134  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid];
m4_2372 -> m4_2373  [key=0, style=solid];
m4_2373 -> m4_2374  [key=0, style=solid];
m4_2373 -> m4_2368  [key=2, style=dotted];
m4_2373 -> m4_2375  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2373 -> m4_2376  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2373 -> m4_2379  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2373 -> m4_2380  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2374 -> m4_2375  [key=0, style=solid];
m4_2374 -> m4_2384  [key=2, style=dotted];
m4_2375 -> m4_2376  [key=0, style=solid];
m4_2375 -> m4_2384  [key=2, style=dotted];
m4_2376 -> m4_2377  [key=0, style=solid];
m4_2376 -> m4_24  [key=2, style=dotted];
m4_2376 -> m4_2378  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2379 -> m4_2380  [key=0, style=solid];
m4_2379 -> m4_27  [key=2, style=dotted];
m4_2380 -> m4_2381  [key=0, style=solid];
m4_2380 -> m4_27  [key=2, style=dotted];
m4_2377 -> m4_2378  [key=0, style=solid];
m4_2377 -> m4_27  [key=2, style=dotted];
m4_2378 -> m4_2379  [key=0, style=solid];
m4_2378 -> m4_25  [key=2, style=dotted];
m4_2378 -> m4_2380  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2378 -> m4_2381  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2378 -> m4_2382  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2381 -> m4_2382  [key=0, style=solid];
m4_2381 -> m4_27  [key=2, style=dotted];
m4_2382 -> m4_2383  [key=0, style=solid];
m4_2382 -> m4_27  [key=2, style=dotted];
m4_2383 -> m4_2372  [key=0, style=bold, color=blue];
m4_392 -> m4_373  [key=0, style=bold, color=blue];
m4_1621 -> m4_1622  [key=0, style=solid];
m4_1622 -> m4_1623  [key=0, style=solid];
m4_1622 -> m4_25  [key=2, style=dotted];
m4_1622 -> m4_1624  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_1622 -> m4_1625  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_1622 -> m4_1626  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_1622 -> m4_1627  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_1622 -> m4_1628  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_1622 -> m4_1629  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_1622 -> m4_1630  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_1623 -> m4_1624  [key=0, style=solid];
m4_1623 -> m4_1651  [key=2, style=dotted];
m4_1623 -> m4_1652  [key=2, style=dotted];
m4_1623 -> m4_27  [key=2, style=dotted];
m4_1624 -> m4_1625  [key=0, style=solid];
m4_1624 -> m4_1651  [key=2, style=dotted];
m4_1624 -> m4_1652  [key=2, style=dotted];
m4_1624 -> m4_27  [key=2, style=dotted];
m4_1625 -> m4_1626  [key=0, style=solid];
m4_1625 -> m4_1653  [key=2, style=dotted];
m4_1625 -> m4_1652  [key=2, style=dotted];
m4_1625 -> m4_27  [key=2, style=dotted];
m4_1626 -> m4_1627  [key=0, style=solid];
m4_1626 -> m4_1653  [key=2, style=dotted];
m4_1626 -> m4_1652  [key=2, style=dotted];
m4_1626 -> m4_27  [key=2, style=dotted];
m4_1627 -> m4_1628  [key=0, style=solid];
m4_1627 -> m4_1653  [key=2, style=dotted];
m4_1627 -> m4_1652  [key=2, style=dotted];
m4_1627 -> m4_27  [key=2, style=dotted];
m4_1628 -> m4_1629  [key=0, style=solid];
m4_1628 -> m4_1653  [key=2, style=dotted];
m4_1628 -> m4_1652  [key=2, style=dotted];
m4_1628 -> m4_27  [key=2, style=dotted];
m4_1629 -> m4_1630  [key=0, style=solid];
m4_1629 -> m4_1653  [key=2, style=dotted];
m4_1629 -> m4_1652  [key=2, style=dotted];
m4_1629 -> m4_27  [key=2, style=dotted];
m4_1630 -> m4_1631  [key=0, style=solid];
m4_1630 -> m4_1653  [key=2, style=dotted];
m4_1630 -> m4_1652  [key=2, style=dotted];
m4_1630 -> m4_27  [key=2, style=dotted];
m4_1631 -> m4_1632  [key=0, style=solid];
m4_1631 -> m4_25  [key=2, style=dotted];
m4_1631 -> m4_1633  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1634  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1635  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1636  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1637  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1638  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1639  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1640  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1641  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1642  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1643  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1644  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1645  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1646  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1647  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1648  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1631 -> m4_1649  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_1632 -> m4_1633  [key=0, style=solid];
m4_1632 -> m4_1651  [key=2, style=dotted];
m4_1632 -> m4_1652  [key=2, style=dotted];
m4_1632 -> m4_27  [key=2, style=dotted];
m4_1633 -> m4_1634  [key=0, style=solid];
m4_1633 -> m4_1651  [key=2, style=dotted];
m4_1633 -> m4_1652  [key=2, style=dotted];
m4_1633 -> m4_27  [key=2, style=dotted];
m4_1634 -> m4_1635  [key=0, style=solid];
m4_1634 -> m4_1653  [key=2, style=dotted];
m4_1634 -> m4_1652  [key=2, style=dotted];
m4_1634 -> m4_27  [key=2, style=dotted];
m4_1635 -> m4_1636  [key=0, style=solid];
m4_1635 -> m4_1653  [key=2, style=dotted];
m4_1635 -> m4_1652  [key=2, style=dotted];
m4_1635 -> m4_27  [key=2, style=dotted];
m4_1636 -> m4_1637  [key=0, style=solid];
m4_1636 -> m4_1653  [key=2, style=dotted];
m4_1636 -> m4_1652  [key=2, style=dotted];
m4_1636 -> m4_27  [key=2, style=dotted];
m4_1637 -> m4_1638  [key=0, style=solid];
m4_1637 -> m4_1653  [key=2, style=dotted];
m4_1637 -> m4_1652  [key=2, style=dotted];
m4_1637 -> m4_27  [key=2, style=dotted];
m4_1638 -> m4_1639  [key=0, style=solid];
m4_1638 -> m4_1653  [key=2, style=dotted];
m4_1638 -> m4_1652  [key=2, style=dotted];
m4_1638 -> m4_27  [key=2, style=dotted];
m4_1639 -> m4_1640  [key=0, style=solid];
m4_1639 -> m4_1653  [key=2, style=dotted];
m4_1639 -> m4_1652  [key=2, style=dotted];
m4_1639 -> m4_27  [key=2, style=dotted];
m4_1640 -> m4_1641  [key=0, style=solid];
m4_1640 -> m4_27  [key=2, style=dotted];
m4_1641 -> m4_1642  [key=0, style=solid];
m4_1641 -> m4_27  [key=2, style=dotted];
m4_1642 -> m4_1643  [key=0, style=solid];
m4_1642 -> m4_27  [key=2, style=dotted];
m4_1643 -> m4_1644  [key=0, style=solid];
m4_1643 -> m4_27  [key=2, style=dotted];
m4_1644 -> m4_1645  [key=0, style=solid];
m4_1644 -> m4_1653  [key=2, style=dotted];
m4_1644 -> m4_1652  [key=2, style=dotted];
m4_1644 -> m4_27  [key=2, style=dotted];
m4_1645 -> m4_1646  [key=0, style=solid];
m4_1645 -> m4_1653  [key=2, style=dotted];
m4_1645 -> m4_1652  [key=2, style=dotted];
m4_1645 -> m4_27  [key=2, style=dotted];
m4_1646 -> m4_1647  [key=0, style=solid];
m4_1646 -> m4_27  [key=2, style=dotted];
m4_1647 -> m4_1648  [key=0, style=solid];
m4_1647 -> m4_1653  [key=2, style=dotted];
m4_1647 -> m4_1652  [key=2, style=dotted];
m4_1647 -> m4_27  [key=2, style=dotted];
m4_1648 -> m4_1649  [key=0, style=solid];
m4_1648 -> m4_1653  [key=2, style=dotted];
m4_1648 -> m4_1652  [key=2, style=dotted];
m4_1648 -> m4_27  [key=2, style=dotted];
m4_1649 -> m4_1650  [key=0, style=solid];
m4_1649 -> m4_1653  [key=2, style=dotted];
m4_1649 -> m4_1652  [key=2, style=dotted];
m4_1649 -> m4_27  [key=2, style=dotted];
m4_1650 -> m4_1621  [key=0, style=bold, color=blue];
m4_2149 -> m4_2150  [key=0, style=solid];
m4_2150 -> m4_2149  [key=0, style=bold, color=blue];
m4_156 -> m4_148  [key=0, style=bold, color=blue];
m4_244 -> m4_245  [key=0, style=solid];
m4_126 -> m4_88  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_23  [key=2, style=dotted];
m4_125 -> m4_158  [key=0, style=solid];
m4_125 -> m4_159  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_125 -> m4_160  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_125 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_125 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_125 -> m4_116  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m4_125 -> m4_139  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m4_125 -> m4_149  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_77  [key=2, style=dotted];
m4_127 -> m4_136  [key=2, style=dotted];
m4_127 -> m4_129  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_127 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_127 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_127 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_51  [key=2, style=dotted];
m4_128 -> m4_23  [key=2, style=dotted];
m4_128 -> m4_129  [key=0, style=solid];
m4_129 -> m4_119  [key=0, style=bold, color=blue];
m4_129 -> m4_130  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid];
m4_24 -> m4_304  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_333  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_341  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_456  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_466  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_27  [key=3, color=darkorchid, style=bold, label="method methodReturn XmlNode DeserializeXmlNode"];
m4_24 -> m4_254  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_311  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_347  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_365  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_475  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_480  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_24 -> m4_553  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_3581 -> m4_3582  [key=0, style=solid];
m4_3582 -> m4_3583  [key=0, style=solid];
m4_3582 -> m4_50  [key=2, style=dotted];
m4_3583 -> m4_3584  [key=0, style=solid];
m4_3583 -> m4_3564  [key=2, style=dotted];
m4_3584 -> m4_3585  [key=0, style=solid];
m4_3584 -> m4_24  [key=2, style=dotted];
m4_3585 -> m4_3586  [key=0, style=solid];
m4_3585 -> m4_27  [key=2, style=dotted];
m4_3586 -> m4_3581  [key=0, style=bold, color=blue];
m4_866 -> m4_867  [key=0, style=solid];
m4_867 -> m4_868  [key=0, style=solid];
m4_867 -> m4_867  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_868 -> m4_869  [key=0, style=solid];
m4_868 -> m4_25  [key=2, style=dotted];
m4_868 -> m4_870  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_868 -> m4_871  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_868 -> m4_872  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_868 -> m4_873  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_869 -> m4_870  [key=0, style=solid];
m4_869 -> m4_864  [key=2, style=dotted];
m4_870 -> m4_871  [key=0, style=solid];
m4_870 -> m4_27  [key=2, style=dotted];
m4_871 -> m4_872  [key=0, style=solid];
m4_871 -> m4_27  [key=2, style=dotted];
m4_872 -> m4_873  [key=0, style=solid];
m4_872 -> m4_27  [key=2, style=dotted];
m4_873 -> m4_874  [key=0, style=solid];
m4_873 -> m4_27  [key=2, style=dotted];
m4_874 -> m4_866  [key=0, style=bold, color=blue];
m4_671 -> m4_672  [key=0, style=solid];
m4_671 -> m4_1706  [key=2, style=dotted];
m4_671 -> m4_673  [key=1, style=dashed, color=darkseagreen4, label=document];
m4_493 -> m4_494  [key=0, style=solid];
m4_493 -> m4_495  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_493 -> m4_318  [key=2, style=dotted];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_497  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_494 -> m4_484  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_494 -> m4_494  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_495 -> m4_496  [key=0, style=solid];
m4_495 -> m4_456  [key=2, style=dotted];
m4_495 -> m4_497  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_495 -> m4_89  [key=2, style=dotted];
m4_497 -> m4_498  [key=0, style=solid];
m4_497 -> m4_462  [key=2, style=dotted];
m4_497 -> m4_501  [key=2, style=dotted];
m4_497 -> m4_499  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_497 -> m4_497  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXmlJson"];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_498  [key=1, style=dashed, color=darkseagreen4, label=xmlJson];
m4_496 -> m4_0  [key=2, style=dotted];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_27  [key=2, style=dotted];
m4_498 -> m4_89  [key=2, style=dotted];
m4_499 -> m4_500  [key=0, style=solid];
m4_499 -> m4_27  [key=2, style=dotted];
m4_499 -> m4_486  [key=0, style=bold, color=blue];
m4_500 -> m4_493  [key=0, style=bold, color=blue];
m4_894 -> m4_895  [key=0, style=solid];
m4_895 -> m4_896  [key=0, style=solid];
m4_895 -> m4_905  [key=2, style=dotted];
m4_895 -> m4_897  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_895 -> m4_898  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_895 -> m4_899  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_895 -> m4_900  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_895 -> m4_902  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_896 -> m4_897  [key=0, style=solid];
m4_897 -> m4_898  [key=0, style=solid];
m4_898 -> m4_899  [key=0, style=solid];
m4_899 -> m4_900  [key=0, style=solid];
m4_900 -> m4_901  [key=0, style=solid];
m4_900 -> m4_24  [key=2, style=dotted];
m4_902 -> m4_903  [key=0, style=solid];
m4_902 -> m4_394  [key=2, style=dotted];
m4_902 -> m4_906  [key=2, style=dotted];
m4_901 -> m4_902  [key=0, style=solid];
m4_901 -> m4_27  [key=2, style=dotted];
m4_903 -> m4_904  [key=0, style=solid];
m4_903 -> m4_27  [key=2, style=dotted];
m4_904 -> m4_894  [key=0, style=bold, color=blue];
m4_574 -> m4_575  [key=0, style=solid];
m4_574 -> m4_25  [key=2, style=dotted];
m4_574 -> m4_576  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_574 -> m4_577  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_620 -> m4_621  [key=0, style=solid];
m4_572 -> m4_573  [key=0, style=solid];
m4_390 -> m4_391  [key=0, style=solid];
m4_3072 -> m4_3073  [key=0, style=solid];
m4_3073 -> m4_3074  [key=0, style=solid];
m4_3073 -> m4_25  [key=2, style=dotted];
m4_3073 -> m4_3075  [key=1, style=dashed, color=darkseagreen4, label=uris];
m4_3074 -> m4_3075  [key=0, style=solid];
m4_3074 -> m4_27  [key=2, style=dotted];
m4_3075 -> m4_3076  [key=0, style=solid];
m4_3075 -> m4_1015  [key=2, style=dotted];
m4_3075 -> m4_27  [key=2, style=dotted];
m4_3076 -> m4_3077  [key=0, style=solid];
m4_3076 -> m4_25  [key=2, style=dotted];
m4_3077 -> m4_3078  [key=0, style=solid];
m4_3077 -> m4_864  [key=2, style=dotted];
m4_3078 -> m4_3079  [key=0, style=solid];
m4_3078 -> m4_3085  [key=2, style=dotted];
m4_3078 -> m4_3080  [key=1, style=dashed, color=darkseagreen4, label=i1];
m4_3079 -> m4_3080  [key=0, style=solid];
m4_3079 -> m4_1015  [key=2, style=dotted];
m4_3080 -> m4_3081  [key=0, style=solid];
m4_3080 -> m4_27  [key=2, style=dotted];
m4_3081 -> m4_3082  [key=0, style=solid];
m4_3081 -> m4_25  [key=2, style=dotted];
m4_3081 -> m4_3083  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_3082 -> m4_3083  [key=0, style=solid];
m4_3082 -> m4_864  [key=2, style=dotted];
m4_3083 -> m4_3084  [key=0, style=solid];
m4_3083 -> m4_3085  [key=2, style=dotted];
m4_3083 -> m4_27  [key=2, style=dotted];
m4_3084 -> m4_3072  [key=0, style=bold, color=blue];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_426  [key=2, style=dotted];
m4_420 -> m4_421  [key=0, style=solid];
m4_420 -> m4_216  [key=2, style=dotted];
m4_420 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_420 -> m4_89  [key=2, style=dotted];
m4_420 -> m4_426  [key=2, style=dotted];
m4_421 -> m4_422  [key=0, style=solid];
m4_421 -> m4_51  [key=2, style=dotted];
m4_421 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_421 -> m4_415  [key=2, style=dotted];
m4_423 -> m4_424  [key=0, style=solid];
m4_423 -> m4_432  [key=2, style=dotted];
m4_423 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_423 -> m4_425  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_423 -> m4_426  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_423 -> m4_427  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_423 -> m4_428  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_423 -> m4_429  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_423 -> m4_430  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_423 -> m4_174  [key=2, style=dotted];
m4_422 -> m4_423  [key=0, style=solid];
m4_422 -> m4_27  [key=2, style=dotted];
m4_422 -> m4_89  [key=2, style=dotted];
m4_422 -> m4_51  [key=2, style=dotted];
m4_422 -> m4_426  [key=2, style=dotted];
m4_424 -> m4_425  [key=0, style=solid];
m4_424 -> m4_27  [key=2, style=dotted];
m4_424 -> m4_427  [key=2, style=dotted];
m4_425 -> m4_426  [key=0, style=solid];
m4_425 -> m4_27  [key=2, style=dotted];
m4_425 -> m4_416  [key=0, style=bold, color=blue];
m4_426 -> m4_427  [key=0, style=solid];
m4_426 -> m4_27  [key=2, style=dotted];
m4_427 -> m4_428  [key=0, style=solid];
m4_427 -> m4_27  [key=2, style=dotted];
m4_428 -> m4_429  [key=0, style=solid];
m4_428 -> m4_27  [key=2, style=dotted];
m4_429 -> m4_430  [key=0, style=solid];
m4_429 -> m4_27  [key=2, style=dotted];
m4_429 -> m4_435  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_429 -> m4_432  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_429 -> m4_417  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_27  [key=2, style=dotted];
m4_430 -> m4_434  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m4_430 -> m4_437  [key=2, style=dotted];
m4_431 -> m4_419  [key=0, style=bold, color=blue];
m4_431 -> m4_89  [key=2, style=dotted];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_426  [key=2, style=dotted];
m4_1895 -> m4_1896  [key=0, style=solid];
m4_1896 -> m4_1897  [key=0, style=solid];
m4_1896 -> m4_1896  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1897 -> m4_1898  [key=0, style=solid];
m4_1897 -> m4_25  [key=2, style=dotted];
m4_1897 -> m4_1899  [key=1, style=dashed, color=darkseagreen4, label=cc];
m4_1897 -> m4_1900  [key=1, style=dashed, color=darkseagreen4, label=cc];
m4_1898 -> m4_1899  [key=0, style=solid];
m4_1898 -> m4_27  [key=2, style=dotted];
m4_1899 -> m4_1900  [key=0, style=solid];
m4_1899 -> m4_27  [key=2, style=dotted];
m4_1900 -> m4_1901  [key=0, style=solid];
m4_1900 -> m4_27  [key=2, style=dotted];
m4_1901 -> m4_1895  [key=0, style=bold, color=blue];
m4_739 -> m4_740  [key=0, style=solid];
m4_739 -> m4_727  [key=0, style=bold, color=blue];
m4_742 -> m4_100  [key=2, style=dotted];
m4_742 -> m4_743  [key=0, style=solid];
m4_742 -> m4_742  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_740 -> m4_742  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m4_740 -> m4_740  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m4_740 -> m4_741  [key=0, style=solid];
m4_741 -> m4_742  [key=0, style=solid];
m4_741 -> m4_1706  [key=2, style=dotted];
m4_741 -> m4_743  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_743 -> m4_744  [key=0, style=solid];
m4_743 -> m4_174  [key=2, style=dotted];
m4_743 -> m4_25  [key=2, style=dotted];
m4_744 -> m4_745  [key=0, style=solid];
m4_744 -> m4_23  [key=2, style=dotted];
m4_744 -> m4_27  [key=2, style=dotted];
m4_745 -> m4_739  [key=0, style=bold, color=blue];
m4_745 -> m4_741  [key=0, style=bold, color=blue];
m4_185 -> m4_186  [key=0, style=solid];
m4_187 -> m4_23  [key=2, style=dotted];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_185  [key=0, style=bold, color=blue];
m4_189 -> m4_23  [key=2, style=dotted];
m4_189 -> m4_51  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_186 -> m4_191  [key=2, style=dotted];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_188 -> m4_157  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_190 -> m4_185  [key=0, style=bold, color=blue];
m4_190 -> m4_188  [key=0, style=bold, color=blue];
m4_2449 -> m4_2450  [key=0, style=solid];
m4_2450 -> m4_2451  [key=0, style=solid];
m4_2450 -> m4_2446  [key=2, style=dotted];
m4_2450 -> m4_2453  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m4_2450 -> m4_2454  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m4_2450 -> m4_2457  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m4_2451 -> m4_2454  [key=0, style=solid];
m4_2451 -> m4_1413  [key=2, style=dotted];
m4_2453 -> m4_2454  [key=0, style=solid];
m4_2453 -> m4_106  [key=2, style=dotted];
m4_2454 -> m4_2455  [key=0, style=solid];
m4_2454 -> m4_51  [key=2, style=dotted];
m4_2457 -> m4_2458  [key=0, style=solid];
m4_2457 -> m4_24  [key=2, style=dotted];
m4_2452 -> m4_2453  [key=0, style=solid];
m4_2455 -> m4_2456  [key=0, style=solid];
m4_2455 -> m4_25  [key=2, style=dotted];
m4_2456 -> m4_2457  [key=0, style=solid];
m4_2456 -> m4_2461  [key=2, style=dotted];
m4_2456 -> m4_27  [key=2, style=dotted];
m4_2458 -> m4_2459  [key=0, style=solid];
m4_2458 -> m4_25  [key=2, style=dotted];
m4_2459 -> m4_2460  [key=0, style=solid];
m4_2459 -> m4_2461  [key=2, style=dotted];
m4_2459 -> m4_27  [key=2, style=dotted];
m4_2460 -> m4_2449  [key=0, style=bold, color=blue];
m4_2440 -> m4_2441  [key=0, style=solid];
m4_2441 -> m4_2442  [key=0, style=solid];
m4_2441 -> m4_2445  [key=2, style=dotted];
m4_2442 -> m4_2443  [key=0, style=solid];
m4_2442 -> m4_24  [key=2, style=dotted];
m4_2443 -> m4_2444  [key=0, style=solid];
m4_2443 -> m4_27  [key=2, style=dotted];
m4_2444 -> m4_2440  [key=0, style=bold, color=blue];
m4_593 -> m4_585  [key=0, style=bold, color=blue];
m4_393 -> m4_394  [key=0, style=solid];
m4_395 -> m4_196  [key=2, style=dotted];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_394 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_394 -> m4_395  [key=0, style=solid];
m4_394 -> m4_394  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_396 -> m4_393  [key=0, style=bold, color=blue];
m4_396 -> m4_397  [key=0, style=solid];
m4_1694 -> m4_1695  [key=0, style=solid];
m4_1695 -> m4_1696  [key=0, style=solid];
m4_1695 -> m4_1705  [key=2, style=dotted];
m4_1695 -> m4_1698  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_1695 -> m4_1699  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_1695 -> m4_1703  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_1696 -> m4_1697  [key=0, style=solid];
m4_1696 -> m4_1706  [key=2, style=dotted];
m4_1696 -> m4_1698  [key=1, style=dashed, color=darkseagreen4, label=document];
m4_1698 -> m4_1699  [key=0, style=solid];
m4_1699 -> m4_1700  [key=0, style=solid];
m4_1699 -> m4_24  [key=2, style=dotted];
m4_1699 -> m4_1701  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1699 -> m4_1702  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1703 -> m4_1704  [key=0, style=solid];
m4_1703 -> m4_27  [key=2, style=dotted];
m4_1697 -> m4_1698  [key=0, style=solid];
m4_1697 -> m4_1707  [key=2, style=dotted];
m4_1700 -> m4_1701  [key=0, style=solid];
m4_1700 -> m4_1700  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_1701 -> m4_1702  [key=0, style=solid];
m4_1701 -> m4_27  [key=2, style=dotted];
m4_1702 -> m4_1703  [key=0, style=solid];
m4_1702 -> m4_25  [key=2, style=dotted];
m4_1704 -> m4_1694  [key=0, style=bold, color=blue];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_27  [key=2, style=dotted];
m4_1448 -> m4_1449  [key=0, style=solid];
m4_1449 -> m4_1450  [key=0, style=solid];
m4_1449 -> m4_1451  [key=2, style=dotted];
m4_1450 -> m4_1448  [key=0, style=bold, color=blue];
m4_2998 -> m4_2999  [key=0, style=solid];
m4_2998 -> m4_2992  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m4_2998 -> m4_3003  [key=3, color=darkorchid, style=bold, label="method methodReturn T SerializeAndDeserialize"];
m4_2999 -> m4_3000  [key=0, style=solid];
m4_2999 -> m4_3002  [key=2, style=dotted];
m4_3000 -> m4_3001  [key=0, style=solid];
m4_3000 -> m4_3003  [key=2, style=dotted];
m4_3001 -> m4_2998  [key=0, style=bold, color=blue];
m4_2138 -> m4_2139  [key=0, style=solid];
m4_2139 -> m4_2140  [key=0, style=solid];
m4_2139 -> m4_2147  [key=2, style=dotted];
m4_2139 -> m4_2141  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_2140 -> m4_2141  [key=0, style=solid];
m4_2140 -> m4_2148  [key=2, style=dotted];
m4_2141 -> m4_2142  [key=0, style=solid];
m4_2141 -> m4_51  [key=2, style=dotted];
m4_2142 -> m4_2143  [key=0, style=solid];
m4_2142 -> m4_25  [key=2, style=dotted];
m4_2142 -> m4_2144  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_2142 -> m4_2145  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_2143 -> m4_2144  [key=0, style=solid];
m4_2143 -> m4_27  [key=2, style=dotted];
m4_2144 -> m4_2145  [key=0, style=solid];
m4_2144 -> m4_27  [key=2, style=dotted];
m4_2145 -> m4_2146  [key=0, style=solid];
m4_2145 -> m4_27  [key=2, style=dotted];
m4_2146 -> m4_2138  [key=0, style=bold, color=blue];
m4_959 -> m4_960  [key=0, style=solid];
m4_960 -> m4_961  [key=0, style=solid];
m4_960 -> m4_950  [key=2, style=dotted];
m4_960 -> m4_962  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_961 -> m4_962  [key=0, style=solid];
m4_962 -> m4_963  [key=0, style=solid];
m4_962 -> m4_24  [key=2, style=dotted];
m4_962 -> m4_964  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_963 -> m4_964  [key=0, style=solid];
m4_963 -> m4_27  [key=2, style=dotted];
m4_964 -> m4_965  [key=0, style=solid];
m4_964 -> m4_25  [key=2, style=dotted];
m4_965 -> m4_966  [key=0, style=solid];
m4_965 -> m4_956  [key=2, style=dotted];
m4_965 -> m4_27  [key=2, style=dotted];
m4_966 -> m4_959  [key=0, style=bold, color=blue];
m4_732 -> m4_733  [key=0, style=solid];
m4_732 -> m4_547  [key=2, style=dotted];
m4_732 -> m4_27  [key=2, style=dotted];
m4_736 -> m4_174  [key=2, style=dotted];
m4_736 -> m4_737  [key=0, style=solid];
m4_736 -> m4_27  [key=2, style=dotted];
m4_737 -> m4_23  [key=2, style=dotted];
m4_737 -> m4_738  [key=0, style=solid];
m4_737 -> m4_27  [key=2, style=dotted];
m4_735 -> m4_23  [key=2, style=dotted];
m4_735 -> m4_736  [key=0, style=solid];
m4_735 -> m4_27  [key=2, style=dotted];
m4_734 -> m4_736  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_734 -> m4_191  [key=2, style=dotted];
m4_734 -> m4_735  [key=0, style=solid];
m4_734 -> m4_27  [key=2, style=dotted];
m4_733 -> m4_737  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_733 -> m4_734  [key=0, style=solid];
m4_733 -> m4_733  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_733 -> m4_27  [key=2, style=dotted];
m4_738 -> m4_732  [key=0, style=bold, color=blue];
m4_738 -> m4_739  [key=0, style=solid];
m4_738 -> m4_27  [key=2, style=dotted];
m4_2765 -> m4_2766  [key=0, style=solid];
m4_2766 -> m4_2767  [key=0, style=solid];
m4_2766 -> m4_321  [key=2, style=dotted];
m4_2766 -> m4_2768  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2767 -> m4_2765  [key=0, style=bold, color=blue];
m4_2414 -> m4_2415  [key=0, style=solid];
m4_2414 -> m4_2416  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_2414 -> m4_2417  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_2415 -> m4_2416  [key=0, style=solid];
m4_2416 -> m4_2417  [key=0, style=solid];
m4_2417 -> m4_2418  [key=0, style=solid];
m4_2418 -> m4_2414  [key=0, style=bold, color=blue];
m4_643 -> m4_646  [key=0, style=solid];
m4_643 -> m4_649  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m4_643 -> m4_653  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m4_643 -> m4_634  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream json"];
m4_643 -> m4_635  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream xml"];
m4_643 -> m4_644  [key=0, style=solid];
m4_643 -> m4_631  [key=2, style=dotted];
m4_646 -> m4_64  [key=2, style=dotted];
m4_646 -> m4_647  [key=0, style=solid];
m4_646 -> m4_648  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_646 -> m4_27  [key=2, style=dotted];
m4_647 -> m4_48  [key=2, style=dotted];
m4_647 -> m4_648  [key=0, style=solid];
m4_647 -> m4_656  [key=2, style=dotted];
m4_647 -> m4_321  [key=2, style=dotted];
m4_647 -> m4_649  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_648 -> m4_630  [key=2, style=dotted];
m4_648 -> m4_649  [key=0, style=solid];
m4_648 -> m4_650  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_648 -> m4_642  [key=0, style=bold, color=blue];
m4_649 -> m4_45  [key=2, style=dotted];
m4_649 -> m4_650  [key=0, style=solid];
m4_649 -> m4_657  [key=2, style=dotted];
m4_649 -> m4_651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_650 -> m4_632  [key=2, style=dotted];
m4_650 -> m4_654  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_650 -> m4_651  [key=0, style=solid];
m4_650 -> m4_394  [key=2, style=dotted];
m4_650 -> m4_652  [key=2, style=dotted];
m4_651 -> m4_653  [key=0, style=solid];
m4_651 -> m4_652  [key=0, style=solid];
m4_651 -> m4_3071  [key=2, style=dotted];
m4_651 -> m4_649  [key=0, style=bold, color=blue];
m4_652 -> m4_655  [key=0, style=solid];
m4_652 -> m4_658  [key=2, style=dotted];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_290  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3399 -> m4_3400  [key=0, style=solid];
m4_3400 -> m4_3401  [key=0, style=solid];
m4_3400 -> m4_3402  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_3400 -> m4_3400  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m4_3401 -> m4_3402  [key=0, style=solid];
m4_3401 -> m4_394  [key=2, style=dotted];
m4_3402 -> m4_3403  [key=0, style=solid];
m4_3402 -> m4_3398  [key=2, style=dotted];
m4_3403 -> m4_3404  [key=0, style=solid];
m4_3404 -> m4_3405  [key=0, style=solid];
m4_3404 -> m4_403  [key=2, style=dotted];
m4_3404 -> m4_27  [key=2, style=dotted];
m4_3404 -> m4_3404  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_3405 -> m4_3406  [key=0, style=solid];
m4_3405 -> m4_3407  [key=2, style=dotted];
m4_3405 -> m4_27  [key=2, style=dotted];
m4_3405 -> m4_3405  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_3406 -> m4_3399  [key=0, style=bold, color=blue];
m4_539 -> m4_540  [key=0, style=solid];
m4_539 -> m4_318  [key=2, style=dotted];
m4_3695 -> m4_3696  [key=0, style=solid];
m4_3696 -> m4_3697  [key=0, style=solid];
m4_3697 -> m4_3695  [key=0, style=bold, color=blue];
m4_604 -> m4_605  [key=0, style=solid];
m4_605 -> m4_606  [key=0, style=solid];
m4_605 -> m4_611  [key=2, style=dotted];
m4_605 -> m4_607  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_605 -> m4_605  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_606 -> m4_607  [key=0, style=solid];
m4_606 -> m4_51  [key=2, style=dotted];
m4_606 -> m4_608  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_606 -> m4_1706  [key=2, style=dotted];
m4_607 -> m4_608  [key=0, style=solid];
m4_607 -> m4_27  [key=2, style=dotted];
m4_607 -> m4_100  [key=2, style=dotted];
m4_608 -> m4_609  [key=0, style=solid];
m4_608 -> m4_25  [key=2, style=dotted];
m4_608 -> m4_174  [key=2, style=dotted];
m4_608 -> m4_610  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_609 -> m4_610  [key=0, style=solid];
m4_609 -> m4_27  [key=2, style=dotted];
m4_609 -> m4_89  [key=2, style=dotted];
m4_610 -> m4_604  [key=0, style=bold, color=blue];
m4_610 -> m4_611  [key=0, style=solid];
m4_610 -> m4_191  [key=2, style=dotted];
m4_199 -> m4_197  [key=0, style=bold, color=blue];
m4_907 -> m4_908  [key=0, style=solid];
m4_908 -> m4_909  [key=0, style=solid];
m4_908 -> m4_2223  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_909 -> m4_910  [key=0, style=solid];
m4_909 -> m4_25  [key=2, style=dotted];
m4_909 -> m4_911  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_909 -> m4_912  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_909 -> m4_913  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_910 -> m4_911  [key=0, style=solid];
m4_910 -> m4_27  [key=2, style=dotted];
m4_911 -> m4_912  [key=0, style=solid];
m4_911 -> m4_27  [key=2, style=dotted];
m4_912 -> m4_913  [key=0, style=solid];
m4_912 -> m4_27  [key=2, style=dotted];
m4_913 -> m4_914  [key=0, style=solid];
m4_913 -> m4_27  [key=2, style=dotted];
m4_914 -> m4_907  [key=0, style=bold, color=blue];
m4_3002 -> m4_3004  [key=0, style=solid];
m4_3002 -> m4_3007  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_3002 -> m4_2998  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m4_3004 -> m4_3005  [key=0, style=solid];
m4_3004 -> m4_457  [key=2, style=dotted];
m4_3004 -> m4_3007  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m4_3004 -> m4_3008  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m4_3007 -> m4_3008  [key=0, style=solid];
m4_3007 -> m4_458  [key=2, style=dotted];
m4_3005 -> m4_3006  [key=0, style=solid];
m4_3005 -> m4_456  [key=2, style=dotted];
m4_3005 -> m4_3007  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_3008 -> m4_3009  [key=0, style=solid];
m4_3008 -> m4_2520  [key=2, style=dotted];
m4_3006 -> m4_3007  [key=0, style=solid];
m4_3006 -> m4_3010  [key=2, style=dotted];
m4_3009 -> m4_3002  [key=0, style=bold, color=blue];
m4_2704 -> m4_2705  [key=0, style=solid];
m4_2705 -> m4_2706  [key=0, style=solid];
m4_2705 -> m4_2714  [key=2, style=dotted];
m4_2705 -> m4_547  [key=2, style=dotted];
m4_2705 -> m4_390  [key=2, style=dotted];
m4_2706 -> m4_2707  [key=0, style=solid];
m4_2706 -> m4_24  [key=2, style=dotted];
m4_2706 -> m4_2708  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m4_2707 -> m4_2708  [key=0, style=solid];
m4_2707 -> m4_27  [key=2, style=dotted];
m4_2708 -> m4_2709  [key=0, style=solid];
m4_2708 -> m4_25  [key=2, style=dotted];
m4_2708 -> m4_2710  [key=1, style=dashed, color=darkseagreen4, label=actual];
m4_2708 -> m4_2711  [key=1, style=dashed, color=darkseagreen4, label=actual];
m4_2709 -> m4_2710  [key=0, style=solid];
m4_2709 -> m4_547  [key=2, style=dotted];
m4_2709 -> m4_27  [key=2, style=dotted];
m4_2710 -> m4_2711  [key=0, style=solid];
m4_2710 -> m4_547  [key=2, style=dotted];
m4_2710 -> m4_27  [key=2, style=dotted];
m4_2711 -> m4_2712  [key=0, style=solid];
m4_2712 -> m4_2713  [key=0, style=solid];
m4_2712 -> m4_1312  [key=2, style=dotted];
m4_2712 -> m4_2603  [key=2, style=dotted];
m4_2713 -> m4_2704  [key=0, style=bold, color=blue];
m4_3530 -> m4_3531  [key=0, style=solid];
m4_3531 -> m4_3532  [key=0, style=solid];
m4_3531 -> m4_25  [key=2, style=dotted];
m4_3531 -> m4_3533  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3531 -> m4_3534  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3531 -> m4_3535  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3532 -> m4_3533  [key=0, style=solid];
m4_3532 -> m4_27  [key=2, style=dotted];
m4_3533 -> m4_3534  [key=0, style=solid];
m4_3533 -> m4_27  [key=2, style=dotted];
m4_3534 -> m4_3535  [key=0, style=solid];
m4_3534 -> m4_27  [key=2, style=dotted];
m4_3535 -> m4_3536  [key=0, style=solid];
m4_3535 -> m4_27  [key=2, style=dotted];
m4_3536 -> m4_3530  [key=0, style=bold, color=blue];
m4_3038 -> m4_3039  [key=0, style=solid];
m4_3039 -> m4_3040  [key=0, style=solid];
m4_3039 -> m4_3042  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3039 -> m4_3047  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3039 -> m4_3050  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3039 -> m4_3039  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3040 -> m4_3041  [key=0, style=solid];
m4_3040 -> m4_394  [key=2, style=dotted];
m4_3040 -> m4_3045  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3040 -> m4_3046  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3042 -> m4_3043  [key=0, style=solid];
m4_3042 -> m4_461  [key=2, style=dotted];
m4_3042 -> m4_462  [key=2, style=dotted];
m4_3042 -> m4_2722  [key=2, style=dotted];
m4_3042 -> m4_3044  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_3047 -> m4_3048  [key=0, style=solid];
m4_3047 -> m4_321  [key=2, style=dotted];
m4_3047 -> m4_3049  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3041 -> m4_3042  [key=0, style=solid];
m4_3041 -> m4_2721  [key=2, style=dotted];
m4_3045 -> m4_3046  [key=0, style=solid];
m4_3046 -> m4_3047  [key=0, style=solid];
m4_3046 -> m4_2721  [key=2, style=dotted];
m4_3046 -> m4_3050  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_3043 -> m4_3044  [key=0, style=solid];
m4_3043 -> m4_864  [key=2, style=dotted];
m4_3044 -> m4_3045  [key=0, style=solid];
m4_3044 -> m4_27  [key=2, style=dotted];
m4_3048 -> m4_3038  [key=0, style=bold, color=blue];
m4_1611 -> m4_1612  [key=0, style=solid];
m4_1612 -> m4_1613  [key=0, style=solid];
m4_1612 -> m4_1619  [key=2, style=dotted];
m4_1613 -> m4_1614  [key=0, style=solid];
m4_1613 -> m4_24  [key=2, style=dotted];
m4_1614 -> m4_1615  [key=0, style=solid];
m4_1614 -> m4_27  [key=2, style=dotted];
m4_1615 -> m4_1616  [key=0, style=solid];
m4_1615 -> m4_1620  [key=2, style=dotted];
m4_1616 -> m4_1617  [key=0, style=solid];
m4_1616 -> m4_24  [key=2, style=dotted];
m4_1617 -> m4_1618  [key=0, style=solid];
m4_1617 -> m4_27  [key=2, style=dotted];
m4_1618 -> m4_1611  [key=0, style=bold, color=blue];
m4_200 -> m4_201  [key=0, style=solid];
m4_203 -> m4_100  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_201 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_201 -> m4_201  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_201 -> m4_202  [key=0, style=solid];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_1706  [key=2, style=dotted];
m4_202 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_202 -> m4_216  [key=2, style=dotted];
m4_202 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_202 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_202 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_174  [key=2, style=dotted];
m4_204 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_204 -> m4_72  [key=3, color=darkorchid, style=bold, label="Local variable bool ensureCustomCreatorCalled"];
m4_204 -> m4_217  [key=2, style=dotted];
m4_205 -> m4_205  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_89  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_207 -> m4_200  [key=0, style=bold, color=blue];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_51  [key=2, style=dotted];
m4_1936 -> m4_1937  [key=0, style=solid];
m4_1937 -> m4_1938  [key=0, style=solid];
m4_1937 -> m4_1965  [key=2, style=dotted];
m4_1937 -> m4_1939  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1937 -> m4_1940  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1937 -> m4_1941  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1937 -> m4_1950  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1937 -> m4_1951  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1937 -> m4_1952  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1937 -> m4_1953  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1937 -> m4_1954  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1938 -> m4_1939  [key=0, style=solid];
m4_1939 -> m4_1940  [key=0, style=solid];
m4_1940 -> m4_1941  [key=0, style=solid];
m4_1941 -> m4_1942  [key=0, style=solid];
m4_1941 -> m4_24  [key=2, style=dotted];
m4_1941 -> m4_1943  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1950 -> m4_1951  [key=0, style=solid];
m4_1951 -> m4_1952  [key=0, style=solid];
m4_1952 -> m4_1953  [key=0, style=solid];
m4_1953 -> m4_1954  [key=0, style=solid];
m4_1954 -> m4_1955  [key=0, style=solid];
m4_1954 -> m4_24  [key=2, style=dotted];
m4_1954 -> m4_1956  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1942 -> m4_1943  [key=0, style=solid];
m4_1942 -> m4_27  [key=2, style=dotted];
m4_1943 -> m4_1944  [key=0, style=solid];
m4_1943 -> m4_25  [key=2, style=dotted];
m4_1943 -> m4_1945  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1943 -> m4_1946  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1943 -> m4_1947  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1943 -> m4_1948  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1943 -> m4_1949  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1944 -> m4_1945  [key=0, style=solid];
m4_1944 -> m4_1693  [key=2, style=dotted];
m4_1945 -> m4_1946  [key=0, style=solid];
m4_1945 -> m4_1966  [key=2, style=dotted];
m4_1946 -> m4_1947  [key=0, style=solid];
m4_1946 -> m4_1966  [key=2, style=dotted];
m4_1947 -> m4_1948  [key=0, style=solid];
m4_1947 -> m4_1966  [key=2, style=dotted];
m4_1948 -> m4_1949  [key=0, style=solid];
m4_1948 -> m4_1966  [key=2, style=dotted];
m4_1949 -> m4_1950  [key=0, style=solid];
m4_1949 -> m4_27  [key=2, style=dotted];
m4_1955 -> m4_1956  [key=0, style=solid];
m4_1955 -> m4_27  [key=2, style=dotted];
m4_1956 -> m4_1957  [key=0, style=solid];
m4_1956 -> m4_25  [key=2, style=dotted];
m4_1956 -> m4_1958  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1956 -> m4_1959  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1956 -> m4_1960  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1956 -> m4_1961  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1956 -> m4_1962  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1956 -> m4_1963  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1957 -> m4_1958  [key=0, style=solid];
m4_1957 -> m4_27  [key=2, style=dotted];
m4_1958 -> m4_1959  [key=0, style=solid];
m4_1958 -> m4_44  [key=2, style=dotted];
m4_1959 -> m4_1960  [key=0, style=solid];
m4_1959 -> m4_44  [key=2, style=dotted];
m4_1960 -> m4_1961  [key=0, style=solid];
m4_1960 -> m4_44  [key=2, style=dotted];
m4_1961 -> m4_1962  [key=0, style=solid];
m4_1961 -> m4_44  [key=2, style=dotted];
m4_1962 -> m4_1963  [key=0, style=solid];
m4_1962 -> m4_27  [key=2, style=dotted];
m4_1963 -> m4_1964  [key=0, style=solid];
m4_1963 -> m4_27  [key=2, style=dotted];
m4_1964 -> m4_1936  [key=0, style=bold, color=blue];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_261  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_2191 -> m4_2192  [key=0, style=solid];
m4_2191 -> m4_2180  [key=3, color=darkorchid, style=bold, label="Parameter variable string serStr"];
m4_2192 -> m4_2193  [key=0, style=solid];
m4_2192 -> m4_394  [key=2, style=dotted];
m4_2192 -> m4_652  [key=2, style=dotted];
m4_2193 -> m4_2191  [key=0, style=bold, color=blue];
m4_2777 -> m4_2778  [key=0, style=solid];
m4_2778 -> m4_2779  [key=0, style=solid];
m4_2778 -> m4_321  [key=2, style=dotted];
m4_2778 -> m4_2780  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2779 -> m4_2777  [key=0, style=bold, color=blue];
m4_820 -> m4_821  [key=0, style=solid];
m4_821 -> m4_822  [key=0, style=solid];
m4_821 -> m4_821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_822 -> m4_823  [key=0, style=solid];
m4_822 -> m4_25  [key=2, style=dotted];
m4_823 -> m4_820  [key=0, style=bold, color=blue];
m4_2385 -> m4_2386  [key=0, style=solid];
m4_2386 -> m4_2387  [key=0, style=solid];
m4_2386 -> m4_1730  [key=2, style=dotted];
m4_2387 -> m4_2385  [key=0, style=bold, color=blue];
m4_1331 -> m4_1332  [key=0, style=solid];
m4_1332 -> m4_1333  [key=0, style=solid];
m4_1332 -> m4_25  [key=2, style=dotted];
m4_1332 -> m4_1334  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1332 -> m4_1335  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1332 -> m4_1336  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1332 -> m4_1337  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1332 -> m4_1338  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1332 -> m4_1339  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1332 -> m4_1340  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1332 -> m4_1341  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1333 -> m4_1334  [key=0, style=solid];
m4_1333 -> m4_864  [key=2, style=dotted];
m4_1334 -> m4_1335  [key=0, style=solid];
m4_1334 -> m4_864  [key=2, style=dotted];
m4_1335 -> m4_1336  [key=0, style=solid];
m4_1335 -> m4_176  [key=2, style=dotted];
m4_1335 -> m4_27  [key=2, style=dotted];
m4_1336 -> m4_1337  [key=0, style=solid];
m4_1336 -> m4_176  [key=2, style=dotted];
m4_1336 -> m4_27  [key=2, style=dotted];
m4_1337 -> m4_1338  [key=0, style=solid];
m4_1337 -> m4_27  [key=2, style=dotted];
m4_1338 -> m4_1339  [key=0, style=solid];
m4_1338 -> m4_27  [key=2, style=dotted];
m4_1339 -> m4_1340  [key=0, style=solid];
m4_1339 -> m4_27  [key=2, style=dotted];
m4_1340 -> m4_1341  [key=0, style=solid];
m4_1340 -> m4_27  [key=2, style=dotted];
m4_1341 -> m4_1342  [key=0, style=solid];
m4_1341 -> m4_27  [key=2, style=dotted];
m4_1342 -> m4_1331  [key=0, style=bold, color=blue];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_245  [key=2, style=dotted];
m4_225 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label=cDataSection];
m4_1162 -> m4_1163  [key=0, style=solid];
m4_1163 -> m4_1164  [key=0, style=solid];
m4_1163 -> m4_1167  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1163 -> m4_1128  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1164 -> m4_1165  [key=0, style=solid];
m4_1164 -> m4_321  [key=2, style=dotted];
m4_1164 -> m4_1166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1165 -> m4_1162  [key=0, style=bold, color=blue];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_293  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_3641 -> m4_3642  [key=0, style=solid];
m4_3642 -> m4_3643  [key=0, style=solid];
m4_3643 -> m4_3641  [key=0, style=bold, color=blue];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_200  [key=2, style=dotted];
m4_208 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_208 -> m4_211  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_208 -> m4_212  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_208 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_208 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_27  [key=2, style=dotted];
m4_209 -> m4_1706  [key=2, style=dotted];
m4_209 -> m4_222  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_209 -> m4_225  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_209 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_209 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_209 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_209 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_209 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_217  [key=2, style=dotted];
m4_210 -> m4_27  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_27  [key=2, style=dotted];
m4_211 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_211 -> m4_211  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_211 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_27  [key=2, style=dotted];
m4_212 -> m4_1706  [key=2, style=dotted];
m4_212 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=document];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_27  [key=2, style=dotted];
m4_213 -> m4_100  [key=2, style=dotted];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_27  [key=2, style=dotted];
m4_214 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m4_215 -> m4_201  [key=0, style=bold, color=blue];
m4_215 -> m4_216  [key=0, style=solid];
m4_2088 -> m4_2089  [key=0, style=solid];
m4_2089 -> m4_2090  [key=0, style=solid];
m4_2089 -> m4_2109  [key=2, style=dotted];
m4_2089 -> m4_2091  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2092  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2093  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2094  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2095  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2099  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2101  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2105  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2089 -> m4_2107  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2090 -> m4_2091  [key=0, style=solid];
m4_2091 -> m4_2092  [key=0, style=solid];
m4_2092 -> m4_2093  [key=0, style=solid];
m4_2092 -> m4_2109  [key=2, style=dotted];
m4_2093 -> m4_2094  [key=0, style=solid];
m4_2094 -> m4_2095  [key=0, style=solid];
m4_2094 -> m4_390  [key=2, style=dotted];
m4_2095 -> m4_2096  [key=0, style=solid];
m4_2095 -> m4_2110  [key=2, style=dotted];
m4_2095 -> m4_2097  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2099 -> m4_2100  [key=0, style=solid];
m4_2099 -> m4_27  [key=2, style=dotted];
m4_2101 -> m4_2102  [key=0, style=solid];
m4_2101 -> m4_27  [key=2, style=dotted];
m4_2105 -> m4_2106  [key=0, style=solid];
m4_2105 -> m4_27  [key=2, style=dotted];
m4_2107 -> m4_2108  [key=0, style=solid];
m4_2107 -> m4_27  [key=2, style=dotted];
m4_2096 -> m4_2097  [key=0, style=solid];
m4_2096 -> m4_27  [key=2, style=dotted];
m4_2097 -> m4_2098  [key=0, style=solid];
m4_2097 -> m4_25  [key=2, style=dotted];
m4_2097 -> m4_2099  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2097 -> m4_2100  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2097 -> m4_2101  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2097 -> m4_2102  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2097 -> m4_2103  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2098 -> m4_2099  [key=0, style=solid];
m4_2098 -> m4_1066  [key=2, style=dotted];
m4_2100 -> m4_2101  [key=0, style=solid];
m4_2100 -> m4_1066  [key=2, style=dotted];
m4_2102 -> m4_2103  [key=0, style=solid];
m4_2102 -> m4_1066  [key=2, style=dotted];
m4_2103 -> m4_2104  [key=0, style=solid];
m4_2103 -> m4_2105  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_2103 -> m4_2106  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_2103 -> m4_2107  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_2104 -> m4_2105  [key=0, style=solid];
m4_2104 -> m4_1066  [key=2, style=dotted];
m4_2106 -> m4_2107  [key=0, style=solid];
m4_2106 -> m4_1066  [key=2, style=dotted];
m4_2108 -> m4_2088  [key=0, style=bold, color=blue];
m4_2598 -> m4_3657  [key=0, style=solid];
m4_2598 -> m4_3658  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m4_3657 -> m4_3658  [key=0, style=solid];
m4_3658 -> m4_3659  [key=0, style=solid];
m4_3659 -> m4_2598  [key=0, style=bold, color=blue];
m4_718 -> m4_720  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m4_718 -> m4_719  [key=0, style=solid];
m4_718 -> m4_710  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m4_1804 -> m4_1805  [key=0, style=solid];
m4_1804 -> m4_1807  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_1804 -> m4_1808  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_1804 -> m4_1809  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_1804 -> m4_1811  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_1804 -> m4_1806  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m4_1805 -> m4_1806  [key=0, style=solid];
m4_1807 -> m4_1808  [key=0, style=solid];
m4_1807 -> m4_1815  [key=2, style=dotted];
m4_1808 -> m4_1809  [key=0, style=solid];
m4_1808 -> m4_1812  [key=0, style=solid];
m4_1809 -> m4_1810  [key=0, style=solid];
m4_1811 -> m4_1808  [key=0, style=solid];
m4_1811 -> m4_1815  [key=2, style=dotted];
m4_1806 -> m4_1807  [key=0, style=solid];
m4_1806 -> m4_1814  [key=2, style=dotted];
m4_1806 -> m4_1810  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m4_1806 -> m4_1812  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m4_1810 -> m4_1811  [key=0, style=solid];
m4_1810 -> m4_339  [key=2, style=dotted];
m4_1812 -> m4_1813  [key=0, style=solid];
m4_1813 -> m4_1804  [key=0, style=bold, color=blue];
m4_1205 -> m4_1206  [key=0, style=solid];
m4_1206 -> m4_1207  [key=0, style=solid];
m4_1206 -> m4_1206  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1207 -> m4_1208  [key=0, style=solid];
m4_1207 -> m4_25  [key=2, style=dotted];
m4_1208 -> m4_1209  [key=0, style=solid];
m4_1208 -> m4_27  [key=2, style=dotted];
m4_1209 -> m4_1205  [key=0, style=bold, color=blue];
m4_3059 -> m4_3060  [key=0, style=solid];
m4_3060 -> m4_3061  [key=0, style=solid];
m4_3060 -> m4_321  [key=2, style=dotted];
m4_3060 -> m4_3062  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3060 -> m4_3060  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3061 -> m4_3059  [key=0, style=bold, color=blue];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_51  [key=2, style=dotted];
m4_1252 -> m4_1253  [key=0, style=solid];
m4_1253 -> m4_1254  [key=0, style=solid];
m4_1253 -> m4_1263  [key=2, style=dotted];
m4_1253 -> m4_1258  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1254 -> m4_1255  [key=0, style=solid];
m4_1254 -> m4_24  [key=2, style=dotted];
m4_1254 -> m4_1256  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1254 -> m4_1257  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1258 -> m4_1259  [key=0, style=solid];
m4_1258 -> m4_27  [key=2, style=dotted];
m4_1258 -> m4_1258  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1258 -> m4_1260  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1255 -> m4_1256  [key=0, style=solid];
m4_1255 -> m4_137  [key=2, style=dotted];
m4_1256 -> m4_1257  [key=0, style=solid];
m4_1256 -> m4_27  [key=2, style=dotted];
m4_1257 -> m4_1258  [key=0, style=solid];
m4_1257 -> m4_25  [key=2, style=dotted];
m4_1259 -> m4_1260  [key=0, style=solid];
m4_1259 -> m4_27  [key=2, style=dotted];
m4_1260 -> m4_1261  [key=0, style=solid];
m4_1260 -> m4_27  [key=2, style=dotted];
m4_1260 -> m4_1260  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1261 -> m4_1262  [key=0, style=solid];
m4_1261 -> m4_27  [key=2, style=dotted];
m4_1262 -> m4_1252  [key=0, style=bold, color=blue];
m4_2682 -> m4_2683  [key=0, style=solid];
m4_2683 -> m4_2684  [key=0, style=solid];
m4_2683 -> m4_321  [key=2, style=dotted];
m4_2683 -> m4_2685  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2683 -> m4_2683  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2684 -> m4_2682  [key=0, style=bold, color=blue];
m4_621 -> m4_622  [key=0, style=solid];
m4_621 -> m4_628  [key=2, style=dotted];
m4_455 -> m4_100  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_446 -> m4_447  [key=0, style=solid];
m4_446 -> m4_455  [key=2, style=dotted];
m4_446 -> m4_216  [key=2, style=dotted];
m4_446 -> m4_450  [key=1, style=dashed, color=darkseagreen4, label=collection];
m4_446 -> m4_453  [key=1, style=dashed, color=darkseagreen4, label=collection];
m4_447 -> m4_448  [key=0, style=solid];
m4_447 -> m4_456  [key=2, style=dotted];
m4_447 -> m4_450  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m4_447 -> m4_452  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m4_447 -> m4_1706  [key=2, style=dotted];
m4_447 -> m4_449  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_458  [key=2, style=dotted];
m4_450 -> m4_89  [key=2, style=dotted];
m4_453 -> m4_454  [key=0, style=solid];
m4_453 -> m4_27  [key=2, style=dotted];
m4_453 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_453 -> m4_453  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_448 -> m4_449  [key=0, style=solid];
m4_448 -> m4_100  [key=2, style=dotted];
m4_452 -> m4_453  [key=0, style=solid];
m4_452 -> m4_461  [key=2, style=dotted];
m4_452 -> m4_462  [key=2, style=dotted];
m4_452 -> m4_459  [key=2, style=dotted];
m4_452 -> m4_460  [key=2, style=dotted];
m4_452 -> m4_463  [key=2, style=dotted];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_457  [key=2, style=dotted];
m4_449 -> m4_451  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_449 -> m4_452  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_449 -> m4_174  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_459  [key=2, style=dotted];
m4_451 -> m4_460  [key=2, style=dotted];
m4_451 -> m4_27  [key=2, style=dotted];
m4_451 -> m4_446  [key=0, style=bold, color=blue];
m4_454 -> m4_445  [key=0, style=bold, color=blue];
m4_454 -> m4_455  [key=0, style=solid];
m4_454 -> m4_1706  [key=2, style=dotted];
m4_454 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_370 -> m4_371  [key=0, style=solid];
m4_358 -> m4_359  [key=0, style=solid];
m4_359 -> m4_109  [key=2, style=dotted];
m4_359 -> m4_360  [key=0, style=solid];
m4_359 -> m4_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_360 -> m4_358  [key=0, style=bold, color=blue];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_362  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_360 -> m4_364  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_360 -> m4_365  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_360 -> m4_360  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_242 -> m4_243  [key=0, style=solid];
m4_372 -> m4_373  [key=0, style=solid];
m4_372 -> m4_364  [key=0, style=bold, color=blue];
m4_373 -> m4_374  [key=0, style=solid];
m4_373 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_373 -> m4_373  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_321  [key=2, style=dotted];
m4_374 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m4_374 -> m4_374  [key=3, color=darkorchid, style=bold, label="Local variable string arrayXml"];
m4_375 -> m4_372  [key=0, style=bold, color=blue];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_1706  [key=2, style=dotted];
m4_375 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m4_875 -> m4_876  [key=0, style=solid];
m4_876 -> m4_877  [key=0, style=solid];
m4_876 -> m4_884  [key=2, style=dotted];
m4_876 -> m4_878  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_877 -> m4_878  [key=0, style=solid];
m4_878 -> m4_879  [key=0, style=solid];
m4_878 -> m4_51  [key=2, style=dotted];
m4_878 -> m4_880  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_879 -> m4_880  [key=0, style=solid];
m4_879 -> m4_27  [key=2, style=dotted];
m4_880 -> m4_881  [key=0, style=solid];
m4_880 -> m4_25  [key=2, style=dotted];
m4_881 -> m4_882  [key=0, style=solid];
m4_881 -> m4_51  [key=2, style=dotted];
m4_882 -> m4_883  [key=0, style=solid];
m4_882 -> m4_27  [key=2, style=dotted];
m4_883 -> m4_875  [key=0, style=bold, color=blue];
m4_2978 -> m4_2979  [key=0, style=solid];
m4_2979 -> m4_2980  [key=0, style=solid];
m4_2979 -> m4_50  [key=2, style=dotted];
m4_2979 -> m4_390  [key=2, style=dotted];
m4_2980 -> m4_2981  [key=0, style=solid];
m4_2980 -> m4_394  [key=2, style=dotted];
m4_2980 -> m4_906  [key=2, style=dotted];
m4_2980 -> m4_2982  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2981 -> m4_2982  [key=0, style=solid];
m4_2981 -> m4_27  [key=2, style=dotted];
m4_2982 -> m4_2983  [key=0, style=solid];
m4_2982 -> m4_25  [key=2, style=dotted];
m4_2982 -> m4_2984  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2982 -> m4_2985  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2983 -> m4_2984  [key=0, style=solid];
m4_2983 -> m4_27  [key=2, style=dotted];
m4_2984 -> m4_2985  [key=0, style=solid];
m4_2984 -> m4_390  [key=2, style=dotted];
m4_2984 -> m4_27  [key=2, style=dotted];
m4_2985 -> m4_2986  [key=0, style=solid];
m4_2985 -> m4_390  [key=2, style=dotted];
m4_2985 -> m4_27  [key=2, style=dotted];
m4_2986 -> m4_2978  [key=0, style=bold, color=blue];
m4_22 -> m4_16  [key=0, style=bold, color=blue];
m4_401 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_394  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2471 -> m4_2472  [key=0, style=solid];
m4_2472 -> m4_2473  [key=0, style=solid];
m4_2472 -> m4_2482  [key=2, style=dotted];
m4_2472 -> m4_2476  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2472 -> m4_2477  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2472 -> m4_2478  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2472 -> m4_2479  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2472 -> m4_2480  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2473 -> m4_2474  [key=0, style=solid];
m4_2473 -> m4_24  [key=2, style=dotted];
m4_2473 -> m4_2475  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2476 -> m4_2477  [key=0, style=solid];
m4_2476 -> m4_27  [key=2, style=dotted];
m4_2477 -> m4_2478  [key=0, style=solid];
m4_2477 -> m4_27  [key=2, style=dotted];
m4_2478 -> m4_2479  [key=0, style=solid];
m4_2478 -> m4_27  [key=2, style=dotted];
m4_2479 -> m4_2480  [key=0, style=solid];
m4_2479 -> m4_27  [key=2, style=dotted];
m4_2480 -> m4_2481  [key=0, style=solid];
m4_2480 -> m4_27  [key=2, style=dotted];
m4_2474 -> m4_2475  [key=0, style=solid];
m4_2474 -> m4_27  [key=2, style=dotted];
m4_2475 -> m4_2476  [key=0, style=solid];
m4_2475 -> m4_25  [key=2, style=dotted];
m4_2475 -> m4_2477  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2475 -> m4_2478  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2475 -> m4_2479  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2475 -> m4_2480  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2481 -> m4_2471  [key=0, style=bold, color=blue];
m4_1141 -> m4_1142  [key=0, style=solid];
m4_1142 -> m4_1143  [key=0, style=solid];
m4_1142 -> m4_1146  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1142 -> m4_1128  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1143 -> m4_1144  [key=0, style=solid];
m4_1143 -> m4_321  [key=2, style=dotted];
m4_1143 -> m4_1145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1144 -> m4_1141  [key=0, style=bold, color=blue];
m4_274 -> m4_89  [key=2, style=dotted];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_281  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=2, style=dotted];
m4_26 -> m4_24  [key=0, style=bold, color=blue];
m4_3170 -> m4_3171  [key=0, style=solid];
m4_3171 -> m4_3172  [key=0, style=solid];
m4_3171 -> m4_3171  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3172 -> m4_3173  [key=0, style=solid];
m4_3172 -> m4_25  [key=2, style=dotted];
m4_3172 -> m4_3174  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_3173 -> m4_3174  [key=0, style=solid];
m4_3173 -> m4_27  [key=2, style=dotted];
m4_3174 -> m4_3175  [key=0, style=solid];
m4_3174 -> m4_27  [key=2, style=dotted];
m4_3175 -> m4_3170  [key=0, style=bold, color=blue];
m4_3691 -> m4_3692  [key=0, style=solid];
m4_3692 -> m4_3693  [key=0, style=solid];
m4_3692 -> m4_3694  [key=2, style=dotted];
m4_3693 -> m4_3691  [key=0, style=bold, color=blue];
m4_2226 -> m4_2227  [key=0, style=solid];
m4_2227 -> m4_2228  [key=0, style=solid];
m4_2228 -> m4_2226  [key=0, style=bold, color=blue];
m4_1183 -> m4_1184  [key=0, style=solid];
m4_1184 -> m4_1185  [key=0, style=solid];
m4_1184 -> m4_1188  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1184 -> m4_2223  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1185 -> m4_1186  [key=0, style=solid];
m4_1185 -> m4_321  [key=2, style=dotted];
m4_1185 -> m4_1187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1186 -> m4_1183  [key=0, style=bold, color=blue];
m4_2159 -> m4_2160  [key=0, style=solid];
m4_2160 -> m4_2161  [key=0, style=solid];
m4_2160 -> m4_2151  [key=2, style=dotted];
m4_2160 -> m4_2162  [key=1, style=dashed, color=darkseagreen4, label=derived];
m4_2161 -> m4_2162  [key=0, style=solid];
m4_2161 -> m4_394  [key=2, style=dotted];
m4_2161 -> m4_2163  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_2162 -> m4_2163  [key=0, style=solid];
m4_2162 -> m4_906  [key=2, style=dotted];
m4_2163 -> m4_2164  [key=0, style=solid];
m4_2163 -> m4_652  [key=2, style=dotted];
m4_2163 -> m4_2165  [key=1, style=dashed, color=darkseagreen4, label=meh];
m4_2164 -> m4_2165  [key=0, style=solid];
m4_2164 -> m4_27  [key=2, style=dotted];
m4_2165 -> m4_2166  [key=0, style=solid];
m4_2165 -> m4_27  [key=2, style=dotted];
m4_2166 -> m4_2159  [key=0, style=bold, color=blue];
m4_1169 -> m4_1170  [key=0, style=solid];
m4_1170 -> m4_1171  [key=0, style=solid];
m4_1170 -> m4_1174  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1170 -> m4_1170  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1171 -> m4_1172  [key=0, style=solid];
m4_1171 -> m4_321  [key=2, style=dotted];
m4_1171 -> m4_1173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1172 -> m4_1169  [key=0, style=bold, color=blue];
m4_690 -> m4_691  [key=0, style=solid];
m4_2134 -> m4_2135  [key=0, style=solid];
m4_2135 -> m4_2136  [key=0, style=solid];
m4_2135 -> m4_2137  [key=2, style=dotted];
m4_2136 -> m4_2134  [key=0, style=bold, color=blue];
m4_1816 -> m4_1817  [key=0, style=solid];
m4_1817 -> m4_1818  [key=0, style=solid];
m4_1818 -> m4_1816  [key=0, style=bold, color=blue];
m4_642 -> m4_643  [key=0, style=solid];
m4_3144 -> m4_3145  [key=0, style=solid];
m4_3145 -> m4_3146  [key=0, style=solid];
m4_3146 -> m4_3144  [key=0, style=bold, color=blue];
m4_2368 -> m4_2369  [key=0, style=solid];
m4_2369 -> m4_2370  [key=0, style=solid];
m4_2370 -> m4_2371  [key=0, style=solid];
m4_2370 -> m4_50  [key=2, style=dotted];
m4_2371 -> m4_2368  [key=0, style=bold, color=blue];
m4_1922 -> m4_1923  [key=0, style=solid];
m4_1923 -> m4_1924  [key=0, style=solid];
m4_1924 -> m4_1922  [key=0, style=bold, color=blue];
m4_2129 -> m4_2130  [key=0, style=solid];
m4_2130 -> m4_2131  [key=0, style=solid];
m4_2130 -> m4_2130  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2131 -> m4_2132  [key=0, style=solid];
m4_2131 -> m4_25  [key=2, style=dotted];
m4_2132 -> m4_2133  [key=0, style=solid];
m4_2132 -> m4_27  [key=2, style=dotted];
m4_2133 -> m4_2129  [key=0, style=bold, color=blue];
m4_2419 -> m4_2420  [key=0, style=solid];
m4_2420 -> m4_2421  [key=0, style=solid];
m4_2421 -> m4_2419  [key=0, style=bold, color=blue];
m4_391 -> m4_89  [key=2, style=dotted];
m4_391 -> m4_392  [key=0, style=solid];
m4_555 -> m4_556  [key=0, style=solid];
m4_555 -> m4_552  [key=0, style=bold, color=blue];
m4_556 -> m4_557  [key=0, style=solid];
m4_556 -> m4_562  [key=2, style=dotted];
m4_556 -> m4_560  [key=1, style=dashed, color=darkseagreen4, label=ts];
m4_557 -> m4_558  [key=0, style=solid];
m4_557 -> m4_563  [key=2, style=dotted];
m4_557 -> m4_24  [key=2, style=dotted];
m4_557 -> m4_559  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_558 -> m4_559  [key=0, style=solid];
m4_558 -> m4_27  [key=2, style=dotted];
m4_558 -> m4_556  [key=0, style=bold, color=blue];
m4_669 -> m4_670  [key=0, style=solid];
m4_669 -> m4_27  [key=2, style=dotted];
m4_672 -> m4_100  [key=2, style=dotted];
m4_672 -> m4_673  [key=0, style=solid];
m4_670 -> m4_672  [key=1, style=dashed, color=darkseagreen4, label=xaml];
m4_670 -> m4_671  [key=0, style=solid];
m4_670 -> m4_660  [key=3, color=darkorchid, style=bold, label="Local variable string xaml"];
m4_670 -> m4_662  [key=0, style=bold, color=blue];
m4_673 -> m4_674  [key=0, style=solid];
m4_673 -> m4_174  [key=2, style=dotted];
m4_673 -> m4_675  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_673 -> m4_676  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_673 -> m4_678  [key=2, style=dotted];
m4_673 -> m4_679  [key=2, style=dotted];
m4_674 -> m4_675  [key=0, style=solid];
m4_674 -> m4_662  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m4_674 -> m4_632  [key=2, style=dotted];
m4_675 -> m4_89  [key=2, style=dotted];
m4_675 -> m4_676  [key=0, style=solid];
m4_675 -> m4_24  [key=2, style=dotted];
m4_676 -> m4_677  [key=0, style=solid];
m4_676 -> m4_191  [key=2, style=dotted];
m4_676 -> m4_679  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_676 -> m4_137  [key=2, style=dotted];
m4_677 -> m4_678  [key=0, style=solid];
m4_677 -> m4_326  [key=2, style=dotted];
m4_677 -> m4_681  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_677 -> m4_672  [key=0, style=bold, color=blue];
m4_3176 -> m4_3177  [key=0, style=solid];
m4_3177 -> m4_3178  [key=0, style=solid];
m4_3177 -> m4_3144  [key=2, style=dotted];
m4_3178 -> m4_3179  [key=0, style=solid];
m4_3178 -> m4_51  [key=2, style=dotted];
m4_3178 -> m4_3181  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3178 -> m4_3187  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3179 -> m4_3180  [key=0, style=solid];
m4_3179 -> m4_27  [key=2, style=dotted];
m4_3181 -> m4_3182  [key=0, style=solid];
m4_3181 -> m4_3181  [key=3, color=darkorchid, style=bold, label="Local variable System.Action doStuff"];
m4_3180 -> m4_3181  [key=0, style=solid];
m4_3180 -> m4_2788  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<int> obj"];
m4_3182 -> m4_3183  [key=0, style=solid];
m4_3182 -> m4_3185  [key=2, style=dotted];
m4_3183 -> m4_3184  [key=0, style=solid];
m4_3183 -> m4_27  [key=2, style=dotted];
m4_3184 -> m4_3176  [key=0, style=bold, color=blue];
m4_1490 -> m4_1491  [key=0, style=solid];
m4_1490 -> m4_1492  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1493  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1494  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1495  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1496  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1497  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1498  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1499  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1500  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1501  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1502  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1503  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1504  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1505  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1506  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1507  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1490 -> m4_1508  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1491 -> m4_1492  [key=0, style=solid];
m4_1491 -> m4_1510  [key=2, style=dotted];
m4_1492 -> m4_1493  [key=0, style=solid];
m4_1492 -> m4_1511  [key=2, style=dotted];
m4_1493 -> m4_1494  [key=0, style=solid];
m4_1493 -> m4_1512  [key=2, style=dotted];
m4_1494 -> m4_1495  [key=0, style=solid];
m4_1494 -> m4_1512  [key=2, style=dotted];
m4_1495 -> m4_1496  [key=0, style=solid];
m4_1495 -> m4_1512  [key=2, style=dotted];
m4_1496 -> m4_1497  [key=0, style=solid];
m4_1496 -> m4_1512  [key=2, style=dotted];
m4_1497 -> m4_1498  [key=0, style=solid];
m4_1497 -> m4_1513  [key=2, style=dotted];
m4_1498 -> m4_1499  [key=0, style=solid];
m4_1498 -> m4_1514  [key=2, style=dotted];
m4_1499 -> m4_1500  [key=0, style=solid];
m4_1499 -> m4_1515  [key=2, style=dotted];
m4_1500 -> m4_1501  [key=0, style=solid];
m4_1500 -> m4_1516  [key=2, style=dotted];
m4_1501 -> m4_1502  [key=0, style=solid];
m4_1501 -> m4_1517  [key=2, style=dotted];
m4_1502 -> m4_1503  [key=0, style=solid];
m4_1502 -> m4_1518  [key=2, style=dotted];
m4_1503 -> m4_1504  [key=0, style=solid];
m4_1503 -> m4_1519  [key=2, style=dotted];
m4_1504 -> m4_1505  [key=0, style=solid];
m4_1504 -> m4_1520  [key=2, style=dotted];
m4_1505 -> m4_1506  [key=0, style=solid];
m4_1505 -> m4_1521  [key=2, style=dotted];
m4_1506 -> m4_1507  [key=0, style=solid];
m4_1506 -> m4_1522  [key=2, style=dotted];
m4_1507 -> m4_1508  [key=0, style=solid];
m4_1507 -> m4_1523  [key=2, style=dotted];
m4_1508 -> m4_1509  [key=0, style=solid];
m4_1508 -> m4_1524  [key=2, style=dotted];
m4_1509 -> m4_1490  [key=0, style=bold, color=blue];
m4_2715 -> m4_2716  [key=0, style=solid];
m4_2716 -> m4_2717  [key=0, style=solid];
m4_2716 -> m4_394  [key=2, style=dotted];
m4_2716 -> m4_2721  [key=2, style=dotted];
m4_2717 -> m4_2718  [key=0, style=solid];
m4_2717 -> m4_461  [key=2, style=dotted];
m4_2717 -> m4_462  [key=2, style=dotted];
m4_2717 -> m4_2722  [key=2, style=dotted];
m4_2717 -> m4_2719  [key=1, style=dashed, color=darkseagreen4, label=dict];
m4_2718 -> m4_2719  [key=0, style=solid];
m4_2718 -> m4_27  [key=2, style=dotted];
m4_2719 -> m4_2720  [key=0, style=solid];
m4_2719 -> m4_27  [key=2, style=dotted];
m4_2720 -> m4_2715  [key=0, style=bold, color=blue];
m4_2397 -> m4_2398  [key=0, style=solid];
m4_2398 -> m4_2399  [key=0, style=solid];
m4_2398 -> m4_1730  [key=2, style=dotted];
m4_2399 -> m4_2397  [key=0, style=bold, color=blue];
m4_2987 -> m4_2988  [key=0, style=solid];
m4_2988 -> m4_2989  [key=0, style=solid];
m4_2988 -> m4_456  [key=2, style=dotted];
m4_2988 -> m4_461  [key=2, style=dotted];
m4_2988 -> m4_462  [key=2, style=dotted];
m4_2988 -> m4_2602  [key=2, style=dotted];
m4_2989 -> m4_2990  [key=0, style=solid];
m4_2989 -> m4_27  [key=2, style=dotted];
m4_2990 -> m4_2987  [key=0, style=bold, color=blue];
m4_15 -> m4_13  [key=0, style=bold, color=blue];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_541  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_538 -> m4_414  [key=2, style=dotted];
m4_3100 -> m4_3101  [key=0, style=solid];
m4_3101 -> m4_3102  [key=0, style=solid];
m4_3101 -> m4_25  [key=2, style=dotted];
m4_3102 -> m4_3103  [key=0, style=solid];
m4_3102 -> m4_27  [key=2, style=dotted];
m4_3102 -> m4_3102  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_3103 -> m4_3104  [key=0, style=solid];
m4_3103 -> m4_27  [key=2, style=dotted];
m4_3103 -> m4_3103  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_3104 -> m4_3100  [key=0, style=bold, color=blue];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_340  [key=0, style=bold, color=blue];
m4_348 -> m4_24  [key=2, style=dotted];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_347  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_350 -> m4_23  [key=2, style=dotted];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_175  [key=2, style=dotted];
m4_349 -> m4_350  [key=0, style=solid];
m4_349 -> m4_349  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_349 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_349 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_351 -> m4_346  [key=0, style=bold, color=blue];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_356  [key=2, style=dotted];
m4_351 -> m4_357  [key=2, style=dotted];
m4_351 -> m4_358  [key=2, style=dotted];
m4_351 -> m4_354  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_396  [key=0, style=bold, color=blue];
m4_402 -> m4_196  [key=2, style=dotted];
m4_402 -> m4_403  [key=0, style=solid];
m4_402 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_403 -> m4_400  [key=0, style=bold, color=blue];
m4_1417 -> m4_1418  [key=0, style=solid];
m4_1418 -> m4_1417  [key=0, style=bold, color=blue];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_87  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_219  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m4_219 -> m4_242  [key=2, style=dotted];
m4_219 -> m4_243  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_200  [key=2, style=dotted];
m4_220 -> m4_222  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_220 -> m4_223  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_220 -> m4_156  [key=2, style=dotted];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_27  [key=2, style=dotted];
m4_221 -> m4_23  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_225  [key=2, style=dotted];
m4_222 -> m4_27  [key=2, style=dotted];
m4_222 -> m4_244  [key=2, style=dotted];
m4_222 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label=instruction];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_27  [key=2, style=dotted];
m4_223 -> m4_174  [key=2, style=dotted];
m4_224 -> m4_218  [key=0, style=bold, color=blue];
m4_224 -> m4_23  [key=2, style=dotted];
m4_224 -> m4_225  [key=0, style=solid];
m4_835 -> m4_836  [key=0, style=solid];
m4_836 -> m4_837  [key=0, style=solid];
m4_836 -> m4_839  [key=2, style=dotted];
m4_836 -> m4_390  [key=2, style=dotted];
m4_837 -> m4_838  [key=0, style=solid];
m4_838 -> m4_835  [key=0, style=bold, color=blue];
m4_473 -> m4_474  [key=0, style=solid];
m4_3314 -> m4_3315  [key=0, style=solid];
m4_3315 -> m4_3316  [key=0, style=solid];
m4_3315 -> m4_3319  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3315 -> m4_3315  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3316 -> m4_3317  [key=0, style=solid];
m4_3316 -> m4_321  [key=2, style=dotted];
m4_3316 -> m4_3318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3317 -> m4_3314  [key=0, style=bold, color=blue];
m4_280 -> m4_265  [key=0, style=bold, color=blue];
m4_3495 -> m4_3496  [key=0, style=solid];
m4_3496 -> m4_3497  [key=0, style=solid];
m4_3496 -> m4_3506  [key=2, style=dotted];
m4_3496 -> m4_3498  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_3496 -> m4_3502  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_3496 -> m4_3503  [key=1, style=dashed, color=darkseagreen4, label=joe];
m4_3497 -> m4_3498  [key=0, style=solid];
m4_3498 -> m4_3499  [key=0, style=solid];
m4_3502 -> m4_3503  [key=0, style=solid];
m4_3503 -> m4_3504  [key=0, style=solid];
m4_3503 -> m4_24  [key=2, style=dotted];
m4_3499 -> m4_3500  [key=0, style=solid];
m4_3499 -> m4_1935  [key=2, style=dotted];
m4_3499 -> m4_3501  [key=1, style=dashed, color=darkseagreen4, label=mike];
m4_3499 -> m4_3502  [key=1, style=dashed, color=darkseagreen4, label=mike];
m4_3500 -> m4_3501  [key=0, style=solid];
m4_3501 -> m4_3502  [key=0, style=solid];
m4_3504 -> m4_3505  [key=0, style=solid];
m4_3504 -> m4_27  [key=2, style=dotted];
m4_3505 -> m4_3495  [key=0, style=bold, color=blue];
m4_792 -> m4_793  [key=0, style=solid];
m4_793 -> m4_794  [key=0, style=solid];
m4_793 -> m4_321  [key=2, style=dotted];
m4_793 -> m4_795  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_793 -> m4_793  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_794 -> m4_792  [key=0, style=bold, color=blue];
m4_2215 -> m4_2216  [key=0, style=solid];
m4_2216 -> m4_2217  [key=0, style=solid];
m4_2217 -> m4_2215  [key=0, style=bold, color=blue];
m4_784 -> m4_785  [key=0, style=solid];
m4_785 -> m4_786  [key=0, style=solid];
m4_785 -> m4_321  [key=2, style=dotted];
m4_785 -> m4_787  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_786 -> m4_784  [key=0, style=bold, color=blue];
m4_3093 -> m4_3094  [key=0, style=solid];
m4_3094 -> m4_3095  [key=0, style=solid];
m4_3095 -> m4_3093  [key=0, style=bold, color=blue];
m4_2170 -> m4_2171  [key=0, style=solid];
m4_2171 -> m4_2172  [key=0, style=solid];
m4_2171 -> m4_1545  [key=2, style=dotted];
m4_2172 -> m4_2170  [key=0, style=bold, color=blue];
m4_1833 -> m4_1834  [key=0, style=solid];
m4_1833 -> m4_1835  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_1834 -> m4_1835  [key=0, style=solid];
m4_1835 -> m4_1836  [key=0, style=solid];
m4_1836 -> m4_1837  [key=0, style=solid];
m4_1837 -> m4_1833  [key=0, style=bold, color=blue];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_295  [key=2, style=dotted];
m4_2831 -> m4_2832  [key=0, style=solid];
m4_2832 -> m4_2833  [key=0, style=solid];
m4_2832 -> m4_2839  [key=2, style=dotted];
m4_2832 -> m4_2834  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_2832 -> m4_2835  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_2832 -> m4_2837  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_2833 -> m4_2834  [key=0, style=solid];
m4_2834 -> m4_2835  [key=0, style=solid];
m4_2835 -> m4_2836  [key=0, style=solid];
m4_2835 -> m4_51  [key=2, style=dotted];
m4_2837 -> m4_2838  [key=0, style=solid];
m4_2837 -> m4_27  [key=2, style=dotted];
m4_2836 -> m4_2837  [key=0, style=solid];
m4_2836 -> m4_25  [key=2, style=dotted];
m4_2838 -> m4_2831  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_7  [key=0, style=bold, color=crimson];
m4_4 -> m4_8  [key=0, style=bold, color=crimson];
m4_4 -> m4_6  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=0, style=solid];
m4_5 -> m4_11  [key=0, style=solid];
m4_5 -> m4_17  [key=2, style=dotted];
m4_7 -> m4_6  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [key=0, style=solid];
m4_8 -> m4_18  [key=2, style=dotted];
m4_8 -> m4_19  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_9  [key=0, style=solid];
m4_9 -> m4_4  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_20  [key=2, style=dotted];
m4_989 -> m4_990  [key=0, style=solid];
m4_990 -> m4_991  [key=0, style=solid];
m4_990 -> m4_990  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_991 -> m4_992  [key=0, style=solid];
m4_991 -> m4_200  [key=2, style=dotted];
m4_991 -> m4_993  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_991 -> m4_994  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_991 -> m4_995  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_991 -> m4_996  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_991 -> m4_997  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_992 -> m4_993  [key=0, style=solid];
m4_992 -> m4_27  [key=2, style=dotted];
m4_993 -> m4_994  [key=0, style=solid];
m4_993 -> m4_390  [key=2, style=dotted];
m4_993 -> m4_27  [key=2, style=dotted];
m4_994 -> m4_995  [key=0, style=solid];
m4_994 -> m4_27  [key=2, style=dotted];
m4_995 -> m4_996  [key=0, style=solid];
m4_995 -> m4_27  [key=2, style=dotted];
m4_996 -> m4_997  [key=0, style=solid];
m4_996 -> m4_27  [key=2, style=dotted];
m4_997 -> m4_998  [key=0, style=solid];
m4_997 -> m4_27  [key=2, style=dotted];
m4_998 -> m4_989  [key=0, style=bold, color=blue];
m4_3354 -> m4_3355  [key=0, style=solid];
m4_3355 -> m4_3356  [key=0, style=solid];
m4_3355 -> m4_3359  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3355 -> m4_3355  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3356 -> m4_3357  [key=0, style=solid];
m4_3356 -> m4_321  [key=2, style=dotted];
m4_3356 -> m4_3358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3357 -> m4_3354  [key=0, style=bold, color=blue];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_199  [key=2, style=dotted];
m4_192 -> m4_195  [key=1, style=dashed, color=darkseagreen4, label=store];
m4_192 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=store];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_51  [key=2, style=dotted];
m4_193 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_193 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_193 -> m4_193  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_27  [key=2, style=dotted];
m4_195 -> m4_192  [key=0, style=bold, color=blue];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_200  [key=2, style=dotted];
m4_194 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m4_194 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_137  [key=2, style=dotted];
m4_198 -> m4_191  [key=0, style=bold, color=blue];
m4_198 -> m4_199  [key=0, style=solid];
m4_51 -> m4_125  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3016 -> m4_3017  [key=0, style=solid];
m4_3017 -> m4_3018  [key=0, style=solid];
m4_3017 -> m4_3021  [key=2, style=dotted];
m4_3017 -> m4_3  [key=2, style=dotted];
m4_3017 -> m4_3022  [key=2, style=dotted];
m4_3018 -> m4_3019  [key=0, style=solid];
m4_3018 -> m4_24  [key=2, style=dotted];
m4_3019 -> m4_3020  [key=0, style=solid];
m4_3019 -> m4_27  [key=2, style=dotted];
m4_3020 -> m4_3016  [key=0, style=bold, color=blue];
m4_2247 -> m4_2248  [key=0, style=solid];
m4_2248 -> m4_2249  [key=0, style=solid];
m4_2248 -> m4_25  [key=2, style=dotted];
m4_2248 -> m4_2250  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2248 -> m4_2251  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2249 -> m4_2250  [key=0, style=solid];
m4_2249 -> m4_27  [key=2, style=dotted];
m4_2250 -> m4_2251  [key=0, style=solid];
m4_2250 -> m4_27  [key=2, style=dotted];
m4_2251 -> m4_2252  [key=0, style=solid];
m4_2251 -> m4_27  [key=2, style=dotted];
m4_2252 -> m4_2247  [key=0, style=bold, color=blue];
m4_503 -> m4_504  [key=0, style=solid];
m4_503 -> m4_518  [key=2, style=dotted];
m4_503 -> m4_505  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_503 -> m4_506  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_503 -> m4_507  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_503 -> m4_508  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_504 -> m4_505  [key=0, style=solid];
m4_504 -> m4_509  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_504 -> m4_527  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_505 -> m4_506  [key=0, style=solid];
m4_505 -> m4_106  [key=2, style=dotted];
m4_505 -> m4_508  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_505 -> m4_414  [key=2, style=dotted];
m4_506 -> m4_507  [key=0, style=solid];
m4_506 -> m4_106  [key=2, style=dotted];
m4_506 -> m4_318  [key=2, style=dotted];
m4_507 -> m4_508  [key=0, style=solid];
m4_507 -> m4_106  [key=2, style=dotted];
m4_507 -> m4_89  [key=2, style=dotted];
m4_508 -> m4_509  [key=0, style=solid];
m4_508 -> m4_51  [key=2, style=dotted];
m4_508 -> m4_511  [key=2, style=dotted];
m4_509 -> m4_510  [key=0, style=solid];
m4_509 -> m4_25  [key=2, style=dotted];
m4_509 -> m4_511  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_509 -> m4_512  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_509 -> m4_513  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_509 -> m4_514  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_509 -> m4_515  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_509 -> m4_516  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_509 -> m4_89  [key=2, style=dotted];
m4_510 -> m4_511  [key=0, style=solid];
m4_510 -> m4_27  [key=2, style=dotted];
m4_510 -> m4_503  [key=0, style=bold, color=blue];
m4_512 -> m4_513  [key=0, style=solid];
m4_512 -> m4_27  [key=2, style=dotted];
m4_513 -> m4_514  [key=0, style=solid];
m4_513 -> m4_27  [key=2, style=dotted];
m4_513 -> m4_519  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_513 -> m4_513  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_514 -> m4_515  [key=0, style=solid];
m4_514 -> m4_27  [key=2, style=dotted];
m4_514 -> m4_517  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_514 -> m4_414  [key=2, style=dotted];
m4_515 -> m4_516  [key=0, style=solid];
m4_515 -> m4_27  [key=2, style=dotted];
m4_515 -> m4_318  [key=2, style=dotted];
m4_516 -> m4_517  [key=0, style=solid];
m4_516 -> m4_27  [key=2, style=dotted];
m4_516 -> m4_89  [key=2, style=dotted];
m4_517 -> m4_502  [key=0, style=bold, color=blue];
m4_517 -> m4_519  [key=1, style=dashed, color=darkseagreen4, label=newJson];
m4_517 -> m4_518  [key=0, style=solid];
m4_517 -> m4_511  [key=2, style=dotted];
m4_1579 -> m4_1580  [key=0, style=solid];
m4_1580 -> m4_1581  [key=0, style=solid];
m4_1580 -> m4_839  [key=2, style=dotted];
m4_1580 -> m4_1582  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1580 -> m4_1583  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1580 -> m4_1584  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1580 -> m4_1588  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1581 -> m4_1582  [key=0, style=solid];
m4_1581 -> m4_390  [key=2, style=dotted];
m4_1582 -> m4_1583  [key=0, style=solid];
m4_1583 -> m4_1584  [key=0, style=solid];
m4_1584 -> m4_1585  [key=0, style=solid];
m4_1588 -> m4_1589  [key=0, style=solid];
m4_1588 -> m4_1483  [key=2, style=dotted];
m4_1585 -> m4_1586  [key=0, style=solid];
m4_1585 -> m4_402  [key=2, style=dotted];
m4_1585 -> m4_403  [key=2, style=dotted];
m4_1585 -> m4_1588  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1585 -> m4_1594  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1586 -> m4_1587  [key=0, style=solid];
m4_1594 -> m4_1595  [key=0, style=solid];
m4_1594 -> m4_27  [key=2, style=dotted];
m4_1587 -> m4_1588  [key=0, style=solid];
m4_1587 -> m4_1590  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m4_1590 -> m4_1591  [key=0, style=solid];
m4_1590 -> m4_27  [key=2, style=dotted];
m4_1589 -> m4_1590  [key=0, style=solid];
m4_1589 -> m4_394  [key=2, style=dotted];
m4_1589 -> m4_906  [key=2, style=dotted];
m4_1589 -> m4_1591  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1591 -> m4_1592  [key=0, style=solid];
m4_1591 -> m4_25  [key=2, style=dotted];
m4_1591 -> m4_1593  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1591 -> m4_1594  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1591 -> m4_1595  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1591 -> m4_1596  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1591 -> m4_1597  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1592 -> m4_1593  [key=0, style=solid];
m4_1592 -> m4_27  [key=2, style=dotted];
m4_1593 -> m4_1594  [key=0, style=solid];
m4_1593 -> m4_27  [key=2, style=dotted];
m4_1595 -> m4_1596  [key=0, style=solid];
m4_1595 -> m4_27  [key=2, style=dotted];
m4_1596 -> m4_1597  [key=0, style=solid];
m4_1596 -> m4_27  [key=2, style=dotted];
m4_1597 -> m4_1598  [key=0, style=solid];
m4_1597 -> m4_27  [key=2, style=dotted];
m4_1598 -> m4_1579  [key=0, style=bold, color=blue];
m4_3408 -> m4_3409  [key=0, style=solid];
m4_3409 -> m4_3410  [key=0, style=solid];
m4_3409 -> m4_3413  [key=2, style=dotted];
m4_3410 -> m4_3411  [key=0, style=solid];
m4_3410 -> m4_394  [key=2, style=dotted];
m4_3410 -> m4_906  [key=2, style=dotted];
m4_3411 -> m4_3412  [key=0, style=solid];
m4_3411 -> m4_27  [key=2, style=dotted];
m4_3412 -> m4_3408  [key=0, style=bold, color=blue];
m4_662 -> m4_663  [key=0, style=solid];
m4_662 -> m4_662  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m4_663 -> m4_664  [key=0, style=solid];
m4_663 -> m4_631  [key=2, style=dotted];
m4_663 -> m4_668  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_663 -> m4_669  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_663 -> m4_89  [key=2, style=dotted];
m4_664 -> m4_665  [key=0, style=solid];
m4_664 -> m4_632  [key=2, style=dotted];
m4_664 -> m4_157  [key=2, style=dotted];
m4_668 -> m4_669  [key=0, style=solid];
m4_668 -> m4_27  [key=2, style=dotted];
m4_668 -> m4_659  [key=0, style=bold, color=blue];
m4_665 -> m4_666  [key=0, style=solid];
m4_665 -> m4_671  [key=2, style=dotted];
m4_665 -> m4_620  [key=2, style=dotted];
m4_665 -> m4_667  [key=1, style=dashed, color=darkseagreen4, label=xaml2];
m4_665 -> m4_51  [key=2, style=dotted];
m4_666 -> m4_667  [key=0, style=solid];
m4_666 -> m4_27  [key=2, style=dotted];
m4_666 -> m4_666  [key=3, color=darkorchid, style=bold, label="Local variable string expectedXaml"];
m4_667 -> m4_668  [key=0, style=solid];
m4_667 -> m4_671  [key=2, style=dotted];
m4_667 -> m4_621  [key=2, style=dotted];
m4_667 -> m4_669  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_667 -> m4_89  [key=2, style=dotted];
m4_2696 -> m4_2697  [key=0, style=solid];
m4_2697 -> m4_2698  [key=0, style=solid];
m4_2697 -> m4_2697  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2698 -> m4_2699  [key=0, style=solid];
m4_2698 -> m4_25  [key=2, style=dotted];
m4_2699 -> m4_2700  [key=0, style=solid];
m4_2699 -> m4_27  [key=2, style=dotted];
m4_2700 -> m4_2701  [key=0, style=solid];
m4_2701 -> m4_2702  [key=0, style=solid];
m4_2701 -> m4_25  [key=2, style=dotted];
m4_2702 -> m4_2703  [key=0, style=solid];
m4_2702 -> m4_547  [key=2, style=dotted];
m4_2702 -> m4_27  [key=2, style=dotted];
m4_2703 -> m4_2696  [key=0, style=bold, color=blue];
m4_1029 -> m4_1030  [key=0, style=solid];
m4_1030 -> m4_1031  [key=0, style=solid];
m4_1030 -> m4_1030  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1031 -> m4_1032  [key=0, style=solid];
m4_1031 -> m4_25  [key=2, style=dotted];
m4_1031 -> m4_1033  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_1031 -> m4_1034  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_1031 -> m4_1035  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_1032 -> m4_1033  [key=0, style=solid];
m4_1032 -> m4_27  [key=2, style=dotted];
m4_1033 -> m4_1034  [key=0, style=solid];
m4_1033 -> m4_27  [key=2, style=dotted];
m4_1034 -> m4_1035  [key=0, style=solid];
m4_1034 -> m4_27  [key=2, style=dotted];
m4_1035 -> m4_1036  [key=0, style=solid];
m4_1035 -> m4_27  [key=2, style=dotted];
m4_1036 -> m4_1029  [key=0, style=bold, color=blue];
m4_414 -> m4_415  [key=0, style=solid];
m4_414 -> m4_27  [key=2, style=dotted];
m4_175 -> m4_176  [key=0, style=solid];
m4_533 -> m4_534  [key=0, style=solid];
m4_533 -> m4_539  [key=2, style=dotted];
m4_377 -> m4_378  [key=0, style=solid];
m4_377 -> m4_25  [key=2, style=dotted];
m4_377 -> m4_174  [key=2, style=dotted];
m4_377 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_100  [key=2, style=dotted];
m4_378 -> m4_376  [key=0, style=bold, color=blue];
m4_378 -> m4_378  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_378 -> m4_379  [key=0, style=solid];
m4_694 -> m4_695  [key=0, style=solid];
m4_694 -> m4_23  [key=2, style=dotted];
m4_695 -> m4_696  [key=0, style=solid];
m4_695 -> m4_698  [key=2, style=dotted];
m4_695 -> m4_1706  [key=2, style=dotted];
m4_695 -> m4_697  [key=1, style=dashed, color=darkseagreen4, label=xml1];
m4_696 -> m4_697  [key=0, style=solid];
m4_696 -> m4_51  [key=2, style=dotted];
m4_696 -> m4_100  [key=2, style=dotted];
m4_697 -> m4_694  [key=0, style=bold, color=blue];
m4_697 -> m4_88  [key=2, style=dotted];
m4_697 -> m4_698  [key=0, style=solid];
m4_780 -> m4_781  [key=0, style=solid];
m4_781 -> m4_782  [key=0, style=solid];
m4_782 -> m4_783  [key=0, style=solid];
m4_782 -> m4_25  [key=2, style=dotted];
m4_783 -> m4_780  [key=0, style=bold, color=blue];
m4_787 -> m4_788  [key=0, style=solid];
m4_788 -> m4_789  [key=0, style=solid];
m4_788 -> m4_769  [key=2, style=dotted];
m4_788 -> m4_390  [key=2, style=dotted];
m4_789 -> m4_790  [key=0, style=solid];
m4_789 -> m4_51  [key=2, style=dotted];
m4_790 -> m4_791  [key=0, style=solid];
m4_790 -> m4_137  [key=2, style=dotted];
m4_791 -> m4_787  [key=0, style=bold, color=blue];
m4_795 -> m4_796  [key=0, style=solid];
m4_796 -> m4_797  [key=0, style=solid];
m4_797 -> m4_798  [key=0, style=solid];
m4_797 -> m4_25  [key=2, style=dotted];
m4_798 -> m4_795  [key=0, style=bold, color=blue];
m4_833 -> m4_834  [key=0, style=solid];
m4_833 -> m4_200  [key=2, style=dotted];
m4_832 -> m4_833  [key=0, style=solid];
m4_834 -> m4_832  [key=0, style=bold, color=blue];
m4_919 -> m4_920  [key=0, style=solid];
m4_920 -> m4_921  [key=0, style=solid];
m4_920 -> m4_905  [key=2, style=dotted];
m4_920 -> m4_922  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_921 -> m4_922  [key=0, style=solid];
m4_922 -> m4_923  [key=0, style=solid];
m4_922 -> m4_394  [key=2, style=dotted];
m4_922 -> m4_906  [key=2, style=dotted];
m4_923 -> m4_919  [key=0, style=bold, color=blue];
m4_1105 -> m4_1106  [key=0, style=solid];
m4_1105 -> m4_25  [key=2, style=dotted];
m4_1104 -> m4_1105  [key=0, style=solid];
m4_1106 -> m4_1104  [key=0, style=bold, color=blue];
m4_1132 -> m4_1133  [key=0, style=solid];
m4_1132 -> m4_25  [key=2, style=dotted];
m4_1131 -> m4_1132  [key=0, style=solid];
m4_1133 -> m4_1131  [key=0, style=bold, color=blue];
m4_1139 -> m4_1140  [key=0, style=solid];
m4_1139 -> m4_25  [key=2, style=dotted];
m4_1138 -> m4_1139  [key=0, style=solid];
m4_1140 -> m4_1138  [key=0, style=bold, color=blue];
m4_1146 -> m4_1147  [key=0, style=solid];
m4_1146 -> m4_25  [key=2, style=dotted];
m4_1145 -> m4_1146  [key=0, style=solid];
m4_1147 -> m4_1145  [key=0, style=bold, color=blue];
m4_1153 -> m4_1154  [key=0, style=solid];
m4_1153 -> m4_25  [key=2, style=dotted];
m4_1152 -> m4_1153  [key=0, style=solid];
m4_1154 -> m4_1152  [key=0, style=bold, color=blue];
m4_1160 -> m4_1161  [key=0, style=solid];
m4_1160 -> m4_25  [key=2, style=dotted];
m4_1159 -> m4_1160  [key=0, style=solid];
m4_1161 -> m4_1159  [key=0, style=bold, color=blue];
m4_1167 -> m4_1168  [key=0, style=solid];
m4_1167 -> m4_25  [key=2, style=dotted];
m4_1166 -> m4_1167  [key=0, style=solid];
m4_1168 -> m4_1166  [key=0, style=bold, color=blue];
m4_1174 -> m4_1175  [key=0, style=solid];
m4_1174 -> m4_25  [key=2, style=dotted];
m4_1173 -> m4_1174  [key=0, style=solid];
m4_1175 -> m4_1173  [key=0, style=bold, color=blue];
m4_1181 -> m4_1182  [key=0, style=solid];
m4_1181 -> m4_25  [key=2, style=dotted];
m4_1180 -> m4_1181  [key=0, style=solid];
m4_1182 -> m4_1180  [key=0, style=bold, color=blue];
m4_1188 -> m4_1189  [key=0, style=solid];
m4_1188 -> m4_25  [key=2, style=dotted];
m4_1187 -> m4_1188  [key=0, style=solid];
m4_1189 -> m4_1187  [key=0, style=bold, color=blue];
m4_1195 -> m4_1196  [key=0, style=solid];
m4_1195 -> m4_839  [key=2, style=dotted];
m4_1195 -> m4_1197  [key=2, style=dotted];
m4_1194 -> m4_1195  [key=0, style=solid];
m4_1196 -> m4_1194  [key=0, style=bold, color=blue];
m4_1203 -> m4_1204  [key=0, style=solid];
m4_1203 -> m4_3  [key=2, style=dotted];
m4_1203 -> m4_1197  [key=2, style=dotted];
m4_1202 -> m4_1203  [key=0, style=solid];
m4_1204 -> m4_1202  [key=0, style=bold, color=blue];
m4_1213 -> m4_1214  [key=0, style=solid];
m4_1214 -> m4_1215  [key=0, style=solid];
m4_1214 -> m4_174  [key=2, style=dotted];
m4_1214 -> m4_394  [key=2, style=dotted];
m4_1214 -> m4_1216  [key=2, style=dotted];
m4_1214 -> m4_395  [key=2, style=dotted];
m4_1215 -> m4_1213  [key=0, style=bold, color=blue];
m4_1220 -> m4_1221  [key=0, style=solid];
m4_1221 -> m4_1222  [key=0, style=solid];
m4_1221 -> m4_394  [key=2, style=dotted];
m4_1221 -> m4_1216  [key=2, style=dotted];
m4_1221 -> m4_652  [key=2, style=dotted];
m4_1222 -> m4_1220  [key=0, style=bold, color=blue];
m4_1226 -> m4_1227  [key=0, style=solid];
m4_1227 -> m4_1228  [key=0, style=solid];
m4_1227 -> m4_394  [key=2, style=dotted];
m4_1227 -> m4_1216  [key=2, style=dotted];
m4_1227 -> m4_652  [key=2, style=dotted];
m4_1228 -> m4_1226  [key=0, style=bold, color=blue];
m4_1232 -> m4_1233  [key=0, style=solid];
m4_1233 -> m4_1234  [key=0, style=solid];
m4_1233 -> m4_394  [key=2, style=dotted];
m4_1233 -> m4_1216  [key=2, style=dotted];
m4_1233 -> m4_652  [key=2, style=dotted];
m4_1234 -> m4_1232  [key=0, style=bold, color=blue];
m4_1296 -> m4_1297  [key=0, style=solid];
m4_1297 -> m4_1298  [key=0, style=solid];
m4_1298 -> m4_1299  [key=0, style=solid];
m4_1298 -> m4_25  [key=2, style=dotted];
m4_1299 -> m4_1296  [key=0, style=bold, color=blue];
m4_1346 -> m4_1347  [key=0, style=solid];
m4_1347 -> m4_1348  [key=0, style=solid];
m4_1348 -> m4_1346  [key=0, style=bold, color=blue];
m4_1383 -> m4_1384  [key=0, style=solid];
m4_1383 -> m4_394  [key=2, style=dotted];
m4_1383 -> m4_652  [key=2, style=dotted];
m4_1382 -> m4_1383  [key=0, style=solid];
m4_1384 -> m4_1382  [key=0, style=bold, color=blue];
m4_1860 -> m4_1861  [key=0, style=solid];
m4_1860 -> m4_25  [key=2, style=dotted];
m4_1859 -> m4_1860  [key=0, style=solid];
m4_1861 -> m4_1859  [key=0, style=bold, color=blue];
m4_1865 -> m4_1866  [key=0, style=solid];
m4_1866 -> m4_1867  [key=0, style=solid];
m4_1866 -> m4_50  [key=2, style=dotted];
m4_1866 -> m4_1868  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_1866 -> m4_1872  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_1867 -> m4_1868  [key=0, style=solid];
m4_1867 -> m4_418  [key=2, style=dotted];
m4_1868 -> m4_1869  [key=0, style=solid];
m4_1868 -> m4_418  [key=2, style=dotted];
m4_1872 -> m4_1873  [key=0, style=solid];
m4_1872 -> m4_418  [key=2, style=dotted];
m4_1869 -> m4_1870  [key=0, style=solid];
m4_1869 -> m4_50  [key=2, style=dotted];
m4_1869 -> m4_1871  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1869 -> m4_1872  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1869 -> m4_1873  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1870 -> m4_1871  [key=0, style=solid];
m4_1870 -> m4_418  [key=2, style=dotted];
m4_1871 -> m4_1872  [key=0, style=solid];
m4_1871 -> m4_418  [key=2, style=dotted];
m4_1873 -> m4_1874  [key=0, style=solid];
m4_1873 -> m4_24  [key=2, style=dotted];
m4_1874 -> m4_1875  [key=0, style=solid];
m4_1874 -> m4_25  [key=2, style=dotted];
m4_1875 -> m4_1865  [key=0, style=bold, color=blue];
m4_2049 -> m4_2050  [key=0, style=solid];
m4_2049 -> m4_25  [key=2, style=dotted];
m4_2048 -> m4_2049  [key=0, style=solid];
m4_2050 -> m4_2048  [key=0, style=bold, color=blue];
m4_2279 -> m4_2280  [key=0, style=solid];
m4_2280 -> m4_2281  [key=0, style=solid];
m4_2280 -> m4_200  [key=2, style=dotted];
m4_2281 -> m4_2279  [key=0, style=bold, color=blue];
m4_2566 -> m4_2567  [key=0, style=solid];
m4_2566 -> m4_25  [key=2, style=dotted];
m4_2565 -> m4_2566  [key=0, style=solid];
m4_2567 -> m4_2565  [key=0, style=bold, color=blue];
m4_2652 -> m4_2653  [key=0, style=solid];
m4_2652 -> m4_25  [key=2, style=dotted];
m4_2651 -> m4_2652  [key=0, style=solid];
m4_2653 -> m4_2651  [key=0, style=bold, color=blue];
m4_2666 -> m4_2667  [key=0, style=solid];
m4_2666 -> m4_25  [key=2, style=dotted];
m4_2665 -> m4_2666  [key=0, style=solid];
m4_2667 -> m4_2665  [key=0, style=bold, color=blue];
m4_2685 -> m4_2686  [key=0, style=solid];
m4_2686 -> m4_2687  [key=0, style=solid];
m4_2687 -> m4_2688  [key=0, style=solid];
m4_2687 -> m4_25  [key=2, style=dotted];
m4_2688 -> m4_2685  [key=0, style=bold, color=blue];
m4_2692 -> m4_2693  [key=0, style=solid];
m4_2693 -> m4_2694  [key=0, style=solid];
m4_2694 -> m4_2695  [key=0, style=solid];
m4_2694 -> m4_25  [key=2, style=dotted];
m4_2695 -> m4_2692  [key=0, style=bold, color=blue];
m4_2768 -> m4_2769  [key=0, style=solid];
m4_2769 -> m4_2770  [key=0, style=solid];
m4_2769 -> m4_25  [key=2, style=dotted];
m4_2770 -> m4_2768  [key=0, style=bold, color=blue];
m4_2774 -> m4_2775  [key=0, style=solid];
m4_2775 -> m4_2776  [key=0, style=solid];
m4_2775 -> m4_25  [key=2, style=dotted];
m4_2776 -> m4_2774  [key=0, style=bold, color=blue];
m4_2780 -> m4_2781  [key=0, style=solid];
m4_2781 -> m4_2782  [key=0, style=solid];
m4_2781 -> m4_25  [key=2, style=dotted];
m4_2782 -> m4_2780  [key=0, style=bold, color=blue];
m4_2790 -> m4_2791  [key=0, style=solid];
m4_2791 -> m4_2792  [key=0, style=solid];
m4_2791 -> m4_25  [key=2, style=dotted];
m4_2792 -> m4_2790  [key=0, style=bold, color=blue];
m4_2796 -> m4_2797  [key=0, style=solid];
m4_2797 -> m4_2798  [key=0, style=solid];
m4_2797 -> m4_295  [key=2, style=dotted];
m4_2798 -> m4_2796  [key=0, style=bold, color=blue];
m4_2904 -> m4_2905  [key=0, style=solid];
m4_2904 -> m4_106  [key=2, style=dotted];
m4_2905 -> m4_2906  [key=0, style=solid];
m4_2903 -> m4_2904  [key=0, style=solid];
m4_2903 -> m4_2905  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2906 -> m4_2903  [key=0, style=bold, color=blue];
m4_2919 -> m4_2920  [key=0, style=solid];
m4_2919 -> m4_106  [key=2, style=dotted];
m4_2920 -> m4_2921  [key=0, style=solid];
m4_2918 -> m4_2919  [key=0, style=solid];
m4_2918 -> m4_2920  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2921 -> m4_2918  [key=0, style=bold, color=blue];
m4_2934 -> m4_2935  [key=0, style=solid];
m4_2934 -> m4_106  [key=2, style=dotted];
m4_2935 -> m4_2936  [key=0, style=solid];
m4_2933 -> m4_2934  [key=0, style=solid];
m4_2933 -> m4_2935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2936 -> m4_2933  [key=0, style=bold, color=blue];
m4_3050 -> m4_3051  [key=0, style=solid];
m4_3050 -> m4_461  [key=2, style=dotted];
m4_3050 -> m4_462  [key=2, style=dotted];
m4_3050 -> m4_2722  [key=2, style=dotted];
m4_3049 -> m4_3050  [key=0, style=solid];
m4_3051 -> m4_3049  [key=0, style=bold, color=blue];
m4_3062 -> m4_3063  [key=0, style=solid];
m4_3063 -> m4_3064  [key=0, style=solid];
m4_3063 -> m4_3066  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3064 -> m4_3065  [key=0, style=solid];
m4_3064 -> m4_456  [key=2, style=dotted];
m4_3064 -> m4_3069  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_3066 -> m4_3067  [key=0, style=solid];
m4_3066 -> m4_461  [key=2, style=dotted];
m4_3066 -> m4_462  [key=2, style=dotted];
m4_3066 -> m4_3068  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3066 -> m4_3069  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3065 -> m4_3066  [key=0, style=solid];
m4_3069 -> m4_3070  [key=0, style=solid];
m4_3069 -> m4_463  [key=2, style=dotted];
m4_3067 -> m4_3068  [key=0, style=solid];
m4_3067 -> m4_3071  [key=2, style=dotted];
m4_3068 -> m4_3069  [key=0, style=solid];
m4_3068 -> m4_3071  [key=2, style=dotted];
m4_3070 -> m4_3062  [key=0, style=bold, color=blue];
m4_3142 -> m4_3143  [key=0, style=solid];
m4_3142 -> m4_25  [key=2, style=dotted];
m4_3141 -> m4_3142  [key=0, style=solid];
m4_3143 -> m4_3141  [key=0, style=bold, color=blue];
m4_3187 -> m4_3188  [key=0, style=solid];
m4_3187 -> m4_25  [key=2, style=dotted];
m4_3187 -> m4_3183  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_3186 -> m4_3187  [key=0, style=solid];
m4_3188 -> m4_3186  [key=0, style=bold, color=blue];
m4_3285 -> m4_3286  [key=0, style=solid];
m4_3285 -> m4_25  [key=2, style=dotted];
m4_3284 -> m4_3285  [key=0, style=solid];
m4_3286 -> m4_3284  [key=0, style=bold, color=blue];
m4_3292 -> m4_3293  [key=0, style=solid];
m4_3292 -> m4_25  [key=2, style=dotted];
m4_3291 -> m4_3292  [key=0, style=solid];
m4_3293 -> m4_3291  [key=0, style=bold, color=blue];
m4_3312 -> m4_3313  [key=0, style=solid];
m4_3312 -> m4_25  [key=2, style=dotted];
m4_3311 -> m4_3312  [key=0, style=solid];
m4_3313 -> m4_3311  [key=0, style=bold, color=blue];
m4_3319 -> m4_3320  [key=0, style=solid];
m4_3319 -> m4_25  [key=2, style=dotted];
m4_3318 -> m4_3319  [key=0, style=solid];
m4_3320 -> m4_3318  [key=0, style=bold, color=blue];
m4_3326 -> m4_3327  [key=0, style=solid];
m4_3326 -> m4_25  [key=2, style=dotted];
m4_3325 -> m4_3326  [key=0, style=solid];
m4_3327 -> m4_3325  [key=0, style=bold, color=blue];
m4_3352 -> m4_3353  [key=0, style=solid];
m4_3352 -> m4_25  [key=2, style=dotted];
m4_3351 -> m4_3352  [key=0, style=solid];
m4_3353 -> m4_3351  [key=0, style=bold, color=blue];
m4_3359 -> m4_3360  [key=0, style=solid];
m4_3359 -> m4_25  [key=2, style=dotted];
m4_3358 -> m4_3359  [key=0, style=solid];
m4_3360 -> m4_3358  [key=0, style=bold, color=blue];
m4_3453 -> m4_3454  [key=0, style=solid];
m4_3453 -> m4_25  [key=2, style=dotted];
m4_3452 -> m4_3453  [key=0, style=solid];
m4_3454 -> m4_3452  [key=0, style=bold, color=blue];
m4_3609 -> m4_3610  [key=0, style=solid];
m4_3610 -> m4_3611  [key=0, style=solid];
m4_3610 -> m4_25  [key=2, style=dotted];
m4_3611 -> m4_3609  [key=0, style=bold, color=blue];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_348  [key=0, style=bold, color=blue];
m4_361 -> m4_362  [key=0, style=solid];
m4_361 -> m4_370  [key=2, style=dotted];
m4_357 -> m4_355  [key=0, style=bold, color=blue];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_191  [key=2, style=dotted];
m4_363 -> m4_361  [key=0, style=bold, color=blue];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_175  [key=2, style=dotted];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_191  [key=2, style=dotted];
m4_362 -> m4_371  [key=2, style=dotted];
m4_362 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m4_398 -> m4_191  [key=2, style=dotted];
m4_398 -> m4_399  [key=0, style=solid];
m4_398 -> m4_51  [key=2, style=dotted];
m4_405 -> m4_157  [key=2, style=dotted];
m4_405 -> m4_406  [key=0, style=solid];
m4_405 -> m4_3  [key=2, style=dotted];
m4_405 -> m4_401  [key=2, style=dotted];
m4_405 -> m4_390  [key=2, style=dotted];
m4_405 -> m4_402  [key=2, style=dotted];
m4_405 -> m4_403  [key=2, style=dotted];
m4_397 -> m4_398  [key=0, style=solid];
m4_397 -> m4_3  [key=2, style=dotted];
m4_397 -> m4_401  [key=2, style=dotted];
m4_397 -> m4_390  [key=2, style=dotted];
m4_397 -> m4_402  [key=2, style=dotted];
m4_397 -> m4_403  [key=2, style=dotted];
m4_399 -> m4_397  [key=0, style=bold, color=blue];
m4_399 -> m4_400  [key=0, style=solid];
m4_399 -> m4_27  [key=2, style=dotted];
m4_534 -> m4_414  [key=2, style=dotted];
m4_534 -> m4_535  [key=0, style=solid];
m4_534 -> m4_539  [key=2, style=dotted];
m4_404 -> m4_405  [key=0, style=solid];
m4_406 -> m4_404  [key=0, style=bold, color=blue];
m4_406 -> m4_407  [key=0, style=solid];
m4_406 -> m4_394  [key=2, style=dotted];
m4_406 -> m4_395  [key=2, style=dotted];
m4_535 -> m4_533  [key=0, style=bold, color=blue];
m4_535 -> m4_536  [key=0, style=solid];
m4_535 -> m4_51  [key=2, style=dotted];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_176  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m4_1748 -> m4_1749  [key=0, style=solid];
m4_1749 -> m4_1750  [key=0, style=solid];
m4_1749 -> m4_1753  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1749 -> m4_1756  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1749 -> m4_1749  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m4_1750 -> m4_1751  [key=0, style=solid];
m4_1750 -> m4_51  [key=2, style=dotted];
m4_1753 -> m4_1754  [key=0, style=solid];
m4_1753 -> m4_418  [key=2, style=dotted];
m4_1756 -> m4_1757  [key=0, style=solid];
m4_1756 -> m4_418  [key=2, style=dotted];
m4_1751 -> m4_1752  [key=0, style=solid];
m4_1751 -> m4_27  [key=2, style=dotted];
m4_1752 -> m4_1753  [key=0, style=solid];
m4_1752 -> m4_50  [key=2, style=dotted];
m4_1752 -> m4_1754  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_1754 -> m4_1755  [key=0, style=solid];
m4_1754 -> m4_51  [key=2, style=dotted];
m4_1754 -> m4_27  [key=2, style=dotted];
m4_1755 -> m4_1756  [key=0, style=solid];
m4_1755 -> m4_50  [key=2, style=dotted];
m4_1755 -> m4_1757  [key=1, style=dashed, color=darkseagreen4, label=d2];
m4_1757 -> m4_1758  [key=0, style=solid];
m4_1757 -> m4_51  [key=2, style=dotted];
m4_1757 -> m4_27  [key=2, style=dotted];
m4_1758 -> m4_1748  [key=0, style=bold, color=blue];
m4_3150 -> m4_3151  [key=0, style=solid];
m4_3151 -> m4_3152  [key=0, style=solid];
m4_3152 -> m4_3153  [key=0, style=solid];
m4_3152 -> m4_3  [key=2, style=dotted];
m4_3152 -> m4_3154  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_3152 -> m4_3155  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_3153 -> m4_3154  [key=0, style=solid];
m4_3153 -> m4_51  [key=2, style=dotted];
m4_3154 -> m4_3155  [key=0, style=solid];
m4_3154 -> m4_394  [key=2, style=dotted];
m4_3154 -> m4_395  [key=2, style=dotted];
m4_3155 -> m4_3156  [key=0, style=solid];
m4_3155 -> m4_394  [key=2, style=dotted];
m4_3155 -> m4_395  [key=2, style=dotted];
m4_3156 -> m4_3157  [key=0, style=solid];
m4_3156 -> m4_27  [key=2, style=dotted];
m4_3157 -> m4_3150  [key=0, style=bold, color=blue];
m4_3518 -> m4_3631  [key=0, style=solid];
m4_3631 -> m4_3632  [key=0, style=solid];
m4_3631 -> m4_3633  [key=2, style=dotted];
m4_3631 -> m4_3634  [key=2, style=dotted];
m4_3631 -> m4_3635  [key=2, style=dotted];
m4_3631 -> m4_3631  [key=1, style=dashed, color=darkseagreen4, label=answer];
m4_3632 -> m4_3518  [key=0, style=bold, color=blue];
m4_3113 -> m4_3114  [key=0, style=solid];
m4_3114 -> m4_3115  [key=0, style=solid];
m4_3114 -> m4_3116  [key=2, style=dotted];
m4_3115 -> m4_3113  [key=0, style=bold, color=blue];
m4_3544 -> m4_3545  [key=0, style=solid];
m4_3545 -> m4_3546  [key=0, style=solid];
m4_3545 -> m4_25  [key=2, style=dotted];
m4_3545 -> m4_3547  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3545 -> m4_3548  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3545 -> m4_3549  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3546 -> m4_3547  [key=0, style=solid];
m4_3546 -> m4_27  [key=2, style=dotted];
m4_3547 -> m4_3548  [key=0, style=solid];
m4_3547 -> m4_27  [key=2, style=dotted];
m4_3548 -> m4_3549  [key=0, style=solid];
m4_3548 -> m4_27  [key=2, style=dotted];
m4_3549 -> m4_3550  [key=0, style=solid];
m4_3549 -> m4_27  [key=2, style=dotted];
m4_3550 -> m4_3544  [key=0, style=bold, color=blue];
m4_1223 -> m4_1224  [key=0, style=solid];
m4_1224 -> m4_1225  [key=0, style=solid];
m4_1224 -> m4_321  [key=2, style=dotted];
m4_1224 -> m4_1226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1225 -> m4_1223  [key=0, style=bold, color=blue];
m4_3666 -> m4_3667  [key=0, style=solid];
m4_3667 -> m4_3666  [key=0, style=bold, color=blue];
m4_1603 -> m4_1604  [key=0, style=solid];
m4_1604 -> m4_1605  [key=0, style=solid];
m4_1604 -> m4_25  [key=2, style=dotted];
m4_1604 -> m4_1606  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_1604 -> m4_1607  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_1604 -> m4_1608  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_1604 -> m4_1609  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_1605 -> m4_1606  [key=0, style=solid];
m4_1605 -> m4_27  [key=2, style=dotted];
m4_1606 -> m4_1607  [key=0, style=solid];
m4_1606 -> m4_27  [key=2, style=dotted];
m4_1607 -> m4_1608  [key=0, style=solid];
m4_1607 -> m4_27  [key=2, style=dotted];
m4_1608 -> m4_1609  [key=0, style=solid];
m4_1608 -> m4_27  [key=2, style=dotted];
m4_1609 -> m4_1610  [key=0, style=solid];
m4_1609 -> m4_27  [key=2, style=dotted];
m4_1610 -> m4_1603  [key=0, style=bold, color=blue];
m4_1300 -> m4_1301  [key=0, style=solid];
m4_1301 -> m4_1302  [key=0, style=solid];
m4_1301 -> m4_1301  [key=3, color=darkorchid, style=bold, label="Local variable string googleSearchText"];
m4_1302 -> m4_1303  [key=0, style=solid];
m4_1302 -> m4_180  [key=2, style=dotted];
m4_1303 -> m4_1304  [key=0, style=solid];
m4_1303 -> m4_306  [key=2, style=dotted];
m4_1303 -> m4_1312  [key=2, style=dotted];
m4_1303 -> m4_1305  [key=1, style=dashed, color=darkseagreen4, label=results];
m4_1304 -> m4_1305  [key=0, style=solid];
m4_1304 -> m4_3  [key=2, style=dotted];
m4_1304 -> m4_1307  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1304 -> m4_1308  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1304 -> m4_1309  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1304 -> m4_1310  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1305 -> m4_1306  [key=0, style=solid];
m4_1305 -> m4_1308  [key=0, style=solid];
m4_1307 -> m4_1305  [key=0, style=solid];
m4_1307 -> m4_106  [key=2, style=dotted];
m4_1308 -> m4_1309  [key=0, style=solid];
m4_1308 -> m4_27  [key=2, style=dotted];
m4_1309 -> m4_1310  [key=0, style=solid];
m4_1309 -> m4_27  [key=2, style=dotted];
m4_1310 -> m4_1311  [key=0, style=solid];
m4_1310 -> m4_27  [key=2, style=dotted];
m4_1306 -> m4_1307  [key=0, style=solid];
m4_1306 -> m4_184  [key=2, style=dotted];
m4_1306 -> m4_25  [key=2, style=dotted];
m4_1311 -> m4_1300  [key=0, style=bold, color=blue];
m4_3096 -> m4_3097  [key=0, style=solid];
m4_3097 -> m4_3098  [key=0, style=solid];
m4_3097 -> m4_25  [key=2, style=dotted];
m4_3098 -> m4_3099  [key=0, style=solid];
m4_3098 -> m4_27  [key=2, style=dotted];
m4_3099 -> m4_3096  [key=0, style=bold, color=blue];
m4_824 -> m4_825  [key=0, style=solid];
m4_825 -> m4_826  [key=0, style=solid];
m4_825 -> m4_830  [key=2, style=dotted];
m4_825 -> m4_827  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m4_826 -> m4_827  [key=0, style=solid];
m4_826 -> m4_831  [key=2, style=dotted];
m4_827 -> m4_828  [key=0, style=solid];
m4_827 -> m4_51  [key=2, style=dotted];
m4_827 -> m4_833  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m4_828 -> m4_829  [key=0, style=solid];
m4_828 -> m4_321  [key=2, style=dotted];
m4_828 -> m4_832  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_829 -> m4_824  [key=0, style=bold, color=blue];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_356  [key=2, style=dotted];
m4_364 -> m4_357  [key=2, style=dotted];
m4_364 -> m4_358  [key=2, style=dotted];
m4_364 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m4_371 -> m4_89  [key=2, style=dotted];
m4_371 -> m4_372  [key=0, style=solid];
m4_369 -> m4_174  [key=2, style=dotted];
m4_369 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_369 -> m4_370  [key=0, style=solid];
m4_369 -> m4_359  [key=0, style=bold, color=blue];
m4_366 -> m4_24  [key=2, style=dotted];
m4_366 -> m4_369  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label=newDoc];
m4_366 -> m4_27  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_365  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_365 -> m4_25  [key=2, style=dotted];
m4_365 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m4_365 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m4_368 -> m4_23  [key=2, style=dotted];
m4_368 -> m4_369  [key=0, style=solid];
m4_368 -> m4_27  [key=2, style=dotted];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_367  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_367 -> m4_27  [key=2, style=dotted];
m4_725 -> m4_726  [key=0, style=solid];
m4_725 -> m4_719  [key=0, style=bold, color=blue];
m4_729 -> m4_174  [key=2, style=dotted];
m4_729 -> m4_730  [key=0, style=solid];
m4_729 -> m4_51  [key=2, style=dotted];
m4_729 -> m4_731  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_728 -> m4_23  [key=2, style=dotted];
m4_728 -> m4_729  [key=0, style=solid];
m4_728 -> m4_740  [key=2, style=dotted];
m4_728 -> m4_547  [key=2, style=dotted];
m4_730 -> m4_23  [key=2, style=dotted];
m4_730 -> m4_731  [key=0, style=solid];
m4_730 -> m4_27  [key=2, style=dotted];
m4_727 -> m4_729  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_727 -> m4_191  [key=2, style=dotted];
m4_727 -> m4_728  [key=0, style=solid];
m4_726 -> m4_727  [key=0, style=solid];
m4_726 -> m4_726  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_731 -> m4_725  [key=0, style=bold, color=blue];
m4_731 -> m4_732  [key=0, style=solid];
m4_731 -> m4_25  [key=2, style=dotted];
m4_731 -> m4_733  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_731 -> m4_734  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_731 -> m4_735  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_731 -> m4_736  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_731 -> m4_737  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_731 -> m4_738  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_2787 -> m4_2788  [key=0, style=solid];
m4_2788 -> m4_2789  [key=0, style=solid];
m4_2788 -> m4_321  [key=2, style=dotted];
m4_2788 -> m4_2790  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2789 -> m4_2787  [key=0, style=bold, color=blue];
m4_1286 -> m4_1287  [key=0, style=solid];
m4_1287 -> m4_1288  [key=0, style=solid];
m4_1287 -> m4_50  [key=2, style=dotted];
m4_1287 -> m4_1289  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1287 -> m4_1290  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1288 -> m4_1289  [key=0, style=solid];
m4_1288 -> m4_839  [key=2, style=dotted];
m4_1288 -> m4_418  [key=2, style=dotted];
m4_1289 -> m4_1290  [key=0, style=solid];
m4_1289 -> m4_839  [key=2, style=dotted];
m4_1289 -> m4_418  [key=2, style=dotted];
m4_1290 -> m4_1291  [key=0, style=solid];
m4_1290 -> m4_24  [key=2, style=dotted];
m4_1291 -> m4_1292  [key=0, style=solid];
m4_1291 -> m4_27  [key=2, style=dotted];
m4_1292 -> m4_1286  [key=0, style=bold, color=blue];
m4_2209 -> m4_2210  [key=0, style=solid];
m4_2210 -> m4_2211  [key=0, style=solid];
m4_2210 -> m4_2206  [key=2, style=dotted];
m4_2211 -> m4_2212  [key=0, style=solid];
m4_2211 -> m4_51  [key=2, style=dotted];
m4_2212 -> m4_2213  [key=0, style=solid];
m4_2212 -> m4_25  [key=2, style=dotted];
m4_2213 -> m4_2214  [key=0, style=solid];
m4_2213 -> m4_27  [key=2, style=dotted];
m4_2214 -> m4_2209  [key=0, style=bold, color=blue];
m4_552 -> m4_553  [key=0, style=solid];
m4_552 -> m4_25  [key=2, style=dotted];
m4_553 -> m4_554  [key=0, style=solid];
m4_553 -> m4_27  [key=2, style=dotted];
m4_553 -> m4_557  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_553 -> m4_553  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_554 -> m4_549  [key=0, style=bold, color=blue];
m4_554 -> m4_555  [key=0, style=solid];
m4_554 -> m4_196  [key=2, style=dotted];
m4_554 -> m4_556  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2749 -> m4_2750  [key=0, style=solid];
m4_2750 -> m4_2751  [key=0, style=solid];
m4_2750 -> m4_25  [key=2, style=dotted];
m4_2751 -> m4_2752  [key=0, style=solid];
m4_2751 -> m4_1693  [key=2, style=dotted];
m4_2752 -> m4_2753  [key=0, style=solid];
m4_2752 -> m4_25  [key=2, style=dotted];
m4_2753 -> m4_2754  [key=0, style=solid];
m4_2753 -> m4_1693  [key=2, style=dotted];
m4_2754 -> m4_2755  [key=0, style=solid];
m4_2754 -> m4_25  [key=2, style=dotted];
m4_2755 -> m4_2756  [key=0, style=solid];
m4_2755 -> m4_1693  [key=2, style=dotted];
m4_2756 -> m4_2757  [key=0, style=solid];
m4_2756 -> m4_25  [key=2, style=dotted];
m4_2757 -> m4_2758  [key=0, style=solid];
m4_2757 -> m4_1693  [key=2, style=dotted];
m4_2758 -> m4_2759  [key=0, style=solid];
m4_2758 -> m4_25  [key=2, style=dotted];
m4_2759 -> m4_2760  [key=0, style=solid];
m4_2759 -> m4_1693  [key=2, style=dotted];
m4_2760 -> m4_2761  [key=0, style=solid];
m4_2760 -> m4_25  [key=2, style=dotted];
m4_2761 -> m4_2762  [key=0, style=solid];
m4_2761 -> m4_1693  [key=2, style=dotted];
m4_2762 -> m4_2763  [key=0, style=solid];
m4_2762 -> m4_25  [key=2, style=dotted];
m4_2763 -> m4_2764  [key=0, style=solid];
m4_2763 -> m4_1693  [key=2, style=dotted];
m4_2764 -> m4_2749  [key=0, style=bold, color=blue];
m4_3474 -> m4_3475  [key=0, style=solid];
m4_3475 -> m4_3476  [key=0, style=solid];
m4_3475 -> m4_3475  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3476 -> m4_3477  [key=0, style=solid];
m4_3476 -> m4_25  [key=2, style=dotted];
m4_3476 -> m4_3478  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3476 -> m4_3479  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3476 -> m4_3480  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3476 -> m4_3481  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3477 -> m4_3478  [key=0, style=solid];
m4_3477 -> m4_1693  [key=2, style=dotted];
m4_3478 -> m4_3479  [key=0, style=solid];
m4_3478 -> m4_1693  [key=2, style=dotted];
m4_3479 -> m4_3480  [key=0, style=solid];
m4_3479 -> m4_1693  [key=2, style=dotted];
m4_3480 -> m4_3481  [key=0, style=solid];
m4_3480 -> m4_1693  [key=2, style=dotted];
m4_3481 -> m4_3482  [key=0, style=solid];
m4_3481 -> m4_1693  [key=2, style=dotted];
m4_3482 -> m4_3474  [key=0, style=bold, color=blue];
m4_2668 -> m4_2669  [key=0, style=solid];
m4_2669 -> m4_2670  [key=0, style=solid];
m4_2669 -> m4_2673  [key=2, style=dotted];
m4_2669 -> m4_2674  [key=2, style=dotted];
m4_2670 -> m4_2671  [key=0, style=solid];
m4_2670 -> m4_51  [key=2, style=dotted];
m4_2671 -> m4_2672  [key=0, style=solid];
m4_2671 -> m4_27  [key=2, style=dotted];
m4_2672 -> m4_2668  [key=0, style=bold, color=blue];
m4_530 -> m4_531  [key=0, style=solid];
m4_530 -> m4_534  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_530 -> m4_530  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_531 -> m4_532  [key=0, style=solid];
m4_531 -> m4_538  [key=2, style=dotted];
m4_531 -> m4_533  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_531 -> m4_534  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_531 -> m4_535  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_531 -> m4_196  [key=2, style=dotted];
m4_532 -> m4_533  [key=0, style=solid];
m4_532 -> m4_539  [key=2, style=dotted];
m4_532 -> m4_529  [key=0, style=bold, color=blue];
m4_536 -> m4_537  [key=0, style=solid];
m4_536 -> m4_27  [key=2, style=dotted];
m4_537 -> m4_530  [key=0, style=bold, color=blue];
m4_537 -> m4_538  [key=0, style=solid];
m4_537 -> m4_537  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_89  [key=2, style=dotted];
m4_380 -> m4_381  [key=0, style=solid];
m4_380 -> m4_3  [key=2, style=dotted];
m4_380 -> m4_390  [key=2, style=dotted];
m4_380 -> m4_383  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m4_380 -> m4_387  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m4_380 -> m4_382  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_174  [key=2, style=dotted];
m4_381 -> m4_383  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m4_381 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_381 -> m4_385  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_381 -> m4_1706  [key=2, style=dotted];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_177  [key=2, style=dotted];
m4_383 -> m4_174  [key=2, style=dotted];
m4_383 -> m4_385  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_394  [key=2, style=dotted];
m4_387 -> m4_395  [key=2, style=dotted];
m4_387 -> m4_1706  [key=2, style=dotted];
m4_387 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label=arrayDoc];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_175  [key=2, style=dotted];
m4_382 -> m4_100  [key=2, style=dotted];
m4_384 -> m4_385  [key=0, style=solid];
m4_384 -> m4_391  [key=2, style=dotted];
m4_385 -> m4_386  [key=0, style=solid];
m4_385 -> m4_392  [key=2, style=dotted];
m4_385 -> m4_89  [key=2, style=dotted];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_393  [key=2, style=dotted];
m4_386 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label=arrayXml];
m4_388 -> m4_389  [key=0, style=solid];
m4_388 -> m4_27  [key=2, style=dotted];
m4_388 -> m4_100  [key=2, style=dotted];
m4_389 -> m4_379  [key=0, style=bold, color=blue];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_174  [key=2, style=dotted];
m4_389 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label=arrayJsonText];
m4_956 -> m4_957  [key=0, style=solid];
m4_957 -> m4_958  [key=0, style=solid];
m4_958 -> m4_956  [key=0, style=bold, color=blue];
m4_2582 -> m4_2583  [key=0, style=solid];
m4_2583 -> m4_2584  [key=0, style=solid];
m4_2583 -> m4_2598  [key=2, style=dotted];
m4_2583 -> m4_2589  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_2584 -> m4_2585  [key=0, style=solid];
m4_2584 -> m4_456  [key=2, style=dotted];
m4_2584 -> m4_2589  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2584 -> m4_2594  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2589 -> m4_2590  [key=0, style=solid];
m4_2589 -> m4_2600  [key=2, style=dotted];
m4_2585 -> m4_2586  [key=0, style=solid];
m4_2594 -> m4_2595  [key=0, style=solid];
m4_2594 -> m4_2602  [key=2, style=dotted];
m4_2594 -> m4_2596  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m4_2586 -> m4_2587  [key=0, style=solid];
m4_2587 -> m4_2588  [key=0, style=solid];
m4_2587 -> m4_174  [key=2, style=dotted];
m4_2587 -> m4_2591  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m4_2588 -> m4_2589  [key=0, style=solid];
m4_2588 -> m4_2516  [key=2, style=dotted];
m4_2588 -> m4_2599  [key=2, style=dotted];
m4_2588 -> m4_2590  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m4_2591 -> m4_2592  [key=0, style=solid];
m4_2591 -> m4_178  [key=2, style=dotted];
m4_2590 -> m4_2591  [key=0, style=solid];
m4_2590 -> m4_2601  [key=2, style=dotted];
m4_2592 -> m4_2593  [key=0, style=solid];
m4_2592 -> m4_356  [key=2, style=dotted];
m4_2593 -> m4_2594  [key=0, style=solid];
m4_2593 -> m4_461  [key=2, style=dotted];
m4_2593 -> m4_392  [key=2, style=dotted];
m4_2595 -> m4_2596  [key=0, style=solid];
m4_2595 -> m4_27  [key=2, style=dotted];
m4_2596 -> m4_2597  [key=0, style=solid];
m4_2596 -> m4_2603  [key=2, style=dotted];
m4_2597 -> m4_2582  [key=0, style=bold, color=blue];
m4_1436 -> m4_1437  [key=0, style=solid];
m4_1437 -> m4_1438  [key=0, style=solid];
m4_1437 -> m4_1439  [key=2, style=dotted];
m4_1438 -> m4_1436  [key=0, style=bold, color=blue];
m4_63 -> m4_64  [key=0, style=solid];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_87  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_280  [key=2, style=dotted];
m4_276 -> m4_51  [key=2, style=dotted];
m4_276 -> m4_156  [key=2, style=dotted];
m4_276 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=json2];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_25  [key=2, style=dotted];
m4_277 -> m4_89  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_27  [key=2, style=dotted];
m4_278 -> m4_157  [key=2, style=dotted];
m4_279 -> m4_275  [key=0, style=bold, color=blue];
m4_279 -> m4_89  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_282  [key=2, style=dotted];
m4_2891 -> m4_2892  [key=0, style=solid];
m4_2892 -> m4_2893  [key=0, style=solid];
m4_2892 -> m4_2895  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2892 -> m4_2223  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2893 -> m4_2894  [key=0, style=solid];
m4_2893 -> m4_3  [key=2, style=dotted];
m4_2893 -> m4_2904  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2893 -> m4_2897  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2893 -> m4_2898  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2893 -> m4_2899  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2893 -> m4_2900  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2893 -> m4_2901  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2895 -> m4_2896  [key=0, style=solid];
m4_2895 -> m4_394  [key=2, style=dotted];
m4_2895 -> m4_652  [key=2, style=dotted];
m4_2894 -> m4_2895  [key=0, style=solid];
m4_2894 -> m4_2904  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2894 -> m4_2905  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2894 -> m4_2894  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m4_2897 -> m4_2898  [key=0, style=solid];
m4_2897 -> m4_27  [key=2, style=dotted];
m4_2898 -> m4_2899  [key=0, style=solid];
m4_2898 -> m4_27  [key=2, style=dotted];
m4_2899 -> m4_2900  [key=0, style=solid];
m4_2899 -> m4_27  [key=2, style=dotted];
m4_2900 -> m4_2901  [key=0, style=solid];
m4_2900 -> m4_27  [key=2, style=dotted];
m4_2901 -> m4_2902  [key=0, style=solid];
m4_2901 -> m4_27  [key=2, style=dotted];
m4_2896 -> m4_2897  [key=0, style=solid];
m4_2896 -> m4_864  [key=2, style=dotted];
m4_2902 -> m4_2891  [key=0, style=bold, color=blue];
m4_2403 -> m4_2404  [key=0, style=solid];
m4_2404 -> m4_2405  [key=0, style=solid];
m4_2404 -> m4_1730  [key=2, style=dotted];
m4_2405 -> m4_2403  [key=0, style=bold, color=blue];
m4_597 -> m4_598  [key=0, style=solid];
m4_597 -> m4_51  [key=2, style=dotted];
m4_600 -> m4_100  [key=2, style=dotted];
m4_600 -> m4_601  [key=0, style=solid];
m4_600 -> m4_27  [key=2, style=dotted];
m4_598 -> m4_600  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_598 -> m4_598  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_598 -> m4_599  [key=0, style=solid];
m4_598 -> m4_25  [key=2, style=dotted];
m4_598 -> m4_601  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_599 -> m4_600  [key=0, style=solid];
m4_599 -> m4_1706  [key=2, style=dotted];
m4_599 -> m4_601  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_599 -> m4_27  [key=2, style=dotted];
m4_601 -> m4_602  [key=0, style=solid];
m4_601 -> m4_174  [key=2, style=dotted];
m4_601 -> m4_27  [key=2, style=dotted];
m4_602 -> m4_89  [key=2, style=dotted];
m4_602 -> m4_603  [key=0, style=solid];
m4_602 -> m4_595  [key=0, style=bold, color=blue];
m4_603 -> m4_597  [key=0, style=bold, color=blue];
m4_310 -> m4_311  [key=0, style=solid];
m4_315 -> m4_89  [key=2, style=dotted];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_27  [key=2, style=dotted];
m4_312 -> m4_24  [key=2, style=dotted];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_314  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_312 -> m4_27  [key=2, style=dotted];
m4_314 -> m4_315  [key=0, style=solid];
m4_314 -> m4_317  [key=2, style=dotted];
m4_314 -> m4_27  [key=2, style=dotted];
m4_311 -> m4_312  [key=0, style=solid];
m4_311 -> m4_311  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_311 -> m4_51  [key=2, style=dotted];
m4_311 -> m4_313  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_313 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label=test2];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_313  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_313 -> m4_25  [key=2, style=dotted];
m4_316 -> m4_310  [key=0, style=bold, color=blue];
m4_316 -> m4_307  [key=0, style=bold, color=blue];
m4_644 -> m4_645  [key=0, style=solid];
m4_644 -> m4_632  [key=2, style=dotted];
m4_645 -> m4_646  [key=0, style=solid];
m4_645 -> m4_394  [key=2, style=dotted];
m4_645 -> m4_395  [key=2, style=dotted];
m4_645 -> m4_647  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_645 -> m4_650  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3455 -> m4_3456  [key=0, style=solid];
m4_3456 -> m4_3457  [key=0, style=solid];
m4_3456 -> m4_3461  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3456 -> m4_3456  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3457 -> m4_3458  [key=0, style=solid];
m4_3457 -> m4_25  [key=2, style=dotted];
m4_3457 -> m4_3459  [key=1, style=dashed, color=darkseagreen4, label=floats];
m4_3457 -> m4_3460  [key=1, style=dashed, color=darkseagreen4, label=floats];
m4_3461 -> m4_3462  [key=0, style=solid];
m4_3461 -> m4_25  [key=2, style=dotted];
m4_3461 -> m4_3463  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m4_3461 -> m4_3464  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m4_3458 -> m4_3459  [key=0, style=solid];
m4_3458 -> m4_27  [key=2, style=dotted];
m4_3459 -> m4_3460  [key=0, style=solid];
m4_3459 -> m4_27  [key=2, style=dotted];
m4_3460 -> m4_3461  [key=0, style=solid];
m4_3460 -> m4_27  [key=2, style=dotted];
m4_3462 -> m4_3463  [key=0, style=solid];
m4_3462 -> m4_27  [key=2, style=dotted];
m4_3463 -> m4_3464  [key=0, style=solid];
m4_3463 -> m4_27  [key=2, style=dotted];
m4_3464 -> m4_3465  [key=0, style=solid];
m4_3464 -> m4_27  [key=2, style=dotted];
m4_3465 -> m4_3455  [key=0, style=bold, color=blue];
m4_1462 -> m4_1463  [key=0, style=solid];
m4_1463 -> m4_1464  [key=0, style=solid];
m4_1463 -> m4_1465  [key=2, style=dotted];
m4_1464 -> m4_1462  [key=0, style=bold, color=blue];
m4_2263 -> m4_2264  [key=0, style=solid];
m4_2264 -> m4_2265  [key=0, style=solid];
m4_2264 -> m4_2268  [key=2, style=dotted];
m4_2265 -> m4_2266  [key=0, style=solid];
m4_2265 -> m4_24  [key=2, style=dotted];
m4_2266 -> m4_2267  [key=0, style=solid];
m4_2266 -> m4_27  [key=2, style=dotted];
m4_2267 -> m4_2263  [key=0, style=bold, color=blue];
m4_1148 -> m4_1149  [key=0, style=solid];
m4_1149 -> m4_1150  [key=0, style=solid];
m4_1149 -> m4_1153  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1149 -> m4_1128  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1150 -> m4_1151  [key=0, style=solid];
m4_1150 -> m4_321  [key=2, style=dotted];
m4_1150 -> m4_1152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1151 -> m4_1148  [key=0, style=bold, color=blue];
m4_2819 -> m4_2820  [key=0, style=solid];
m4_2820 -> m4_2821  [key=0, style=solid];
m4_2820 -> m4_394  [key=2, style=dotted];
m4_2820 -> m4_652  [key=2, style=dotted];
m4_2820 -> m4_2822  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2820 -> m4_2823  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2820 -> m4_2824  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2821 -> m4_2822  [key=0, style=solid];
m4_2821 -> m4_2816  [key=2, style=dotted];
m4_2821 -> m4_2817  [key=2, style=dotted];
m4_2821 -> m4_27  [key=2, style=dotted];
m4_2822 -> m4_2823  [key=0, style=solid];
m4_2822 -> m4_2818  [key=2, style=dotted];
m4_2822 -> m4_27  [key=2, style=dotted];
m4_2823 -> m4_2824  [key=0, style=solid];
m4_2823 -> m4_27  [key=2, style=dotted];
m4_2824 -> m4_2825  [key=0, style=solid];
m4_2824 -> m4_27  [key=2, style=dotted];
m4_2825 -> m4_2826  [key=0, style=solid];
m4_2825 -> m4_25  [key=2, style=dotted];
m4_2825 -> m4_2827  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2825 -> m4_2828  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2825 -> m4_2829  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2826 -> m4_2827  [key=0, style=solid];
m4_2826 -> m4_27  [key=2, style=dotted];
m4_2827 -> m4_2828  [key=0, style=solid];
m4_2827 -> m4_27  [key=2, style=dotted];
m4_2828 -> m4_2829  [key=0, style=solid];
m4_2828 -> m4_27  [key=2, style=dotted];
m4_2829 -> m4_2830  [key=0, style=solid];
m4_2829 -> m4_27  [key=2, style=dotted];
m4_2830 -> m4_2819  [key=0, style=bold, color=blue];
m4_3668 -> m4_3669  [key=0, style=solid];
m4_3669 -> m4_3670  [key=0, style=solid];
m4_3669 -> m4_261  [key=2, style=dotted];
m4_3669 -> m4_3671  [key=2, style=dotted];
m4_3669 -> m4_3089  [key=2, style=dotted];
m4_3670 -> m4_3668  [key=0, style=bold, color=blue];
m4_1086 -> m4_1087  [key=0, style=solid];
m4_1087 -> m4_1088  [key=0, style=solid];
m4_1087 -> m4_1087  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1088 -> m4_1089  [key=0, style=solid];
m4_1088 -> m4_25  [key=2, style=dotted];
m4_1088 -> m4_1090  [key=1, style=dashed, color=darkseagreen4, label=products];
m4_1088 -> m4_1092  [key=1, style=dashed, color=darkseagreen4, label=products];
m4_1088 -> m4_1093  [key=1, style=dashed, color=darkseagreen4, label=products];
m4_1089 -> m4_1090  [key=0, style=solid];
m4_1089 -> m4_1076  [key=2, style=dotted];
m4_1090 -> m4_1091  [key=0, style=solid];
m4_1092 -> m4_1093  [key=0, style=solid];
m4_1092 -> m4_27  [key=2, style=dotted];
m4_1093 -> m4_1094  [key=0, style=solid];
m4_1093 -> m4_27  [key=2, style=dotted];
m4_1091 -> m4_1092  [key=0, style=solid];
m4_1091 -> m4_137  [key=2, style=dotted];
m4_1094 -> m4_1086  [key=0, style=bold, color=blue];
m4_416 -> m4_417  [key=0, style=solid];
m4_416 -> m4_27  [key=2, style=dotted];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_417 -> m4_417  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_417 -> m4_409  [key=0, style=bold, color=blue];
m4_3388 -> m4_3389  [key=0, style=solid];
m4_3389 -> m4_3390  [key=0, style=solid];
m4_3389 -> m4_3021  [key=2, style=dotted];
m4_3390 -> m4_3391  [key=0, style=solid];
m4_3391 -> m4_3392  [key=0, style=solid];
m4_3391 -> m4_3  [key=2, style=dotted];
m4_3392 -> m4_3393  [key=0, style=solid];
m4_3392 -> m4_394  [key=2, style=dotted];
m4_3392 -> m4_395  [key=2, style=dotted];
m4_3392 -> m4_3394  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3393 -> m4_3394  [key=0, style=solid];
m4_3393 -> m4_27  [key=2, style=dotted];
m4_3394 -> m4_3395  [key=0, style=solid];
m4_3394 -> m4_394  [key=2, style=dotted];
m4_3394 -> m4_3398  [key=2, style=dotted];
m4_3394 -> m4_3396  [key=1, style=dashed, color=darkseagreen4, label=values2];
m4_3395 -> m4_3396  [key=0, style=solid];
m4_3395 -> m4_27  [key=2, style=dotted];
m4_3396 -> m4_3397  [key=0, style=solid];
m4_3396 -> m4_27  [key=2, style=dotted];
m4_3397 -> m4_3388  [key=0, style=bold, color=blue];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_294  [key=2, style=dotted];
m4_1727 -> m4_1728  [key=0, style=solid];
m4_1728 -> m4_1729  [key=0, style=solid];
m4_1728 -> m4_1730  [key=2, style=dotted];
m4_1729 -> m4_1727  [key=0, style=bold, color=blue];
m4_415 -> m4_416  [key=0, style=solid];
m4_415 -> m4_25  [key=2, style=dotted];
m4_3602 -> m4_3603  [key=0, style=solid];
m4_3603 -> m4_3602  [key=0, style=bold, color=blue];
m4_146 -> m4_138  [key=0, style=bold, color=blue];
m4_3307 -> m4_3308  [key=0, style=solid];
m4_3308 -> m4_3309  [key=0, style=solid];
m4_3308 -> m4_3312  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3308 -> m4_3308  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3309 -> m4_3310  [key=0, style=solid];
m4_3309 -> m4_321  [key=2, style=dotted];
m4_3309 -> m4_3311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3310 -> m4_3307  [key=0, style=bold, color=blue];
m4_622 -> m4_623  [key=0, style=solid];
m4_622 -> m4_629  [key=2, style=dotted];
m4_622 -> m4_624  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_623 -> m4_624  [key=0, style=solid];
m4_623 -> m4_631  [key=2, style=dotted];
m4_623 -> m4_628  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_623 -> m4_629  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_623 -> m4_64  [key=2, style=dotted];
m4_623 -> m4_48  [key=2, style=dotted];
m4_623 -> m4_630  [key=2, style=dotted];
m4_623 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_624 -> m4_625  [key=0, style=solid];
m4_624 -> m4_632  [key=2, style=dotted];
m4_624 -> m4_631  [key=2, style=dotted];
m4_628 -> m4_629  [key=0, style=solid];
m4_628 -> m4_27  [key=2, style=dotted];
m4_629 -> m4_630  [key=0, style=solid];
m4_629 -> m4_27  [key=2, style=dotted];
m4_625 -> m4_626  [key=0, style=solid];
m4_625 -> m4_51  [key=2, style=dotted];
m4_625 -> m4_627  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_625 -> m4_632  [key=2, style=dotted];
m4_626 -> m4_627  [key=0, style=solid];
m4_626 -> m4_27  [key=2, style=dotted];
m4_626 -> m4_23  [key=2, style=dotted];
m4_627 -> m4_628  [key=0, style=solid];
m4_627 -> m4_25  [key=2, style=dotted];
m4_627 -> m4_629  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_627 -> m4_620  [key=0, style=bold, color=blue];
m4_1440 -> m4_1441  [key=0, style=solid];
m4_1441 -> m4_1442  [key=0, style=solid];
m4_1441 -> m4_1443  [key=2, style=dotted];
m4_1442 -> m4_1440  [key=0, style=bold, color=blue];
m4_1718 -> m4_1719  [key=0, style=solid];
m4_1718 -> m4_1721  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_1718 -> m4_1722  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_1719 -> m4_1720  [key=0, style=solid];
m4_1719 -> m4_1721  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1721 -> m4_1723  [key=0, style=solid];
m4_1721 -> m4_1724  [key=2, style=dotted];
m4_1721 -> m4_1725  [key=2, style=dotted];
m4_1722 -> m4_1723  [key=0, style=solid];
m4_1722 -> m4_1726  [key=2, style=dotted];
m4_1720 -> m4_1721  [key=0, style=solid];
m4_1720 -> m4_1722  [key=0, style=solid];
m4_1723 -> m4_1718  [key=0, style=bold, color=blue];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_27  [key=2, style=dotted];
m4_1127 -> m4_1128  [key=0, style=solid];
m4_1128 -> m4_1129  [key=0, style=solid];
m4_1128 -> m4_1132  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1128 -> m4_1128  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1129 -> m4_1130  [key=0, style=solid];
m4_1129 -> m4_321  [key=2, style=dotted];
m4_1129 -> m4_1131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1130 -> m4_1127  [key=0, style=bold, color=blue];
m4_2907 -> m4_2908  [key=0, style=solid];
m4_2908 -> m4_2909  [key=0, style=solid];
m4_2908 -> m4_2911  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2908 -> m4_2908  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2909 -> m4_2910  [key=0, style=solid];
m4_2909 -> m4_3  [key=2, style=dotted];
m4_2909 -> m4_2919  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2909 -> m4_2913  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2909 -> m4_2914  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2909 -> m4_2915  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2909 -> m4_2916  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2911 -> m4_2912  [key=0, style=solid];
m4_2911 -> m4_394  [key=2, style=dotted];
m4_2911 -> m4_652  [key=2, style=dotted];
m4_2910 -> m4_2911  [key=0, style=solid];
m4_2910 -> m4_2919  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2910 -> m4_2920  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2910 -> m4_2910  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m4_2913 -> m4_2914  [key=0, style=solid];
m4_2913 -> m4_27  [key=2, style=dotted];
m4_2914 -> m4_2915  [key=0, style=solid];
m4_2914 -> m4_27  [key=2, style=dotted];
m4_2915 -> m4_2916  [key=0, style=solid];
m4_2915 -> m4_27  [key=2, style=dotted];
m4_2916 -> m4_2917  [key=0, style=solid];
m4_2916 -> m4_27  [key=2, style=dotted];
m4_2912 -> m4_2913  [key=0, style=solid];
m4_2912 -> m4_864  [key=2, style=dotted];
m4_2917 -> m4_2907  [key=0, style=bold, color=blue];
m4_633 -> m4_634  [key=0, style=solid];
m4_638 -> m4_23  [key=2, style=dotted];
m4_638 -> m4_639  [key=0, style=solid];
m4_638 -> m4_25  [key=2, style=dotted];
m4_638 -> m4_640  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_637 -> m4_638  [key=0, style=solid];
m4_637 -> m4_644  [key=2, style=dotted];
m4_637 -> m4_645  [key=2, style=dotted];
m4_637 -> m4_27  [key=2, style=dotted];
m4_635 -> m4_637  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_635 -> m4_636  [key=0, style=solid];
m4_635 -> m4_642  [key=2, style=dotted];
m4_635 -> m4_632  [key=2, style=dotted];
m4_636 -> m4_637  [key=0, style=solid];
m4_636 -> m4_643  [key=2, style=dotted];
m4_636 -> m4_394  [key=2, style=dotted];
m4_636 -> m4_395  [key=2, style=dotted];
m4_636 -> m4_638  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_634 -> m4_635  [key=0, style=solid];
m4_634 -> m4_636  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_634 -> m4_640  [key=2, style=dotted];
m4_634 -> m4_641  [key=2, style=dotted];
m4_634 -> m4_631  [key=2, style=dotted];
m4_634 -> m4_639  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_639 -> m4_633  [key=0, style=bold, color=blue];
m4_639 -> m4_640  [key=0, style=solid];
m4_639 -> m4_27  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_49  [key=2, style=dotted];
m4_46 -> m4_50  [key=2, style=dotted];
m4_46 -> m4_51  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_27  [key=2, style=dotted];
m4_2991 -> m4_2992  [key=0, style=solid];
m4_2992 -> m4_2993  [key=0, style=solid];
m4_2992 -> m4_2997  [key=2, style=dotted];
m4_2992 -> m4_2994  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m4_2993 -> m4_2994  [key=0, style=solid];
m4_2993 -> m4_2998  [key=2, style=dotted];
m4_2993 -> m4_2995  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m4_2994 -> m4_2995  [key=0, style=solid];
m4_2994 -> m4_27  [key=2, style=dotted];
m4_2995 -> m4_2996  [key=0, style=solid];
m4_2995 -> m4_27  [key=2, style=dotted];
m4_2996 -> m4_2991  [key=0, style=bold, color=blue];
m4_178 -> m4_156  [key=2, style=dotted];
m4_178 -> m4_179  [key=0, style=solid];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_184  [key=2, style=dotted];
m4_1327 -> m4_1328  [key=0, style=solid];
m4_1328 -> m4_1329  [key=0, style=solid];
m4_1328 -> m4_50  [key=2, style=dotted];
m4_1329 -> m4_1330  [key=0, style=solid];
m4_1329 -> m4_3  [key=2, style=dotted];
m4_1330 -> m4_1327  [key=0, style=bold, color=blue];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_254  [key=2, style=dotted];
m4_2253 -> m4_2254  [key=0, style=solid];
m4_2254 -> m4_2255  [key=0, style=solid];
m4_2254 -> m4_2262  [key=2, style=dotted];
m4_2254 -> m4_3  [key=2, style=dotted];
m4_2255 -> m4_2256  [key=0, style=solid];
m4_2255 -> m4_24  [key=2, style=dotted];
m4_2255 -> m4_2257  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2256 -> m4_2257  [key=0, style=solid];
m4_2256 -> m4_27  [key=2, style=dotted];
m4_2257 -> m4_2258  [key=0, style=solid];
m4_2257 -> m4_25  [key=2, style=dotted];
m4_2257 -> m4_2259  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2257 -> m4_2260  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2258 -> m4_2259  [key=0, style=solid];
m4_2258 -> m4_988  [key=2, style=dotted];
m4_2258 -> m4_27  [key=2, style=dotted];
m4_2259 -> m4_2260  [key=0, style=solid];
m4_2259 -> m4_988  [key=2, style=dotted];
m4_2259 -> m4_27  [key=2, style=dotted];
m4_2260 -> m4_2261  [key=0, style=solid];
m4_2260 -> m4_988  [key=2, style=dotted];
m4_2260 -> m4_27  [key=2, style=dotted];
m4_2261 -> m4_2253  [key=0, style=bold, color=blue];
m4_1599 -> m4_1600  [key=0, style=solid];
m4_1599 -> m4_1601  [key=1, style=dashed, color=darkseagreen4, label=TValue];
m4_1600 -> m4_1601  [key=0, style=solid];
m4_1601 -> m4_1602  [key=0, style=solid];
m4_1602 -> m4_1599  [key=0, style=bold, color=blue];
m4_2675 -> m4_2676  [key=0, style=solid];
m4_2676 -> m4_2677  [key=0, style=solid];
m4_2676 -> m4_2676  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2677 -> m4_2678  [key=0, style=solid];
m4_2677 -> m4_25  [key=2, style=dotted];
m4_2677 -> m4_2679  [key=1, style=dashed, color=darkseagreen4, label=w];
m4_2677 -> m4_2680  [key=1, style=dashed, color=darkseagreen4, label=w];
m4_2678 -> m4_2679  [key=0, style=solid];
m4_2678 -> m4_2674  [key=2, style=dotted];
m4_2678 -> m4_27  [key=2, style=dotted];
m4_2679 -> m4_2680  [key=0, style=solid];
m4_2679 -> m4_2674  [key=2, style=dotted];
m4_2679 -> m4_27  [key=2, style=dotted];
m4_2680 -> m4_2681  [key=0, style=solid];
m4_2680 -> m4_27  [key=2, style=dotted];
m4_2681 -> m4_2675  [key=0, style=bold, color=blue];
m4_3637 -> m4_3638  [key=0, style=solid];
m4_3638 -> m4_3637  [key=0, style=bold, color=blue];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_27  [key=2, style=dotted];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_27  [key=2, style=dotted];
m4_640 -> m4_641  [key=0, style=solid];
m4_640 -> m4_27  [key=2, style=dotted];
m4_641 -> m4_633  [key=0, style=bold, color=blue];
m4_3213 -> m4_3214  [key=0, style=solid];
m4_3214 -> m4_3215  [key=0, style=solid];
m4_3214 -> m4_3200  [key=2, style=dotted];
m4_3215 -> m4_3216  [key=0, style=solid];
m4_3215 -> m4_24  [key=2, style=dotted];
m4_3216 -> m4_3217  [key=0, style=solid];
m4_3216 -> m4_27  [key=2, style=dotted];
m4_3217 -> m4_3213  [key=0, style=bold, color=blue];
m4_3321 -> m4_3322  [key=0, style=solid];
m4_3322 -> m4_3323  [key=0, style=solid];
m4_3322 -> m4_3326  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3322 -> m4_3322  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3323 -> m4_3324  [key=0, style=solid];
m4_3323 -> m4_321  [key=2, style=dotted];
m4_3323 -> m4_3325  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3324 -> m4_3321  [key=0, style=bold, color=blue];
m4_2742 -> m4_2743  [key=0, style=solid];
m4_2743 -> m4_2744  [key=0, style=solid];
m4_2743 -> m4_394  [key=2, style=dotted];
m4_2743 -> m4_2721  [key=2, style=dotted];
m4_2743 -> m4_2746  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2744 -> m4_2745  [key=0, style=solid];
m4_2744 -> m4_461  [key=2, style=dotted];
m4_2744 -> m4_462  [key=2, style=dotted];
m4_2744 -> m4_2722  [key=2, style=dotted];
m4_2744 -> m4_2747  [key=1, style=dashed, color=darkseagreen4, label=dict];
m4_2746 -> m4_2747  [key=0, style=solid];
m4_2746 -> m4_2722  [key=2, style=dotted];
m4_2745 -> m4_2746  [key=0, style=solid];
m4_2745 -> m4_461  [key=2, style=dotted];
m4_2745 -> m4_462  [key=2, style=dotted];
m4_2747 -> m4_2748  [key=0, style=solid];
m4_2747 -> m4_27  [key=2, style=dotted];
m4_2748 -> m4_2742  [key=0, style=bold, color=blue];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_27  [key=2, style=dotted];
m4_2922 -> m4_2923  [key=0, style=solid];
m4_2923 -> m4_2924  [key=0, style=solid];
m4_2923 -> m4_3  [key=2, style=dotted];
m4_2923 -> m4_2934  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2923 -> m4_2927  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2923 -> m4_2928  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2923 -> m4_2929  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2923 -> m4_2930  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_2924 -> m4_2925  [key=0, style=solid];
m4_2924 -> m4_2934  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2924 -> m4_2935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_2924 -> m4_2924  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m4_2927 -> m4_2928  [key=0, style=solid];
m4_2927 -> m4_27  [key=2, style=dotted];
m4_2928 -> m4_2929  [key=0, style=solid];
m4_2928 -> m4_27  [key=2, style=dotted];
m4_2929 -> m4_2930  [key=0, style=solid];
m4_2929 -> m4_27  [key=2, style=dotted];
m4_2930 -> m4_2931  [key=0, style=solid];
m4_2930 -> m4_27  [key=2, style=dotted];
m4_2925 -> m4_2926  [key=0, style=solid];
m4_2925 -> m4_2932  [key=2, style=dotted];
m4_2925 -> m4_394  [key=2, style=dotted];
m4_2925 -> m4_395  [key=2, style=dotted];
m4_2926 -> m4_2927  [key=0, style=solid];
m4_2926 -> m4_27  [key=2, style=dotted];
m4_2931 -> m4_2922  [key=0, style=bold, color=blue];
m4_479 -> m4_480  [key=0, style=solid];
m4_479 -> m4_27  [key=2, style=dotted];
m4_480 -> m4_481  [key=0, style=solid];
m4_480 -> m4_27  [key=2, style=dotted];
m4_480 -> m4_480  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_481 -> m4_482  [key=0, style=solid];
m4_481 -> m4_27  [key=2, style=dotted];
m4_481 -> m4_24  [key=2, style=dotted];
m4_481 -> m4_483  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_482 -> m4_473  [key=0, style=bold, color=blue];
m4_482 -> m4_23  [key=2, style=dotted];
m4_482 -> m4_483  [key=0, style=solid];
m4_2547 -> m4_2548  [key=0, style=solid];
m4_2548 -> m4_2549  [key=0, style=solid];
m4_2548 -> m4_2548  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2549 -> m4_2550  [key=0, style=solid];
m4_2549 -> m4_25  [key=2, style=dotted];
m4_2549 -> m4_2551  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2552  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2553  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2554  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2555  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2556  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2557  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2558  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2549 -> m4_2559  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_2550 -> m4_2551  [key=0, style=solid];
m4_2550 -> m4_27  [key=2, style=dotted];
m4_2551 -> m4_2552  [key=0, style=solid];
m4_2551 -> m4_27  [key=2, style=dotted];
m4_2552 -> m4_2553  [key=0, style=solid];
m4_2552 -> m4_27  [key=2, style=dotted];
m4_2553 -> m4_2554  [key=0, style=solid];
m4_2553 -> m4_27  [key=2, style=dotted];
m4_2554 -> m4_2555  [key=0, style=solid];
m4_2554 -> m4_27  [key=2, style=dotted];
m4_2555 -> m4_2556  [key=0, style=solid];
m4_2555 -> m4_27  [key=2, style=dotted];
m4_2556 -> m4_2557  [key=0, style=solid];
m4_2556 -> m4_27  [key=2, style=dotted];
m4_2557 -> m4_2558  [key=0, style=solid];
m4_2557 -> m4_27  [key=2, style=dotted];
m4_2558 -> m4_2559  [key=0, style=solid];
m4_2558 -> m4_27  [key=2, style=dotted];
m4_2559 -> m4_2560  [key=0, style=solid];
m4_2559 -> m4_27  [key=2, style=dotted];
m4_2560 -> m4_2547  [key=0, style=bold, color=blue];
m4_612 -> m4_604  [key=0, style=bold, color=blue];
m4_612 -> m4_613  [key=0, style=solid];
m4_3551 -> m4_3552  [key=0, style=solid];
m4_3552 -> m4_3553  [key=0, style=solid];
m4_3552 -> m4_25  [key=2, style=dotted];
m4_3552 -> m4_3554  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_3552 -> m4_3555  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_3552 -> m4_3556  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_3553 -> m4_3554  [key=0, style=solid];
m4_3553 -> m4_27  [key=2, style=dotted];
m4_3554 -> m4_3555  [key=0, style=solid];
m4_3554 -> m4_27  [key=2, style=dotted];
m4_3555 -> m4_3556  [key=0, style=solid];
m4_3555 -> m4_27  [key=2, style=dotted];
m4_3556 -> m4_3557  [key=0, style=solid];
m4_3556 -> m4_1066  [key=2, style=dotted];
m4_3557 -> m4_3551  [key=0, style=bold, color=blue];
m4_698 -> m4_699  [key=0, style=solid];
m4_698 -> m4_23  [key=2, style=dotted];
m4_2495 -> m4_2496  [key=0, style=solid];
m4_2496 -> m4_2497  [key=0, style=solid];
m4_2496 -> m4_50  [key=2, style=dotted];
m4_2497 -> m4_2498  [key=0, style=solid];
m4_2497 -> m4_24  [key=2, style=dotted];
m4_2497 -> m4_2499  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2498 -> m4_2499  [key=0, style=solid];
m4_2498 -> m4_27  [key=2, style=dotted];
m4_2499 -> m4_2500  [key=0, style=solid];
m4_2499 -> m4_25  [key=2, style=dotted];
m4_2499 -> m4_2501  [key=1, style=dashed, color=darkseagreen4, label=v2];
m4_2499 -> m4_2502  [key=1, style=dashed, color=darkseagreen4, label=v2];
m4_2499 -> m4_2503  [key=1, style=dashed, color=darkseagreen4, label=v2];
m4_2500 -> m4_2501  [key=0, style=solid];
m4_2500 -> m4_27  [key=2, style=dotted];
m4_2501 -> m4_2502  [key=0, style=solid];
m4_2501 -> m4_27  [key=2, style=dotted];
m4_2502 -> m4_2503  [key=0, style=solid];
m4_2502 -> m4_27  [key=2, style=dotted];
m4_2503 -> m4_2504  [key=0, style=solid];
m4_2503 -> m4_27  [key=2, style=dotted];
m4_2504 -> m4_2495  [key=0, style=bold, color=blue];
m4_2218 -> m4_2219  [key=0, style=solid];
m4_2219 -> m4_2220  [key=0, style=solid];
m4_2220 -> m4_2221  [key=0, style=solid];
m4_2221 -> m4_2218  [key=0, style=bold, color=blue];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_68  [key=2, style=dotted];
m4_64 -> m4_50  [key=2, style=dotted];
m4_1745 -> m4_1746  [key=0, style=solid];
m4_1746 -> m4_1747  [key=0, style=solid];
m4_1746 -> m4_1734  [key=2, style=dotted];
m4_1747 -> m4_1745  [key=0, style=bold, color=blue];
m4_1313 -> m4_1314  [key=0, style=solid];
m4_1314 -> m4_1315  [key=0, style=solid];
m4_1314 -> m4_1326  [key=2, style=dotted];
m4_1314 -> m4_1321  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m4_1315 -> m4_1316  [key=0, style=solid];
m4_1315 -> m4_1317  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1315 -> m4_1318  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1315 -> m4_1319  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1315 -> m4_1320  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1315 -> m4_1324  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1321 -> m4_1322  [key=0, style=solid];
m4_1321 -> m4_24  [key=2, style=dotted];
m4_1321 -> m4_1323  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1316 -> m4_1317  [key=0, style=solid];
m4_1316 -> m4_390  [key=2, style=dotted];
m4_1317 -> m4_1318  [key=0, style=solid];
m4_1318 -> m4_1319  [key=0, style=solid];
m4_1319 -> m4_1320  [key=0, style=solid];
m4_1319 -> m4_390  [key=2, style=dotted];
m4_1320 -> m4_1321  [key=0, style=solid];
m4_1324 -> m4_1325  [key=0, style=solid];
m4_1324 -> m4_27  [key=2, style=dotted];
m4_1322 -> m4_1323  [key=0, style=solid];
m4_1322 -> m4_27  [key=2, style=dotted];
m4_1323 -> m4_1324  [key=0, style=solid];
m4_1323 -> m4_25  [key=2, style=dotted];
m4_1325 -> m4_1313  [key=0, style=bold, color=blue];
m4_691 -> m4_692  [key=0, style=solid];
m4_691 -> m4_696  [key=1, style=dashed, color=darkseagreen4, label=xmlString];
m4_691 -> m4_691  [key=3, color=darkorchid, style=bold, label="Local variable string xmlString"];
m4_692 -> m4_693  [key=0, style=solid];
m4_692 -> m4_321  [key=2, style=dotted];
m4_692 -> m4_694  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_692 -> m4_87  [key=2, style=dotted];
m4_693 -> m4_691  [key=0, style=bold, color=blue];
m4_693 -> m4_88  [key=2, style=dotted];
m4_693 -> m4_694  [key=0, style=solid];
m4_1378 -> m4_1379  [key=0, style=solid];
m4_1379 -> m4_1380  [key=0, style=solid];
m4_1379 -> m4_1383  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1379 -> m4_1379  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1380 -> m4_1381  [key=0, style=solid];
m4_1380 -> m4_321  [key=2, style=dotted];
m4_1380 -> m4_1382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1381 -> m4_1378  [key=0, style=bold, color=blue];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_283  [key=2, style=dotted];
m4_296 -> m4_291  [key=2, style=dotted];
m4_296 -> m4_292  [key=2, style=dotted];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_297  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_297 -> m4_293  [key=2, style=dotted];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_295  [key=2, style=dotted];
m4_298 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_298 -> m4_294  [key=2, style=dotted];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_304  [key=2, style=dotted];
m4_299 -> m4_305  [key=2, style=dotted];
m4_299 -> m4_27  [key=2, style=dotted];
m4_299 -> m4_281  [key=0, style=bold, color=blue];
m4_300 -> m4_301  [key=0, style=solid];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_303  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_301 -> m4_301  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_306  [key=2, style=dotted];
m4_302 -> m4_305  [key=2, style=dotted];
m4_302 -> m4_27  [key=2, style=dotted];
m4_302 -> m4_1706  [key=2, style=dotted];
m4_302 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_302 -> m4_308  [key=1, style=dashed, color=darkseagreen4, label=doc];
m4_303 -> m4_296  [key=0, style=bold, color=blue];
m4_303 -> m4_100  [key=2, style=dotted];
m4_303 -> m4_304  [key=0, style=solid];
m4_1044 -> m4_1045  [key=0, style=solid];
m4_1045 -> m4_1046  [key=0, style=solid];
m4_1045 -> m4_1045  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1046 -> m4_1047  [key=0, style=solid];
m4_1046 -> m4_25  [key=2, style=dotted];
m4_1046 -> m4_1048  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1046 -> m4_1049  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1046 -> m4_1050  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1046 -> m4_1051  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1047 -> m4_1048  [key=0, style=solid];
m4_1047 -> m4_27  [key=2, style=dotted];
m4_1048 -> m4_1049  [key=0, style=solid];
m4_1048 -> m4_27  [key=2, style=dotted];
m4_1049 -> m4_1050  [key=0, style=solid];
m4_1049 -> m4_27  [key=2, style=dotted];
m4_1050 -> m4_1051  [key=0, style=solid];
m4_1050 -> m4_27  [key=2, style=dotted];
m4_1051 -> m4_1052  [key=0, style=solid];
m4_1051 -> m4_27  [key=2, style=dotted];
m4_1052 -> m4_1044  [key=0, style=bold, color=blue];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_27  [key=2, style=dotted];
m4_284 -> m4_283  [key=0, style=bold, color=blue];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_25  [key=2, style=dotted];
m4_284 -> m4_286  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1838 -> m4_1839  [key=0, style=solid];
m4_1839 -> m4_1840  [key=0, style=solid];
m4_1840 -> m4_1838  [key=0, style=bold, color=blue];
m4_3672 -> m4_3673  [key=0, style=solid];
m4_3672 -> m4_2788  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m4_3673 -> m4_3674  [key=0, style=solid];
m4_3673 -> m4_3676  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_3674 -> m4_3675  [key=0, style=solid];
m4_3674 -> m4_3676  [key=0, style=solid];
m4_3676 -> m4_3677  [key=0, style=solid];
m4_3676 -> m4_3678  [key=2, style=dotted];
m4_3676 -> m4_3679  [key=2, style=dotted];
m4_3675 -> m4_3677  [key=0, style=solid];
m4_3677 -> m4_3672  [key=0, style=bold, color=blue];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_114  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_91 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_91 -> m4_80  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_0  [key=2, style=dotted];
m4_92 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_92 -> m4_1706  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_105  [key=2, style=dotted];
m4_93 -> m4_106  [key=2, style=dotted];
m4_93 -> m4_100  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_51  [key=2, style=dotted];
m4_94 -> m4_88  [key=2, style=dotted];
m4_94 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_27  [key=2, style=dotted];
m4_95 -> m4_89  [key=2, style=dotted];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_0  [key=2, style=dotted];
m4_96 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m4_96 -> m4_77  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_107  [key=2, style=dotted];
m4_97 -> m4_106  [key=2, style=dotted];
m4_97 -> m4_23  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_51  [key=2, style=dotted];
m4_98 -> m4_90  [key=0, style=bold, color=blue];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_27  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid, color=green];
m4_101 -> m4_107  [key=2, style=dotted];
m4_101 -> m4_106  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid, color=green];
m4_102 -> m4_51  [key=2, style=dotted];
m4_102 -> m4_102  [key=3, color=green, style=bold, label="Local variable string xml"];
m4_102 -> m4_104  [key=1, style=dashed, color=green, label=xml];
m4_103 -> m4_104  [key=0, style=solid, color=green];
m4_103 -> m4_27  [key=2, style=dotted];
m4_103 -> m4_1706  [key=2, style=dotted, color=green];
m4_103 -> m4_105  [key=1, style=dashed, color=green, label=xmlDocument];
m4_104 -> m4_90  [key=0, style=bold, color=blue];
m4_104 -> m4_105  [key=0, style=solid, color=green];
m4_104 -> m4_100  [key=2, style=dotted, color=green];
m4_885 -> m4_886  [key=0, style=solid];
m4_886 -> m4_887  [key=0, style=solid];
m4_886 -> m4_884  [key=2, style=dotted];
m4_886 -> m4_888  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_887 -> m4_888  [key=0, style=solid];
m4_888 -> m4_889  [key=0, style=solid];
m4_888 -> m4_394  [key=2, style=dotted];
m4_888 -> m4_395  [key=2, style=dotted];
m4_888 -> m4_890  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_889 -> m4_890  [key=0, style=solid];
m4_889 -> m4_27  [key=2, style=dotted];
m4_890 -> m4_891  [key=0, style=solid];
m4_890 -> m4_394  [key=2, style=dotted];
m4_890 -> m4_652  [key=2, style=dotted];
m4_891 -> m4_892  [key=0, style=solid];
m4_891 -> m4_394  [key=2, style=dotted];
m4_891 -> m4_395  [key=2, style=dotted];
m4_892 -> m4_893  [key=0, style=solid];
m4_892 -> m4_27  [key=2, style=dotted];
m4_893 -> m4_885  [key=0, style=bold, color=blue];
m4_3158 -> m4_3159  [key=0, style=solid];
m4_3159 -> m4_3160  [key=0, style=solid];
m4_3159 -> m4_3159  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3160 -> m4_3161  [key=0, style=solid];
m4_3160 -> m4_25  [key=2, style=dotted];
m4_3161 -> m4_3162  [key=0, style=solid];
m4_3162 -> m4_3163  [key=0, style=solid];
m4_3162 -> m4_1691  [key=2, style=dotted];
m4_3162 -> m4_27  [key=2, style=dotted];
m4_3163 -> m4_3158  [key=0, style=bold, color=blue];
m4_67 -> m4_63  [key=0, style=bold, color=blue];
m4_2799 -> m4_2800  [key=0, style=solid];
m4_2800 -> m4_2801  [key=0, style=solid];
m4_2800 -> m4_2800  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m4_2801 -> m4_2802  [key=0, style=solid];
m4_2801 -> m4_443  [key=2, style=dotted];
m4_2801 -> m4_621  [key=2, style=dotted];
m4_2802 -> m4_2803  [key=0, style=solid];
m4_2802 -> m4_27  [key=2, style=dotted];
m4_2803 -> m4_2799  [key=0, style=bold, color=blue];
m4_3280 -> m4_3281  [key=0, style=solid];
m4_3281 -> m4_3282  [key=0, style=solid];
m4_3281 -> m4_3285  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3281 -> m4_3281  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3282 -> m4_3283  [key=0, style=solid];
m4_3282 -> m4_321  [key=2, style=dotted];
m4_3282 -> m4_3284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3283 -> m4_3280  [key=0, style=bold, color=blue];
m4_575 -> m4_576  [key=0, style=solid];
m4_575 -> m4_27  [key=2, style=dotted];
m4_576 -> m4_577  [key=0, style=solid];
m4_576 -> m4_27  [key=2, style=dotted];
m4_576 -> m4_583  [key=2, style=dotted];
m4_576 -> m4_584  [key=2, style=dotted];
m4_576 -> m4_571  [key=2, style=dotted];
m4_577 -> m4_578  [key=0, style=solid];
m4_577 -> m4_27  [key=2, style=dotted];
m4_577 -> m4_573  [key=2, style=dotted];
m4_577 -> m4_574  [key=2, style=dotted];
m4_578 -> m4_572  [key=0, style=bold, color=blue];
m4_578 -> m4_579  [key=0, style=solid];
m4_578 -> m4_580  [key=1, style=dashed, color=darkseagreen4, label=xmlProduct];
m4_578 -> m4_437  [key=2, style=dotted];
m4_2194 -> m4_2195  [key=0, style=solid];
m4_2195 -> m4_2196  [key=0, style=solid];
m4_2195 -> m4_2201  [key=2, style=dotted];
m4_2195 -> m4_2202  [key=2, style=dotted];
m4_2195 -> m4_1022  [key=2, style=dotted];
m4_2195 -> m4_2199  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_2196 -> m4_2197  [key=0, style=solid];
m4_2196 -> m4_24  [key=2, style=dotted];
m4_2199 -> m4_2200  [key=0, style=solid];
m4_2199 -> m4_2203  [key=2, style=dotted];
m4_2199 -> m4_44  [key=2, style=dotted];
m4_2197 -> m4_2198  [key=0, style=solid];
m4_2197 -> m4_25  [key=2, style=dotted];
m4_2197 -> m4_2199  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m4_2198 -> m4_2199  [key=0, style=solid];
m4_2198 -> m4_27  [key=2, style=dotted];
m4_2200 -> m4_2194  [key=0, style=bold, color=blue];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_89  [key=2, style=dotted];
m4_540 -> m4_89  [key=2, style=dotted];
m4_540 -> m4_541  [key=0, style=solid];
m4_542 -> m4_89  [key=2, style=dotted];
m4_542 -> m4_543  [key=0, style=solid];
m4_542 -> m4_548  [key=2, style=dotted];
m4_542 -> m4_51  [key=2, style=dotted];
m4_542 -> m4_544  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_541 -> m4_542  [key=0, style=solid];
m4_541 -> m4_511  [key=2, style=dotted];
m4_541 -> m4_547  [key=2, style=dotted];
m4_541 -> m4_545  [key=1, style=dashed, color=darkseagreen4, label=guid];
m4_543 -> m4_536  [key=0, style=bold, color=blue];
m4_543 -> m4_544  [key=0, style=solid];
m4_543 -> m4_27  [key=2, style=dotted];
m4_2167 -> m4_2168  [key=0, style=solid];
m4_2168 -> m4_2169  [key=0, style=solid];
m4_2168 -> m4_1510  [key=2, style=dotted];
m4_2168 -> m4_3741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m4_2169 -> m4_2167  [key=0, style=bold, color=blue];
m4_3612 -> m4_3613  [key=0, style=solid];
m4_3613 -> m4_3612  [key=0, style=bold, color=blue];
m4_1293 -> m4_1294  [key=0, style=solid];
m4_1294 -> m4_1295  [key=0, style=solid];
m4_1294 -> m4_321  [key=2, style=dotted];
m4_1294 -> m4_1296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1294 -> m4_1294  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1295 -> m4_1293  [key=0, style=bold, color=blue];
m4_3420 -> m4_3421  [key=0, style=solid];
m4_3421 -> m4_3422  [key=0, style=solid];
m4_3421 -> m4_3  [key=2, style=dotted];
m4_3421 -> m4_390  [key=2, style=dotted];
m4_3421 -> m4_402  [key=2, style=dotted];
m4_3421 -> m4_403  [key=2, style=dotted];
m4_3422 -> m4_3423  [key=0, style=solid];
m4_3422 -> m4_394  [key=2, style=dotted];
m4_3422 -> m4_906  [key=2, style=dotted];
m4_3423 -> m4_3424  [key=0, style=solid];
m4_3423 -> m4_27  [key=2, style=dotted];
m4_3424 -> m4_3420  [key=0, style=bold, color=blue];
m4_281 -> m4_273  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlDocument doc"];
m4_281 -> m4_610  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlDocument doc"];
m4_281 -> m4_295  [key=0, style=solid];
m4_281 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_281 -> m4_297  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m4_281 -> m4_430  [key=3, color=darkorchid, style=bold, label="Parameter variable bool indent"];
m4_281 -> m4_282  [key=0, style=solid];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_290  [key=2, style=dotted];
m4_295 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_2233 -> m4_2234  [key=0, style=solid];
m4_2234 -> m4_2235  [key=0, style=solid];
m4_2234 -> m4_25  [key=2, style=dotted];
m4_2234 -> m4_2236  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2235 -> m4_2236  [key=0, style=solid];
m4_2235 -> m4_27  [key=2, style=dotted];
m4_2236 -> m4_2237  [key=0, style=solid];
m4_2236 -> m4_27  [key=2, style=dotted];
m4_2237 -> m4_2233  [key=0, style=bold, color=blue];
m4_3596 -> m4_3597  [key=0, style=solid];
m4_3597 -> m4_3598  [key=0, style=solid];
m4_3597 -> m4_3  [key=2, style=dotted];
m4_3598 -> m4_3599  [key=0, style=solid];
m4_3598 -> m4_3587  [key=2, style=dotted];
m4_3599 -> m4_3600  [key=0, style=solid];
m4_3599 -> m4_24  [key=2, style=dotted];
m4_3600 -> m4_3601  [key=0, style=solid];
m4_3600 -> m4_27  [key=2, style=dotted];
m4_3601 -> m4_3596  [key=0, style=bold, color=blue];
m4_352 -> m4_353  [key=0, style=solid];
m4_352 -> m4_25  [key=2, style=dotted];
m4_352 -> m4_354  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m4_354 -> m4_355  [key=0, style=solid];
m4_354 -> m4_27  [key=2, style=dotted];
m4_354 -> m4_352  [key=0, style=bold, color=blue];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_27  [key=2, style=dotted];
m4_353 -> m4_109  [key=2, style=dotted];
m4_353 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2346 -> m4_2347  [key=0, style=solid];
m4_2347 -> m4_2348  [key=0, style=solid];
m4_2347 -> m4_2351  [key=2, style=dotted];
m4_2347 -> m4_390  [key=2, style=dotted];
m4_2348 -> m4_2349  [key=0, style=solid];
m4_2348 -> m4_24  [key=2, style=dotted];
m4_2349 -> m4_2350  [key=0, style=solid];
m4_2349 -> m4_27  [key=2, style=dotted];
m4_2350 -> m4_2346  [key=0, style=bold, color=blue];
m4_3086 -> m4_3087  [key=0, style=solid];
m4_3087 -> m4_3088  [key=0, style=solid];
m4_3087 -> m4_3089  [key=2, style=dotted];
m4_3088 -> m4_3086  [key=0, style=bold, color=blue];
m4_461 -> m4_452  [key=0, style=bold, color=blue];
m4_435 -> m4_89  [key=2, style=dotted];
m4_435 -> m4_436  [key=0, style=solid];
m4_435 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_435 -> m4_440  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_433 -> m4_89  [key=2, style=dotted];
m4_433 -> m4_434  [key=0, style=solid];
m4_433 -> m4_51  [key=2, style=dotted];
m4_433 -> m4_426  [key=2, style=dotted];
m4_434 -> m4_174  [key=2, style=dotted];
m4_434 -> m4_435  [key=0, style=solid];
m4_434 -> m4_217  [key=2, style=dotted];
m4_434 -> m4_441  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_436 -> m4_428  [key=0, style=bold, color=blue];
m4_436 -> m4_437  [key=0, style=solid];
m4_436 -> m4_394  [key=2, style=dotted];
m4_436 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_436 -> m4_440  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_109 -> m4_110  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_51  [key=2, style=dotted];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_27  [key=2, style=dotted];
m4_112 -> m4_102  [key=3, color=green, style=bold, label="Local variable string xml"];
m4_113 -> m4_109  [key=0, style=bold, color=blue];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_87  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_174  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_217  [key=2, style=dotted];
m4_227 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m4_227 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m4_227 -> m4_23  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_50  [key=2, style=dotted];
m4_228 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m4_228 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m4_228 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=element];
m4_228 -> m4_246  [key=2, style=dotted];
m4_228 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=element];
m4_228 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label=element];
m4_228 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label=element];
m4_228 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label=element];
m4_228 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=element];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_247  [key=2, style=dotted];
m4_229 -> m4_248  [key=2, style=dotted];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_27  [key=2, style=dotted];
m4_238 -> m4_249  [key=2, style=dotted];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_51  [key=2, style=dotted];
m4_230 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_230 -> m4_247  [key=2, style=dotted];
m4_230 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_177  [key=2, style=dotted];
m4_233 -> m4_247  [key=2, style=dotted];
m4_233 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_174  [key=2, style=dotted];
m4_231 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_231 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_200  [key=2, style=dotted];
m4_236 -> m4_249  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_175  [key=2, style=dotted];
m4_232 -> m4_248  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_178  [key=2, style=dotted];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_179  [key=2, style=dotted];
m4_235 -> m4_248  [key=2, style=dotted];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_249  [key=2, style=dotted];
m4_239 -> m4_226  [key=0, style=bold, color=blue];
m4_239 -> m4_174  [key=2, style=dotted];
m4_239 -> m4_240  [key=0, style=solid];
m4_2394 -> m4_2395  [key=0, style=solid];
m4_2395 -> m4_2396  [key=0, style=solid];
m4_2395 -> m4_1730  [key=2, style=dotted];
m4_2396 -> m4_2394  [key=0, style=bold, color=blue];
m4_255 -> m4_250  [key=0, style=bold, color=blue];
m4_254 -> m4_89  [key=2, style=dotted];
m4_254 -> m4_255  [key=0, style=solid];
m4_1470 -> m4_1471  [key=0, style=solid];
m4_1471 -> m4_1472  [key=0, style=solid];
m4_1471 -> m4_1473  [key=2, style=dotted];
m4_1472 -> m4_1470  [key=0, style=bold, color=blue];
m4_974 -> m4_975  [key=0, style=solid];
m4_975 -> m4_976  [key=0, style=solid];
m4_975 -> m4_975  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_976 -> m4_977  [key=0, style=solid];
m4_976 -> m4_394  [key=2, style=dotted];
m4_976 -> m4_652  [key=2, style=dotted];
m4_976 -> m4_978  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_979  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_980  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_981  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_982  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_983  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_984  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_985  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_976 -> m4_986  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_977 -> m4_978  [key=0, style=solid];
m4_977 -> m4_27  [key=2, style=dotted];
m4_978 -> m4_979  [key=0, style=solid];
m4_978 -> m4_27  [key=2, style=dotted];
m4_979 -> m4_980  [key=0, style=solid];
m4_979 -> m4_27  [key=2, style=dotted];
m4_980 -> m4_981  [key=0, style=solid];
m4_980 -> m4_27  [key=2, style=dotted];
m4_981 -> m4_982  [key=0, style=solid];
m4_981 -> m4_27  [key=2, style=dotted];
m4_982 -> m4_983  [key=0, style=solid];
m4_982 -> m4_988  [key=2, style=dotted];
m4_982 -> m4_27  [key=2, style=dotted];
m4_983 -> m4_984  [key=0, style=solid];
m4_983 -> m4_988  [key=2, style=dotted];
m4_983 -> m4_27  [key=2, style=dotted];
m4_984 -> m4_985  [key=0, style=solid];
m4_984 -> m4_27  [key=2, style=dotted];
m4_985 -> m4_986  [key=0, style=solid];
m4_985 -> m4_27  [key=2, style=dotted];
m4_986 -> m4_987  [key=0, style=solid];
m4_986 -> m4_864  [key=2, style=dotted];
m4_987 -> m4_974  [key=0, style=bold, color=blue];
m4_240 -> m4_89  [key=2, style=dotted];
m4_240 -> m4_241  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_23  [key=2, style=dotted];
m4_241 -> m4_208  [key=0, style=bold, color=blue];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_253  [key=2, style=dotted];
m4_241 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_241 -> m4_244  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_241 -> m4_245  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_241 -> m4_247  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_3147 -> m4_3148  [key=0, style=solid];
m4_3148 -> m4_3149  [key=0, style=solid];
m4_3149 -> m4_3147  [key=0, style=bold, color=blue];
m4_148 -> m4_149  [key=0, style=solid];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_157  [key=2, style=dotted];
m4_149 -> m4_151  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_149 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_149 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_149 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_150  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_87  [key=2, style=dotted];
m4_151 -> m4_156  [key=2, style=dotted];
m4_151 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_23  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_157  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_125  [key=2, style=dotted];
m4_154 -> m4_23  [key=2, style=dotted];
m4_154 -> m4_51  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_27  [key=2, style=dotted];
m4_155 -> m4_149  [key=0, style=bold, color=blue];
m4_1735 -> m4_1736  [key=0, style=solid];
m4_1735 -> m4_1738  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_1735 -> m4_1739  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_1736 -> m4_1737  [key=0, style=solid];
m4_1736 -> m4_1738  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1738 -> m4_1740  [key=0, style=solid];
m4_1738 -> m4_1741  [key=2, style=dotted];
m4_1738 -> m4_1725  [key=2, style=dotted];
m4_1739 -> m4_1740  [key=0, style=solid];
m4_1739 -> m4_1726  [key=2, style=dotted];
m4_1737 -> m4_1738  [key=0, style=solid];
m4_1737 -> m4_1739  [key=0, style=solid];
m4_1740 -> m4_1735  [key=0, style=bold, color=blue];
m4_1444 -> m4_1445  [key=0, style=solid];
m4_1445 -> m4_1446  [key=0, style=solid];
m4_1445 -> m4_1447  [key=2, style=dotted];
m4_1446 -> m4_1444  [key=0, style=bold, color=blue];
m4_3200 -> m4_3201  [key=0, style=solid];
m4_3201 -> m4_3202  [key=0, style=solid];
m4_3201 -> m4_3  [key=2, style=dotted];
m4_3202 -> m4_3203  [key=0, style=solid];
m4_3202 -> m4_50  [key=2, style=dotted];
m4_3203 -> m4_3204  [key=0, style=solid];
m4_3204 -> m4_3205  [key=0, style=solid];
m4_3204 -> m4_347  [key=2, style=dotted];
m4_3205 -> m4_3206  [key=0, style=solid];
m4_3205 -> m4_3212  [key=2, style=dotted];
m4_3205 -> m4_50  [key=2, style=dotted];
m4_3206 -> m4_3207  [key=0, style=solid];
m4_3206 -> m4_347  [key=2, style=dotted];
m4_3207 -> m4_3208  [key=0, style=solid];
m4_3207 -> m4_347  [key=2, style=dotted];
m4_3208 -> m4_3209  [key=0, style=solid];
m4_3208 -> m4_347  [key=2, style=dotted];
m4_3209 -> m4_3210  [key=0, style=solid];
m4_3209 -> m4_3212  [key=2, style=dotted];
m4_3209 -> m4_50  [key=2, style=dotted];
m4_3210 -> m4_3211  [key=0, style=solid];
m4_3210 -> m4_3212  [key=2, style=dotted];
m4_3210 -> m4_50  [key=2, style=dotted];
m4_3211 -> m4_3200  [key=0, style=bold, color=blue];
m4_2561 -> m4_2562  [key=0, style=solid];
m4_2562 -> m4_2563  [key=0, style=solid];
m4_2562 -> m4_2566  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2562 -> m4_2562  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2563 -> m4_2564  [key=0, style=solid];
m4_2563 -> m4_321  [key=2, style=dotted];
m4_2563 -> m4_2565  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2564 -> m4_2561  [key=0, style=bold, color=blue];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_75  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_25  [key=2, style=dotted];
m4_70 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_70 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_70 -> m4_76  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_27  [key=2, style=dotted];
m4_71 -> m4_23  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_27  [key=2, style=dotted];
m4_72 -> m4_77  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_27  [key=2, style=dotted];
m4_73 -> m4_78  [key=2, style=dotted];
m4_74 -> m4_69  [key=0, style=bold, color=blue];
m4_74 -> m4_68  [key=0, style=bold, color=blue];
m4_3028 -> m4_3029  [key=0, style=solid];
m4_3029 -> m4_3030  [key=0, style=solid];
m4_3029 -> m4_3036  [key=2, style=dotted];
m4_3030 -> m4_3031  [key=0, style=solid];
m4_3030 -> m4_24  [key=2, style=dotted];
m4_3031 -> m4_3032  [key=0, style=solid];
m4_3031 -> m4_27  [key=2, style=dotted];
m4_3032 -> m4_3033  [key=0, style=solid];
m4_3032 -> m4_3037  [key=2, style=dotted];
m4_3033 -> m4_3034  [key=0, style=solid];
m4_3033 -> m4_24  [key=2, style=dotted];
m4_3034 -> m4_3035  [key=0, style=solid];
m4_3034 -> m4_27  [key=2, style=dotted];
m4_3035 -> m4_3028  [key=0, style=bold, color=blue];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_125  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_27  [key=2, style=dotted];
m4_1987 -> m4_1988  [key=0, style=solid];
m4_1988 -> m4_1989  [key=0, style=solid];
m4_1989 -> m4_1987  [key=0, style=bold, color=blue];
m4_2068 -> m4_2069  [key=0, style=solid];
m4_2069 -> m4_2070  [key=0, style=solid];
m4_2069 -> m4_25  [key=2, style=dotted];
m4_2070 -> m4_2071  [key=0, style=solid];
m4_2070 -> m4_2067  [key=2, style=dotted];
m4_2070 -> m4_217  [key=2, style=dotted];
m4_2070 -> m4_403  [key=2, style=dotted];
m4_2070 -> m4_27  [key=2, style=dotted];
m4_2071 -> m4_2068  [key=0, style=bold, color=blue];
m4_2292 -> m4_2293  [key=0, style=solid];
m4_2293 -> m4_2294  [key=0, style=solid];
m4_2293 -> m4_2293  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2294 -> m4_2295  [key=0, style=solid];
m4_2294 -> m4_25  [key=2, style=dotted];
m4_2294 -> m4_2296  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m4_2294 -> m4_2297  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m4_2295 -> m4_2296  [key=0, style=solid];
m4_2295 -> m4_27  [key=2, style=dotted];
m4_2296 -> m4_2297  [key=0, style=solid];
m4_2296 -> m4_27  [key=2, style=dotted];
m4_2297 -> m4_2298  [key=0, style=solid];
m4_2297 -> m4_27  [key=2, style=dotted];
m4_2298 -> m4_2292  [key=0, style=bold, color=blue];
m4_1654 -> m4_1655  [key=0, style=solid];
m4_1655 -> m4_1654  [key=0, style=bold, color=blue];
m4_1095 -> m4_1096  [key=0, style=solid];
m4_1096 -> m4_1097  [key=0, style=solid];
m4_1096 -> m4_1096  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1097 -> m4_1098  [key=0, style=solid];
m4_1097 -> m4_25  [key=2, style=dotted];
m4_1098 -> m4_1099  [key=0, style=solid];
m4_1098 -> m4_27  [key=2, style=dotted];
m4_1099 -> m4_1095  [key=0, style=bold, color=blue];
m4_2771 -> m4_2772  [key=0, style=solid];
m4_2772 -> m4_2773  [key=0, style=solid];
m4_2772 -> m4_321  [key=2, style=dotted];
m4_2772 -> m4_2774  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2773 -> m4_2771  [key=0, style=bold, color=blue];
m4_114 -> m4_110  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_118  [key=2, style=dotted];
m4_3003 -> m4_3011  [key=0, style=solid];
m4_3003 -> m4_2999  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m4_3011 -> m4_3012  [key=0, style=solid];
m4_3011 -> m4_461  [key=2, style=dotted];
m4_3011 -> m4_462  [key=2, style=dotted];
m4_3011 -> m4_3014  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m4_3012 -> m4_3013  [key=0, style=solid];
m4_3012 -> m4_456  [key=2, style=dotted];
m4_3012 -> m4_3014  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_3014 -> m4_3015  [key=0, style=solid];
m4_3014 -> m4_463  [key=2, style=dotted];
m4_3013 -> m4_3014  [key=0, style=solid];
m4_3013 -> m4_3010  [key=2, style=dotted];
m4_3015 -> m4_3003  [key=0, style=bold, color=blue];
m4_2723 -> m4_2724  [key=0, style=solid];
m4_2724 -> m4_2725  [key=0, style=solid];
m4_2724 -> m4_2733  [key=2, style=dotted];
m4_2724 -> m4_51  [key=2, style=dotted];
m4_2724 -> m4_2726  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2725 -> m4_2726  [key=0, style=solid];
m4_2725 -> m4_27  [key=2, style=dotted];
m4_2726 -> m4_2727  [key=0, style=solid];
m4_2726 -> m4_25  [key=2, style=dotted];
m4_2727 -> m4_2728  [key=0, style=solid];
m4_2727 -> m4_27  [key=2, style=dotted];
m4_2728 -> m4_2729  [key=0, style=solid];
m4_2728 -> m4_2733  [key=2, style=dotted];
m4_2728 -> m4_51  [key=2, style=dotted];
m4_2728 -> m4_2730  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2729 -> m4_2730  [key=0, style=solid];
m4_2729 -> m4_27  [key=2, style=dotted];
m4_2730 -> m4_2731  [key=0, style=solid];
m4_2730 -> m4_25  [key=2, style=dotted];
m4_2731 -> m4_2732  [key=0, style=solid];
m4_2731 -> m4_27  [key=2, style=dotted];
m4_2732 -> m4_2723  [key=0, style=bold, color=blue];
m4_2204 -> m4_2205  [key=0, style=solid];
m4_2205 -> m4_2204  [key=0, style=bold, color=blue];
m4_3537 -> m4_3538  [key=0, style=solid];
m4_3538 -> m4_3539  [key=0, style=solid];
m4_3538 -> m4_25  [key=2, style=dotted];
m4_3538 -> m4_3540  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3538 -> m4_3541  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3538 -> m4_3542  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3539 -> m4_3540  [key=0, style=solid];
m4_3539 -> m4_27  [key=2, style=dotted];
m4_3540 -> m4_3541  [key=0, style=solid];
m4_3540 -> m4_988  [key=2, style=dotted];
m4_3540 -> m4_27  [key=2, style=dotted];
m4_3541 -> m4_3542  [key=0, style=solid];
m4_3541 -> m4_988  [key=2, style=dotted];
m4_3541 -> m4_27  [key=2, style=dotted];
m4_3542 -> m4_3543  [key=0, style=solid];
m4_3542 -> m4_988  [key=2, style=dotted];
m4_3542 -> m4_27  [key=2, style=dotted];
m4_3543 -> m4_3537  [key=0, style=bold, color=blue];
m4_68 -> m4_69  [key=0, style=solid];
m4_3514 -> m4_3515  [key=0, style=solid];
m4_3515 -> m4_3516  [key=0, style=solid];
m4_3515 -> m4_3518  [key=2, style=dotted];
m4_3515 -> m4_394  [key=2, style=dotted];
m4_3515 -> m4_1216  [key=2, style=dotted];
m4_3515 -> m4_906  [key=2, style=dotted];
m4_3516 -> m4_3517  [key=0, style=solid];
m4_3516 -> m4_27  [key=2, style=dotted];
m4_3517 -> m4_3514  [key=0, style=bold, color=blue];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_88  [key=2, style=dotted];
m4_700 -> m4_701  [key=0, style=solid];
m4_700 -> m4_703  [key=2, style=dotted];
m4_700 -> m4_51  [key=2, style=dotted];
m4_701 -> m4_87  [key=2, style=dotted];
m4_701 -> m4_702  [key=0, style=solid];
m4_701 -> m4_708  [key=2, style=dotted];
m4_701 -> m4_704  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_701 -> m4_705  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_701 -> m4_706  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_701 -> m4_27  [key=2, style=dotted];
m4_702 -> m4_703  [key=0, style=solid];
m4_702 -> m4_76  [key=2, style=dotted];
m4_702 -> m4_699  [key=0, style=bold, color=blue];
m4_2689 -> m4_2690  [key=0, style=solid];
m4_2690 -> m4_2691  [key=0, style=solid];
m4_2690 -> m4_321  [key=2, style=dotted];
m4_2690 -> m4_2692  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2690 -> m4_2690  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2691 -> m4_2689  [key=0, style=bold, color=blue];
m4_2276 -> m4_2277  [key=0, style=solid];
m4_2277 -> m4_2278  [key=0, style=solid];
m4_2277 -> m4_321  [key=2, style=dotted];
m4_2277 -> m4_2279  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2278 -> m4_2276  [key=0, style=bold, color=blue];
m4_1474 -> m4_1475  [key=0, style=solid];
m4_1475 -> m4_1476  [key=0, style=solid];
m4_1475 -> m4_1417  [key=2, style=dotted];
m4_1475 -> m4_1477  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m4_1476 -> m4_1477  [key=0, style=solid];
m4_1476 -> m4_1429  [key=2, style=dotted];
m4_1477 -> m4_1478  [key=0, style=solid];
m4_1477 -> m4_51  [key=2, style=dotted];
m4_1477 -> m4_1479  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1478 -> m4_1479  [key=0, style=solid];
m4_1478 -> m4_27  [key=2, style=dotted];
m4_1479 -> m4_1480  [key=0, style=solid];
m4_1479 -> m4_25  [key=2, style=dotted];
m4_1479 -> m4_1481  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m4_1480 -> m4_1481  [key=0, style=solid];
m4_1480 -> m4_27  [key=2, style=dotted];
m4_1481 -> m4_1482  [key=0, style=solid];
m4_1481 -> m4_27  [key=2, style=dotted];
m4_1482 -> m4_1474  [key=0, style=bold, color=blue];
m4_12 -> m4_23  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_22  [key=2, style=dotted];
m4_11 -> m4_4  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_21  [key=2, style=dotted];
m4_10 -> m4_4  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m4_14 -> m4_0  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_3  [key=2, style=dotted];
m4_3617 -> m4_3618  [key=0, style=solid];
m4_3618 -> m4_3619  [key=0, style=solid];
m4_3618 -> m4_25  [key=2, style=dotted];
m4_3618 -> m4_3620  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3618 -> m4_3621  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3618 -> m4_3622  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_3619 -> m4_3620  [key=0, style=solid];
m4_3619 -> m4_27  [key=2, style=dotted];
m4_3620 -> m4_3621  [key=0, style=solid];
m4_3620 -> m4_27  [key=2, style=dotted];
m4_3621 -> m4_3622  [key=0, style=solid];
m4_3621 -> m4_27  [key=2, style=dotted];
m4_3622 -> m4_3623  [key=0, style=solid];
m4_3622 -> m4_27  [key=2, style=dotted];
m4_3623 -> m4_3617  [key=0, style=bold, color=blue];
m4_2467 -> m4_2468  [key=0, style=solid];
m4_2468 -> m4_2469  [key=0, style=solid];
m4_2468 -> m4_25  [key=2, style=dotted];
m4_2469 -> m4_2470  [key=0, style=solid];
m4_2469 -> m4_27  [key=2, style=dotted];
m4_2470 -> m4_2467  [key=0, style=bold, color=blue];
m4_1785 -> m4_1786  [key=0, style=solid];
m4_1786 -> m4_1787  [key=0, style=solid];
m4_1786 -> m4_390  [key=2, style=dotted];
m4_1786 -> m4_1788  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m4_1786 -> m4_1789  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m4_1787 -> m4_1788  [key=0, style=solid];
m4_1787 -> m4_3  [key=2, style=dotted];
m4_1787 -> m4_1789  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_1787 -> m4_1790  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_1788 -> m4_1789  [key=0, style=solid];
m4_1788 -> m4_1784  [key=2, style=dotted];
m4_1788 -> m4_1799  [key=2, style=dotted];
m4_1788 -> m4_339  [key=2, style=dotted];
m4_1789 -> m4_1790  [key=0, style=solid];
m4_1789 -> m4_1784  [key=2, style=dotted];
m4_1789 -> m4_1799  [key=2, style=dotted];
m4_1789 -> m4_339  [key=2, style=dotted];
m4_1790 -> m4_1791  [key=0, style=solid];
m4_1790 -> m4_24  [key=2, style=dotted];
m4_1790 -> m4_1792  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1791 -> m4_1792  [key=0, style=solid];
m4_1791 -> m4_27  [key=2, style=dotted];
m4_1792 -> m4_1793  [key=0, style=solid];
m4_1792 -> m4_25  [key=2, style=dotted];
m4_1792 -> m4_1794  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1792 -> m4_1795  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1792 -> m4_1796  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1792 -> m4_1797  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1793 -> m4_1794  [key=0, style=solid];
m4_1793 -> m4_27  [key=2, style=dotted];
m4_1794 -> m4_1795  [key=0, style=solid];
m4_1794 -> m4_27  [key=2, style=dotted];
m4_1795 -> m4_1796  [key=0, style=solid];
m4_1795 -> m4_27  [key=2, style=dotted];
m4_1796 -> m4_1797  [key=0, style=solid];
m4_1796 -> m4_27  [key=2, style=dotted];
m4_1797 -> m4_1798  [key=0, style=solid];
m4_1797 -> m4_27  [key=2, style=dotted];
m4_1798 -> m4_1785  [key=0, style=bold, color=blue];
m4_3268 -> m4_3269  [key=0, style=solid];
m4_3269 -> m4_3270  [key=0, style=solid];
m4_3269 -> m4_3278  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3269 -> m4_809  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3270 -> m4_3271  [key=0, style=solid];
m4_3270 -> m4_25  [key=2, style=dotted];
m4_3270 -> m4_3272  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3270 -> m4_3273  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3270 -> m4_3274  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3270 -> m4_3275  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3270 -> m4_3276  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3270 -> m4_3277  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3278 -> m4_3279  [key=0, style=solid];
m4_3278 -> m4_27  [key=2, style=dotted];
m4_3271 -> m4_3272  [key=0, style=solid];
m4_3271 -> m4_27  [key=2, style=dotted];
m4_3272 -> m4_3273  [key=0, style=solid];
m4_3272 -> m4_27  [key=2, style=dotted];
m4_3273 -> m4_3274  [key=0, style=solid];
m4_3273 -> m4_3267  [key=2, style=dotted];
m4_3273 -> m4_27  [key=2, style=dotted];
m4_3274 -> m4_3275  [key=0, style=solid];
m4_3274 -> m4_3267  [key=2, style=dotted];
m4_3274 -> m4_27  [key=2, style=dotted];
m4_3275 -> m4_3276  [key=0, style=solid];
m4_3275 -> m4_27  [key=2, style=dotted];
m4_3276 -> m4_3277  [key=0, style=solid];
m4_3276 -> m4_27  [key=2, style=dotted];
m4_3277 -> m4_3278  [key=0, style=solid];
m4_3277 -> m4_51  [key=2, style=dotted];
m4_3279 -> m4_3268  [key=0, style=bold, color=blue];
m4_3624 -> m4_3625  [key=0, style=solid];
m4_3625 -> m4_3626  [key=0, style=solid];
m4_3625 -> m4_25  [key=2, style=dotted];
m4_3625 -> m4_3628  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_3626 -> m4_3627  [key=0, style=solid];
m4_3626 -> m4_27  [key=2, style=dotted];
m4_3628 -> m4_3629  [key=0, style=solid];
m4_3628 -> m4_27  [key=2, style=dotted];
m4_3627 -> m4_3628  [key=0, style=solid];
m4_3627 -> m4_3630  [key=2, style=dotted];
m4_3629 -> m4_3624  [key=0, style=bold, color=blue];
m4_3128 -> m4_3129  [key=0, style=solid];
m4_3129 -> m4_3130  [key=0, style=solid];
m4_3129 -> m4_3  [key=2, style=dotted];
m4_3130 -> m4_3128  [key=0, style=bold, color=blue];
m4_3090 -> m4_3091  [key=0, style=solid];
m4_3090 -> m4_3087  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m4_3091 -> m4_3092  [key=0, style=solid];
m4_3092 -> m4_3090  [key=0, style=bold, color=blue];
m4_2323 -> m4_2324  [key=0, style=solid];
m4_2324 -> m4_2325  [key=0, style=solid];
m4_2324 -> m4_2322  [key=2, style=dotted];
m4_2324 -> m4_2327  [key=1, style=dashed, color=darkseagreen4, label=cc];
m4_2325 -> m4_2326  [key=0, style=solid];
m4_2325 -> m4_2331  [key=2, style=dotted];
m4_2325 -> m4_2327  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2327 -> m4_2328  [key=0, style=solid];
m4_2327 -> m4_177  [key=2, style=dotted];
m4_2326 -> m4_2327  [key=0, style=solid];
m4_2326 -> m4_174  [key=2, style=dotted];
m4_2326 -> m4_2328  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_2328 -> m4_2329  [key=0, style=solid];
m4_2328 -> m4_178  [key=2, style=dotted];
m4_2328 -> m4_2332  [key=2, style=dotted];
m4_2328 -> m4_179  [key=2, style=dotted];
m4_2329 -> m4_2330  [key=0, style=solid];
m4_2329 -> m4_137  [key=2, style=dotted];
m4_2330 -> m4_2323  [key=0, style=bold, color=blue];
m4_3519 -> m4_3520  [key=0, style=solid];
m4_3520 -> m4_3521  [key=0, style=solid];
m4_3520 -> m4_25  [key=2, style=dotted];
m4_3520 -> m4_3522  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_3520 -> m4_3523  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_3521 -> m4_3522  [key=0, style=solid];
m4_3521 -> m4_176  [key=2, style=dotted];
m4_3521 -> m4_27  [key=2, style=dotted];
m4_3522 -> m4_3523  [key=0, style=solid];
m4_3522 -> m4_27  [key=2, style=dotted];
m4_3523 -> m4_3524  [key=0, style=solid];
m4_3523 -> m4_27  [key=2, style=dotted];
m4_3524 -> m4_3519  [key=0, style=bold, color=blue];
m4_2333 -> m4_2334  [key=0, style=solid];
m4_2334 -> m4_2335  [key=0, style=solid];
m4_2334 -> m4_2338  [key=2, style=dotted];
m4_2335 -> m4_2336  [key=0, style=solid];
m4_2335 -> m4_51  [key=2, style=dotted];
m4_2336 -> m4_2337  [key=0, style=solid];
m4_2336 -> m4_27  [key=2, style=dotted];
m4_2337 -> m4_2333  [key=0, style=bold, color=blue];
m4_1235 -> m4_1236  [key=0, style=solid];
m4_1236 -> m4_1237  [key=0, style=solid];
m4_1236 -> m4_3  [key=2, style=dotted];
m4_1236 -> m4_1238  [key=1, style=dashed, color=darkseagreen4, label=strings];
m4_1236 -> m4_1239  [key=1, style=dashed, color=darkseagreen4, label=strings];
m4_1236 -> m4_1240  [key=1, style=dashed, color=darkseagreen4, label=strings];
m4_1237 -> m4_1238  [key=0, style=solid];
m4_1237 -> m4_339  [key=2, style=dotted];
m4_1238 -> m4_1239  [key=0, style=solid];
m4_1238 -> m4_339  [key=2, style=dotted];
m4_1239 -> m4_1240  [key=0, style=solid];
m4_1239 -> m4_339  [key=2, style=dotted];
m4_1240 -> m4_1241  [key=0, style=solid];
m4_1240 -> m4_51  [key=2, style=dotted];
m4_1241 -> m4_1242  [key=0, style=solid];
m4_1241 -> m4_27  [key=2, style=dotted];
m4_1242 -> m4_1235  [key=0, style=bold, color=blue];
m4_1243 -> m4_1244  [key=0, style=solid];
m4_1244 -> m4_1245  [key=0, style=solid];
m4_1244 -> m4_1251  [key=2, style=dotted];
m4_1245 -> m4_1246  [key=0, style=solid];
m4_1245 -> m4_24  [key=2, style=dotted];
m4_1245 -> m4_1247  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1246 -> m4_1247  [key=0, style=solid];
m4_1246 -> m4_27  [key=2, style=dotted];
m4_1247 -> m4_1248  [key=0, style=solid];
m4_1247 -> m4_25  [key=2, style=dotted];
m4_1247 -> m4_1249  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_1248 -> m4_1249  [key=0, style=solid];
m4_1248 -> m4_27  [key=2, style=dotted];
m4_1249 -> m4_1250  [key=0, style=solid];
m4_1249 -> m4_27  [key=2, style=dotted];
m4_1250 -> m4_1243  [key=0, style=bold, color=blue];
m4_2734 -> m4_2735  [key=0, style=solid];
m4_2735 -> m4_2736  [key=0, style=solid];
m4_2735 -> m4_2740  [key=2, style=dotted];
m4_2735 -> m4_2741  [key=2, style=dotted];
m4_2735 -> m4_51  [key=2, style=dotted];
m4_2736 -> m4_2737  [key=0, style=solid];
m4_2736 -> m4_27  [key=2, style=dotted];
m4_2737 -> m4_2738  [key=0, style=solid];
m4_2737 -> m4_25  [key=2, style=dotted];
m4_2738 -> m4_2739  [key=0, style=solid];
m4_2738 -> m4_2741  [key=2, style=dotted];
m4_2738 -> m4_27  [key=2, style=dotted];
m4_2739 -> m4_2734  [key=0, style=bold, color=blue];
m4_2937 -> m4_2938  [key=0, style=solid];
m4_2938 -> m4_2939  [key=0, style=solid];
m4_2938 -> m4_2945  [key=2, style=dotted];
m4_2939 -> m4_2940  [key=0, style=solid];
m4_2939 -> m4_25  [key=2, style=dotted];
m4_2939 -> m4_2941  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2939 -> m4_2942  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2939 -> m4_2943  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2940 -> m4_2941  [key=0, style=solid];
m4_2940 -> m4_864  [key=2, style=dotted];
m4_2941 -> m4_2942  [key=0, style=solid];
m4_2941 -> m4_27  [key=2, style=dotted];
m4_2942 -> m4_2943  [key=0, style=solid];
m4_2942 -> m4_27  [key=2, style=dotted];
m4_2943 -> m4_2944  [key=0, style=solid];
m4_2943 -> m4_27  [key=2, style=dotted];
m4_2944 -> m4_2937  [key=0, style=bold, color=blue];
m4_2804 -> m4_2805  [key=0, style=solid];
m4_2805 -> m4_2806  [key=0, style=solid];
m4_2805 -> m4_394  [key=2, style=dotted];
m4_2805 -> m4_652  [key=2, style=dotted];
m4_2805 -> m4_2807  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2805 -> m4_2808  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2805 -> m4_2809  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2806 -> m4_2807  [key=0, style=solid];
m4_2806 -> m4_2816  [key=2, style=dotted];
m4_2806 -> m4_2817  [key=2, style=dotted];
m4_2806 -> m4_27  [key=2, style=dotted];
m4_2807 -> m4_2808  [key=0, style=solid];
m4_2807 -> m4_2818  [key=2, style=dotted];
m4_2807 -> m4_27  [key=2, style=dotted];
m4_2808 -> m4_2809  [key=0, style=solid];
m4_2808 -> m4_27  [key=2, style=dotted];
m4_2809 -> m4_2810  [key=0, style=solid];
m4_2809 -> m4_27  [key=2, style=dotted];
m4_2810 -> m4_2811  [key=0, style=solid];
m4_2810 -> m4_394  [key=2, style=dotted];
m4_2810 -> m4_652  [key=2, style=dotted];
m4_2810 -> m4_2812  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2810 -> m4_2813  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2810 -> m4_2814  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2811 -> m4_2812  [key=0, style=solid];
m4_2811 -> m4_2816  [key=2, style=dotted];
m4_2811 -> m4_2817  [key=2, style=dotted];
m4_2811 -> m4_27  [key=2, style=dotted];
m4_2812 -> m4_2813  [key=0, style=solid];
m4_2812 -> m4_2818  [key=2, style=dotted];
m4_2812 -> m4_27  [key=2, style=dotted];
m4_2813 -> m4_2814  [key=0, style=solid];
m4_2813 -> m4_27  [key=2, style=dotted];
m4_2814 -> m4_2815  [key=0, style=solid];
m4_2814 -> m4_27  [key=2, style=dotted];
m4_2815 -> m4_2804  [key=0, style=bold, color=blue];
m4_2406 -> m4_2407  [key=0, style=solid];
m4_2407 -> m4_2408  [key=0, style=solid];
m4_2407 -> m4_2412  [key=2, style=dotted];
m4_2407 -> m4_24  [key=2, style=dotted];
m4_2408 -> m4_2409  [key=0, style=solid];
m4_2408 -> m4_27  [key=2, style=dotted];
m4_2409 -> m4_2410  [key=0, style=solid];
m4_2409 -> m4_2413  [key=2, style=dotted];
m4_2409 -> m4_24  [key=2, style=dotted];
m4_2410 -> m4_2411  [key=0, style=solid];
m4_2410 -> m4_27  [key=2, style=dotted];
m4_2411 -> m4_2406  [key=0, style=bold, color=blue];
m4_2299 -> m4_2300  [key=0, style=solid];
m4_2300 -> m4_2301  [key=0, style=solid];
m4_2301 -> m4_2302  [key=0, style=solid];
m4_2302 -> m4_2299  [key=0, style=bold, color=blue];
m4_2229 -> m4_2230  [key=0, style=solid];
m4_2230 -> m4_2231  [key=0, style=solid];
m4_2231 -> m4_2232  [key=0, style=solid];
m4_2232 -> m4_2229  [key=0, style=bold, color=blue];
m4_1190 -> m4_1191  [key=0, style=solid];
m4_1191 -> m4_1192  [key=0, style=solid];
m4_1191 -> m4_1195  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1191 -> m4_1128  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1192 -> m4_1193  [key=0, style=solid];
m4_1192 -> m4_321  [key=2, style=dotted];
m4_1192 -> m4_1194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1193 -> m4_1190  [key=0, style=bold, color=blue];
m4_3256 -> m4_3257  [key=0, style=solid];
m4_3257 -> m4_3258  [key=0, style=solid];
m4_3257 -> m4_3257  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3258 -> m4_3259  [key=0, style=solid];
m4_3258 -> m4_25  [key=2, style=dotted];
m4_3258 -> m4_3260  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3258 -> m4_3261  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3258 -> m4_3262  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3258 -> m4_3263  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3258 -> m4_3264  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3258 -> m4_3265  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3259 -> m4_3260  [key=0, style=solid];
m4_3259 -> m4_27  [key=2, style=dotted];
m4_3260 -> m4_3261  [key=0, style=solid];
m4_3260 -> m4_27  [key=2, style=dotted];
m4_3261 -> m4_3262  [key=0, style=solid];
m4_3261 -> m4_3267  [key=2, style=dotted];
m4_3261 -> m4_27  [key=2, style=dotted];
m4_3262 -> m4_3263  [key=0, style=solid];
m4_3262 -> m4_3267  [key=2, style=dotted];
m4_3262 -> m4_27  [key=2, style=dotted];
m4_3263 -> m4_3264  [key=0, style=solid];
m4_3263 -> m4_3267  [key=2, style=dotted];
m4_3263 -> m4_27  [key=2, style=dotted];
m4_3264 -> m4_3265  [key=0, style=solid];
m4_3264 -> m4_27  [key=2, style=dotted];
m4_3265 -> m4_3266  [key=0, style=solid];
m4_3265 -> m4_27  [key=2, style=dotted];
m4_3266 -> m4_3256  [key=0, style=bold, color=blue];
m4_3593 -> m4_3594  [key=0, style=solid];
m4_3594 -> m4_3595  [key=0, style=solid];
m4_3594 -> m4_3116  [key=2, style=dotted];
m4_3595 -> m4_3593  [key=0, style=bold, color=blue];
m4_2969 -> m4_2970  [key=0, style=solid];
m4_2970 -> m4_2971  [key=0, style=solid];
m4_2970 -> m4_50  [key=2, style=dotted];
m4_2970 -> m4_390  [key=2, style=dotted];
m4_2971 -> m4_2972  [key=0, style=solid];
m4_2971 -> m4_24  [key=2, style=dotted];
m4_2971 -> m4_2973  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2972 -> m4_2973  [key=0, style=solid];
m4_2972 -> m4_27  [key=2, style=dotted];
m4_2973 -> m4_2974  [key=0, style=solid];
m4_2973 -> m4_25  [key=2, style=dotted];
m4_2973 -> m4_2975  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2973 -> m4_2976  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2974 -> m4_2975  [key=0, style=solid];
m4_2974 -> m4_27  [key=2, style=dotted];
m4_2975 -> m4_2976  [key=0, style=solid];
m4_2975 -> m4_390  [key=2, style=dotted];
m4_2975 -> m4_27  [key=2, style=dotted];
m4_2976 -> m4_2977  [key=0, style=solid];
m4_2976 -> m4_390  [key=2, style=dotted];
m4_2976 -> m4_27  [key=2, style=dotted];
m4_2977 -> m4_2969  [key=0, style=bold, color=blue];
m4_717 -> m4_718  [key=0, style=solid];
m4_720 -> m4_100  [key=2, style=dotted];
m4_720 -> m4_721  [key=0, style=solid];
m4_720 -> m4_720  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_719 -> m4_720  [key=0, style=solid];
m4_719 -> m4_1706  [key=2, style=dotted];
m4_719 -> m4_721  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_721 -> m4_722  [key=0, style=solid];
m4_721 -> m4_174  [key=2, style=dotted];
m4_721 -> m4_25  [key=2, style=dotted];
m4_721 -> m4_723  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m4_721 -> m4_724  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m4_722 -> m4_723  [key=0, style=solid];
m4_722 -> m4_77  [key=2, style=dotted];
m4_722 -> m4_27  [key=2, style=dotted];
m4_723 -> m4_23  [key=2, style=dotted];
m4_723 -> m4_724  [key=0, style=solid];
m4_723 -> m4_726  [key=2, style=dotted];
m4_723 -> m4_27  [key=2, style=dotted];
m4_724 -> m4_717  [key=0, style=bold, color=blue];
m4_724 -> m4_725  [key=0, style=solid];
m4_724 -> m4_27  [key=2, style=dotted];
m4_1067 -> m4_1068  [key=0, style=solid];
m4_1068 -> m4_1069  [key=0, style=solid];
m4_1068 -> m4_1068  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1069 -> m4_1070  [key=0, style=solid];
m4_1069 -> m4_25  [key=2, style=dotted];
m4_1069 -> m4_1071  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1069 -> m4_1072  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1069 -> m4_1073  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1069 -> m4_1074  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1070 -> m4_1071  [key=0, style=solid];
m4_1070 -> m4_1076  [key=2, style=dotted];
m4_1071 -> m4_1072  [key=0, style=solid];
m4_1071 -> m4_137  [key=2, style=dotted];
m4_1072 -> m4_1073  [key=0, style=solid];
m4_1072 -> m4_27  [key=2, style=dotted];
m4_1073 -> m4_1074  [key=0, style=solid];
m4_1073 -> m4_27  [key=2, style=dotted];
m4_1074 -> m4_1075  [key=0, style=solid];
m4_1074 -> m4_27  [key=2, style=dotted];
m4_1075 -> m4_1067  [key=0, style=bold, color=blue];
m4_1349 -> m4_1350  [key=0, style=solid];
m4_1350 -> m4_1351  [key=0, style=solid];
m4_1350 -> m4_24  [key=2, style=dotted];
m4_1351 -> m4_1349  [key=0, style=bold, color=blue];
m4_457 -> m4_457  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_457 -> m4_458  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_51  [key=2, style=dotted];
m4_2997 -> m4_3636  [key=0, style=solid];
m4_3636 -> m4_2997  [key=0, style=bold, color=blue];
m4_256 -> m4_257  [key=0, style=solid];
m4_260 -> m4_174  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_260 -> m4_256  [key=0, style=bold, color=blue];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_259  [key=1, style=dashed, color=darkseagreen4, label=fragement];
m4_259 -> m4_261  [key=2, style=dotted];
m4_259 -> m4_27  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_264  [key=2, style=dotted];
m4_258 -> m4_200  [key=2, style=dotted];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_1706  [key=2, style=dotted];
m4_257 -> m4_219  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m4_2124 -> m4_2125  [key=0, style=solid];
m4_2125 -> m4_2126  [key=0, style=solid];
m4_2125 -> m4_2125  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2126 -> m4_2127  [key=0, style=solid];
m4_2126 -> m4_25  [key=2, style=dotted];
m4_2127 -> m4_2128  [key=0, style=solid];
m4_2127 -> m4_27  [key=2, style=dotted];
m4_2128 -> m4_2124  [key=0, style=bold, color=blue];
m4_2531 -> m4_3663  [key=0, style=solid];
m4_3663 -> m4_2531  [key=0, style=bold, color=blue];
m4_1116 -> m4_1117  [key=0, style=solid];
m4_1117 -> m4_1118  [key=0, style=solid];
m4_1117 -> m4_1117  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1118 -> m4_1119  [key=0, style=solid];
m4_1118 -> m4_25  [key=2, style=dotted];
m4_1119 -> m4_1116  [key=0, style=bold, color=blue];
m4_2521 -> m4_2522  [key=0, style=solid];
m4_2522 -> m4_2523  [key=0, style=solid];
m4_2522 -> m4_50  [key=2, style=dotted];
m4_2522 -> m4_2531  [key=2, style=dotted];
m4_2523 -> m4_2524  [key=0, style=solid];
m4_2523 -> m4_2532  [key=2, style=dotted];
m4_2523 -> m4_2533  [key=2, style=dotted];
m4_2524 -> m4_2525  [key=0, style=solid];
m4_2524 -> m4_24  [key=2, style=dotted];
m4_2524 -> m4_2526  [key=1, style=dashed, color=darkseagreen4, label=originalJson];
m4_2525 -> m4_2526  [key=0, style=solid];
m4_2525 -> m4_27  [key=2, style=dotted];
m4_2526 -> m4_2527  [key=0, style=solid];
m4_2526 -> m4_25  [key=2, style=dotted];
m4_2526 -> m4_2528  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m4_2526 -> m4_2529  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m4_2527 -> m4_2528  [key=0, style=solid];
m4_2527 -> m4_27  [key=2, style=dotted];
m4_2528 -> m4_2529  [key=0, style=solid];
m4_2528 -> m4_27  [key=2, style=dotted];
m4_2529 -> m4_2530  [key=0, style=solid];
m4_2529 -> m4_27  [key=2, style=dotted];
m4_2530 -> m4_2521  [key=0, style=bold, color=blue];
m4_613 -> m4_614  [key=0, style=solid];
m4_613 -> m4_611  [key=2, style=dotted];
m4_614 -> m4_615  [key=0, style=solid];
m4_614 -> m4_619  [key=2, style=dotted];
m4_614 -> m4_620  [key=2, style=dotted];
m4_614 -> m4_616  [key=1, style=dashed, color=darkseagreen4, label=xml];
m4_614 -> m4_614  [key=3, color=darkorchid, style=bold, label="Local variable string xml"];
m4_615 -> m4_616  [key=0, style=solid];
m4_615 -> m4_27  [key=2, style=dotted];
m4_615 -> m4_1706  [key=2, style=dotted];
m4_615 -> m4_617  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_616 -> m4_617  [key=0, style=solid];
m4_616 -> m4_619  [key=2, style=dotted];
m4_616 -> m4_621  [key=2, style=dotted];
m4_616 -> m4_100  [key=2, style=dotted];
m4_617 -> m4_618  [key=0, style=solid];
m4_617 -> m4_27  [key=2, style=dotted];
m4_617 -> m4_174  [key=2, style=dotted];
m4_618 -> m4_612  [key=0, style=bold, color=blue];
m4_618 -> m4_89  [key=2, style=dotted];
m4_618 -> m4_619  [key=0, style=solid];
m4_3189 -> m4_3190  [key=0, style=solid];
m4_3190 -> m4_3191  [key=0, style=solid];
m4_3190 -> m4_3196  [key=2, style=dotted];
m4_3191 -> m4_3192  [key=0, style=solid];
m4_3191 -> m4_394  [key=2, style=dotted];
m4_3191 -> m4_3197  [key=2, style=dotted];
m4_3191 -> m4_395  [key=2, style=dotted];
m4_3191 -> m4_3193  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3192 -> m4_3193  [key=0, style=solid];
m4_3192 -> m4_27  [key=2, style=dotted];
m4_3193 -> m4_3194  [key=0, style=solid];
m4_3193 -> m4_394  [key=2, style=dotted];
m4_3193 -> m4_3197  [key=2, style=dotted];
m4_3193 -> m4_652  [key=2, style=dotted];
m4_3194 -> m4_3195  [key=0, style=solid];
m4_3194 -> m4_27  [key=2, style=dotted];
m4_3195 -> m4_3189  [key=0, style=bold, color=blue];
m4_1229 -> m4_1230  [key=0, style=solid];
m4_1230 -> m4_1231  [key=0, style=solid];
m4_1230 -> m4_321  [key=2, style=dotted];
m4_1230 -> m4_1232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1231 -> m4_1229  [key=0, style=bold, color=blue];
m4_2425 -> m4_2426  [key=0, style=solid];
m4_2426 -> m4_2427  [key=0, style=solid];
m4_2426 -> m4_2414  [key=2, style=dotted];
m4_2427 -> m4_2428  [key=0, style=solid];
m4_2427 -> m4_24  [key=2, style=dotted];
m4_2427 -> m4_2429  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2428 -> m4_2429  [key=0, style=solid];
m4_2428 -> m4_27  [key=2, style=dotted];
m4_2429 -> m4_2430  [key=0, style=solid];
m4_2429 -> m4_25  [key=2, style=dotted];
m4_2430 -> m4_2431  [key=0, style=solid];
m4_2430 -> m4_2422  [key=2, style=dotted];
m4_2430 -> m4_27  [key=2, style=dotted];
m4_2431 -> m4_2425  [key=0, style=bold, color=blue];
m4_3437 -> m4_3438  [key=0, style=solid];
m4_3438 -> m4_3439  [key=0, style=solid];
m4_3438 -> m4_457  [key=2, style=dotted];
m4_3438 -> m4_3443  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_3439 -> m4_3440  [key=0, style=solid];
m4_3439 -> m4_2516  [key=2, style=dotted];
m4_3439 -> m4_3441  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3439 -> m4_3442  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3443 -> m4_3444  [key=0, style=solid];
m4_3443 -> m4_2520  [key=2, style=dotted];
m4_3440 -> m4_3441  [key=0, style=solid];
m4_3440 -> m4_394  [key=2, style=dotted];
m4_3440 -> m4_2721  [key=2, style=dotted];
m4_3441 -> m4_3442  [key=0, style=solid];
m4_3441 -> m4_2600  [key=2, style=dotted];
m4_3442 -> m4_3443  [key=0, style=solid];
m4_3442 -> m4_27  [key=2, style=dotted];
m4_3444 -> m4_3445  [key=0, style=solid];
m4_3444 -> m4_27  [key=2, style=dotted];
m4_3445 -> m4_3437  [key=0, style=bold, color=blue];
m4_1176 -> m4_1177  [key=0, style=solid];
m4_1177 -> m4_1178  [key=0, style=solid];
m4_1177 -> m4_1181  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1177 -> m4_1177  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1178 -> m4_1179  [key=0, style=solid];
m4_1178 -> m4_321  [key=2, style=dotted];
m4_1178 -> m4_1180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1179 -> m4_1176  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_24  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_25  [key=2, style=dotted];
m4_19 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=r2];
m4_935 -> m4_936  [key=0, style=solid];
m4_936 -> m4_937  [key=0, style=solid];
m4_936 -> m4_947  [key=2, style=dotted];
m4_936 -> m4_938  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m4_936 -> m4_939  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m4_936 -> m4_940  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m4_937 -> m4_938  [key=0, style=solid];
m4_938 -> m4_939  [key=0, style=solid];
m4_939 -> m4_940  [key=0, style=solid];
m4_940 -> m4_941  [key=0, style=solid];
m4_940 -> m4_24  [key=2, style=dotted];
m4_941 -> m4_942  [key=0, style=solid];
m4_941 -> m4_27  [key=2, style=dotted];
m4_942 -> m4_943  [key=0, style=solid];
m4_942 -> m4_25  [key=2, style=dotted];
m4_942 -> m4_944  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m4_942 -> m4_945  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m4_943 -> m4_944  [key=0, style=solid];
m4_943 -> m4_27  [key=2, style=dotted];
m4_944 -> m4_945  [key=0, style=solid];
m4_944 -> m4_27  [key=2, style=dotted];
m4_945 -> m4_946  [key=0, style=solid];
m4_945 -> m4_27  [key=2, style=dotted];
m4_946 -> m4_935  [key=0, style=bold, color=blue];
m4_521 -> m4_522  [key=0, style=solid];
m4_521 -> m4_2788  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_525 -> m4_89  [key=2, style=dotted];
m4_525 -> m4_526  [key=0, style=solid];
m4_525 -> m4_27  [key=2, style=dotted];
m4_527 -> m4_89  [key=2, style=dotted];
m4_527 -> m4_528  [key=0, style=solid];
m4_527 -> m4_27  [key=2, style=dotted];
m4_524 -> m4_525  [key=0, style=solid];
m4_524 -> m4_318  [key=2, style=dotted];
m4_524 -> m4_25  [key=2, style=dotted];
m4_524 -> m4_526  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_524 -> m4_527  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_526 -> m4_527  [key=0, style=solid];
m4_526 -> m4_511  [key=2, style=dotted];
m4_526 -> m4_27  [key=2, style=dotted];
m4_523 -> m4_524  [key=0, style=solid];
m4_523 -> m4_526  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_523 -> m4_414  [key=2, style=dotted];
m4_523 -> m4_27  [key=2, style=dotted];
m4_522 -> m4_523  [key=0, style=solid];
m4_522 -> m4_522  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_528 -> m4_521  [key=0, style=bold, color=blue];
m4_528 -> m4_519  [key=0, style=bold, color=blue];
m4_841 -> m4_842  [key=0, style=solid];
m4_841 -> m4_849  [key=2, style=dotted];
m4_841 -> m4_390  [key=2, style=dotted];
m4_841 -> m4_843  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_841 -> m4_844  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_840 -> m4_841  [key=0, style=solid];
m4_842 -> m4_843  [key=0, style=solid];
m4_842 -> m4_51  [key=2, style=dotted];
m4_842 -> m4_845  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m4_843 -> m4_844  [key=0, style=solid];
m4_843 -> m4_443  [key=2, style=dotted];
m4_843 -> m4_620  [key=2, style=dotted];
m4_843 -> m4_846  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m4_844 -> m4_845  [key=0, style=solid];
m4_844 -> m4_671  [key=2, style=dotted];
m4_844 -> m4_620  [key=2, style=dotted];
m4_844 -> m4_847  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m4_845 -> m4_846  [key=0, style=solid];
m4_845 -> m4_137  [key=2, style=dotted];
m4_846 -> m4_847  [key=0, style=solid];
m4_846 -> m4_137  [key=2, style=dotted];
m4_847 -> m4_848  [key=0, style=solid];
m4_847 -> m4_137  [key=2, style=dotted];
m4_848 -> m4_840  [key=0, style=bold, color=blue];
m4_529 -> m4_530  [key=0, style=solid];
m4_243 -> m4_244  [key=0, style=solid];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_255  [key=2, style=dotted];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_27  [key=2, style=dotted];
m4_251 -> m4_24  [key=2, style=dotted];
m4_251 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_252 -> m4_240  [key=0, style=bold, color=blue];
m4_252 -> m4_23  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_2856 -> m4_2857  [key=0, style=solid];
m4_2856 -> m4_2859  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_2857 -> m4_2858  [key=0, style=solid];
m4_2859 -> m4_2860  [key=0, style=solid];
m4_2859 -> m4_2861  [key=2, style=dotted];
m4_2859 -> m4_1692  [key=2, style=dotted];
m4_2859 -> m4_2862  [key=2, style=dotted];
m4_2859 -> m4_2863  [key=2, style=dotted];
m4_2858 -> m4_2859  [key=0, style=solid];
m4_2860 -> m4_2856  [key=0, style=bold, color=blue];
m4_2051 -> m4_2052  [key=0, style=solid];
m4_2052 -> m4_2053  [key=0, style=solid];
m4_2052 -> m4_2058  [key=2, style=dotted];
m4_2053 -> m4_2054  [key=0, style=solid];
m4_2053 -> m4_24  [key=2, style=dotted];
m4_2053 -> m4_2055  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2054 -> m4_2055  [key=0, style=solid];
m4_2054 -> m4_27  [key=2, style=dotted];
m4_2055 -> m4_2056  [key=0, style=solid];
m4_2055 -> m4_25  [key=2, style=dotted];
m4_2056 -> m4_2057  [key=0, style=solid];
m4_2056 -> m4_27  [key=2, style=dotted];
m4_2056 -> m4_2056  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m4_2057 -> m4_2051  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid];
m4_60 -> m4_51  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_67  [key=2, style=dotted];
m4_60 -> m4_62  [key=2, style=dotted];
m4_60 -> m4_43  [key=2, style=dotted];
m4_60 -> m4_44  [key=2, style=dotted];
m4_57 -> m4_64  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_27  [key=2, style=dotted];
m4_56 -> m4_48  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_27  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_66  [key=2, style=dotted];
m4_59 -> m4_27  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_65  [key=2, style=dotted];
m4_58 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_63  [key=2, style=dotted];
m4_55 -> m4_27  [key=2, style=dotted];
m4_53 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_53 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_62  [key=2, style=dotted];
m4_53 -> m4_53  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_25  [key=2, style=dotted];
m4_54 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_54 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_54 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_61 -> m4_52  [key=0, style=bold, color=blue];
m4_2282 -> m4_2283  [key=0, style=solid];
m4_2283 -> m4_2284  [key=0, style=solid];
m4_2283 -> m4_200  [key=2, style=dotted];
m4_2284 -> m4_2285  [key=0, style=solid];
m4_2284 -> m4_1693  [key=2, style=dotted];
m4_2285 -> m4_2282  [key=0, style=bold, color=blue];
m4_3023 -> m4_3024  [key=0, style=solid];
m4_3024 -> m4_3025  [key=0, style=solid];
m4_3024 -> m4_3027  [key=2, style=dotted];
m4_3024 -> m4_24  [key=2, style=dotted];
m4_3025 -> m4_3026  [key=0, style=solid];
m4_3025 -> m4_27  [key=2, style=dotted];
m4_3026 -> m4_3023  [key=0, style=bold, color=blue];
m4_2622 -> m4_2623  [key=0, style=solid];
m4_2623 -> m4_2624  [key=0, style=solid];
m4_2623 -> m4_3  [key=2, style=dotted];
m4_2623 -> m4_2626  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2623 -> m4_2627  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2624 -> m4_2625  [key=0, style=solid];
m4_2624 -> m4_51  [key=2, style=dotted];
m4_2626 -> m4_2627  [key=0, style=solid];
m4_2626 -> m4_27  [key=2, style=dotted];
m4_2627 -> m4_2628  [key=0, style=solid];
m4_2627 -> m4_27  [key=2, style=dotted];
m4_2625 -> m4_2626  [key=0, style=solid];
m4_2625 -> m4_25  [key=2, style=dotted];
m4_2625 -> m4_2627  [key=1, style=dashed, color=darkseagreen4, label=d2];
m4_2628 -> m4_2622  [key=0, style=bold, color=blue];
m4_105 -> m4_106  [key=0, style=solid, color=green];
m4_105 -> m4_109  [key=2, style=dotted, color=green];
m4_105 -> m4_110  [key=2, style=dotted, color=green];
m4_519 -> m4_89  [key=2, style=dotted];
m4_519 -> m4_520  [key=0, style=solid];
m4_520 -> m4_512  [key=0, style=bold, color=blue];
m4_520 -> m4_521  [key=0, style=solid];
m4_520 -> m4_529  [key=2, style=dotted];
m4_520 -> m4_24  [key=2, style=dotted];
m4_520 -> m4_523  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_520 -> m4_524  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3164 -> m4_3165  [key=0, style=solid];
m4_3165 -> m4_3166  [key=0, style=solid];
m4_3165 -> m4_3165  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3166 -> m4_3167  [key=0, style=solid];
m4_3166 -> m4_25  [key=2, style=dotted];
m4_3167 -> m4_3168  [key=0, style=solid];
m4_3168 -> m4_3169  [key=0, style=solid];
m4_3168 -> m4_27  [key=2, style=dotted];
m4_3169 -> m4_3164  [key=0, style=bold, color=blue];
m4_2072 -> m4_2073  [key=0, style=solid];
m4_2073 -> m4_2074  [key=0, style=solid];
m4_2073 -> m4_2066  [key=2, style=dotted];
m4_2073 -> m4_2067  [key=2, style=dotted];
m4_2073 -> m4_217  [key=2, style=dotted];
m4_2073 -> m4_403  [key=2, style=dotted];
m4_2073 -> m4_394  [key=2, style=dotted];
m4_2073 -> m4_906  [key=2, style=dotted];
m4_2073 -> m4_2075  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m4_2074 -> m4_2075  [key=0, style=solid];
m4_2074 -> m4_27  [key=2, style=dotted];
m4_2075 -> m4_2076  [key=0, style=solid];
m4_2075 -> m4_25  [key=2, style=dotted];
m4_2075 -> m4_2077  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m4_2076 -> m4_2077  [key=0, style=solid];
m4_2076 -> m4_403  [key=2, style=dotted];
m4_2076 -> m4_27  [key=2, style=dotted];
m4_2077 -> m4_2078  [key=0, style=solid];
m4_2077 -> m4_217  [key=2, style=dotted];
m4_2077 -> m4_27  [key=2, style=dotted];
m4_2078 -> m4_2072  [key=0, style=bold, color=blue];
m4_1619 -> m4_1656  [key=0, style=solid];
m4_1619 -> m4_1657  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1619 -> m4_1658  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1619 -> m4_1659  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1619 -> m4_1660  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1619 -> m4_1661  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1619 -> m4_1662  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1619 -> m4_1663  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1656 -> m4_1657  [key=0, style=solid];
m4_1657 -> m4_1658  [key=0, style=solid];
m4_1658 -> m4_1659  [key=0, style=solid];
m4_1659 -> m4_1660  [key=0, style=solid];
m4_1660 -> m4_1661  [key=0, style=solid];
m4_1661 -> m4_1662  [key=0, style=solid];
m4_1662 -> m4_1663  [key=0, style=solid];
m4_1663 -> m4_1664  [key=0, style=solid];
m4_1664 -> m4_1619  [key=0, style=bold, color=blue];
m4_2003 -> m4_2004  [key=0, style=solid];
m4_2004 -> m4_2005  [key=0, style=solid];
m4_2004 -> m4_24  [key=2, style=dotted];
m4_2005 -> m4_2006  [key=0, style=solid];
m4_2005 -> m4_27  [key=2, style=dotted];
m4_2006 -> m4_2003  [key=0, style=bold, color=blue];
m4_3336 -> m4_3337  [key=0, style=solid];
m4_3337 -> m4_3338  [key=0, style=solid];
m4_3337 -> m4_3345  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3337 -> m4_3337  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3338 -> m4_3339  [key=0, style=solid];
m4_3338 -> m4_25  [key=2, style=dotted];
m4_3338 -> m4_3340  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3338 -> m4_3341  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3338 -> m4_3342  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3338 -> m4_3343  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3338 -> m4_3344  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3345 -> m4_3346  [key=0, style=solid];
m4_3345 -> m4_27  [key=2, style=dotted];
m4_3339 -> m4_3340  [key=0, style=solid];
m4_3339 -> m4_27  [key=2, style=dotted];
m4_3340 -> m4_3341  [key=0, style=solid];
m4_3340 -> m4_27  [key=2, style=dotted];
m4_3341 -> m4_3342  [key=0, style=solid];
m4_3341 -> m4_3267  [key=2, style=dotted];
m4_3341 -> m4_27  [key=2, style=dotted];
m4_3342 -> m4_3343  [key=0, style=solid];
m4_3342 -> m4_3267  [key=2, style=dotted];
m4_3342 -> m4_27  [key=2, style=dotted];
m4_3343 -> m4_3344  [key=0, style=solid];
m4_3343 -> m4_3267  [key=2, style=dotted];
m4_3343 -> m4_27  [key=2, style=dotted];
m4_3344 -> m4_3345  [key=0, style=solid];
m4_3344 -> m4_51  [key=2, style=dotted];
m4_3346 -> m4_3336  [key=0, style=bold, color=blue];
m4_595 -> m4_596  [key=0, style=solid];
m4_596 -> m4_597  [key=0, style=solid];
m4_596 -> m4_603  [key=2, style=dotted];
m4_2040 -> m4_2041  [key=0, style=solid];
m4_2041 -> m4_2042  [key=0, style=solid];
m4_2041 -> m4_2044  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m4_2042 -> m4_2043  [key=0, style=solid];
m4_2042 -> m4_2046  [key=2, style=dotted];
m4_2042 -> m4_2047  [key=2, style=dotted];
m4_2044 -> m4_2045  [key=0, style=solid];
m4_2044 -> m4_321  [key=2, style=dotted];
m4_2044 -> m4_2048  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2043 -> m4_2044  [key=0, style=solid];
m4_2043 -> m4_24  [key=2, style=dotted];
m4_2043 -> m4_2049  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2045 -> m4_2040  [key=0, style=bold, color=blue];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_443  [key=2, style=dotted];
m4_437 -> m4_106  [key=2, style=dotted];
m4_2151 -> m4_2152  [key=0, style=solid];
m4_2152 -> m4_2153  [key=0, style=solid];
m4_2153 -> m4_2151  [key=0, style=bold, color=blue];
m4_2793 -> m4_2794  [key=0, style=solid];
m4_2794 -> m4_2795  [key=0, style=solid];
m4_2794 -> m4_321  [key=2, style=dotted];
m4_2794 -> m4_2796  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2795 -> m4_2793  [key=0, style=bold, color=blue];
m4_3567 -> m4_3568  [key=0, style=solid];
m4_3568 -> m4_3569  [key=0, style=solid];
m4_3568 -> m4_3570  [key=2, style=dotted];
m4_3569 -> m4_3567  [key=0, style=bold, color=blue];
m4_1990 -> m4_1991  [key=0, style=solid];
m4_1991 -> m4_1992  [key=0, style=solid];
m4_1991 -> m4_1993  [key=2, style=dotted];
m4_1992 -> m4_1990  [key=0, style=bold, color=blue];
m4_2317 -> m4_2318  [key=0, style=solid];
m4_2318 -> m4_2319  [key=0, style=solid];
m4_2318 -> m4_2322  [key=2, style=dotted];
m4_2319 -> m4_2320  [key=0, style=solid];
m4_2319 -> m4_24  [key=2, style=dotted];
m4_2320 -> m4_2321  [key=0, style=solid];
m4_2320 -> m4_137  [key=2, style=dotted];
m4_2321 -> m4_2317  [key=0, style=bold, color=blue];
m4_2238 -> m4_2239  [key=0, style=solid];
m4_2239 -> m4_2240  [key=0, style=solid];
m4_2240 -> m4_2241  [key=0, style=solid];
m4_2241 -> m4_2238  [key=0, style=bold, color=blue];
m4_456 -> m4_457  [key=0, style=solid];
m4_456 -> m4_174  [key=2, style=dotted];
m4_456 -> m4_458  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_456 -> m4_459  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_458 -> m4_89  [key=2, style=dotted];
m4_458 -> m4_459  [key=0, style=solid];
m4_459 -> m4_24  [key=2, style=dotted];
m4_459 -> m4_460  [key=0, style=solid];
m4_460 -> m4_23  [key=2, style=dotted];
m4_460 -> m4_461  [key=0, style=solid];
m4_2028 -> m4_2029  [key=0, style=solid];
m4_2029 -> m4_2030  [key=0, style=solid];
m4_2029 -> m4_456  [key=2, style=dotted];
m4_2029 -> m4_2031  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m4_2029 -> m4_2034  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m4_2030 -> m4_2031  [key=0, style=solid];
m4_2030 -> m4_443  [key=2, style=dotted];
m4_2030 -> m4_2039  [key=2, style=dotted];
m4_2031 -> m4_2032  [key=0, style=solid];
m4_2034 -> m4_2035  [key=0, style=solid];
m4_2034 -> m4_463  [key=2, style=dotted];
m4_2034 -> m4_2036  [key=1, style=dashed, color=darkseagreen4, label=z];
m4_2034 -> m4_2037  [key=1, style=dashed, color=darkseagreen4, label=z];
m4_2032 -> m4_2033  [key=0, style=solid];
m4_2032 -> m4_2032  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2033 -> m4_2034  [key=0, style=solid];
m4_2033 -> m4_461  [key=2, style=dotted];
m4_2033 -> m4_462  [key=2, style=dotted];
m4_2035 -> m4_2036  [key=0, style=solid];
m4_2035 -> m4_27  [key=2, style=dotted];
m4_2036 -> m4_2037  [key=0, style=solid];
m4_2036 -> m4_27  [key=2, style=dotted];
m4_2037 -> m4_2038  [key=0, style=solid];
m4_2037 -> m4_27  [key=2, style=dotted];
m4_2038 -> m4_2028  [key=0, style=bold, color=blue];
m4_999 -> m4_1000  [key=0, style=solid];
m4_1000 -> m4_1001  [key=0, style=solid];
m4_1000 -> m4_1000  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1001 -> m4_1002  [key=0, style=solid];
m4_1001 -> m4_180  [key=2, style=dotted];
m4_1002 -> m4_1003  [key=0, style=solid];
m4_1002 -> m4_184  [key=2, style=dotted];
m4_1002 -> m4_25  [key=2, style=dotted];
m4_1002 -> m4_1004  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1002 -> m4_1005  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1002 -> m4_1006  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1003 -> m4_1004  [key=0, style=solid];
m4_1003 -> m4_864  [key=2, style=dotted];
m4_1004 -> m4_1005  [key=0, style=solid];
m4_1004 -> m4_27  [key=2, style=dotted];
m4_1005 -> m4_1006  [key=0, style=solid];
m4_1005 -> m4_27  [key=2, style=dotted];
m4_1006 -> m4_1007  [key=0, style=solid];
m4_1006 -> m4_27  [key=2, style=dotted];
m4_1007 -> m4_999  [key=0, style=bold, color=blue];
m4_2604 -> m4_2605  [key=0, style=solid];
m4_2605 -> m4_2606  [key=0, style=solid];
m4_2606 -> m4_2607  [key=0, style=solid];
m4_2606 -> m4_2614  [key=2, style=dotted];
m4_2606 -> m4_2608  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m4_2607 -> m4_2608  [key=0, style=solid];
m4_2608 -> m4_2609  [key=0, style=solid];
m4_2609 -> m4_2610  [key=0, style=solid];
m4_2609 -> m4_2609  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2610 -> m4_2611  [key=0, style=solid];
m4_2610 -> m4_25  [key=2, style=dotted];
m4_2610 -> m4_2612  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2611 -> m4_2612  [key=0, style=solid];
m4_2611 -> m4_27  [key=2, style=dotted];
m4_2612 -> m4_2613  [key=0, style=solid];
m4_2612 -> m4_27  [key=2, style=dotted];
m4_2613 -> m4_2604  [key=0, style=bold, color=blue];
m4_850 -> m4_851  [key=0, style=solid];
m4_851 -> m4_852  [key=0, style=solid];
m4_851 -> m4_863  [key=2, style=dotted];
m4_851 -> m4_853  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_851 -> m4_854  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_851 -> m4_855  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_851 -> m4_859  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_851 -> m4_860  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_851 -> m4_861  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_852 -> m4_853  [key=0, style=solid];
m4_852 -> m4_50  [key=2, style=dotted];
m4_853 -> m4_854  [key=0, style=solid];
m4_853 -> m4_3  [key=2, style=dotted];
m4_854 -> m4_855  [key=0, style=solid];
m4_854 -> m4_3  [key=2, style=dotted];
m4_855 -> m4_856  [key=0, style=solid];
m4_855 -> m4_24  [key=2, style=dotted];
m4_855 -> m4_857  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_859 -> m4_860  [key=0, style=solid];
m4_859 -> m4_865  [key=2, style=dotted];
m4_859 -> m4_27  [key=2, style=dotted];
m4_860 -> m4_861  [key=0, style=solid];
m4_860 -> m4_865  [key=2, style=dotted];
m4_860 -> m4_27  [key=2, style=dotted];
m4_861 -> m4_862  [key=0, style=solid];
m4_861 -> m4_865  [key=2, style=dotted];
m4_861 -> m4_27  [key=2, style=dotted];
m4_856 -> m4_857  [key=0, style=solid];
m4_856 -> m4_27  [key=2, style=dotted];
m4_857 -> m4_858  [key=0, style=solid];
m4_857 -> m4_25  [key=2, style=dotted];
m4_857 -> m4_859  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m4_857 -> m4_860  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m4_857 -> m4_861  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m4_858 -> m4_859  [key=0, style=solid];
m4_858 -> m4_864  [key=2, style=dotted];
m4_862 -> m4_850  [key=0, style=bold, color=blue];
m4_2568 -> m4_2569  [key=0, style=solid];
m4_2569 -> m4_2570  [key=0, style=solid];
m4_2569 -> m4_2569  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m4_2570 -> m4_2571  [key=0, style=solid];
m4_2570 -> m4_1015  [key=2, style=dotted];
m4_2570 -> m4_2573  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_2571 -> m4_2572  [key=0, style=solid];
m4_2571 -> m4_51  [key=2, style=dotted];
m4_2573 -> m4_2574  [key=0, style=solid];
m4_2573 -> m4_27  [key=2, style=dotted];
m4_2572 -> m4_2573  [key=0, style=solid];
m4_2572 -> m4_25  [key=2, style=dotted];
m4_2574 -> m4_2568  [key=0, style=bold, color=blue];
m4_924 -> m4_925  [key=0, style=solid];
m4_925 -> m4_926  [key=0, style=solid];
m4_925 -> m4_928  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_925 -> m4_925  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_926 -> m4_927  [key=0, style=solid];
m4_926 -> m4_25  [key=2, style=dotted];
m4_928 -> m4_929  [key=0, style=solid];
m4_928 -> m4_25  [key=2, style=dotted];
m4_928 -> m4_930  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_928 -> m4_931  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_928 -> m4_932  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_928 -> m4_933  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_927 -> m4_928  [key=0, style=solid];
m4_927 -> m4_27  [key=2, style=dotted];
m4_929 -> m4_930  [key=0, style=solid];
m4_929 -> m4_547  [key=2, style=dotted];
m4_929 -> m4_27  [key=2, style=dotted];
m4_930 -> m4_931  [key=0, style=solid];
m4_930 -> m4_547  [key=2, style=dotted];
m4_930 -> m4_27  [key=2, style=dotted];
m4_931 -> m4_932  [key=0, style=solid];
m4_931 -> m4_27  [key=2, style=dotted];
m4_932 -> m4_933  [key=0, style=solid];
m4_932 -> m4_27  [key=2, style=dotted];
m4_933 -> m4_934  [key=0, style=solid];
m4_933 -> m4_27  [key=2, style=dotted];
m4_934 -> m4_924  [key=0, style=bold, color=blue];
m4_2173 -> m4_2174  [key=0, style=solid];
m4_2174 -> m4_2175  [key=0, style=solid];
m4_2174 -> m4_2189  [key=2, style=dotted];
m4_2174 -> m4_2176  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m4_2174 -> m4_2180  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m4_2175 -> m4_2176  [key=0, style=solid];
m4_2175 -> m4_2190  [key=2, style=dotted];
m4_2176 -> m4_2177  [key=0, style=solid];
m4_2176 -> m4_2190  [key=2, style=dotted];
m4_2180 -> m4_2181  [key=0, style=solid];
m4_2180 -> m4_51  [key=2, style=dotted];
m4_2177 -> m4_2178  [key=0, style=solid];
m4_2177 -> m4_2189  [key=2, style=dotted];
m4_2177 -> m4_2179  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m4_2177 -> m4_2184  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m4_2178 -> m4_2179  [key=0, style=solid];
m4_2178 -> m4_2190  [key=2, style=dotted];
m4_2179 -> m4_2180  [key=0, style=solid];
m4_2184 -> m4_2185  [key=0, style=solid];
m4_2184 -> m4_51  [key=2, style=dotted];
m4_2181 -> m4_2182  [key=0, style=solid];
m4_2181 -> m4_2191  [key=2, style=dotted];
m4_2181 -> m4_2183  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_2182 -> m4_2183  [key=0, style=solid];
m4_2182 -> m4_27  [key=2, style=dotted];
m4_2183 -> m4_2184  [key=0, style=solid];
m4_2183 -> m4_27  [key=2, style=dotted];
m4_2185 -> m4_2186  [key=0, style=solid];
m4_2185 -> m4_2191  [key=2, style=dotted];
m4_2185 -> m4_2187  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_2186 -> m4_2187  [key=0, style=solid];
m4_2186 -> m4_27  [key=2, style=dotted];
m4_2187 -> m4_2188  [key=0, style=solid];
m4_2187 -> m4_27  [key=2, style=dotted];
m4_2188 -> m4_2173  [key=0, style=bold, color=blue];
m4_1771 -> m4_1772  [key=0, style=solid];
m4_1772 -> m4_1773  [key=0, style=solid];
m4_1772 -> m4_3  [key=2, style=dotted];
m4_1772 -> m4_1774  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_1772 -> m4_1775  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_1773 -> m4_1774  [key=0, style=solid];
m4_1773 -> m4_1784  [key=2, style=dotted];
m4_1773 -> m4_339  [key=2, style=dotted];
m4_1774 -> m4_1775  [key=0, style=solid];
m4_1774 -> m4_1784  [key=2, style=dotted];
m4_1774 -> m4_339  [key=2, style=dotted];
m4_1775 -> m4_1776  [key=0, style=solid];
m4_1775 -> m4_51  [key=2, style=dotted];
m4_1775 -> m4_1777  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1776 -> m4_1777  [key=0, style=solid];
m4_1776 -> m4_27  [key=2, style=dotted];
m4_1777 -> m4_1778  [key=0, style=solid];
m4_1777 -> m4_25  [key=2, style=dotted];
m4_1777 -> m4_1779  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1777 -> m4_1780  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1777 -> m4_1781  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1777 -> m4_1782  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_1778 -> m4_1779  [key=0, style=solid];
m4_1778 -> m4_27  [key=2, style=dotted];
m4_1779 -> m4_1780  [key=0, style=solid];
m4_1779 -> m4_27  [key=2, style=dotted];
m4_1780 -> m4_1781  [key=0, style=solid];
m4_1780 -> m4_27  [key=2, style=dotted];
m4_1781 -> m4_1782  [key=0, style=solid];
m4_1781 -> m4_27  [key=2, style=dotted];
m4_1782 -> m4_1783  [key=0, style=solid];
m4_1782 -> m4_27  [key=2, style=dotted];
m4_1783 -> m4_1771  [key=0, style=bold, color=blue];
m4_3700 -> m4_3701  [key=0, style=solid];
m4_3701 -> m4_3702  [key=0, style=solid];
m4_3702 -> m4_3700  [key=0, style=bold, color=blue];
m4_305 -> m4_305  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_305 -> m4_306  [key=0, style=solid];
m4_1708 -> m4_1709  [key=0, style=solid];
m4_1709 -> m4_1710  [key=0, style=solid];
m4_1709 -> m4_1713  [key=2, style=dotted];
m4_1709 -> m4_1714  [key=2, style=dotted];
m4_1709 -> m4_1715  [key=2, style=dotted];
m4_1710 -> m4_1711  [key=0, style=solid];
m4_1710 -> m4_1716  [key=2, style=dotted];
m4_1710 -> m4_1717  [key=2, style=dotted];
m4_1710 -> m4_620  [key=2, style=dotted];
m4_1711 -> m4_1712  [key=0, style=solid];
m4_1711 -> m4_27  [key=2, style=dotted];
m4_1712 -> m4_1708  [key=0, style=bold, color=blue];
m4_2400 -> m4_2401  [key=0, style=solid];
m4_2401 -> m4_2402  [key=0, style=solid];
m4_2401 -> m4_1730  [key=2, style=dotted];
m4_2402 -> m4_2400  [key=0, style=bold, color=blue];
m4_1830 -> m4_1831  [key=0, style=solid];
m4_1831 -> m4_1832  [key=0, style=solid];
m4_1831 -> m4_1803  [key=2, style=dotted];
m4_1832 -> m4_1830  [key=0, style=bold, color=blue];
m4_2505 -> m4_2506  [key=0, style=solid];
m4_2506 -> m4_2507  [key=0, style=solid];
m4_2507 -> m4_2508  [key=0, style=solid];
m4_2507 -> m4_2515  [key=2, style=dotted];
m4_2507 -> m4_2510  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2508 -> m4_2509  [key=0, style=solid];
m4_2508 -> m4_457  [key=2, style=dotted];
m4_2508 -> m4_2512  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_2510 -> m4_2511  [key=0, style=solid];
m4_2510 -> m4_2517  [key=2, style=dotted];
m4_2510 -> m4_2518  [key=2, style=dotted];
m4_2509 -> m4_2510  [key=0, style=solid];
m4_2509 -> m4_2516  [key=2, style=dotted];
m4_2509 -> m4_2511  [key=1, style=dashed, color=darkseagreen4, label=jw];
m4_2512 -> m4_2513  [key=0, style=solid];
m4_2512 -> m4_2520  [key=2, style=dotted];
m4_2511 -> m4_2512  [key=0, style=solid];
m4_2511 -> m4_2519  [key=2, style=dotted];
m4_2513 -> m4_2514  [key=0, style=solid];
m4_2513 -> m4_27  [key=2, style=dotted];
m4_2514 -> m4_2505  [key=0, style=bold, color=blue];
m4_130 -> m4_131  [key=0, style=solid];
m4_2025 -> m4_2026  [key=0, style=solid];
m4_2026 -> m4_2027  [key=0, style=solid];
m4_2027 -> m4_2025  [key=0, style=bold, color=blue];
m4_2242 -> m4_2243  [key=0, style=solid];
m4_2242 -> m4_2244  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2243 -> m4_2244  [key=0, style=solid];
m4_2244 -> m4_2245  [key=0, style=solid];
m4_2245 -> m4_2246  [key=0, style=solid];
m4_2246 -> m4_2242  [key=0, style=bold, color=blue];
m4_948 -> m4_949  [key=0, style=solid];
m4_949 -> m4_948  [key=0, style=bold, color=blue];
m4_270 -> m4_100  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_25  [key=2, style=dotted];
m4_270 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m4_269 -> m4_271  [key=1, style=dashed, color=darkseagreen4, label=doc1];
m4_269 -> m4_274  [key=2, style=dotted];
m4_269 -> m4_51  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_174  [key=2, style=dotted];
m4_271 -> m4_273  [key=1, style=dashed, color=darkseagreen4, label=json1];
m4_271 -> m4_27  [key=2, style=dotted];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_1706  [key=2, style=dotted];
m4_272 -> m4_89  [key=2, style=dotted];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_27  [key=2, style=dotted];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_191  [key=2, style=dotted];
m4_273 -> m4_268  [key=0, style=bold, color=blue];
m4_1452 -> m4_1453  [key=0, style=solid];
m4_1452 -> m4_1455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_1453 -> m4_1454  [key=0, style=solid];
m4_1453 -> m4_1455  [key=0, style=solid];
m4_1455 -> m4_1456  [key=0, style=solid];
m4_1455 -> m4_1457  [key=0, style=solid];
m4_1454 -> m4_1457  [key=0, style=solid];
m4_1456 -> m4_1455  [key=0, style=solid];
m4_1456 -> m4_1456  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_1457 -> m4_1452  [key=0, style=bold, color=blue];
m4_2083 -> m4_2084  [key=0, style=solid];
m4_2084 -> m4_2085  [key=0, style=solid];
m4_2084 -> m4_2087  [key=2, style=dotted];
m4_2084 -> m4_24  [key=2, style=dotted];
m4_2085 -> m4_2086  [key=0, style=solid];
m4_2085 -> m4_27  [key=2, style=dotted];
m4_2086 -> m4_2083  [key=0, style=bold, color=blue];
m4_483 -> m4_484  [key=0, style=solid];
m4_483 -> m4_174  [key=2, style=dotted];
m4_484 -> m4_485  [key=0, style=solid];
m4_484 -> m4_484  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_484 -> m4_89  [key=2, style=dotted];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_25  [key=2, style=dotted];
m4_485 -> m4_487  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_485 -> m4_488  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_485 -> m4_489  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_485 -> m4_490  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_485 -> m4_491  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_485 -> m4_479  [key=0, style=bold, color=blue];
m4_486 -> m4_487  [key=0, style=solid];
m4_486 -> m4_27  [key=2, style=dotted];
m4_487 -> m4_488  [key=0, style=solid];
m4_487 -> m4_27  [key=2, style=dotted];
m4_487 -> m4_490  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m4_487 -> m4_500  [key=2, style=dotted];
m4_487 -> m4_489  [key=1, style=dashed, color=darkseagreen4, label=circularDictionary];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_27  [key=2, style=dotted];
m4_488 -> m4_500  [key=2, style=dotted];
m4_488 -> m4_501  [key=2, style=dotted];
m4_489 -> m4_490  [key=0, style=solid];
m4_489 -> m4_27  [key=2, style=dotted];
m4_489 -> m4_501  [key=2, style=dotted];
m4_490 -> m4_491  [key=0, style=solid];
m4_490 -> m4_27  [key=2, style=dotted];
m4_490 -> m4_492  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_490 -> m4_64  [key=2, style=dotted];
m4_490 -> m4_502  [key=2, style=dotted];
m4_491 -> m4_492  [key=0, style=solid];
m4_491 -> m4_27  [key=2, style=dotted];
m4_491 -> m4_89  [key=2, style=dotted];
m4_492 -> m4_483  [key=0, style=bold, color=blue];
m4_492 -> m4_493  [key=0, style=solid];
m4_492 -> m4_27  [key=2, style=dotted];
m4_492 -> m4_496  [key=1, style=dashed, color=darkseagreen4, label=node];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_288  [key=2, style=dotted];
m4_282 -> m4_51  [key=2, style=dotted];
m4_282 -> m4_278  [key=3, color=darkorchid, style=bold, label="Parameter variable XDocument doc"];
m4_282 -> m4_285  [key=0, style=solid];
m4_282 -> m4_286  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_282 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=XDocument];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_27  [key=2, style=dotted];
m4_285 -> m4_290  [key=2, style=dotted];
m4_285 -> m4_288  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_27  [key=2, style=dotted];
m4_286 -> m4_283  [key=2, style=dotted];
m4_286 -> m4_291  [key=2, style=dotted];
m4_286 -> m4_292  [key=2, style=dotted];
m4_287 -> m4_281  [key=0, style=bold, color=blue];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_293  [key=2, style=dotted];
m4_2007 -> m4_2008  [key=0, style=solid];
m4_2008 -> m4_2009  [key=0, style=solid];
m4_2008 -> m4_200  [key=2, style=dotted];
m4_2008 -> m4_2010  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2008 -> m4_2011  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2008 -> m4_2012  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2009 -> m4_2010  [key=0, style=solid];
m4_2009 -> m4_27  [key=2, style=dotted];
m4_2010 -> m4_2011  [key=0, style=solid];
m4_2010 -> m4_27  [key=2, style=dotted];
m4_2011 -> m4_2012  [key=0, style=solid];
m4_2011 -> m4_27  [key=2, style=dotted];
m4_2012 -> m4_2013  [key=0, style=solid];
m4_2012 -> m4_27  [key=2, style=dotted];
m4_2013 -> m4_2007  [key=0, style=bold, color=blue];
m4_2864 -> m4_2865  [key=0, style=solid];
m4_2865 -> m4_2866  [key=0, style=solid];
m4_2865 -> m4_261  [key=2, style=dotted];
m4_2865 -> m4_2867  [key=2, style=dotted];
m4_2866 -> m4_2864  [key=0, style=bold, color=blue];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_24  [key=2, style=dotted];
m4_132 -> m4_134  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2156 -> m4_2157  [key=0, style=solid];
m4_2157 -> m4_2158  [key=0, style=solid];
m4_2158 -> m4_2156  [key=0, style=bold, color=blue];
m4_3229 -> m4_3230  [key=0, style=solid];
m4_3230 -> m4_3231  [key=0, style=solid];
m4_3230 -> m4_3237  [key=2, style=dotted];
m4_3230 -> m4_3232  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3230 -> m4_3233  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3230 -> m4_3234  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_3231 -> m4_3232  [key=0, style=solid];
m4_3232 -> m4_3233  [key=0, style=solid];
m4_3233 -> m4_3234  [key=0, style=solid];
m4_3234 -> m4_3235  [key=0, style=solid];
m4_3234 -> m4_51  [key=2, style=dotted];
m4_3235 -> m4_3236  [key=0, style=solid];
m4_3235 -> m4_27  [key=2, style=dotted];
m4_3236 -> m4_3229  [key=0, style=bold, color=blue];
m4_2483 -> m4_2484  [key=0, style=solid];
m4_2484 -> m4_2485  [key=0, style=solid];
m4_2484 -> m4_2482  [key=2, style=dotted];
m4_2484 -> m4_547  [key=2, style=dotted];
m4_2484 -> m4_2494  [key=2, style=dotted];
m4_2484 -> m4_403  [key=2, style=dotted];
m4_2484 -> m4_1015  [key=2, style=dotted];
m4_2484 -> m4_2488  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2484 -> m4_2489  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2484 -> m4_2490  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2484 -> m4_2491  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2484 -> m4_2492  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2485 -> m4_2486  [key=0, style=solid];
m4_2485 -> m4_24  [key=2, style=dotted];
m4_2485 -> m4_2487  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2488 -> m4_2489  [key=0, style=solid];
m4_2488 -> m4_27  [key=2, style=dotted];
m4_2489 -> m4_2490  [key=0, style=solid];
m4_2489 -> m4_27  [key=2, style=dotted];
m4_2490 -> m4_2491  [key=0, style=solid];
m4_2490 -> m4_27  [key=2, style=dotted];
m4_2491 -> m4_2492  [key=0, style=solid];
m4_2491 -> m4_27  [key=2, style=dotted];
m4_2492 -> m4_2493  [key=0, style=solid];
m4_2492 -> m4_27  [key=2, style=dotted];
m4_2486 -> m4_2487  [key=0, style=solid];
m4_2486 -> m4_27  [key=2, style=dotted];
m4_2487 -> m4_2488  [key=0, style=solid];
m4_2487 -> m4_25  [key=2, style=dotted];
m4_2487 -> m4_2489  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2487 -> m4_2490  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2487 -> m4_2491  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2487 -> m4_2492  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2493 -> m4_2483  [key=0, style=bold, color=blue];
m4_1665 -> m4_1666  [key=0, style=solid];
m4_1666 -> m4_1665  [key=0, style=bold, color=blue];
m4_1891 -> m4_1892  [key=0, style=solid];
m4_1891 -> m4_1893  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1892 -> m4_1893  [key=0, style=solid];
m4_1893 -> m4_1894  [key=0, style=solid];
m4_1894 -> m4_1891  [key=0, style=bold, color=blue];
m4_3614 -> m4_3615  [key=0, style=solid];
m4_3615 -> m4_3616  [key=0, style=solid];
m4_3615 -> m4_339  [key=2, style=dotted];
m4_3616 -> m4_3614  [key=0, style=bold, color=blue];
m4_699 -> m4_690  [key=0, style=bold, color=blue];
m4_699 -> m4_700  [key=0, style=solid];
m4_3120 -> m4_3121  [key=0, style=solid];
m4_3121 -> m4_3122  [key=0, style=solid];
m4_3121 -> m4_3121  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3122 -> m4_3123  [key=0, style=solid];
m4_3122 -> m4_25  [key=2, style=dotted];
m4_3122 -> m4_3124  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_3122 -> m4_3125  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_3122 -> m4_3126  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_3123 -> m4_3124  [key=0, style=solid];
m4_3123 -> m4_305  [key=2, style=dotted];
m4_3123 -> m4_27  [key=2, style=dotted];
m4_3124 -> m4_3125  [key=0, style=solid];
m4_3124 -> m4_988  [key=2, style=dotted];
m4_3124 -> m4_27  [key=2, style=dotted];
m4_3125 -> m4_3126  [key=0, style=solid];
m4_3125 -> m4_988  [key=2, style=dotted];
m4_3125 -> m4_27  [key=2, style=dotted];
m4_3126 -> m4_3127  [key=0, style=solid];
m4_3126 -> m4_988  [key=2, style=dotted];
m4_3126 -> m4_27  [key=2, style=dotted];
m4_3127 -> m4_3120  [key=0, style=bold, color=blue];
m4_2388 -> m4_2389  [key=0, style=solid];
m4_2389 -> m4_2390  [key=0, style=solid];
m4_2389 -> m4_1730  [key=2, style=dotted];
m4_2390 -> m4_2388  [key=0, style=bold, color=blue];
m4_2356 -> m4_2357  [key=0, style=solid];
m4_2357 -> m4_2358  [key=0, style=solid];
m4_2357 -> m4_2352  [key=2, style=dotted];
m4_2357 -> m4_2359  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2357 -> m4_2360  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2357 -> m4_2363  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2357 -> m4_2364  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2358 -> m4_2359  [key=0, style=solid];
m4_2358 -> m4_106  [key=2, style=dotted];
m4_2359 -> m4_2360  [key=0, style=solid];
m4_2359 -> m4_106  [key=2, style=dotted];
m4_2360 -> m4_2361  [key=0, style=solid];
m4_2360 -> m4_24  [key=2, style=dotted];
m4_2360 -> m4_2362  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2363 -> m4_2364  [key=0, style=solid];
m4_2363 -> m4_27  [key=2, style=dotted];
m4_2364 -> m4_2365  [key=0, style=solid];
m4_2364 -> m4_27  [key=2, style=dotted];
m4_2361 -> m4_2362  [key=0, style=solid];
m4_2361 -> m4_27  [key=2, style=dotted];
m4_2362 -> m4_2363  [key=0, style=solid];
m4_2362 -> m4_25  [key=2, style=dotted];
m4_2362 -> m4_2364  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2362 -> m4_2365  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2362 -> m4_2366  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2365 -> m4_2366  [key=0, style=solid];
m4_2365 -> m4_27  [key=2, style=dotted];
m4_2366 -> m4_2367  [key=0, style=solid];
m4_2366 -> m4_27  [key=2, style=dotted];
m4_2367 -> m4_2356  [key=0, style=bold, color=blue];
m4_967 -> m4_968  [key=0, style=solid];
m4_968 -> m4_969  [key=0, style=solid];
m4_968 -> m4_968  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_969 -> m4_970  [key=0, style=solid];
m4_969 -> m4_394  [key=2, style=dotted];
m4_969 -> m4_652  [key=2, style=dotted];
m4_969 -> m4_971  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_969 -> m4_972  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_970 -> m4_971  [key=0, style=solid];
m4_970 -> m4_27  [key=2, style=dotted];
m4_971 -> m4_972  [key=0, style=solid];
m4_971 -> m4_27  [key=2, style=dotted];
m4_972 -> m4_973  [key=0, style=solid];
m4_972 -> m4_27  [key=2, style=dotted];
m4_973 -> m4_967  [key=0, style=bold, color=blue];
m4_1107 -> m4_1108  [key=0, style=solid];
m4_1108 -> m4_1109  [key=0, style=solid];
m4_1108 -> m4_1108  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1109 -> m4_1110  [key=0, style=solid];
m4_1109 -> m4_25  [key=2, style=dotted];
m4_1110 -> m4_1111  [key=0, style=solid];
m4_1110 -> m4_1115  [key=2, style=dotted];
m4_1110 -> m4_1112  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1110 -> m4_1113  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1111 -> m4_1112  [key=0, style=solid];
m4_1111 -> m4_27  [key=2, style=dotted];
m4_1112 -> m4_1113  [key=0, style=solid];
m4_1112 -> m4_27  [key=2, style=dotted];
m4_1113 -> m4_1114  [key=0, style=solid];
m4_1113 -> m4_27  [key=2, style=dotted];
m4_1114 -> m4_1107  [key=0, style=bold, color=blue];
m4_1395 -> m4_1396  [key=0, style=solid];
m4_1396 -> m4_1397  [key=0, style=solid];
m4_1396 -> m4_1396  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1397 -> m4_1398  [key=0, style=solid];
m4_1397 -> m4_25  [key=2, style=dotted];
m4_1398 -> m4_1399  [key=0, style=solid];
m4_1398 -> m4_27  [key=2, style=dotted];
m4_1399 -> m4_1395  [key=0, style=bold, color=blue];
m4_1198 -> m4_1199  [key=0, style=solid];
m4_1199 -> m4_1200  [key=0, style=solid];
m4_1199 -> m4_1203  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1199 -> m4_2223  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1200 -> m4_1201  [key=0, style=solid];
m4_1200 -> m4_321  [key=2, style=dotted];
m4_1200 -> m4_1202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1201 -> m4_1198  [key=0, style=bold, color=blue];
m4_3347 -> m4_3348  [key=0, style=solid];
m4_3348 -> m4_3349  [key=0, style=solid];
m4_3348 -> m4_3352  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3348 -> m4_3348  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3349 -> m4_3350  [key=0, style=solid];
m4_3349 -> m4_321  [key=2, style=dotted];
m4_3349 -> m4_3351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3350 -> m4_3347  [key=0, style=bold, color=blue];
m4_1400 -> m4_1401  [key=0, style=solid];
m4_1401 -> m4_1402  [key=0, style=solid];
m4_1401 -> m4_1413  [key=2, style=dotted];
m4_1401 -> m4_1406  [key=1, style=dashed, color=darkseagreen4, label=ex];
m4_1402 -> m4_1403  [key=0, style=solid];
m4_1402 -> m4_1414  [key=2, style=dotted];
m4_1402 -> m4_1404  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1402 -> m4_1405  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1402 -> m4_1406  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1402 -> m4_1409  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1406 -> m4_1407  [key=0, style=solid];
m4_1403 -> m4_1404  [key=0, style=solid];
m4_1403 -> m4_1415  [key=2, style=dotted];
m4_1404 -> m4_1405  [key=0, style=solid];
m4_1404 -> m4_547  [key=2, style=dotted];
m4_1405 -> m4_1406  [key=0, style=solid];
m4_1405 -> m4_1416  [key=2, style=dotted];
m4_1409 -> m4_1410  [key=0, style=solid];
m4_1409 -> m4_177  [key=2, style=dotted];
m4_1407 -> m4_1408  [key=0, style=solid];
m4_1407 -> m4_174  [key=2, style=dotted];
m4_1407 -> m4_1409  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_1407 -> m4_1410  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_1408 -> m4_1409  [key=0, style=solid];
m4_1408 -> m4_175  [key=2, style=dotted];
m4_1410 -> m4_1411  [key=0, style=solid];
m4_1410 -> m4_178  [key=2, style=dotted];
m4_1411 -> m4_1412  [key=0, style=solid];
m4_1411 -> m4_179  [key=2, style=dotted];
m4_1412 -> m4_1400  [key=0, style=bold, color=blue];
m4_3110 -> m4_3111  [key=0, style=solid];
m4_3111 -> m4_3112  [key=0, style=solid];
m4_3111 -> m4_1814  [key=2, style=dotted];
m4_3112 -> m4_3110  [key=0, style=bold, color=blue];
m4_1279 -> m4_1280  [key=0, style=solid];
m4_1280 -> m4_1281  [key=0, style=solid];
m4_1280 -> m4_50  [key=2, style=dotted];
m4_1280 -> m4_1282  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1280 -> m4_1283  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1281 -> m4_1282  [key=0, style=solid];
m4_1281 -> m4_547  [key=2, style=dotted];
m4_1281 -> m4_418  [key=2, style=dotted];
m4_1282 -> m4_1283  [key=0, style=solid];
m4_1282 -> m4_547  [key=2, style=dotted];
m4_1282 -> m4_418  [key=2, style=dotted];
m4_1283 -> m4_1284  [key=0, style=solid];
m4_1283 -> m4_24  [key=2, style=dotted];
m4_1284 -> m4_1285  [key=0, style=solid];
m4_1284 -> m4_27  [key=2, style=dotted];
m4_1285 -> m4_1279  [key=0, style=bold, color=blue];
m4_3218 -> m4_3219  [key=0, style=solid];
m4_3219 -> m4_3220  [key=0, style=solid];
m4_3219 -> m4_3219  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3220 -> m4_3221  [key=0, style=solid];
m4_3220 -> m4_25  [key=2, style=dotted];
m4_3220 -> m4_3222  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3220 -> m4_3223  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3220 -> m4_3224  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3220 -> m4_3225  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3220 -> m4_3226  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3220 -> m4_3227  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3221 -> m4_3222  [key=0, style=solid];
m4_3221 -> m4_27  [key=2, style=dotted];
m4_3222 -> m4_3223  [key=0, style=solid];
m4_3222 -> m4_27  [key=2, style=dotted];
m4_3223 -> m4_3224  [key=0, style=solid];
m4_3223 -> m4_27  [key=2, style=dotted];
m4_3224 -> m4_3225  [key=0, style=solid];
m4_3224 -> m4_27  [key=2, style=dotted];
m4_3225 -> m4_3226  [key=0, style=solid];
m4_3225 -> m4_27  [key=2, style=dotted];
m4_3226 -> m4_3227  [key=0, style=solid];
m4_3226 -> m4_27  [key=2, style=dotted];
m4_3227 -> m4_3228  [key=0, style=solid];
m4_3227 -> m4_27  [key=2, style=dotted];
m4_3228 -> m4_3218  [key=0, style=bold, color=blue];
m4_2115 -> m4_2116  [key=0, style=solid];
m4_2116 -> m4_2117  [key=0, style=solid];
m4_2116 -> m4_25  [key=2, style=dotted];
m4_2117 -> m4_2118  [key=0, style=solid];
m4_2117 -> m4_27  [key=2, style=dotted];
m4_2118 -> m4_2115  [key=0, style=bold, color=blue];
m4_3507 -> m4_3508  [key=0, style=solid];
m4_3508 -> m4_3509  [key=0, style=solid];
m4_3508 -> m4_461  [key=2, style=dotted];
m4_3508 -> m4_462  [key=2, style=dotted];
m4_3508 -> m4_3511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3509 -> m4_3510  [key=0, style=solid];
m4_3509 -> m4_394  [key=2, style=dotted];
m4_3511 -> m4_3512  [key=0, style=solid];
m4_3511 -> m4_2722  [key=2, style=dotted];
m4_3510 -> m4_3511  [key=0, style=solid];
m4_3510 -> m4_2721  [key=2, style=dotted];
m4_3512 -> m4_3513  [key=0, style=solid];
m4_3512 -> m4_27  [key=2, style=dotted];
m4_3513 -> m4_3507  [key=0, style=bold, color=blue];
m4_3587 -> m4_3588  [key=0, style=solid];
m4_3588 -> m4_3589  [key=0, style=solid];
m4_3589 -> m4_3587  [key=0, style=bold, color=blue];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_292  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m4_3564 -> m4_3565  [key=0, style=solid];
m4_3565 -> m4_3566  [key=0, style=solid];
m4_3566 -> m4_3564  [key=0, style=bold, color=blue];
m4_2014 -> m4_2015  [key=0, style=solid];
m4_2015 -> m4_2016  [key=0, style=solid];
m4_2015 -> m4_2023  [key=2, style=dotted];
m4_2015 -> m4_24  [key=2, style=dotted];
m4_2015 -> m4_2017  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_2016 -> m4_2017  [key=0, style=solid];
m4_2016 -> m4_27  [key=2, style=dotted];
m4_2017 -> m4_2018  [key=0, style=solid];
m4_2017 -> m4_25  [key=2, style=dotted];
m4_2017 -> m4_2019  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2017 -> m4_2020  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2017 -> m4_2021  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2018 -> m4_2019  [key=0, style=solid];
m4_2018 -> m4_27  [key=2, style=dotted];
m4_2019 -> m4_2020  [key=0, style=solid];
m4_2019 -> m4_2024  [key=2, style=dotted];
m4_2019 -> m4_44  [key=2, style=dotted];
m4_2020 -> m4_2021  [key=0, style=solid];
m4_2020 -> m4_2024  [key=2, style=dotted];
m4_2020 -> m4_44  [key=2, style=dotted];
m4_2021 -> m4_2022  [key=0, style=solid];
m4_2021 -> m4_2024  [key=2, style=dotted];
m4_2021 -> m4_44  [key=2, style=dotted];
m4_2022 -> m4_2014  [key=0, style=bold, color=blue];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_174  [key=2, style=dotted];
m4_304 -> m4_306  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_304 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_1008 -> m4_1009  [key=0, style=solid];
m4_1009 -> m4_1010  [key=0, style=solid];
m4_1009 -> m4_1015  [key=2, style=dotted];
m4_1009 -> m4_1011  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_1009 -> m4_1013  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_1010 -> m4_1011  [key=0, style=solid];
m4_1010 -> m4_51  [key=2, style=dotted];
m4_1010 -> m4_1012  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1011 -> m4_1012  [key=0, style=solid];
m4_1011 -> m4_1016  [key=2, style=dotted];
m4_1011 -> m4_27  [key=2, style=dotted];
m4_1013 -> m4_1014  [key=0, style=solid];
m4_1013 -> m4_27  [key=2, style=dotted];
m4_1012 -> m4_1013  [key=0, style=solid];
m4_1012 -> m4_25  [key=2, style=dotted];
m4_1014 -> m4_1008  [key=0, style=bold, color=blue];
m4_1848 -> m4_1849  [key=0, style=solid];
m4_1849 -> m4_1850  [key=0, style=solid];
m4_1849 -> m4_50  [key=2, style=dotted];
m4_1849 -> m4_1851  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_1849 -> m4_1855  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_1850 -> m4_1851  [key=0, style=solid];
m4_1850 -> m4_418  [key=2, style=dotted];
m4_1851 -> m4_1852  [key=0, style=solid];
m4_1851 -> m4_418  [key=2, style=dotted];
m4_1855 -> m4_1856  [key=0, style=solid];
m4_1855 -> m4_418  [key=2, style=dotted];
m4_1852 -> m4_1853  [key=0, style=solid];
m4_1852 -> m4_50  [key=2, style=dotted];
m4_1852 -> m4_1854  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1852 -> m4_1855  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1852 -> m4_1856  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_1853 -> m4_1854  [key=0, style=solid];
m4_1853 -> m4_418  [key=2, style=dotted];
m4_1854 -> m4_1855  [key=0, style=solid];
m4_1854 -> m4_418  [key=2, style=dotted];
m4_1856 -> m4_1857  [key=0, style=solid];
m4_1856 -> m4_24  [key=2, style=dotted];
m4_1856 -> m4_1860  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1857 -> m4_1858  [key=0, style=solid];
m4_1857 -> m4_321  [key=2, style=dotted];
m4_1857 -> m4_1859  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1858 -> m4_1848  [key=0, style=bold, color=blue];
m4_2946 -> m4_2947  [key=0, style=solid];
m4_2947 -> m4_2948  [key=0, style=solid];
m4_2947 -> m4_2945  [key=2, style=dotted];
m4_2948 -> m4_2949  [key=0, style=solid];
m4_2948 -> m4_51  [key=2, style=dotted];
m4_2949 -> m4_2950  [key=0, style=solid];
m4_2949 -> m4_27  [key=2, style=dotted];
m4_2950 -> m4_2946  [key=0, style=bold, color=blue];
m4_2647 -> m4_2648  [key=0, style=solid];
m4_2648 -> m4_2649  [key=0, style=solid];
m4_2648 -> m4_2652  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2648 -> m4_2648  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2649 -> m4_2650  [key=0, style=solid];
m4_2649 -> m4_321  [key=2, style=dotted];
m4_2649 -> m4_2651  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2650 -> m4_2647  [key=0, style=bold, color=blue];
m4_3649 -> m4_3650  [key=0, style=solid];
m4_3649 -> m4_3652  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_3649 -> m4_2788  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m4_3650 -> m4_3651  [key=0, style=solid];
m4_3650 -> m4_3652  [key=0, style=solid];
m4_3652 -> m4_3653  [key=0, style=solid];
m4_3652 -> m4_2741  [key=2, style=dotted];
m4_3652 -> m4_261  [key=2, style=dotted];
m4_3652 -> m4_3654  [key=2, style=dotted];
m4_3651 -> m4_3653  [key=0, style=solid];
m4_3653 -> m4_3649  [key=0, style=bold, color=blue];
m4_3483 -> m4_3484  [key=0, style=solid];
m4_3484 -> m4_3485  [key=0, style=solid];
m4_3484 -> m4_3491  [key=2, style=dotted];
m4_3484 -> m4_3487  [key=1, style=dashed, color=darkseagreen4, label=s1];
m4_3484 -> m4_3488  [key=1, style=dashed, color=darkseagreen4, label=s1];
m4_3485 -> m4_3486  [key=0, style=solid];
m4_3485 -> m4_51  [key=2, style=dotted];
m4_3487 -> m4_3488  [key=0, style=solid];
m4_3487 -> m4_27  [key=2, style=dotted];
m4_3488 -> m4_3489  [key=0, style=solid];
m4_3488 -> m4_3490  [key=0, style=solid];
m4_3486 -> m4_3487  [key=0, style=solid];
m4_3486 -> m4_25  [key=2, style=dotted];
m4_3486 -> m4_3489  [key=1, style=dashed, color=darkseagreen4, label=s2];
m4_3489 -> m4_3488  [key=0, style=solid];
m4_3489 -> m4_1439  [key=2, style=dotted];
m4_3489 -> m4_44  [key=2, style=dotted];
m4_3490 -> m4_3483  [key=0, style=bold, color=blue];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_282  [key=0, style=bold, color=blue];
m4_294 -> m4_289  [key=0, style=bold, color=blue];
m4_1731 -> m4_1732  [key=0, style=solid];
m4_1732 -> m4_1733  [key=0, style=solid];
m4_1732 -> m4_1734  [key=2, style=dotted];
m4_1733 -> m4_1731  [key=0, style=bold, color=blue];
m4_1077 -> m4_1078  [key=0, style=solid];
m4_1078 -> m4_1079  [key=0, style=solid];
m4_1078 -> m4_216  [key=2, style=dotted];
m4_1078 -> m4_390  [key=2, style=dotted];
m4_1078 -> m4_1081  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_1079 -> m4_1080  [key=0, style=solid];
m4_1079 -> m4_216  [key=2, style=dotted];
m4_1079 -> m4_390  [key=2, style=dotted];
m4_1079 -> m4_1082  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_1081 -> m4_1082  [key=0, style=solid];
m4_1081 -> m4_339  [key=2, style=dotted];
m4_1080 -> m4_1081  [key=0, style=solid];
m4_1080 -> m4_3  [key=2, style=dotted];
m4_1080 -> m4_1082  [key=1, style=dashed, color=darkseagreen4, label=products];
m4_1080 -> m4_1083  [key=1, style=dashed, color=darkseagreen4, label=products];
m4_1082 -> m4_1083  [key=0, style=solid];
m4_1082 -> m4_339  [key=2, style=dotted];
m4_1083 -> m4_1084  [key=0, style=solid];
m4_1083 -> m4_24  [key=2, style=dotted];
m4_1084 -> m4_1085  [key=0, style=solid];
m4_1084 -> m4_27  [key=2, style=dotted];
m4_1085 -> m4_1077  [key=0, style=bold, color=blue];
m4_3644 -> m4_3645  [key=0, style=solid];
m4_3644 -> m4_3646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_3645 -> m4_3646  [key=0, style=solid];
m4_3646 -> m4_3647  [key=0, style=solid];
m4_3646 -> m4_3648  [key=2, style=dotted];
m4_3646 -> m4_3089  [key=2, style=dotted];
m4_3646 -> m4_3646  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_3647 -> m4_3644  [key=0, style=bold, color=blue];
m4_1364 -> m4_1365  [key=0, style=solid];
m4_1365 -> m4_1366  [key=0, style=solid];
m4_1365 -> m4_25  [key=2, style=dotted];
m4_1366 -> m4_1367  [key=0, style=solid];
m4_1366 -> m4_726  [key=2, style=dotted];
m4_1366 -> m4_27  [key=2, style=dotted];
m4_1367 -> m4_1368  [key=0, style=solid];
m4_1367 -> m4_25  [key=2, style=dotted];
m4_1368 -> m4_1369  [key=0, style=solid];
m4_1368 -> m4_726  [key=2, style=dotted];
m4_1368 -> m4_27  [key=2, style=dotted];
m4_1369 -> m4_1364  [key=0, style=bold, color=blue];
m4_2532 -> m4_3660  [key=0, style=solid];
m4_3660 -> m4_3661  [key=0, style=solid];
m4_3660 -> m4_3662  [key=2, style=dotted];
m4_3661 -> m4_2532  [key=0, style=bold, color=blue];
m4_3466 -> m4_3467  [key=0, style=solid];
m4_3467 -> m4_3468  [key=0, style=solid];
m4_3467 -> m4_50  [key=2, style=dotted];
m4_3467 -> m4_390  [key=2, style=dotted];
m4_3467 -> m4_402  [key=2, style=dotted];
m4_3467 -> m4_403  [key=2, style=dotted];
m4_3467 -> m4_3470  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_3468 -> m4_3469  [key=0, style=solid];
m4_3468 -> m4_24  [key=2, style=dotted];
m4_3468 -> m4_3471  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_3468 -> m4_3472  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_3470 -> m4_3471  [key=0, style=solid];
m4_3470 -> m4_394  [key=2, style=dotted];
m4_3470 -> m4_906  [key=2, style=dotted];
m4_3470 -> m4_3472  [key=1, style=dashed, color=darkseagreen4, label=actual];
m4_3469 -> m4_3470  [key=0, style=solid];
m4_3469 -> m4_137  [key=2, style=dotted];
m4_3471 -> m4_3472  [key=0, style=solid];
m4_3471 -> m4_137  [key=2, style=dotted];
m4_3472 -> m4_3473  [key=0, style=solid];
m4_3472 -> m4_27  [key=2, style=dotted];
m4_3473 -> m4_3466  [key=0, style=bold, color=blue];
m4_2960 -> m4_2961  [key=0, style=solid];
m4_2961 -> m4_2962  [key=0, style=solid];
m4_2961 -> m4_50  [key=2, style=dotted];
m4_2961 -> m4_402  [key=2, style=dotted];
m4_2962 -> m4_2963  [key=0, style=solid];
m4_2962 -> m4_394  [key=2, style=dotted];
m4_2962 -> m4_906  [key=2, style=dotted];
m4_2962 -> m4_2964  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2963 -> m4_2964  [key=0, style=solid];
m4_2963 -> m4_27  [key=2, style=dotted];
m4_2964 -> m4_2965  [key=0, style=solid];
m4_2964 -> m4_25  [key=2, style=dotted];
m4_2964 -> m4_2966  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2964 -> m4_2967  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_2965 -> m4_2966  [key=0, style=solid];
m4_2965 -> m4_27  [key=2, style=dotted];
m4_2966 -> m4_2967  [key=0, style=solid];
m4_2966 -> m4_402  [key=2, style=dotted];
m4_2966 -> m4_27  [key=2, style=dotted];
m4_2967 -> m4_2968  [key=0, style=solid];
m4_2967 -> m4_402  [key=2, style=dotted];
m4_2967 -> m4_27  [key=2, style=dotted];
m4_2968 -> m4_2960  [key=0, style=bold, color=blue];
m4_2306 -> m4_2307  [key=0, style=solid];
m4_2307 -> m4_2308  [key=0, style=solid];
m4_2307 -> m4_2309  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2307 -> m4_2307  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2308 -> m4_2309  [key=0, style=solid];
m4_2308 -> m4_25  [key=2, style=dotted];
m4_2308 -> m4_2310  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m4_2309 -> m4_2310  [key=0, style=solid];
m4_2309 -> m4_25  [key=2, style=dotted];
m4_2310 -> m4_2311  [key=0, style=solid];
m4_2310 -> m4_27  [key=2, style=dotted];
m4_2311 -> m4_2306  [key=0, style=bold, color=blue];
m4_3558 -> m4_3559  [key=0, style=solid];
m4_3559 -> m4_3560  [key=0, style=solid];
m4_3559 -> m4_25  [key=2, style=dotted];
m4_3559 -> m4_3561  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_3559 -> m4_3562  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_3560 -> m4_3561  [key=0, style=solid];
m4_3560 -> m4_27  [key=2, style=dotted];
m4_3561 -> m4_3562  [key=0, style=solid];
m4_3561 -> m4_27  [key=2, style=dotted];
m4_3562 -> m4_3563  [key=0, style=solid];
m4_3562 -> m4_27  [key=2, style=dotted];
m4_3563 -> m4_3558  [key=0, style=bold, color=blue];
m4_3052 -> m4_3053  [key=0, style=solid];
m4_3053 -> m4_3054  [key=0, style=solid];
m4_3053 -> m4_3053  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_3054 -> m4_3055  [key=0, style=solid];
m4_3054 -> m4_25  [key=2, style=dotted];
m4_3054 -> m4_3056  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_3054 -> m4_3057  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_3055 -> m4_3056  [key=0, style=solid];
m4_3055 -> m4_864  [key=2, style=dotted];
m4_3056 -> m4_3057  [key=0, style=solid];
m4_3056 -> m4_1066  [key=2, style=dotted];
m4_3057 -> m4_3058  [key=0, style=solid];
m4_3057 -> m4_27  [key=2, style=dotted];
m4_3058 -> m4_3052  [key=0, style=bold, color=blue];
m4_1819 -> m4_1820  [key=0, style=solid];
m4_1820 -> m4_1821  [key=0, style=solid];
m4_1820 -> m4_1827  [key=2, style=dotted];
m4_1820 -> m4_1822  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1820 -> m4_1823  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1820 -> m4_1824  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1820 -> m4_1825  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1821 -> m4_1822  [key=0, style=solid];
m4_1821 -> m4_3  [key=2, style=dotted];
m4_1822 -> m4_1823  [key=0, style=solid];
m4_1822 -> m4_394  [key=2, style=dotted];
m4_1822 -> m4_3  [key=2, style=dotted];
m4_1822 -> m4_1828  [key=2, style=dotted];
m4_1822 -> m4_1829  [key=2, style=dotted];
m4_1823 -> m4_1824  [key=0, style=solid];
m4_1823 -> m4_27  [key=2, style=dotted];
m4_1824 -> m4_1825  [key=0, style=solid];
m4_1824 -> m4_27  [key=2, style=dotted];
m4_1825 -> m4_1826  [key=0, style=solid];
m4_1825 -> m4_27  [key=2, style=dotted];
m4_1826 -> m4_1819  [key=0, style=bold, color=blue];
m4_1352 -> m4_1353  [key=0, style=solid];
m4_1353 -> m4_1354  [key=0, style=solid];
m4_1353 -> m4_1362  [key=2, style=dotted];
m4_1353 -> m4_1355  [key=1, style=dashed, color=darkseagreen4, label=g];
m4_1353 -> m4_1356  [key=1, style=dashed, color=darkseagreen4, label=g];
m4_1353 -> m4_1357  [key=1, style=dashed, color=darkseagreen4, label=g];
m4_1354 -> m4_1355  [key=0, style=solid];
m4_1354 -> m4_1363  [key=2, style=dotted];
m4_1354 -> m4_1343  [key=2, style=dotted];
m4_1355 -> m4_1356  [key=0, style=solid];
m4_1355 -> m4_1363  [key=2, style=dotted];
m4_1355 -> m4_1343  [key=2, style=dotted];
m4_1356 -> m4_1357  [key=0, style=solid];
m4_1357 -> m4_1358  [key=0, style=solid];
m4_1357 -> m4_1349  [key=2, style=dotted];
m4_1357 -> m4_1359  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1358 -> m4_1359  [key=0, style=solid];
m4_1358 -> m4_27  [key=2, style=dotted];
m4_1359 -> m4_1360  [key=0, style=solid];
m4_1359 -> m4_25  [key=2, style=dotted];
m4_1360 -> m4_1361  [key=0, style=solid];
m4_1360 -> m4_27  [key=2, style=dotted];
m4_1361 -> m4_1352  [key=0, style=bold, color=blue];
m4_3525 -> m4_3526  [key=0, style=solid];
m4_3526 -> m4_3527  [key=0, style=solid];
m4_3526 -> m4_1691  [key=2, style=dotted];
m4_3527 -> m4_3528  [key=0, style=solid];
m4_3527 -> m4_24  [key=2, style=dotted];
m4_3528 -> m4_3529  [key=0, style=solid];
m4_3528 -> m4_27  [key=2, style=dotted];
m4_3529 -> m4_3525  [key=0, style=bold, color=blue];
m4_3686 -> m4_3687  [key=0, style=solid];
m4_3687 -> m4_3688  [key=0, style=solid];
m4_3687 -> m4_3689  [key=2, style=dotted];
m4_3687 -> m4_3690  [key=2, style=dotted];
m4_3688 -> m4_3686  [key=0, style=bold, color=blue];
m4_1210 -> m4_1211  [key=0, style=solid];
m4_1211 -> m4_1212  [key=0, style=solid];
m4_1211 -> m4_321  [key=2, style=dotted];
m4_1211 -> m4_1213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1212 -> m4_1210  [key=0, style=bold, color=blue];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_24  [key=2, style=dotted];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_317  [key=2, style=dotted];
m4_308 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_308 -> m4_311  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_308 -> m4_314  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_308 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_308 -> m4_23  [key=2, style=dotted];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_300  [key=0, style=bold, color=blue];
m4_2783 -> m4_2784  [key=0, style=solid];
m4_2784 -> m4_2785  [key=0, style=solid];
m4_2784 -> m4_25  [key=2, style=dotted];
m4_2785 -> m4_2786  [key=0, style=solid];
m4_2785 -> m4_1693  [key=2, style=dotted];
m4_2786 -> m4_2783  [key=0, style=bold, color=blue];
m4_2339 -> m4_2340  [key=0, style=solid];
m4_2340 -> m4_2341  [key=0, style=solid];
m4_2340 -> m4_2345  [key=2, style=dotted];
m4_2341 -> m4_2342  [key=0, style=solid];
m4_2341 -> m4_51  [key=2, style=dotted];
m4_2341 -> m4_2343  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_2342 -> m4_2343  [key=0, style=solid];
m4_2342 -> m4_137  [key=2, style=dotted];
m4_2343 -> m4_2344  [key=0, style=solid];
m4_2343 -> m4_27  [key=2, style=dotted];
m4_2344 -> m4_2339  [key=0, style=bold, color=blue];
m4_3571 -> m4_3572  [key=0, style=solid];
m4_3572 -> m4_3573  [key=0, style=solid];
m4_3572 -> m4_3574  [key=2, style=dotted];
m4_3573 -> m4_3571  [key=0, style=bold, color=blue];
m4_2661 -> m4_2662  [key=0, style=solid];
m4_2662 -> m4_2663  [key=0, style=solid];
m4_2662 -> m4_2666  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2662 -> m4_2662  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_2663 -> m4_2664  [key=0, style=solid];
m4_2663 -> m4_321  [key=2, style=dotted];
m4_2663 -> m4_2665  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2664 -> m4_2661  [key=0, style=bold, color=blue];
m4_2432 -> m4_2433  [key=0, style=solid];
m4_2433 -> m4_2434  [key=0, style=solid];
m4_2433 -> m4_25  [key=2, style=dotted];
m4_2433 -> m4_2435  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2433 -> m4_2436  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2433 -> m4_2437  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2433 -> m4_2438  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2434 -> m4_2435  [key=0, style=solid];
m4_2434 -> m4_176  [key=2, style=dotted];
m4_2434 -> m4_27  [key=2, style=dotted];
m4_2435 -> m4_2436  [key=0, style=solid];
m4_2435 -> m4_305  [key=2, style=dotted];
m4_2435 -> m4_27  [key=2, style=dotted];
m4_2436 -> m4_2437  [key=0, style=solid];
m4_2436 -> m4_988  [key=2, style=dotted];
m4_2436 -> m4_864  [key=2, style=dotted];
m4_2437 -> m4_2438  [key=0, style=solid];
m4_2437 -> m4_988  [key=2, style=dotted];
m4_2437 -> m4_864  [key=2, style=dotted];
m4_2438 -> m4_2439  [key=0, style=solid];
m4_2438 -> m4_988  [key=2, style=dotted];
m4_2438 -> m4_1693  [key=2, style=dotted];
m4_2439 -> m4_2432  [key=0, style=bold, color=blue];
m4_1053 -> m4_1054  [key=0, style=solid];
m4_1054 -> m4_1055  [key=0, style=solid];
m4_1054 -> m4_1054  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1055 -> m4_1056  [key=0, style=solid];
m4_1055 -> m4_25  [key=2, style=dotted];
m4_1055 -> m4_1057  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1055 -> m4_1058  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1055 -> m4_1059  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1055 -> m4_1060  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1055 -> m4_1061  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1055 -> m4_1062  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1055 -> m4_1063  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1055 -> m4_1064  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1056 -> m4_1057  [key=0, style=solid];
m4_1056 -> m4_27  [key=2, style=dotted];
m4_1057 -> m4_1058  [key=0, style=solid];
m4_1057 -> m4_27  [key=2, style=dotted];
m4_1058 -> m4_1059  [key=0, style=solid];
m4_1058 -> m4_27  [key=2, style=dotted];
m4_1059 -> m4_1060  [key=0, style=solid];
m4_1059 -> m4_27  [key=2, style=dotted];
m4_1060 -> m4_1061  [key=0, style=solid];
m4_1060 -> m4_1066  [key=2, style=dotted];
m4_1061 -> m4_1062  [key=0, style=solid];
m4_1061 -> m4_27  [key=2, style=dotted];
m4_1062 -> m4_1063  [key=0, style=solid];
m4_1062 -> m4_1066  [key=2, style=dotted];
m4_1063 -> m4_1064  [key=0, style=solid];
m4_1063 -> m4_27  [key=2, style=dotted];
m4_1064 -> m4_1065  [key=0, style=solid];
m4_1064 -> m4_27  [key=2, style=dotted];
m4_1065 -> m4_1053  [key=0, style=bold, color=blue];
m4_3703 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>"];
m4_3703 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>"];
m4_3703 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>"];
m4_3703 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericClass<T, TValue>"];
m4_3704 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExtensionDataTestClass"];
m4_3705 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3705 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3705 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3705 -> m4_2993  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3705 -> m4_2999  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3705 -> m4_3000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3706 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3707 -> m4_650  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3708 -> m4_833  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m4_3709 -> m4_951  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3709 -> m4_952  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3709 -> m4_953  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3709 -> m4_954  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3709 -> m4_957  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3710 -> m4_1105  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3711 -> m4_1132  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3712 -> m4_1139  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3713 -> m4_1146  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3714 -> m4_1153  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3715 -> m4_1160  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3716 -> m4_1167  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3717 -> m4_1174  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3718 -> m4_1181  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3719 -> m4_1188  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3720 -> m4_1195  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3721 -> m4_1203  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3722 -> m4_1328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m4_3722 -> m4_1329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m4_3723 -> m4_1344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m4_3723 -> m4_1347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m4_3723 -> m4_1350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m4_3724 -> m4_1383  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3725 -> m4_1387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m4_3726 -> m4_1423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1427  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3726 -> m4_1471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3727 -> m4_1484  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1498  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1505  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1527  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1536  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1537  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1540  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3727 -> m4_1543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3728 -> m4_1600  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m4_3728 -> m4_1601  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m4_3729 -> m4_1656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3729 -> m4_1657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3729 -> m4_1658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3729 -> m4_1659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3729 -> m4_1660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3729 -> m4_1661  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3729 -> m4_1662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3729 -> m4_1663  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3730 -> m4_1667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1669  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1674  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1675  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3730 -> m4_1676  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3731 -> m4_1760  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass"];
m4_3732 -> m4_1860  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3733 -> m4_1892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m4_3733 -> m4_1893  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m4_3734 -> m4_1923  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee"];
m4_3735 -> m4_1988  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey"];
m4_3736 -> m4_2026  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass"];
m4_3737 -> m4_2049  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3738 -> m4_2135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector"];
m4_3739 -> m4_2152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m4_3740 -> m4_2157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base"];
m4_3742 -> m4_2171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m4_3743 -> m4_2207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DecimalTest"];
m4_3744 -> m4_2216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m4_3744 -> m4_2219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m4_3744 -> m4_2220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructor"];
m4_3745 -> m4_2227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m4_3745 -> m4_2230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m4_3745 -> m4_2231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructor"];
m4_3746 -> m4_2239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m4_3746 -> m4_2240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m4_3746 -> m4_2243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m4_3746 -> m4_2244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m4_3746 -> m4_2245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructor"];
m4_3747 -> m4_2300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m4_3747 -> m4_2301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m4_3748 -> m4_2304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor"];
m4_3749 -> m4_2353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m4_3749 -> m4_2354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m4_3750 -> m4_2369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m4_3750 -> m4_2370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m4_3751 -> m4_2415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3751 -> m4_2416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3751 -> m4_2417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3751 -> m4_2420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3751 -> m4_2423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3752 -> m4_2447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m4_3753 -> m4_2566  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3754 -> m4_2652  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3755 -> m4_2666  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3756 -> m4_2904  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3757 -> m4_2919  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3758 -> m4_2934  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3759 -> m4_3050  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3760 -> m4_3050  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_3761 -> m4_3111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>"];
m4_3761 -> m4_3114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>"];
m4_3761 -> m4_3118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClass<T>"];
m4_3762 -> m4_3129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>"];
m4_3762 -> m4_3132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>"];
m4_3762 -> m4_3135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableClassFailure<T>"];
m4_3763 -> m4_3142  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3764 -> m4_3145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m4_3765 -> m4_3148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>"];
m4_3766 -> m4_3187  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3767 -> m4_3198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m4_3768 -> m4_3201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3768 -> m4_3210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateReadOnlyTestClass"];
m4_3769 -> m4_3285  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3770 -> m4_3292  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3771 -> m4_3312  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3772 -> m4_3319  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3773 -> m4_3326  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3774 -> m4_3352  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3775 -> m4_3359  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3776 -> m4_3453  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3777 -> m4_3565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m4_3777 -> m4_3568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m4_3777 -> m4_3572  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m4_3777 -> m4_3576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m4_3777 -> m4_3579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyDictionary<TKey, TValue>"];
m4_3778 -> m4_3588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>"];
m4_3778 -> m4_3591  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>"];
m4_3778 -> m4_3594  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomReadOnlyCollection<T>"];
m4_3779 -> m4_3615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateDefaultCtorWithIEnumerableCtorList<T>"];
m4_3780 -> m4_3631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.AnswerFilterModel"];
m4_3781 -> m4_3657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TestObject"];
m4_3781 -> m4_3658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TestObject"];
m4_3782 -> m4_3660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GameObject"];
m4_3783 -> m4_3701  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass"];
}
